### YamlMime:ManagedReference
items:
- uid: Global.CreatureState
  commentId: T:Global.CreatureState
  id: CreatureState
  parent: Global
  children:
  - Global.CreatureState.#ctor(AbstractCreature)
  - Global.CreatureState.BaseSaveString
  - Global.CreatureState.CycleTick
  - Global.CreatureState.Die
  - Global.CreatureState.LoadFromString(System.String[])
  - Global.CreatureState.ToString
  - Global.CreatureState.alive
  - Global.CreatureState.creature
  - Global.CreatureState.dead
  - Global.CreatureState.meatLeft
  - Global.CreatureState.miscSaveFlags
  - Global.CreatureState.miscSaveString
  - Global.CreatureState.miscWatcherSaveFlags
  - Global.CreatureState.miscWatcherSaveString
  - Global.CreatureState.socialMemory
  - Global.CreatureState.unrecognizedSaveStrings
  langs:
  - csharp
  - vb
  name: CreatureState
  nameWithType: CreatureState
  fullName: CreatureState
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CreatureState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class CreatureState
    content.vb: Public MustInherit Class CreatureState
  inheritance:
  - System.Object
  derivedClasses:
  - Global.FrogState
  - Global.GarbageWormState
  - Global.HealthState
  - Global.LoachState
  - Global.NoHealthState
  - Global.PlayerState
  - Global.VultureGrub.VultureGrubState
  - Watcher.RattlerState
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CreatureState.socialMemory
  commentId: F:Global.CreatureState.socialMemory
  id: socialMemory
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: socialMemory
  nameWithType: CreatureState.socialMemory
  fullName: CreatureState.socialMemory
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.socialMemory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialMemory socialMemory
    return:
      type: Global.SocialMemory
    content.vb: Public socialMemory As SocialMemory
- uid: Global.CreatureState.meatLeft
  commentId: F:Global.CreatureState.meatLeft
  id: meatLeft
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: meatLeft
  nameWithType: CreatureState.meatLeft
  fullName: CreatureState.meatLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.meatLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int meatLeft
    return:
      type: System.Int32
    content.vb: Public meatLeft As Integer
- uid: Global.CreatureState.creature
  commentId: F:Global.CreatureState.creature
  id: creature
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: creature
  nameWithType: CreatureState.creature
  fullName: CreatureState.creature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.creature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected AbstractCreature creature
    return:
      type: Global.AbstractCreature
    content.vb: Protected creature As AbstractCreature
- uid: Global.CreatureState.unrecognizedSaveStrings
  commentId: F:Global.CreatureState.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: CreatureState.unrecognizedSaveStrings
  fullName: CreatureState.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public unrecognizedSaveStrings As Dictionary(Of String, String)
- uid: Global.CreatureState.miscSaveFlags
  commentId: F:Global.CreatureState.miscSaveFlags
  id: miscSaveFlags
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: miscSaveFlags
  nameWithType: CreatureState.miscSaveFlags
  fullName: CreatureState.miscSaveFlags
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.miscSaveFlags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int miscSaveFlags
    return:
      type: System.Int32
    content.vb: Public miscSaveFlags As Integer
- uid: Global.CreatureState.miscSaveString
  commentId: F:Global.CreatureState.miscSaveString
  id: miscSaveString
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: miscSaveString
  nameWithType: CreatureState.miscSaveString
  fullName: CreatureState.miscSaveString
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.miscSaveString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string miscSaveString
    return:
      type: System.String
    content.vb: Public miscSaveString As String
- uid: Global.CreatureState.miscWatcherSaveFlags
  commentId: F:Global.CreatureState.miscWatcherSaveFlags
  id: miscWatcherSaveFlags
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: miscWatcherSaveFlags
  nameWithType: CreatureState.miscWatcherSaveFlags
  fullName: CreatureState.miscWatcherSaveFlags
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.miscWatcherSaveFlags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int miscWatcherSaveFlags
    return:
      type: System.Int32
    content.vb: Public miscWatcherSaveFlags As Integer
- uid: Global.CreatureState.miscWatcherSaveString
  commentId: F:Global.CreatureState.miscWatcherSaveString
  id: miscWatcherSaveString
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: miscWatcherSaveString
  nameWithType: CreatureState.miscWatcherSaveString
  fullName: CreatureState.miscWatcherSaveString
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureState.miscWatcherSaveString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string miscWatcherSaveString
    return:
      type: System.String
    content.vb: Public miscWatcherSaveString As String
- uid: Global.CreatureState.#ctor(AbstractCreature)
  commentId: M:Global.CreatureState.#ctor(AbstractCreature)
  id: '#ctor(AbstractCreature)'
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: CreatureState(AbstractCreature)
  nameWithType: CreatureState.CreatureState(AbstractCreature)
  fullName: CreatureState.CreatureState(AbstractCreature)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureState(AbstractCreature creature)
    parameters:
    - id: creature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:CreatureState.#ctor(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(creature As AbstractCreature)
  overload: Global.CreatureState.#ctor*
  nameWithType.vb: CreatureState.New(AbstractCreature)
  fullName.vb: CreatureState.New(AbstractCreature)
  name.vb: New(AbstractCreature)
- uid: Global.CreatureState.Die
  commentId: M:Global.CreatureState.Die
  id: Die
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: Die()
  nameWithType: CreatureState.Die()
  fullName: CreatureState.Die()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureState.Die</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Die()
    content.vb: Public Sub Die()
  overload: Global.CreatureState.Die*
- uid: Global.CreatureState.BaseSaveString
  commentId: M:Global.CreatureState.BaseSaveString
  id: BaseSaveString
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: BaseSaveString()
  nameWithType: CreatureState.BaseSaveString()
  fullName: CreatureState.BaseSaveString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureState.BaseSaveString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string BaseSaveString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureState.BaseSaveString</parameter>
          </include>
        </markup>
    content.vb: Public Function BaseSaveString() As String
  overload: Global.CreatureState.BaseSaveString*
- uid: Global.CreatureState.ToString
  commentId: M:Global.CreatureState.ToString
  id: ToString
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CreatureState.ToString()
  fullName: CreatureState.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureState.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureState.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.CreatureState.ToString*
- uid: Global.CreatureState.LoadFromString(System.String[])
  commentId: M:Global.CreatureState.LoadFromString(System.String[])
  id: LoadFromString(System.String[])
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: LoadFromString(string[])
  nameWithType: CreatureState.LoadFromString(string[])
  fullName: CreatureState.LoadFromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureState.LoadFromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void LoadFromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:CreatureState.LoadFromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub LoadFromString(s As String())
  overload: Global.CreatureState.LoadFromString*
  nameWithType.vb: CreatureState.LoadFromString(String())
  fullName.vb: CreatureState.LoadFromString(String())
  name.vb: LoadFromString(String())
- uid: Global.CreatureState.CycleTick
  commentId: M:Global.CreatureState.CycleTick
  id: CycleTick
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: CycleTick()
  nameWithType: CreatureState.CycleTick()
  fullName: CreatureState.CycleTick()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureState.CycleTick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void CycleTick()
    content.vb: Public Overridable Sub CycleTick()
  overload: Global.CreatureState.CycleTick*
- uid: Global.CreatureState.alive
  commentId: P:Global.CreatureState.alive
  id: alive
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: alive
  nameWithType: CreatureState.alive
  fullName: CreatureState.alive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureState.alive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool alive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property alive As Boolean
  overload: Global.CreatureState.alive*
- uid: Global.CreatureState.dead
  commentId: P:Global.CreatureState.dead
  id: dead
  parent: Global.CreatureState
  langs:
  - csharp
  - vb
  name: dead
  nameWithType: CreatureState.dead
  fullName: CreatureState.dead
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureState.dead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property dead As Boolean
  overload: Global.CreatureState.dead*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SocialMemory
  commentId: T:Global.SocialMemory
  isExternal: true
  href: SocialMemory.html
  name: SocialMemory
  nameWithType: SocialMemory
  fullName: SocialMemory
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.CreatureState.#ctor*
  commentId: Overload:Global.CreatureState.#ctor
  isExternal: true
  href: Global.CreatureState.html#CreatureState__ctor_AbstractCreature_
  name: CreatureState
  nameWithType: CreatureState.CreatureState
  fullName: CreatureState.CreatureState
  nameWithType.vb: CreatureState.New
  fullName.vb: CreatureState.New
  name.vb: New
- uid: Global.CreatureState.Die*
  commentId: Overload:Global.CreatureState.Die
  isExternal: true
  href: Global.CreatureState.html#CreatureState_Die
  name: Die
  nameWithType: CreatureState.Die
  fullName: CreatureState.Die
- uid: Global.CreatureState.BaseSaveString*
  commentId: Overload:Global.CreatureState.BaseSaveString
  isExternal: true
  href: Global.CreatureState.html#CreatureState_BaseSaveString
  name: BaseSaveString
  nameWithType: CreatureState.BaseSaveString
  fullName: CreatureState.BaseSaveString
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.CreatureState.ToString*
  commentId: Overload:Global.CreatureState.ToString
  isExternal: true
  href: Global.CreatureState.html#CreatureState_ToString
  name: ToString
  nameWithType: CreatureState.ToString
  fullName: CreatureState.ToString
- uid: Global.CreatureState.LoadFromString*
  commentId: Overload:Global.CreatureState.LoadFromString
  isExternal: true
  href: Global.CreatureState.html#CreatureState_LoadFromString_System_String___
  name: LoadFromString
  nameWithType: CreatureState.LoadFromString
  fullName: CreatureState.LoadFromString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.CreatureState.CycleTick*
  commentId: Overload:Global.CreatureState.CycleTick
  isExternal: true
  href: Global.CreatureState.html#CreatureState_CycleTick
  name: CycleTick
  nameWithType: CreatureState.CycleTick
  fullName: CreatureState.CycleTick
- uid: Global.CreatureState.alive*
  commentId: Overload:Global.CreatureState.alive
  isExternal: true
  href: Global.CreatureState.html#CreatureState_alive
  name: alive
  nameWithType: CreatureState.alive
  fullName: CreatureState.alive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.CreatureState.dead*
  commentId: Overload:Global.CreatureState.dead
  isExternal: true
  href: Global.CreatureState.html#CreatureState_dead
  name: dead
  nameWithType: CreatureState.dead
  fullName: CreatureState.dead
