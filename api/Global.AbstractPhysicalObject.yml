### YamlMime:ManagedReference
items:
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  id: AbstractPhysicalObject
  parent: Global
  children:
  - Global.AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)
  - Global.AbstractPhysicalObject.Abstractize(WorldCoordinate)
  - Global.AbstractPhysicalObject.ChangeRooms(WorldCoordinate)
  - Global.AbstractPhysicalObject.Destroy
  - Global.AbstractPhysicalObject.GetAllConnectedObjects
  - Global.AbstractPhysicalObject.IDAndRippleLayerString
  - Global.AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)
  - Global.AbstractPhysicalObject.IsExitingDen
  - Global.AbstractPhysicalObject.IsSameRippleLayer(System.Int32)
  - Global.AbstractPhysicalObject.LoseAllStuckObjects
  - Global.AbstractPhysicalObject.Move(WorldCoordinate)
  - Global.AbstractPhysicalObject.Realize
  - Global.AbstractPhysicalObject.RealizeInRoom
  - Global.AbstractPhysicalObject.ToString
  - Global.AbstractPhysicalObject.Update(System.Int32)
  - Global.AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)
  - Global.AbstractPhysicalObject.destroyOnAbstraction
  - Global.AbstractPhysicalObject.placedObjectOrigin
  - Global.AbstractPhysicalObject.realizedObject
  - Global.AbstractPhysicalObject.rippleBothSides
  - Global.AbstractPhysicalObject.rippleLayer
  - Global.AbstractPhysicalObject.stuckObjects
  - Global.AbstractPhysicalObject.tracker
  - Global.AbstractPhysicalObject.type
  - Global.AbstractPhysicalObject.unrecognizedAttributes
  langs:
  - csharp
  - vb
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractPhysicalObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class AbstractPhysicalObject : AbstractWorldEntity'
    content.vb: Public Class AbstractPhysicalObject Inherits AbstractWorldEntity
  inheritance:
  - System.Object
  - Global.AbstractWorldEntity
  derivedClasses:
  - Global.AbstractConsumable
  - Global.AbstractCreature
  - Global.AbstractSpear
  - Global.EggBugEgg.AbstractBugEgg
  - Global.JokeRifle.AbstractRifle
  - Global.LobeTree.AbstractLobeTree
  - Global.OverseerCarcass.AbstractOverseerCarcass
  - Global.UniqueAbstractObject
  - Global.VultureMask.AbstractVultureMask
  - MoreSlugcats.AbstractBullet
  - MoreSlugcats.CollisionField.AbstractCollisionField
  - MoreSlugcats.FireEgg.AbstractBugEgg
  - Watcher.AbstractPrinceBulb
  - Watcher.BoxWorm.Larva.AbstractLarva
  inheritedMembers:
  - Global.AbstractWorldEntity.pos
  - Global.AbstractWorldEntity.world
  - Global.AbstractWorldEntity.timeSpentHere
  - Global.AbstractWorldEntity.evenUpdate
  - Global.AbstractWorldEntity.InDen
  - Global.AbstractWorldEntity.slatedForDeletion
  - Global.AbstractWorldEntity.ID
  - Global.AbstractWorldEntity.Room
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AbstractPhysicalObject.realizedObject
  commentId: F:Global.AbstractPhysicalObject.realizedObject
  id: realizedObject
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: realizedObject
  nameWithType: AbstractPhysicalObject.realizedObject
  fullName: AbstractPhysicalObject.realizedObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.realizedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject realizedObject
    return:
      type: Global.PhysicalObject
    content.vb: Public realizedObject As PhysicalObject
- uid: Global.AbstractPhysicalObject.stuckObjects
  commentId: F:Global.AbstractPhysicalObject.stuckObjects
  id: stuckObjects
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: stuckObjects
  nameWithType: AbstractPhysicalObject.stuckObjects
  fullName: AbstractPhysicalObject.stuckObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.stuckObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AbstractPhysicalObject.AbstractObjectStick> stuckObjects
    return:
      type: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectStick}
    content.vb: Public stuckObjects As List(Of AbstractPhysicalObject.AbstractObjectStick)
- uid: Global.AbstractPhysicalObject.destroyOnAbstraction
  commentId: F:Global.AbstractPhysicalObject.destroyOnAbstraction
  id: destroyOnAbstraction
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: destroyOnAbstraction
  nameWithType: AbstractPhysicalObject.destroyOnAbstraction
  fullName: AbstractPhysicalObject.destroyOnAbstraction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.destroyOnAbstraction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool destroyOnAbstraction
    return:
      type: System.Boolean
    content.vb: Public destroyOnAbstraction As Boolean
- uid: Global.AbstractPhysicalObject.unrecognizedAttributes
  commentId: F:Global.AbstractPhysicalObject.unrecognizedAttributes
  id: unrecognizedAttributes
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: unrecognizedAttributes
  nameWithType: AbstractPhysicalObject.unrecognizedAttributes
  fullName: AbstractPhysicalObject.unrecognizedAttributes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.unrecognizedAttributes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] unrecognizedAttributes
    return:
      type: System.String[]
    content.vb: Public unrecognizedAttributes As String()
- uid: Global.AbstractPhysicalObject.tracker
  commentId: F:Global.AbstractPhysicalObject.tracker
  id: tracker
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: tracker
  nameWithType: AbstractPhysicalObject.tracker
  fullName: AbstractPhysicalObject.tracker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.tracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PersistentObjectTracker tracker
    return:
      type: MoreSlugcats.PersistentObjectTracker
    content.vb: Public tracker As PersistentObjectTracker
- uid: Global.AbstractPhysicalObject.type
  commentId: F:Global.AbstractPhysicalObject.type
  id: type
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: type
  nameWithType: AbstractPhysicalObject.type
  fullName: AbstractPhysicalObject.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject.AbstractObjectType type
    return:
      type: Global.AbstractPhysicalObject.AbstractObjectType
    content.vb: Public type As AbstractPhysicalObject.AbstractObjectType
- uid: Global.AbstractPhysicalObject.rippleLayer
  commentId: F:Global.AbstractPhysicalObject.rippleLayer
  id: rippleLayer
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: rippleLayer
  nameWithType: AbstractPhysicalObject.rippleLayer
  fullName: AbstractPhysicalObject.rippleLayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.rippleLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rippleLayer
    return:
      type: System.Int32
    content.vb: Public rippleLayer As Integer
- uid: Global.AbstractPhysicalObject.rippleBothSides
  commentId: F:Global.AbstractPhysicalObject.rippleBothSides
  id: rippleBothSides
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: rippleBothSides
  nameWithType: AbstractPhysicalObject.rippleBothSides
  fullName: AbstractPhysicalObject.rippleBothSides
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.rippleBothSides</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rippleBothSides
    return:
      type: System.Boolean
    content.vb: Public rippleBothSides As Boolean
- uid: Global.AbstractPhysicalObject.placedObjectOrigin
  commentId: F:Global.AbstractPhysicalObject.placedObjectOrigin
  id: placedObjectOrigin
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: placedObjectOrigin
  nameWithType: AbstractPhysicalObject.placedObjectOrigin
  fullName: AbstractPhysicalObject.placedObjectOrigin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.placedObjectOrigin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string placedObjectOrigin
    return:
      type: System.String
    content.vb: Public placedObjectOrigin As String
- uid: Global.AbstractPhysicalObject.IsSameRippleLayer(System.Int32)
  commentId: M:Global.AbstractPhysicalObject.IsSameRippleLayer(System.Int32)
  id: IsSameRippleLayer(System.Int32)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: IsSameRippleLayer(int)
  nameWithType: AbstractPhysicalObject.IsSameRippleLayer(int)
  fullName: AbstractPhysicalObject.IsSameRippleLayer(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.IsSameRippleLayer(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsSameRippleLayer(int testRippleLayer)
    parameters:
    - id: testRippleLayer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>testRippleLayer</parameter>
            <parameter>M:AbstractPhysicalObject.IsSameRippleLayer(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractPhysicalObject.IsSameRippleLayer(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsSameRippleLayer(testRippleLayer As Integer) As Boolean
  overload: Global.AbstractPhysicalObject.IsSameRippleLayer*
  nameWithType.vb: AbstractPhysicalObject.IsSameRippleLayer(Integer)
  fullName.vb: AbstractPhysicalObject.IsSameRippleLayer(Integer)
  name.vb: IsSameRippleLayer(Integer)
- uid: Global.AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)
  commentId: M:Global.AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)
  id: '#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)'
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: AbstractPhysicalObject(World, AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
  nameWithType: AbstractPhysicalObject.AbstractPhysicalObject(World, AbstractPhysicalObject.AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
  fullName: AbstractPhysicalObject.AbstractPhysicalObject(World, AbstractPhysicalObject.AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractPhysicalObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject(World world, AbstractPhysicalObject.AbstractObjectType type, PhysicalObject realizedObject, WorldCoordinate pos, EntityID ID)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: type
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: realizedObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>realizedObject</parameter>
            <parameter>M:AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: pos
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: ID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:AbstractPhysicalObject.#ctor(World,AbstractPhysicalObject.AbstractObjectType,PhysicalObject,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, type As AbstractPhysicalObject.AbstractObjectType, realizedObject As PhysicalObject, pos As WorldCoordinate, ID As EntityID)
  overload: Global.AbstractPhysicalObject.#ctor*
  nameWithType.vb: AbstractPhysicalObject.New(World, AbstractPhysicalObject.AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
  fullName.vb: AbstractPhysicalObject.New(World, AbstractPhysicalObject.AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
  name.vb: New(World, AbstractObjectType, PhysicalObject, WorldCoordinate, EntityID)
- uid: Global.AbstractPhysicalObject.Update(System.Int32)
  commentId: M:Global.AbstractPhysicalObject.Update(System.Int32)
  id: Update(System.Int32)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: Update(int)
  nameWithType: AbstractPhysicalObject.Update(int)
  fullName: AbstractPhysicalObject.Update(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.Update(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(int time)
    parameters:
    - id: time
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:AbstractPhysicalObject.Update(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(time As Integer)
  overridden: Global.AbstractWorldEntity.Update(System.Int32)
  overload: Global.AbstractPhysicalObject.Update*
  nameWithType.vb: AbstractPhysicalObject.Update(Integer)
  fullName.vb: AbstractPhysicalObject.Update(Integer)
  name.vb: Update(Integer)
- uid: Global.AbstractPhysicalObject.Move(WorldCoordinate)
  commentId: M:Global.AbstractPhysicalObject.Move(WorldCoordinate)
  id: Move(WorldCoordinate)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: Move(WorldCoordinate)
  nameWithType: AbstractPhysicalObject.Move(WorldCoordinate)
  fullName: AbstractPhysicalObject.Move(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.Move(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Move(WorldCoordinate newCoord)
    parameters:
    - id: newCoord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newCoord</parameter>
            <parameter>M:AbstractPhysicalObject.Move(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Move(newCoord As WorldCoordinate)
  overload: Global.AbstractPhysicalObject.Move*
- uid: Global.AbstractPhysicalObject.ChangeRooms(WorldCoordinate)
  commentId: M:Global.AbstractPhysicalObject.ChangeRooms(WorldCoordinate)
  id: ChangeRooms(WorldCoordinate)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: ChangeRooms(WorldCoordinate)
  nameWithType: AbstractPhysicalObject.ChangeRooms(WorldCoordinate)
  fullName: AbstractPhysicalObject.ChangeRooms(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.ChangeRooms(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ChangeRooms(WorldCoordinate newCoord)
    parameters:
    - id: newCoord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newCoord</parameter>
            <parameter>M:AbstractPhysicalObject.ChangeRooms(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ChangeRooms(newCoord As WorldCoordinate)
  overload: Global.AbstractPhysicalObject.ChangeRooms*
- uid: Global.AbstractPhysicalObject.Realize
  commentId: M:Global.AbstractPhysicalObject.Realize
  id: Realize
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: Realize()
  nameWithType: AbstractPhysicalObject.Realize()
  fullName: AbstractPhysicalObject.Realize()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.Realize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Realize()
    content.vb: Public Overridable Sub Realize()
  overload: Global.AbstractPhysicalObject.Realize*
- uid: Global.AbstractPhysicalObject.RealizeInRoom
  commentId: M:Global.AbstractPhysicalObject.RealizeInRoom
  id: RealizeInRoom
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: RealizeInRoom()
  nameWithType: AbstractPhysicalObject.RealizeInRoom()
  fullName: AbstractPhysicalObject.RealizeInRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.RealizeInRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void RealizeInRoom()
    content.vb: Public Overridable Sub RealizeInRoom()
  overload: Global.AbstractPhysicalObject.RealizeInRoom*
- uid: Global.AbstractPhysicalObject.Abstractize(WorldCoordinate)
  commentId: M:Global.AbstractPhysicalObject.Abstractize(WorldCoordinate)
  id: Abstractize(WorldCoordinate)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: Abstractize(WorldCoordinate)
  nameWithType: AbstractPhysicalObject.Abstractize(WorldCoordinate)
  fullName: AbstractPhysicalObject.Abstractize(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.Abstractize(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Abstractize(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:AbstractPhysicalObject.Abstractize(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Abstractize(coord As WorldCoordinate)
  overridden: Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  overload: Global.AbstractPhysicalObject.Abstractize*
- uid: Global.AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)
  commentId: M:Global.AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)
  id: IsEnteringDen(WorldCoordinate)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: IsEnteringDen(WorldCoordinate)
  nameWithType: AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)
  fullName: AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void IsEnteringDen(WorldCoordinate den)
    parameters:
    - id: den
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>den</parameter>
            <parameter>M:AbstractPhysicalObject.IsEnteringDen(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub IsEnteringDen(den As WorldCoordinate)
  overridden: Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  overload: Global.AbstractPhysicalObject.IsEnteringDen*
- uid: Global.AbstractPhysicalObject.IsExitingDen
  commentId: M:Global.AbstractPhysicalObject.IsExitingDen
  id: IsExitingDen
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: IsExitingDen()
  nameWithType: AbstractPhysicalObject.IsExitingDen()
  fullName: AbstractPhysicalObject.IsExitingDen()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.IsExitingDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void IsExitingDen()
    content.vb: Public Overrides Sub IsExitingDen()
  overridden: Global.AbstractWorldEntity.IsExitingDen
  overload: Global.AbstractPhysicalObject.IsExitingDen*
- uid: Global.AbstractPhysicalObject.Destroy
  commentId: M:Global.AbstractPhysicalObject.Destroy
  id: Destroy
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: AbstractPhysicalObject.Destroy()
  fullName: AbstractPhysicalObject.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy()
  overridden: Global.AbstractWorldEntity.Destroy
  overload: Global.AbstractPhysicalObject.Destroy*
- uid: Global.AbstractPhysicalObject.ToString
  commentId: M:Global.AbstractPhysicalObject.ToString
  id: ToString
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AbstractPhysicalObject.ToString()
  fullName: AbstractPhysicalObject.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractPhysicalObject.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.AbstractPhysicalObject.ToString*
- uid: Global.AbstractPhysicalObject.GetAllConnectedObjects
  commentId: M:Global.AbstractPhysicalObject.GetAllConnectedObjects
  id: GetAllConnectedObjects
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: GetAllConnectedObjects()
  nameWithType: AbstractPhysicalObject.GetAllConnectedObjects()
  fullName: AbstractPhysicalObject.GetAllConnectedObjects()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.GetAllConnectedObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AbstractPhysicalObject> GetAllConnectedObjects()
    return:
      type: System.Collections.Generic.List{AbstractPhysicalObject}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractPhysicalObject.GetAllConnectedObjects</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAllConnectedObjects() As List(Of AbstractPhysicalObject)
  overload: Global.AbstractPhysicalObject.GetAllConnectedObjects*
- uid: Global.AbstractPhysicalObject.LoseAllStuckObjects
  commentId: M:Global.AbstractPhysicalObject.LoseAllStuckObjects
  id: LoseAllStuckObjects
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: LoseAllStuckObjects()
  nameWithType: AbstractPhysicalObject.LoseAllStuckObjects()
  fullName: AbstractPhysicalObject.LoseAllStuckObjects()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.LoseAllStuckObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoseAllStuckObjects()
    content.vb: Public Sub LoseAllStuckObjects()
  overload: Global.AbstractPhysicalObject.LoseAllStuckObjects*
- uid: Global.AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)
  commentId: M:Global.AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)
  id: UsesAPersistantTracker(AbstractPhysicalObject)
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: UsesAPersistantTracker(AbstractPhysicalObject)
  nameWithType: AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)
  fullName: AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool UsesAPersistantTracker(AbstractPhysicalObject abs)
    parameters:
    - id: abs
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abs</parameter>
            <parameter>M:AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractPhysicalObject.UsesAPersistantTracker(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function UsesAPersistantTracker(abs As AbstractPhysicalObject) As Boolean
  overload: Global.AbstractPhysicalObject.UsesAPersistantTracker*
- uid: Global.AbstractPhysicalObject.IDAndRippleLayerString
  commentId: P:Global.AbstractPhysicalObject.IDAndRippleLayerString
  id: IDAndRippleLayerString
  parent: Global.AbstractPhysicalObject
  langs:
  - csharp
  - vb
  name: IDAndRippleLayerString
  nameWithType: AbstractPhysicalObject.IDAndRippleLayerString
  fullName: AbstractPhysicalObject.IDAndRippleLayerString
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AbstractPhysicalObject.IDAndRippleLayerString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string IDAndRippleLayerString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property IDAndRippleLayerString As String
  overload: Global.AbstractPhysicalObject.IDAndRippleLayerString*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AbstractWorldEntity
  commentId: T:Global.AbstractWorldEntity
  isExternal: true
  href: AbstractWorldEntity.html
  name: AbstractWorldEntity
  nameWithType: AbstractWorldEntity
  fullName: AbstractWorldEntity
- uid: Global.AbstractWorldEntity.pos
  commentId: F:Global.AbstractWorldEntity.pos
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_pos
  name: pos
  nameWithType: AbstractWorldEntity.pos
  fullName: AbstractWorldEntity.pos
- uid: Global.AbstractWorldEntity.world
  commentId: F:Global.AbstractWorldEntity.world
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_world
  name: world
  nameWithType: AbstractWorldEntity.world
  fullName: AbstractWorldEntity.world
- uid: Global.AbstractWorldEntity.timeSpentHere
  commentId: F:Global.AbstractWorldEntity.timeSpentHere
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_timeSpentHere
  name: timeSpentHere
  nameWithType: AbstractWorldEntity.timeSpentHere
  fullName: AbstractWorldEntity.timeSpentHere
- uid: Global.AbstractWorldEntity.evenUpdate
  commentId: F:Global.AbstractWorldEntity.evenUpdate
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_evenUpdate
  name: evenUpdate
  nameWithType: AbstractWorldEntity.evenUpdate
  fullName: AbstractWorldEntity.evenUpdate
- uid: Global.AbstractWorldEntity.InDen
  commentId: F:Global.AbstractWorldEntity.InDen
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_InDen
  name: InDen
  nameWithType: AbstractWorldEntity.InDen
  fullName: AbstractWorldEntity.InDen
- uid: Global.AbstractWorldEntity.slatedForDeletion
  commentId: F:Global.AbstractWorldEntity.slatedForDeletion
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_slatedForDeletion
  name: slatedForDeletion
  nameWithType: AbstractWorldEntity.slatedForDeletion
  fullName: AbstractWorldEntity.slatedForDeletion
- uid: Global.AbstractWorldEntity.ID
  commentId: F:Global.AbstractWorldEntity.ID
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_ID
  name: ID
  nameWithType: AbstractWorldEntity.ID
  fullName: AbstractWorldEntity.ID
- uid: Global.AbstractWorldEntity.Room
  commentId: P:Global.AbstractWorldEntity.Room
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Room
  name: Room
  nameWithType: AbstractWorldEntity.Room
  fullName: AbstractWorldEntity.Room
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectStick}
  commentId: T:System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectStick}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractPhysicalObject.AbstractObjectStick>
  nameWithType: List<AbstractPhysicalObject.AbstractObjectStick>
  fullName: System.Collections.Generic.List<AbstractPhysicalObject.AbstractObjectStick>
  nameWithType.vb: List(Of AbstractPhysicalObject.AbstractObjectStick)
  fullName.vb: System.Collections.Generic.List(Of AbstractPhysicalObject.AbstractObjectStick)
  name.vb: List(Of AbstractPhysicalObject.AbstractObjectStick)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick
    name: AbstractObjectStick
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectStick.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick
    name: AbstractObjectStick
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectStick.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: MoreSlugcats.PersistentObjectTracker
  commentId: T:MoreSlugcats.PersistentObjectTracker
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.PersistentObjectTracker.html
  name: PersistentObjectTracker
  nameWithType: PersistentObjectTracker
  fullName: MoreSlugcats.PersistentObjectTracker
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: Global.AbstractPhysicalObject.AbstractObjectType
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectType
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectType
  nameWithType: AbstractPhysicalObject.AbstractObjectType
  fullName: AbstractPhysicalObject.AbstractObjectType
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AbstractPhysicalObject.IsSameRippleLayer*
  commentId: Overload:Global.AbstractPhysicalObject.IsSameRippleLayer
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_IsSameRippleLayer_System_Int32_
  name: IsSameRippleLayer
  nameWithType: AbstractPhysicalObject.IsSameRippleLayer
  fullName: AbstractPhysicalObject.IsSameRippleLayer
- uid: Global.AbstractPhysicalObject.#ctor*
  commentId: Overload:Global.AbstractPhysicalObject.#ctor
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject__ctor_World_AbstractPhysicalObject_AbstractObjectType_PhysicalObject_WorldCoordinate_EntityID_
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject.AbstractPhysicalObject
  fullName: AbstractPhysicalObject.AbstractPhysicalObject
  nameWithType.vb: AbstractPhysicalObject.New
  fullName.vb: AbstractPhysicalObject.New
  name.vb: New
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
- uid: Global.AbstractWorldEntity.Update(System.Int32)
  commentId: M:Global.AbstractWorldEntity.Update(System.Int32)
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Update_System_Int32_
  name: Update(int)
  nameWithType: AbstractWorldEntity.Update(int)
  fullName: AbstractWorldEntity.Update(int)
  nameWithType.vb: AbstractWorldEntity.Update(Integer)
  fullName.vb: AbstractWorldEntity.Update(Integer)
  name.vb: Update(Integer)
  spec.csharp:
  - uid: Global.AbstractWorldEntity.Update(System.Int32)
    name: Update
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Update_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.AbstractWorldEntity.Update(System.Int32)
    name: Update
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Update_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.AbstractPhysicalObject.Update*
  commentId: Overload:Global.AbstractPhysicalObject.Update
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_Update_System_Int32_
  name: Update
  nameWithType: AbstractPhysicalObject.Update
  fullName: AbstractPhysicalObject.Update
- uid: Global.AbstractPhysicalObject.Move*
  commentId: Overload:Global.AbstractPhysicalObject.Move
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_Move_WorldCoordinate_
  name: Move
  nameWithType: AbstractPhysicalObject.Move
  fullName: AbstractPhysicalObject.Move
- uid: Global.AbstractPhysicalObject.ChangeRooms*
  commentId: Overload:Global.AbstractPhysicalObject.ChangeRooms
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_ChangeRooms_WorldCoordinate_
  name: ChangeRooms
  nameWithType: AbstractPhysicalObject.ChangeRooms
  fullName: AbstractPhysicalObject.ChangeRooms
- uid: Global.AbstractPhysicalObject.Realize*
  commentId: Overload:Global.AbstractPhysicalObject.Realize
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_Realize
  name: Realize
  nameWithType: AbstractPhysicalObject.Realize
  fullName: AbstractPhysicalObject.Realize
- uid: Global.AbstractPhysicalObject.RealizeInRoom*
  commentId: Overload:Global.AbstractPhysicalObject.RealizeInRoom
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_RealizeInRoom
  name: RealizeInRoom
  nameWithType: AbstractPhysicalObject.RealizeInRoom
  fullName: AbstractPhysicalObject.RealizeInRoom
- uid: Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  commentId: M:Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Abstractize_WorldCoordinate_
  name: Abstractize(WorldCoordinate)
  nameWithType: AbstractWorldEntity.Abstractize(WorldCoordinate)
  fullName: AbstractWorldEntity.Abstractize(WorldCoordinate)
  spec.csharp:
  - uid: Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
    name: Abstractize
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Abstractize_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
  spec.vb:
  - uid: Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
    name: Abstractize
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Abstractize_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
- uid: Global.AbstractPhysicalObject.Abstractize*
  commentId: Overload:Global.AbstractPhysicalObject.Abstractize
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_Abstractize_WorldCoordinate_
  name: Abstractize
  nameWithType: AbstractPhysicalObject.Abstractize
  fullName: AbstractPhysicalObject.Abstractize
- uid: Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  commentId: M:Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsEnteringDen_WorldCoordinate_
  name: IsEnteringDen(WorldCoordinate)
  nameWithType: AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  fullName: AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  spec.csharp:
  - uid: Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
    name: IsEnteringDen
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsEnteringDen_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
  spec.vb:
  - uid: Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
    name: IsEnteringDen
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsEnteringDen_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
- uid: Global.AbstractPhysicalObject.IsEnteringDen*
  commentId: Overload:Global.AbstractPhysicalObject.IsEnteringDen
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_IsEnteringDen_WorldCoordinate_
  name: IsEnteringDen
  nameWithType: AbstractPhysicalObject.IsEnteringDen
  fullName: AbstractPhysicalObject.IsEnteringDen
- uid: Global.AbstractWorldEntity.IsExitingDen
  commentId: M:Global.AbstractWorldEntity.IsExitingDen
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsExitingDen
  name: IsExitingDen()
  nameWithType: AbstractWorldEntity.IsExitingDen()
  fullName: AbstractWorldEntity.IsExitingDen()
  spec.csharp:
  - uid: Global.AbstractWorldEntity.IsExitingDen
    name: IsExitingDen
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsExitingDen
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AbstractWorldEntity.IsExitingDen
    name: IsExitingDen
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsExitingDen
  - name: (
  - name: )
- uid: Global.AbstractPhysicalObject.IsExitingDen*
  commentId: Overload:Global.AbstractPhysicalObject.IsExitingDen
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_IsExitingDen
  name: IsExitingDen
  nameWithType: AbstractPhysicalObject.IsExitingDen
  fullName: AbstractPhysicalObject.IsExitingDen
- uid: Global.AbstractWorldEntity.Destroy
  commentId: M:Global.AbstractWorldEntity.Destroy
  parent: Global.AbstractWorldEntity
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Destroy
  name: Destroy()
  nameWithType: AbstractWorldEntity.Destroy()
  fullName: AbstractWorldEntity.Destroy()
  spec.csharp:
  - uid: Global.AbstractWorldEntity.Destroy
    name: Destroy
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AbstractWorldEntity.Destroy
    name: Destroy
    isExternal: true
    href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Destroy
  - name: (
  - name: )
- uid: Global.AbstractPhysicalObject.Destroy*
  commentId: Overload:Global.AbstractPhysicalObject.Destroy
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_Destroy
  name: Destroy
  nameWithType: AbstractPhysicalObject.Destroy
  fullName: AbstractPhysicalObject.Destroy
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.AbstractPhysicalObject.ToString*
  commentId: Overload:Global.AbstractPhysicalObject.ToString
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_ToString
  name: ToString
  nameWithType: AbstractPhysicalObject.ToString
  fullName: AbstractPhysicalObject.ToString
- uid: Global.AbstractPhysicalObject.GetAllConnectedObjects*
  commentId: Overload:Global.AbstractPhysicalObject.GetAllConnectedObjects
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_GetAllConnectedObjects
  name: GetAllConnectedObjects
  nameWithType: AbstractPhysicalObject.GetAllConnectedObjects
  fullName: AbstractPhysicalObject.GetAllConnectedObjects
- uid: System.Collections.Generic.List{AbstractPhysicalObject}
  commentId: T:System.Collections.Generic.List{AbstractPhysicalObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractPhysicalObject>
  nameWithType: List<AbstractPhysicalObject>
  fullName: System.Collections.Generic.List<AbstractPhysicalObject>
  nameWithType.vb: List(Of AbstractPhysicalObject)
  fullName.vb: System.Collections.Generic.List(Of AbstractPhysicalObject)
  name.vb: List(Of AbstractPhysicalObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: )
- uid: Global.AbstractPhysicalObject.LoseAllStuckObjects*
  commentId: Overload:Global.AbstractPhysicalObject.LoseAllStuckObjects
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_LoseAllStuckObjects
  name: LoseAllStuckObjects
  nameWithType: AbstractPhysicalObject.LoseAllStuckObjects
  fullName: AbstractPhysicalObject.LoseAllStuckObjects
- uid: Global.AbstractPhysicalObject.UsesAPersistantTracker*
  commentId: Overload:Global.AbstractPhysicalObject.UsesAPersistantTracker
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_UsesAPersistantTracker_AbstractPhysicalObject_
  name: UsesAPersistantTracker
  nameWithType: AbstractPhysicalObject.UsesAPersistantTracker
  fullName: AbstractPhysicalObject.UsesAPersistantTracker
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.AbstractPhysicalObject.IDAndRippleLayerString*
  commentId: Overload:Global.AbstractPhysicalObject.IDAndRippleLayerString
  isExternal: true
  href: Global.AbstractPhysicalObject.html#AbstractPhysicalObject_IDAndRippleLayerString
  name: IDAndRippleLayerString
  nameWithType: AbstractPhysicalObject.IDAndRippleLayerString
  fullName: AbstractPhysicalObject.IDAndRippleLayerString
