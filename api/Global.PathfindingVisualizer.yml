### YamlMime:ManagedReference
items:
- uid: Global.PathfindingVisualizer
  commentId: T:Global.PathfindingVisualizer
  id: PathfindingVisualizer
  parent: Global
  children:
  - Global.PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)
  - Global.PathfindingVisualizer.Blink(WorldCoordinate)
  - Global.PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)
  - Global.PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)
  - Global.PathfindingVisualizer.CleanseSprites
  - Global.PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)
  - Global.PathfindingVisualizer.Reachable(WorldCoordinate)
  - Global.PathfindingVisualizer.colors
  - Global.PathfindingVisualizer.offset
  - Global.PathfindingVisualizer.pather
  - Global.PathfindingVisualizer.room
  - Global.PathfindingVisualizer.sprites
  - Global.PathfindingVisualizer.sprites2
  langs:
  - csharp
  - vb
  name: PathfindingVisualizer
  nameWithType: PathfindingVisualizer
  fullName: PathfindingVisualizer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PathfindingVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PathfindingVisualizer
    content.vb: Public Class PathfindingVisualizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PathfindingVisualizer.room
  commentId: F:Global.PathfindingVisualizer.room
  id: room
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: room
  nameWithType: PathfindingVisualizer.room
  fullName: PathfindingVisualizer.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.PathfindingVisualizer.pather
  commentId: F:Global.PathfindingVisualizer.pather
  id: pather
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: pather
  nameWithType: PathfindingVisualizer.pather
  fullName: PathfindingVisualizer.pather
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.pather</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathFinder pather
    return:
      type: Global.PathFinder
    content.vb: Public pather As PathFinder
- uid: Global.PathfindingVisualizer.sprites
  commentId: F:Global.PathfindingVisualizer.sprites
  id: sprites
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: sprites
  nameWithType: PathfindingVisualizer.sprites
  fullName: PathfindingVisualizer.sprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.sprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite[,] sprites
    return:
      type: Global.DebugSprite[,]
    content.vb: Public sprites As DebugSprite(,)
- uid: Global.PathfindingVisualizer.sprites2
  commentId: F:Global.PathfindingVisualizer.sprites2
  id: sprites2
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: sprites2
  nameWithType: PathfindingVisualizer.sprites2
  fullName: PathfindingVisualizer.sprites2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.sprites2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite[][] sprites2
    return:
      type: Global.DebugSprite[][]
    content.vb: Public sprites2 As DebugSprite()()
- uid: Global.PathfindingVisualizer.colors
  commentId: F:Global.PathfindingVisualizer.colors
  id: colors
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: colors
  nameWithType: PathfindingVisualizer.colors
  fullName: PathfindingVisualizer.colors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.colors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color[] colors
    return:
      type: UnityEngine.Color[]
    content.vb: Public colors As Color()
- uid: Global.PathfindingVisualizer.offset
  commentId: F:Global.PathfindingVisualizer.offset
  id: offset
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: offset
  nameWithType: PathfindingVisualizer.offset
  fullName: PathfindingVisualizer.offset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathfindingVisualizer.offset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 offset
    return:
      type: RWCustom.IntVector2
    content.vb: Public offset As IntVector2
- uid: Global.PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)
  commentId: M:Global.PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)
  id: '#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)'
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: PathfindingVisualizer(World, Room, PathFinder, int, int, IntVector2)
  nameWithType: PathfindingVisualizer.PathfindingVisualizer(World, Room, PathFinder, int, int, IntVector2)
  fullName: PathfindingVisualizer.PathfindingVisualizer(World, Room, PathFinder, int, int, RWCustom.IntVector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PathfindingVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathfindingVisualizer(World world, Room room, PathFinder pather, int width, int height, IntVector2 offset)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: pather
      type: Global.PathFinder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pather</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: width
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>width</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: height
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>height</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: offset
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:PathfindingVisualizer.#ctor(World,Room,PathFinder,System.Int32,System.Int32,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, room As Room, pather As PathFinder, width As Integer, height As Integer, offset As IntVector2)
  overload: Global.PathfindingVisualizer.#ctor*
  nameWithType.vb: PathfindingVisualizer.New(World, Room, PathFinder, Integer, Integer, IntVector2)
  fullName.vb: PathfindingVisualizer.New(World, Room, PathFinder, Integer, Integer, RWCustom.IntVector2)
  name.vb: New(World, Room, PathFinder, Integer, Integer, IntVector2)
- uid: Global.PathfindingVisualizer.CleanseSprites
  commentId: M:Global.PathfindingVisualizer.CleanseSprites
  id: CleanseSprites
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: CleanseSprites()
  nameWithType: PathfindingVisualizer.CleanseSprites()
  fullName: PathfindingVisualizer.CleanseSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.CleanseSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CleanseSprites()
    content.vb: Public Sub CleanseSprites()
  overload: Global.PathfindingVisualizer.CleanseSprites*
- uid: Global.PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)
  commentId: M:Global.PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)
  id: CellAddedToCheckNext(WorldCoordinate)
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: CellAddedToCheckNext(WorldCoordinate)
  nameWithType: PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)
  fullName: PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CellAddedToCheckNext(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathfindingVisualizer.CellAddedToCheckNext(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CellAddedToCheckNext(coord As WorldCoordinate)
  overload: Global.PathfindingVisualizer.CellAddedToCheckNext*
- uid: Global.PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)
  commentId: M:Global.PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)
  id: CellChecked(WorldCoordinate,System.Int32)
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: CellChecked(WorldCoordinate, int)
  nameWithType: PathfindingVisualizer.CellChecked(WorldCoordinate, int)
  fullName: PathfindingVisualizer.CellChecked(WorldCoordinate, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CellChecked(WorldCoordinate coord, int gen)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: gen
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gen</parameter>
            <parameter>M:PathfindingVisualizer.CellChecked(WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CellChecked(coord As WorldCoordinate, gen As Integer)
  overload: Global.PathfindingVisualizer.CellChecked*
  nameWithType.vb: PathfindingVisualizer.CellChecked(WorldCoordinate, Integer)
  fullName.vb: PathfindingVisualizer.CellChecked(WorldCoordinate, Integer)
  name.vb: CellChecked(WorldCoordinate, Integer)
- uid: Global.PathfindingVisualizer.Blink(WorldCoordinate)
  commentId: M:Global.PathfindingVisualizer.Blink(WorldCoordinate)
  id: Blink(WorldCoordinate)
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: Blink(WorldCoordinate)
  nameWithType: PathfindingVisualizer.Blink(WorldCoordinate)
  fullName: PathfindingVisualizer.Blink(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.Blink(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Blink(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathfindingVisualizer.Blink(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Blink(coord As WorldCoordinate)
  overload: Global.PathfindingVisualizer.Blink*
- uid: Global.PathfindingVisualizer.Reachable(WorldCoordinate)
  commentId: M:Global.PathfindingVisualizer.Reachable(WorldCoordinate)
  id: Reachable(WorldCoordinate)
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: Reachable(WorldCoordinate)
  nameWithType: PathfindingVisualizer.Reachable(WorldCoordinate)
  fullName: PathfindingVisualizer.Reachable(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.Reachable(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reachable(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathfindingVisualizer.Reachable(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Reachable(coord As WorldCoordinate)
  overload: Global.PathfindingVisualizer.Reachable*
- uid: Global.PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)
  commentId: M:Global.PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)
  id: GetBackAble(WorldCoordinate,System.Boolean)
  parent: Global.PathfindingVisualizer
  langs:
  - csharp
  - vb
  name: GetBackAble(WorldCoordinate, bool)
  nameWithType: PathfindingVisualizer.GetBackAble(WorldCoordinate, bool)
  fullName: PathfindingVisualizer.GetBackAble(WorldCoordinate, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GetBackAble(WorldCoordinate coord, bool reachAbleAlso)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)</parameter>
          </include>
        </markup>
    - id: reachAbleAlso
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reachAbleAlso</parameter>
            <parameter>M:PathfindingVisualizer.GetBackAble(WorldCoordinate,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GetBackAble(coord As WorldCoordinate, reachAbleAlso As Boolean)
  overload: Global.PathfindingVisualizer.GetBackAble*
  nameWithType.vb: PathfindingVisualizer.GetBackAble(WorldCoordinate, Boolean)
  fullName.vb: PathfindingVisualizer.GetBackAble(WorldCoordinate, Boolean)
  name.vb: GetBackAble(WorldCoordinate, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.PathFinder
  commentId: T:Global.PathFinder
  isExternal: true
  href: PathFinder.html
  name: PathFinder
  nameWithType: PathFinder
  fullName: PathFinder
- uid: Global.DebugSprite[,]
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite[,]
  nameWithType: DebugSprite[,]
  fullName: DebugSprite[,]
  nameWithType.vb: DebugSprite(,)
  fullName.vb: DebugSprite(,)
  name.vb: DebugSprite(,)
  spec.csharp:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: (
  - name: ','
  - name: )
- uid: Global.DebugSprite[][]
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite[][]
  nameWithType: DebugSprite[][]
  fullName: DebugSprite[][]
  nameWithType.vb: DebugSprite()()
  fullName.vb: DebugSprite()()
  name.vb: DebugSprite()()
  spec.csharp:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: UnityEngine.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: UnityEngine.Color[]
  nameWithType.vb: Color()
  fullName.vb: UnityEngine.Color()
  name.vb: Color()
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.PathfindingVisualizer.#ctor*
  commentId: Overload:Global.PathfindingVisualizer.#ctor
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer__ctor_World_Room_PathFinder_System_Int32_System_Int32_RWCustom_IntVector2_
  name: PathfindingVisualizer
  nameWithType: PathfindingVisualizer.PathfindingVisualizer
  fullName: PathfindingVisualizer.PathfindingVisualizer
  nameWithType.vb: PathfindingVisualizer.New
  fullName.vb: PathfindingVisualizer.New
  name.vb: New
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PathfindingVisualizer.CleanseSprites*
  commentId: Overload:Global.PathfindingVisualizer.CleanseSprites
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_CleanseSprites
  name: CleanseSprites
  nameWithType: PathfindingVisualizer.CleanseSprites
  fullName: PathfindingVisualizer.CleanseSprites
- uid: Global.PathfindingVisualizer.CellAddedToCheckNext*
  commentId: Overload:Global.PathfindingVisualizer.CellAddedToCheckNext
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_CellAddedToCheckNext_WorldCoordinate_
  name: CellAddedToCheckNext
  nameWithType: PathfindingVisualizer.CellAddedToCheckNext
  fullName: PathfindingVisualizer.CellAddedToCheckNext
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.PathfindingVisualizer.CellChecked*
  commentId: Overload:Global.PathfindingVisualizer.CellChecked
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_CellChecked_WorldCoordinate_System_Int32_
  name: CellChecked
  nameWithType: PathfindingVisualizer.CellChecked
  fullName: PathfindingVisualizer.CellChecked
- uid: Global.PathfindingVisualizer.Blink*
  commentId: Overload:Global.PathfindingVisualizer.Blink
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_Blink_WorldCoordinate_
  name: Blink
  nameWithType: PathfindingVisualizer.Blink
  fullName: PathfindingVisualizer.Blink
- uid: Global.PathfindingVisualizer.Reachable*
  commentId: Overload:Global.PathfindingVisualizer.Reachable
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_Reachable_WorldCoordinate_
  name: Reachable
  nameWithType: PathfindingVisualizer.Reachable
  fullName: PathfindingVisualizer.Reachable
- uid: Global.PathfindingVisualizer.GetBackAble*
  commentId: Overload:Global.PathfindingVisualizer.GetBackAble
  isExternal: true
  href: Global.PathfindingVisualizer.html#PathfindingVisualizer_GetBackAble_WorldCoordinate_System_Boolean_
  name: GetBackAble
  nameWithType: PathfindingVisualizer.GetBackAble
  fullName: PathfindingVisualizer.GetBackAble
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
