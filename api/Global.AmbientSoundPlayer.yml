### YamlMime:ManagedReference
items:
- uid: Global.AmbientSoundPlayer
  commentId: T:Global.AmbientSoundPlayer
  id: AmbientSoundPlayer
  parent: Global
  children:
  - Global.AmbientSoundPlayer.#ctor(VirtualMicrophone,AmbientSound)
  - Global.AmbientSoundPlayer.Destroy
  - Global.AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)
  - Global.AmbientSoundPlayer.SetLowPassCutOff(System.Single)
  - Global.AmbientSoundPlayer.aSound
  - Global.AmbientSoundPlayer.audioSource
  - Global.AmbientSoundPlayer.clip
  - Global.AmbientSoundPlayer.gameObject
  - Global.AmbientSoundPlayer.mic
  - Global.AmbientSoundPlayer.rippleSoundPlayer
  - Global.AmbientSoundPlayer.slatedForDeletion
  - Global.AmbientSoundPlayer.waitingToPlay
  langs:
  - csharp
  - vb
  name: AmbientSoundPlayer
  nameWithType: AmbientSoundPlayer
  fullName: AmbientSoundPlayer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AmbientSoundPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AmbientSoundPlayer
    content.vb: Public Class AmbientSoundPlayer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AmbientSoundPlayer.mic
  commentId: F:Global.AmbientSoundPlayer.mic
  id: mic
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: mic
  nameWithType: AmbientSoundPlayer.mic
  fullName: AmbientSoundPlayer.mic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.mic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VirtualMicrophone mic
    return:
      type: Global.VirtualMicrophone
    content.vb: Public mic As VirtualMicrophone
- uid: Global.AmbientSoundPlayer.aSound
  commentId: F:Global.AmbientSoundPlayer.aSound
  id: aSound
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: aSound
  nameWithType: AmbientSoundPlayer.aSound
  fullName: AmbientSoundPlayer.aSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.aSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmbientSound aSound
    return:
      type: Global.AmbientSound
    content.vb: Public aSound As AmbientSound
- uid: Global.AmbientSoundPlayer.clip
  commentId: F:Global.AmbientSoundPlayer.clip
  id: clip
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: clip
  nameWithType: AmbientSoundPlayer.clip
  fullName: AmbientSoundPlayer.clip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.clip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioClip clip
    return:
      type: UnityEngine.AudioClip
    content.vb: Public clip As AudioClip
- uid: Global.AmbientSoundPlayer.gameObject
  commentId: F:Global.AmbientSoundPlayer.gameObject
  id: gameObject
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: gameObject
  nameWithType: AmbientSoundPlayer.gameObject
  fullName: AmbientSoundPlayer.gameObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.gameObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GameObject gameObject
    return:
      type: UnityEngine.GameObject
    content.vb: Public gameObject As GameObject
- uid: Global.AmbientSoundPlayer.audioSource
  commentId: F:Global.AmbientSoundPlayer.audioSource
  id: audioSource
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: audioSource
  nameWithType: AmbientSoundPlayer.audioSource
  fullName: AmbientSoundPlayer.audioSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.audioSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioSource audioSource
    return:
      type: UnityEngine.AudioSource
    content.vb: Public audioSource As AudioSource
- uid: Global.AmbientSoundPlayer.slatedForDeletion
  commentId: F:Global.AmbientSoundPlayer.slatedForDeletion
  id: slatedForDeletion
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: AmbientSoundPlayer.slatedForDeletion
  fullName: AmbientSoundPlayer.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: Global.AmbientSoundPlayer.waitingToPlay
  commentId: F:Global.AmbientSoundPlayer.waitingToPlay
  id: waitingToPlay
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: waitingToPlay
  nameWithType: AmbientSoundPlayer.waitingToPlay
  fullName: AmbientSoundPlayer.waitingToPlay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.waitingToPlay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool waitingToPlay
    return:
      type: System.Boolean
    content.vb: Public waitingToPlay As Boolean
- uid: Global.AmbientSoundPlayer.rippleSoundPlayer
  commentId: F:Global.AmbientSoundPlayer.rippleSoundPlayer
  id: rippleSoundPlayer
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: rippleSoundPlayer
  nameWithType: AmbientSoundPlayer.rippleSoundPlayer
  fullName: AmbientSoundPlayer.rippleSoundPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSoundPlayer.rippleSoundPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rippleSoundPlayer
    return:
      type: System.Boolean
    content.vb: Public rippleSoundPlayer As Boolean
- uid: Global.AmbientSoundPlayer.#ctor(VirtualMicrophone,AmbientSound)
  commentId: M:Global.AmbientSoundPlayer.#ctor(VirtualMicrophone,AmbientSound)
  id: '#ctor(VirtualMicrophone,AmbientSound)'
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: AmbientSoundPlayer(VirtualMicrophone, AmbientSound)
  nameWithType: AmbientSoundPlayer.AmbientSoundPlayer(VirtualMicrophone, AmbientSound)
  fullName: AmbientSoundPlayer.AmbientSoundPlayer(VirtualMicrophone, AmbientSound)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AmbientSoundPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmbientSoundPlayer(VirtualMicrophone mic, AmbientSound aSound)
    parameters:
    - id: mic
      type: Global.VirtualMicrophone
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mic</parameter>
            <parameter>M:AmbientSoundPlayer.#ctor(VirtualMicrophone,AmbientSound)</parameter>
          </include>
        </markup>
    - id: aSound
      type: Global.AmbientSound
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aSound</parameter>
            <parameter>M:AmbientSoundPlayer.#ctor(VirtualMicrophone,AmbientSound)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(mic As VirtualMicrophone, aSound As AmbientSound)
  overload: Global.AmbientSoundPlayer.#ctor*
  nameWithType.vb: AmbientSoundPlayer.New(VirtualMicrophone, AmbientSound)
  fullName.vb: AmbientSoundPlayer.New(VirtualMicrophone, AmbientSound)
  name.vb: New(VirtualMicrophone, AmbientSound)
- uid: Global.AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)
  commentId: M:Global.AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)
  id: DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: DrawUpdate(float, float, Vector2)
  nameWithType: AmbientSoundPlayer.DrawUpdate(float, float, Vector2)
  fullName: AmbientSoundPlayer.DrawUpdate(float, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawUpdate(float timeStacker, float timeSpeed, Vector2 currentListenerPos)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeSpeed</parameter>
            <parameter>M:AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: currentListenerPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currentListenerPos</parameter>
            <parameter>M:AmbientSoundPlayer.DrawUpdate(System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawUpdate(timeStacker As Single, timeSpeed As Single, currentListenerPos As Vector2)
  overload: Global.AmbientSoundPlayer.DrawUpdate*
  nameWithType.vb: AmbientSoundPlayer.DrawUpdate(Single, Single, Vector2)
  fullName.vb: AmbientSoundPlayer.DrawUpdate(Single, Single, UnityEngine.Vector2)
  name.vb: DrawUpdate(Single, Single, Vector2)
- uid: Global.AmbientSoundPlayer.SetLowPassCutOff(System.Single)
  commentId: M:Global.AmbientSoundPlayer.SetLowPassCutOff(System.Single)
  id: SetLowPassCutOff(System.Single)
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: SetLowPassCutOff(float)
  nameWithType: AmbientSoundPlayer.SetLowPassCutOff(float)
  fullName: AmbientSoundPlayer.SetLowPassCutOff(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AmbientSoundPlayer.SetLowPassCutOff(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetLowPassCutOff(float effect)
    parameters:
    - id: effect
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>effect</parameter>
            <parameter>M:AmbientSoundPlayer.SetLowPassCutOff(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetLowPassCutOff(effect As Single)
  overload: Global.AmbientSoundPlayer.SetLowPassCutOff*
  nameWithType.vb: AmbientSoundPlayer.SetLowPassCutOff(Single)
  fullName.vb: AmbientSoundPlayer.SetLowPassCutOff(Single)
  name.vb: SetLowPassCutOff(Single)
- uid: Global.AmbientSoundPlayer.Destroy
  commentId: M:Global.AmbientSoundPlayer.Destroy
  id: Destroy
  parent: Global.AmbientSoundPlayer
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: AmbientSoundPlayer.Destroy()
  fullName: AmbientSoundPlayer.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AmbientSoundPlayer.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: Global.AmbientSoundPlayer.Destroy*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.VirtualMicrophone
  commentId: T:Global.VirtualMicrophone
  isExternal: true
  href: VirtualMicrophone.html
  name: VirtualMicrophone
  nameWithType: VirtualMicrophone
  fullName: VirtualMicrophone
- uid: Global.AmbientSound
  commentId: T:Global.AmbientSound
  isExternal: true
  href: AmbientSound.html
  name: AmbientSound
  nameWithType: AmbientSound
  fullName: AmbientSound
- uid: UnityEngine.AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: UnityEngine.AudioClip
- uid: UnityEngine.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: UnityEngine.AudioSource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AmbientSoundPlayer.#ctor*
  commentId: Overload:Global.AmbientSoundPlayer.#ctor
  isExternal: true
  href: Global.AmbientSoundPlayer.html#AmbientSoundPlayer__ctor_VirtualMicrophone_AmbientSound_
  name: AmbientSoundPlayer
  nameWithType: AmbientSoundPlayer.AmbientSoundPlayer
  fullName: AmbientSoundPlayer.AmbientSoundPlayer
  nameWithType.vb: AmbientSoundPlayer.New
  fullName.vb: AmbientSoundPlayer.New
  name.vb: New
- uid: Global.AmbientSoundPlayer.DrawUpdate*
  commentId: Overload:Global.AmbientSoundPlayer.DrawUpdate
  isExternal: true
  href: Global.AmbientSoundPlayer.html#AmbientSoundPlayer_DrawUpdate_System_Single_System_Single_UnityEngine_Vector2_
  name: DrawUpdate
  nameWithType: AmbientSoundPlayer.DrawUpdate
  fullName: AmbientSoundPlayer.DrawUpdate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.AmbientSoundPlayer.SetLowPassCutOff*
  commentId: Overload:Global.AmbientSoundPlayer.SetLowPassCutOff
  isExternal: true
  href: Global.AmbientSoundPlayer.html#AmbientSoundPlayer_SetLowPassCutOff_System_Single_
  name: SetLowPassCutOff
  nameWithType: AmbientSoundPlayer.SetLowPassCutOff
  fullName: AmbientSoundPlayer.SetLowPassCutOff
- uid: Global.AmbientSoundPlayer.Destroy*
  commentId: Overload:Global.AmbientSoundPlayer.Destroy
  isExternal: true
  href: Global.AmbientSoundPlayer.html#AmbientSoundPlayer_Destroy
  name: Destroy
  nameWithType: AmbientSoundPlayer.Destroy
  fullName: AmbientSoundPlayer.Destroy
