### YamlMime:ManagedReference
items:
- uid: Global.IOwnMycelia
  commentId: T:Global.IOwnMycelia
  id: IOwnMycelia
  parent: Global
  children:
  - Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  - Global.IOwnMycelia.OwnerRoom
  - Global.IOwnMycelia.ResetDir(System.Int32)
  langs:
  - csharp
  - vb
  name: IOwnMycelia
  nameWithType: IOwnMycelia
  fullName: IOwnMycelia
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:IOwnMycelia</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface IOwnMycelia
    content.vb: Public Interface IOwnMycelia
- uid: Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  commentId: M:Global.IOwnMycelia.ConnectionPos(System.Int32,System.Single)
  id: ConnectionPos(System.Int32,System.Single)
  parent: Global.IOwnMycelia
  langs:
  - csharp
  - vb
  name: ConnectionPos(int, float)
  nameWithType: IOwnMycelia.ConnectionPos(int, float)
  fullName: IOwnMycelia.ConnectionPos(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IOwnMycelia.ConnectionPos(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 ConnectionPos(int index, float timeStacker)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IOwnMycelia.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:IOwnMycelia.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IOwnMycelia.ConnectionPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Function ConnectionPos(index As Integer, timeStacker As Single) As Vector2
  overload: Global.IOwnMycelia.ConnectionPos*
  nameWithType.vb: IOwnMycelia.ConnectionPos(Integer, Single)
  fullName.vb: IOwnMycelia.ConnectionPos(Integer, Single)
  name.vb: ConnectionPos(Integer, Single)
- uid: Global.IOwnMycelia.ResetDir(System.Int32)
  commentId: M:Global.IOwnMycelia.ResetDir(System.Int32)
  id: ResetDir(System.Int32)
  parent: Global.IOwnMycelia
  langs:
  - csharp
  - vb
  name: ResetDir(int)
  nameWithType: IOwnMycelia.ResetDir(int)
  fullName: IOwnMycelia.ResetDir(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IOwnMycelia.ResetDir(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 ResetDir(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:IOwnMycelia.ResetDir(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IOwnMycelia.ResetDir(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Function ResetDir(index As Integer) As Vector2
  overload: Global.IOwnMycelia.ResetDir*
  nameWithType.vb: IOwnMycelia.ResetDir(Integer)
  fullName.vb: IOwnMycelia.ResetDir(Integer)
  name.vb: ResetDir(Integer)
- uid: Global.IOwnMycelia.OwnerRoom
  commentId: P:Global.IOwnMycelia.OwnerRoom
  id: OwnerRoom
  parent: Global.IOwnMycelia
  langs:
  - csharp
  - vb
  name: OwnerRoom
  nameWithType: IOwnMycelia.OwnerRoom
  fullName: IOwnMycelia.OwnerRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:IOwnMycelia.OwnerRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Room OwnerRoom { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: ReadOnly Property OwnerRoom As Room
  overload: Global.IOwnMycelia.OwnerRoom*
references:
- uid: Global
- uid: Global.IOwnMycelia.ConnectionPos*
  commentId: Overload:Global.IOwnMycelia.ConnectionPos
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_ConnectionPos_System_Int32_System_Single_
  name: ConnectionPos
  nameWithType: IOwnMycelia.ConnectionPos
  fullName: IOwnMycelia.ConnectionPos
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.IOwnMycelia.ResetDir*
  commentId: Overload:Global.IOwnMycelia.ResetDir
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_ResetDir_System_Int32_
  name: ResetDir
  nameWithType: IOwnMycelia.ResetDir
  fullName: IOwnMycelia.ResetDir
- uid: Global.IOwnMycelia.OwnerRoom*
  commentId: Overload:Global.IOwnMycelia.OwnerRoom
  isExternal: true
  href: Global.IOwnMycelia.html#IOwnMycelia_OwnerRoom
  name: OwnerRoom
  nameWithType: IOwnMycelia.OwnerRoom
  fullName: IOwnMycelia.OwnerRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
