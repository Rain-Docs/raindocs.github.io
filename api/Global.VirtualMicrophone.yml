### YamlMime:ManagedReference
items:
- uid: Global.VirtualMicrophone
  commentId: T:Global.VirtualMicrophone
  id: VirtualMicrophone
  parent: Global
  children:
  - Global.VirtualMicrophone.#ctor(RoomCamera)
  - Global.VirtualMicrophone.AllQuiet
  - Global.VirtualMicrophone.DrawUpdate(System.Single,System.Single)
  - Global.VirtualMicrophone.GetSoundData(SoundID,System.Int32)
  - Global.VirtualMicrophone.InWorldSoundsVolumeGoal
  - Global.VirtualMicrophone.Log(System.String)
  - Global.VirtualMicrophone.NewRoom(Room)
  - Global.VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)
  - Global.VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  - Global.VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)
  - Global.VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  - Global.VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  - Global.VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  - Global.VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)
  - Global.VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  - Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)
  - Global.VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  - Global.VirtualMicrophone.Update
  - Global.VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  - Global.VirtualMicrophone.ambientSoundPlayers
  - Global.VirtualMicrophone.camera
  - Global.VirtualMicrophone.deafContribution
  - Global.VirtualMicrophone.dopplerBlock
  - Global.VirtualMicrophone.globalSoundMuffle
  - Global.VirtualMicrophone.inWorldSoundsVolume
  - Global.VirtualMicrophone.listenerPoint
  - Global.VirtualMicrophone.rippleDimension
  - Global.VirtualMicrophone.ripplePlayer
  - Global.VirtualMicrophone.room
  - Global.VirtualMicrophone.soundLoader
  - Global.VirtualMicrophone.soundObjects
  - Global.VirtualMicrophone.underWater
  - Global.VirtualMicrophone.volumeGroups
  - Global.VirtualMicrophone.warpTransition
  langs:
  - csharp
  - vb
  name: VirtualMicrophone
  nameWithType: VirtualMicrophone
  fullName: VirtualMicrophone
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:VirtualMicrophone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class VirtualMicrophone
    content.vb: Public Class VirtualMicrophone
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.VirtualMicrophone.camera
  commentId: F:Global.VirtualMicrophone.camera
  id: camera
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: camera
  nameWithType: VirtualMicrophone.camera
  fullName: VirtualMicrophone.camera
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.camera</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomCamera camera
    return:
      type: Global.RoomCamera
    content.vb: Public camera As RoomCamera
- uid: Global.VirtualMicrophone.soundLoader
  commentId: F:Global.VirtualMicrophone.soundLoader
  id: soundLoader
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: soundLoader
  nameWithType: VirtualMicrophone.soundLoader
  fullName: VirtualMicrophone.soundLoader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.soundLoader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader soundLoader
    return:
      type: Global.SoundLoader
    content.vb: Public soundLoader As SoundLoader
- uid: Global.VirtualMicrophone.soundObjects
  commentId: F:Global.VirtualMicrophone.soundObjects
  id: soundObjects
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: soundObjects
  nameWithType: VirtualMicrophone.soundObjects
  fullName: VirtualMicrophone.soundObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.soundObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<VirtualMicrophone.SoundObject> soundObjects
    return:
      type: System.Collections.Generic.List{VirtualMicrophone.SoundObject}
    content.vb: Public soundObjects As List(Of VirtualMicrophone.SoundObject)
- uid: Global.VirtualMicrophone.dopplerBlock
  commentId: F:Global.VirtualMicrophone.dopplerBlock
  id: dopplerBlock
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: dopplerBlock
  nameWithType: VirtualMicrophone.dopplerBlock
  fullName: VirtualMicrophone.dopplerBlock
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.dopplerBlock</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dopplerBlock
    return:
      type: System.Single
    content.vb: Public dopplerBlock As Single
- uid: Global.VirtualMicrophone.ambientSoundPlayers
  commentId: F:Global.VirtualMicrophone.ambientSoundPlayers
  id: ambientSoundPlayers
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: ambientSoundPlayers
  nameWithType: VirtualMicrophone.ambientSoundPlayers
  fullName: VirtualMicrophone.ambientSoundPlayers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.ambientSoundPlayers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AmbientSoundPlayer> ambientSoundPlayers
    return:
      type: System.Collections.Generic.List{AmbientSoundPlayer}
    content.vb: Public ambientSoundPlayers As List(Of AmbientSoundPlayer)
- uid: Global.VirtualMicrophone.ripplePlayer
  commentId: F:Global.VirtualMicrophone.ripplePlayer
  id: ripplePlayer
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: ripplePlayer
  nameWithType: VirtualMicrophone.ripplePlayer
  fullName: VirtualMicrophone.ripplePlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.ripplePlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmbientSoundPlayer ripplePlayer
    return:
      type: Global.AmbientSoundPlayer
    content.vb: Public ripplePlayer As AmbientSoundPlayer
- uid: Global.VirtualMicrophone.volumeGroups
  commentId: F:Global.VirtualMicrophone.volumeGroups
  id: volumeGroups
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: volumeGroups
  nameWithType: VirtualMicrophone.volumeGroups
  fullName: VirtualMicrophone.volumeGroups
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.volumeGroups</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] volumeGroups
    return:
      type: System.Single[]
    content.vb: Public volumeGroups As Single()
- uid: Global.VirtualMicrophone.inWorldSoundsVolume
  commentId: F:Global.VirtualMicrophone.inWorldSoundsVolume
  id: inWorldSoundsVolume
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: inWorldSoundsVolume
  nameWithType: VirtualMicrophone.inWorldSoundsVolume
  fullName: VirtualMicrophone.inWorldSoundsVolume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.inWorldSoundsVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float inWorldSoundsVolume
    return:
      type: System.Single
    content.vb: Public inWorldSoundsVolume As Single
- uid: Global.VirtualMicrophone.deafContribution
  commentId: F:Global.VirtualMicrophone.deafContribution
  id: deafContribution
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: deafContribution
  nameWithType: VirtualMicrophone.deafContribution
  fullName: VirtualMicrophone.deafContribution
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.deafContribution</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deafContribution
    return:
      type: System.Single
    content.vb: Public deafContribution As Single
- uid: Global.VirtualMicrophone.underWater
  commentId: F:Global.VirtualMicrophone.underWater
  id: underWater
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: underWater
  nameWithType: VirtualMicrophone.underWater
  fullName: VirtualMicrophone.underWater
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.underWater</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float underWater
    return:
      type: System.Single
    content.vb: Public underWater As Single
- uid: Global.VirtualMicrophone.warpTransition
  commentId: F:Global.VirtualMicrophone.warpTransition
  id: warpTransition
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: warpTransition
  nameWithType: VirtualMicrophone.warpTransition
  fullName: VirtualMicrophone.warpTransition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.warpTransition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float warpTransition
    return:
      type: System.Single
    content.vb: Public warpTransition As Single
- uid: Global.VirtualMicrophone.rippleDimension
  commentId: F:Global.VirtualMicrophone.rippleDimension
  id: rippleDimension
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: rippleDimension
  nameWithType: VirtualMicrophone.rippleDimension
  fullName: VirtualMicrophone.rippleDimension
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.rippleDimension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rippleDimension
    return:
      type: System.Single
    content.vb: Public rippleDimension As Single
- uid: Global.VirtualMicrophone.globalSoundMuffle
  commentId: F:Global.VirtualMicrophone.globalSoundMuffle
  id: globalSoundMuffle
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: globalSoundMuffle
  nameWithType: VirtualMicrophone.globalSoundMuffle
  fullName: VirtualMicrophone.globalSoundMuffle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VirtualMicrophone.globalSoundMuffle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float globalSoundMuffle
    return:
      type: System.Single
    content.vb: Public globalSoundMuffle As Single
- uid: Global.VirtualMicrophone.#ctor(RoomCamera)
  commentId: M:Global.VirtualMicrophone.#ctor(RoomCamera)
  id: '#ctor(RoomCamera)'
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: VirtualMicrophone(RoomCamera)
  nameWithType: VirtualMicrophone.VirtualMicrophone(RoomCamera)
  fullName: VirtualMicrophone.VirtualMicrophone(RoomCamera)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>VirtualMicrophone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VirtualMicrophone(RoomCamera camera)
    parameters:
    - id: camera
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camera</parameter>
            <parameter>M:VirtualMicrophone.#ctor(RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(camera As RoomCamera)
  overload: Global.VirtualMicrophone.#ctor*
  nameWithType.vb: VirtualMicrophone.New(RoomCamera)
  fullName.vb: VirtualMicrophone.New(RoomCamera)
  name.vb: New(RoomCamera)
- uid: Global.VirtualMicrophone.AllQuiet
  commentId: M:Global.VirtualMicrophone.AllQuiet
  id: AllQuiet
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: AllQuiet()
  nameWithType: VirtualMicrophone.AllQuiet()
  fullName: VirtualMicrophone.AllQuiet()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.AllQuiet</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AllQuiet()
    content.vb: Public Sub AllQuiet()
  overload: Global.VirtualMicrophone.AllQuiet*
- uid: Global.VirtualMicrophone.NewRoom(Room)
  commentId: M:Global.VirtualMicrophone.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: VirtualMicrophone.NewRoom(Room)
  fullName: VirtualMicrophone.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewRoom(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:VirtualMicrophone.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewRoom(room As Room)
  overload: Global.VirtualMicrophone.NewRoom*
- uid: Global.VirtualMicrophone.Update
  commentId: M:Global.VirtualMicrophone.Update
  id: Update
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: VirtualMicrophone.Update()
  fullName: VirtualMicrophone.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.VirtualMicrophone.Update*
- uid: Global.VirtualMicrophone.DrawUpdate(System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.DrawUpdate(System.Single,System.Single)
  id: DrawUpdate(System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: DrawUpdate(float, float)
  nameWithType: VirtualMicrophone.DrawUpdate(float, float)
  fullName: VirtualMicrophone.DrawUpdate(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.DrawUpdate(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawUpdate(float timeStacker, float timeSpeed)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:VirtualMicrophone.DrawUpdate(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeSpeed</parameter>
            <parameter>M:VirtualMicrophone.DrawUpdate(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawUpdate(timeStacker As Single, timeSpeed As Single)
  overload: Global.VirtualMicrophone.DrawUpdate*
  nameWithType.vb: VirtualMicrophone.DrawUpdate(Single, Single)
  fullName.vb: VirtualMicrophone.DrawUpdate(Single, Single)
  name.vb: DrawUpdate(Single, Single)
- uid: Global.VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)
  commentId: M:Global.VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)
  id: PanFromPoint(UnityEngine.Vector2,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PanFromPoint(Vector2, float)
  nameWithType: VirtualMicrophone.PanFromPoint(Vector2, float)
  fullName: VirtualMicrophone.PanFromPoint(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float PanFromPoint(Vector2 ps, float timeStacker)
    parameters:
    - id: ps
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VirtualMicrophone.PanFromPoint(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PanFromPoint(ps As Vector2, timeStacker As Single) As Single
  overload: Global.VirtualMicrophone.PanFromPoint*
  nameWithType.vb: VirtualMicrophone.PanFromPoint(Vector2, Single)
  fullName.vb: VirtualMicrophone.PanFromPoint(UnityEngine.Vector2, Single)
  name.vb: PanFromPoint(Vector2, Single)
- uid: Global.VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  id: VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: VolFromPoint(Vector2, float, float)
  nameWithType: VirtualMicrophone.VolFromPoint(Vector2, float, float)
  fullName: VirtualMicrophone.VolFromPoint(UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float VolFromPoint(Vector2 ps, float timeStacker, float rangeFac)
    parameters:
    - id: ps
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rangeFac
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rangeFac</parameter>
            <parameter>M:VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VirtualMicrophone.VolFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function VolFromPoint(ps As Vector2, timeStacker As Single, rangeFac As Single) As Single
  overload: Global.VirtualMicrophone.VolFromPoint*
  nameWithType.vb: VirtualMicrophone.VolFromPoint(Vector2, Single, Single)
  fullName.vb: VirtualMicrophone.VolFromPoint(UnityEngine.Vector2, Single, Single)
  name.vb: VolFromPoint(Vector2, Single, Single)
- uid: Global.VirtualMicrophone.Log(System.String)
  commentId: M:Global.VirtualMicrophone.Log(System.String)
  id: Log(System.String)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: Log(string)
  nameWithType: VirtualMicrophone.Log(string)
  fullName: VirtualMicrophone.Log(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.Log(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Log(string strng)
    parameters:
    - id: strng
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>strng</parameter>
            <parameter>M:VirtualMicrophone.Log(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Log(strng As String)
  overload: Global.VirtualMicrophone.Log*
  nameWithType.vb: VirtualMicrophone.Log(String)
  fullName.vb: VirtualMicrophone.Log(String)
  name.vb: Log(String)
- uid: Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)
  id: PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, float, float, float)
  nameWithType: VirtualMicrophone.PlaySound(SoundID, float, float, float)
  fullName: VirtualMicrophone.PlaySound(SoundID, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, float pan, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pan As Single, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlaySound*
  nameWithType.vb: VirtualMicrophone.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: VirtualMicrophone.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
- uid: Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)
  commentId: M:Global.VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)
  id: PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, float, float, float, int)
  nameWithType: VirtualMicrophone.PlaySound(SoundID, float, float, float, int)
  fullName: VirtualMicrophone.PlaySound(SoundID, float, float, float, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, float pan, float vol, float pitch, int volumeGroup)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: volumeGroup
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>volumeGroup</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,System.Single,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pan As Single, vol As Single, pitch As Single, volumeGroup As Integer)
  overload: Global.VirtualMicrophone.PlaySound*
  nameWithType.vb: VirtualMicrophone.PlaySound(SoundID, Single, Single, Single, Integer)
  fullName.vb: VirtualMicrophone.PlaySound(SoundID, Single, Single, Single, Integer)
  name.vb: PlaySound(SoundID, Single, Single, Single, Integer)
- uid: Global.VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  id: PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, Vector2, float, float)
  nameWithType: VirtualMicrophone.PlaySound(SoundID, Vector2, float, float)
  fullName: VirtualMicrophone.PlaySound(SoundID, UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, Vector2 pos, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pos As Vector2, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlaySound*
  nameWithType.vb: VirtualMicrophone.PlaySound(SoundID, Vector2, Single, Single)
  fullName.vb: VirtualMicrophone.PlaySound(SoundID, UnityEngine.Vector2, Single, Single)
  name.vb: PlaySound(SoundID, Vector2, Single, Single)
- uid: Global.VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  commentId: M:Global.VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  id: PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  nameWithType: VirtualMicrophone.PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  fullName: VirtualMicrophone.PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, PositionedSoundEmitter controller, bool loop, float vol, float pitch, bool randomStartPosition)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: controller
      type: Global.PositionedSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>controller</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: randomStartPosition
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>randomStartPosition</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, controller As PositionedSoundEmitter, [loop] As Boolean, vol As Single, pitch As Single, randomStartPosition As Boolean)
  overload: Global.VirtualMicrophone.PlaySound*
  nameWithType.vb: VirtualMicrophone.PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
  fullName.vb: VirtualMicrophone.PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
  name.vb: PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
- uid: Global.VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)
  commentId: M:Global.VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)
  id: PlaySound(SoundID,GenericLoopEmitter)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, GenericLoopEmitter)
  nameWithType: VirtualMicrophone.PlaySound(SoundID, GenericLoopEmitter)
  fullName: VirtualMicrophone.PlaySound(SoundID, GenericLoopEmitter)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, GenericLoopEmitter emitter)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)</parameter>
          </include>
        </markup>
    - id: emitter
      type: Global.GenericLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emitter</parameter>
            <parameter>M:VirtualMicrophone.PlaySound(SoundID,GenericLoopEmitter)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, emitter As GenericLoopEmitter)
  overload: Global.VirtualMicrophone.PlaySound*
- uid: Global.VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  id: PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, float, float, float)
  nameWithType: VirtualMicrophone.PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, float, float, float)
  fullName: VirtualMicrophone.PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayDisembodiedLoop(SoundID soundId, DisembodiedLoopEmitter emitter, float pan, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: emitter
      type: Global.DisembodiedLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emitter</parameter>
            <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlayDisembodiedLoop(SoundID,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayDisembodiedLoop(soundId As SoundID, emitter As DisembodiedLoopEmitter, pan As Single, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlayDisembodiedLoop*
  nameWithType.vb: VirtualMicrophone.PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, Single, Single, Single)
  fullName.vb: VirtualMicrophone.PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, Single, Single, Single)
  name.vb: PlayDisembodiedLoop(SoundID, DisembodiedLoopEmitter, Single, Single, Single)
- uid: Global.VirtualMicrophone.GetSoundData(SoundID,System.Int32)
  commentId: M:Global.VirtualMicrophone.GetSoundData(SoundID,System.Int32)
  id: GetSoundData(SoundID,System.Int32)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: GetSoundData(SoundID, int)
  nameWithType: VirtualMicrophone.GetSoundData(SoundID, int)
  fullName: VirtualMicrophone.GetSoundData(SoundID, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.GetSoundData(SoundID,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader.SoundData GetSoundData(SoundID soundId, int index)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:VirtualMicrophone.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:VirtualMicrophone.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.SoundLoader.SoundData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VirtualMicrophone.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetSoundData(soundId As SoundID, index As Integer) As SoundLoader.SoundData
  overload: Global.VirtualMicrophone.GetSoundData*
  nameWithType.vb: VirtualMicrophone.GetSoundData(SoundID, Integer)
  fullName.vb: VirtualMicrophone.GetSoundData(SoundID, Integer)
  name.vb: GetSoundData(SoundID, Integer)
- uid: Global.VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  id: PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlayCustomSound(string, Vector2, float, float)
  nameWithType: VirtualMicrophone.PlayCustomSound(string, Vector2, float, float)
  fullName: VirtualMicrophone.PlayCustomSound(string, UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomSound(string soundName, Vector2 pos, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomSound(soundName As String, pos As Vector2, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlayCustomSound*
  nameWithType.vb: VirtualMicrophone.PlayCustomSound(String, Vector2, Single, Single)
  fullName.vb: VirtualMicrophone.PlayCustomSound(String, UnityEngine.Vector2, Single, Single)
  name.vb: PlayCustomSound(String, Vector2, Single, Single)
- uid: Global.VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  id: PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlayCustomSoundDisembodied(string, float, float, float)
  nameWithType: VirtualMicrophone.PlayCustomSoundDisembodied(string, float, float, float)
  fullName: VirtualMicrophone.PlayCustomSoundDisembodied(string, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomSoundDisembodied(string soundName, float pan, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomSoundDisembodied(soundName As String, pan As Single, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlayCustomSoundDisembodied*
  nameWithType.vb: VirtualMicrophone.PlayCustomSoundDisembodied(String, Single, Single, Single)
  fullName.vb: VirtualMicrophone.PlayCustomSoundDisembodied(String, Single, Single, Single)
  name.vb: PlayCustomSoundDisembodied(String, Single, Single, Single)
- uid: Global.VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  commentId: M:Global.VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  id: PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlayCustomDisembodiedLoop(string, DisembodiedLoopEmitter, float, float, float)
  nameWithType: VirtualMicrophone.PlayCustomDisembodiedLoop(string, DisembodiedLoopEmitter, float, float, float)
  fullName: VirtualMicrophone.PlayCustomDisembodiedLoop(string, DisembodiedLoopEmitter, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomDisembodiedLoop(string soundName, DisembodiedLoopEmitter emitter, float pan, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: emitter
      type: Global.DisembodiedLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emitter</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomDisembodiedLoop(System.String,DisembodiedLoopEmitter,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomDisembodiedLoop(soundName As String, emitter As DisembodiedLoopEmitter, pan As Single, vol As Single, pitch As Single)
  overload: Global.VirtualMicrophone.PlayCustomDisembodiedLoop*
  nameWithType.vb: VirtualMicrophone.PlayCustomDisembodiedLoop(String, DisembodiedLoopEmitter, Single, Single, Single)
  fullName.vb: VirtualMicrophone.PlayCustomDisembodiedLoop(String, DisembodiedLoopEmitter, Single, Single, Single)
  name.vb: PlayCustomDisembodiedLoop(String, DisembodiedLoopEmitter, Single, Single, Single)
- uid: Global.VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:Global.VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)
  id: PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: PlayCustomPositionedSound(string, PositionedSoundEmitter, float, float, bool, bool)
  nameWithType: VirtualMicrophone.PlayCustomPositionedSound(string, PositionedSoundEmitter, float, float, bool, bool)
  fullName: VirtualMicrophone.PlayCustomPositionedSound(string, PositionedSoundEmitter, float, float, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomPositionedSound(string soundName, PositionedSoundEmitter controller, float vol, float pitch, bool loop, bool randomPosition)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: controller
      type: Global.PositionedSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>controller</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: randomPosition
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>randomPosition</parameter>
            <parameter>M:VirtualMicrophone.PlayCustomPositionedSound(System.String,PositionedSoundEmitter,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomPositionedSound(soundName As String, controller As PositionedSoundEmitter, vol As Single, pitch As Single, [loop] As Boolean, randomPosition As Boolean)
  overload: Global.VirtualMicrophone.PlayCustomPositionedSound*
  nameWithType.vb: VirtualMicrophone.PlayCustomPositionedSound(String, PositionedSoundEmitter, Single, Single, Boolean, Boolean)
  fullName.vb: VirtualMicrophone.PlayCustomPositionedSound(String, PositionedSoundEmitter, Single, Single, Boolean, Boolean)
  name.vb: PlayCustomPositionedSound(String, PositionedSoundEmitter, Single, Single, Boolean, Boolean)
- uid: Global.VirtualMicrophone.room
  commentId: P:Global.VirtualMicrophone.room
  id: room
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: room
  nameWithType: VirtualMicrophone.room
  fullName: VirtualMicrophone.room
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VirtualMicrophone.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: Public ReadOnly Property room As Room
  overload: Global.VirtualMicrophone.room*
- uid: Global.VirtualMicrophone.listenerPoint
  commentId: P:Global.VirtualMicrophone.listenerPoint
  id: listenerPoint
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: listenerPoint
  nameWithType: VirtualMicrophone.listenerPoint
  fullName: VirtualMicrophone.listenerPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VirtualMicrophone.listenerPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 listenerPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property listenerPoint As Vector2
  overload: Global.VirtualMicrophone.listenerPoint*
- uid: Global.VirtualMicrophone.InWorldSoundsVolumeGoal
  commentId: P:Global.VirtualMicrophone.InWorldSoundsVolumeGoal
  id: InWorldSoundsVolumeGoal
  parent: Global.VirtualMicrophone
  langs:
  - csharp
  - vb
  name: InWorldSoundsVolumeGoal
  nameWithType: VirtualMicrophone.InWorldSoundsVolumeGoal
  fullName: VirtualMicrophone.InWorldSoundsVolumeGoal
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VirtualMicrophone.InWorldSoundsVolumeGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float InWorldSoundsVolumeGoal { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property InWorldSoundsVolumeGoal As Single
  overload: Global.VirtualMicrophone.InWorldSoundsVolumeGoal*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.SoundLoader
  commentId: T:Global.SoundLoader
  isExternal: true
  href: SoundLoader.html
  name: SoundLoader
  nameWithType: SoundLoader
  fullName: SoundLoader
- uid: System.Collections.Generic.List{VirtualMicrophone.SoundObject}
  commentId: T:System.Collections.Generic.List{VirtualMicrophone.SoundObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<VirtualMicrophone.SoundObject>
  nameWithType: List<VirtualMicrophone.SoundObject>
  fullName: System.Collections.Generic.List<VirtualMicrophone.SoundObject>
  nameWithType.vb: List(Of VirtualMicrophone.SoundObject)
  fullName.vb: System.Collections.Generic.List(Of VirtualMicrophone.SoundObject)
  name.vb: List(Of VirtualMicrophone.SoundObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.VirtualMicrophone
    name: VirtualMicrophone
    isExternal: true
    href: VirtualMicrophone.html
  - name: .
  - uid: Global.VirtualMicrophone.SoundObject
    name: SoundObject
    isExternal: true
    href: VirtualMicrophone.SoundObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.VirtualMicrophone
    name: VirtualMicrophone
    isExternal: true
    href: VirtualMicrophone.html
  - name: .
  - uid: Global.VirtualMicrophone.SoundObject
    name: SoundObject
    isExternal: true
    href: VirtualMicrophone.SoundObject.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{AmbientSoundPlayer}
  commentId: T:System.Collections.Generic.List{AmbientSoundPlayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AmbientSoundPlayer>
  nameWithType: List<AmbientSoundPlayer>
  fullName: System.Collections.Generic.List<AmbientSoundPlayer>
  nameWithType.vb: List(Of AmbientSoundPlayer)
  fullName.vb: System.Collections.Generic.List(Of AmbientSoundPlayer)
  name.vb: List(Of AmbientSoundPlayer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AmbientSoundPlayer
    name: AmbientSoundPlayer
    isExternal: true
    href: AmbientSoundPlayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AmbientSoundPlayer
    name: AmbientSoundPlayer
    isExternal: true
    href: AmbientSoundPlayer.html
  - name: )
- uid: Global.AmbientSoundPlayer
  commentId: T:Global.AmbientSoundPlayer
  isExternal: true
  href: AmbientSoundPlayer.html
  name: AmbientSoundPlayer
  nameWithType: AmbientSoundPlayer
  fullName: AmbientSoundPlayer
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Global.VirtualMicrophone.#ctor*
  commentId: Overload:Global.VirtualMicrophone.#ctor
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone__ctor_RoomCamera_
  name: VirtualMicrophone
  nameWithType: VirtualMicrophone.VirtualMicrophone
  fullName: VirtualMicrophone.VirtualMicrophone
  nameWithType.vb: VirtualMicrophone.New
  fullName.vb: VirtualMicrophone.New
  name.vb: New
- uid: Global.VirtualMicrophone.AllQuiet*
  commentId: Overload:Global.VirtualMicrophone.AllQuiet
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_AllQuiet
  name: AllQuiet
  nameWithType: VirtualMicrophone.AllQuiet
  fullName: VirtualMicrophone.AllQuiet
- uid: Global.VirtualMicrophone.NewRoom*
  commentId: Overload:Global.VirtualMicrophone.NewRoom
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_NewRoom_Room_
  name: NewRoom
  nameWithType: VirtualMicrophone.NewRoom
  fullName: VirtualMicrophone.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.VirtualMicrophone.Update*
  commentId: Overload:Global.VirtualMicrophone.Update
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_Update
  name: Update
  nameWithType: VirtualMicrophone.Update
  fullName: VirtualMicrophone.Update
- uid: Global.VirtualMicrophone.DrawUpdate*
  commentId: Overload:Global.VirtualMicrophone.DrawUpdate
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_DrawUpdate_System_Single_System_Single_
  name: DrawUpdate
  nameWithType: VirtualMicrophone.DrawUpdate
  fullName: VirtualMicrophone.DrawUpdate
- uid: Global.VirtualMicrophone.PanFromPoint*
  commentId: Overload:Global.VirtualMicrophone.PanFromPoint
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PanFromPoint_UnityEngine_Vector2_System_Single_
  name: PanFromPoint
  nameWithType: VirtualMicrophone.PanFromPoint
  fullName: VirtualMicrophone.PanFromPoint
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.VirtualMicrophone.VolFromPoint*
  commentId: Overload:Global.VirtualMicrophone.VolFromPoint
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_VolFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  name: VolFromPoint
  nameWithType: VirtualMicrophone.VolFromPoint
  fullName: VirtualMicrophone.VolFromPoint
- uid: Global.VirtualMicrophone.Log*
  commentId: Overload:Global.VirtualMicrophone.Log
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_Log_System_String_
  name: Log
  nameWithType: VirtualMicrophone.Log
  fullName: VirtualMicrophone.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.VirtualMicrophone.PlaySound*
  commentId: Overload:Global.VirtualMicrophone.PlaySound
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlaySound_SoundID_System_Single_System_Single_System_Single_
  name: PlaySound
  nameWithType: VirtualMicrophone.PlaySound
  fullName: VirtualMicrophone.PlaySound
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PositionedSoundEmitter
  commentId: T:Global.PositionedSoundEmitter
  isExternal: true
  href: PositionedSoundEmitter.html
  name: PositionedSoundEmitter
  nameWithType: PositionedSoundEmitter
  fullName: PositionedSoundEmitter
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.GenericLoopEmitter
  commentId: T:Global.GenericLoopEmitter
  isExternal: true
  href: GenericLoopEmitter.html
  name: GenericLoopEmitter
  nameWithType: GenericLoopEmitter
  fullName: GenericLoopEmitter
- uid: Global.VirtualMicrophone.PlayDisembodiedLoop*
  commentId: Overload:Global.VirtualMicrophone.PlayDisembodiedLoop
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlayDisembodiedLoop_SoundID_DisembodiedLoopEmitter_System_Single_System_Single_System_Single_
  name: PlayDisembodiedLoop
  nameWithType: VirtualMicrophone.PlayDisembodiedLoop
  fullName: VirtualMicrophone.PlayDisembodiedLoop
- uid: Global.DisembodiedLoopEmitter
  commentId: T:Global.DisembodiedLoopEmitter
  isExternal: true
  href: DisembodiedLoopEmitter.html
  name: DisembodiedLoopEmitter
  nameWithType: DisembodiedLoopEmitter
  fullName: DisembodiedLoopEmitter
- uid: Global.VirtualMicrophone.GetSoundData*
  commentId: Overload:Global.VirtualMicrophone.GetSoundData
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_GetSoundData_SoundID_System_Int32_
  name: GetSoundData
  nameWithType: VirtualMicrophone.GetSoundData
  fullName: VirtualMicrophone.GetSoundData
- uid: Global.SoundLoader.SoundData
  commentId: T:Global.SoundLoader.SoundData
  isExternal: true
  href: SoundLoader.html
  name: SoundLoader.SoundData
  nameWithType: SoundLoader.SoundData
  fullName: SoundLoader.SoundData
  spec.csharp:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
  spec.vb:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
- uid: Global.VirtualMicrophone.PlayCustomSound*
  commentId: Overload:Global.VirtualMicrophone.PlayCustomSound
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlayCustomSound_System_String_UnityEngine_Vector2_System_Single_System_Single_
  name: PlayCustomSound
  nameWithType: VirtualMicrophone.PlayCustomSound
  fullName: VirtualMicrophone.PlayCustomSound
- uid: Global.VirtualMicrophone.PlayCustomSoundDisembodied*
  commentId: Overload:Global.VirtualMicrophone.PlayCustomSoundDisembodied
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlayCustomSoundDisembodied_System_String_System_Single_System_Single_System_Single_
  name: PlayCustomSoundDisembodied
  nameWithType: VirtualMicrophone.PlayCustomSoundDisembodied
  fullName: VirtualMicrophone.PlayCustomSoundDisembodied
- uid: Global.VirtualMicrophone.PlayCustomDisembodiedLoop*
  commentId: Overload:Global.VirtualMicrophone.PlayCustomDisembodiedLoop
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlayCustomDisembodiedLoop_System_String_DisembodiedLoopEmitter_System_Single_System_Single_System_Single_
  name: PlayCustomDisembodiedLoop
  nameWithType: VirtualMicrophone.PlayCustomDisembodiedLoop
  fullName: VirtualMicrophone.PlayCustomDisembodiedLoop
- uid: Global.VirtualMicrophone.PlayCustomPositionedSound*
  commentId: Overload:Global.VirtualMicrophone.PlayCustomPositionedSound
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_PlayCustomPositionedSound_System_String_PositionedSoundEmitter_System_Single_System_Single_System_Boolean_System_Boolean_
  name: PlayCustomPositionedSound
  nameWithType: VirtualMicrophone.PlayCustomPositionedSound
  fullName: VirtualMicrophone.PlayCustomPositionedSound
- uid: Global.VirtualMicrophone.room*
  commentId: Overload:Global.VirtualMicrophone.room
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_room
  name: room
  nameWithType: VirtualMicrophone.room
  fullName: VirtualMicrophone.room
- uid: Global.VirtualMicrophone.listenerPoint*
  commentId: Overload:Global.VirtualMicrophone.listenerPoint
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_listenerPoint
  name: listenerPoint
  nameWithType: VirtualMicrophone.listenerPoint
  fullName: VirtualMicrophone.listenerPoint
- uid: Global.VirtualMicrophone.InWorldSoundsVolumeGoal*
  commentId: Overload:Global.VirtualMicrophone.InWorldSoundsVolumeGoal
  isExternal: true
  href: Global.VirtualMicrophone.html#VirtualMicrophone_InWorldSoundsVolumeGoal
  name: InWorldSoundsVolumeGoal
  nameWithType: VirtualMicrophone.InWorldSoundsVolumeGoal
  fullName: VirtualMicrophone.InWorldSoundsVolumeGoal
