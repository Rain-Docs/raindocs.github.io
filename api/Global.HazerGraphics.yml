### YamlMime:ManagedReference
items:
- uid: Global.HazerGraphics
  commentId: T:Global.HazerGraphics
  id: HazerGraphics
  parent: Global
  children:
  - Global.HazerGraphics.#ctor(PhysicalObject)
  - Global.HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.HazerGraphics.BodySprite
  - Global.HazerGraphics.ClosedEyeSprite
  - Global.HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.HazerGraphics.EyeDotSprite
  - Global.HazerGraphics.EyeHighLightSprite
  - Global.HazerGraphics.EyeSprite
  - Global.HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.HazerGraphics.MeshSprite
  - Global.HazerGraphics.PupilSprite
  - Global.HazerGraphics.Reset
  - Global.HazerGraphics.ScaleSprite(System.Int32)
  - Global.HazerGraphics.TentacleConPos(System.Int32,System.Single)
  - Global.HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)
  - Global.HazerGraphics.TentacleSprite(System.Int32)
  - Global.HazerGraphics.TotalSprites
  - Global.HazerGraphics.Update
  - Global.HazerGraphics.blink
  - Global.HazerGraphics.bug
  - Global.HazerGraphics.camo
  - Global.HazerGraphics.camoColor
  - Global.HazerGraphics.camoGetTo
  - Global.HazerGraphics.camoPickup
  - Global.HazerGraphics.camoPickupColor
  - Global.HazerGraphics.deadColor
  - Global.HazerGraphics.eyeColor
  - Global.HazerGraphics.eyeOpen
  - Global.HazerGraphics.lastCamo
  - Global.HazerGraphics.lastDeadColor
  - Global.HazerGraphics.lastEyeOpen
  - Global.HazerGraphics.lastLookDir
  - Global.HazerGraphics.lastPupSize
  - Global.HazerGraphics.lookAtObj
  - Global.HazerGraphics.lookDir
  - Global.HazerGraphics.lookPos
  - Global.HazerGraphics.pupGetToSize
  - Global.HazerGraphics.pupSize
  - Global.HazerGraphics.scales
  - Global.HazerGraphics.secondColor
  - Global.HazerGraphics.skinColor
  - Global.HazerGraphics.smallEyeMovements
  - Global.HazerGraphics.soundLoop
  - Global.HazerGraphics.tentacles
  langs:
  - csharp
  - vb
  name: HazerGraphics
  nameWithType: HazerGraphics
  fullName: HazerGraphics
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HazerGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class HazerGraphics : GraphicsModule, IDrawable'
    content.vb: Public Class HazerGraphics Inherits GraphicsModule Implements IDrawable
  inheritance:
  - System.Object
  - Global.GraphicsModule
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.GraphicsModule.internalContainerObjects
  - Global.GraphicsModule.bodyParts
  - Global.GraphicsModule.DEBUGLABELS
  - Global.GraphicsModule.culled
  - Global.GraphicsModule.lastCulled
  - Global.GraphicsModule.dispose
  - Global.GraphicsModule.cullRange
  - Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  - Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  - Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  - Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  - Global.GraphicsModule.BringSpritesToFront
  - Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  - Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  - Global.GraphicsModule.DeactivateRippleHybrid
  - Global.GraphicsModule.owner
  - Global.GraphicsModule.ShouldBeCulled
  - Global.GraphicsModule.rippleHybridState
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.HazerGraphics.soundLoop
  commentId: F:Global.HazerGraphics.soundLoop
  id: soundLoop
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: HazerGraphics.soundLoop
  fullName: HazerGraphics.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkDynamicSoundLoop soundLoop
    return:
      type: Global.ChunkDynamicSoundLoop
    content.vb: Public soundLoop As ChunkDynamicSoundLoop
- uid: Global.HazerGraphics.deadColor
  commentId: F:Global.HazerGraphics.deadColor
  id: deadColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: deadColor
  nameWithType: HazerGraphics.deadColor
  fullName: HazerGraphics.deadColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.deadColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deadColor
    return:
      type: System.Single
    content.vb: Public deadColor As Single
- uid: Global.HazerGraphics.lastDeadColor
  commentId: F:Global.HazerGraphics.lastDeadColor
  id: lastDeadColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lastDeadColor
  nameWithType: HazerGraphics.lastDeadColor
  fullName: HazerGraphics.lastDeadColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lastDeadColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastDeadColor
    return:
      type: System.Single
    content.vb: Public lastDeadColor As Single
- uid: Global.HazerGraphics.lookDir
  commentId: F:Global.HazerGraphics.lookDir
  id: lookDir
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lookDir
  nameWithType: HazerGraphics.lookDir
  fullName: HazerGraphics.lookDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lookDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lookDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public lookDir As Vector2
- uid: Global.HazerGraphics.lastLookDir
  commentId: F:Global.HazerGraphics.lastLookDir
  id: lastLookDir
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lastLookDir
  nameWithType: HazerGraphics.lastLookDir
  fullName: HazerGraphics.lastLookDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lastLookDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastLookDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastLookDir As Vector2
- uid: Global.HazerGraphics.eyeOpen
  commentId: F:Global.HazerGraphics.eyeOpen
  id: eyeOpen
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: eyeOpen
  nameWithType: HazerGraphics.eyeOpen
  fullName: HazerGraphics.eyeOpen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.eyeOpen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float eyeOpen
    return:
      type: System.Single
    content.vb: Public eyeOpen As Single
- uid: Global.HazerGraphics.lastEyeOpen
  commentId: F:Global.HazerGraphics.lastEyeOpen
  id: lastEyeOpen
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lastEyeOpen
  nameWithType: HazerGraphics.lastEyeOpen
  fullName: HazerGraphics.lastEyeOpen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lastEyeOpen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastEyeOpen
    return:
      type: System.Single
    content.vb: Public lastEyeOpen As Single
- uid: Global.HazerGraphics.blink
  commentId: F:Global.HazerGraphics.blink
  id: blink
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: blink
  nameWithType: HazerGraphics.blink
  fullName: HazerGraphics.blink
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.blink</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int blink
    return:
      type: System.Int32
    content.vb: Public blink As Integer
- uid: Global.HazerGraphics.tentacles
  commentId: F:Global.HazerGraphics.tentacles
  id: tentacles
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: tentacles
  nameWithType: HazerGraphics.tentacles
  fullName: HazerGraphics.tentacles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.tentacles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2[,]> tentacles
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2[0:,0:]}
    content.vb: Public tentacles As List(Of Vector2(,))
- uid: Global.HazerGraphics.skinColor
  commentId: F:Global.HazerGraphics.skinColor
  id: skinColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: skinColor
  nameWithType: HazerGraphics.skinColor
  fullName: HazerGraphics.skinColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.skinColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HSLColor skinColor
    return:
      type: Global.HSLColor
    content.vb: Public skinColor As HSLColor
- uid: Global.HazerGraphics.secondColor
  commentId: F:Global.HazerGraphics.secondColor
  id: secondColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: secondColor
  nameWithType: HazerGraphics.secondColor
  fullName: HazerGraphics.secondColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.secondColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HSLColor secondColor
    return:
      type: Global.HSLColor
    content.vb: Public secondColor As HSLColor
- uid: Global.HazerGraphics.eyeColor
  commentId: F:Global.HazerGraphics.eyeColor
  id: eyeColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: eyeColor
  nameWithType: HazerGraphics.eyeColor
  fullName: HazerGraphics.eyeColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.eyeColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HSLColor eyeColor
    return:
      type: Global.HSLColor
    content.vb: Public eyeColor As HSLColor
- uid: Global.HazerGraphics.lookAtObj
  commentId: F:Global.HazerGraphics.lookAtObj
  id: lookAtObj
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lookAtObj
  nameWithType: HazerGraphics.lookAtObj
  fullName: HazerGraphics.lookAtObj
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lookAtObj</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk lookAtObj
    return:
      type: Global.BodyChunk
    content.vb: Public lookAtObj As BodyChunk
- uid: Global.HazerGraphics.lookPos
  commentId: F:Global.HazerGraphics.lookPos
  id: lookPos
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lookPos
  nameWithType: HazerGraphics.lookPos
  fullName: HazerGraphics.lookPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lookPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lookPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lookPos As Vector2
- uid: Global.HazerGraphics.smallEyeMovements
  commentId: F:Global.HazerGraphics.smallEyeMovements
  id: smallEyeMovements
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: smallEyeMovements
  nameWithType: HazerGraphics.smallEyeMovements
  fullName: HazerGraphics.smallEyeMovements
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.smallEyeMovements</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 smallEyeMovements
    return:
      type: UnityEngine.Vector2
    content.vb: Public smallEyeMovements As Vector2
- uid: Global.HazerGraphics.pupSize
  commentId: F:Global.HazerGraphics.pupSize
  id: pupSize
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: pupSize
  nameWithType: HazerGraphics.pupSize
  fullName: HazerGraphics.pupSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.pupSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pupSize
    return:
      type: System.Single
    content.vb: Public pupSize As Single
- uid: Global.HazerGraphics.lastPupSize
  commentId: F:Global.HazerGraphics.lastPupSize
  id: lastPupSize
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lastPupSize
  nameWithType: HazerGraphics.lastPupSize
  fullName: HazerGraphics.lastPupSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lastPupSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastPupSize
    return:
      type: System.Single
    content.vb: Public lastPupSize As Single
- uid: Global.HazerGraphics.pupGetToSize
  commentId: F:Global.HazerGraphics.pupGetToSize
  id: pupGetToSize
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: pupGetToSize
  nameWithType: HazerGraphics.pupGetToSize
  fullName: HazerGraphics.pupGetToSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.pupGetToSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pupGetToSize
    return:
      type: System.Single
    content.vb: Public pupGetToSize As Single
- uid: Global.HazerGraphics.camoColor
  commentId: F:Global.HazerGraphics.camoColor
  id: camoColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: camoColor
  nameWithType: HazerGraphics.camoColor
  fullName: HazerGraphics.camoColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.camoColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color camoColor
    return:
      type: UnityEngine.Color
    content.vb: Public camoColor As Color
- uid: Global.HazerGraphics.camoPickupColor
  commentId: F:Global.HazerGraphics.camoPickupColor
  id: camoPickupColor
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: camoPickupColor
  nameWithType: HazerGraphics.camoPickupColor
  fullName: HazerGraphics.camoPickupColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.camoPickupColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color camoPickupColor
    return:
      type: UnityEngine.Color
    content.vb: Public camoPickupColor As Color
- uid: Global.HazerGraphics.camo
  commentId: F:Global.HazerGraphics.camo
  id: camo
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: camo
  nameWithType: HazerGraphics.camo
  fullName: HazerGraphics.camo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.camo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float camo
    return:
      type: System.Single
    content.vb: Public camo As Single
- uid: Global.HazerGraphics.lastCamo
  commentId: F:Global.HazerGraphics.lastCamo
  id: lastCamo
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: lastCamo
  nameWithType: HazerGraphics.lastCamo
  fullName: HazerGraphics.lastCamo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.lastCamo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastCamo
    return:
      type: System.Single
    content.vb: Public lastCamo As Single
- uid: Global.HazerGraphics.camoGetTo
  commentId: F:Global.HazerGraphics.camoGetTo
  id: camoGetTo
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: camoGetTo
  nameWithType: HazerGraphics.camoGetTo
  fullName: HazerGraphics.camoGetTo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.camoGetTo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float camoGetTo
    return:
      type: System.Single
    content.vb: Public camoGetTo As Single
- uid: Global.HazerGraphics.camoPickup
  commentId: F:Global.HazerGraphics.camoPickup
  id: camoPickup
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: camoPickup
  nameWithType: HazerGraphics.camoPickup
  fullName: HazerGraphics.camoPickup
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.camoPickup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool camoPickup
    return:
      type: System.Boolean
    content.vb: Public camoPickup As Boolean
- uid: Global.HazerGraphics.scales
  commentId: F:Global.HazerGraphics.scales
  id: scales
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: scales
  nameWithType: HazerGraphics.scales
  fullName: HazerGraphics.scales
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HazerGraphics.scales</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] scales
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public scales As Vector2()
- uid: Global.HazerGraphics.ScaleSprite(System.Int32)
  commentId: M:Global.HazerGraphics.ScaleSprite(System.Int32)
  id: ScaleSprite(System.Int32)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: ScaleSprite(int)
  nameWithType: HazerGraphics.ScaleSprite(int)
  fullName: HazerGraphics.ScaleSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.ScaleSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ScaleSprite(int s)
    parameters:
    - id: s
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:HazerGraphics.ScaleSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HazerGraphics.ScaleSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ScaleSprite(s As Integer) As Integer
  overload: Global.HazerGraphics.ScaleSprite*
  nameWithType.vb: HazerGraphics.ScaleSprite(Integer)
  fullName.vb: HazerGraphics.ScaleSprite(Integer)
  name.vb: ScaleSprite(Integer)
- uid: Global.HazerGraphics.TentacleSprite(System.Int32)
  commentId: M:Global.HazerGraphics.TentacleSprite(System.Int32)
  id: TentacleSprite(System.Int32)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: TentacleSprite(int)
  nameWithType: HazerGraphics.TentacleSprite(int)
  fullName: HazerGraphics.TentacleSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.TentacleSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TentacleSprite(int t)
    parameters:
    - id: t
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>t</parameter>
            <parameter>M:HazerGraphics.TentacleSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HazerGraphics.TentacleSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function TentacleSprite(t As Integer) As Integer
  overload: Global.HazerGraphics.TentacleSprite*
  nameWithType.vb: HazerGraphics.TentacleSprite(Integer)
  fullName.vb: HazerGraphics.TentacleSprite(Integer)
  name.vb: TentacleSprite(Integer)
- uid: Global.HazerGraphics.#ctor(PhysicalObject)
  commentId: M:Global.HazerGraphics.#ctor(PhysicalObject)
  id: '#ctor(PhysicalObject)'
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: HazerGraphics(PhysicalObject)
  nameWithType: HazerGraphics.HazerGraphics(PhysicalObject)
  fullName: HazerGraphics.HazerGraphics(PhysicalObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HazerGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HazerGraphics(PhysicalObject ow)
    parameters:
    - id: ow
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ow</parameter>
            <parameter>M:HazerGraphics.#ctor(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ow As PhysicalObject)
  overload: Global.HazerGraphics.#ctor*
  nameWithType.vb: HazerGraphics.New(PhysicalObject)
  fullName.vb: HazerGraphics.New(PhysicalObject)
  name.vb: New(PhysicalObject)
- uid: Global.HazerGraphics.Reset
  commentId: M:Global.HazerGraphics.Reset
  id: Reset
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: HazerGraphics.Reset()
  fullName: HazerGraphics.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset()
  overridden: Global.GraphicsModule.Reset
  overload: Global.HazerGraphics.Reset*
- uid: Global.HazerGraphics.Update
  commentId: M:Global.HazerGraphics.Update
  id: Update
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: HazerGraphics.Update()
  fullName: HazerGraphics.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.GraphicsModule.Update
  overload: Global.HazerGraphics.Update*
- uid: Global.HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)
  commentId: M:Global.HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)
  id: TentacleDir(System.Int32,System.Single,System.Boolean)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: TentacleDir(int, float, bool)
  nameWithType: HazerGraphics.TentacleDir(int, float, bool)
  fullName: HazerGraphics.TentacleDir(int, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 TentacleDir(int t, float timeStacker, bool con)
    parameters:
    - id: t
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>t</parameter>
            <parameter>M:HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: con
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>con</parameter>
            <parameter>M:HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HazerGraphics.TentacleDir(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function TentacleDir(t As Integer, timeStacker As Single, con As Boolean) As Vector2
  overload: Global.HazerGraphics.TentacleDir*
  nameWithType.vb: HazerGraphics.TentacleDir(Integer, Single, Boolean)
  fullName.vb: HazerGraphics.TentacleDir(Integer, Single, Boolean)
  name.vb: TentacleDir(Integer, Single, Boolean)
- uid: Global.HazerGraphics.TentacleConPos(System.Int32,System.Single)
  commentId: M:Global.HazerGraphics.TentacleConPos(System.Int32,System.Single)
  id: TentacleConPos(System.Int32,System.Single)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: TentacleConPos(int, float)
  nameWithType: HazerGraphics.TentacleConPos(int, float)
  fullName: HazerGraphics.TentacleConPos(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.TentacleConPos(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 TentacleConPos(int t, float timeStacker)
    parameters:
    - id: t
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>t</parameter>
            <parameter>M:HazerGraphics.TentacleConPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HazerGraphics.TentacleConPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HazerGraphics.TentacleConPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function TentacleConPos(t As Integer, timeStacker As Single) As Vector2
  overload: Global.HazerGraphics.TentacleConPos*
  nameWithType.vb: HazerGraphics.TentacleConPos(Integer, Single)
  fullName.vb: HazerGraphics.TentacleConPos(Integer, Single)
  name.vb: TentacleConPos(Integer, Single)
- uid: Global.HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:HazerGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overridden: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  overload: Global.HazerGraphics.InitiateSprites*
- uid: Global.HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:HazerGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overridden: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  overload: Global.HazerGraphics.AddToContainer*
- uid: Global.HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overridden: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  overload: Global.HazerGraphics.DrawSprites*
  nameWithType.vb: HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: HazerGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:HazerGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overridden: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  overload: Global.HazerGraphics.ApplyPalette*
- uid: Global.HazerGraphics.bug
  commentId: P:Global.HazerGraphics.bug
  id: bug
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: bug
  nameWithType: HazerGraphics.bug
  fullName: HazerGraphics.bug
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.bug</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Hazer bug { get; }
    parameters: []
    return:
      type: Global.Hazer
    content.vb: Public ReadOnly Property bug As Hazer
  overload: Global.HazerGraphics.bug*
- uid: Global.HazerGraphics.MeshSprite
  commentId: P:Global.HazerGraphics.MeshSprite
  id: MeshSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: MeshSprite
  nameWithType: HazerGraphics.MeshSprite
  fullName: HazerGraphics.MeshSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.MeshSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int MeshSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MeshSprite As Integer
  overload: Global.HazerGraphics.MeshSprite*
- uid: Global.HazerGraphics.BodySprite
  commentId: P:Global.HazerGraphics.BodySprite
  id: BodySprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: BodySprite
  nameWithType: HazerGraphics.BodySprite
  fullName: HazerGraphics.BodySprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.BodySprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BodySprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BodySprite As Integer
  overload: Global.HazerGraphics.BodySprite*
- uid: Global.HazerGraphics.ClosedEyeSprite
  commentId: P:Global.HazerGraphics.ClosedEyeSprite
  id: ClosedEyeSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: ClosedEyeSprite
  nameWithType: HazerGraphics.ClosedEyeSprite
  fullName: HazerGraphics.ClosedEyeSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.ClosedEyeSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ClosedEyeSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ClosedEyeSprite As Integer
  overload: Global.HazerGraphics.ClosedEyeSprite*
- uid: Global.HazerGraphics.EyeSprite
  commentId: P:Global.HazerGraphics.EyeSprite
  id: EyeSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: EyeSprite
  nameWithType: HazerGraphics.EyeSprite
  fullName: HazerGraphics.EyeSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.EyeSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int EyeSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EyeSprite As Integer
  overload: Global.HazerGraphics.EyeSprite*
- uid: Global.HazerGraphics.PupilSprite
  commentId: P:Global.HazerGraphics.PupilSprite
  id: PupilSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: PupilSprite
  nameWithType: HazerGraphics.PupilSprite
  fullName: HazerGraphics.PupilSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.PupilSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int PupilSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PupilSprite As Integer
  overload: Global.HazerGraphics.PupilSprite*
- uid: Global.HazerGraphics.EyeDotSprite
  commentId: P:Global.HazerGraphics.EyeDotSprite
  id: EyeDotSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: EyeDotSprite
  nameWithType: HazerGraphics.EyeDotSprite
  fullName: HazerGraphics.EyeDotSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.EyeDotSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int EyeDotSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EyeDotSprite As Integer
  overload: Global.HazerGraphics.EyeDotSprite*
- uid: Global.HazerGraphics.EyeHighLightSprite
  commentId: P:Global.HazerGraphics.EyeHighLightSprite
  id: EyeHighLightSprite
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: EyeHighLightSprite
  nameWithType: HazerGraphics.EyeHighLightSprite
  fullName: HazerGraphics.EyeHighLightSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.EyeHighLightSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int EyeHighLightSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EyeHighLightSprite As Integer
  overload: Global.HazerGraphics.EyeHighLightSprite*
- uid: Global.HazerGraphics.TotalSprites
  commentId: P:Global.HazerGraphics.TotalSprites
  id: TotalSprites
  parent: Global.HazerGraphics
  langs:
  - csharp
  - vb
  name: TotalSprites
  nameWithType: HazerGraphics.TotalSprites
  fullName: HazerGraphics.TotalSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HazerGraphics.TotalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSprites As Integer
  overload: Global.HazerGraphics.TotalSprites*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.GraphicsModule.internalContainerObjects
  commentId: F:Global.GraphicsModule.internalContainerObjects
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_internalContainerObjects
  name: internalContainerObjects
  nameWithType: GraphicsModule.internalContainerObjects
  fullName: GraphicsModule.internalContainerObjects
- uid: Global.GraphicsModule.bodyParts
  commentId: F:Global.GraphicsModule.bodyParts
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_bodyParts
  name: bodyParts
  nameWithType: GraphicsModule.bodyParts
  fullName: GraphicsModule.bodyParts
- uid: Global.GraphicsModule.DEBUGLABELS
  commentId: F:Global.GraphicsModule.DEBUGLABELS
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DEBUGLABELS
  name: DEBUGLABELS
  nameWithType: GraphicsModule.DEBUGLABELS
  fullName: GraphicsModule.DEBUGLABELS
- uid: Global.GraphicsModule.culled
  commentId: F:Global.GraphicsModule.culled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_culled
  name: culled
  nameWithType: GraphicsModule.culled
  fullName: GraphicsModule.culled
- uid: Global.GraphicsModule.lastCulled
  commentId: F:Global.GraphicsModule.lastCulled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_lastCulled
  name: lastCulled
  nameWithType: GraphicsModule.lastCulled
  fullName: GraphicsModule.lastCulled
- uid: Global.GraphicsModule.dispose
  commentId: F:Global.GraphicsModule.dispose
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_dispose
  name: dispose
  nameWithType: GraphicsModule.dispose
  fullName: GraphicsModule.dispose
- uid: Global.GraphicsModule.cullRange
  commentId: F:Global.GraphicsModule.cullRange
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_cullRange
  name: cullRange
  nameWithType: GraphicsModule.cullRange
  fullName: GraphicsModule.cullRange
- uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  name: SuckedIntoShortCut(Vector2)
  nameWithType: GraphicsModule.SuckedIntoShortCut(Vector2)
  fullName: GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
    name: SuckedIntoShortCut
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
    name: SuckedIntoShortCut
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  commentId: M:Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  name: PushOutOf(Vector2, float)
  nameWithType: GraphicsModule.PushOutOf(Vector2, float)
  fullName: GraphicsModule.PushOutOf(UnityEngine.Vector2, float)
  nameWithType.vb: GraphicsModule.PushOutOf(Vector2, Single)
  fullName.vb: GraphicsModule.PushOutOf(UnityEngine.Vector2, Single)
  name.vb: PushOutOf(Vector2, Single)
  spec.csharp:
  - uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
    name: PushOutOf
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
    name: PushOutOf
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  commentId: M:Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  name: AddObjectToInternalContainer(IDrawable, int)
  nameWithType: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  fullName: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  nameWithType.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  fullName.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  name.vb: AddObjectToInternalContainer(IDrawable, Integer)
  spec.csharp:
  - uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
    name: AddObjectToInternalContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
    name: AddObjectToInternalContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  commentId: M:Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  name: ReleaseAllInternallyContainedSprites()
  nameWithType: GraphicsModule.ReleaseAllInternallyContainedSprites()
  fullName: GraphicsModule.ReleaseAllInternallyContainedSprites()
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
    name: ReleaseAllInternallyContainedSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
    name: ReleaseAllInternallyContainedSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  - name: (
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  name: ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  name: ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  name: ReleaseSpecificInternallyContainedObjectSprites(int)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  nameWithType.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  fullName.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  name.vb: ReleaseSpecificInternallyContainedObjectSprites(Integer)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.GraphicsModule.BringSpritesToFront
  commentId: M:Global.GraphicsModule.BringSpritesToFront
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  name: BringSpritesToFront()
  nameWithType: GraphicsModule.BringSpritesToFront()
  fullName: GraphicsModule.BringSpritesToFront()
  spec.csharp:
  - uid: Global.GraphicsModule.BringSpritesToFront
    name: BringSpritesToFront
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.BringSpritesToFront
    name: BringSpritesToFront
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  - name: (
  - name: )
- uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  commentId: M:Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  name: HypothermiaColorBlend(Color)
  nameWithType: GraphicsModule.HypothermiaColorBlend(Color)
  fullName: GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  spec.csharp:
  - uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
    name: HypothermiaColorBlend
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
    name: HypothermiaColorBlend
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  commentId: M:Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  name: ActivateRippleHybrid(float, RippleSide)
  nameWithType: GraphicsModule.ActivateRippleHybrid(float, RippleHybridVFX.RippleSide)
  fullName: GraphicsModule.ActivateRippleHybrid(float, Watcher.RippleHybridVFX.RippleSide)
  nameWithType.vb: GraphicsModule.ActivateRippleHybrid(Single, RippleHybridVFX.RippleSide)
  fullName.vb: GraphicsModule.ActivateRippleHybrid(Single, Watcher.RippleHybridVFX.RippleSide)
  name.vb: ActivateRippleHybrid(Single, RippleSide)
  spec.csharp:
  - uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
    name: ActivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
    name: ActivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  - name: )
- uid: Global.GraphicsModule.DeactivateRippleHybrid
  commentId: M:Global.GraphicsModule.DeactivateRippleHybrid
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  name: DeactivateRippleHybrid()
  nameWithType: GraphicsModule.DeactivateRippleHybrid()
  fullName: GraphicsModule.DeactivateRippleHybrid()
  spec.csharp:
  - uid: Global.GraphicsModule.DeactivateRippleHybrid
    name: DeactivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.DeactivateRippleHybrid
    name: DeactivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  - name: (
  - name: )
- uid: Global.GraphicsModule.owner
  commentId: P:Global.GraphicsModule.owner
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_owner
  name: owner
  nameWithType: GraphicsModule.owner
  fullName: GraphicsModule.owner
- uid: Global.GraphicsModule.ShouldBeCulled
  commentId: P:Global.GraphicsModule.ShouldBeCulled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ShouldBeCulled
  name: ShouldBeCulled
  nameWithType: GraphicsModule.ShouldBeCulled
  fullName: GraphicsModule.ShouldBeCulled
- uid: Global.GraphicsModule.rippleHybridState
  commentId: P:Global.GraphicsModule.rippleHybridState
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_rippleHybridState
  name: rippleHybridState
  nameWithType: GraphicsModule.rippleHybridState
  fullName: GraphicsModule.rippleHybridState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ChunkDynamicSoundLoop
  commentId: T:Global.ChunkDynamicSoundLoop
  isExternal: true
  href: ChunkDynamicSoundLoop.html
  name: ChunkDynamicSoundLoop
  nameWithType: ChunkDynamicSoundLoop
  fullName: ChunkDynamicSoundLoop
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{UnityEngine.Vector2[0:,0:]}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2[0:,0:]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2[,]>
  nameWithType: List<Vector2[,]>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2[,]>
  nameWithType.vb: List(Of Vector2(,))
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2(,))
  name.vb: List(Of Vector2(,))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  isExternal: true
  href: HSLColor.html
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Global.HazerGraphics.ScaleSprite*
  commentId: Overload:Global.HazerGraphics.ScaleSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_ScaleSprite_System_Int32_
  name: ScaleSprite
  nameWithType: HazerGraphics.ScaleSprite
  fullName: HazerGraphics.ScaleSprite
- uid: Global.HazerGraphics.TentacleSprite*
  commentId: Overload:Global.HazerGraphics.TentacleSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_TentacleSprite_System_Int32_
  name: TentacleSprite
  nameWithType: HazerGraphics.TentacleSprite
  fullName: HazerGraphics.TentacleSprite
- uid: Global.HazerGraphics.#ctor*
  commentId: Overload:Global.HazerGraphics.#ctor
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics__ctor_PhysicalObject_
  name: HazerGraphics
  nameWithType: HazerGraphics.HazerGraphics
  fullName: HazerGraphics.HazerGraphics
  nameWithType.vb: HazerGraphics.New
  fullName.vb: HazerGraphics.New
  name.vb: New
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.GraphicsModule.Reset
  commentId: M:Global.GraphicsModule.Reset
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Reset
  name: Reset()
  nameWithType: GraphicsModule.Reset()
  fullName: GraphicsModule.Reset()
  spec.csharp:
  - uid: Global.GraphicsModule.Reset
    name: Reset
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.Reset
    name: Reset
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Reset
  - name: (
  - name: )
- uid: Global.HazerGraphics.Reset*
  commentId: Overload:Global.HazerGraphics.Reset
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_Reset
  name: Reset
  nameWithType: HazerGraphics.Reset
  fullName: HazerGraphics.Reset
- uid: Global.GraphicsModule.Update
  commentId: M:Global.GraphicsModule.Update
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Update
  name: Update()
  nameWithType: GraphicsModule.Update()
  fullName: GraphicsModule.Update()
  spec.csharp:
  - uid: Global.GraphicsModule.Update
    name: Update
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.Update
    name: Update
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Update
  - name: (
  - name: )
- uid: Global.HazerGraphics.Update*
  commentId: Overload:Global.HazerGraphics.Update
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_Update
  name: Update
  nameWithType: HazerGraphics.Update
  fullName: HazerGraphics.Update
- uid: Global.HazerGraphics.TentacleDir*
  commentId: Overload:Global.HazerGraphics.TentacleDir
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_TentacleDir_System_Int32_System_Single_System_Boolean_
  name: TentacleDir
  nameWithType: HazerGraphics.TentacleDir
  fullName: HazerGraphics.TentacleDir
- uid: Global.HazerGraphics.TentacleConPos*
  commentId: Overload:Global.HazerGraphics.TentacleConPos
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_TentacleConPos_System_Int32_System_Single_
  name: TentacleConPos
  nameWithType: HazerGraphics.TentacleConPos
  fullName: HazerGraphics.TentacleConPos
- uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.HazerGraphics.InitiateSprites*
  commentId: Overload:Global.HazerGraphics.InitiateSprites
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: HazerGraphics.InitiateSprites
  fullName: HazerGraphics.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.HazerGraphics.AddToContainer*
  commentId: Overload:Global.HazerGraphics.AddToContainer
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: HazerGraphics.AddToContainer
  fullName: HazerGraphics.AddToContainer
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.HazerGraphics.DrawSprites*
  commentId: Overload:Global.HazerGraphics.DrawSprites
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: HazerGraphics.DrawSprites
  fullName: HazerGraphics.DrawSprites
- uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.HazerGraphics.ApplyPalette*
  commentId: Overload:Global.HazerGraphics.ApplyPalette
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: HazerGraphics.ApplyPalette
  fullName: HazerGraphics.ApplyPalette
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.HazerGraphics.bug*
  commentId: Overload:Global.HazerGraphics.bug
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_bug
  name: bug
  nameWithType: HazerGraphics.bug
  fullName: HazerGraphics.bug
- uid: Global.Hazer
  commentId: T:Global.Hazer
  isExternal: true
  href: Hazer.html
  name: Hazer
  nameWithType: Hazer
  fullName: Hazer
- uid: Global.HazerGraphics.MeshSprite*
  commentId: Overload:Global.HazerGraphics.MeshSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_MeshSprite
  name: MeshSprite
  nameWithType: HazerGraphics.MeshSprite
  fullName: HazerGraphics.MeshSprite
- uid: Global.HazerGraphics.BodySprite*
  commentId: Overload:Global.HazerGraphics.BodySprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_BodySprite
  name: BodySprite
  nameWithType: HazerGraphics.BodySprite
  fullName: HazerGraphics.BodySprite
- uid: Global.HazerGraphics.ClosedEyeSprite*
  commentId: Overload:Global.HazerGraphics.ClosedEyeSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_ClosedEyeSprite
  name: ClosedEyeSprite
  nameWithType: HazerGraphics.ClosedEyeSprite
  fullName: HazerGraphics.ClosedEyeSprite
- uid: Global.HazerGraphics.EyeSprite*
  commentId: Overload:Global.HazerGraphics.EyeSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_EyeSprite
  name: EyeSprite
  nameWithType: HazerGraphics.EyeSprite
  fullName: HazerGraphics.EyeSprite
- uid: Global.HazerGraphics.PupilSprite*
  commentId: Overload:Global.HazerGraphics.PupilSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_PupilSprite
  name: PupilSprite
  nameWithType: HazerGraphics.PupilSprite
  fullName: HazerGraphics.PupilSprite
- uid: Global.HazerGraphics.EyeDotSprite*
  commentId: Overload:Global.HazerGraphics.EyeDotSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_EyeDotSprite
  name: EyeDotSprite
  nameWithType: HazerGraphics.EyeDotSprite
  fullName: HazerGraphics.EyeDotSprite
- uid: Global.HazerGraphics.EyeHighLightSprite*
  commentId: Overload:Global.HazerGraphics.EyeHighLightSprite
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_EyeHighLightSprite
  name: EyeHighLightSprite
  nameWithType: HazerGraphics.EyeHighLightSprite
  fullName: HazerGraphics.EyeHighLightSprite
- uid: Global.HazerGraphics.TotalSprites*
  commentId: Overload:Global.HazerGraphics.TotalSprites
  isExternal: true
  href: Global.HazerGraphics.html#HazerGraphics_TotalSprites
  name: TotalSprites
  nameWithType: HazerGraphics.TotalSprites
  fullName: HazerGraphics.TotalSprites
