### YamlMime:ManagedReference
items:
- uid: Menu.InputOptionsMenu
  commentId: T:Menu.InputOptionsMenu
  id: InputOptionsMenu
  parent: Menu
  children:
  - Menu.InputOptionsMenu.#ctor(ProcessManager)
  - Menu.InputOptionsMenu.CurrentControlSetup
  - Menu.InputOptionsMenu.ForceNoMouseMode
  - Menu.InputOptionsMenu.FreezeMenuFunctions
  - Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)
  - Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)
  - Menu.InputOptionsMenu.RefreshInputGreyOut
  - Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)
  - Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  - Menu.InputOptionsMenu.ShutDownProcess
  - Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)
  - Menu.InputOptionsMenu.StopInputAssignment
  - Menu.InputOptionsMenu.Update
  - Menu.InputOptionsMenu.UpdateConnectedControllerLabels
  - Menu.InputOptionsMenu.UpdateInfoText
  - Menu.InputOptionsMenu.backButton
  - Menu.InputOptionsMenu.currentGamepads
  - Menu.InputOptionsMenu.currentJoystickObjects
  - Menu.InputOptionsMenu.deviceButtons
  - Menu.InputOptionsMenu.freezeMenuFunctionsCounter
  - Menu.InputOptionsMenu.fromJollyMenu
  - Menu.InputOptionsMenu.gamePadButtonButtons
  - Menu.InputOptionsMenu.gamepadDefaultsButton
  - Menu.InputOptionsMenu.inputLabels
  - Menu.InputOptionsMenu.inputMappers
  - Menu.InputOptionsMenu.inputTesterHolder
  - Menu.InputOptionsMenu.keyBoardKeysButtons
  - Menu.InputOptionsMenu.keyboardDefaultsButton
  - Menu.InputOptionsMenu.mappersStarted
  - Menu.InputOptionsMenu.playerButtons
  - Menu.InputOptionsMenu.previousMenu
  - Menu.InputOptionsMenu.rememberPlayersSignedIn
  - Menu.InputOptionsMenu.settingInput
  - Menu.InputOptionsMenu.startListening
  - Menu.InputOptionsMenu.testButton
  - Menu.InputOptionsMenu.xInvCheck
  - Menu.InputOptionsMenu.yInvCheck
  langs:
  - csharp
  - vb
  name: InputOptionsMenu
  nameWithType: InputOptionsMenu
  fullName: Menu.InputOptionsMenu
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.InputOptionsMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class InputOptionsMenu : Menu, SelectOneButton.SelectOneButtonOwner, CheckBox.IOwnCheckBox'
    content.vb: Public Class InputOptionsMenu Inherits Menu Implements SelectOneButton.SelectOneButtonOwner, CheckBox.IOwnCheckBox
  inheritance:
  - System.Object
  - Global.MainLoopProcess
  - Menu.Menu
  implements:
  - Menu.SelectOneButton.SelectOneButtonOwner
  - Menu.CheckBox.IOwnCheckBox
  inheritedMembers:
  - Menu.Menu.pages
  - Menu.Menu.mousePosition
  - Menu.Menu.lastMousePos
  - Menu.Menu.container
  - Menu.Menu.cursorContainer
  - Menu.Menu.scene
  - Menu.Menu.mouseDown
  - Menu.Menu.lastMouseDown
  - Menu.Menu.selectedObject
  - Menu.Menu.backObject
  - Menu.Menu.pressButton
  - Menu.Menu.holdButton
  - Menu.Menu.lastHoldButton
  - Menu.Menu.input
  - Menu.Menu.lastInput
  - Menu.Menu.currentPage
  - Menu.Menu.soundLoop
  - Menu.Menu.mySoundLoopID
  - Menu.Menu.mySoundLoopName
  - Menu.Menu.infolabelDirty
  - Menu.Menu.infoLabel
  - Menu.Menu.infoLabelFade
  - Menu.Menu.lastInfoLabelFade
  - Menu.Menu.infoLabelSin
  - Menu.Menu.gradientsContainer
  - Menu.Menu.mouseScrollWheelMovement
  - Menu.Menu.init
  - Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  - Menu.Menu.GetFreezeMenuFunctions
  - Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  - Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  - Menu.Menu.Translate(System.String)
  - Menu.Menu.Translate(System.String,System.Int32)
  - Menu.Menu.Init
  - Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  - Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  - Menu.Menu.ResetSelection
  - Menu.Menu.GrafUpdate(System.Single)
  - Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  - Menu.Menu.ValueOfSlider(Menu.Slider)
  - Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  - Menu.Menu.PlaySound(SoundID)
  - Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  - Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  - Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  - Menu.Menu.AllowDialogs
  - Menu.Menu.ShowCursor
  - Menu.Menu.Active
  - Menu.Menu.HoldButtonDisregardingFreeze
  - Menu.Menu.NonMouseInputDisregardingFreeze
  - Menu.Menu.CurrLang
  - Global.MainLoopProcess.manager
  - Global.MainLoopProcess.ID
  - Global.MainLoopProcess.framesPerSecond
  - Global.MainLoopProcess.processActive
  - Global.MainLoopProcess.RawUpdate(System.Single)
  - Global.MainLoopProcess.TimeSpeedFac
  - Global.MainLoopProcess.FadeInTime
  - Global.MainLoopProcess.InitialBlackSeconds
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.InputOptionsMenu.backButton
  commentId: F:Menu.InputOptionsMenu.backButton
  id: backButton
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: backButton
  nameWithType: InputOptionsMenu.backButton
  fullName: Menu.InputOptionsMenu.backButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.backButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SimpleButton backButton
    return:
      type: Menu.SimpleButton
    content.vb: Public backButton As SimpleButton
- uid: Menu.InputOptionsMenu.testButton
  commentId: F:Menu.InputOptionsMenu.testButton
  id: testButton
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: testButton
  nameWithType: InputOptionsMenu.testButton
  fullName: Menu.InputOptionsMenu.testButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.testButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SimpleButton testButton
    return:
      type: Menu.SimpleButton
    content.vb: Public testButton As SimpleButton
- uid: Menu.InputOptionsMenu.keyboardDefaultsButton
  commentId: F:Menu.InputOptionsMenu.keyboardDefaultsButton
  id: keyboardDefaultsButton
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: keyboardDefaultsButton
  nameWithType: InputOptionsMenu.keyboardDefaultsButton
  fullName: Menu.InputOptionsMenu.keyboardDefaultsButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.keyboardDefaultsButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SimpleButton keyboardDefaultsButton
    return:
      type: Menu.SimpleButton
    content.vb: Public keyboardDefaultsButton As SimpleButton
- uid: Menu.InputOptionsMenu.gamepadDefaultsButton
  commentId: F:Menu.InputOptionsMenu.gamepadDefaultsButton
  id: gamepadDefaultsButton
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: gamepadDefaultsButton
  nameWithType: InputOptionsMenu.gamepadDefaultsButton
  fullName: Menu.InputOptionsMenu.gamepadDefaultsButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.gamepadDefaultsButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SimpleButton gamepadDefaultsButton
    return:
      type: Menu.SimpleButton
    content.vb: Public gamepadDefaultsButton As SimpleButton
- uid: Menu.InputOptionsMenu.keyBoardKeysButtons
  commentId: F:Menu.InputOptionsMenu.keyBoardKeysButtons
  id: keyBoardKeysButtons
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: keyBoardKeysButtons
  nameWithType: InputOptionsMenu.keyBoardKeysButtons
  fullName: Menu.InputOptionsMenu.keyBoardKeysButtons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.keyBoardKeysButtons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputOptionsMenu.InputSelectButton[] keyBoardKeysButtons
    return:
      type: Menu.InputOptionsMenu.InputSelectButton[]
    content.vb: Public keyBoardKeysButtons As InputOptionsMenu.InputSelectButton()
- uid: Menu.InputOptionsMenu.gamePadButtonButtons
  commentId: F:Menu.InputOptionsMenu.gamePadButtonButtons
  id: gamePadButtonButtons
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: gamePadButtonButtons
  nameWithType: InputOptionsMenu.gamePadButtonButtons
  fullName: Menu.InputOptionsMenu.gamePadButtonButtons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.gamePadButtonButtons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputOptionsMenu.InputSelectButton[] gamePadButtonButtons
    return:
      type: Menu.InputOptionsMenu.InputSelectButton[]
    content.vb: Public gamePadButtonButtons As InputOptionsMenu.InputSelectButton()
- uid: Menu.InputOptionsMenu.inputLabels
  commentId: F:Menu.InputOptionsMenu.inputLabels
  id: inputLabels
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: inputLabels
  nameWithType: InputOptionsMenu.inputLabels
  fullName: Menu.InputOptionsMenu.inputLabels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.inputLabels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuLabel[] inputLabels
    return:
      type: Menu.MenuLabel[]
    content.vb: Public inputLabels As MenuLabel()
- uid: Menu.InputOptionsMenu.xInvCheck
  commentId: F:Menu.InputOptionsMenu.xInvCheck
  id: xInvCheck
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: xInvCheck
  nameWithType: InputOptionsMenu.xInvCheck
  fullName: Menu.InputOptionsMenu.xInvCheck
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.xInvCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CheckBox xInvCheck
    return:
      type: Menu.CheckBox
    content.vb: Public xInvCheck As CheckBox
- uid: Menu.InputOptionsMenu.yInvCheck
  commentId: F:Menu.InputOptionsMenu.yInvCheck
  id: yInvCheck
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: yInvCheck
  nameWithType: InputOptionsMenu.yInvCheck
  fullName: Menu.InputOptionsMenu.yInvCheck
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.yInvCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CheckBox yInvCheck
    return:
      type: Menu.CheckBox
    content.vb: Public yInvCheck As CheckBox
- uid: Menu.InputOptionsMenu.settingInput
  commentId: F:Menu.InputOptionsMenu.settingInput
  id: settingInput
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: settingInput
  nameWithType: InputOptionsMenu.settingInput
  fullName: Menu.InputOptionsMenu.settingInput
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.settingInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2? settingInput
    return:
      type: System.Nullable{RWCustom.IntVector2}
    content.vb: Public settingInput As IntVector2?
- uid: Menu.InputOptionsMenu.freezeMenuFunctionsCounter
  commentId: F:Menu.InputOptionsMenu.freezeMenuFunctionsCounter
  id: freezeMenuFunctionsCounter
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: freezeMenuFunctionsCounter
  nameWithType: InputOptionsMenu.freezeMenuFunctionsCounter
  fullName: Menu.InputOptionsMenu.freezeMenuFunctionsCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.freezeMenuFunctionsCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int freezeMenuFunctionsCounter
    return:
      type: System.Int32
    content.vb: Public freezeMenuFunctionsCounter As Integer
- uid: Menu.InputOptionsMenu.playerButtons
  commentId: F:Menu.InputOptionsMenu.playerButtons
  id: playerButtons
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: playerButtons
  nameWithType: InputOptionsMenu.playerButtons
  fullName: Menu.InputOptionsMenu.playerButtons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.playerButtons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputOptionsMenu.PlayerButton[] playerButtons
    return:
      type: Menu.InputOptionsMenu.PlayerButton[]
    content.vb: Public playerButtons As InputOptionsMenu.PlayerButton()
- uid: Menu.InputOptionsMenu.deviceButtons
  commentId: F:Menu.InputOptionsMenu.deviceButtons
  id: deviceButtons
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: deviceButtons
  nameWithType: InputOptionsMenu.deviceButtons
  fullName: Menu.InputOptionsMenu.deviceButtons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.deviceButtons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputOptionsMenu.DeviceButton[] deviceButtons
    return:
      type: Menu.InputOptionsMenu.DeviceButton[]
    content.vb: Public deviceButtons As InputOptionsMenu.DeviceButton()
- uid: Menu.InputOptionsMenu.currentGamepads
  commentId: F:Menu.InputOptionsMenu.currentGamepads
  id: currentGamepads
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: currentGamepads
  nameWithType: InputOptionsMenu.currentGamepads
  fullName: Menu.InputOptionsMenu.currentGamepads
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.currentGamepads</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> currentGamepads
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public currentGamepads As List(Of String)
- uid: Menu.InputOptionsMenu.currentJoystickObjects
  commentId: F:Menu.InputOptionsMenu.currentJoystickObjects
  id: currentJoystickObjects
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: currentJoystickObjects
  nameWithType: InputOptionsMenu.currentJoystickObjects
  fullName: Menu.InputOptionsMenu.currentJoystickObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.currentJoystickObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Joystick> currentJoystickObjects
    return:
      type: System.Collections.Generic.List{Rewired.Joystick}
    content.vb: Public currentJoystickObjects As List(Of Joystick)
- uid: Menu.InputOptionsMenu.rememberPlayersSignedIn
  commentId: F:Menu.InputOptionsMenu.rememberPlayersSignedIn
  id: rememberPlayersSignedIn
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: rememberPlayersSignedIn
  nameWithType: InputOptionsMenu.rememberPlayersSignedIn
  fullName: Menu.InputOptionsMenu.rememberPlayersSignedIn
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.rememberPlayersSignedIn</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] rememberPlayersSignedIn
    return:
      type: System.Boolean[]
    content.vb: Public rememberPlayersSignedIn As Boolean()
- uid: Menu.InputOptionsMenu.inputMappers
  commentId: F:Menu.InputOptionsMenu.inputMappers
  id: inputMappers
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: inputMappers
  nameWithType: InputOptionsMenu.inputMappers
  fullName: Menu.InputOptionsMenu.inputMappers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.inputMappers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputMapper[] inputMappers
    return:
      type: Rewired.InputMapper[]
    content.vb: Public inputMappers As InputMapper()
- uid: Menu.InputOptionsMenu.startListening
  commentId: F:Menu.InputOptionsMenu.startListening
  id: startListening
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: startListening
  nameWithType: InputOptionsMenu.startListening
  fullName: Menu.InputOptionsMenu.startListening
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.startListening</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool startListening
    return:
      type: System.Boolean
    content.vb: Public startListening As Boolean
- uid: Menu.InputOptionsMenu.mappersStarted
  commentId: F:Menu.InputOptionsMenu.mappersStarted
  id: mappersStarted
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: mappersStarted
  nameWithType: InputOptionsMenu.mappersStarted
  fullName: Menu.InputOptionsMenu.mappersStarted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.mappersStarted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool mappersStarted
    return:
      type: System.Boolean
    content.vb: Public mappersStarted As Boolean
- uid: Menu.InputOptionsMenu.inputTesterHolder
  commentId: F:Menu.InputOptionsMenu.inputTesterHolder
  id: inputTesterHolder
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: inputTesterHolder
  nameWithType: InputOptionsMenu.inputTesterHolder
  fullName: Menu.InputOptionsMenu.inputTesterHolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.inputTesterHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputTesterHolder inputTesterHolder
    return:
      type: Menu.InputTesterHolder
    content.vb: Public inputTesterHolder As InputTesterHolder
- uid: Menu.InputOptionsMenu.fromJollyMenu
  commentId: F:Menu.InputOptionsMenu.fromJollyMenu
  id: fromJollyMenu
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: fromJollyMenu
  nameWithType: InputOptionsMenu.fromJollyMenu
  fullName: Menu.InputOptionsMenu.fromJollyMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.fromJollyMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool fromJollyMenu
    return:
      type: System.Boolean
    content.vb: Public fromJollyMenu As Boolean
- uid: Menu.InputOptionsMenu.previousMenu
  commentId: F:Menu.InputOptionsMenu.previousMenu
  id: previousMenu
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: previousMenu
  nameWithType: InputOptionsMenu.previousMenu
  fullName: Menu.InputOptionsMenu.previousMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.InputOptionsMenu.previousMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProcessManager.ProcessID previousMenu
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public previousMenu As ProcessManager.ProcessID
- uid: Menu.InputOptionsMenu.#ctor(ProcessManager)
  commentId: M:Menu.InputOptionsMenu.#ctor(ProcessManager)
  id: '#ctor(ProcessManager)'
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: InputOptionsMenu(ProcessManager)
  nameWithType: InputOptionsMenu.InputOptionsMenu(ProcessManager)
  fullName: Menu.InputOptionsMenu.InputOptionsMenu(ProcessManager)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.InputOptionsMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InputOptionsMenu(ProcessManager manager)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:Menu.InputOptionsMenu.#ctor(ProcessManager)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(manager As ProcessManager)
  overload: Menu.InputOptionsMenu.#ctor*
  nameWithType.vb: InputOptionsMenu.New(ProcessManager)
  fullName.vb: Menu.InputOptionsMenu.New(ProcessManager)
  name.vb: New(ProcessManager)
- uid: Menu.InputOptionsMenu.UpdateInfoText
  commentId: M:Menu.InputOptionsMenu.UpdateInfoText
  id: UpdateInfoText
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: UpdateInfoText()
  nameWithType: InputOptionsMenu.UpdateInfoText()
  fullName: Menu.InputOptionsMenu.UpdateInfoText()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.UpdateInfoText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string UpdateInfoText()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.InputOptionsMenu.UpdateInfoText</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function UpdateInfoText() As String
  overridden: Menu.Menu.UpdateInfoText
  overload: Menu.InputOptionsMenu.UpdateInfoText*
- uid: Menu.InputOptionsMenu.Update
  commentId: M:Menu.InputOptionsMenu.Update
  id: Update
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: InputOptionsMenu.Update()
  fullName: Menu.InputOptionsMenu.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Menu.Menu.Update
  overload: Menu.InputOptionsMenu.Update*
- uid: Menu.InputOptionsMenu.UpdateConnectedControllerLabels
  commentId: M:Menu.InputOptionsMenu.UpdateConnectedControllerLabels
  id: UpdateConnectedControllerLabels
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: UpdateConnectedControllerLabels()
  nameWithType: InputOptionsMenu.UpdateConnectedControllerLabels()
  fullName: Menu.InputOptionsMenu.UpdateConnectedControllerLabels()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.UpdateConnectedControllerLabels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateConnectedControllerLabels()
    content.vb: Public Sub UpdateConnectedControllerLabels()
  overload: Menu.InputOptionsMenu.UpdateConnectedControllerLabels*
- uid: Menu.InputOptionsMenu.StopInputAssignment
  commentId: M:Menu.InputOptionsMenu.StopInputAssignment
  id: StopInputAssignment
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: StopInputAssignment()
  nameWithType: InputOptionsMenu.StopInputAssignment()
  fullName: Menu.InputOptionsMenu.StopInputAssignment()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.StopInputAssignment</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StopInputAssignment()
    content.vb: Public Sub StopInputAssignment()
  overload: Menu.InputOptionsMenu.StopInputAssignment*
- uid: Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)
  id: Singal(Menu.MenuObject,System.String)
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: Singal(MenuObject, string)
  nameWithType: InputOptionsMenu.Singal(MenuObject, string)
  fullName: Menu.InputOptionsMenu.Singal(Menu.MenuObject, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Singal(MenuObject sender, string message)
    parameters:
    - id: sender
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    - id: message
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Menu.InputOptionsMenu.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Singal(sender As MenuObject, message As String)
  overridden: Menu.Menu.Singal(Menu.MenuObject,System.String)
  overload: Menu.InputOptionsMenu.Singal*
  nameWithType.vb: InputOptionsMenu.Singal(MenuObject, String)
  fullName.vb: Menu.InputOptionsMenu.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
- uid: Menu.InputOptionsMenu.RefreshInputGreyOut
  commentId: M:Menu.InputOptionsMenu.RefreshInputGreyOut
  id: RefreshInputGreyOut
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: RefreshInputGreyOut()
  nameWithType: InputOptionsMenu.RefreshInputGreyOut()
  fullName: Menu.InputOptionsMenu.RefreshInputGreyOut()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.RefreshInputGreyOut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RefreshInputGreyOut()
    content.vb: Public Sub RefreshInputGreyOut()
  overload: Menu.InputOptionsMenu.RefreshInputGreyOut*
- uid: Menu.InputOptionsMenu.ShutDownProcess
  commentId: M:Menu.InputOptionsMenu.ShutDownProcess
  id: ShutDownProcess
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: ShutDownProcess()
  nameWithType: InputOptionsMenu.ShutDownProcess()
  fullName: Menu.InputOptionsMenu.ShutDownProcess()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.ShutDownProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ShutDownProcess()
    content.vb: Public Overrides Sub ShutDownProcess()
  overridden: Menu.Menu.ShutDownProcess
  overload: Menu.InputOptionsMenu.ShutDownProcess*
- uid: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)
  commentId: M:Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)
  id: GetCurrentlySelectedOfSeries(System.String)
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: GetCurrentlySelectedOfSeries(string)
  nameWithType: InputOptionsMenu.GetCurrentlySelectedOfSeries(string)
  fullName: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetCurrentlySelectedOfSeries(string series)
    parameters:
    - id: series
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>series</parameter>
            <parameter>M:Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetCurrentlySelectedOfSeries(series As String) As Integer
  overload: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries*
  implements:
  - Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(System.String)
  nameWithType.vb: InputOptionsMenu.GetCurrentlySelectedOfSeries(String)
  fullName.vb: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries(String)
  name.vb: GetCurrentlySelectedOfSeries(String)
- uid: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  commentId: M:Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  id: SetCurrentlySelectedOfSeries(System.String,System.Int32)
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: SetCurrentlySelectedOfSeries(string, int)
  nameWithType: InputOptionsMenu.SetCurrentlySelectedOfSeries(string, int)
  fullName: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(string, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetCurrentlySelectedOfSeries(string series, int to)
    parameters:
    - id: series
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>series</parameter>
            <parameter>M:Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: to
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>to</parameter>
            <parameter>M:Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetCurrentlySelectedOfSeries(series As String, [to] As Integer)
  overload: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries*
  implements:
  - Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  nameWithType.vb: InputOptionsMenu.SetCurrentlySelectedOfSeries(String, Integer)
  fullName.vb: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries(String, Integer)
  name.vb: SetCurrentlySelectedOfSeries(String, Integer)
- uid: Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)
  commentId: M:Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)
  id: GetChecked(Menu.CheckBox)
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: GetChecked(CheckBox)
  nameWithType: InputOptionsMenu.GetChecked(CheckBox)
  fullName: Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool GetChecked(CheckBox box)
    parameters:
    - id: box
      type: Menu.CheckBox
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>box</parameter>
            <parameter>M:Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.InputOptionsMenu.GetChecked(Menu.CheckBox)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetChecked(box As CheckBox) As Boolean
  overload: Menu.InputOptionsMenu.GetChecked*
  implements:
  - Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
- uid: Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)
  commentId: M:Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)
  id: SetChecked(Menu.CheckBox,System.Boolean)
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: SetChecked(CheckBox, bool)
  nameWithType: InputOptionsMenu.SetChecked(CheckBox, bool)
  fullName: Menu.InputOptionsMenu.SetChecked(Menu.CheckBox, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetChecked(CheckBox box, bool c)
    parameters:
    - id: box
      type: Menu.CheckBox
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>box</parameter>
            <parameter>M:Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)</parameter>
          </include>
        </markup>
    - id: c
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:Menu.InputOptionsMenu.SetChecked(Menu.CheckBox,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetChecked(box As CheckBox, c As Boolean)
  overload: Menu.InputOptionsMenu.SetChecked*
  implements:
  - Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox,System.Boolean)
  nameWithType.vb: InputOptionsMenu.SetChecked(CheckBox, Boolean)
  fullName.vb: Menu.InputOptionsMenu.SetChecked(Menu.CheckBox, Boolean)
  name.vb: SetChecked(CheckBox, Boolean)
- uid: Menu.InputOptionsMenu.ForceNoMouseMode
  commentId: P:Menu.InputOptionsMenu.ForceNoMouseMode
  id: ForceNoMouseMode
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: ForceNoMouseMode
  nameWithType: InputOptionsMenu.ForceNoMouseMode
  fullName: Menu.InputOptionsMenu.ForceNoMouseMode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.InputOptionsMenu.ForceNoMouseMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool ForceNoMouseMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property ForceNoMouseMode As Boolean
  overridden: Menu.Menu.ForceNoMouseMode
  overload: Menu.InputOptionsMenu.ForceNoMouseMode*
- uid: Menu.InputOptionsMenu.FreezeMenuFunctions
  commentId: P:Menu.InputOptionsMenu.FreezeMenuFunctions
  id: FreezeMenuFunctions
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: FreezeMenuFunctions
  nameWithType: InputOptionsMenu.FreezeMenuFunctions
  fullName: Menu.InputOptionsMenu.FreezeMenuFunctions
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.InputOptionsMenu.FreezeMenuFunctions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected override bool FreezeMenuFunctions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overrides ReadOnly Property FreezeMenuFunctions As Boolean
  overridden: Menu.Menu.FreezeMenuFunctions
  overload: Menu.InputOptionsMenu.FreezeMenuFunctions*
- uid: Menu.InputOptionsMenu.CurrentControlSetup
  commentId: P:Menu.InputOptionsMenu.CurrentControlSetup
  id: CurrentControlSetup
  parent: Menu.InputOptionsMenu
  langs:
  - csharp
  - vb
  name: CurrentControlSetup
  nameWithType: InputOptionsMenu.CurrentControlSetup
  fullName: Menu.InputOptionsMenu.CurrentControlSetup
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.InputOptionsMenu.CurrentControlSetup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Options.ControlSetup CurrentControlSetup { get; }
    parameters: []
    return:
      type: Global.Options.ControlSetup
    content.vb: Public ReadOnly Property CurrentControlSetup As Options.ControlSetup
  overload: Menu.InputOptionsMenu.CurrentControlSetup*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.MainLoopProcess
  commentId: T:Global.MainLoopProcess
  isExternal: true
  href: MainLoopProcess.html
  name: MainLoopProcess
  nameWithType: MainLoopProcess
  fullName: MainLoopProcess
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: Menu.SelectOneButton.SelectOneButtonOwner
  commentId: T:Menu.SelectOneButton.SelectOneButtonOwner
  parent: Menu
  isExternal: true
  href: Menu.SelectOneButton.html
  name: SelectOneButton.SelectOneButtonOwner
  nameWithType: SelectOneButton.SelectOneButtonOwner
  fullName: Menu.SelectOneButton.SelectOneButtonOwner
  spec.csharp:
  - uid: Menu.SelectOneButton
    name: SelectOneButton
    isExternal: true
    href: Menu.SelectOneButton.html
  - name: .
  - uid: Menu.SelectOneButton.SelectOneButtonOwner
    name: SelectOneButtonOwner
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html
  spec.vb:
  - uid: Menu.SelectOneButton
    name: SelectOneButton
    isExternal: true
    href: Menu.SelectOneButton.html
  - name: .
  - uid: Menu.SelectOneButton.SelectOneButtonOwner
    name: SelectOneButtonOwner
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html
- uid: Menu.CheckBox.IOwnCheckBox
  commentId: T:Menu.CheckBox.IOwnCheckBox
  parent: Menu
  isExternal: true
  href: Menu.CheckBox.html
  name: CheckBox.IOwnCheckBox
  nameWithType: CheckBox.IOwnCheckBox
  fullName: Menu.CheckBox.IOwnCheckBox
  spec.csharp:
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: .
  - uid: Menu.CheckBox.IOwnCheckBox
    name: IOwnCheckBox
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html
  spec.vb:
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: .
  - uid: Menu.CheckBox.IOwnCheckBox
    name: IOwnCheckBox
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html
- uid: Menu.Menu.pages
  commentId: F:Menu.Menu.pages
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_pages
  name: pages
  nameWithType: Menu.pages
  fullName: Menu.Menu.pages
- uid: Menu.Menu.mousePosition
  commentId: F:Menu.Menu.mousePosition
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_mousePosition
  name: mousePosition
  nameWithType: Menu.mousePosition
  fullName: Menu.Menu.mousePosition
- uid: Menu.Menu.lastMousePos
  commentId: F:Menu.Menu.lastMousePos
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_lastMousePos
  name: lastMousePos
  nameWithType: Menu.lastMousePos
  fullName: Menu.Menu.lastMousePos
- uid: Menu.Menu.container
  commentId: F:Menu.Menu.container
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_container
  name: container
  nameWithType: Menu.container
  fullName: Menu.Menu.container
- uid: Menu.Menu.cursorContainer
  commentId: F:Menu.Menu.cursorContainer
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_cursorContainer
  name: cursorContainer
  nameWithType: Menu.cursorContainer
  fullName: Menu.Menu.cursorContainer
- uid: Menu.Menu.scene
  commentId: F:Menu.Menu.scene
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_scene
  name: scene
  nameWithType: Menu.scene
  fullName: Menu.Menu.scene
- uid: Menu.Menu.mouseDown
  commentId: F:Menu.Menu.mouseDown
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_mouseDown
  name: mouseDown
  nameWithType: Menu.mouseDown
  fullName: Menu.Menu.mouseDown
- uid: Menu.Menu.lastMouseDown
  commentId: F:Menu.Menu.lastMouseDown
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_lastMouseDown
  name: lastMouseDown
  nameWithType: Menu.lastMouseDown
  fullName: Menu.Menu.lastMouseDown
- uid: Menu.Menu.selectedObject
  commentId: F:Menu.Menu.selectedObject
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_selectedObject
  name: selectedObject
  nameWithType: Menu.selectedObject
  fullName: Menu.Menu.selectedObject
- uid: Menu.Menu.backObject
  commentId: F:Menu.Menu.backObject
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_backObject
  name: backObject
  nameWithType: Menu.backObject
  fullName: Menu.Menu.backObject
- uid: Menu.Menu.pressButton
  commentId: F:Menu.Menu.pressButton
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_pressButton
  name: pressButton
  nameWithType: Menu.pressButton
  fullName: Menu.Menu.pressButton
- uid: Menu.Menu.holdButton
  commentId: F:Menu.Menu.holdButton
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_holdButton
  name: holdButton
  nameWithType: Menu.holdButton
  fullName: Menu.Menu.holdButton
- uid: Menu.Menu.lastHoldButton
  commentId: F:Menu.Menu.lastHoldButton
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_lastHoldButton
  name: lastHoldButton
  nameWithType: Menu.lastHoldButton
  fullName: Menu.Menu.lastHoldButton
- uid: Menu.Menu.input
  commentId: F:Menu.Menu.input
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_input
  name: input
  nameWithType: Menu.input
  fullName: Menu.Menu.input
- uid: Menu.Menu.lastInput
  commentId: F:Menu.Menu.lastInput
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_lastInput
  name: lastInput
  nameWithType: Menu.lastInput
  fullName: Menu.Menu.lastInput
- uid: Menu.Menu.currentPage
  commentId: F:Menu.Menu.currentPage
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_currentPage
  name: currentPage
  nameWithType: Menu.currentPage
  fullName: Menu.Menu.currentPage
- uid: Menu.Menu.soundLoop
  commentId: F:Menu.Menu.soundLoop
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_soundLoop
  name: soundLoop
  nameWithType: Menu.soundLoop
  fullName: Menu.Menu.soundLoop
- uid: Menu.Menu.mySoundLoopID
  commentId: F:Menu.Menu.mySoundLoopID
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_mySoundLoopID
  name: mySoundLoopID
  nameWithType: Menu.mySoundLoopID
  fullName: Menu.Menu.mySoundLoopID
- uid: Menu.Menu.mySoundLoopName
  commentId: F:Menu.Menu.mySoundLoopName
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_mySoundLoopName
  name: mySoundLoopName
  nameWithType: Menu.mySoundLoopName
  fullName: Menu.Menu.mySoundLoopName
- uid: Menu.Menu.infolabelDirty
  commentId: F:Menu.Menu.infolabelDirty
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_infolabelDirty
  name: infolabelDirty
  nameWithType: Menu.infolabelDirty
  fullName: Menu.Menu.infolabelDirty
- uid: Menu.Menu.infoLabel
  commentId: F:Menu.Menu.infoLabel
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_infoLabel
  name: infoLabel
  nameWithType: Menu.infoLabel
  fullName: Menu.Menu.infoLabel
- uid: Menu.Menu.infoLabelFade
  commentId: F:Menu.Menu.infoLabelFade
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_infoLabelFade
  name: infoLabelFade
  nameWithType: Menu.infoLabelFade
  fullName: Menu.Menu.infoLabelFade
- uid: Menu.Menu.lastInfoLabelFade
  commentId: F:Menu.Menu.lastInfoLabelFade
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_lastInfoLabelFade
  name: lastInfoLabelFade
  nameWithType: Menu.lastInfoLabelFade
  fullName: Menu.Menu.lastInfoLabelFade
- uid: Menu.Menu.infoLabelSin
  commentId: F:Menu.Menu.infoLabelSin
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_infoLabelSin
  name: infoLabelSin
  nameWithType: Menu.infoLabelSin
  fullName: Menu.Menu.infoLabelSin
- uid: Menu.Menu.gradientsContainer
  commentId: F:Menu.Menu.gradientsContainer
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_gradientsContainer
  name: gradientsContainer
  nameWithType: Menu.gradientsContainer
  fullName: Menu.Menu.gradientsContainer
- uid: Menu.Menu.mouseScrollWheelMovement
  commentId: F:Menu.Menu.mouseScrollWheelMovement
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_mouseScrollWheelMovement
  name: mouseScrollWheelMovement
  nameWithType: Menu.mouseScrollWheelMovement
  fullName: Menu.Menu.mouseScrollWheelMovement
- uid: Menu.Menu.init
  commentId: F:Menu.Menu.init
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_init
  name: init
  nameWithType: Menu.init
  fullName: Menu.Menu.init
- uid: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  commentId: M:Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_HorizontalMoveToGetCentered_ProcessManager_
  name: HorizontalMoveToGetCentered(ProcessManager)
  nameWithType: Menu.HorizontalMoveToGetCentered(ProcessManager)
  fullName: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  spec.csharp:
  - uid: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
    name: HorizontalMoveToGetCentered
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_HorizontalMoveToGetCentered_ProcessManager_
  - name: (
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
    name: HorizontalMoveToGetCentered
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_HorizontalMoveToGetCentered_ProcessManager_
  - name: (
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: )
- uid: Menu.Menu.GetFreezeMenuFunctions
  commentId: M:Menu.Menu.GetFreezeMenuFunctions
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_GetFreezeMenuFunctions
  name: GetFreezeMenuFunctions()
  nameWithType: Menu.GetFreezeMenuFunctions()
  fullName: Menu.Menu.GetFreezeMenuFunctions()
  spec.csharp:
  - uid: Menu.Menu.GetFreezeMenuFunctions
    name: GetFreezeMenuFunctions
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_GetFreezeMenuFunctions
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.GetFreezeMenuFunctions
    name: GetFreezeMenuFunctions
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_GetFreezeMenuFunctions
  - name: (
  - name: )
- uid: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  commentId: M:Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MenuColor_Menu_Menu_MenuColors_
  name: MenuColor(MenuColors)
  nameWithType: Menu.MenuColor(Menu.MenuColors)
  fullName: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  spec.csharp:
  - uid: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
    name: MenuColor
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MenuColor_Menu_Menu_MenuColors_
  - name: (
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
    name: MenuColor
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MenuColor_Menu_Menu_MenuColors_
  - name: (
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
  - name: )
- uid: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  commentId: M:Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MenuRGB_Menu_Menu_MenuColors_
  name: MenuRGB(MenuColors)
  nameWithType: Menu.MenuRGB(Menu.MenuColors)
  fullName: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  spec.csharp:
  - uid: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
    name: MenuRGB
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MenuRGB_Menu_Menu_MenuColors_
  - name: (
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
    name: MenuRGB
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MenuRGB_Menu_Menu_MenuColors_
  - name: (
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
  - name: )
- uid: Menu.Menu.Translate(System.String)
  commentId: M:Menu.Menu.Translate(System.String)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Translate_System_String_
  name: Translate(string)
  nameWithType: Menu.Translate(string)
  fullName: Menu.Menu.Translate(string)
  nameWithType.vb: Menu.Translate(String)
  fullName.vb: Menu.Menu.Translate(String)
  name.vb: Translate(String)
  spec.csharp:
  - uid: Menu.Menu.Translate(System.String)
    name: Translate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Translate_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.Menu.Translate(System.String)
    name: Translate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Translate_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.Menu.Translate(System.String,System.Int32)
  commentId: M:Menu.Menu.Translate(System.String,System.Int32)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Translate_System_String_System_Int32_
  name: Translate(string, int)
  nameWithType: Menu.Translate(string, int)
  fullName: Menu.Menu.Translate(string, int)
  nameWithType.vb: Menu.Translate(String, Integer)
  fullName.vb: Menu.Menu.Translate(String, Integer)
  name.vb: Translate(String, Integer)
  spec.csharp:
  - uid: Menu.Menu.Translate(System.String,System.Int32)
    name: Translate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Translate_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Menu.Menu.Translate(System.String,System.Int32)
    name: Translate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Translate_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Menu.Menu.Init
  commentId: M:Menu.Menu.Init
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Init
  name: Init()
  nameWithType: Menu.Init()
  fullName: Menu.Menu.Init()
  spec.csharp:
  - uid: Menu.Menu.Init
    name: Init
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Init
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.Init
    name: Init
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Init
  - name: (
  - name: )
- uid: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  commentId: M:Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MutualHorizontalButtonBind_Menu_MenuObject_Menu_MenuObject_
  name: MutualHorizontalButtonBind(MenuObject, MenuObject)
  nameWithType: Menu.MutualHorizontalButtonBind(MenuObject, MenuObject)
  fullName: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject, Menu.MenuObject)
  spec.csharp:
  - uid: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
    name: MutualHorizontalButtonBind
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MutualHorizontalButtonBind_Menu_MenuObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
    name: MutualHorizontalButtonBind
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MutualHorizontalButtonBind_Menu_MenuObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  commentId: M:Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MutualVerticalButtonBind_Menu_MenuObject_Menu_MenuObject_
  name: MutualVerticalButtonBind(MenuObject, MenuObject)
  nameWithType: Menu.MutualVerticalButtonBind(MenuObject, MenuObject)
  fullName: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject, Menu.MenuObject)
  spec.csharp:
  - uid: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
    name: MutualVerticalButtonBind
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MutualVerticalButtonBind_Menu_MenuObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
    name: MutualVerticalButtonBind
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_MutualVerticalButtonBind_Menu_MenuObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: Menu.Menu.ResetSelection
  commentId: M:Menu.Menu.ResetSelection
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ResetSelection
  name: ResetSelection()
  nameWithType: Menu.ResetSelection()
  fullName: Menu.Menu.ResetSelection()
  spec.csharp:
  - uid: Menu.Menu.ResetSelection
    name: ResetSelection
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ResetSelection
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.ResetSelection
    name: ResetSelection
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ResetSelection
  - name: (
  - name: )
- uid: Menu.Menu.GrafUpdate(System.Single)
  commentId: M:Menu.Menu.GrafUpdate(System.Single)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_GrafUpdate_System_Single_
  name: GrafUpdate(float)
  nameWithType: Menu.GrafUpdate(float)
  fullName: Menu.Menu.GrafUpdate(float)
  nameWithType.vb: Menu.GrafUpdate(Single)
  fullName.vb: Menu.Menu.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Menu.Menu.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Menu.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  commentId: M:Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_SliderSetValue_Menu_Slider_System_Single_
  name: SliderSetValue(Slider, float)
  nameWithType: Menu.SliderSetValue(Slider, float)
  fullName: Menu.Menu.SliderSetValue(Menu.Slider, float)
  nameWithType.vb: Menu.SliderSetValue(Slider, Single)
  fullName.vb: Menu.Menu.SliderSetValue(Menu.Slider, Single)
  name.vb: SliderSetValue(Slider, Single)
  spec.csharp:
  - uid: Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
    name: SliderSetValue
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_SliderSetValue_Menu_Slider_System_Single_
  - name: (
  - uid: Menu.Slider
    name: Slider
    isExternal: true
    href: Menu.Slider.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
    name: SliderSetValue
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_SliderSetValue_Menu_Slider_System_Single_
  - name: (
  - uid: Menu.Slider
    name: Slider
    isExternal: true
    href: Menu.Slider.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Menu.ValueOfSlider(Menu.Slider)
  commentId: M:Menu.Menu.ValueOfSlider(Menu.Slider)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ValueOfSlider_Menu_Slider_
  name: ValueOfSlider(Slider)
  nameWithType: Menu.ValueOfSlider(Slider)
  fullName: Menu.Menu.ValueOfSlider(Menu.Slider)
  spec.csharp:
  - uid: Menu.Menu.ValueOfSlider(Menu.Slider)
    name: ValueOfSlider
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ValueOfSlider_Menu_Slider_
  - name: (
  - uid: Menu.Slider
    name: Slider
    isExternal: true
    href: Menu.Slider.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.ValueOfSlider(Menu.Slider)
    name: ValueOfSlider
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ValueOfSlider_Menu_Slider_
  - name: (
  - uid: Menu.Slider
    name: Slider
    isExternal: true
    href: Menu.Slider.html
  - name: )
- uid: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  commentId: M:Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_CommunicateWithUpcomingProcess_MainLoopProcess_
  name: CommunicateWithUpcomingProcess(MainLoopProcess)
  nameWithType: Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  fullName: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  spec.csharp:
  - uid: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
    name: CommunicateWithUpcomingProcess
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_CommunicateWithUpcomingProcess_MainLoopProcess_
  - name: (
  - uid: Global.MainLoopProcess
    name: MainLoopProcess
    isExternal: true
    href: MainLoopProcess.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
    name: CommunicateWithUpcomingProcess
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_CommunicateWithUpcomingProcess_MainLoopProcess_
  - name: (
  - uid: Global.MainLoopProcess
    name: MainLoopProcess
    isExternal: true
    href: MainLoopProcess.html
  - name: )
- uid: Menu.Menu.PlaySound(SoundID)
  commentId: M:Menu.Menu.PlaySound(SoundID)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_
  name: PlaySound(SoundID)
  nameWithType: Menu.PlaySound(SoundID)
  fullName: Menu.Menu.PlaySound(SoundID)
  spec.csharp:
  - uid: Menu.Menu.PlaySound(SoundID)
    name: PlaySound
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: )
  spec.vb:
  - uid: Menu.Menu.PlaySound(SoundID)
    name: PlaySound
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: )
- uid: Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_System_Single_System_Single_System_Single_
  name: PlaySound(SoundID, float, float, float)
  nameWithType: Menu.PlaySound(SoundID, float, float, float)
  fullName: Menu.Menu.PlaySound(SoundID, float, float, float)
  nameWithType.vb: Menu.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: Menu.Menu.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
  spec.csharp:
  - uid: Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
    name: PlaySound
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_System_Single_System_Single_System_Single_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
    name: PlaySound
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_System_Single_System_Single_System_Single_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlayLoop_SoundID_System_Single_System_Single_System_Single_System_Boolean_
  name: PlayLoop(SoundID, float, float, float, bool)
  nameWithType: Menu.PlayLoop(SoundID, float, float, float, bool)
  fullName: Menu.Menu.PlayLoop(SoundID, float, float, float, bool)
  nameWithType.vb: Menu.PlayLoop(SoundID, Single, Single, Single, Boolean)
  fullName.vb: Menu.Menu.PlayLoop(SoundID, Single, Single, Single, Boolean)
  name.vb: PlayLoop(SoundID, Single, Single, Single, Boolean)
  spec.csharp:
  - uid: Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
    name: PlayLoop
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlayLoop_SoundID_System_Single_System_Single_System_Single_System_Boolean_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
    name: PlayLoop
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlayLoop_SoundID_System_Single_System_Single_System_Single_System_Boolean_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  commentId: M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlaySoundCustom_System_String_System_Single_System_Single_System_Single_
  name: PlaySoundCustom(string, float, float, float)
  nameWithType: Menu.PlaySoundCustom(string, float, float, float)
  fullName: Menu.Menu.PlaySoundCustom(string, float, float, float)
  nameWithType.vb: Menu.PlaySoundCustom(String, Single, Single, Single)
  fullName.vb: Menu.Menu.PlaySoundCustom(String, Single, Single, Single)
  name.vb: PlaySoundCustom(String, Single, Single, Single)
  spec.csharp:
  - uid: Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
    name: PlaySoundCustom
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySoundCustom_System_String_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
    name: PlaySoundCustom
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlaySoundCustom_System_String_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlayLoopCustom_System_String_System_Single_System_Single_System_Single_System_Boolean_
  name: PlayLoopCustom(string, float, float, float, bool)
  nameWithType: Menu.PlayLoopCustom(string, float, float, float, bool)
  fullName: Menu.Menu.PlayLoopCustom(string, float, float, float, bool)
  nameWithType.vb: Menu.PlayLoopCustom(String, Single, Single, Single, Boolean)
  fullName.vb: Menu.Menu.PlayLoopCustom(String, Single, Single, Single, Boolean)
  name.vb: PlayLoopCustom(String, Single, Single, Single, Boolean)
  spec.csharp:
  - uid: Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
    name: PlayLoopCustom
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlayLoopCustom_System_String_System_Single_System_Single_System_Single_System_Boolean_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
    name: PlayLoopCustom
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_PlayLoopCustom_System_String_System_Single_System_Single_System_Single_System_Boolean_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Menu.Menu.AllowDialogs
  commentId: P:Menu.Menu.AllowDialogs
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_AllowDialogs
  name: AllowDialogs
  nameWithType: Menu.AllowDialogs
  fullName: Menu.Menu.AllowDialogs
- uid: Menu.Menu.ShowCursor
  commentId: P:Menu.Menu.ShowCursor
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ShowCursor
  name: ShowCursor
  nameWithType: Menu.ShowCursor
  fullName: Menu.Menu.ShowCursor
- uid: Menu.Menu.Active
  commentId: P:Menu.Menu.Active
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Active
  name: Active
  nameWithType: Menu.Active
  fullName: Menu.Menu.Active
- uid: Menu.Menu.HoldButtonDisregardingFreeze
  commentId: P:Menu.Menu.HoldButtonDisregardingFreeze
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_HoldButtonDisregardingFreeze
  name: HoldButtonDisregardingFreeze
  nameWithType: Menu.HoldButtonDisregardingFreeze
  fullName: Menu.Menu.HoldButtonDisregardingFreeze
- uid: Menu.Menu.NonMouseInputDisregardingFreeze
  commentId: P:Menu.Menu.NonMouseInputDisregardingFreeze
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_NonMouseInputDisregardingFreeze
  name: NonMouseInputDisregardingFreeze
  nameWithType: Menu.NonMouseInputDisregardingFreeze
  fullName: Menu.Menu.NonMouseInputDisregardingFreeze
- uid: Menu.Menu.CurrLang
  commentId: P:Menu.Menu.CurrLang
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_CurrLang
  name: CurrLang
  nameWithType: Menu.CurrLang
  fullName: Menu.Menu.CurrLang
- uid: Global.MainLoopProcess.manager
  commentId: F:Global.MainLoopProcess.manager
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_manager
  name: manager
  nameWithType: MainLoopProcess.manager
  fullName: MainLoopProcess.manager
- uid: Global.MainLoopProcess.ID
  commentId: F:Global.MainLoopProcess.ID
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_ID
  name: ID
  nameWithType: MainLoopProcess.ID
  fullName: MainLoopProcess.ID
- uid: Global.MainLoopProcess.framesPerSecond
  commentId: F:Global.MainLoopProcess.framesPerSecond
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_framesPerSecond
  name: framesPerSecond
  nameWithType: MainLoopProcess.framesPerSecond
  fullName: MainLoopProcess.framesPerSecond
- uid: Global.MainLoopProcess.processActive
  commentId: F:Global.MainLoopProcess.processActive
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_processActive
  name: processActive
  nameWithType: MainLoopProcess.processActive
  fullName: MainLoopProcess.processActive
- uid: Global.MainLoopProcess.RawUpdate(System.Single)
  commentId: M:Global.MainLoopProcess.RawUpdate(System.Single)
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  name: RawUpdate(float)
  nameWithType: MainLoopProcess.RawUpdate(float)
  fullName: MainLoopProcess.RawUpdate(float)
  nameWithType.vb: MainLoopProcess.RawUpdate(Single)
  fullName.vb: MainLoopProcess.RawUpdate(Single)
  name.vb: RawUpdate(Single)
  spec.csharp:
  - uid: Global.MainLoopProcess.RawUpdate(System.Single)
    name: RawUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.RawUpdate(System.Single)
    name: RawUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.MainLoopProcess.TimeSpeedFac
  commentId: P:Global.MainLoopProcess.TimeSpeedFac
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_TimeSpeedFac
  name: TimeSpeedFac
  nameWithType: MainLoopProcess.TimeSpeedFac
  fullName: MainLoopProcess.TimeSpeedFac
- uid: Global.MainLoopProcess.FadeInTime
  commentId: P:Global.MainLoopProcess.FadeInTime
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_FadeInTime
  name: FadeInTime
  nameWithType: MainLoopProcess.FadeInTime
  fullName: MainLoopProcess.FadeInTime
- uid: Global.MainLoopProcess.InitialBlackSeconds
  commentId: P:Global.MainLoopProcess.InitialBlackSeconds
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_InitialBlackSeconds
  name: InitialBlackSeconds
  nameWithType: MainLoopProcess.InitialBlackSeconds
  fullName: MainLoopProcess.InitialBlackSeconds
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.SimpleButton
  commentId: T:Menu.SimpleButton
  parent: Menu
  isExternal: true
  href: Menu.SimpleButton.html
  name: SimpleButton
  nameWithType: SimpleButton
  fullName: Menu.SimpleButton
- uid: Menu.InputOptionsMenu.InputSelectButton[]
  isExternal: true
  href: Menu.InputOptionsMenu.InputSelectButton.html
  name: InputSelectButton[]
  nameWithType: InputOptionsMenu.InputSelectButton[]
  fullName: Menu.InputOptionsMenu.InputSelectButton[]
  nameWithType.vb: InputOptionsMenu.InputSelectButton()
  fullName.vb: Menu.InputOptionsMenu.InputSelectButton()
  name.vb: InputSelectButton()
  spec.csharp:
  - uid: Menu.InputOptionsMenu.InputSelectButton
    name: InputSelectButton
    isExternal: true
    href: Menu.InputOptionsMenu.InputSelectButton.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.InputOptionsMenu.InputSelectButton
    name: InputSelectButton
    isExternal: true
    href: Menu.InputOptionsMenu.InputSelectButton.html
  - name: (
  - name: )
- uid: Menu.MenuLabel[]
  isExternal: true
  href: Menu.MenuLabel.html
  name: MenuLabel[]
  nameWithType: MenuLabel[]
  fullName: Menu.MenuLabel[]
  nameWithType.vb: MenuLabel()
  fullName.vb: Menu.MenuLabel()
  name.vb: MenuLabel()
  spec.csharp:
  - uid: Menu.MenuLabel
    name: MenuLabel
    isExternal: true
    href: Menu.MenuLabel.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.MenuLabel
    name: MenuLabel
    isExternal: true
    href: Menu.MenuLabel.html
  - name: (
  - name: )
- uid: Menu.CheckBox
  commentId: T:Menu.CheckBox
  parent: Menu
  isExternal: true
  href: Menu.CheckBox.html
  name: CheckBox
  nameWithType: CheckBox
  fullName: Menu.CheckBox
- uid: System.Nullable{RWCustom.IntVector2}
  commentId: T:System.Nullable{RWCustom.IntVector2}
  parent: System
  definition: System.Nullable`1
  href: RWCustom.IntVector2.html
  name: IntVector2?
  nameWithType: IntVector2?
  fullName: RWCustom.IntVector2?
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.InputOptionsMenu.PlayerButton[]
  isExternal: true
  href: Menu.InputOptionsMenu.PlayerButton.html
  name: PlayerButton[]
  nameWithType: InputOptionsMenu.PlayerButton[]
  fullName: Menu.InputOptionsMenu.PlayerButton[]
  nameWithType.vb: InputOptionsMenu.PlayerButton()
  fullName.vb: Menu.InputOptionsMenu.PlayerButton()
  name.vb: PlayerButton()
  spec.csharp:
  - uid: Menu.InputOptionsMenu.PlayerButton
    name: PlayerButton
    isExternal: true
    href: Menu.InputOptionsMenu.PlayerButton.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.InputOptionsMenu.PlayerButton
    name: PlayerButton
    isExternal: true
    href: Menu.InputOptionsMenu.PlayerButton.html
  - name: (
  - name: )
- uid: Menu.InputOptionsMenu.DeviceButton[]
  isExternal: true
  href: Menu.InputOptionsMenu.DeviceButton.html
  name: DeviceButton[]
  nameWithType: InputOptionsMenu.DeviceButton[]
  fullName: Menu.InputOptionsMenu.DeviceButton[]
  nameWithType.vb: InputOptionsMenu.DeviceButton()
  fullName.vb: Menu.InputOptionsMenu.DeviceButton()
  name.vb: DeviceButton()
  spec.csharp:
  - uid: Menu.InputOptionsMenu.DeviceButton
    name: DeviceButton
    isExternal: true
    href: Menu.InputOptionsMenu.DeviceButton.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.InputOptionsMenu.DeviceButton
    name: DeviceButton
    isExternal: true
    href: Menu.InputOptionsMenu.DeviceButton.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{Rewired.Joystick}
  commentId: T:System.Collections.Generic.List{Rewired.Joystick}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Joystick>
  nameWithType: List<Joystick>
  fullName: System.Collections.Generic.List<Rewired.Joystick>
  nameWithType.vb: List(Of Joystick)
  fullName.vb: System.Collections.Generic.List(Of Rewired.Joystick)
  name.vb: List(Of Joystick)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Rewired.Joystick
    name: Joystick
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Rewired.Joystick
    name: Joystick
    isExternal: true
  - name: )
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Rewired.InputMapper[]
  isExternal: true
  name: InputMapper[]
  nameWithType: InputMapper[]
  fullName: Rewired.InputMapper[]
  nameWithType.vb: InputMapper()
  fullName.vb: Rewired.InputMapper()
  name.vb: InputMapper()
  spec.csharp:
  - uid: Rewired.InputMapper
    name: InputMapper
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Rewired.InputMapper
    name: InputMapper
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.InputTesterHolder
  commentId: T:Menu.InputTesterHolder
  parent: Menu
  isExternal: true
  href: Menu.InputTesterHolder.html
  name: InputTesterHolder
  nameWithType: InputTesterHolder
  fullName: Menu.InputTesterHolder
- uid: Global.ProcessManager.ProcessID
  commentId: T:Global.ProcessManager.ProcessID
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager.ProcessID
  nameWithType: ProcessManager.ProcessID
  fullName: ProcessManager.ProcessID
  spec.csharp:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  spec.vb:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
- uid: Menu.InputOptionsMenu.#ctor*
  commentId: Overload:Menu.InputOptionsMenu.#ctor
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu__ctor_ProcessManager_
  name: InputOptionsMenu
  nameWithType: InputOptionsMenu.InputOptionsMenu
  fullName: Menu.InputOptionsMenu.InputOptionsMenu
  nameWithType.vb: InputOptionsMenu.New
  fullName.vb: Menu.InputOptionsMenu.New
  name.vb: New
- uid: Global.ProcessManager
  commentId: T:Global.ProcessManager
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager
  nameWithType: ProcessManager
  fullName: ProcessManager
- uid: Menu.Menu.UpdateInfoText
  commentId: M:Menu.Menu.UpdateInfoText
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_UpdateInfoText
  name: UpdateInfoText()
  nameWithType: Menu.UpdateInfoText()
  fullName: Menu.Menu.UpdateInfoText()
  spec.csharp:
  - uid: Menu.Menu.UpdateInfoText
    name: UpdateInfoText
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_UpdateInfoText
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.UpdateInfoText
    name: UpdateInfoText
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_UpdateInfoText
  - name: (
  - name: )
- uid: Menu.InputOptionsMenu.UpdateInfoText*
  commentId: Overload:Menu.InputOptionsMenu.UpdateInfoText
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_UpdateInfoText
  name: UpdateInfoText
  nameWithType: InputOptionsMenu.UpdateInfoText
  fullName: Menu.InputOptionsMenu.UpdateInfoText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Menu.Menu.Update
  commentId: M:Menu.Menu.Update
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Update
  name: Update()
  nameWithType: Menu.Update()
  fullName: Menu.Menu.Update()
  spec.csharp:
  - uid: Menu.Menu.Update
    name: Update
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.Update
    name: Update
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Update
  - name: (
  - name: )
- uid: Menu.InputOptionsMenu.Update*
  commentId: Overload:Menu.InputOptionsMenu.Update
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_Update
  name: Update
  nameWithType: InputOptionsMenu.Update
  fullName: Menu.InputOptionsMenu.Update
- uid: Menu.InputOptionsMenu.UpdateConnectedControllerLabels*
  commentId: Overload:Menu.InputOptionsMenu.UpdateConnectedControllerLabels
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_UpdateConnectedControllerLabels
  name: UpdateConnectedControllerLabels
  nameWithType: InputOptionsMenu.UpdateConnectedControllerLabels
  fullName: Menu.InputOptionsMenu.UpdateConnectedControllerLabels
- uid: Menu.InputOptionsMenu.StopInputAssignment*
  commentId: Overload:Menu.InputOptionsMenu.StopInputAssignment
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_StopInputAssignment
  name: StopInputAssignment
  nameWithType: InputOptionsMenu.StopInputAssignment
  fullName: Menu.InputOptionsMenu.StopInputAssignment
- uid: Menu.Menu.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.Menu.Singal(Menu.MenuObject,System.String)
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Singal_Menu_MenuObject_System_String_
  name: Singal(MenuObject, string)
  nameWithType: Menu.Singal(MenuObject, string)
  fullName: Menu.Menu.Singal(Menu.MenuObject, string)
  nameWithType.vb: Menu.Singal(MenuObject, String)
  fullName.vb: Menu.Menu.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
  spec.csharp:
  - uid: Menu.Menu.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.Menu.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.InputOptionsMenu.Singal*
  commentId: Overload:Menu.InputOptionsMenu.Singal
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_Singal_Menu_MenuObject_System_String_
  name: Singal
  nameWithType: InputOptionsMenu.Singal
  fullName: Menu.InputOptionsMenu.Singal
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Menu.InputOptionsMenu.RefreshInputGreyOut*
  commentId: Overload:Menu.InputOptionsMenu.RefreshInputGreyOut
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_RefreshInputGreyOut
  name: RefreshInputGreyOut
  nameWithType: InputOptionsMenu.RefreshInputGreyOut
  fullName: Menu.InputOptionsMenu.RefreshInputGreyOut
- uid: Menu.Menu.ShutDownProcess
  commentId: M:Menu.Menu.ShutDownProcess
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ShutDownProcess
  name: ShutDownProcess()
  nameWithType: Menu.ShutDownProcess()
  fullName: Menu.Menu.ShutDownProcess()
  spec.csharp:
  - uid: Menu.Menu.ShutDownProcess
    name: ShutDownProcess
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ShutDownProcess
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.Menu.ShutDownProcess
    name: ShutDownProcess
    isExternal: true
    href: Menu.Menu.html#Menu_Menu_ShutDownProcess
  - name: (
  - name: )
- uid: Menu.InputOptionsMenu.ShutDownProcess*
  commentId: Overload:Menu.InputOptionsMenu.ShutDownProcess
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_ShutDownProcess
  name: ShutDownProcess
  nameWithType: InputOptionsMenu.ShutDownProcess
  fullName: Menu.InputOptionsMenu.ShutDownProcess
- uid: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries*
  commentId: Overload:Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_GetCurrentlySelectedOfSeries_System_String_
  name: GetCurrentlySelectedOfSeries
  nameWithType: InputOptionsMenu.GetCurrentlySelectedOfSeries
  fullName: Menu.InputOptionsMenu.GetCurrentlySelectedOfSeries
- uid: Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(System.String)
  commentId: M:Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(System.String)
  parent: Menu.SelectOneButton.SelectOneButtonOwner
  isExternal: true
  href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_GetCurrentlySelectedOfSeries_System_String_
  name: GetCurrentlySelectedOfSeries(string)
  nameWithType: SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(string)
  fullName: Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(string)
  nameWithType.vb: SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(String)
  fullName.vb: Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(String)
  name.vb: GetCurrentlySelectedOfSeries(String)
  spec.csharp:
  - uid: Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(System.String)
    name: GetCurrentlySelectedOfSeries
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_GetCurrentlySelectedOfSeries_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.SelectOneButton.SelectOneButtonOwner.GetCurrentlySelectedOfSeries(System.String)
    name: GetCurrentlySelectedOfSeries
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_GetCurrentlySelectedOfSeries_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries*
  commentId: Overload:Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_SetCurrentlySelectedOfSeries_System_String_System_Int32_
  name: SetCurrentlySelectedOfSeries
  nameWithType: InputOptionsMenu.SetCurrentlySelectedOfSeries
  fullName: Menu.InputOptionsMenu.SetCurrentlySelectedOfSeries
- uid: Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  commentId: M:Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(System.String,System.Int32)
  parent: Menu.SelectOneButton.SelectOneButtonOwner
  isExternal: true
  href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_SetCurrentlySelectedOfSeries_System_String_System_Int32_
  name: SetCurrentlySelectedOfSeries(string, int)
  nameWithType: SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(string, int)
  fullName: Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(string, int)
  nameWithType.vb: SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(String, Integer)
  fullName.vb: Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(String, Integer)
  name.vb: SetCurrentlySelectedOfSeries(String, Integer)
  spec.csharp:
  - uid: Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(System.String,System.Int32)
    name: SetCurrentlySelectedOfSeries
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_SetCurrentlySelectedOfSeries_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Menu.SelectOneButton.SelectOneButtonOwner.SetCurrentlySelectedOfSeries(System.String,System.Int32)
    name: SetCurrentlySelectedOfSeries
    isExternal: true
    href: Menu.SelectOneButton.SelectOneButtonOwner.html#Menu_SelectOneButton_SelectOneButtonOwner_SetCurrentlySelectedOfSeries_System_String_System_Int32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Menu.InputOptionsMenu.GetChecked*
  commentId: Overload:Menu.InputOptionsMenu.GetChecked
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_GetChecked_Menu_CheckBox_
  name: GetChecked
  nameWithType: InputOptionsMenu.GetChecked
  fullName: Menu.InputOptionsMenu.GetChecked
- uid: Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
  commentId: M:Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
  parent: Menu.CheckBox.IOwnCheckBox
  isExternal: true
  href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_GetChecked_Menu_CheckBox_
  name: GetChecked(CheckBox)
  nameWithType: CheckBox.IOwnCheckBox.GetChecked(CheckBox)
  fullName: Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
  spec.csharp:
  - uid: Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
    name: GetChecked
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_GetChecked_Menu_CheckBox_
  - name: (
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: )
  spec.vb:
  - uid: Menu.CheckBox.IOwnCheckBox.GetChecked(Menu.CheckBox)
    name: GetChecked
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_GetChecked_Menu_CheckBox_
  - name: (
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: )
- uid: Menu.InputOptionsMenu.SetChecked*
  commentId: Overload:Menu.InputOptionsMenu.SetChecked
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_SetChecked_Menu_CheckBox_System_Boolean_
  name: SetChecked
  nameWithType: InputOptionsMenu.SetChecked
  fullName: Menu.InputOptionsMenu.SetChecked
- uid: Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox,System.Boolean)
  commentId: M:Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox,System.Boolean)
  parent: Menu.CheckBox.IOwnCheckBox
  isExternal: true
  href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_SetChecked_Menu_CheckBox_System_Boolean_
  name: SetChecked(CheckBox, bool)
  nameWithType: CheckBox.IOwnCheckBox.SetChecked(CheckBox, bool)
  fullName: Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox, bool)
  nameWithType.vb: CheckBox.IOwnCheckBox.SetChecked(CheckBox, Boolean)
  fullName.vb: Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox, Boolean)
  name.vb: SetChecked(CheckBox, Boolean)
  spec.csharp:
  - uid: Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox,System.Boolean)
    name: SetChecked
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_SetChecked_Menu_CheckBox_System_Boolean_
  - name: (
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Menu.CheckBox.IOwnCheckBox.SetChecked(Menu.CheckBox,System.Boolean)
    name: SetChecked
    isExternal: true
    href: Menu.CheckBox.IOwnCheckBox.html#Menu_CheckBox_IOwnCheckBox_SetChecked_Menu_CheckBox_System_Boolean_
  - name: (
  - uid: Menu.CheckBox
    name: CheckBox
    isExternal: true
    href: Menu.CheckBox.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Menu.Menu.ForceNoMouseMode
  commentId: P:Menu.Menu.ForceNoMouseMode
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ForceNoMouseMode
  name: ForceNoMouseMode
  nameWithType: Menu.ForceNoMouseMode
  fullName: Menu.Menu.ForceNoMouseMode
- uid: Menu.InputOptionsMenu.ForceNoMouseMode*
  commentId: Overload:Menu.InputOptionsMenu.ForceNoMouseMode
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_ForceNoMouseMode
  name: ForceNoMouseMode
  nameWithType: InputOptionsMenu.ForceNoMouseMode
  fullName: Menu.InputOptionsMenu.ForceNoMouseMode
- uid: Menu.Menu.FreezeMenuFunctions
  commentId: P:Menu.Menu.FreezeMenuFunctions
  parent: Menu.Menu
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_FreezeMenuFunctions
  name: FreezeMenuFunctions
  nameWithType: Menu.FreezeMenuFunctions
  fullName: Menu.Menu.FreezeMenuFunctions
- uid: Menu.InputOptionsMenu.FreezeMenuFunctions*
  commentId: Overload:Menu.InputOptionsMenu.FreezeMenuFunctions
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_FreezeMenuFunctions
  name: FreezeMenuFunctions
  nameWithType: InputOptionsMenu.FreezeMenuFunctions
  fullName: Menu.InputOptionsMenu.FreezeMenuFunctions
- uid: Menu.InputOptionsMenu.CurrentControlSetup*
  commentId: Overload:Menu.InputOptionsMenu.CurrentControlSetup
  isExternal: true
  href: Menu.InputOptionsMenu.html#Menu_InputOptionsMenu_CurrentControlSetup
  name: CurrentControlSetup
  nameWithType: InputOptionsMenu.CurrentControlSetup
  fullName: Menu.InputOptionsMenu.CurrentControlSetup
- uid: Global.Options.ControlSetup
  commentId: T:Global.Options.ControlSetup
  isExternal: true
  href: Options.html
  name: Options.ControlSetup
  nameWithType: Options.ControlSetup
  fullName: Options.ControlSetup
  spec.csharp:
  - uid: Global.Options
    name: Options
    isExternal: true
    href: Options.html
  - name: .
  - uid: Global.Options.ControlSetup
    name: ControlSetup
    isExternal: true
    href: Options.ControlSetup.html
  spec.vb:
  - uid: Global.Options
    name: Options
    isExternal: true
    href: Options.html
  - name: .
  - uid: Global.Options.ControlSetup
    name: ControlSetup
    isExternal: true
    href: Options.ControlSetup.html
