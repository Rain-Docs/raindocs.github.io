### YamlMime:ManagedReference
items:
- uid: Global.FlyAI.FlockBehavior
  commentId: T:Global.FlyAI.FlockBehavior
  id: FlyAI.FlockBehavior
  parent: Global
  children:
  - Global.FlyAI.FlockBehavior.#ctor(FlyAI)
  - Global.FlyAI.FlockBehavior.Dominance
  - Global.FlyAI.FlockBehavior.Update
  - Global.FlyAI.FlockBehavior.col
  - Global.FlyAI.FlockBehavior.collectiveMovement
  - Global.FlyAI.FlockBehavior.distanceToOthers
  - Global.FlyAI.FlockBehavior.dom
  - Global.FlyAI.FlockBehavior.drop
  - Global.FlyAI.FlockBehavior.exaggerateDirectionOfOthers
  - Global.FlyAI.FlockBehavior.flockDir
  - Global.FlyAI.FlockBehavior.formChains
  - Global.FlyAI.FlockBehavior.leader
  - Global.FlyAI.FlockBehavior.life
  - Global.FlyAI.FlockBehavior.lifeTime
  - Global.FlyAI.FlockBehavior.sinCycle
  - Global.FlyAI.FlockBehavior.swarmFlightSinAmpl
  - Global.FlyAI.FlockBehavior.swarmFlightSinFreq
  - Global.FlyAI.FlockBehavior.swarmFlightVerticalDisplace
  langs:
  - csharp
  - vb
  name: FlyAI.FlockBehavior
  nameWithType: FlyAI.FlockBehavior
  fullName: FlyAI.FlockBehavior
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FlyAI.FlockBehavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FlyAI.FlockBehavior
    content.vb: Public Class FlyAI.FlockBehavior
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FlyAI.FlockBehavior.drop
  commentId: F:Global.FlyAI.FlockBehavior.drop
  id: drop
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: drop
  nameWithType: FlyAI.FlockBehavior.drop
  fullName: FlyAI.FlockBehavior.drop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.drop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool drop
    return:
      type: System.Boolean
    content.vb: Public drop As Boolean
- uid: Global.FlyAI.FlockBehavior.formChains
  commentId: F:Global.FlyAI.FlockBehavior.formChains
  id: formChains
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: formChains
  nameWithType: FlyAI.FlockBehavior.formChains
  fullName: FlyAI.FlockBehavior.formChains
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.formChains</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool formChains
    return:
      type: System.Boolean
    content.vb: Public formChains As Boolean
- uid: Global.FlyAI.FlockBehavior.sinCycle
  commentId: F:Global.FlyAI.FlockBehavior.sinCycle
  id: sinCycle
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: sinCycle
  nameWithType: FlyAI.FlockBehavior.sinCycle
  fullName: FlyAI.FlockBehavior.sinCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.sinCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sinCycle
    return:
      type: System.Single
    content.vb: Public sinCycle As Single
- uid: Global.FlyAI.FlockBehavior.swarmFlightSinFreq
  commentId: F:Global.FlyAI.FlockBehavior.swarmFlightSinFreq
  id: swarmFlightSinFreq
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: swarmFlightSinFreq
  nameWithType: FlyAI.FlockBehavior.swarmFlightSinFreq
  fullName: FlyAI.FlockBehavior.swarmFlightSinFreq
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.swarmFlightSinFreq</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swarmFlightSinFreq
    return:
      type: System.Single
    content.vb: Public swarmFlightSinFreq As Single
- uid: Global.FlyAI.FlockBehavior.swarmFlightSinAmpl
  commentId: F:Global.FlyAI.FlockBehavior.swarmFlightSinAmpl
  id: swarmFlightSinAmpl
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: swarmFlightSinAmpl
  nameWithType: FlyAI.FlockBehavior.swarmFlightSinAmpl
  fullName: FlyAI.FlockBehavior.swarmFlightSinAmpl
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.swarmFlightSinAmpl</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swarmFlightSinAmpl
    return:
      type: System.Single
    content.vb: Public swarmFlightSinAmpl As Single
- uid: Global.FlyAI.FlockBehavior.swarmFlightVerticalDisplace
  commentId: F:Global.FlyAI.FlockBehavior.swarmFlightVerticalDisplace
  id: swarmFlightVerticalDisplace
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: swarmFlightVerticalDisplace
  nameWithType: FlyAI.FlockBehavior.swarmFlightVerticalDisplace
  fullName: FlyAI.FlockBehavior.swarmFlightVerticalDisplace
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.swarmFlightVerticalDisplace</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swarmFlightVerticalDisplace
    return:
      type: System.Single
    content.vb: Public swarmFlightVerticalDisplace As Single
- uid: Global.FlyAI.FlockBehavior.distanceToOthers
  commentId: F:Global.FlyAI.FlockBehavior.distanceToOthers
  id: distanceToOthers
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: distanceToOthers
  nameWithType: FlyAI.FlockBehavior.distanceToOthers
  fullName: FlyAI.FlockBehavior.distanceToOthers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.distanceToOthers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float distanceToOthers
    return:
      type: System.Single
    content.vb: Public distanceToOthers As Single
- uid: Global.FlyAI.FlockBehavior.exaggerateDirectionOfOthers
  commentId: F:Global.FlyAI.FlockBehavior.exaggerateDirectionOfOthers
  id: exaggerateDirectionOfOthers
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: exaggerateDirectionOfOthers
  nameWithType: FlyAI.FlockBehavior.exaggerateDirectionOfOthers
  fullName: FlyAI.FlockBehavior.exaggerateDirectionOfOthers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.exaggerateDirectionOfOthers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float exaggerateDirectionOfOthers
    return:
      type: System.Single
    content.vb: Public exaggerateDirectionOfOthers As Single
- uid: Global.FlyAI.FlockBehavior.collectiveMovement
  commentId: F:Global.FlyAI.FlockBehavior.collectiveMovement
  id: collectiveMovement
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: collectiveMovement
  nameWithType: FlyAI.FlockBehavior.collectiveMovement
  fullName: FlyAI.FlockBehavior.collectiveMovement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.collectiveMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float collectiveMovement
    return:
      type: System.Single
    content.vb: Public collectiveMovement As Single
- uid: Global.FlyAI.FlockBehavior.flockDir
  commentId: F:Global.FlyAI.FlockBehavior.flockDir
  id: flockDir
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: flockDir
  nameWithType: FlyAI.FlockBehavior.flockDir
  fullName: FlyAI.FlockBehavior.flockDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.flockDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 flockDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public flockDir As Vector2
- uid: Global.FlyAI.FlockBehavior.leader
  commentId: F:Global.FlyAI.FlockBehavior.leader
  id: leader
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: leader
  nameWithType: FlyAI.FlockBehavior.leader
  fullName: FlyAI.FlockBehavior.leader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.leader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FlyAI leader
    return:
      type: Global.FlyAI
    content.vb: Public leader As FlyAI
- uid: Global.FlyAI.FlockBehavior.life
  commentId: F:Global.FlyAI.FlockBehavior.life
  id: life
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: life
  nameWithType: FlyAI.FlockBehavior.life
  fullName: FlyAI.FlockBehavior.life
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.life</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float life
    return:
      type: System.Single
    content.vb: Public life As Single
- uid: Global.FlyAI.FlockBehavior.lifeTime
  commentId: F:Global.FlyAI.FlockBehavior.lifeTime
  id: lifeTime
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: lifeTime
  nameWithType: FlyAI.FlockBehavior.lifeTime
  fullName: FlyAI.FlockBehavior.lifeTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.lifeTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lifeTime
    return:
      type: System.Single
    content.vb: Public lifeTime As Single
- uid: Global.FlyAI.FlockBehavior.dom
  commentId: F:Global.FlyAI.FlockBehavior.dom
  id: dom
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: dom
  nameWithType: FlyAI.FlockBehavior.dom
  fullName: FlyAI.FlockBehavior.dom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.dom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dom
    return:
      type: System.Single
    content.vb: Public dom As Single
- uid: Global.FlyAI.FlockBehavior.col
  commentId: F:Global.FlyAI.FlockBehavior.col
  id: col
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: col
  nameWithType: FlyAI.FlockBehavior.col
  fullName: FlyAI.FlockBehavior.col
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FlyAI.FlockBehavior.col</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color col
    return:
      type: UnityEngine.Color
    content.vb: Public col As Color
- uid: Global.FlyAI.FlockBehavior.#ctor(FlyAI)
  commentId: M:Global.FlyAI.FlockBehavior.#ctor(FlyAI)
  id: '#ctor(FlyAI)'
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: FlockBehavior(FlyAI)
  nameWithType: FlyAI.FlockBehavior.FlockBehavior(FlyAI)
  fullName: FlyAI.FlockBehavior.FlockBehavior(FlyAI)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FlyAI.FlockBehavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FlockBehavior(FlyAI leader)
    parameters:
    - id: leader
      type: Global.FlyAI
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leader</parameter>
            <parameter>M:FlyAI.FlockBehavior.#ctor(FlyAI)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(leader As FlyAI)
  overload: Global.FlyAI.FlockBehavior.#ctor*
  nameWithType.vb: FlyAI.FlockBehavior.New(FlyAI)
  fullName.vb: FlyAI.FlockBehavior.New(FlyAI)
  name.vb: New(FlyAI)
- uid: Global.FlyAI.FlockBehavior.Update
  commentId: M:Global.FlyAI.FlockBehavior.Update
  id: Update
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: FlyAI.FlockBehavior.Update()
  fullName: FlyAI.FlockBehavior.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FlyAI.FlockBehavior.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.FlyAI.FlockBehavior.Update*
- uid: Global.FlyAI.FlockBehavior.Dominance
  commentId: P:Global.FlyAI.FlockBehavior.Dominance
  id: Dominance
  parent: Global.FlyAI.FlockBehavior
  langs:
  - csharp
  - vb
  name: Dominance
  nameWithType: FlyAI.FlockBehavior.Dominance
  fullName: FlyAI.FlockBehavior.Dominance
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FlyAI.FlockBehavior.Dominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Dominance { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Dominance As Single
  overload: Global.FlyAI.FlockBehavior.Dominance*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FlyAI
  commentId: T:Global.FlyAI
  isExternal: true
  href: FlyAI.html
  name: FlyAI
  nameWithType: FlyAI
  fullName: FlyAI
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.FlyAI.FlockBehavior.#ctor*
  commentId: Overload:Global.FlyAI.FlockBehavior.#ctor
  isExternal: true
  href: Global.FlyAI.FlockBehavior.html#FlyAI_FlockBehavior__ctor_FlyAI_
  name: FlockBehavior
  nameWithType: FlyAI.FlockBehavior.FlockBehavior
  fullName: FlyAI.FlockBehavior.FlockBehavior
  nameWithType.vb: FlyAI.FlockBehavior.New
  fullName.vb: FlyAI.FlockBehavior.New
  name.vb: New
- uid: Global.FlyAI.FlockBehavior.Update*
  commentId: Overload:Global.FlyAI.FlockBehavior.Update
  isExternal: true
  href: Global.FlyAI.FlockBehavior.html#FlyAI_FlockBehavior_Update
  name: Update
  nameWithType: FlyAI.FlockBehavior.Update
  fullName: FlyAI.FlockBehavior.Update
- uid: Global.FlyAI.FlockBehavior.Dominance*
  commentId: Overload:Global.FlyAI.FlockBehavior.Dominance
  isExternal: true
  href: Global.FlyAI.FlockBehavior.html#FlyAI_FlockBehavior_Dominance
  name: Dominance
  nameWithType: FlyAI.FlockBehavior.Dominance
  fullName: FlyAI.FlockBehavior.Dominance
