### YamlMime:ManagedReference
items:
- uid: Global.QuickPathFinder.PathNode
  commentId: T:Global.QuickPathFinder.PathNode
  id: QuickPathFinder.PathNode
  parent: Global
  children:
  - Global.QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)
  - Global.QuickPathFinder.PathNode.Pos
  - Global.QuickPathFinder.PathNode.heuresticValue
  - Global.QuickPathFinder.PathNode.nextInHeap
  - Global.QuickPathFinder.PathNode.oneStepCloserToGoal
  - Global.QuickPathFinder.PathNode.stepsToGoal
  - Global.QuickPathFinder.PathNode.x
  - Global.QuickPathFinder.PathNode.y
  langs:
  - csharp
  - vb
  name: QuickPathFinder.PathNode
  nameWithType: QuickPathFinder.PathNode
  fullName: QuickPathFinder.PathNode
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:QuickPathFinder.PathNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class QuickPathFinder.PathNode
    content.vb: Public Class QuickPathFinder.PathNode
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.QuickPathFinder.PathNode.oneStepCloserToGoal
  commentId: F:Global.QuickPathFinder.PathNode.oneStepCloserToGoal
  id: oneStepCloserToGoal
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: oneStepCloserToGoal
  nameWithType: QuickPathFinder.PathNode.oneStepCloserToGoal
  fullName: QuickPathFinder.PathNode.oneStepCloserToGoal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.oneStepCloserToGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public QuickPathFinder.PathNode oneStepCloserToGoal
    return:
      type: Global.QuickPathFinder.PathNode
    content.vb: Public oneStepCloserToGoal As QuickPathFinder.PathNode
- uid: Global.QuickPathFinder.PathNode.nextInHeap
  commentId: F:Global.QuickPathFinder.PathNode.nextInHeap
  id: nextInHeap
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: nextInHeap
  nameWithType: QuickPathFinder.PathNode.nextInHeap
  fullName: QuickPathFinder.PathNode.nextInHeap
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.nextInHeap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public QuickPathFinder.PathNode nextInHeap
    return:
      type: Global.QuickPathFinder.PathNode
    content.vb: Public nextInHeap As QuickPathFinder.PathNode
- uid: Global.QuickPathFinder.PathNode.x
  commentId: F:Global.QuickPathFinder.PathNode.x
  id: x
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: x
  nameWithType: QuickPathFinder.PathNode.x
  fullName: QuickPathFinder.PathNode.x
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.x</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int x
    return:
      type: System.Int32
    content.vb: Public x As Integer
- uid: Global.QuickPathFinder.PathNode.y
  commentId: F:Global.QuickPathFinder.PathNode.y
  id: y
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: y
  nameWithType: QuickPathFinder.PathNode.y
  fullName: QuickPathFinder.PathNode.y
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.y</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int y
    return:
      type: System.Int32
    content.vb: Public y As Integer
- uid: Global.QuickPathFinder.PathNode.stepsToGoal
  commentId: F:Global.QuickPathFinder.PathNode.stepsToGoal
  id: stepsToGoal
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: stepsToGoal
  nameWithType: QuickPathFinder.PathNode.stepsToGoal
  fullName: QuickPathFinder.PathNode.stepsToGoal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.stepsToGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost stepsToGoal
    return:
      type: Global.PathCost
    content.vb: Public stepsToGoal As PathCost
- uid: Global.QuickPathFinder.PathNode.heuresticValue
  commentId: F:Global.QuickPathFinder.PathNode.heuresticValue
  id: heuresticValue
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: heuresticValue
  nameWithType: QuickPathFinder.PathNode.heuresticValue
  fullName: QuickPathFinder.PathNode.heuresticValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:QuickPathFinder.PathNode.heuresticValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost heuresticValue
    return:
      type: Global.PathCost
    content.vb: Public heuresticValue As PathCost
- uid: Global.QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)
  commentId: M:Global.QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)
  id: '#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)'
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: PathNode(int, int, PathNode, PathCost, PathCost)
  nameWithType: QuickPathFinder.PathNode.PathNode(int, int, QuickPathFinder.PathNode, PathCost, PathCost)
  fullName: QuickPathFinder.PathNode.PathNode(int, int, QuickPathFinder.PathNode, PathCost, PathCost)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>QuickPathFinder.PathNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathNode(int x, int y, QuickPathFinder.PathNode oneStepCloserToGoal, PathCost stepsToGoal, PathCost heuresticValue)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)</parameter>
          </include>
        </markup>
    - id: oneStepCloserToGoal
      type: Global.QuickPathFinder.PathNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oneStepCloserToGoal</parameter>
            <parameter>M:QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)</parameter>
          </include>
        </markup>
    - id: stepsToGoal
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stepsToGoal</parameter>
            <parameter>M:QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)</parameter>
          </include>
        </markup>
    - id: heuresticValue
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>heuresticValue</parameter>
            <parameter>M:QuickPathFinder.PathNode.#ctor(System.Int32,System.Int32,QuickPathFinder.PathNode,PathCost,PathCost)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(x As Integer, y As Integer, oneStepCloserToGoal As QuickPathFinder.PathNode, stepsToGoal As PathCost, heuresticValue As PathCost)
  overload: Global.QuickPathFinder.PathNode.#ctor*
  nameWithType.vb: QuickPathFinder.PathNode.New(Integer, Integer, QuickPathFinder.PathNode, PathCost, PathCost)
  fullName.vb: QuickPathFinder.PathNode.New(Integer, Integer, QuickPathFinder.PathNode, PathCost, PathCost)
  name.vb: New(Integer, Integer, PathNode, PathCost, PathCost)
- uid: Global.QuickPathFinder.PathNode.Pos
  commentId: P:Global.QuickPathFinder.PathNode.Pos
  id: Pos
  parent: Global.QuickPathFinder.PathNode
  langs:
  - csharp
  - vb
  name: Pos
  nameWithType: QuickPathFinder.PathNode.Pos
  fullName: QuickPathFinder.PathNode.Pos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:QuickPathFinder.PathNode.Pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 Pos { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property Pos As IntVector2
  overload: Global.QuickPathFinder.PathNode.Pos*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.QuickPathFinder.PathNode
  commentId: T:Global.QuickPathFinder.PathNode
  isExternal: true
  href: QuickPathFinder.html
  name: QuickPathFinder.PathNode
  nameWithType: QuickPathFinder.PathNode
  fullName: QuickPathFinder.PathNode
  spec.csharp:
  - uid: Global.QuickPathFinder
    name: QuickPathFinder
    isExternal: true
    href: QuickPathFinder.html
  - name: .
  - uid: Global.QuickPathFinder.PathNode
    name: PathNode
    isExternal: true
    href: QuickPathFinder.PathNode.html
  spec.vb:
  - uid: Global.QuickPathFinder
    name: QuickPathFinder
    isExternal: true
    href: QuickPathFinder.html
  - name: .
  - uid: Global.QuickPathFinder.PathNode
    name: PathNode
    isExternal: true
    href: QuickPathFinder.PathNode.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: Global.QuickPathFinder.PathNode.#ctor*
  commentId: Overload:Global.QuickPathFinder.PathNode.#ctor
  isExternal: true
  href: Global.QuickPathFinder.PathNode.html#QuickPathFinder_PathNode__ctor_System_Int32_System_Int32_QuickPathFinder_PathNode_PathCost_PathCost_
  name: PathNode
  nameWithType: QuickPathFinder.PathNode.PathNode
  fullName: QuickPathFinder.PathNode.PathNode
  nameWithType.vb: QuickPathFinder.PathNode.New
  fullName.vb: QuickPathFinder.PathNode.New
  name.vb: New
- uid: Global.QuickPathFinder.PathNode.Pos*
  commentId: Overload:Global.QuickPathFinder.PathNode.Pos
  isExternal: true
  href: Global.QuickPathFinder.PathNode.html#QuickPathFinder_PathNode_Pos
  name: Pos
  nameWithType: QuickPathFinder.PathNode.Pos
  fullName: QuickPathFinder.PathNode.Pos
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
