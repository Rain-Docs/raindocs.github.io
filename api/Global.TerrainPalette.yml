### YamlMime:ManagedReference
items:
- uid: Global.TerrainPalette
  commentId: T:Global.TerrainPalette
  id: TerrainPalette
  parent: Global
  children:
  - Global.TerrainPalette.#ctor(System.String,System.String)
  - Global.TerrainPalette.DarkDustColor
  - Global.TerrainPalette.FadePaletteName
  - Global.TerrainPalette.GlitterColor
  - Global.TerrainPalette.LightDustColor
  - Global.TerrainPalette.LightTint
  - Global.TerrainPalette.MainPaletteName
  - Global.TerrainPalette.Reload
  - Global.TerrainPalette.SandstormColor
  - Global.TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)
  - Global.TerrainPalette.texture
  langs:
  - csharp
  - vb
  name: TerrainPalette
  nameWithType: TerrainPalette
  fullName: TerrainPalette
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TerrainPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class TerrainPalette
    content.vb: Public Class TerrainPalette
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.TerrainPalette.texture
  commentId: F:Global.TerrainPalette.texture
  id: texture
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: texture
  nameWithType: TerrainPalette.texture
  fullName: TerrainPalette.texture
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TerrainPalette.texture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly Texture2D texture
    return:
      type: UnityEngine.Texture2D
    content.vb: Public ReadOnly texture As Texture2D
- uid: Global.TerrainPalette.#ctor(System.String,System.String)
  commentId: M:Global.TerrainPalette.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: TerrainPalette(string, string)
  nameWithType: TerrainPalette.TerrainPalette(string, string)
  fullName: TerrainPalette.TerrainPalette(string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TerrainPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TerrainPalette(string name, string fadeName)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:TerrainPalette.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: fadeName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fadeName</parameter>
            <parameter>M:TerrainPalette.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, fadeName As String)
  overload: Global.TerrainPalette.#ctor*
  nameWithType.vb: TerrainPalette.New(String, String)
  fullName.vb: TerrainPalette.New(String, String)
  name.vb: New(String, String)
- uid: Global.TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)
  id: UpdateFade(System.Single,System.Single,System.Single,System.Single)
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: UpdateFade(float, float, float, float)
  nameWithType: TerrainPalette.UpdateFade(float, float, float, float)
  fullName: TerrainPalette.UpdateFade(float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateFade(float fade, float mushroom, float rain, float echo)
    parameters:
    - id: fade
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fade</parameter>
            <parameter>M:TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: mushroom
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mushroom</parameter>
            <parameter>M:TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rain
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rain</parameter>
            <parameter>M:TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: echo
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>echo</parameter>
            <parameter>M:TerrainPalette.UpdateFade(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateFade(fade As Single, mushroom As Single, rain As Single, echo As Single)
  overload: Global.TerrainPalette.UpdateFade*
  nameWithType.vb: TerrainPalette.UpdateFade(Single, Single, Single, Single)
  fullName.vb: TerrainPalette.UpdateFade(Single, Single, Single, Single)
  name.vb: UpdateFade(Single, Single, Single, Single)
- uid: Global.TerrainPalette.Reload
  commentId: M:Global.TerrainPalette.Reload
  id: Reload
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: TerrainPalette.Reload()
  fullName: TerrainPalette.Reload()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainPalette.Reload</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reload()
    content.vb: Public Sub Reload()
  overload: Global.TerrainPalette.Reload*
- uid: Global.TerrainPalette.GlitterColor
  commentId: P:Global.TerrainPalette.GlitterColor
  id: GlitterColor
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: GlitterColor
  nameWithType: TerrainPalette.GlitterColor
  fullName: TerrainPalette.GlitterColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.GlitterColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GlitterColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property GlitterColor As Color
  overload: Global.TerrainPalette.GlitterColor*
- uid: Global.TerrainPalette.LightTint
  commentId: P:Global.TerrainPalette.LightTint
  id: LightTint
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: LightTint
  nameWithType: TerrainPalette.LightTint
  fullName: TerrainPalette.LightTint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.LightTint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color LightTint { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property LightTint As Color
  overload: Global.TerrainPalette.LightTint*
- uid: Global.TerrainPalette.DarkDustColor
  commentId: P:Global.TerrainPalette.DarkDustColor
  id: DarkDustColor
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: DarkDustColor
  nameWithType: TerrainPalette.DarkDustColor
  fullName: TerrainPalette.DarkDustColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.DarkDustColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color DarkDustColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property DarkDustColor As Color
  overload: Global.TerrainPalette.DarkDustColor*
- uid: Global.TerrainPalette.LightDustColor
  commentId: P:Global.TerrainPalette.LightDustColor
  id: LightDustColor
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: LightDustColor
  nameWithType: TerrainPalette.LightDustColor
  fullName: TerrainPalette.LightDustColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.LightDustColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color LightDustColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property LightDustColor As Color
  overload: Global.TerrainPalette.LightDustColor*
- uid: Global.TerrainPalette.SandstormColor
  commentId: P:Global.TerrainPalette.SandstormColor
  id: SandstormColor
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: SandstormColor
  nameWithType: TerrainPalette.SandstormColor
  fullName: TerrainPalette.SandstormColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.SandstormColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color? SandstormColor { get; }
    parameters: []
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public ReadOnly Property SandstormColor As Color?
  overload: Global.TerrainPalette.SandstormColor*
- uid: Global.TerrainPalette.MainPaletteName
  commentId: P:Global.TerrainPalette.MainPaletteName
  id: MainPaletteName
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: MainPaletteName
  nameWithType: TerrainPalette.MainPaletteName
  fullName: TerrainPalette.MainPaletteName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.MainPaletteName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string MainPaletteName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MainPaletteName As String
  overload: Global.TerrainPalette.MainPaletteName*
- uid: Global.TerrainPalette.FadePaletteName
  commentId: P:Global.TerrainPalette.FadePaletteName
  id: FadePaletteName
  parent: Global.TerrainPalette
  langs:
  - csharp
  - vb
  name: FadePaletteName
  nameWithType: TerrainPalette.FadePaletteName
  fullName: TerrainPalette.FadePaletteName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:TerrainPalette.FadePaletteName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string FadePaletteName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FadePaletteName As String
  overload: Global.TerrainPalette.FadePaletteName*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Global.TerrainPalette.#ctor*
  commentId: Overload:Global.TerrainPalette.#ctor
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette__ctor_System_String_System_String_
  name: TerrainPalette
  nameWithType: TerrainPalette.TerrainPalette
  fullName: TerrainPalette.TerrainPalette
  nameWithType.vb: TerrainPalette.New
  fullName.vb: TerrainPalette.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.TerrainPalette.UpdateFade*
  commentId: Overload:Global.TerrainPalette.UpdateFade
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_UpdateFade_System_Single_System_Single_System_Single_System_Single_
  name: UpdateFade
  nameWithType: TerrainPalette.UpdateFade
  fullName: TerrainPalette.UpdateFade
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.TerrainPalette.Reload*
  commentId: Overload:Global.TerrainPalette.Reload
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_Reload
  name: Reload
  nameWithType: TerrainPalette.Reload
  fullName: TerrainPalette.Reload
- uid: Global.TerrainPalette.GlitterColor*
  commentId: Overload:Global.TerrainPalette.GlitterColor
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_GlitterColor
  name: GlitterColor
  nameWithType: TerrainPalette.GlitterColor
  fullName: TerrainPalette.GlitterColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.TerrainPalette.LightTint*
  commentId: Overload:Global.TerrainPalette.LightTint
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_LightTint
  name: LightTint
  nameWithType: TerrainPalette.LightTint
  fullName: TerrainPalette.LightTint
- uid: Global.TerrainPalette.DarkDustColor*
  commentId: Overload:Global.TerrainPalette.DarkDustColor
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_DarkDustColor
  name: DarkDustColor
  nameWithType: TerrainPalette.DarkDustColor
  fullName: TerrainPalette.DarkDustColor
- uid: Global.TerrainPalette.LightDustColor*
  commentId: Overload:Global.TerrainPalette.LightDustColor
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_LightDustColor
  name: LightDustColor
  nameWithType: TerrainPalette.LightDustColor
  fullName: TerrainPalette.LightDustColor
- uid: Global.TerrainPalette.SandstormColor*
  commentId: Overload:Global.TerrainPalette.SandstormColor
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_SandstormColor
  name: SandstormColor
  nameWithType: TerrainPalette.SandstormColor
  fullName: TerrainPalette.SandstormColor
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.TerrainPalette.MainPaletteName*
  commentId: Overload:Global.TerrainPalette.MainPaletteName
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_MainPaletteName
  name: MainPaletteName
  nameWithType: TerrainPalette.MainPaletteName
  fullName: TerrainPalette.MainPaletteName
- uid: Global.TerrainPalette.FadePaletteName*
  commentId: Overload:Global.TerrainPalette.FadePaletteName
  isExternal: true
  href: Global.TerrainPalette.html#TerrainPalette_FadePaletteName
  name: FadePaletteName
  nameWithType: TerrainPalette.FadePaletteName
  fullName: TerrainPalette.FadePaletteName
