### YamlMime:ManagedReference
items:
- uid: Global.FFont
  commentId: T:Global.FFont
  id: FFont
  parent: Global
  children:
  - Global.FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)
  - Global.FFont.ASCII_HYPHEN_MINUS
  - Global.FFont.ASCII_LINEHEIGHT_REFERENCE
  - Global.FFont.ASCII_NEWLINE
  - Global.FFont.ASCII_SPACE
  - Global.FFont.CombineWithFont(FFont,System.Single)
  - Global.FFont.GetQuadInfoForText(System.String,FTextParams)
  - Global.FFont.LineHeight
  - Global.FFont.element
  - Global.FFont.lineHeight
  - Global.FFont.maxCharWidth
  - Global.FFont.name
  - Global.FFont.offsetX
  - Global.FFont.offsetY
  - Global.FFont.textParams
  langs:
  - csharp
  - vb
  name: FFont
  nameWithType: FFont
  fullName: FFont
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FFont</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FFont
    content.vb: Public Class FFont
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FFont.ASCII_NEWLINE
  commentId: F:Global.FFont.ASCII_NEWLINE
  id: ASCII_NEWLINE
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: ASCII_NEWLINE
  nameWithType: FFont.ASCII_NEWLINE
  fullName: FFont.ASCII_NEWLINE
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFont.ASCII_NEWLINE</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int ASCII_NEWLINE = 10
    return:
      type: System.Int32
    content.vb: Public Const ASCII_NEWLINE As Integer = 10
- uid: Global.FFont.ASCII_SPACE
  commentId: F:Global.FFont.ASCII_SPACE
  id: ASCII_SPACE
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: ASCII_SPACE
  nameWithType: FFont.ASCII_SPACE
  fullName: FFont.ASCII_SPACE
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFont.ASCII_SPACE</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int ASCII_SPACE = 32
    return:
      type: System.Int32
    content.vb: Public Const ASCII_SPACE As Integer = 32
- uid: Global.FFont.ASCII_HYPHEN_MINUS
  commentId: F:Global.FFont.ASCII_HYPHEN_MINUS
  id: ASCII_HYPHEN_MINUS
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: ASCII_HYPHEN_MINUS
  nameWithType: FFont.ASCII_HYPHEN_MINUS
  fullName: FFont.ASCII_HYPHEN_MINUS
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFont.ASCII_HYPHEN_MINUS</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int ASCII_HYPHEN_MINUS = 45
    return:
      type: System.Int32
    content.vb: Public Const ASCII_HYPHEN_MINUS As Integer = 45
- uid: Global.FFont.ASCII_LINEHEIGHT_REFERENCE
  commentId: F:Global.FFont.ASCII_LINEHEIGHT_REFERENCE
  id: ASCII_LINEHEIGHT_REFERENCE
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: ASCII_LINEHEIGHT_REFERENCE
  nameWithType: FFont.ASCII_LINEHEIGHT_REFERENCE
  fullName: FFont.ASCII_LINEHEIGHT_REFERENCE
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFont.ASCII_LINEHEIGHT_REFERENCE</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int ASCII_LINEHEIGHT_REFERENCE = 77
    return:
      type: System.Int32
    content.vb: Public Const ASCII_LINEHEIGHT_REFERENCE As Integer = 77
- uid: Global.FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)
  commentId: M:Global.FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)
  id: '#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)'
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: FFont(string, FAtlasElement, string, float, float, FTextParams, float)
  nameWithType: FFont.FFont(string, FAtlasElement, string, float, float, FTextParams, float)
  fullName: FFont.FFont(string, FAtlasElement, string, float, float, FTextParams, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FFont</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FFont(string name, FAtlasElement element, string configPath, float offsetX, float offsetY, FTextParams textParams, float fontScale)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: element
      type: Global.FAtlasElement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>element</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: configPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>configPath</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: textParams
      type: Global.FTextParams
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textParams</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    - id: fontScale
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fontScale</parameter>
            <parameter>M:FFont.#ctor(System.String,FAtlasElement,System.String,System.Single,System.Single,FTextParams,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, element As FAtlasElement, configPath As String, offsetX As Single, offsetY As Single, textParams As FTextParams, fontScale As Single)
  overload: Global.FFont.#ctor*
  nameWithType.vb: FFont.New(String, FAtlasElement, String, Single, Single, FTextParams, Single)
  fullName.vb: FFont.New(String, FAtlasElement, String, Single, Single, FTextParams, Single)
  name.vb: New(String, FAtlasElement, String, Single, Single, FTextParams, Single)
- uid: Global.FFont.GetQuadInfoForText(System.String,FTextParams)
  commentId: M:Global.FFont.GetQuadInfoForText(System.String,FTextParams)
  id: GetQuadInfoForText(System.String,FTextParams)
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: GetQuadInfoForText(string, FTextParams)
  nameWithType: FFont.GetQuadInfoForText(string, FTextParams)
  fullName: FFont.GetQuadInfoForText(string, FTextParams)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFont.GetQuadInfoForText(System.String,FTextParams)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLetterQuadLine[] GetQuadInfoForText(string text, FTextParams labelTextParams)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:FFont.GetQuadInfoForText(System.String,FTextParams)</parameter>
          </include>
        </markup>
    - id: labelTextParams
      type: Global.FTextParams
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>labelTextParams</parameter>
            <parameter>M:FFont.GetQuadInfoForText(System.String,FTextParams)</parameter>
          </include>
        </markup>
    return:
      type: Global.FLetterQuadLine[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FFont.GetQuadInfoForText(System.String,FTextParams)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetQuadInfoForText(text As String, labelTextParams As FTextParams) As FLetterQuadLine()
  overload: Global.FFont.GetQuadInfoForText*
  nameWithType.vb: FFont.GetQuadInfoForText(String, FTextParams)
  fullName.vb: FFont.GetQuadInfoForText(String, FTextParams)
  name.vb: GetQuadInfoForText(String, FTextParams)
- uid: Global.FFont.LineHeight
  commentId: M:Global.FFont.LineHeight
  id: LineHeight
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: LineHeight()
  nameWithType: FFont.LineHeight()
  fullName: FFont.LineHeight()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFont.LineHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LineHeight()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FFont.LineHeight</parameter>
          </include>
        </markup>
    content.vb: Public Function LineHeight() As Single
  overload: Global.FFont.LineHeight*
- uid: Global.FFont.CombineWithFont(FFont,System.Single)
  commentId: M:Global.FFont.CombineWithFont(FFont,System.Single)
  id: CombineWithFont(FFont,System.Single)
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: CombineWithFont(FFont, float)
  nameWithType: FFont.CombineWithFont(FFont, float)
  fullName: FFont.CombineWithFont(FFont, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFont.CombineWithFont(FFont,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CombineWithFont(FFont addFont, float offsetY)
    parameters:
    - id: addFont
      type: Global.FFont
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addFont</parameter>
            <parameter>M:FFont.CombineWithFont(FFont,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:FFont.CombineWithFont(FFont,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CombineWithFont(addFont As FFont, offsetY As Single)
  overload: Global.FFont.CombineWithFont*
  nameWithType.vb: FFont.CombineWithFont(FFont, Single)
  fullName.vb: FFont.CombineWithFont(FFont, Single)
  name.vb: CombineWithFont(FFont, Single)
- uid: Global.FFont.name
  commentId: P:Global.FFont.name
  id: name
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: name
  nameWithType: FFont.name
  fullName: FFont.name
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property name As String
  overload: Global.FFont.name*
- uid: Global.FFont.element
  commentId: P:Global.FFont.element
  id: element
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: element
  nameWithType: FFont.element
  fullName: FFont.element
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.element</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlasElement element { get; }
    parameters: []
    return:
      type: Global.FAtlasElement
    content.vb: Public ReadOnly Property element As FAtlasElement
  overload: Global.FFont.element*
- uid: Global.FFont.textParams
  commentId: P:Global.FFont.textParams
  id: textParams
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: textParams
  nameWithType: FFont.textParams
  fullName: FFont.textParams
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.textParams</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FTextParams textParams { get; }
    parameters: []
    return:
      type: Global.FTextParams
    content.vb: Public ReadOnly Property textParams As FTextParams
  overload: Global.FFont.textParams*
- uid: Global.FFont.offsetX
  commentId: P:Global.FFont.offsetX
  id: offsetX
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: offsetX
  nameWithType: FFont.offsetX
  fullName: FFont.offsetX
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.offsetX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offsetX { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property offsetX As Single
  overload: Global.FFont.offsetX*
- uid: Global.FFont.offsetY
  commentId: P:Global.FFont.offsetY
  id: offsetY
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: offsetY
  nameWithType: FFont.offsetY
  fullName: FFont.offsetY
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.offsetY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offsetY { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property offsetY As Single
  overload: Global.FFont.offsetY*
- uid: Global.FFont.maxCharWidth
  commentId: P:Global.FFont.maxCharWidth
  id: maxCharWidth
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: maxCharWidth
  nameWithType: FFont.maxCharWidth
  fullName: FFont.maxCharWidth
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.maxCharWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxCharWidth { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property maxCharWidth As Single
  overload: Global.FFont.maxCharWidth*
- uid: Global.FFont.lineHeight
  commentId: P:Global.FFont.lineHeight
  id: lineHeight
  parent: Global.FFont
  langs:
  - csharp
  - vb
  name: lineHeight
  nameWithType: FFont.lineHeight
  fullName: FFont.lineHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFont.lineHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lineHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property lineHeight As Single
  overload: Global.FFont.lineHeight*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.FFont.#ctor*
  commentId: Overload:Global.FFont.#ctor
  isExternal: true
  href: Global.FFont.html#FFont__ctor_System_String_FAtlasElement_System_String_System_Single_System_Single_FTextParams_System_Single_
  name: FFont
  nameWithType: FFont.FFont
  fullName: FFont.FFont
  nameWithType.vb: FFont.New
  fullName.vb: FFont.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FAtlasElement
  commentId: T:Global.FAtlasElement
  isExternal: true
  href: FAtlasElement.html
  name: FAtlasElement
  nameWithType: FAtlasElement
  fullName: FAtlasElement
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FTextParams
  commentId: T:Global.FTextParams
  isExternal: true
  href: FTextParams.html
  name: FTextParams
  nameWithType: FTextParams
  fullName: FTextParams
- uid: Global.FFont.GetQuadInfoForText*
  commentId: Overload:Global.FFont.GetQuadInfoForText
  isExternal: true
  href: Global.FFont.html#FFont_GetQuadInfoForText_System_String_FTextParams_
  name: GetQuadInfoForText
  nameWithType: FFont.GetQuadInfoForText
  fullName: FFont.GetQuadInfoForText
- uid: Global.FLetterQuadLine[]
  isExternal: true
  href: FLetterQuadLine.html
  name: FLetterQuadLine[]
  nameWithType: FLetterQuadLine[]
  fullName: FLetterQuadLine[]
  nameWithType.vb: FLetterQuadLine()
  fullName.vb: FLetterQuadLine()
  name.vb: FLetterQuadLine()
  spec.csharp:
  - uid: Global.FLetterQuadLine
    name: FLetterQuadLine
    isExternal: true
    href: FLetterQuadLine.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FLetterQuadLine
    name: FLetterQuadLine
    isExternal: true
    href: FLetterQuadLine.html
  - name: (
  - name: )
- uid: Global.FFont.LineHeight*
  commentId: Overload:Global.FFont.LineHeight
  isExternal: true
  href: Global.FFont.html#FFont_LineHeight
  name: LineHeight
  nameWithType: FFont.LineHeight
  fullName: FFont.LineHeight
- uid: Global.FFont.CombineWithFont*
  commentId: Overload:Global.FFont.CombineWithFont
  isExternal: true
  href: Global.FFont.html#FFont_CombineWithFont_FFont_System_Single_
  name: CombineWithFont
  nameWithType: FFont.CombineWithFont
  fullName: FFont.CombineWithFont
- uid: Global.FFont
  commentId: T:Global.FFont
  isExternal: true
  href: FFont.html
  name: FFont
  nameWithType: FFont
  fullName: FFont
- uid: Global.FFont.name*
  commentId: Overload:Global.FFont.name
  isExternal: true
  href: Global.FFont.html#FFont_name
  name: name
  nameWithType: FFont.name
  fullName: FFont.name
- uid: Global.FFont.element*
  commentId: Overload:Global.FFont.element
  isExternal: true
  href: Global.FFont.html#FFont_element
  name: element
  nameWithType: FFont.element
  fullName: FFont.element
- uid: Global.FFont.textParams*
  commentId: Overload:Global.FFont.textParams
  isExternal: true
  href: Global.FFont.html#FFont_textParams
  name: textParams
  nameWithType: FFont.textParams
  fullName: FFont.textParams
- uid: Global.FFont.offsetX*
  commentId: Overload:Global.FFont.offsetX
  isExternal: true
  href: Global.FFont.html#FFont_offsetX
  name: offsetX
  nameWithType: FFont.offsetX
  fullName: FFont.offsetX
- uid: Global.FFont.offsetY*
  commentId: Overload:Global.FFont.offsetY
  isExternal: true
  href: Global.FFont.html#FFont_offsetY
  name: offsetY
  nameWithType: FFont.offsetY
  fullName: FFont.offsetY
- uid: Global.FFont.maxCharWidth*
  commentId: Overload:Global.FFont.maxCharWidth
  isExternal: true
  href: Global.FFont.html#FFont_maxCharWidth
  name: maxCharWidth
  nameWithType: FFont.maxCharWidth
  fullName: FFont.maxCharWidth
- uid: Global.FFont.lineHeight*
  commentId: Overload:Global.FFont.lineHeight
  isExternal: true
  href: Global.FFont.html#FFont_lineHeight
  name: lineHeight
  nameWithType: FFont.lineHeight
  fullName: FFont.lineHeight
