### YamlMime:ManagedReference
items:
- uid: Global.TemplarCircle
  commentId: T:Global.TemplarCircle
  id: TemplarCircle
  parent: Global
  children:
  - Global.TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)
  - Global.TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.TemplarCircle.Update(System.Boolean)
  - Global.TemplarCircle.followSource
  - Global.TemplarCircle.frame
  - Global.TemplarCircle.lastPos
  - Global.TemplarCircle.lastRad
  - Global.TemplarCircle.lifeTime
  - Global.TemplarCircle.maxAlpha
  - Global.TemplarCircle.maxThickness
  - Global.TemplarCircle.pos
  - Global.TemplarCircle.rad
  - Global.TemplarCircle.radAcceleration
  - Global.TemplarCircle.radDamping
  - Global.TemplarCircle.radIncrement
  - Global.TemplarCircle.source
  langs:
  - csharp
  - vb
  name: TemplarCircle
  nameWithType: TemplarCircle
  fullName: TemplarCircle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TemplarCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class TemplarCircle : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class TemplarCircle Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  derivedClasses:
  - Global.DisciplePing
  - Global.KarmicShockwave
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.TemplarCircle.pos
  commentId: F:Global.TemplarCircle.pos
  id: pos
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: TemplarCircle.pos
  fullName: TemplarCircle.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.TemplarCircle.lastPos
  commentId: F:Global.TemplarCircle.lastPos
  id: lastPos
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: TemplarCircle.lastPos
  fullName: TemplarCircle.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.TemplarCircle.followSource
  commentId: F:Global.TemplarCircle.followSource
  id: followSource
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: followSource
  nameWithType: TemplarCircle.followSource
  fullName: TemplarCircle.followSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.followSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool followSource
    return:
      type: System.Boolean
    content.vb: Public followSource As Boolean
- uid: Global.TemplarCircle.source
  commentId: F:Global.TemplarCircle.source
  id: source
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: source
  nameWithType: TemplarCircle.source
  fullName: TemplarCircle.source
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.source</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject source
    return:
      type: Global.PhysicalObject
    content.vb: Public source As PhysicalObject
- uid: Global.TemplarCircle.maxThickness
  commentId: F:Global.TemplarCircle.maxThickness
  id: maxThickness
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: maxThickness
  nameWithType: TemplarCircle.maxThickness
  fullName: TemplarCircle.maxThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.maxThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxThickness
    return:
      type: System.Single
    content.vb: Public maxThickness As Single
- uid: Global.TemplarCircle.maxAlpha
  commentId: F:Global.TemplarCircle.maxAlpha
  id: maxAlpha
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: maxAlpha
  nameWithType: TemplarCircle.maxAlpha
  fullName: TemplarCircle.maxAlpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.maxAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxAlpha
    return:
      type: System.Single
    content.vb: Public maxAlpha As Single
- uid: Global.TemplarCircle.rad
  commentId: F:Global.TemplarCircle.rad
  id: rad
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: TemplarCircle.rad
  fullName: TemplarCircle.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.TemplarCircle.lastRad
  commentId: F:Global.TemplarCircle.lastRad
  id: lastRad
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: lastRad
  nameWithType: TemplarCircle.lastRad
  fullName: TemplarCircle.lastRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.lastRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastRad
    return:
      type: System.Single
    content.vb: Public lastRad As Single
- uid: Global.TemplarCircle.radIncrement
  commentId: F:Global.TemplarCircle.radIncrement
  id: radIncrement
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: radIncrement
  nameWithType: TemplarCircle.radIncrement
  fullName: TemplarCircle.radIncrement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.radIncrement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radIncrement
    return:
      type: System.Single
    content.vb: Public radIncrement As Single
- uid: Global.TemplarCircle.radAcceleration
  commentId: F:Global.TemplarCircle.radAcceleration
  id: radAcceleration
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: radAcceleration
  nameWithType: TemplarCircle.radAcceleration
  fullName: TemplarCircle.radAcceleration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.radAcceleration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radAcceleration
    return:
      type: System.Single
    content.vb: Public radAcceleration As Single
- uid: Global.TemplarCircle.radDamping
  commentId: F:Global.TemplarCircle.radDamping
  id: radDamping
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: radDamping
  nameWithType: TemplarCircle.radDamping
  fullName: TemplarCircle.radDamping
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.radDamping</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radDamping
    return:
      type: System.Single
    content.vb: Public radDamping As Single
- uid: Global.TemplarCircle.lifeTime
  commentId: F:Global.TemplarCircle.lifeTime
  id: lifeTime
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: lifeTime
  nameWithType: TemplarCircle.lifeTime
  fullName: TemplarCircle.lifeTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.lifeTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lifeTime
    return:
      type: System.Int32
    content.vb: Public lifeTime As Integer
- uid: Global.TemplarCircle.frame
  commentId: F:Global.TemplarCircle.frame
  id: frame
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: frame
  nameWithType: TemplarCircle.frame
  fullName: TemplarCircle.frame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TemplarCircle.frame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int frame
    return:
      type: System.Int32
    content.vb: Public frame As Integer
- uid: Global.TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)
  commentId: M:Global.TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)
  id: '#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)'
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: TemplarCircle(PhysicalObject, Vector2, float, float, float, int, bool)
  nameWithType: TemplarCircle.TemplarCircle(PhysicalObject, Vector2, float, float, float, int, bool)
  fullName: TemplarCircle.TemplarCircle(PhysicalObject, UnityEngine.Vector2, float, float, float, int, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TemplarCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TemplarCircle(PhysicalObject source, Vector2 pos, float rad, float radIncrement, float radAcceleration, int lifeTime, bool followSource)
    parameters:
    - id: source
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: radIncrement
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radIncrement</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: radAcceleration
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radAcceleration</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lifeTime
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lifeTime</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: followSource
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>followSource</parameter>
            <parameter>M:TemplarCircle.#ctor(PhysicalObject,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(source As PhysicalObject, pos As Vector2, rad As Single, radIncrement As Single, radAcceleration As Single, lifeTime As Integer, followSource As Boolean)
  overload: Global.TemplarCircle.#ctor*
  nameWithType.vb: TemplarCircle.New(PhysicalObject, Vector2, Single, Single, Single, Integer, Boolean)
  fullName.vb: TemplarCircle.New(PhysicalObject, UnityEngine.Vector2, Single, Single, Single, Integer, Boolean)
  name.vb: New(PhysicalObject, Vector2, Single, Single, Single, Integer, Boolean)
- uid: Global.TemplarCircle.Update(System.Boolean)
  commentId: M:Global.TemplarCircle.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: TemplarCircle.Update(bool)
  fullName: TemplarCircle.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TemplarCircle.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:TemplarCircle.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.TemplarCircle.Update*
  nameWithType.vb: TemplarCircle.Update(Boolean)
  fullName.vb: TemplarCircle.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TemplarCircle.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.TemplarCircle.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContainer)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContainer
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContainer</parameter>
            <parameter>M:TemplarCircle.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContainer As FContainer)
  overload: Global.TemplarCircle.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:TemplarCircle.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.TemplarCircle.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.TemplarCircle
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.TemplarCircle.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: TemplarCircle.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.TemplarCircle.#ctor*
  commentId: Overload:Global.TemplarCircle.#ctor
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle__ctor_PhysicalObject_UnityEngine_Vector2_System_Single_System_Single_System_Single_System_Int32_System_Boolean_
  name: TemplarCircle
  nameWithType: TemplarCircle.TemplarCircle
  fullName: TemplarCircle.TemplarCircle
  nameWithType.vb: TemplarCircle.New
  fullName.vb: TemplarCircle.New
  name.vb: New
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.TemplarCircle.Update*
  commentId: Overload:Global.TemplarCircle.Update
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle_Update_System_Boolean_
  name: Update
  nameWithType: TemplarCircle.Update
  fullName: TemplarCircle.Update
- uid: Global.TemplarCircle.InitiateSprites*
  commentId: Overload:Global.TemplarCircle.InitiateSprites
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: TemplarCircle.InitiateSprites
  fullName: TemplarCircle.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.TemplarCircle.AddToContainer*
  commentId: Overload:Global.TemplarCircle.AddToContainer
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: TemplarCircle.AddToContainer
  fullName: TemplarCircle.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.TemplarCircle.ApplyPalette*
  commentId: Overload:Global.TemplarCircle.ApplyPalette
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: TemplarCircle.ApplyPalette
  fullName: TemplarCircle.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.TemplarCircle.DrawSprites*
  commentId: Overload:Global.TemplarCircle.DrawSprites
  isExternal: true
  href: Global.TemplarCircle.html#TemplarCircle_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: TemplarCircle.DrawSprites
  fullName: TemplarCircle.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
