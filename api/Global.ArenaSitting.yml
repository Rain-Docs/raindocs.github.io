### YamlMime:ManagedReference
items:
- uid: Global.ArenaSitting
  commentId: T:Global.ArenaSitting
  id: ArenaSitting
  parent: Global
  children:
  - Global.ArenaSitting.#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)
  - Global.ArenaSitting.ARENA_SITTING_KEY
  - Global.ArenaSitting.AddPlayer(System.Int32)
  - Global.ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)
  - Global.ArenaSitting.FinalSittingResult
  - Global.ArenaSitting.GetCurrentLevel
  - Global.ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)
  - Global.ArenaSitting.NextLevel(ProcessManager)
  - Global.ArenaSitting.ReadyToStart
  - Global.ArenaSitting.SaveToFile(RainWorld)
  - Global.ArenaSitting.SessionEnded(ArenaGameSession)
  - Global.ArenaSitting.SessionStartReset
  - Global.ArenaSitting.ShowLevelName
  - Global.ArenaSitting.attempLoadInGame
  - Global.ArenaSitting.creatures
  - Global.ArenaSitting.currentLevel
  - Global.ArenaSitting.firstGameAfterMenu
  - Global.ArenaSitting.gameTypeSetup
  - Global.ArenaSitting.levelPlaylist
  - Global.ArenaSitting.multiplayerUnlocks
  - Global.ArenaSitting.players
  - Global.ArenaSitting.sandboxPlayMode
  - Global.ArenaSitting.savCommunities
  langs:
  - csharp
  - vb
  name: ArenaSitting
  nameWithType: ArenaSitting
  fullName: ArenaSitting
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ArenaSitting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ArenaSitting
    content.vb: Public Class ArenaSitting
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ArenaSitting.ARENA_SITTING_KEY
  commentId: F:Global.ArenaSitting.ARENA_SITTING_KEY
  id: ARENA_SITTING_KEY
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: ARENA_SITTING_KEY
  nameWithType: ArenaSitting.ARENA_SITTING_KEY
  fullName: ArenaSitting.ARENA_SITTING_KEY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ARENA_SITTING_KEY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const string ARENA_SITTING_KEY = "ArenaSitting"
    return:
      type: System.String
    content.vb: Public Const ARENA_SITTING_KEY As String = "ArenaSitting"
- uid: Global.ArenaSitting.levelPlaylist
  commentId: F:Global.ArenaSitting.levelPlaylist
  id: levelPlaylist
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: levelPlaylist
  nameWithType: ArenaSitting.levelPlaylist
  fullName: ArenaSitting.levelPlaylist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.levelPlaylist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> levelPlaylist
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public levelPlaylist As List(Of String)
- uid: Global.ArenaSitting.currentLevel
  commentId: F:Global.ArenaSitting.currentLevel
  id: currentLevel
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: currentLevel
  nameWithType: ArenaSitting.currentLevel
  fullName: ArenaSitting.currentLevel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.currentLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int currentLevel
    return:
      type: System.Int32
    content.vb: Public currentLevel As Integer
- uid: Global.ArenaSitting.players
  commentId: F:Global.ArenaSitting.players
  id: players
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: players
  nameWithType: ArenaSitting.players
  fullName: ArenaSitting.players
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.players</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ArenaSitting.ArenaPlayer> players
    return:
      type: System.Collections.Generic.List{ArenaSitting.ArenaPlayer}
    content.vb: Public players As List(Of ArenaSitting.ArenaPlayer)
- uid: Global.ArenaSitting.savCommunities
  commentId: F:Global.ArenaSitting.savCommunities
  id: savCommunities
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: savCommunities
  nameWithType: ArenaSitting.savCommunities
  fullName: ArenaSitting.savCommunities
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.savCommunities</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureCommunities savCommunities
    return:
      type: Global.CreatureCommunities
    content.vb: Public savCommunities As CreatureCommunities
- uid: Global.ArenaSitting.gameTypeSetup
  commentId: F:Global.ArenaSitting.gameTypeSetup
  id: gameTypeSetup
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: gameTypeSetup
  nameWithType: ArenaSitting.gameTypeSetup
  fullName: ArenaSitting.gameTypeSetup
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.gameTypeSetup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSetup.GameTypeSetup gameTypeSetup
    return:
      type: Global.ArenaSetup.GameTypeSetup
    content.vb: Public gameTypeSetup As ArenaSetup.GameTypeSetup
- uid: Global.ArenaSitting.creatures
  commentId: F:Global.ArenaSitting.creatures
  id: creatures
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: creatures
  nameWithType: ArenaSitting.creatures
  fullName: ArenaSitting.creatures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.creatures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AbstractCreature> creatures
    return:
      type: System.Collections.Generic.List{AbstractCreature}
    content.vb: Public creatures As List(Of AbstractCreature)
- uid: Global.ArenaSitting.attempLoadInGame
  commentId: F:Global.ArenaSitting.attempLoadInGame
  id: attempLoadInGame
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: attempLoadInGame
  nameWithType: ArenaSitting.attempLoadInGame
  fullName: ArenaSitting.attempLoadInGame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.attempLoadInGame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool attempLoadInGame
    return:
      type: System.Boolean
    content.vb: Public attempLoadInGame As Boolean
- uid: Global.ArenaSitting.firstGameAfterMenu
  commentId: F:Global.ArenaSitting.firstGameAfterMenu
  id: firstGameAfterMenu
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: firstGameAfterMenu
  nameWithType: ArenaSitting.firstGameAfterMenu
  fullName: ArenaSitting.firstGameAfterMenu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.firstGameAfterMenu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool firstGameAfterMenu
    return:
      type: System.Boolean
    content.vb: Public firstGameAfterMenu As Boolean
- uid: Global.ArenaSitting.multiplayerUnlocks
  commentId: F:Global.ArenaSitting.multiplayerUnlocks
  id: multiplayerUnlocks
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: multiplayerUnlocks
  nameWithType: ArenaSitting.multiplayerUnlocks
  fullName: ArenaSitting.multiplayerUnlocks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.multiplayerUnlocks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MultiplayerUnlocks multiplayerUnlocks
    return:
      type: Global.MultiplayerUnlocks
    content.vb: Public multiplayerUnlocks As MultiplayerUnlocks
- uid: Global.ArenaSitting.sandboxPlayMode
  commentId: F:Global.ArenaSitting.sandboxPlayMode
  id: sandboxPlayMode
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: sandboxPlayMode
  nameWithType: ArenaSitting.sandboxPlayMode
  fullName: ArenaSitting.sandboxPlayMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.sandboxPlayMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool sandboxPlayMode
    return:
      type: System.Boolean
    content.vb: Public sandboxPlayMode As Boolean
- uid: Global.ArenaSitting.#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)
  commentId: M:Global.ArenaSitting.#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)
  id: '#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)'
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: ArenaSitting(GameTypeSetup, MultiplayerUnlocks)
  nameWithType: ArenaSitting.ArenaSitting(ArenaSetup.GameTypeSetup, MultiplayerUnlocks)
  fullName: ArenaSitting.ArenaSitting(ArenaSetup.GameTypeSetup, MultiplayerUnlocks)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ArenaSitting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSitting(ArenaSetup.GameTypeSetup gameTypeSetup, MultiplayerUnlocks multiplayerUnlocks)
    parameters:
    - id: gameTypeSetup
      type: Global.ArenaSetup.GameTypeSetup
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gameTypeSetup</parameter>
            <parameter>M:ArenaSitting.#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)</parameter>
          </include>
        </markup>
    - id: multiplayerUnlocks
      type: Global.MultiplayerUnlocks
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>multiplayerUnlocks</parameter>
            <parameter>M:ArenaSitting.#ctor(ArenaSetup.GameTypeSetup,MultiplayerUnlocks)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(gameTypeSetup As ArenaSetup.GameTypeSetup, multiplayerUnlocks As MultiplayerUnlocks)
  overload: Global.ArenaSitting.#ctor*
  nameWithType.vb: ArenaSitting.New(ArenaSetup.GameTypeSetup, MultiplayerUnlocks)
  fullName.vb: ArenaSitting.New(ArenaSetup.GameTypeSetup, MultiplayerUnlocks)
  name.vb: New(GameTypeSetup, MultiplayerUnlocks)
- uid: Global.ArenaSitting.AddPlayer(System.Int32)
  commentId: M:Global.ArenaSitting.AddPlayer(System.Int32)
  id: AddPlayer(System.Int32)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: AddPlayer(int)
  nameWithType: ArenaSitting.AddPlayer(int)
  fullName: ArenaSitting.AddPlayer(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.AddPlayer(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddPlayer(int playerNumber)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:ArenaSitting.AddPlayer(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddPlayer(playerNumber As Integer)
  overload: Global.ArenaSitting.AddPlayer*
  nameWithType.vb: ArenaSitting.AddPlayer(Integer)
  fullName.vb: ArenaSitting.AddPlayer(Integer)
  name.vb: AddPlayer(Integer)
- uid: Global.ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)
  commentId: M:Global.ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)
  id: AddPlayerWithClass(System.Int32,SlugcatStats.Name)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: AddPlayerWithClass(int, Name)
  nameWithType: ArenaSitting.AddPlayerWithClass(int, SlugcatStats.Name)
  fullName: ArenaSitting.AddPlayerWithClass(int, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddPlayerWithClass(int playerNumber, SlugcatStats.Name playerClass)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: playerClass
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerClass</parameter>
            <parameter>M:ArenaSitting.AddPlayerWithClass(System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddPlayerWithClass(playerNumber As Integer, playerClass As SlugcatStats.Name)
  overload: Global.ArenaSitting.AddPlayerWithClass*
  nameWithType.vb: ArenaSitting.AddPlayerWithClass(Integer, SlugcatStats.Name)
  fullName.vb: ArenaSitting.AddPlayerWithClass(Integer, SlugcatStats.Name)
  name.vb: AddPlayerWithClass(Integer, Name)
- uid: Global.ArenaSitting.SessionEnded(ArenaGameSession)
  commentId: M:Global.ArenaSitting.SessionEnded(ArenaGameSession)
  id: SessionEnded(ArenaGameSession)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: SessionEnded(ArenaGameSession)
  nameWithType: ArenaSitting.SessionEnded(ArenaGameSession)
  fullName: ArenaSitting.SessionEnded(ArenaGameSession)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.SessionEnded(ArenaGameSession)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SessionEnded(ArenaGameSession session)
    parameters:
    - id: session
      type: Global.ArenaGameSession
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:ArenaSitting.SessionEnded(ArenaGameSession)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SessionEnded(session As ArenaGameSession)
  overload: Global.ArenaSitting.SessionEnded*
- uid: Global.ArenaSitting.FinalSittingResult
  commentId: M:Global.ArenaSitting.FinalSittingResult
  id: FinalSittingResult
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: FinalSittingResult()
  nameWithType: ArenaSitting.FinalSittingResult()
  fullName: ArenaSitting.FinalSittingResult()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.FinalSittingResult</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ArenaSitting.ArenaPlayer> FinalSittingResult()
    return:
      type: System.Collections.Generic.List{ArenaSitting.ArenaPlayer}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaSitting.FinalSittingResult</parameter>
          </include>
        </markup>
    content.vb: Public Function FinalSittingResult() As List(Of ArenaSitting.ArenaPlayer)
  overload: Global.ArenaSitting.FinalSittingResult*
- uid: Global.ArenaSitting.SessionStartReset
  commentId: M:Global.ArenaSitting.SessionStartReset
  id: SessionStartReset
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: SessionStartReset()
  nameWithType: ArenaSitting.SessionStartReset()
  fullName: ArenaSitting.SessionStartReset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.SessionStartReset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SessionStartReset()
    content.vb: Public Sub SessionStartReset()
  overload: Global.ArenaSitting.SessionStartReset*
- uid: Global.ArenaSitting.NextLevel(ProcessManager)
  commentId: M:Global.ArenaSitting.NextLevel(ProcessManager)
  id: NextLevel(ProcessManager)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: NextLevel(ProcessManager)
  nameWithType: ArenaSitting.NextLevel(ProcessManager)
  fullName: ArenaSitting.NextLevel(ProcessManager)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.NextLevel(ProcessManager)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NextLevel(ProcessManager manager)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:ArenaSitting.NextLevel(ProcessManager)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NextLevel(manager As ProcessManager)
  overload: Global.ArenaSitting.NextLevel*
- uid: Global.ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)
  commentId: M:Global.ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)
  id: LoadFromFile(ArenaGameSession,World,RainWorld)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: LoadFromFile(ArenaGameSession, World, RainWorld)
  nameWithType: ArenaSitting.LoadFromFile(ArenaGameSession, World, RainWorld)
  fullName: ArenaSitting.LoadFromFile(ArenaGameSession, World, RainWorld)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadFromFile(ArenaGameSession session, World world, RainWorld rainWorld)
    parameters:
    - id: session
      type: Global.ArenaGameSession
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)</parameter>
          </include>
        </markup>
    - id: rainWorld
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rainWorld</parameter>
            <parameter>M:ArenaSitting.LoadFromFile(ArenaGameSession,World,RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Sub LoadFromFile(session As ArenaGameSession, world As World, rainWorld As RainWorld)
  overload: Global.ArenaSitting.LoadFromFile*
- uid: Global.ArenaSitting.SaveToFile(RainWorld)
  commentId: M:Global.ArenaSitting.SaveToFile(RainWorld)
  id: SaveToFile(RainWorld)
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: SaveToFile(RainWorld)
  nameWithType: ArenaSitting.SaveToFile(RainWorld)
  fullName: ArenaSitting.SaveToFile(RainWorld)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.SaveToFile(RainWorld)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveToFile(RainWorld rainWorld)
    parameters:
    - id: rainWorld
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rainWorld</parameter>
            <parameter>M:ArenaSitting.SaveToFile(RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SaveToFile(rainWorld As RainWorld)
  overload: Global.ArenaSitting.SaveToFile*
- uid: Global.ArenaSitting.ReadyToStart
  commentId: P:Global.ArenaSitting.ReadyToStart
  id: ReadyToStart
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: ReadyToStart
  nameWithType: ArenaSitting.ReadyToStart
  fullName: ArenaSitting.ReadyToStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ArenaSitting.ReadyToStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReadyToStart { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadyToStart As Boolean
  overload: Global.ArenaSitting.ReadyToStart*
- uid: Global.ArenaSitting.GetCurrentLevel
  commentId: P:Global.ArenaSitting.GetCurrentLevel
  id: GetCurrentLevel
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: GetCurrentLevel
  nameWithType: ArenaSitting.GetCurrentLevel
  fullName: ArenaSitting.GetCurrentLevel
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ArenaSitting.GetCurrentLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string GetCurrentLevel { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GetCurrentLevel As String
  overload: Global.ArenaSitting.GetCurrentLevel*
- uid: Global.ArenaSitting.ShowLevelName
  commentId: P:Global.ArenaSitting.ShowLevelName
  id: ShowLevelName
  parent: Global.ArenaSitting
  langs:
  - csharp
  - vb
  name: ShowLevelName
  nameWithType: ArenaSitting.ShowLevelName
  fullName: ArenaSitting.ShowLevelName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ArenaSitting.ShowLevelName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ShowLevelName { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ShowLevelName As Boolean
  overload: Global.ArenaSitting.ShowLevelName*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{ArenaSitting.ArenaPlayer}
  commentId: T:System.Collections.Generic.List{ArenaSitting.ArenaPlayer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ArenaSitting.ArenaPlayer>
  nameWithType: List<ArenaSitting.ArenaPlayer>
  fullName: System.Collections.Generic.List<ArenaSitting.ArenaPlayer>
  nameWithType.vb: List(Of ArenaSitting.ArenaPlayer)
  fullName.vb: System.Collections.Generic.List(Of ArenaSitting.ArenaPlayer)
  name.vb: List(Of ArenaSitting.ArenaPlayer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ArenaSitting
    name: ArenaSitting
    isExternal: true
    href: ArenaSitting.html
  - name: .
  - uid: Global.ArenaSitting.ArenaPlayer
    name: ArenaPlayer
    isExternal: true
    href: ArenaSitting.ArenaPlayer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ArenaSitting
    name: ArenaSitting
    isExternal: true
    href: ArenaSitting.html
  - name: .
  - uid: Global.ArenaSitting.ArenaPlayer
    name: ArenaPlayer
    isExternal: true
    href: ArenaSitting.ArenaPlayer.html
  - name: )
- uid: Global.CreatureCommunities
  commentId: T:Global.CreatureCommunities
  isExternal: true
  href: CreatureCommunities.html
  name: CreatureCommunities
  nameWithType: CreatureCommunities
  fullName: CreatureCommunities
- uid: Global.ArenaSetup.GameTypeSetup
  commentId: T:Global.ArenaSetup.GameTypeSetup
  isExternal: true
  href: ArenaSetup.html
  name: ArenaSetup.GameTypeSetup
  nameWithType: ArenaSetup.GameTypeSetup
  fullName: ArenaSetup.GameTypeSetup
  spec.csharp:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
  spec.vb:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
- uid: System.Collections.Generic.List{AbstractCreature}
  commentId: T:System.Collections.Generic.List{AbstractCreature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractCreature>
  nameWithType: List<AbstractCreature>
  fullName: System.Collections.Generic.List<AbstractCreature>
  nameWithType.vb: List(Of AbstractCreature)
  fullName.vb: System.Collections.Generic.List(Of AbstractCreature)
  name.vb: List(Of AbstractCreature)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.MultiplayerUnlocks
  commentId: T:Global.MultiplayerUnlocks
  isExternal: true
  href: MultiplayerUnlocks.html
  name: MultiplayerUnlocks
  nameWithType: MultiplayerUnlocks
  fullName: MultiplayerUnlocks
- uid: Global.ArenaSitting.#ctor*
  commentId: Overload:Global.ArenaSitting.#ctor
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting__ctor_ArenaSetup_GameTypeSetup_MultiplayerUnlocks_
  name: ArenaSitting
  nameWithType: ArenaSitting.ArenaSitting
  fullName: ArenaSitting.ArenaSitting
  nameWithType.vb: ArenaSitting.New
  fullName.vb: ArenaSitting.New
  name.vb: New
- uid: Global.ArenaSitting.AddPlayer*
  commentId: Overload:Global.ArenaSitting.AddPlayer
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_AddPlayer_System_Int32_
  name: AddPlayer
  nameWithType: ArenaSitting.AddPlayer
  fullName: ArenaSitting.AddPlayer
- uid: Global.ArenaSitting.AddPlayerWithClass*
  commentId: Overload:Global.ArenaSitting.AddPlayerWithClass
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_AddPlayerWithClass_System_Int32_SlugcatStats_Name_
  name: AddPlayerWithClass
  nameWithType: ArenaSitting.AddPlayerWithClass
  fullName: ArenaSitting.AddPlayerWithClass
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.ArenaSitting.SessionEnded*
  commentId: Overload:Global.ArenaSitting.SessionEnded
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_SessionEnded_ArenaGameSession_
  name: SessionEnded
  nameWithType: ArenaSitting.SessionEnded
  fullName: ArenaSitting.SessionEnded
- uid: Global.ArenaGameSession
  commentId: T:Global.ArenaGameSession
  isExternal: true
  href: ArenaGameSession.html
  name: ArenaGameSession
  nameWithType: ArenaGameSession
  fullName: ArenaGameSession
- uid: Global.ArenaSitting.FinalSittingResult*
  commentId: Overload:Global.ArenaSitting.FinalSittingResult
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_FinalSittingResult
  name: FinalSittingResult
  nameWithType: ArenaSitting.FinalSittingResult
  fullName: ArenaSitting.FinalSittingResult
- uid: Global.ArenaSitting.SessionStartReset*
  commentId: Overload:Global.ArenaSitting.SessionStartReset
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_SessionStartReset
  name: SessionStartReset
  nameWithType: ArenaSitting.SessionStartReset
  fullName: ArenaSitting.SessionStartReset
- uid: Global.ArenaSitting.NextLevel*
  commentId: Overload:Global.ArenaSitting.NextLevel
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_NextLevel_ProcessManager_
  name: NextLevel
  nameWithType: ArenaSitting.NextLevel
  fullName: ArenaSitting.NextLevel
- uid: Global.ProcessManager
  commentId: T:Global.ProcessManager
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager
  nameWithType: ProcessManager
  fullName: ProcessManager
- uid: Global.ArenaSitting.LoadFromFile*
  commentId: Overload:Global.ArenaSitting.LoadFromFile
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_LoadFromFile_ArenaGameSession_World_RainWorld_
  name: LoadFromFile
  nameWithType: ArenaSitting.LoadFromFile
  fullName: ArenaSitting.LoadFromFile
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.RainWorld
  commentId: T:Global.RainWorld
  isExternal: true
  href: RainWorld.html
  name: RainWorld
  nameWithType: RainWorld
  fullName: RainWorld
- uid: Global.ArenaSitting.SaveToFile*
  commentId: Overload:Global.ArenaSitting.SaveToFile
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_SaveToFile_RainWorld_
  name: SaveToFile
  nameWithType: ArenaSitting.SaveToFile
  fullName: ArenaSitting.SaveToFile
- uid: Global.ArenaSitting.ReadyToStart*
  commentId: Overload:Global.ArenaSitting.ReadyToStart
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_ReadyToStart
  name: ReadyToStart
  nameWithType: ArenaSitting.ReadyToStart
  fullName: ArenaSitting.ReadyToStart
- uid: Global.ArenaSitting.GetCurrentLevel*
  commentId: Overload:Global.ArenaSitting.GetCurrentLevel
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_GetCurrentLevel
  name: GetCurrentLevel
  nameWithType: ArenaSitting.GetCurrentLevel
  fullName: ArenaSitting.GetCurrentLevel
- uid: Global.ArenaSitting.ShowLevelName*
  commentId: Overload:Global.ArenaSitting.ShowLevelName
  isExternal: true
  href: Global.ArenaSitting.html#ArenaSitting_ShowLevelName
  name: ShowLevelName
  nameWithType: ArenaSitting.ShowLevelName
  fullName: ArenaSitting.ShowLevelName
