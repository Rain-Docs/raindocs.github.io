### YamlMime:ManagedReference
items:
- uid: Global.Explosion
  commentId: T:Global.Explosion
  id: Explosion
  parent: Global
  children:
  - Global.Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)
  - Global.Explosion.Update(System.Boolean)
  - Global.Explosion.backgroundNoise
  - Global.Explosion.damage
  - Global.Explosion.deafen
  - Global.Explosion.force
  - Global.Explosion.frame
  - Global.Explosion.killTagHolder
  - Global.Explosion.killTagHolderDmgFactor
  - Global.Explosion.lifeTime
  - Global.Explosion.minStun
  - Global.Explosion.pos
  - Global.Explosion.rad
  - Global.Explosion.sourceObject
  - Global.Explosion.stun
  langs:
  - csharp
  - vb
  name: Explosion
  nameWithType: Explosion
  fullName: Explosion
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Explosion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Explosion : UpdatableAndDeletable'
    content.vb: Public Class Explosion Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Explosion.frame
  commentId: F:Global.Explosion.frame
  id: frame
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: frame
  nameWithType: Explosion.frame
  fullName: Explosion.frame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.frame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int frame
    return:
      type: System.Int32
    content.vb: Public frame As Integer
- uid: Global.Explosion.lifeTime
  commentId: F:Global.Explosion.lifeTime
  id: lifeTime
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: lifeTime
  nameWithType: Explosion.lifeTime
  fullName: Explosion.lifeTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.lifeTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lifeTime
    return:
      type: System.Int32
    content.vb: Public lifeTime As Integer
- uid: Global.Explosion.rad
  commentId: F:Global.Explosion.rad
  id: rad
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: Explosion.rad
  fullName: Explosion.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.Explosion.force
  commentId: F:Global.Explosion.force
  id: force
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: force
  nameWithType: Explosion.force
  fullName: Explosion.force
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.force</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float force
    return:
      type: System.Single
    content.vb: Public force As Single
- uid: Global.Explosion.damage
  commentId: F:Global.Explosion.damage
  id: damage
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: damage
  nameWithType: Explosion.damage
  fullName: Explosion.damage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.damage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float damage
    return:
      type: System.Single
    content.vb: Public damage As Single
- uid: Global.Explosion.stun
  commentId: F:Global.Explosion.stun
  id: stun
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: stun
  nameWithType: Explosion.stun
  fullName: Explosion.stun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.stun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stun
    return:
      type: System.Single
    content.vb: Public stun As Single
- uid: Global.Explosion.deafen
  commentId: F:Global.Explosion.deafen
  id: deafen
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: deafen
  nameWithType: Explosion.deafen
  fullName: Explosion.deafen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.deafen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deafen
    return:
      type: System.Single
    content.vb: Public deafen As Single
- uid: Global.Explosion.pos
  commentId: F:Global.Explosion.pos
  id: pos
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: Explosion.pos
  fullName: Explosion.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.Explosion.sourceObject
  commentId: F:Global.Explosion.sourceObject
  id: sourceObject
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: sourceObject
  nameWithType: Explosion.sourceObject
  fullName: Explosion.sourceObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.sourceObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject sourceObject
    return:
      type: Global.PhysicalObject
    content.vb: Public sourceObject As PhysicalObject
- uid: Global.Explosion.killTagHolder
  commentId: F:Global.Explosion.killTagHolder
  id: killTagHolder
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: killTagHolder
  nameWithType: Explosion.killTagHolder
  fullName: Explosion.killTagHolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.killTagHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature killTagHolder
    return:
      type: Global.Creature
    content.vb: Public killTagHolder As Creature
- uid: Global.Explosion.killTagHolderDmgFactor
  commentId: F:Global.Explosion.killTagHolderDmgFactor
  id: killTagHolderDmgFactor
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: killTagHolderDmgFactor
  nameWithType: Explosion.killTagHolderDmgFactor
  fullName: Explosion.killTagHolderDmgFactor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.killTagHolderDmgFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float killTagHolderDmgFactor
    return:
      type: System.Single
    content.vb: Public killTagHolderDmgFactor As Single
- uid: Global.Explosion.minStun
  commentId: F:Global.Explosion.minStun
  id: minStun
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: minStun
  nameWithType: Explosion.minStun
  fullName: Explosion.minStun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.minStun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float minStun
    return:
      type: System.Single
    content.vb: Public minStun As Single
- uid: Global.Explosion.backgroundNoise
  commentId: F:Global.Explosion.backgroundNoise
  id: backgroundNoise
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: backgroundNoise
  nameWithType: Explosion.backgroundNoise
  fullName: Explosion.backgroundNoise
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Explosion.backgroundNoise</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float backgroundNoise
    return:
      type: System.Single
    content.vb: Public backgroundNoise As Single
- uid: Global.Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)
  commentId: M:Global.Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)
  id: '#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)'
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: Explosion(Room, PhysicalObject, Vector2, int, float, float, float, float, float, Creature, float, float, float)
  nameWithType: Explosion.Explosion(Room, PhysicalObject, Vector2, int, float, float, float, float, float, Creature, float, float, float)
  fullName: Explosion.Explosion(Room, PhysicalObject, UnityEngine.Vector2, int, float, float, float, float, float, Creature, float, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Explosion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Explosion(Room room, PhysicalObject sourceObject, Vector2 pos, int lifeTime, float rad, float force, float damage, float stun, float deafen, Creature killTagHolder, float killTagHolderDmgFactor, float minStun, float backgroundNoise)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sourceObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceObject</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lifeTime
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lifeTime</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: force
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>force</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: damage
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>damage</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: stun
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stun</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: deafen
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deafen</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: killTagHolder
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>killTagHolder</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: killTagHolderDmgFactor
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>killTagHolderDmgFactor</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: minStun
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minStun</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: backgroundNoise
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>backgroundNoise</parameter>
            <parameter>M:Explosion.#ctor(Room,PhysicalObject,UnityEngine.Vector2,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,Creature,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, sourceObject As PhysicalObject, pos As Vector2, lifeTime As Integer, rad As Single, force As Single, damage As Single, stun As Single, deafen As Single, killTagHolder As Creature, killTagHolderDmgFactor As Single, minStun As Single, backgroundNoise As Single)
  overload: Global.Explosion.#ctor*
  nameWithType.vb: Explosion.New(Room, PhysicalObject, Vector2, Integer, Single, Single, Single, Single, Single, Creature, Single, Single, Single)
  fullName.vb: Explosion.New(Room, PhysicalObject, UnityEngine.Vector2, Integer, Single, Single, Single, Single, Single, Creature, Single, Single, Single)
  name.vb: New(Room, PhysicalObject, Vector2, Integer, Single, Single, Single, Single, Single, Creature, Single, Single, Single)
- uid: Global.Explosion.Update(System.Boolean)
  commentId: M:Global.Explosion.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Explosion
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Explosion.Update(bool)
  fullName: Explosion.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Explosion.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Explosion.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.Explosion.Update*
  nameWithType.vb: Explosion.Update(Boolean)
  fullName.vb: Explosion.Update(Boolean)
  name.vb: Update(Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.Explosion.#ctor*
  commentId: Overload:Global.Explosion.#ctor
  isExternal: true
  href: Global.Explosion.html#Explosion__ctor_Room_PhysicalObject_UnityEngine_Vector2_System_Int32_System_Single_System_Single_System_Single_System_Single_System_Single_Creature_System_Single_System_Single_System_Single_
  name: Explosion
  nameWithType: Explosion.Explosion
  fullName: Explosion.Explosion
  nameWithType.vb: Explosion.New
  fullName.vb: Explosion.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Explosion.Update*
  commentId: Overload:Global.Explosion.Update
  isExternal: true
  href: Global.Explosion.html#Explosion_Update_System_Boolean_
  name: Update
  nameWithType: Explosion.Update
  fullName: Explosion.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
