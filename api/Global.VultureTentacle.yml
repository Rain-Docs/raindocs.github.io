### YamlMime:ManagedReference
items:
- uid: Global.VultureTentacle
  commentId: T:Global.VultureTentacle
  id: VultureTentacle
  parent: Global
  children:
  - Global.VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)
  - Global.VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)
  - Global.VultureTentacle.FeatherContour(System.Single)
  - Global.VultureTentacle.FeatherContour(System.Single,System.Single)
  - Global.VultureTentacle.FeatherWidth(System.Single)
  - Global.VultureTentacle.GravityDirection
  - Global.VultureTentacle.NewRoom(Room)
  - Global.VultureTentacle.ReleaseGrip
  - Global.VultureTentacle.ReleaseScore
  - Global.VultureTentacle.Support
  - Global.VultureTentacle.SwitchMode(VultureTentacle.Mode)
  - Global.VultureTentacle.TentacleContour(System.Single)
  - Global.VultureTentacle.Update
  - Global.VultureTentacle.WingSpace
  - Global.VultureTentacle.desiredGrabPos
  - Global.VultureTentacle.flyingMode
  - Global.VultureTentacle.framesOfHittingTerrain
  - Global.VultureTentacle.framesWithoutReaching
  - Global.VultureTentacle.grabDelay
  - Global.VultureTentacle.hasAnyGrip
  - Global.VultureTentacle.mode
  - Global.VultureTentacle.otherTentacleIsFlying
  - Global.VultureTentacle.playGrabSound
  - Global.VultureTentacle.segmentsGrippingTerrain
  - Global.VultureTentacle.stun
  - Global.VultureTentacle.tentacleDir
  - Global.VultureTentacle.tentacleNumber
  - Global.VultureTentacle.vulture
  - Global.VultureTentacle.wooshSound
  langs:
  - csharp
  - vb
  name: VultureTentacle
  nameWithType: VultureTentacle
  fullName: VultureTentacle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:VultureTentacle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class VultureTentacle : Tentacle'
    content.vb: Public Class VultureTentacle Inherits Tentacle
  inheritance:
  - System.Object
  - Global.Tentacle
  inheritedMembers:
  - Global.Tentacle.debugViz
  - Global.Tentacle.sprites
  - Global.Tentacle.grabPathSprites
  - Global.Tentacle.pullCounter
  - Global.Tentacle.floatGrabDest
  - Global.Tentacle.grabPath
  - Global.Tentacle.segments
  - Global.Tentacle.room
  - Global.Tentacle.idealLength
  - Global.Tentacle.tChunks
  - Global.Tentacle.owner
  - Global.Tentacle.pullsThisTick
  - Global.Tentacle.connectedChunk
  - Global.Tentacle.stretchAndSqueeze
  - Global.Tentacle.goForGoalPower
  - Global.Tentacle.backtrackFrom
  - Global.Tentacle.limp
  - Global.Tentacle.tProps
  - Global.Tentacle.MoveGrabDest(UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  - Global.Tentacle.Visual(RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.Tentacle.MoveBase(RWCustom.IntVector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  - Global.Tentacle.CurrentLength
  - Global.Tentacle.Reset(UnityEngine.Vector2)
  - Global.Tentacle.PushChunksApart(System.Int32,System.Int32)
  - Global.Tentacle.grabDest
  - Global.Tentacle.Tip
  - Global.Tentacle.BasePos
  - Global.Tentacle.TotalRope
  - Global.Tentacle.FloatBase
  - Global.Tentacle.retractFac
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.VultureTentacle.tentacleNumber
  commentId: F:Global.VultureTentacle.tentacleNumber
  id: tentacleNumber
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: tentacleNumber
  nameWithType: VultureTentacle.tentacleNumber
  fullName: VultureTentacle.tentacleNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.tentacleNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tentacleNumber
    return:
      type: System.Int32
    content.vb: Public tentacleNumber As Integer
- uid: Global.VultureTentacle.mode
  commentId: F:Global.VultureTentacle.mode
  id: mode
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: VultureTentacle.mode
  fullName: VultureTentacle.mode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.mode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VultureTentacle.Mode mode
    return:
      type: Global.VultureTentacle.Mode
    content.vb: Public mode As VultureTentacle.Mode
- uid: Global.VultureTentacle.desiredGrabPos
  commentId: F:Global.VultureTentacle.desiredGrabPos
  id: desiredGrabPos
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: desiredGrabPos
  nameWithType: VultureTentacle.desiredGrabPos
  fullName: VultureTentacle.desiredGrabPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.desiredGrabPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 desiredGrabPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public desiredGrabPos As Vector2
- uid: Global.VultureTentacle.segmentsGrippingTerrain
  commentId: F:Global.VultureTentacle.segmentsGrippingTerrain
  id: segmentsGrippingTerrain
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: segmentsGrippingTerrain
  nameWithType: VultureTentacle.segmentsGrippingTerrain
  fullName: VultureTentacle.segmentsGrippingTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.segmentsGrippingTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int segmentsGrippingTerrain
    return:
      type: System.Int32
    content.vb: Public segmentsGrippingTerrain As Integer
- uid: Global.VultureTentacle.framesWithoutReaching
  commentId: F:Global.VultureTentacle.framesWithoutReaching
  id: framesWithoutReaching
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: framesWithoutReaching
  nameWithType: VultureTentacle.framesWithoutReaching
  fullName: VultureTentacle.framesWithoutReaching
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.framesWithoutReaching</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int framesWithoutReaching
    return:
      type: System.Int32
    content.vb: Public framesWithoutReaching As Integer
- uid: Global.VultureTentacle.otherTentacleIsFlying
  commentId: F:Global.VultureTentacle.otherTentacleIsFlying
  id: otherTentacleIsFlying
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: otherTentacleIsFlying
  nameWithType: VultureTentacle.otherTentacleIsFlying
  fullName: VultureTentacle.otherTentacleIsFlying
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.otherTentacleIsFlying</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int otherTentacleIsFlying
    return:
      type: System.Int32
    content.vb: Public otherTentacleIsFlying As Integer
- uid: Global.VultureTentacle.grabDelay
  commentId: F:Global.VultureTentacle.grabDelay
  id: grabDelay
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: grabDelay
  nameWithType: VultureTentacle.grabDelay
  fullName: VultureTentacle.grabDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.grabDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int grabDelay
    return:
      type: System.Int32
    content.vb: Public grabDelay As Integer
- uid: Global.VultureTentacle.framesOfHittingTerrain
  commentId: F:Global.VultureTentacle.framesOfHittingTerrain
  id: framesOfHittingTerrain
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: framesOfHittingTerrain
  nameWithType: VultureTentacle.framesOfHittingTerrain
  fullName: VultureTentacle.framesOfHittingTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.framesOfHittingTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int framesOfHittingTerrain
    return:
      type: System.Int32
    content.vb: Public framesOfHittingTerrain As Integer
- uid: Global.VultureTentacle.playGrabSound
  commentId: F:Global.VultureTentacle.playGrabSound
  id: playGrabSound
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: playGrabSound
  nameWithType: VultureTentacle.playGrabSound
  fullName: VultureTentacle.playGrabSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.playGrabSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool playGrabSound
    return:
      type: System.Boolean
    content.vb: Public playGrabSound As Boolean
- uid: Global.VultureTentacle.stun
  commentId: F:Global.VultureTentacle.stun
  id: stun
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: stun
  nameWithType: VultureTentacle.stun
  fullName: VultureTentacle.stun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.stun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stun
    return:
      type: System.Int32
    content.vb: Public stun As Integer
- uid: Global.VultureTentacle.wooshSound
  commentId: F:Global.VultureTentacle.wooshSound
  id: wooshSound
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: wooshSound
  nameWithType: VultureTentacle.wooshSound
  fullName: VultureTentacle.wooshSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VultureTentacle.wooshSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public StaticSoundLoop wooshSound
    return:
      type: Global.StaticSoundLoop
    content.vb: Public wooshSound As StaticSoundLoop
- uid: Global.VultureTentacle.TentacleContour(System.Single)
  commentId: M:Global.VultureTentacle.TentacleContour(System.Single)
  id: TentacleContour(System.Single)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: TentacleContour(float)
  nameWithType: VultureTentacle.TentacleContour(float)
  fullName: VultureTentacle.TentacleContour(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.TentacleContour(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TentacleContour(float x)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:VultureTentacle.TentacleContour(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.TentacleContour(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function TentacleContour(x As Single) As Single
  overload: Global.VultureTentacle.TentacleContour*
  nameWithType.vb: VultureTentacle.TentacleContour(Single)
  fullName.vb: VultureTentacle.TentacleContour(Single)
  name.vb: TentacleContour(Single)
- uid: Global.VultureTentacle.FeatherContour(System.Single)
  commentId: M:Global.VultureTentacle.FeatherContour(System.Single)
  id: FeatherContour(System.Single)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: FeatherContour(float)
  nameWithType: VultureTentacle.FeatherContour(float)
  fullName: VultureTentacle.FeatherContour(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.FeatherContour(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float FeatherContour(float x)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:VultureTentacle.FeatherContour(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.FeatherContour(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function FeatherContour(x As Single) As Single
  overload: Global.VultureTentacle.FeatherContour*
  nameWithType.vb: VultureTentacle.FeatherContour(Single)
  fullName.vb: VultureTentacle.FeatherContour(Single)
  name.vb: FeatherContour(Single)
- uid: Global.VultureTentacle.FeatherContour(System.Single,System.Single)
  commentId: M:Global.VultureTentacle.FeatherContour(System.Single,System.Single)
  id: FeatherContour(System.Single,System.Single)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: FeatherContour(float, float)
  nameWithType: VultureTentacle.FeatherContour(float, float)
  fullName: VultureTentacle.FeatherContour(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.FeatherContour(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float FeatherContour(float x, float k)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:VultureTentacle.FeatherContour(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: k
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>k</parameter>
            <parameter>M:VultureTentacle.FeatherContour(System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.FeatherContour(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FeatherContour(x As Single, k As Single) As Single
  overload: Global.VultureTentacle.FeatherContour*
  nameWithType.vb: VultureTentacle.FeatherContour(Single, Single)
  fullName.vb: VultureTentacle.FeatherContour(Single, Single)
  name.vb: FeatherContour(Single, Single)
- uid: Global.VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)
  commentId: M:Global.VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)
  id: '#ctor(Vulture,BodyChunk,System.Single,System.Int32)'
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: VultureTentacle(Vulture, BodyChunk, float, int)
  nameWithType: VultureTentacle.VultureTentacle(Vulture, BodyChunk, float, int)
  fullName: VultureTentacle.VultureTentacle(Vulture, BodyChunk, float, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>VultureTentacle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VultureTentacle(Vulture vulture, BodyChunk chunk, float length, int tentacleNumber)
    parameters:
    - id: vulture
      type: Global.Vulture
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vulture</parameter>
            <parameter>M:VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: length
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: tentacleNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tentacleNumber</parameter>
            <parameter>M:VultureTentacle.#ctor(Vulture,BodyChunk,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(vulture As Vulture, chunk As BodyChunk, length As Single, tentacleNumber As Integer)
  overload: Global.VultureTentacle.#ctor*
  nameWithType.vb: VultureTentacle.New(Vulture, BodyChunk, Single, Integer)
  fullName.vb: VultureTentacle.New(Vulture, BodyChunk, Single, Integer)
  name.vb: New(Vulture, BodyChunk, Single, Integer)
- uid: Global.VultureTentacle.FeatherWidth(System.Single)
  commentId: M:Global.VultureTentacle.FeatherWidth(System.Single)
  id: FeatherWidth(System.Single)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: FeatherWidth(float)
  nameWithType: VultureTentacle.FeatherWidth(float)
  fullName: VultureTentacle.FeatherWidth(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.FeatherWidth(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float FeatherWidth(float x)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:VultureTentacle.FeatherWidth(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.FeatherWidth(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FeatherWidth(x As Single) As Single
  overload: Global.VultureTentacle.FeatherWidth*
  nameWithType.vb: VultureTentacle.FeatherWidth(Single)
  fullName.vb: VultureTentacle.FeatherWidth(Single)
  name.vb: FeatherWidth(Single)
- uid: Global.VultureTentacle.NewRoom(Room)
  commentId: M:Global.VultureTentacle.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: VultureTentacle.NewRoom(Room)
  fullName: VultureTentacle.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:VultureTentacle.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(room As Room)
  overridden: Global.Tentacle.NewRoom(Room)
  overload: Global.VultureTentacle.NewRoom*
- uid: Global.VultureTentacle.Update
  commentId: M:Global.VultureTentacle.Update
  id: Update
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: VultureTentacle.Update()
  fullName: VultureTentacle.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.Tentacle.Update
  overload: Global.VultureTentacle.Update*
- uid: Global.VultureTentacle.SwitchMode(VultureTentacle.Mode)
  commentId: M:Global.VultureTentacle.SwitchMode(VultureTentacle.Mode)
  id: SwitchMode(VultureTentacle.Mode)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: SwitchMode(Mode)
  nameWithType: VultureTentacle.SwitchMode(VultureTentacle.Mode)
  fullName: VultureTentacle.SwitchMode(VultureTentacle.Mode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.SwitchMode(VultureTentacle.Mode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SwitchMode(VultureTentacle.Mode newMode)
    parameters:
    - id: newMode
      type: Global.VultureTentacle.Mode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newMode</parameter>
            <parameter>M:VultureTentacle.SwitchMode(VultureTentacle.Mode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SwitchMode(newMode As VultureTentacle.Mode)
  overload: Global.VultureTentacle.SwitchMode*
- uid: Global.VultureTentacle.ReleaseGrip
  commentId: M:Global.VultureTentacle.ReleaseGrip
  id: ReleaseGrip
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: ReleaseGrip()
  nameWithType: VultureTentacle.ReleaseGrip()
  fullName: VultureTentacle.ReleaseGrip()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.ReleaseGrip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseGrip()
    content.vb: Public Sub ReleaseGrip()
  overload: Global.VultureTentacle.ReleaseGrip*
- uid: Global.VultureTentacle.ReleaseScore
  commentId: M:Global.VultureTentacle.ReleaseScore
  id: ReleaseScore
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: ReleaseScore()
  nameWithType: VultureTentacle.ReleaseScore()
  fullName: VultureTentacle.ReleaseScore()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.ReleaseScore</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ReleaseScore()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.ReleaseScore</parameter>
          </include>
        </markup>
    content.vb: Public Function ReleaseScore() As Single
  overload: Global.VultureTentacle.ReleaseScore*
- uid: Global.VultureTentacle.Support
  commentId: M:Global.VultureTentacle.Support
  id: Support
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: Support()
  nameWithType: VultureTentacle.Support()
  fullName: VultureTentacle.Support()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.Support</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Support()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.Support</parameter>
          </include>
        </markup>
    content.vb: Public Function Support() As Single
  overload: Global.VultureTentacle.Support*
- uid: Global.VultureTentacle.WingSpace
  commentId: M:Global.VultureTentacle.WingSpace
  id: WingSpace
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: WingSpace()
  nameWithType: VultureTentacle.WingSpace()
  fullName: VultureTentacle.WingSpace()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.WingSpace</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WingSpace()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.WingSpace</parameter>
          </include>
        </markup>
    content.vb: Public Function WingSpace() As Boolean
  overload: Global.VultureTentacle.WingSpace*
- uid: Global.VultureTentacle.GravityDirection
  commentId: M:Global.VultureTentacle.GravityDirection
  id: GravityDirection
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: GravityDirection()
  nameWithType: VultureTentacle.GravityDirection()
  fullName: VultureTentacle.GravityDirection()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.GravityDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected override IntVector2 GravityDirection()
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:VultureTentacle.GravityDirection</parameter>
          </include>
        </markup>
    content.vb: Protected Overrides Function GravityDirection() As IntVector2
  overridden: Global.Tentacle.GravityDirection
  overload: Global.VultureTentacle.GravityDirection*
- uid: Global.VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)
  commentId: M:Global.VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)
  id: Damage(Creature.DamageType,System.Single,System.Single)
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: Damage(DamageType, float, float)
  nameWithType: VultureTentacle.Damage(Creature.DamageType, float, float)
  fullName: VultureTentacle.Damage(Creature.DamageType, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Damage(Creature.DamageType type, float damage, float stunBonus)
    parameters:
    - id: type
      type: Global.Creature.DamageType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: damage
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>damage</parameter>
            <parameter>M:VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: stunBonus
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stunBonus</parameter>
            <parameter>M:VultureTentacle.Damage(Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Damage(type As Creature.DamageType, damage As Single, stunBonus As Single)
  overload: Global.VultureTentacle.Damage*
  nameWithType.vb: VultureTentacle.Damage(Creature.DamageType, Single, Single)
  fullName.vb: VultureTentacle.Damage(Creature.DamageType, Single, Single)
  name.vb: Damage(DamageType, Single, Single)
- uid: Global.VultureTentacle.vulture
  commentId: P:Global.VultureTentacle.vulture
  id: vulture
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: vulture
  nameWithType: VultureTentacle.vulture
  fullName: VultureTentacle.vulture
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VultureTentacle.vulture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vulture vulture { get; }
    parameters: []
    return:
      type: Global.Vulture
    content.vb: Public ReadOnly Property vulture As Vulture
  overload: Global.VultureTentacle.vulture*
- uid: Global.VultureTentacle.tentacleDir
  commentId: P:Global.VultureTentacle.tentacleDir
  id: tentacleDir
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: tentacleDir
  nameWithType: VultureTentacle.tentacleDir
  fullName: VultureTentacle.tentacleDir
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VultureTentacle.tentacleDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tentacleDir { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property tentacleDir As Single
  overload: Global.VultureTentacle.tentacleDir*
- uid: Global.VultureTentacle.hasAnyGrip
  commentId: P:Global.VultureTentacle.hasAnyGrip
  id: hasAnyGrip
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: hasAnyGrip
  nameWithType: VultureTentacle.hasAnyGrip
  fullName: VultureTentacle.hasAnyGrip
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VultureTentacle.hasAnyGrip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasAnyGrip { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property hasAnyGrip As Boolean
  overload: Global.VultureTentacle.hasAnyGrip*
- uid: Global.VultureTentacle.flyingMode
  commentId: P:Global.VultureTentacle.flyingMode
  id: flyingMode
  parent: Global.VultureTentacle
  langs:
  - csharp
  - vb
  name: flyingMode
  nameWithType: VultureTentacle.flyingMode
  fullName: VultureTentacle.flyingMode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VultureTentacle.flyingMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flyingMode { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property flyingMode As Single
  overload: Global.VultureTentacle.flyingMode*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.Tentacle
  commentId: T:Global.Tentacle
  isExternal: true
  href: Tentacle.html
  name: Tentacle
  nameWithType: Tentacle
  fullName: Tentacle
- uid: Global.Tentacle.debugViz
  commentId: F:Global.Tentacle.debugViz
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_debugViz
  name: debugViz
  nameWithType: Tentacle.debugViz
  fullName: Tentacle.debugViz
- uid: Global.Tentacle.sprites
  commentId: F:Global.Tentacle.sprites
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_sprites
  name: sprites
  nameWithType: Tentacle.sprites
  fullName: Tentacle.sprites
- uid: Global.Tentacle.grabPathSprites
  commentId: F:Global.Tentacle.grabPathSprites
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_grabPathSprites
  name: grabPathSprites
  nameWithType: Tentacle.grabPathSprites
  fullName: Tentacle.grabPathSprites
- uid: Global.Tentacle.pullCounter
  commentId: F:Global.Tentacle.pullCounter
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_pullCounter
  name: pullCounter
  nameWithType: Tentacle.pullCounter
  fullName: Tentacle.pullCounter
- uid: Global.Tentacle.floatGrabDest
  commentId: F:Global.Tentacle.floatGrabDest
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_floatGrabDest
  name: floatGrabDest
  nameWithType: Tentacle.floatGrabDest
  fullName: Tentacle.floatGrabDest
- uid: Global.Tentacle.grabPath
  commentId: F:Global.Tentacle.grabPath
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_grabPath
  name: grabPath
  nameWithType: Tentacle.grabPath
  fullName: Tentacle.grabPath
- uid: Global.Tentacle.segments
  commentId: F:Global.Tentacle.segments
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_segments
  name: segments
  nameWithType: Tentacle.segments
  fullName: Tentacle.segments
- uid: Global.Tentacle.room
  commentId: F:Global.Tentacle.room
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_room
  name: room
  nameWithType: Tentacle.room
  fullName: Tentacle.room
- uid: Global.Tentacle.idealLength
  commentId: F:Global.Tentacle.idealLength
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_idealLength
  name: idealLength
  nameWithType: Tentacle.idealLength
  fullName: Tentacle.idealLength
- uid: Global.Tentacle.tChunks
  commentId: F:Global.Tentacle.tChunks
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_tChunks
  name: tChunks
  nameWithType: Tentacle.tChunks
  fullName: Tentacle.tChunks
- uid: Global.Tentacle.owner
  commentId: F:Global.Tentacle.owner
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_owner
  name: owner
  nameWithType: Tentacle.owner
  fullName: Tentacle.owner
- uid: Global.Tentacle.pullsThisTick
  commentId: F:Global.Tentacle.pullsThisTick
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_pullsThisTick
  name: pullsThisTick
  nameWithType: Tentacle.pullsThisTick
  fullName: Tentacle.pullsThisTick
- uid: Global.Tentacle.connectedChunk
  commentId: F:Global.Tentacle.connectedChunk
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_connectedChunk
  name: connectedChunk
  nameWithType: Tentacle.connectedChunk
  fullName: Tentacle.connectedChunk
- uid: Global.Tentacle.stretchAndSqueeze
  commentId: F:Global.Tentacle.stretchAndSqueeze
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_stretchAndSqueeze
  name: stretchAndSqueeze
  nameWithType: Tentacle.stretchAndSqueeze
  fullName: Tentacle.stretchAndSqueeze
- uid: Global.Tentacle.goForGoalPower
  commentId: F:Global.Tentacle.goForGoalPower
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_goForGoalPower
  name: goForGoalPower
  nameWithType: Tentacle.goForGoalPower
  fullName: Tentacle.goForGoalPower
- uid: Global.Tentacle.backtrackFrom
  commentId: F:Global.Tentacle.backtrackFrom
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_backtrackFrom
  name: backtrackFrom
  nameWithType: Tentacle.backtrackFrom
  fullName: Tentacle.backtrackFrom
- uid: Global.Tentacle.limp
  commentId: F:Global.Tentacle.limp
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_limp
  name: limp
  nameWithType: Tentacle.limp
  fullName: Tentacle.limp
- uid: Global.Tentacle.tProps
  commentId: F:Global.Tentacle.tProps
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_tProps
  name: tProps
  nameWithType: Tentacle.tProps
  fullName: Tentacle.tProps
- uid: Global.Tentacle.MoveGrabDest(UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  commentId: M:Global.Tentacle.MoveGrabDest(UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_MoveGrabDest_UnityEngine_Vector2_System_Collections_Generic_List_RWCustom_IntVector2___
  name: MoveGrabDest(Vector2, ref List<IntVector2>)
  nameWithType: Tentacle.MoveGrabDest(Vector2, ref List<IntVector2>)
  fullName: Tentacle.MoveGrabDest(UnityEngine.Vector2, ref System.Collections.Generic.List<RWCustom.IntVector2>)
  nameWithType.vb: Tentacle.MoveGrabDest(Vector2, List(Of IntVector2))
  fullName.vb: Tentacle.MoveGrabDest(UnityEngine.Vector2, System.Collections.Generic.List(Of RWCustom.IntVector2))
  name.vb: MoveGrabDest(Vector2, List(Of IntVector2))
  spec.csharp:
  - uid: Global.Tentacle.MoveGrabDest(UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
    name: MoveGrabDest
    isExternal: true
    href: Global.Tentacle.html#Tentacle_MoveGrabDest_UnityEngine_Vector2_System_Collections_Generic_List_RWCustom_IntVector2___
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.Tentacle.MoveGrabDest(UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
    name: MoveGrabDest
    isExternal: true
    href: Global.Tentacle.html#Tentacle_MoveGrabDest_UnityEngine_Vector2_System_Collections_Generic_List_RWCustom_IntVector2___
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
  - name: )
- uid: Global.Tentacle.Visual(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.Tentacle.Visual(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_Visual_RWCustom_IntVector2_RWCustom_IntVector2_
  name: Visual(IntVector2, IntVector2)
  nameWithType: Tentacle.Visual(IntVector2, IntVector2)
  fullName: Tentacle.Visual(RWCustom.IntVector2, RWCustom.IntVector2)
  spec.csharp:
  - uid: Global.Tentacle.Visual(RWCustom.IntVector2,RWCustom.IntVector2)
    name: Visual
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Visual_RWCustom_IntVector2_RWCustom_IntVector2_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
  spec.vb:
  - uid: Global.Tentacle.Visual(RWCustom.IntVector2,RWCustom.IntVector2)
    name: Visual
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Visual_RWCustom_IntVector2_RWCustom_IntVector2_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: Global.Tentacle.MoveBase(RWCustom.IntVector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  commentId: M:Global.Tentacle.MoveBase(RWCustom.IntVector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_MoveBase_RWCustom_IntVector2_System_Collections_Generic_List_RWCustom_IntVector2___
  name: MoveBase(IntVector2, ref List<IntVector2>)
  nameWithType: Tentacle.MoveBase(IntVector2, ref List<IntVector2>)
  fullName: Tentacle.MoveBase(RWCustom.IntVector2, ref System.Collections.Generic.List<RWCustom.IntVector2>)
  nameWithType.vb: Tentacle.MoveBase(IntVector2, List(Of IntVector2))
  fullName.vb: Tentacle.MoveBase(RWCustom.IntVector2, System.Collections.Generic.List(Of RWCustom.IntVector2))
  name.vb: MoveBase(IntVector2, List(Of IntVector2))
  spec.csharp:
  - uid: Global.Tentacle.MoveBase(RWCustom.IntVector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
    name: MoveBase
    isExternal: true
    href: Global.Tentacle.html#Tentacle_MoveBase_RWCustom_IntVector2_System_Collections_Generic_List_RWCustom_IntVector2___
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - name: ref
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.Tentacle.MoveBase(RWCustom.IntVector2,System.Collections.Generic.List{RWCustom.IntVector2}@)
    name: MoveBase
    isExternal: true
    href: Global.Tentacle.html#Tentacle_MoveBase_RWCustom_IntVector2_System_Collections_Generic_List_RWCustom_IntVector2___
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
  - name: )
- uid: Global.Tentacle.CurrentLength
  commentId: M:Global.Tentacle.CurrentLength
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_CurrentLength
  name: CurrentLength()
  nameWithType: Tentacle.CurrentLength()
  fullName: Tentacle.CurrentLength()
  spec.csharp:
  - uid: Global.Tentacle.CurrentLength
    name: CurrentLength
    isExternal: true
    href: Global.Tentacle.html#Tentacle_CurrentLength
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Tentacle.CurrentLength
    name: CurrentLength
    isExternal: true
    href: Global.Tentacle.html#Tentacle_CurrentLength
  - name: (
  - name: )
- uid: Global.Tentacle.Reset(UnityEngine.Vector2)
  commentId: M:Global.Tentacle.Reset(UnityEngine.Vector2)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_Reset_UnityEngine_Vector2_
  name: Reset(Vector2)
  nameWithType: Tentacle.Reset(Vector2)
  fullName: Tentacle.Reset(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.Tentacle.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Tentacle.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Tentacle.PushChunksApart(System.Int32,System.Int32)
  commentId: M:Global.Tentacle.PushChunksApart(System.Int32,System.Int32)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_PushChunksApart_System_Int32_System_Int32_
  name: PushChunksApart(int, int)
  nameWithType: Tentacle.PushChunksApart(int, int)
  fullName: Tentacle.PushChunksApart(int, int)
  nameWithType.vb: Tentacle.PushChunksApart(Integer, Integer)
  fullName.vb: Tentacle.PushChunksApart(Integer, Integer)
  name.vb: PushChunksApart(Integer, Integer)
  spec.csharp:
  - uid: Global.Tentacle.PushChunksApart(System.Int32,System.Int32)
    name: PushChunksApart
    isExternal: true
    href: Global.Tentacle.html#Tentacle_PushChunksApart_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Tentacle.PushChunksApart(System.Int32,System.Int32)
    name: PushChunksApart
    isExternal: true
    href: Global.Tentacle.html#Tentacle_PushChunksApart_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Tentacle.grabDest
  commentId: P:Global.Tentacle.grabDest
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_grabDest
  name: grabDest
  nameWithType: Tentacle.grabDest
  fullName: Tentacle.grabDest
- uid: Global.Tentacle.Tip
  commentId: P:Global.Tentacle.Tip
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_Tip
  name: Tip
  nameWithType: Tentacle.Tip
  fullName: Tentacle.Tip
- uid: Global.Tentacle.BasePos
  commentId: P:Global.Tentacle.BasePos
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_BasePos
  name: BasePos
  nameWithType: Tentacle.BasePos
  fullName: Tentacle.BasePos
- uid: Global.Tentacle.TotalRope
  commentId: P:Global.Tentacle.TotalRope
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_TotalRope
  name: TotalRope
  nameWithType: Tentacle.TotalRope
  fullName: Tentacle.TotalRope
- uid: Global.Tentacle.FloatBase
  commentId: P:Global.Tentacle.FloatBase
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_FloatBase
  name: FloatBase
  nameWithType: Tentacle.FloatBase
  fullName: Tentacle.FloatBase
- uid: Global.Tentacle.retractFac
  commentId: P:Global.Tentacle.retractFac
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_retractFac
  name: retractFac
  nameWithType: Tentacle.retractFac
  fullName: Tentacle.retractFac
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.VultureTentacle.Mode
  commentId: T:Global.VultureTentacle.Mode
  isExternal: true
  href: VultureTentacle.html
  name: VultureTentacle.Mode
  nameWithType: VultureTentacle.Mode
  fullName: VultureTentacle.Mode
  spec.csharp:
  - uid: Global.VultureTentacle
    name: VultureTentacle
    isExternal: true
    href: VultureTentacle.html
  - name: .
  - uid: Global.VultureTentacle.Mode
    name: Mode
    isExternal: true
    href: VultureTentacle.Mode.html
  spec.vb:
  - uid: Global.VultureTentacle
    name: VultureTentacle
    isExternal: true
    href: VultureTentacle.html
  - name: .
  - uid: Global.VultureTentacle.Mode
    name: Mode
    isExternal: true
    href: VultureTentacle.Mode.html
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.StaticSoundLoop
  commentId: T:Global.StaticSoundLoop
  isExternal: true
  href: StaticSoundLoop.html
  name: StaticSoundLoop
  nameWithType: StaticSoundLoop
  fullName: StaticSoundLoop
- uid: Global.VultureTentacle.TentacleContour*
  commentId: Overload:Global.VultureTentacle.TentacleContour
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_TentacleContour_System_Single_
  name: TentacleContour
  nameWithType: VultureTentacle.TentacleContour
  fullName: VultureTentacle.TentacleContour
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.VultureTentacle.FeatherContour*
  commentId: Overload:Global.VultureTentacle.FeatherContour
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_FeatherContour_System_Single_
  name: FeatherContour
  nameWithType: VultureTentacle.FeatherContour
  fullName: VultureTentacle.FeatherContour
- uid: Global.VultureTentacle.#ctor*
  commentId: Overload:Global.VultureTentacle.#ctor
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle__ctor_Vulture_BodyChunk_System_Single_System_Int32_
  name: VultureTentacle
  nameWithType: VultureTentacle.VultureTentacle
  fullName: VultureTentacle.VultureTentacle
  nameWithType.vb: VultureTentacle.New
  fullName.vb: VultureTentacle.New
  name.vb: New
- uid: Global.Vulture
  commentId: T:Global.Vulture
  isExternal: true
  href: Vulture.html
  name: Vulture
  nameWithType: Vulture
  fullName: Vulture
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.VultureTentacle.FeatherWidth*
  commentId: Overload:Global.VultureTentacle.FeatherWidth
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_FeatherWidth_System_Single_
  name: FeatherWidth
  nameWithType: VultureTentacle.FeatherWidth
  fullName: VultureTentacle.FeatherWidth
- uid: Global.Tentacle.NewRoom(Room)
  commentId: M:Global.Tentacle.NewRoom(Room)
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: Tentacle.NewRoom(Room)
  fullName: Tentacle.NewRoom(Room)
  spec.csharp:
  - uid: Global.Tentacle.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Tentacle.html#Tentacle_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Tentacle.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Tentacle.html#Tentacle_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.VultureTentacle.NewRoom*
  commentId: Overload:Global.VultureTentacle.NewRoom
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_NewRoom_Room_
  name: NewRoom
  nameWithType: VultureTentacle.NewRoom
  fullName: VultureTentacle.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Tentacle.Update
  commentId: M:Global.Tentacle.Update
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_Update
  name: Update()
  nameWithType: Tentacle.Update()
  fullName: Tentacle.Update()
  spec.csharp:
  - uid: Global.Tentacle.Update
    name: Update
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Tentacle.Update
    name: Update
    isExternal: true
    href: Global.Tentacle.html#Tentacle_Update
  - name: (
  - name: )
- uid: Global.VultureTentacle.Update*
  commentId: Overload:Global.VultureTentacle.Update
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_Update
  name: Update
  nameWithType: VultureTentacle.Update
  fullName: VultureTentacle.Update
- uid: Global.VultureTentacle.SwitchMode*
  commentId: Overload:Global.VultureTentacle.SwitchMode
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_SwitchMode_VultureTentacle_Mode_
  name: SwitchMode
  nameWithType: VultureTentacle.SwitchMode
  fullName: VultureTentacle.SwitchMode
- uid: Global.VultureTentacle.ReleaseGrip*
  commentId: Overload:Global.VultureTentacle.ReleaseGrip
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_ReleaseGrip
  name: ReleaseGrip
  nameWithType: VultureTentacle.ReleaseGrip
  fullName: VultureTentacle.ReleaseGrip
- uid: Global.VultureTentacle.ReleaseScore*
  commentId: Overload:Global.VultureTentacle.ReleaseScore
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_ReleaseScore
  name: ReleaseScore
  nameWithType: VultureTentacle.ReleaseScore
  fullName: VultureTentacle.ReleaseScore
- uid: Global.VultureTentacle.Support*
  commentId: Overload:Global.VultureTentacle.Support
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_Support
  name: Support
  nameWithType: VultureTentacle.Support
  fullName: VultureTentacle.Support
- uid: Global.VultureTentacle.WingSpace*
  commentId: Overload:Global.VultureTentacle.WingSpace
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_WingSpace
  name: WingSpace
  nameWithType: VultureTentacle.WingSpace
  fullName: VultureTentacle.WingSpace
- uid: Global.Tentacle.GravityDirection
  commentId: M:Global.Tentacle.GravityDirection
  parent: Global.Tentacle
  isExternal: true
  href: Global.Tentacle.html#Tentacle_GravityDirection
  name: GravityDirection()
  nameWithType: Tentacle.GravityDirection()
  fullName: Tentacle.GravityDirection()
  spec.csharp:
  - uid: Global.Tentacle.GravityDirection
    name: GravityDirection
    isExternal: true
    href: Global.Tentacle.html#Tentacle_GravityDirection
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Tentacle.GravityDirection
    name: GravityDirection
    isExternal: true
    href: Global.Tentacle.html#Tentacle_GravityDirection
  - name: (
  - name: )
- uid: Global.VultureTentacle.GravityDirection*
  commentId: Overload:Global.VultureTentacle.GravityDirection
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_GravityDirection
  name: GravityDirection
  nameWithType: VultureTentacle.GravityDirection
  fullName: VultureTentacle.GravityDirection
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.VultureTentacle.Damage*
  commentId: Overload:Global.VultureTentacle.Damage
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_Damage_Creature_DamageType_System_Single_System_Single_
  name: Damage
  nameWithType: VultureTentacle.Damage
  fullName: VultureTentacle.Damage
- uid: Global.Creature.DamageType
  commentId: T:Global.Creature.DamageType
  isExternal: true
  href: Creature.html
  name: Creature.DamageType
  nameWithType: Creature.DamageType
  fullName: Creature.DamageType
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
- uid: Global.VultureTentacle.vulture*
  commentId: Overload:Global.VultureTentacle.vulture
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_vulture
  name: vulture
  nameWithType: VultureTentacle.vulture
  fullName: VultureTentacle.vulture
- uid: Global.VultureTentacle.tentacleDir*
  commentId: Overload:Global.VultureTentacle.tentacleDir
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_tentacleDir
  name: tentacleDir
  nameWithType: VultureTentacle.tentacleDir
  fullName: VultureTentacle.tentacleDir
- uid: Global.VultureTentacle.hasAnyGrip*
  commentId: Overload:Global.VultureTentacle.hasAnyGrip
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_hasAnyGrip
  name: hasAnyGrip
  nameWithType: VultureTentacle.hasAnyGrip
  fullName: VultureTentacle.hasAnyGrip
- uid: Global.VultureTentacle.flyingMode*
  commentId: Overload:Global.VultureTentacle.flyingMode
  isExternal: true
  href: Global.VultureTentacle.html#VultureTentacle_flyingMode
  name: flyingMode
  nameWithType: VultureTentacle.flyingMode
  fullName: VultureTentacle.flyingMode
