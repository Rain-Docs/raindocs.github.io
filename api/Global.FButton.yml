### YamlMime:ManagedReference
items:
- uid: Global.FButton
  commentId: T:Global.FButton
  id: FButton
  parent: Global
  children:
  - Global.FButton.#ctor(System.String)
  - Global.FButton.#ctor(System.String,System.String)
  - Global.FButton.#ctor(System.String,System.String,System.String)
  - Global.FButton.#ctor(System.String,System.String,System.String,System.String)
  - Global.FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)
  - Global.FButton.AddLabel(System.String,System.String,UnityEngine.Color)
  - Global.FButton.GetAnchor
  - Global.FButton.HandleSingleTouchBegan(FTouch)
  - Global.FButton.HandleSingleTouchCanceled(FTouch)
  - Global.FButton.HandleSingleTouchEnded(FTouch)
  - Global.FButton.HandleSingleTouchMoved(FTouch)
  - Global.FButton.HandleUpdate
  - Global.FButton.SetAnchor(System.Single,System.Single)
  - Global.FButton.SetAnchor(UnityEngine.Vector2)
  - Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color)
  - Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)
  - Global.FButton.SetElements(System.String,System.String,System.String)
  - Global.FButton.SignalPress
  - Global.FButton.SignalRelease
  - Global.FButton.SignalReleaseOutside
  - Global.FButton.UpdateEnabled
  - Global.FButton.UpdateOverState
  - Global.FButton._clickSoundName
  - Global.FButton._downColor
  - Global.FButton._downElement
  - Global.FButton._hitRect
  - Global.FButton._isEnabled
  - Global.FButton._isTouchDown
  - Global.FButton._label
  - Global.FButton._overColor
  - Global.FButton._overElement
  - Global.FButton._shouldUseCustomColors
  - Global.FButton._shouldUseCustomHitRect
  - Global.FButton._sprite
  - Global.FButton._supportsOver
  - Global.FButton._upColor
  - Global.FButton._upElement
  - Global.FButton.anchorX
  - Global.FButton.anchorY
  - Global.FButton.expansionAmount
  - Global.FButton.hitRect
  - Global.FButton.isEnabled
  - Global.FButton.label
  - Global.FButton.sprite
  langs:
  - csharp
  - vb
  name: FButton
  nameWithType: FButton
  fullName: FButton
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FButton : FContainer, FSingleTouchableInterface, FCapturedTouchableInterface'
    content.vb: Public Class FButton Inherits FContainer Implements FSingleTouchableInterface, FCapturedTouchableInterface
  inheritance:
  - System.Object
  - Global.FNode
  - Global.FContainer
  implements:
  - Global.FSingleTouchableInterface
  - Global.FCapturedTouchableInterface
  inheritedMembers:
  - Global.FContainer._childNodes
  - Global.FContainer.Redraw(System.Boolean,System.Boolean)
  - Global.FContainer.HandleAddedToStage
  - Global.FContainer.HandleRemovedFromStage
  - Global.FContainer.AddChild(FNode)
  - Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  - Global.FContainer.RemoveChild(FNode)
  - Global.FContainer.RemoveAllChildren
  - Global.FContainer.GetChildCount
  - Global.FContainer.GetChildAt(System.Int32)
  - Global.FContainer.GetChildIndex(FNode)
  - Global.FContainer.shouldSortByZ
  - Global.FNode._x
  - Global.FNode._y
  - Global.FNode._scaleX
  - Global.FNode._scaleY
  - Global.FNode._rotation
  - Global.FNode._meshZ
  - Global.FNode._sortZ
  - Global.FNode._isMatrixDirty
  - Global.FNode._container
  - Global.FNode._matrix
  - Global.FNode._concatenatedMatrix
  - Global.FNode._inverseConcatenatedMatrix
  - Global.FNode._screenConcatenatedMatrix
  - Global.FNode._screenInverseConcatenatedMatrix
  - Global.FNode._needsSpecialMatrices
  - Global.FNode._alpha
  - Global.FNode._concatenatedAlpha
  - Global.FNode._isAlphaDirty
  - Global.FNode._visibleScale
  - Global.FNode._isOnStage
  - Global.FNode._depth
  - Global.FNode._stage
  - Global.FNode._isVisible
  - Global.FNode.data
  - Global.FNode.AddEnabler(FNodeEnabler)
  - Global.FNode.RemoveEnabler(FNodeEnabler)
  - Global.FNode.RemoveEnablerOfType(System.Type)
  - Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  - Global.FNode.RemoveListenForResize
  - Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  - Global.FNode.RemoveListenForOrientationChange
  - Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForUpdate
  - Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForAfterUpdate
  - Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForLateUpdate
  - Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForFixedUpdate
  - Global.FNode.EnableSingleTouch
  - Global.FNode.DisableSingleTouch
  - Global.FNode.EnableMultiTouch
  - Global.FNode.DisableMultiTouch
  - Global.FNode.EnableSmartTouch
  - Global.FNode.DisableSmartTouch
  - Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  - Global.FNode.RemoveListenForAddedOrRemoved
  - Global.FNode.LocalToScreen(UnityEngine.Vector2)
  - Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  - Global.FNode.LocalToStage(UnityEngine.Vector2)
  - Global.FNode.StageToLocal(UnityEngine.Vector2)
  - Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  - Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  - Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  - Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  - Global.FNode.GetLocalMousePosition
  - Global.FNode.GetLocalTouchPosition(FTouch)
  - Global.FNode.UpdateMatrix
  - Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  - Global.FNode.HandleAddedToContainer(FContainer)
  - Global.FNode.HandleRemovedFromContainer
  - Global.FNode.RemoveFromContainer
  - Global.FNode.MoveToFront
  - Global.FNode.MoveToBack
  - Global.FNode.MoveInFrontOfOtherNode(FNode)
  - Global.FNode.MoveBehindOtherNode(FNode)
  - Global.FNode.IsAncestryVisible
  - Global.FNode.CreateSpecialMatrices
  - Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  - Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  - Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  - Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  - Global.FNode.SetPosition(System.Single,System.Single)
  - Global.FNode.SetPosition(UnityEngine.Vector2)
  - Global.FNode.GetPosition
  - Global.FNode.isVisible
  - Global.FNode.x
  - Global.FNode.y
  - Global.FNode.meshZ
  - Global.FNode.sortZ
  - Global.FNode.scaleX
  - Global.FNode.scaleY
  - Global.FNode.scale
  - Global.FNode.rotation
  - Global.FNode.isMatrixDirty
  - Global.FNode.container
  - Global.FNode.depth
  - Global.FNode.touchPriority
  - Global.FNode.matrix
  - Global.FNode.concatenatedMatrix
  - Global.FNode.inverseConcatenatedMatrix
  - Global.FNode.screenConcatenatedMatrix
  - Global.FNode.screenInverseConcatenatedMatrix
  - Global.FNode.alpha
  - Global.FNode.concatenatedAlpha
  - Global.FNode.stage
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FButton._hitRect
  commentId: F:Global.FButton._hitRect
  id: _hitRect
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _hitRect
  nameWithType: FButton._hitRect
  fullName: FButton._hitRect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._hitRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Rect _hitRect
    return:
      type: UnityEngine.Rect
    content.vb: Protected _hitRect As Rect
- uid: Global.FButton._shouldUseCustomHitRect
  commentId: F:Global.FButton._shouldUseCustomHitRect
  id: _shouldUseCustomHitRect
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _shouldUseCustomHitRect
  nameWithType: FButton._shouldUseCustomHitRect
  fullName: FButton._shouldUseCustomHitRect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._shouldUseCustomHitRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _shouldUseCustomHitRect
    return:
      type: System.Boolean
    content.vb: Protected _shouldUseCustomHitRect As Boolean
- uid: Global.FButton._upElement
  commentId: F:Global.FButton._upElement
  id: _upElement
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _upElement
  nameWithType: FButton._upElement
  fullName: FButton._upElement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._upElement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FAtlasElement _upElement
    return:
      type: Global.FAtlasElement
    content.vb: Protected _upElement As FAtlasElement
- uid: Global.FButton._downElement
  commentId: F:Global.FButton._downElement
  id: _downElement
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _downElement
  nameWithType: FButton._downElement
  fullName: FButton._downElement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._downElement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FAtlasElement _downElement
    return:
      type: Global.FAtlasElement
    content.vb: Protected _downElement As FAtlasElement
- uid: Global.FButton._overElement
  commentId: F:Global.FButton._overElement
  id: _overElement
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _overElement
  nameWithType: FButton._overElement
  fullName: FButton._overElement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._overElement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FAtlasElement _overElement
    return:
      type: Global.FAtlasElement
    content.vb: Protected _overElement As FAtlasElement
- uid: Global.FButton._shouldUseCustomColors
  commentId: F:Global.FButton._shouldUseCustomColors
  id: _shouldUseCustomColors
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _shouldUseCustomColors
  nameWithType: FButton._shouldUseCustomColors
  fullName: FButton._shouldUseCustomColors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._shouldUseCustomColors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _shouldUseCustomColors
    return:
      type: System.Boolean
    content.vb: Protected _shouldUseCustomColors As Boolean
- uid: Global.FButton._upColor
  commentId: F:Global.FButton._upColor
  id: _upColor
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _upColor
  nameWithType: FButton._upColor
  fullName: FButton._upColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._upColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Color _upColor
    return:
      type: UnityEngine.Color
    content.vb: Protected _upColor As Color
- uid: Global.FButton._downColor
  commentId: F:Global.FButton._downColor
  id: _downColor
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _downColor
  nameWithType: FButton._downColor
  fullName: FButton._downColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._downColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Color _downColor
    return:
      type: UnityEngine.Color
    content.vb: Protected _downColor As Color
- uid: Global.FButton._overColor
  commentId: F:Global.FButton._overColor
  id: _overColor
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _overColor
  nameWithType: FButton._overColor
  fullName: FButton._overColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._overColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Color _overColor
    return:
      type: UnityEngine.Color
    content.vb: Protected _overColor As Color
- uid: Global.FButton._sprite
  commentId: F:Global.FButton._sprite
  id: _sprite
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _sprite
  nameWithType: FButton._sprite
  fullName: FButton._sprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FSprite _sprite
    return:
      type: Global.FSprite
    content.vb: Protected _sprite As FSprite
- uid: Global.FButton._clickSoundName
  commentId: F:Global.FButton._clickSoundName
  id: _clickSoundName
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _clickSoundName
  nameWithType: FButton._clickSoundName
  fullName: FButton._clickSoundName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._clickSoundName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected string _clickSoundName
    return:
      type: System.String
    content.vb: Protected _clickSoundName As String
- uid: Global.FButton._label
  commentId: F:Global.FButton._label
  id: _label
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _label
  nameWithType: FButton._label
  fullName: FButton._label
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._label</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FLabel _label
    return:
      type: Global.FLabel
    content.vb: Protected _label As FLabel
- uid: Global.FButton.expansionAmount
  commentId: F:Global.FButton.expansionAmount
  id: expansionAmount
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: expansionAmount
  nameWithType: FButton.expansionAmount
  fullName: FButton.expansionAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton.expansionAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float expansionAmount
    return:
      type: System.Single
    content.vb: Public expansionAmount As Single
- uid: Global.FButton._isEnabled
  commentId: F:Global.FButton._isEnabled
  id: _isEnabled
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _isEnabled
  nameWithType: FButton._isEnabled
  fullName: FButton._isEnabled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._isEnabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _isEnabled
    return:
      type: System.Boolean
    content.vb: Protected _isEnabled As Boolean
- uid: Global.FButton._supportsOver
  commentId: F:Global.FButton._supportsOver
  id: _supportsOver
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _supportsOver
  nameWithType: FButton._supportsOver
  fullName: FButton._supportsOver
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._supportsOver</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _supportsOver
    return:
      type: System.Boolean
    content.vb: Protected _supportsOver As Boolean
- uid: Global.FButton._isTouchDown
  commentId: F:Global.FButton._isTouchDown
  id: _isTouchDown
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: _isTouchDown
  nameWithType: FButton._isTouchDown
  fullName: FButton._isTouchDown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FButton._isTouchDown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _isTouchDown
    return:
      type: System.Boolean
    content.vb: Protected _isTouchDown As Boolean
- uid: Global.FButton.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Global.FButton.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: FButton(string, string, string, string)
  nameWithType: FButton.FButton(string, string, string, string)
  fullName: FButton.FButton(string, string, string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FButton(string upElementName, string downElementName, string overElementName, string clickSoundName)
    parameters:
    - id: upElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: downElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: overElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: clickSoundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clickSoundName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(upElementName As String, downElementName As String, overElementName As String, clickSoundName As String)
  overload: Global.FButton.#ctor*
  nameWithType.vb: FButton.New(String, String, String, String)
  fullName.vb: FButton.New(String, String, String, String)
  name.vb: New(String, String, String, String)
- uid: Global.FButton.#ctor(System.String)
  commentId: M:Global.FButton.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: FButton(string)
  nameWithType: FButton.FButton(string)
  fullName: FButton.FButton(string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FButton(string upElementName)
    parameters:
    - id: upElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upElementName</parameter>
            <parameter>M:FButton.#ctor(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(upElementName As String)
  overload: Global.FButton.#ctor*
  nameWithType.vb: FButton.New(String)
  fullName.vb: FButton.New(String)
  name.vb: New(String)
- uid: Global.FButton.#ctor(System.String,System.String)
  commentId: M:Global.FButton.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: FButton(string, string)
  nameWithType: FButton.FButton(string, string)
  fullName: FButton.FButton(string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FButton(string upElementName, string downElementName)
    parameters:
    - id: upElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: downElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(upElementName As String, downElementName As String)
  overload: Global.FButton.#ctor*
  nameWithType.vb: FButton.New(String, String)
  fullName.vb: FButton.New(String, String)
  name.vb: New(String, String)
- uid: Global.FButton.#ctor(System.String,System.String,System.String)
  commentId: M:Global.FButton.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: FButton(string, string, string)
  nameWithType: FButton.FButton(string, string, string)
  fullName: FButton.FButton(string, string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FButton(string upElementName, string downElementName, string clickSoundName)
    parameters:
    - id: upElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: downElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downElementName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: clickSoundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clickSoundName</parameter>
            <parameter>M:FButton.#ctor(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(upElementName As String, downElementName As String, clickSoundName As String)
  overload: Global.FButton.#ctor*
  nameWithType.vb: FButton.New(String, String, String)
  fullName.vb: FButton.New(String, String, String)
  name.vb: New(String, String, String)
- uid: Global.FButton.SetElements(System.String,System.String,System.String)
  commentId: M:Global.FButton.SetElements(System.String,System.String,System.String)
  id: SetElements(System.String,System.String,System.String)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SetElements(string, string, string)
  nameWithType: FButton.SetElements(string, string, string)
  fullName: FButton.SetElements(string, string, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.SetElements(System.String,System.String,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SetElements(string upElementName, string downElementName, string overElementName)
    parameters:
    - id: upElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upElementName</parameter>
            <parameter>M:FButton.SetElements(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: downElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downElementName</parameter>
            <parameter>M:FButton.SetElements(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: overElementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overElementName</parameter>
            <parameter>M:FButton.SetElements(System.String,System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub SetElements(upElementName As String, downElementName As String, overElementName As String)
  overload: Global.FButton.SetElements*
  nameWithType.vb: FButton.SetElements(String, String, String)
  fullName.vb: FButton.SetElements(String, String, String)
  name.vb: SetElements(String, String, String)
- uid: Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color)
  commentId: M:Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color)
  id: SetColors(UnityEngine.Color,UnityEngine.Color)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SetColors(Color, Color)
  nameWithType: FButton.SetColors(Color, Color)
  fullName: FButton.SetColors(UnityEngine.Color, UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SetColors(Color upColor, Color downColor)
    parameters:
    - id: upColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upColor</parameter>
            <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: downColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downColor</parameter>
            <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub SetColors(upColor As Color, downColor As Color)
  overload: Global.FButton.SetColors*
- uid: Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)
  commentId: M:Global.FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)
  id: SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SetColors(Color, Color, Color)
  nameWithType: FButton.SetColors(Color, Color, Color)
  fullName: FButton.SetColors(UnityEngine.Color, UnityEngine.Color, UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SetColors(Color upColor, Color downColor, Color overColor)
    parameters:
    - id: upColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>upColor</parameter>
            <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: downColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>downColor</parameter>
            <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: overColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overColor</parameter>
            <parameter>M:FButton.SetColors(UnityEngine.Color,UnityEngine.Color,UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub SetColors(upColor As Color, downColor As Color, overColor As Color)
  overload: Global.FButton.SetColors*
- uid: Global.FButton.AddLabel(System.String,System.String,UnityEngine.Color)
  commentId: M:Global.FButton.AddLabel(System.String,System.String,UnityEngine.Color)
  id: AddLabel(System.String,System.String,UnityEngine.Color)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: AddLabel(string, string, Color)
  nameWithType: FButton.AddLabel(string, string, Color)
  fullName: FButton.AddLabel(string, string, UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.AddLabel(System.String,System.String,UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual FLabel AddLabel(string fontName, string text, Color color)
    parameters:
    - id: fontName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fontName</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function AddLabel(fontName As String, text As String, color As Color) As FLabel
  overload: Global.FButton.AddLabel*
  nameWithType.vb: FButton.AddLabel(String, String, Color)
  fullName.vb: FButton.AddLabel(String, String, UnityEngine.Color)
  name.vb: AddLabel(String, String, Color)
- uid: Global.FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)
  commentId: M:Global.FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)
  id: AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: AddLabel(string, string, FTextParams, Color)
  nameWithType: FButton.AddLabel(string, string, FTextParams, Color)
  fullName: FButton.AddLabel(string, string, FTextParams, UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual FLabel AddLabel(string fontName, string text, FTextParams textParams, Color color)
    parameters:
    - id: fontName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fontName</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: textParams
      type: Global.FTextParams
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textParams</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FButton.AddLabel(System.String,System.String,FTextParams,UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function AddLabel(fontName As String, text As String, textParams As FTextParams, color As Color) As FLabel
  overload: Global.FButton.AddLabel*
  nameWithType.vb: FButton.AddLabel(String, String, FTextParams, Color)
  fullName.vb: FButton.AddLabel(String, String, FTextParams, UnityEngine.Color)
  name.vb: AddLabel(String, String, FTextParams, Color)
- uid: Global.FButton.HandleUpdate
  commentId: M:Global.FButton.HandleUpdate
  id: HandleUpdate
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: HandleUpdate()
  nameWithType: FButton.HandleUpdate()
  fullName: FButton.HandleUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.HandleUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void HandleUpdate()
    content.vb: Protected Overridable Sub HandleUpdate()
  overload: Global.FButton.HandleUpdate*
- uid: Global.FButton.UpdateOverState
  commentId: M:Global.FButton.UpdateOverState
  id: UpdateOverState
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: UpdateOverState()
  nameWithType: FButton.UpdateOverState()
  fullName: FButton.UpdateOverState()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.UpdateOverState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void UpdateOverState()
    content.vb: Protected Overridable Sub UpdateOverState()
  overload: Global.FButton.UpdateOverState*
- uid: Global.FButton.UpdateEnabled
  commentId: M:Global.FButton.UpdateEnabled
  id: UpdateEnabled
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: UpdateEnabled()
  nameWithType: FButton.UpdateEnabled()
  fullName: FButton.UpdateEnabled()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.UpdateEnabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void UpdateEnabled()
    content.vb: Protected Overridable Sub UpdateEnabled()
  overload: Global.FButton.UpdateEnabled*
- uid: Global.FButton.HandleSingleTouchBegan(FTouch)
  commentId: M:Global.FButton.HandleSingleTouchBegan(FTouch)
  id: HandleSingleTouchBegan(FTouch)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: HandleSingleTouchBegan(FTouch)
  nameWithType: FButton.HandleSingleTouchBegan(FTouch)
  fullName: FButton.HandleSingleTouchBegan(FTouch)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.HandleSingleTouchBegan(FTouch)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool HandleSingleTouchBegan(FTouch touch)
    parameters:
    - id: touch
      type: Global.FTouch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FButton.HandleSingleTouchBegan(FTouch)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FButton.HandleSingleTouchBegan(FTouch)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function HandleSingleTouchBegan(touch As FTouch) As Boolean
  overload: Global.FButton.HandleSingleTouchBegan*
  implements:
  - Global.FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
- uid: Global.FButton.HandleSingleTouchMoved(FTouch)
  commentId: M:Global.FButton.HandleSingleTouchMoved(FTouch)
  id: HandleSingleTouchMoved(FTouch)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: HandleSingleTouchMoved(FTouch)
  nameWithType: FButton.HandleSingleTouchMoved(FTouch)
  fullName: FButton.HandleSingleTouchMoved(FTouch)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.HandleSingleTouchMoved(FTouch)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void HandleSingleTouchMoved(FTouch touch)
    parameters:
    - id: touch
      type: Global.FTouch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FButton.HandleSingleTouchMoved(FTouch)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub HandleSingleTouchMoved(touch As FTouch)
  overload: Global.FButton.HandleSingleTouchMoved*
  implements:
  - Global.FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
- uid: Global.FButton.HandleSingleTouchEnded(FTouch)
  commentId: M:Global.FButton.HandleSingleTouchEnded(FTouch)
  id: HandleSingleTouchEnded(FTouch)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: HandleSingleTouchEnded(FTouch)
  nameWithType: FButton.HandleSingleTouchEnded(FTouch)
  fullName: FButton.HandleSingleTouchEnded(FTouch)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.HandleSingleTouchEnded(FTouch)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void HandleSingleTouchEnded(FTouch touch)
    parameters:
    - id: touch
      type: Global.FTouch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FButton.HandleSingleTouchEnded(FTouch)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub HandleSingleTouchEnded(touch As FTouch)
  overload: Global.FButton.HandleSingleTouchEnded*
  implements:
  - Global.FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
- uid: Global.FButton.HandleSingleTouchCanceled(FTouch)
  commentId: M:Global.FButton.HandleSingleTouchCanceled(FTouch)
  id: HandleSingleTouchCanceled(FTouch)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: HandleSingleTouchCanceled(FTouch)
  nameWithType: FButton.HandleSingleTouchCanceled(FTouch)
  fullName: FButton.HandleSingleTouchCanceled(FTouch)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.HandleSingleTouchCanceled(FTouch)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void HandleSingleTouchCanceled(FTouch touch)
    parameters:
    - id: touch
      type: Global.FTouch
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touch</parameter>
            <parameter>M:FButton.HandleSingleTouchCanceled(FTouch)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub HandleSingleTouchCanceled(touch As FTouch)
  overload: Global.FButton.HandleSingleTouchCanceled*
  implements:
  - Global.FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
- uid: Global.FButton.SetAnchor(System.Single,System.Single)
  commentId: M:Global.FButton.SetAnchor(System.Single,System.Single)
  id: SetAnchor(System.Single,System.Single)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SetAnchor(float, float)
  nameWithType: FButton.SetAnchor(float, float)
  fullName: FButton.SetAnchor(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.SetAnchor(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetAnchor(float newX, float newY)
    parameters:
    - id: newX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newX</parameter>
            <parameter>M:FButton.SetAnchor(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: newY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newY</parameter>
            <parameter>M:FButton.SetAnchor(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetAnchor(newX As Single, newY As Single)
  overload: Global.FButton.SetAnchor*
  nameWithType.vb: FButton.SetAnchor(Single, Single)
  fullName.vb: FButton.SetAnchor(Single, Single)
  name.vb: SetAnchor(Single, Single)
- uid: Global.FButton.SetAnchor(UnityEngine.Vector2)
  commentId: M:Global.FButton.SetAnchor(UnityEngine.Vector2)
  id: SetAnchor(UnityEngine.Vector2)
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SetAnchor(Vector2)
  nameWithType: FButton.SetAnchor(Vector2)
  fullName: FButton.SetAnchor(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.SetAnchor(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetAnchor(Vector2 newAnchor)
    parameters:
    - id: newAnchor
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newAnchor</parameter>
            <parameter>M:FButton.SetAnchor(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetAnchor(newAnchor As Vector2)
  overload: Global.FButton.SetAnchor*
- uid: Global.FButton.GetAnchor
  commentId: M:Global.FButton.GetAnchor
  id: GetAnchor
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: GetAnchor()
  nameWithType: FButton.GetAnchor()
  fullName: FButton.GetAnchor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FButton.GetAnchor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GetAnchor()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FButton.GetAnchor</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAnchor() As Vector2
  overload: Global.FButton.GetAnchor*
- uid: Global.FButton.label
  commentId: P:Global.FButton.label
  id: label
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: label
  nameWithType: FButton.label
  fullName: FButton.label
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.label</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLabel label { get; }
    parameters: []
    return:
      type: Global.FLabel
    content.vb: Public ReadOnly Property label As FLabel
  overload: Global.FButton.label*
- uid: Global.FButton.isEnabled
  commentId: P:Global.FButton.isEnabled
  id: isEnabled
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: isEnabled
  nameWithType: FButton.isEnabled
  fullName: FButton.isEnabled
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.isEnabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isEnabled { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property isEnabled As Boolean
  overload: Global.FButton.isEnabled*
- uid: Global.FButton.sprite
  commentId: P:Global.FButton.sprite
  id: sprite
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: sprite
  nameWithType: FButton.sprite
  fullName: FButton.sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite sprite { get; }
    parameters: []
    return:
      type: Global.FSprite
    content.vb: Public ReadOnly Property sprite As FSprite
  overload: Global.FButton.sprite*
- uid: Global.FButton.anchorX
  commentId: P:Global.FButton.anchorX
  id: anchorX
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: anchorX
  nameWithType: FButton.anchorX
  fullName: FButton.anchorX
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.anchorX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float anchorX { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property anchorX As Single
  overload: Global.FButton.anchorX*
- uid: Global.FButton.anchorY
  commentId: P:Global.FButton.anchorY
  id: anchorY
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: anchorY
  nameWithType: FButton.anchorY
  fullName: FButton.anchorY
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.anchorY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float anchorY { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property anchorY As Single
  overload: Global.FButton.anchorY*
- uid: Global.FButton.hitRect
  commentId: P:Global.FButton.hitRect
  id: hitRect
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: hitRect
  nameWithType: FButton.hitRect
  fullName: FButton.hitRect
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FButton.hitRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rect hitRect { get; set; }
    parameters: []
    return:
      type: UnityEngine.Rect
    content.vb: Public Property hitRect As Rect
  overload: Global.FButton.hitRect*
- uid: Global.FButton.SignalPress
  commentId: E:Global.FButton.SignalPress
  id: SignalPress
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SignalPress
  nameWithType: FButton.SignalPress
  fullName: FButton.SignalPress
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:FButton.SignalPress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event FButton.ButtonSignalDelegate SignalPress
    return:
      type: Global.FButton.ButtonSignalDelegate
    content.vb: Public Event SignalPress As FButton.ButtonSignalDelegate
- uid: Global.FButton.SignalRelease
  commentId: E:Global.FButton.SignalRelease
  id: SignalRelease
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SignalRelease
  nameWithType: FButton.SignalRelease
  fullName: FButton.SignalRelease
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:FButton.SignalRelease</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event FButton.ButtonSignalDelegate SignalRelease
    return:
      type: Global.FButton.ButtonSignalDelegate
    content.vb: Public Event SignalRelease As FButton.ButtonSignalDelegate
- uid: Global.FButton.SignalReleaseOutside
  commentId: E:Global.FButton.SignalReleaseOutside
  id: SignalReleaseOutside
  parent: Global.FButton
  langs:
  - csharp
  - vb
  name: SignalReleaseOutside
  nameWithType: FButton.SignalReleaseOutside
  fullName: FButton.SignalReleaseOutside
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:FButton.SignalReleaseOutside</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event FButton.ButtonSignalDelegate SignalReleaseOutside
    return:
      type: Global.FButton.ButtonSignalDelegate
    content.vb: Public Event SignalReleaseOutside As FButton.ButtonSignalDelegate
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.FNode
  commentId: T:Global.FNode
  isExternal: true
  href: FNode.html
  name: FNode
  nameWithType: FNode
  fullName: FNode
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.FSingleTouchableInterface
  commentId: T:Global.FSingleTouchableInterface
  isExternal: true
  href: FSingleTouchableInterface.html
  name: FSingleTouchableInterface
  nameWithType: FSingleTouchableInterface
  fullName: FSingleTouchableInterface
- uid: Global.FCapturedTouchableInterface
  commentId: T:Global.FCapturedTouchableInterface
  isExternal: true
  href: FCapturedTouchableInterface.html
  name: FCapturedTouchableInterface
  nameWithType: FCapturedTouchableInterface
  fullName: FCapturedTouchableInterface
- uid: Global.FContainer._childNodes
  commentId: F:Global.FContainer._childNodes
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer__childNodes
  name: _childNodes
  nameWithType: FContainer._childNodes
  fullName: FContainer._childNodes
- uid: Global.FContainer.Redraw(System.Boolean,System.Boolean)
  commentId: M:Global.FContainer.Redraw(System.Boolean,System.Boolean)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_Redraw_System_Boolean_System_Boolean_
  name: Redraw(bool, bool)
  nameWithType: FContainer.Redraw(bool, bool)
  fullName: FContainer.Redraw(bool, bool)
  nameWithType.vb: FContainer.Redraw(Boolean, Boolean)
  fullName.vb: FContainer.Redraw(Boolean, Boolean)
  name.vb: Redraw(Boolean, Boolean)
  spec.csharp:
  - uid: Global.FContainer.Redraw(System.Boolean,System.Boolean)
    name: Redraw
    isExternal: true
    href: Global.FContainer.html#FContainer_Redraw_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.FContainer.Redraw(System.Boolean,System.Boolean)
    name: Redraw
    isExternal: true
    href: Global.FContainer.html#FContainer_Redraw_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.FContainer.HandleAddedToStage
  commentId: M:Global.FContainer.HandleAddedToStage
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_HandleAddedToStage
  name: HandleAddedToStage()
  nameWithType: FContainer.HandleAddedToStage()
  fullName: FContainer.HandleAddedToStage()
  spec.csharp:
  - uid: Global.FContainer.HandleAddedToStage
    name: HandleAddedToStage
    isExternal: true
    href: Global.FContainer.html#FContainer_HandleAddedToStage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FContainer.HandleAddedToStage
    name: HandleAddedToStage
    isExternal: true
    href: Global.FContainer.html#FContainer_HandleAddedToStage
  - name: (
  - name: )
- uid: Global.FContainer.HandleRemovedFromStage
  commentId: M:Global.FContainer.HandleRemovedFromStage
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_HandleRemovedFromStage
  name: HandleRemovedFromStage()
  nameWithType: FContainer.HandleRemovedFromStage()
  fullName: FContainer.HandleRemovedFromStage()
  spec.csharp:
  - uid: Global.FContainer.HandleRemovedFromStage
    name: HandleRemovedFromStage
    isExternal: true
    href: Global.FContainer.html#FContainer_HandleRemovedFromStage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FContainer.HandleRemovedFromStage
    name: HandleRemovedFromStage
    isExternal: true
    href: Global.FContainer.html#FContainer_HandleRemovedFromStage
  - name: (
  - name: )
- uid: Global.FContainer.AddChild(FNode)
  commentId: M:Global.FContainer.AddChild(FNode)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_AddChild_FNode_
  name: AddChild(FNode)
  nameWithType: FContainer.AddChild(FNode)
  fullName: FContainer.AddChild(FNode)
  spec.csharp:
  - uid: Global.FContainer.AddChild(FNode)
    name: AddChild
    isExternal: true
    href: Global.FContainer.html#FContainer_AddChild_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FContainer.AddChild(FNode)
    name: AddChild
    isExternal: true
    href: Global.FContainer.html#FContainer_AddChild_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  commentId: M:Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_AddChildAtIndex_FNode_System_Int32_
  name: AddChildAtIndex(FNode, int)
  nameWithType: FContainer.AddChildAtIndex(FNode, int)
  fullName: FContainer.AddChildAtIndex(FNode, int)
  nameWithType.vb: FContainer.AddChildAtIndex(FNode, Integer)
  fullName.vb: FContainer.AddChildAtIndex(FNode, Integer)
  name.vb: AddChildAtIndex(FNode, Integer)
  spec.csharp:
  - uid: Global.FContainer.AddChildAtIndex(FNode,System.Int32)
    name: AddChildAtIndex
    isExternal: true
    href: Global.FContainer.html#FContainer_AddChildAtIndex_FNode_System_Int32_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.FContainer.AddChildAtIndex(FNode,System.Int32)
    name: AddChildAtIndex
    isExternal: true
    href: Global.FContainer.html#FContainer_AddChildAtIndex_FNode_System_Int32_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.FContainer.RemoveChild(FNode)
  commentId: M:Global.FContainer.RemoveChild(FNode)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_RemoveChild_FNode_
  name: RemoveChild(FNode)
  nameWithType: FContainer.RemoveChild(FNode)
  fullName: FContainer.RemoveChild(FNode)
  spec.csharp:
  - uid: Global.FContainer.RemoveChild(FNode)
    name: RemoveChild
    isExternal: true
    href: Global.FContainer.html#FContainer_RemoveChild_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FContainer.RemoveChild(FNode)
    name: RemoveChild
    isExternal: true
    href: Global.FContainer.html#FContainer_RemoveChild_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FContainer.RemoveAllChildren
  commentId: M:Global.FContainer.RemoveAllChildren
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_RemoveAllChildren
  name: RemoveAllChildren()
  nameWithType: FContainer.RemoveAllChildren()
  fullName: FContainer.RemoveAllChildren()
  spec.csharp:
  - uid: Global.FContainer.RemoveAllChildren
    name: RemoveAllChildren
    isExternal: true
    href: Global.FContainer.html#FContainer_RemoveAllChildren
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FContainer.RemoveAllChildren
    name: RemoveAllChildren
    isExternal: true
    href: Global.FContainer.html#FContainer_RemoveAllChildren
  - name: (
  - name: )
- uid: Global.FContainer.GetChildCount
  commentId: M:Global.FContainer.GetChildCount
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildCount
  name: GetChildCount()
  nameWithType: FContainer.GetChildCount()
  fullName: FContainer.GetChildCount()
  spec.csharp:
  - uid: Global.FContainer.GetChildCount
    name: GetChildCount
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildCount
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FContainer.GetChildCount
    name: GetChildCount
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildCount
  - name: (
  - name: )
- uid: Global.FContainer.GetChildAt(System.Int32)
  commentId: M:Global.FContainer.GetChildAt(System.Int32)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildAt_System_Int32_
  name: GetChildAt(int)
  nameWithType: FContainer.GetChildAt(int)
  fullName: FContainer.GetChildAt(int)
  nameWithType.vb: FContainer.GetChildAt(Integer)
  fullName.vb: FContainer.GetChildAt(Integer)
  name.vb: GetChildAt(Integer)
  spec.csharp:
  - uid: Global.FContainer.GetChildAt(System.Int32)
    name: GetChildAt
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.FContainer.GetChildAt(System.Int32)
    name: GetChildAt
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildAt_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.FContainer.GetChildIndex(FNode)
  commentId: M:Global.FContainer.GetChildIndex(FNode)
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildIndex_FNode_
  name: GetChildIndex(FNode)
  nameWithType: FContainer.GetChildIndex(FNode)
  fullName: FContainer.GetChildIndex(FNode)
  spec.csharp:
  - uid: Global.FContainer.GetChildIndex(FNode)
    name: GetChildIndex
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildIndex_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FContainer.GetChildIndex(FNode)
    name: GetChildIndex
    isExternal: true
    href: Global.FContainer.html#FContainer_GetChildIndex_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FContainer.shouldSortByZ
  commentId: P:Global.FContainer.shouldSortByZ
  parent: Global.FContainer
  isExternal: true
  href: Global.FContainer.html#FContainer_shouldSortByZ
  name: shouldSortByZ
  nameWithType: FContainer.shouldSortByZ
  fullName: FContainer.shouldSortByZ
- uid: Global.FNode._x
  commentId: F:Global.FNode._x
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__x
  name: _x
  nameWithType: FNode._x
  fullName: FNode._x
- uid: Global.FNode._y
  commentId: F:Global.FNode._y
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__y
  name: _y
  nameWithType: FNode._y
  fullName: FNode._y
- uid: Global.FNode._scaleX
  commentId: F:Global.FNode._scaleX
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__scaleX
  name: _scaleX
  nameWithType: FNode._scaleX
  fullName: FNode._scaleX
- uid: Global.FNode._scaleY
  commentId: F:Global.FNode._scaleY
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__scaleY
  name: _scaleY
  nameWithType: FNode._scaleY
  fullName: FNode._scaleY
- uid: Global.FNode._rotation
  commentId: F:Global.FNode._rotation
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__rotation
  name: _rotation
  nameWithType: FNode._rotation
  fullName: FNode._rotation
- uid: Global.FNode._meshZ
  commentId: F:Global.FNode._meshZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__meshZ
  name: _meshZ
  nameWithType: FNode._meshZ
  fullName: FNode._meshZ
- uid: Global.FNode._sortZ
  commentId: F:Global.FNode._sortZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__sortZ
  name: _sortZ
  nameWithType: FNode._sortZ
  fullName: FNode._sortZ
- uid: Global.FNode._isMatrixDirty
  commentId: F:Global.FNode._isMatrixDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isMatrixDirty
  name: _isMatrixDirty
  nameWithType: FNode._isMatrixDirty
  fullName: FNode._isMatrixDirty
- uid: Global.FNode._container
  commentId: F:Global.FNode._container
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__container
  name: _container
  nameWithType: FNode._container
  fullName: FNode._container
- uid: Global.FNode._matrix
  commentId: F:Global.FNode._matrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__matrix
  name: _matrix
  nameWithType: FNode._matrix
  fullName: FNode._matrix
- uid: Global.FNode._concatenatedMatrix
  commentId: F:Global.FNode._concatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__concatenatedMatrix
  name: _concatenatedMatrix
  nameWithType: FNode._concatenatedMatrix
  fullName: FNode._concatenatedMatrix
- uid: Global.FNode._inverseConcatenatedMatrix
  commentId: F:Global.FNode._inverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__inverseConcatenatedMatrix
  name: _inverseConcatenatedMatrix
  nameWithType: FNode._inverseConcatenatedMatrix
  fullName: FNode._inverseConcatenatedMatrix
- uid: Global.FNode._screenConcatenatedMatrix
  commentId: F:Global.FNode._screenConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__screenConcatenatedMatrix
  name: _screenConcatenatedMatrix
  nameWithType: FNode._screenConcatenatedMatrix
  fullName: FNode._screenConcatenatedMatrix
- uid: Global.FNode._screenInverseConcatenatedMatrix
  commentId: F:Global.FNode._screenInverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__screenInverseConcatenatedMatrix
  name: _screenInverseConcatenatedMatrix
  nameWithType: FNode._screenInverseConcatenatedMatrix
  fullName: FNode._screenInverseConcatenatedMatrix
- uid: Global.FNode._needsSpecialMatrices
  commentId: F:Global.FNode._needsSpecialMatrices
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__needsSpecialMatrices
  name: _needsSpecialMatrices
  nameWithType: FNode._needsSpecialMatrices
  fullName: FNode._needsSpecialMatrices
- uid: Global.FNode._alpha
  commentId: F:Global.FNode._alpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__alpha
  name: _alpha
  nameWithType: FNode._alpha
  fullName: FNode._alpha
- uid: Global.FNode._concatenatedAlpha
  commentId: F:Global.FNode._concatenatedAlpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__concatenatedAlpha
  name: _concatenatedAlpha
  nameWithType: FNode._concatenatedAlpha
  fullName: FNode._concatenatedAlpha
- uid: Global.FNode._isAlphaDirty
  commentId: F:Global.FNode._isAlphaDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isAlphaDirty
  name: _isAlphaDirty
  nameWithType: FNode._isAlphaDirty
  fullName: FNode._isAlphaDirty
- uid: Global.FNode._visibleScale
  commentId: F:Global.FNode._visibleScale
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__visibleScale
  name: _visibleScale
  nameWithType: FNode._visibleScale
  fullName: FNode._visibleScale
- uid: Global.FNode._isOnStage
  commentId: F:Global.FNode._isOnStage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isOnStage
  name: _isOnStage
  nameWithType: FNode._isOnStage
  fullName: FNode._isOnStage
- uid: Global.FNode._depth
  commentId: F:Global.FNode._depth
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__depth
  name: _depth
  nameWithType: FNode._depth
  fullName: FNode._depth
- uid: Global.FNode._stage
  commentId: F:Global.FNode._stage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__stage
  name: _stage
  nameWithType: FNode._stage
  fullName: FNode._stage
- uid: Global.FNode._isVisible
  commentId: F:Global.FNode._isVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isVisible
  name: _isVisible
  nameWithType: FNode._isVisible
  fullName: FNode._isVisible
- uid: Global.FNode.data
  commentId: F:Global.FNode.data
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_data
  name: data
  nameWithType: FNode.data
  fullName: FNode.data
- uid: Global.FNode.AddEnabler(FNodeEnabler)
  commentId: M:Global.FNode.AddEnabler(FNodeEnabler)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  name: AddEnabler(FNodeEnabler)
  nameWithType: FNode.AddEnabler(FNodeEnabler)
  fullName: FNode.AddEnabler(FNodeEnabler)
  spec.csharp:
  - uid: Global.FNode.AddEnabler(FNodeEnabler)
    name: AddEnabler
    isExternal: true
    href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
  spec.vb:
  - uid: Global.FNode.AddEnabler(FNodeEnabler)
    name: AddEnabler
    isExternal: true
    href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
- uid: Global.FNode.RemoveEnabler(FNodeEnabler)
  commentId: M:Global.FNode.RemoveEnabler(FNodeEnabler)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  name: RemoveEnabler(FNodeEnabler)
  nameWithType: FNode.RemoveEnabler(FNodeEnabler)
  fullName: FNode.RemoveEnabler(FNodeEnabler)
  spec.csharp:
  - uid: Global.FNode.RemoveEnabler(FNodeEnabler)
    name: RemoveEnabler
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveEnabler(FNodeEnabler)
    name: RemoveEnabler
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
- uid: Global.FNode.RemoveEnablerOfType(System.Type)
  commentId: M:Global.FNode.RemoveEnablerOfType(System.Type)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  name: RemoveEnablerOfType(Type)
  nameWithType: FNode.RemoveEnablerOfType(Type)
  fullName: FNode.RemoveEnablerOfType(System.Type)
  spec.csharp:
  - uid: Global.FNode.RemoveEnablerOfType(System.Type)
    name: RemoveEnablerOfType
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveEnablerOfType(System.Type)
    name: RemoveEnablerOfType
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  commentId: M:Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  name: ListenForResize(ScreenResizeDelegate)
  nameWithType: FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  fullName: FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
    name: ListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenResizeDelegate
    name: ScreenResizeDelegate
    isExternal: true
    href: FScreen.ScreenResizeDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
    name: ListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenResizeDelegate
    name: ScreenResizeDelegate
    isExternal: true
    href: FScreen.ScreenResizeDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForResize
  commentId: M:Global.FNode.RemoveListenForResize
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForResize
  name: RemoveListenForResize()
  nameWithType: FNode.RemoveListenForResize()
  fullName: FNode.RemoveListenForResize()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForResize
    name: RemoveListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForResize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForResize
    name: RemoveListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForResize
  - name: (
  - name: )
- uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  commentId: M:Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  name: ListenForOrientationChange(ScreenOrientationChangeDelegate)
  nameWithType: FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  fullName: FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
    name: ListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenOrientationChangeDelegate
    name: ScreenOrientationChangeDelegate
    isExternal: true
    href: FScreen.ScreenOrientationChangeDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
    name: ListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenOrientationChangeDelegate
    name: ScreenOrientationChangeDelegate
    isExternal: true
    href: FScreen.ScreenOrientationChangeDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForOrientationChange
  commentId: M:Global.FNode.RemoveListenForOrientationChange
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  name: RemoveListenForOrientationChange()
  nameWithType: FNode.RemoveListenForOrientationChange()
  fullName: FNode.RemoveListenForOrientationChange()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForOrientationChange
    name: RemoveListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForOrientationChange
    name: RemoveListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  - name: (
  - name: )
- uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  name: ListenForUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
    name: ListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
    name: ListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForUpdate
  commentId: M:Global.FNode.RemoveListenForUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForUpdate
  name: RemoveListenForUpdate()
  nameWithType: FNode.RemoveListenForUpdate()
  fullName: FNode.RemoveListenForUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForUpdate
    name: RemoveListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForUpdate
    name: RemoveListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  name: ListenForAfterUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
    name: ListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
    name: ListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForAfterUpdate
  commentId: M:Global.FNode.RemoveListenForAfterUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  name: RemoveListenForAfterUpdate()
  nameWithType: FNode.RemoveListenForAfterUpdate()
  fullName: FNode.RemoveListenForAfterUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForAfterUpdate
    name: RemoveListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForAfterUpdate
    name: RemoveListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  name: ListenForLateUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
    name: ListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
    name: ListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForLateUpdate
  commentId: M:Global.FNode.RemoveListenForLateUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  name: RemoveListenForLateUpdate()
  nameWithType: FNode.RemoveListenForLateUpdate()
  fullName: FNode.RemoveListenForLateUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForLateUpdate
    name: RemoveListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForLateUpdate
    name: RemoveListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  name: ListenForFixedUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
    name: ListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
    name: ListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForFixedUpdate
  commentId: M:Global.FNode.RemoveListenForFixedUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  name: RemoveListenForFixedUpdate()
  nameWithType: FNode.RemoveListenForFixedUpdate()
  fullName: FNode.RemoveListenForFixedUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForFixedUpdate
    name: RemoveListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForFixedUpdate
    name: RemoveListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  - name: (
  - name: )
- uid: Global.FNode.EnableSingleTouch
  commentId: M:Global.FNode.EnableSingleTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableSingleTouch
  name: EnableSingleTouch()
  nameWithType: FNode.EnableSingleTouch()
  fullName: FNode.EnableSingleTouch()
  spec.csharp:
  - uid: Global.FNode.EnableSingleTouch
    name: EnableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSingleTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableSingleTouch
    name: EnableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSingleTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableSingleTouch
  commentId: M:Global.FNode.DisableSingleTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableSingleTouch
  name: DisableSingleTouch()
  nameWithType: FNode.DisableSingleTouch()
  fullName: FNode.DisableSingleTouch()
  spec.csharp:
  - uid: Global.FNode.DisableSingleTouch
    name: DisableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSingleTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableSingleTouch
    name: DisableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSingleTouch
  - name: (
  - name: )
- uid: Global.FNode.EnableMultiTouch
  commentId: M:Global.FNode.EnableMultiTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableMultiTouch
  name: EnableMultiTouch()
  nameWithType: FNode.EnableMultiTouch()
  fullName: FNode.EnableMultiTouch()
  spec.csharp:
  - uid: Global.FNode.EnableMultiTouch
    name: EnableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableMultiTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableMultiTouch
    name: EnableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableMultiTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableMultiTouch
  commentId: M:Global.FNode.DisableMultiTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableMultiTouch
  name: DisableMultiTouch()
  nameWithType: FNode.DisableMultiTouch()
  fullName: FNode.DisableMultiTouch()
  spec.csharp:
  - uid: Global.FNode.DisableMultiTouch
    name: DisableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableMultiTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableMultiTouch
    name: DisableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableMultiTouch
  - name: (
  - name: )
- uid: Global.FNode.EnableSmartTouch
  commentId: M:Global.FNode.EnableSmartTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableSmartTouch
  name: EnableSmartTouch()
  nameWithType: FNode.EnableSmartTouch()
  fullName: FNode.EnableSmartTouch()
  spec.csharp:
  - uid: Global.FNode.EnableSmartTouch
    name: EnableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSmartTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableSmartTouch
    name: EnableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSmartTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableSmartTouch
  commentId: M:Global.FNode.DisableSmartTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableSmartTouch
  name: DisableSmartTouch()
  nameWithType: FNode.DisableSmartTouch()
  fullName: FNode.DisableSmartTouch()
  spec.csharp:
  - uid: Global.FNode.DisableSmartTouch
    name: DisableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSmartTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableSmartTouch
    name: DisableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSmartTouch
  - name: (
  - name: )
- uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  commentId: M:Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  name: ListenForAddedOrRemoved(Delegate)
  nameWithType: FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  fullName: FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  spec.csharp:
  - uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
    name: ListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  - name: (
  - uid: Global.FNodeEnablerForAddedOrRemoved.Delegate
    name: Delegate
    isExternal: true
    href: FNodeEnablerForAddedOrRemoved.Delegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
    name: ListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  - name: (
  - uid: Global.FNodeEnablerForAddedOrRemoved.Delegate
    name: Delegate
    isExternal: true
    href: FNodeEnablerForAddedOrRemoved.Delegate.html
  - name: )
- uid: Global.FNode.RemoveListenForAddedOrRemoved
  commentId: M:Global.FNode.RemoveListenForAddedOrRemoved
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  name: RemoveListenForAddedOrRemoved()
  nameWithType: FNode.RemoveListenForAddedOrRemoved()
  fullName: FNode.RemoveListenForAddedOrRemoved()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForAddedOrRemoved
    name: RemoveListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForAddedOrRemoved
    name: RemoveListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  - name: (
  - name: )
- uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToScreen(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  name: LocalToScreen(Vector2)
  nameWithType: FNode.LocalToScreen(Vector2)
  fullName: FNode.LocalToScreen(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
    name: LocalToScreen
    isExternal: true
    href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
    name: LocalToScreen
    isExternal: true
    href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  name: ScreenToLocal(Vector2)
  nameWithType: FNode.ScreenToLocal(Vector2)
  fullName: FNode.ScreenToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
    name: ScreenToLocal
    isExternal: true
    href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
    name: ScreenToLocal
    isExternal: true
    href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToStage(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  name: LocalToStage(Vector2)
  nameWithType: FNode.LocalToStage(Vector2)
  fullName: FNode.LocalToStage(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
    name: LocalToStage
    isExternal: true
    href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
    name: LocalToStage
    isExternal: true
    href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.StageToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  name: StageToLocal(Vector2)
  nameWithType: FNode.StageToLocal(Vector2)
  fullName: FNode.StageToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
    name: StageToLocal
    isExternal: true
    href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
    name: StageToLocal
    isExternal: true
    href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  name: LocalToGlobal(Vector2)
  nameWithType: FNode.LocalToGlobal(Vector2)
  fullName: FNode.LocalToGlobal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
    name: LocalToGlobal
    isExternal: true
    href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
    name: LocalToGlobal
    isExternal: true
    href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  name: GlobalToLocal(Vector2)
  nameWithType: FNode.GlobalToLocal(Vector2)
  fullName: FNode.GlobalToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
    name: GlobalToLocal
    isExternal: true
    href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
    name: GlobalToLocal
    isExternal: true
    href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  commentId: M:Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  name: OtherToLocal(FNode, Vector2)
  nameWithType: FNode.OtherToLocal(FNode, Vector2)
  fullName: FNode.OtherToLocal(FNode, UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
    name: OtherToLocal
    isExternal: true
    href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
    name: OtherToLocal
    isExternal: true
    href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  commentId: M:Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  name: LocalToOther(Vector2, FNode)
  nameWithType: FNode.LocalToOther(Vector2, FNode)
  fullName: FNode.LocalToOther(UnityEngine.Vector2, FNode)
  spec.csharp:
  - uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
    name: LocalToOther
    isExternal: true
    href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
    name: LocalToOther
    isExternal: true
    href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.GetLocalMousePosition
  commentId: M:Global.FNode.GetLocalMousePosition
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetLocalMousePosition
  name: GetLocalMousePosition()
  nameWithType: FNode.GetLocalMousePosition()
  fullName: FNode.GetLocalMousePosition()
  spec.csharp:
  - uid: Global.FNode.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalMousePosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalMousePosition
  - name: (
  - name: )
- uid: Global.FNode.GetLocalTouchPosition(FTouch)
  commentId: M:Global.FNode.GetLocalTouchPosition(FTouch)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  name: GetLocalTouchPosition(FTouch)
  nameWithType: FNode.GetLocalTouchPosition(FTouch)
  fullName: FNode.GetLocalTouchPosition(FTouch)
  spec.csharp:
  - uid: Global.FNode.GetLocalTouchPosition(FTouch)
    name: GetLocalTouchPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FNode.GetLocalTouchPosition(FTouch)
    name: GetLocalTouchPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FNode.UpdateMatrix
  commentId: M:Global.FNode.UpdateMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_UpdateMatrix
  name: UpdateMatrix()
  nameWithType: FNode.UpdateMatrix()
  fullName: FNode.UpdateMatrix()
  spec.csharp:
  - uid: Global.FNode.UpdateMatrix
    name: UpdateMatrix
    isExternal: true
    href: Global.FNode.html#FNode_UpdateMatrix
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.UpdateMatrix
    name: UpdateMatrix
    isExternal: true
    href: Global.FNode.html#FNode_UpdateMatrix
  - name: (
  - name: )
- uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  commentId: M:Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  name: UpdateDepthMatrixAlpha(bool, bool)
  nameWithType: FNode.UpdateDepthMatrixAlpha(bool, bool)
  fullName: FNode.UpdateDepthMatrixAlpha(bool, bool)
  nameWithType.vb: FNode.UpdateDepthMatrixAlpha(Boolean, Boolean)
  fullName.vb: FNode.UpdateDepthMatrixAlpha(Boolean, Boolean)
  name.vb: UpdateDepthMatrixAlpha(Boolean, Boolean)
  spec.csharp:
  - uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
    name: UpdateDepthMatrixAlpha
    isExternal: true
    href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
    name: UpdateDepthMatrixAlpha
    isExternal: true
    href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.FNode.HandleAddedToContainer(FContainer)
  commentId: M:Global.FNode.HandleAddedToContainer(FContainer)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  name: HandleAddedToContainer(FContainer)
  nameWithType: FNode.HandleAddedToContainer(FContainer)
  fullName: FNode.HandleAddedToContainer(FContainer)
  spec.csharp:
  - uid: Global.FNode.HandleAddedToContainer(FContainer)
    name: HandleAddedToContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  - name: (
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleAddedToContainer(FContainer)
    name: HandleAddedToContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  - name: (
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FNode.HandleRemovedFromContainer
  commentId: M:Global.FNode.HandleRemovedFromContainer
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleRemovedFromContainer
  name: HandleRemovedFromContainer()
  nameWithType: FNode.HandleRemovedFromContainer()
  fullName: FNode.HandleRemovedFromContainer()
  spec.csharp:
  - uid: Global.FNode.HandleRemovedFromContainer
    name: HandleRemovedFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromContainer
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleRemovedFromContainer
    name: HandleRemovedFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromContainer
  - name: (
  - name: )
- uid: Global.FNode.RemoveFromContainer
  commentId: M:Global.FNode.RemoveFromContainer
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveFromContainer
  name: RemoveFromContainer()
  nameWithType: FNode.RemoveFromContainer()
  fullName: FNode.RemoveFromContainer()
  spec.csharp:
  - uid: Global.FNode.RemoveFromContainer
    name: RemoveFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_RemoveFromContainer
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveFromContainer
    name: RemoveFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_RemoveFromContainer
  - name: (
  - name: )
- uid: Global.FNode.MoveToFront
  commentId: M:Global.FNode.MoveToFront
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveToFront
  name: MoveToFront()
  nameWithType: FNode.MoveToFront()
  fullName: FNode.MoveToFront()
  spec.csharp:
  - uid: Global.FNode.MoveToFront
    name: MoveToFront
    isExternal: true
    href: Global.FNode.html#FNode_MoveToFront
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveToFront
    name: MoveToFront
    isExternal: true
    href: Global.FNode.html#FNode_MoveToFront
  - name: (
  - name: )
- uid: Global.FNode.MoveToBack
  commentId: M:Global.FNode.MoveToBack
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveToBack
  name: MoveToBack()
  nameWithType: FNode.MoveToBack()
  fullName: FNode.MoveToBack()
  spec.csharp:
  - uid: Global.FNode.MoveToBack
    name: MoveToBack
    isExternal: true
    href: Global.FNode.html#FNode_MoveToBack
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveToBack
    name: MoveToBack
    isExternal: true
    href: Global.FNode.html#FNode_MoveToBack
  - name: (
  - name: )
- uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
  commentId: M:Global.FNode.MoveInFrontOfOtherNode(FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  name: MoveInFrontOfOtherNode(FNode)
  nameWithType: FNode.MoveInFrontOfOtherNode(FNode)
  fullName: FNode.MoveInFrontOfOtherNode(FNode)
  spec.csharp:
  - uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
    name: MoveInFrontOfOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
    name: MoveInFrontOfOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.MoveBehindOtherNode(FNode)
  commentId: M:Global.FNode.MoveBehindOtherNode(FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  name: MoveBehindOtherNode(FNode)
  nameWithType: FNode.MoveBehindOtherNode(FNode)
  fullName: FNode.MoveBehindOtherNode(FNode)
  spec.csharp:
  - uid: Global.FNode.MoveBehindOtherNode(FNode)
    name: MoveBehindOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveBehindOtherNode(FNode)
    name: MoveBehindOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.IsAncestryVisible
  commentId: M:Global.FNode.IsAncestryVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_IsAncestryVisible
  name: IsAncestryVisible()
  nameWithType: FNode.IsAncestryVisible()
  fullName: FNode.IsAncestryVisible()
  spec.csharp:
  - uid: Global.FNode.IsAncestryVisible
    name: IsAncestryVisible
    isExternal: true
    href: Global.FNode.html#FNode_IsAncestryVisible
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.IsAncestryVisible
    name: IsAncestryVisible
    isExternal: true
    href: Global.FNode.html#FNode_IsAncestryVisible
  - name: (
  - name: )
- uid: Global.FNode.CreateSpecialMatrices
  commentId: M:Global.FNode.CreateSpecialMatrices
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_CreateSpecialMatrices
  name: CreateSpecialMatrices()
  nameWithType: FNode.CreateSpecialMatrices()
  fullName: FNode.CreateSpecialMatrices()
  spec.csharp:
  - uid: Global.FNode.CreateSpecialMatrices
    name: CreateSpecialMatrices
    isExternal: true
    href: Global.FNode.html#FNode_CreateSpecialMatrices
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.CreateSpecialMatrices
    name: CreateSpecialMatrices
    isExternal: true
    href: Global.FNode.html#FNode_CreateSpecialMatrices
  - name: (
  - name: )
- uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  commentId: M:Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  name: RotateAroundPointRelative(Vector2, float)
  nameWithType: FNode.RotateAroundPointRelative(Vector2, float)
  fullName: FNode.RotateAroundPointRelative(UnityEngine.Vector2, float)
  nameWithType.vb: FNode.RotateAroundPointRelative(Vector2, Single)
  fullName.vb: FNode.RotateAroundPointRelative(UnityEngine.Vector2, Single)
  name.vb: RotateAroundPointRelative(Vector2, Single)
  spec.csharp:
  - uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  commentId: M:Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  name: RotateAroundPointAbsolute(Vector2, float)
  nameWithType: FNode.RotateAroundPointAbsolute(Vector2, float)
  fullName: FNode.RotateAroundPointAbsolute(UnityEngine.Vector2, float)
  nameWithType.vb: FNode.RotateAroundPointAbsolute(Vector2, Single)
  fullName.vb: FNode.RotateAroundPointAbsolute(UnityEngine.Vector2, Single)
  name.vb: RotateAroundPointAbsolute(Vector2, Single)
  spec.csharp:
  - uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  name: ScaleAroundPointRelative(Vector2, float, float)
  nameWithType: FNode.ScaleAroundPointRelative(Vector2, float, float)
  fullName: FNode.ScaleAroundPointRelative(UnityEngine.Vector2, float, float)
  nameWithType.vb: FNode.ScaleAroundPointRelative(Vector2, Single, Single)
  fullName.vb: FNode.ScaleAroundPointRelative(UnityEngine.Vector2, Single, Single)
  name.vb: ScaleAroundPointRelative(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  name: ScaleAroundPointAbsolute(Vector2, float, float)
  nameWithType: FNode.ScaleAroundPointAbsolute(Vector2, float, float)
  fullName: FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2, float, float)
  nameWithType.vb: FNode.ScaleAroundPointAbsolute(Vector2, Single, Single)
  fullName.vb: FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2, Single, Single)
  name.vb: ScaleAroundPointAbsolute(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.SetPosition(System.Single,System.Single)
  commentId: M:Global.FNode.SetPosition(System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  name: SetPosition(float, float)
  nameWithType: FNode.SetPosition(float, float)
  fullName: FNode.SetPosition(float, float)
  nameWithType.vb: FNode.SetPosition(Single, Single)
  fullName.vb: FNode.SetPosition(Single, Single)
  name.vb: SetPosition(Single, Single)
  spec.csharp:
  - uid: Global.FNode.SetPosition(System.Single,System.Single)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.SetPosition(System.Single,System.Single)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.SetPosition(UnityEngine.Vector2)
  commentId: M:Global.FNode.SetPosition(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  name: SetPosition(Vector2)
  nameWithType: FNode.SetPosition(Vector2)
  fullName: FNode.SetPosition(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.SetPosition(UnityEngine.Vector2)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.SetPosition(UnityEngine.Vector2)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.GetPosition
  commentId: M:Global.FNode.GetPosition
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetPosition
  name: GetPosition()
  nameWithType: FNode.GetPosition()
  fullName: FNode.GetPosition()
  spec.csharp:
  - uid: Global.FNode.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetPosition
  - name: (
  - name: )
- uid: Global.FNode.isVisible
  commentId: P:Global.FNode.isVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_isVisible
  name: isVisible
  nameWithType: FNode.isVisible
  fullName: FNode.isVisible
- uid: Global.FNode.x
  commentId: P:Global.FNode.x
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_x
  name: x
  nameWithType: FNode.x
  fullName: FNode.x
- uid: Global.FNode.y
  commentId: P:Global.FNode.y
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_y
  name: y
  nameWithType: FNode.y
  fullName: FNode.y
- uid: Global.FNode.meshZ
  commentId: P:Global.FNode.meshZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_meshZ
  name: meshZ
  nameWithType: FNode.meshZ
  fullName: FNode.meshZ
- uid: Global.FNode.sortZ
  commentId: P:Global.FNode.sortZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_sortZ
  name: sortZ
  nameWithType: FNode.sortZ
  fullName: FNode.sortZ
- uid: Global.FNode.scaleX
  commentId: P:Global.FNode.scaleX
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scaleX
  name: scaleX
  nameWithType: FNode.scaleX
  fullName: FNode.scaleX
- uid: Global.FNode.scaleY
  commentId: P:Global.FNode.scaleY
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scaleY
  name: scaleY
  nameWithType: FNode.scaleY
  fullName: FNode.scaleY
- uid: Global.FNode.scale
  commentId: P:Global.FNode.scale
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scale
  name: scale
  nameWithType: FNode.scale
  fullName: FNode.scale
- uid: Global.FNode.rotation
  commentId: P:Global.FNode.rotation
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_rotation
  name: rotation
  nameWithType: FNode.rotation
  fullName: FNode.rotation
- uid: Global.FNode.isMatrixDirty
  commentId: P:Global.FNode.isMatrixDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_isMatrixDirty
  name: isMatrixDirty
  nameWithType: FNode.isMatrixDirty
  fullName: FNode.isMatrixDirty
- uid: Global.FNode.container
  commentId: P:Global.FNode.container
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_container
  name: container
  nameWithType: FNode.container
  fullName: FNode.container
- uid: Global.FNode.depth
  commentId: P:Global.FNode.depth
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_depth
  name: depth
  nameWithType: FNode.depth
  fullName: FNode.depth
- uid: Global.FNode.touchPriority
  commentId: P:Global.FNode.touchPriority
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_touchPriority
  name: touchPriority
  nameWithType: FNode.touchPriority
  fullName: FNode.touchPriority
- uid: Global.FNode.matrix
  commentId: P:Global.FNode.matrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_matrix
  name: matrix
  nameWithType: FNode.matrix
  fullName: FNode.matrix
- uid: Global.FNode.concatenatedMatrix
  commentId: P:Global.FNode.concatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_concatenatedMatrix
  name: concatenatedMatrix
  nameWithType: FNode.concatenatedMatrix
  fullName: FNode.concatenatedMatrix
- uid: Global.FNode.inverseConcatenatedMatrix
  commentId: P:Global.FNode.inverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_inverseConcatenatedMatrix
  name: inverseConcatenatedMatrix
  nameWithType: FNode.inverseConcatenatedMatrix
  fullName: FNode.inverseConcatenatedMatrix
- uid: Global.FNode.screenConcatenatedMatrix
  commentId: P:Global.FNode.screenConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_screenConcatenatedMatrix
  name: screenConcatenatedMatrix
  nameWithType: FNode.screenConcatenatedMatrix
  fullName: FNode.screenConcatenatedMatrix
- uid: Global.FNode.screenInverseConcatenatedMatrix
  commentId: P:Global.FNode.screenInverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_screenInverseConcatenatedMatrix
  name: screenInverseConcatenatedMatrix
  nameWithType: FNode.screenInverseConcatenatedMatrix
  fullName: FNode.screenInverseConcatenatedMatrix
- uid: Global.FNode.alpha
  commentId: P:Global.FNode.alpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_alpha
  name: alpha
  nameWithType: FNode.alpha
  fullName: FNode.alpha
- uid: Global.FNode.concatenatedAlpha
  commentId: P:Global.FNode.concatenatedAlpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_concatenatedAlpha
  name: concatenatedAlpha
  nameWithType: FNode.concatenatedAlpha
  fullName: FNode.concatenatedAlpha
- uid: Global.FNode.stage
  commentId: P:Global.FNode.stage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_stage
  name: stage
  nameWithType: FNode.stage
  fullName: FNode.stage
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FAtlasElement
  commentId: T:Global.FAtlasElement
  isExternal: true
  href: FAtlasElement.html
  name: FAtlasElement
  nameWithType: FAtlasElement
  fullName: FAtlasElement
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FButton.#ctor*
  commentId: Overload:Global.FButton.#ctor
  isExternal: true
  href: Global.FButton.html#FButton__ctor_System_String_System_String_System_String_System_String_
  name: FButton
  nameWithType: FButton.FButton
  fullName: FButton.FButton
  nameWithType.vb: FButton.New
  fullName.vb: FButton.New
  name.vb: New
- uid: Global.FButton.SetElements*
  commentId: Overload:Global.FButton.SetElements
  isExternal: true
  href: Global.FButton.html#FButton_SetElements_System_String_System_String_System_String_
  name: SetElements
  nameWithType: FButton.SetElements
  fullName: FButton.SetElements
- uid: Global.FButton.SetColors*
  commentId: Overload:Global.FButton.SetColors
  isExternal: true
  href: Global.FButton.html#FButton_SetColors_UnityEngine_Color_UnityEngine_Color_
  name: SetColors
  nameWithType: FButton.SetColors
  fullName: FButton.SetColors
- uid: Global.FButton.AddLabel*
  commentId: Overload:Global.FButton.AddLabel
  isExternal: true
  href: Global.FButton.html#FButton_AddLabel_System_String_System_String_UnityEngine_Color_
  name: AddLabel
  nameWithType: FButton.AddLabel
  fullName: FButton.AddLabel
- uid: Global.FTextParams
  commentId: T:Global.FTextParams
  isExternal: true
  href: FTextParams.html
  name: FTextParams
  nameWithType: FTextParams
  fullName: FTextParams
- uid: Global.FButton.HandleUpdate*
  commentId: Overload:Global.FButton.HandleUpdate
  isExternal: true
  href: Global.FButton.html#FButton_HandleUpdate
  name: HandleUpdate
  nameWithType: FButton.HandleUpdate
  fullName: FButton.HandleUpdate
- uid: Global.FButton.UpdateOverState*
  commentId: Overload:Global.FButton.UpdateOverState
  isExternal: true
  href: Global.FButton.html#FButton_UpdateOverState
  name: UpdateOverState
  nameWithType: FButton.UpdateOverState
  fullName: FButton.UpdateOverState
- uid: Global.FButton.UpdateEnabled*
  commentId: Overload:Global.FButton.UpdateEnabled
  isExternal: true
  href: Global.FButton.html#FButton_UpdateEnabled
  name: UpdateEnabled
  nameWithType: FButton.UpdateEnabled
  fullName: FButton.UpdateEnabled
- uid: Global.FButton.HandleSingleTouchBegan*
  commentId: Overload:Global.FButton.HandleSingleTouchBegan
  isExternal: true
  href: Global.FButton.html#FButton_HandleSingleTouchBegan_FTouch_
  name: HandleSingleTouchBegan
  nameWithType: FButton.HandleSingleTouchBegan
  fullName: FButton.HandleSingleTouchBegan
- uid: Global.FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
  commentId: M:Global.FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
  parent: Global.FSingleTouchableInterface
  isExternal: true
  href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchBegan_FTouch_
  name: HandleSingleTouchBegan(FTouch)
  nameWithType: FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
  fullName: FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
  spec.csharp:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
    name: HandleSingleTouchBegan
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchBegan_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchBegan(FTouch)
    name: HandleSingleTouchBegan
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchBegan_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FTouch
  commentId: T:Global.FTouch
  isExternal: true
  href: FTouch.html
  name: FTouch
  nameWithType: FTouch
  fullName: FTouch
- uid: Global.FButton.HandleSingleTouchMoved*
  commentId: Overload:Global.FButton.HandleSingleTouchMoved
  isExternal: true
  href: Global.FButton.html#FButton_HandleSingleTouchMoved_FTouch_
  name: HandleSingleTouchMoved
  nameWithType: FButton.HandleSingleTouchMoved
  fullName: FButton.HandleSingleTouchMoved
- uid: Global.FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
  commentId: M:Global.FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
  parent: Global.FSingleTouchableInterface
  isExternal: true
  href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchMoved_FTouch_
  name: HandleSingleTouchMoved(FTouch)
  nameWithType: FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
  fullName: FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
  spec.csharp:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
    name: HandleSingleTouchMoved
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchMoved_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchMoved(FTouch)
    name: HandleSingleTouchMoved
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchMoved_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FButton.HandleSingleTouchEnded*
  commentId: Overload:Global.FButton.HandleSingleTouchEnded
  isExternal: true
  href: Global.FButton.html#FButton_HandleSingleTouchEnded_FTouch_
  name: HandleSingleTouchEnded
  nameWithType: FButton.HandleSingleTouchEnded
  fullName: FButton.HandleSingleTouchEnded
- uid: Global.FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
  commentId: M:Global.FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
  parent: Global.FSingleTouchableInterface
  isExternal: true
  href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchEnded_FTouch_
  name: HandleSingleTouchEnded(FTouch)
  nameWithType: FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
  fullName: FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
  spec.csharp:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
    name: HandleSingleTouchEnded
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchEnded_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchEnded(FTouch)
    name: HandleSingleTouchEnded
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchEnded_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FButton.HandleSingleTouchCanceled*
  commentId: Overload:Global.FButton.HandleSingleTouchCanceled
  isExternal: true
  href: Global.FButton.html#FButton_HandleSingleTouchCanceled_FTouch_
  name: HandleSingleTouchCanceled
  nameWithType: FButton.HandleSingleTouchCanceled
  fullName: FButton.HandleSingleTouchCanceled
- uid: Global.FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
  commentId: M:Global.FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
  parent: Global.FSingleTouchableInterface
  isExternal: true
  href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchCanceled_FTouch_
  name: HandleSingleTouchCanceled(FTouch)
  nameWithType: FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
  fullName: FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
  spec.csharp:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
    name: HandleSingleTouchCanceled
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchCanceled_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FSingleTouchableInterface.HandleSingleTouchCanceled(FTouch)
    name: HandleSingleTouchCanceled
    isExternal: true
    href: Global.FSingleTouchableInterface.html#FSingleTouchableInterface_HandleSingleTouchCanceled_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FButton.SetAnchor*
  commentId: Overload:Global.FButton.SetAnchor
  isExternal: true
  href: Global.FButton.html#FButton_SetAnchor_System_Single_System_Single_
  name: SetAnchor
  nameWithType: FButton.SetAnchor
  fullName: FButton.SetAnchor
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FButton.GetAnchor*
  commentId: Overload:Global.FButton.GetAnchor
  isExternal: true
  href: Global.FButton.html#FButton_GetAnchor
  name: GetAnchor
  nameWithType: FButton.GetAnchor
  fullName: FButton.GetAnchor
- uid: Global.FButton.label*
  commentId: Overload:Global.FButton.label
  isExternal: true
  href: Global.FButton.html#FButton_label
  name: label
  nameWithType: FButton.label
  fullName: FButton.label
- uid: Global.FButton.isEnabled*
  commentId: Overload:Global.FButton.isEnabled
  isExternal: true
  href: Global.FButton.html#FButton_isEnabled
  name: isEnabled
  nameWithType: FButton.isEnabled
  fullName: FButton.isEnabled
- uid: Global.FButton.sprite*
  commentId: Overload:Global.FButton.sprite
  isExternal: true
  href: Global.FButton.html#FButton_sprite
  name: sprite
  nameWithType: FButton.sprite
  fullName: FButton.sprite
- uid: Global.FButton.anchorX*
  commentId: Overload:Global.FButton.anchorX
  isExternal: true
  href: Global.FButton.html#FButton_anchorX
  name: anchorX
  nameWithType: FButton.anchorX
  fullName: FButton.anchorX
- uid: Global.FButton.anchorY*
  commentId: Overload:Global.FButton.anchorY
  isExternal: true
  href: Global.FButton.html#FButton_anchorY
  name: anchorY
  nameWithType: FButton.anchorY
  fullName: FButton.anchorY
- uid: Global.FButton.hitRect*
  commentId: Overload:Global.FButton.hitRect
  isExternal: true
  href: Global.FButton.html#FButton_hitRect
  name: hitRect
  nameWithType: FButton.hitRect
  fullName: FButton.hitRect
- uid: Global.FButton.ButtonSignalDelegate
  commentId: T:Global.FButton.ButtonSignalDelegate
  isExternal: true
  href: FButton.html
  name: FButton.ButtonSignalDelegate
  nameWithType: FButton.ButtonSignalDelegate
  fullName: FButton.ButtonSignalDelegate
  spec.csharp:
  - uid: Global.FButton
    name: FButton
    isExternal: true
    href: FButton.html
  - name: .
  - uid: Global.FButton.ButtonSignalDelegate
    name: ButtonSignalDelegate
    isExternal: true
    href: FButton.ButtonSignalDelegate.html
  spec.vb:
  - uid: Global.FButton
    name: FButton
    isExternal: true
    href: FButton.html
  - name: .
  - uid: Global.FButton.ButtonSignalDelegate
    name: ButtonSignalDelegate
    isExternal: true
    href: FButton.ButtonSignalDelegate.html
