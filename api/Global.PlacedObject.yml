### YamlMime:ManagedReference
items:
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  id: PlacedObject
  parent: Global
  children:
  - Global.PlacedObject.#ctor(PlacedObject.Type,PlacedObject.Data)
  - Global.PlacedObject.FromString(System.String[])
  - Global.PlacedObject.Refresh
  - Global.PlacedObject.ToString
  - Global.PlacedObject.active
  - Global.PlacedObject.data
  - Global.PlacedObject.deactivatedByWarpFilter
  - Global.PlacedObject.deactivattable
  - Global.PlacedObject.pos
  - Global.PlacedObject.type
  - Global.PlacedObject.unrecognizedAttributes
  langs:
  - csharp
  - vb
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: An object thats placed using DevTools and gets loaded when the room gets loaded.
  example: []
  syntax:
    content: public class PlacedObject
    content.vb: Public Class PlacedObject
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PlacedObject.pos
  commentId: F:Global.PlacedObject.pos
  id: pos
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: PlacedObject.pos
  fullName: PlacedObject.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.PlacedObject.active
  commentId: F:Global.PlacedObject.active
  id: active
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: active
  nameWithType: PlacedObject.active
  fullName: PlacedObject.active
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.active</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool active
    return:
      type: System.Boolean
    content.vb: Public active As Boolean
- uid: Global.PlacedObject.deactivatedByWarpFilter
  commentId: F:Global.PlacedObject.deactivatedByWarpFilter
  id: deactivatedByWarpFilter
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: deactivatedByWarpFilter
  nameWithType: PlacedObject.deactivatedByWarpFilter
  fullName: PlacedObject.deactivatedByWarpFilter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.deactivatedByWarpFilter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deactivatedByWarpFilter
    return:
      type: System.Boolean
    content.vb: Public deactivatedByWarpFilter As Boolean
- uid: Global.PlacedObject.unrecognizedAttributes
  commentId: F:Global.PlacedObject.unrecognizedAttributes
  id: unrecognizedAttributes
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: unrecognizedAttributes
  nameWithType: PlacedObject.unrecognizedAttributes
  fullName: PlacedObject.unrecognizedAttributes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.unrecognizedAttributes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected string[] unrecognizedAttributes
    return:
      type: System.String[]
    content.vb: Protected unrecognizedAttributes As String()
- uid: Global.PlacedObject.type
  commentId: F:Global.PlacedObject.type
  id: type
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: type
  nameWithType: PlacedObject.type
  fullName: PlacedObject.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.Type type
    return:
      type: Global.PlacedObject.Type
    content.vb: Public type As PlacedObject.Type
- uid: Global.PlacedObject.data
  commentId: F:Global.PlacedObject.data
  id: data
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: data
  nameWithType: PlacedObject.data
  fullName: PlacedObject.data
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlacedObject.data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.Data data
    return:
      type: Global.PlacedObject.Data
    content.vb: Public data As PlacedObject.Data
- uid: Global.PlacedObject.#ctor(PlacedObject.Type,PlacedObject.Data)
  commentId: M:Global.PlacedObject.#ctor(PlacedObject.Type,PlacedObject.Data)
  id: '#ctor(PlacedObject.Type,PlacedObject.Data)'
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: PlacedObject(Type, Data)
  nameWithType: PlacedObject.PlacedObject(PlacedObject.Type, PlacedObject.Data)
  fullName: PlacedObject.PlacedObject(PlacedObject.Type, PlacedObject.Data)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PlacedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject(PlacedObject.Type type, PlacedObject.Data data)
    parameters:
    - id: type
      type: Global.PlacedObject.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:PlacedObject.#ctor(PlacedObject.Type,PlacedObject.Data)</parameter>
          </include>
        </markup>
    - id: data
      type: Global.PlacedObject.Data
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:PlacedObject.#ctor(PlacedObject.Type,PlacedObject.Data)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As PlacedObject.Type, data As PlacedObject.Data)
  overload: Global.PlacedObject.#ctor*
  nameWithType.vb: PlacedObject.New(PlacedObject.Type, PlacedObject.Data)
  fullName.vb: PlacedObject.New(PlacedObject.Type, PlacedObject.Data)
  name.vb: New(Type, Data)
- uid: Global.PlacedObject.ToString
  commentId: M:Global.PlacedObject.ToString
  id: ToString
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PlacedObject.ToString()
  fullName: PlacedObject.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlacedObject.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PlacedObject.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.PlacedObject.ToString*
- uid: Global.PlacedObject.FromString(System.String[])
  commentId: M:Global.PlacedObject.FromString(System.String[])
  id: FromString(System.String[])
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: FromString(string[])
  nameWithType: PlacedObject.FromString(string[])
  fullName: PlacedObject.FromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlacedObject.FromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:PlacedObject.FromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub FromString(s As String())
  overload: Global.PlacedObject.FromString*
  nameWithType.vb: PlacedObject.FromString(String())
  fullName.vb: PlacedObject.FromString(String())
  name.vb: FromString(String())
- uid: Global.PlacedObject.Refresh
  commentId: M:Global.PlacedObject.Refresh
  id: Refresh
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: PlacedObject.Refresh()
  fullName: PlacedObject.Refresh()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlacedObject.Refresh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Refresh()
    content.vb: Public Sub Refresh()
  overload: Global.PlacedObject.Refresh*
- uid: Global.PlacedObject.deactivattable
  commentId: P:Global.PlacedObject.deactivattable
  id: deactivattable
  parent: Global.PlacedObject
  langs:
  - csharp
  - vb
  name: deactivattable
  nameWithType: PlacedObject.deactivattable
  fullName: PlacedObject.deactivattable
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlacedObject.deactivattable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deactivattable { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property deactivattable As Boolean
  overload: Global.PlacedObject.deactivattable*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.PlacedObject.Type
  commentId: T:Global.PlacedObject.Type
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.Type
  nameWithType: PlacedObject.Type
  fullName: PlacedObject.Type
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Type
    name: Type
    isExternal: true
    href: PlacedObject.Type.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Type
    name: Type
    isExternal: true
    href: PlacedObject.Type.html
- uid: Global.PlacedObject.Data
  commentId: T:Global.PlacedObject.Data
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.Data
  nameWithType: PlacedObject.Data
  fullName: PlacedObject.Data
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Data
    name: Data
    isExternal: true
    href: PlacedObject.Data.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Data
    name: Data
    isExternal: true
    href: PlacedObject.Data.html
- uid: Global.PlacedObject.#ctor*
  commentId: Overload:Global.PlacedObject.#ctor
  isExternal: true
  href: Global.PlacedObject.html#PlacedObject__ctor_PlacedObject_Type_PlacedObject_Data_
  name: PlacedObject
  nameWithType: PlacedObject.PlacedObject
  fullName: PlacedObject.PlacedObject
  nameWithType.vb: PlacedObject.New
  fullName.vb: PlacedObject.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.PlacedObject.ToString*
  commentId: Overload:Global.PlacedObject.ToString
  isExternal: true
  href: Global.PlacedObject.html#PlacedObject_ToString
  name: ToString
  nameWithType: PlacedObject.ToString
  fullName: PlacedObject.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.PlacedObject.FromString*
  commentId: Overload:Global.PlacedObject.FromString
  isExternal: true
  href: Global.PlacedObject.html#PlacedObject_FromString_System_String___
  name: FromString
  nameWithType: PlacedObject.FromString
  fullName: PlacedObject.FromString
- uid: Global.PlacedObject.Refresh*
  commentId: Overload:Global.PlacedObject.Refresh
  isExternal: true
  href: Global.PlacedObject.html#PlacedObject_Refresh
  name: Refresh
  nameWithType: PlacedObject.Refresh
  fullName: PlacedObject.Refresh
- uid: Global.PlacedObject.deactivattable*
  commentId: Overload:Global.PlacedObject.deactivattable
  isExternal: true
  href: Global.PlacedObject.html#PlacedObject_deactivattable
  name: deactivattable
  nameWithType: PlacedObject.deactivattable
  fullName: PlacedObject.deactivattable
