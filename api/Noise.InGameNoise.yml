### YamlMime:ManagedReference
items:
- uid: Noise.InGameNoise
  commentId: T:Noise.InGameNoise
  id: InGameNoise
  parent: Noise
  children:
  - Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)
  - Noise.InGameNoise.Equals(Noise.InGameNoise)
  - Noise.InGameNoise.Equals(System.Object)
  - Noise.InGameNoise.GetHashCode
  - Noise.InGameNoise.interesting
  - Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)
  - Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)
  - Noise.InGameNoise.pos
  - Noise.InGameNoise.sourceObject
  - Noise.InGameNoise.strength
  langs:
  - csharp
  - vb
  name: InGameNoise
  nameWithType: InGameNoise
  fullName: Noise.InGameNoise
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Noise.InGameNoise</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public struct InGameNoise : IEquatable<InGameNoise>'
    content.vb: Public Structure InGameNoise Implements IEquatable(Of InGameNoise)
  implements:
  - System.IEquatable{Noise.InGameNoise}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Noise.InGameNoise.pos
  commentId: F:Noise.InGameNoise.pos
  id: pos
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: InGameNoise.pos
  fullName: Noise.InGameNoise.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Noise.InGameNoise.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Noise.InGameNoise.strength
  commentId: F:Noise.InGameNoise.strength
  id: strength
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: strength
  nameWithType: InGameNoise.strength
  fullName: Noise.InGameNoise.strength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Noise.InGameNoise.strength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float strength
    return:
      type: System.Single
    content.vb: Public strength As Single
- uid: Noise.InGameNoise.sourceObject
  commentId: F:Noise.InGameNoise.sourceObject
  id: sourceObject
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: sourceObject
  nameWithType: InGameNoise.sourceObject
  fullName: Noise.InGameNoise.sourceObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Noise.InGameNoise.sourceObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject sourceObject
    return:
      type: Global.PhysicalObject
    content.vb: Public sourceObject As PhysicalObject
- uid: Noise.InGameNoise.interesting
  commentId: F:Noise.InGameNoise.interesting
  id: interesting
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: interesting
  nameWithType: InGameNoise.interesting
  fullName: Noise.InGameNoise.interesting
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Noise.InGameNoise.interesting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float interesting
    return:
      type: System.Single
    content.vb: Public interesting As Single
- uid: Noise.InGameNoise.Equals(Noise.InGameNoise)
  commentId: M:Noise.InGameNoise.Equals(Noise.InGameNoise)
  id: Equals(Noise.InGameNoise)
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: Equals(InGameNoise)
  nameWithType: InGameNoise.Equals(InGameNoise)
  fullName: Noise.InGameNoise.Equals(Noise.InGameNoise)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Noise.InGameNoise.Equals(Noise.InGameNoise)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(InGameNoise other)
    parameters:
    - id: other
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Noise.InGameNoise.Equals(Noise.InGameNoise)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Noise.InGameNoise.Equals(Noise.InGameNoise)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(other As InGameNoise) As Boolean
  overload: Noise.InGameNoise.Equals*
  implements:
  - System.IEquatable{Noise.InGameNoise}.Equals(Noise.InGameNoise)
- uid: Noise.InGameNoise.Equals(System.Object)
  commentId: M:Noise.InGameNoise.Equals(System.Object)
  id: Equals(System.Object)
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: InGameNoise.Equals(object)
  fullName: Noise.InGameNoise.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Noise.InGameNoise.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Noise.InGameNoise.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Noise.InGameNoise.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Noise.InGameNoise.Equals*
  nameWithType.vb: InGameNoise.Equals(Object)
  fullName.vb: Noise.InGameNoise.Equals(Object)
  name.vb: Equals(Object)
- uid: Noise.InGameNoise.GetHashCode
  commentId: M:Noise.InGameNoise.GetHashCode
  id: GetHashCode
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: InGameNoise.GetHashCode()
  fullName: Noise.InGameNoise.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Noise.InGameNoise.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Noise.InGameNoise.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Noise.InGameNoise.GetHashCode*
- uid: Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)
  commentId: M:Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)
  id: op_Equality(Noise.InGameNoise,Noise.InGameNoise)
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: operator ==(InGameNoise, InGameNoise)
  nameWithType: InGameNoise.operator ==(InGameNoise, InGameNoise)
  fullName: Noise.InGameNoise.operator ==(Noise.InGameNoise, Noise.InGameNoise)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(InGameNoise left, InGameNoise right)
    parameters:
    - id: left
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    - id: right
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Noise.InGameNoise.op_Equality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(left As InGameNoise, right As InGameNoise) As Boolean
  overload: Noise.InGameNoise.op_Equality*
  nameWithType.vb: InGameNoise.=(InGameNoise, InGameNoise)
  fullName.vb: Noise.InGameNoise.=(Noise.InGameNoise, Noise.InGameNoise)
  name.vb: =(InGameNoise, InGameNoise)
- uid: Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)
  commentId: M:Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)
  id: op_Inequality(Noise.InGameNoise,Noise.InGameNoise)
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: operator !=(InGameNoise, InGameNoise)
  nameWithType: InGameNoise.operator !=(InGameNoise, InGameNoise)
  fullName: Noise.InGameNoise.operator !=(Noise.InGameNoise, Noise.InGameNoise)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(InGameNoise left, InGameNoise right)
    parameters:
    - id: left
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    - id: right
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Noise.InGameNoise.op_Inequality(Noise.InGameNoise,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(left As InGameNoise, right As InGameNoise) As Boolean
  overload: Noise.InGameNoise.op_Inequality*
  nameWithType.vb: InGameNoise.<>(InGameNoise, InGameNoise)
  fullName.vb: Noise.InGameNoise.<>(Noise.InGameNoise, Noise.InGameNoise)
  name.vb: <>(InGameNoise, InGameNoise)
- uid: Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)
  commentId: M:Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)
  id: '#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)'
  parent: Noise.InGameNoise
  langs:
  - csharp
  - vb
  name: InGameNoise(Vector2, float, PhysicalObject, float)
  nameWithType: InGameNoise.InGameNoise(Vector2, float, PhysicalObject, float)
  fullName: Noise.InGameNoise.InGameNoise(UnityEngine.Vector2, float, PhysicalObject, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Noise
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Noise.InGameNoise</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InGameNoise(Vector2 pos, float strength, PhysicalObject sourceObject, float interesting)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)</parameter>
          </include>
        </markup>
    - id: strength
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>strength</parameter>
            <parameter>M:Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)</parameter>
          </include>
        </markup>
    - id: sourceObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceObject</parameter>
            <parameter>M:Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)</parameter>
          </include>
        </markup>
    - id: interesting
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>interesting</parameter>
            <parameter>M:Noise.InGameNoise.#ctor(UnityEngine.Vector2,System.Single,PhysicalObject,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(pos As Vector2, strength As Single, sourceObject As PhysicalObject, interesting As Single)
  overload: Noise.InGameNoise.#ctor*
  nameWithType.vb: InGameNoise.New(Vector2, Single, PhysicalObject, Single)
  fullName.vb: Noise.InGameNoise.New(UnityEngine.Vector2, Single, PhysicalObject, Single)
  name.vb: New(Vector2, Single, PhysicalObject, Single)
references:
- uid: Noise
  commentId: N:Noise
  isExternal: true
  href: Noise.html
  name: Noise
  nameWithType: Noise
  fullName: Noise
- uid: System.IEquatable{Noise.InGameNoise}
  commentId: T:System.IEquatable{Noise.InGameNoise}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<InGameNoise>
  nameWithType: IEquatable<InGameNoise>
  fullName: System.IEquatable<Noise.InGameNoise>
  nameWithType.vb: IEquatable(Of InGameNoise)
  fullName.vb: System.IEquatable(Of Noise.InGameNoise)
  name.vb: IEquatable(Of InGameNoise)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Noise.InGameNoise.Equals*
  commentId: Overload:Noise.InGameNoise.Equals
  isExternal: true
  href: Noise.InGameNoise.html#Noise_InGameNoise_Equals_Noise_InGameNoise_
  name: Equals
  nameWithType: InGameNoise.Equals
  fullName: Noise.InGameNoise.Equals
- uid: System.IEquatable{Noise.InGameNoise}.Equals(Noise.InGameNoise)
  commentId: M:System.IEquatable{Noise.InGameNoise}.Equals(Noise.InGameNoise)
  parent: System.IEquatable{Noise.InGameNoise}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(InGameNoise)
  nameWithType: IEquatable<InGameNoise>.Equals(InGameNoise)
  fullName: System.IEquatable<Noise.InGameNoise>.Equals(Noise.InGameNoise)
  nameWithType.vb: IEquatable(Of InGameNoise).Equals(InGameNoise)
  fullName.vb: System.IEquatable(Of Noise.InGameNoise).Equals(Noise.InGameNoise)
  spec.csharp:
  - uid: System.IEquatable{Noise.InGameNoise}.Equals(Noise.InGameNoise)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{Noise.InGameNoise}.Equals(Noise.InGameNoise)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: Noise.InGameNoise
  commentId: T:Noise.InGameNoise
  parent: Noise
  isExternal: true
  href: Noise.InGameNoise.html
  name: InGameNoise
  nameWithType: InGameNoise
  fullName: Noise.InGameNoise
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Noise.InGameNoise.GetHashCode*
  commentId: Overload:Noise.InGameNoise.GetHashCode
  isExternal: true
  href: Noise.InGameNoise.html#Noise_InGameNoise_GetHashCode
  name: GetHashCode
  nameWithType: InGameNoise.GetHashCode
  fullName: Noise.InGameNoise.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Noise.InGameNoise.op_Equality*
  commentId: Overload:Noise.InGameNoise.op_Equality
  isExternal: true
  href: Noise.InGameNoise.html#Noise_InGameNoise_op_Equality_Noise_InGameNoise_Noise_InGameNoise_
  name: operator ==
  nameWithType: InGameNoise.operator ==
  fullName: Noise.InGameNoise.operator ==
  nameWithType.vb: InGameNoise.=
  fullName.vb: Noise.InGameNoise.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Noise.InGameNoise.op_Equality*
    name: ==
    isExternal: true
    href: Noise.InGameNoise.html#Noise_InGameNoise_op_Equality_Noise_InGameNoise_Noise_InGameNoise_
- uid: Noise.InGameNoise.op_Inequality*
  commentId: Overload:Noise.InGameNoise.op_Inequality
  isExternal: true
  href: Noise.InGameNoise.html#Noise_InGameNoise_op_Inequality_Noise_InGameNoise_Noise_InGameNoise_
  name: operator !=
  nameWithType: InGameNoise.operator !=
  fullName: Noise.InGameNoise.operator !=
  nameWithType.vb: InGameNoise.<>
  fullName.vb: Noise.InGameNoise.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Noise.InGameNoise.op_Inequality*
    name: '!='
    isExternal: true
    href: Noise.InGameNoise.html#Noise_InGameNoise_op_Inequality_Noise_InGameNoise_Noise_InGameNoise_
- uid: Noise.InGameNoise.#ctor*
  commentId: Overload:Noise.InGameNoise.#ctor
  isExternal: true
  href: Noise.InGameNoise.html#Noise_InGameNoise__ctor_UnityEngine_Vector2_System_Single_PhysicalObject_System_Single_
  name: InGameNoise
  nameWithType: InGameNoise.InGameNoise
  fullName: Noise.InGameNoise.InGameNoise
  nameWithType.vb: InGameNoise.New
  fullName.vb: Noise.InGameNoise.New
  name.vb: New
