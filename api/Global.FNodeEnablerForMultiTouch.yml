### YamlMime:ManagedReference
items:
- uid: Global.FNodeEnablerForMultiTouch
  commentId: T:Global.FNodeEnablerForMultiTouch
  id: FNodeEnablerForMultiTouch
  parent: Global
  children:
  - Global.FNodeEnablerForMultiTouch.#ctor(FNode)
  - Global.FNodeEnablerForMultiTouch.Connect
  - Global.FNodeEnablerForMultiTouch.Disconnect
  - Global.FNodeEnablerForMultiTouch.multiTouchable
  langs:
  - csharp
  - vb
  name: FNodeEnablerForMultiTouch
  nameWithType: FNodeEnablerForMultiTouch
  fullName: FNodeEnablerForMultiTouch
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FNodeEnablerForMultiTouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FNodeEnablerForMultiTouch : FNodeEnabler'
    content.vb: Public Class FNodeEnablerForMultiTouch Inherits FNodeEnabler
  inheritance:
  - System.Object
  - Global.FNodeEnabler
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FNodeEnablerForMultiTouch.multiTouchable
  commentId: F:Global.FNodeEnablerForMultiTouch.multiTouchable
  id: multiTouchable
  parent: Global.FNodeEnablerForMultiTouch
  langs:
  - csharp
  - vb
  name: multiTouchable
  nameWithType: FNodeEnablerForMultiTouch.multiTouchable
  fullName: FNodeEnablerForMultiTouch.multiTouchable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FNodeEnablerForMultiTouch.multiTouchable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FMultiTouchableInterface multiTouchable
    return:
      type: Global.FMultiTouchableInterface
    content.vb: Public multiTouchable As FMultiTouchableInterface
- uid: Global.FNodeEnablerForMultiTouch.#ctor(FNode)
  commentId: M:Global.FNodeEnablerForMultiTouch.#ctor(FNode)
  id: '#ctor(FNode)'
  parent: Global.FNodeEnablerForMultiTouch
  langs:
  - csharp
  - vb
  name: FNodeEnablerForMultiTouch(FNode)
  nameWithType: FNodeEnablerForMultiTouch.FNodeEnablerForMultiTouch(FNode)
  fullName: FNodeEnablerForMultiTouch.FNodeEnablerForMultiTouch(FNode)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FNodeEnablerForMultiTouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FNodeEnablerForMultiTouch(FNode node)
    parameters:
    - id: node
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:FNodeEnablerForMultiTouch.#ctor(FNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(node As FNode)
  overload: Global.FNodeEnablerForMultiTouch.#ctor*
  nameWithType.vb: FNodeEnablerForMultiTouch.New(FNode)
  fullName.vb: FNodeEnablerForMultiTouch.New(FNode)
  name.vb: New(FNode)
- uid: Global.FNodeEnablerForMultiTouch.Connect
  commentId: M:Global.FNodeEnablerForMultiTouch.Connect
  id: Connect
  parent: Global.FNodeEnablerForMultiTouch
  langs:
  - csharp
  - vb
  name: Connect()
  nameWithType: FNodeEnablerForMultiTouch.Connect()
  fullName: FNodeEnablerForMultiTouch.Connect()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FNodeEnablerForMultiTouch.Connect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Connect()
    content.vb: Public Overrides Sub Connect()
  overridden: Global.FNodeEnabler.Connect
  overload: Global.FNodeEnablerForMultiTouch.Connect*
- uid: Global.FNodeEnablerForMultiTouch.Disconnect
  commentId: M:Global.FNodeEnablerForMultiTouch.Disconnect
  id: Disconnect
  parent: Global.FNodeEnablerForMultiTouch
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: FNodeEnablerForMultiTouch.Disconnect()
  fullName: FNodeEnablerForMultiTouch.Disconnect()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FNodeEnablerForMultiTouch.Disconnect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Disconnect()
    content.vb: Public Overrides Sub Disconnect()
  overridden: Global.FNodeEnabler.Disconnect
  overload: Global.FNodeEnablerForMultiTouch.Disconnect*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.FNodeEnabler
  commentId: T:Global.FNodeEnabler
  isExternal: true
  href: FNodeEnabler.html
  name: FNodeEnabler
  nameWithType: FNodeEnabler
  fullName: FNodeEnabler
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FMultiTouchableInterface
  commentId: T:Global.FMultiTouchableInterface
  isExternal: true
  href: FMultiTouchableInterface.html
  name: FMultiTouchableInterface
  nameWithType: FMultiTouchableInterface
  fullName: FMultiTouchableInterface
- uid: Global.FNodeEnablerForMultiTouch.#ctor*
  commentId: Overload:Global.FNodeEnablerForMultiTouch.#ctor
  isExternal: true
  href: Global.FNodeEnablerForMultiTouch.html#FNodeEnablerForMultiTouch__ctor_FNode_
  name: FNodeEnablerForMultiTouch
  nameWithType: FNodeEnablerForMultiTouch.FNodeEnablerForMultiTouch
  fullName: FNodeEnablerForMultiTouch.FNodeEnablerForMultiTouch
  nameWithType.vb: FNodeEnablerForMultiTouch.New
  fullName.vb: FNodeEnablerForMultiTouch.New
  name.vb: New
- uid: Global.FNode
  commentId: T:Global.FNode
  isExternal: true
  href: FNode.html
  name: FNode
  nameWithType: FNode
  fullName: FNode
- uid: Global.FNodeEnabler.Connect
  commentId: M:Global.FNodeEnabler.Connect
  parent: Global.FNodeEnabler
  isExternal: true
  href: Global.FNodeEnabler.html#FNodeEnabler_Connect
  name: Connect()
  nameWithType: FNodeEnabler.Connect()
  fullName: FNodeEnabler.Connect()
  spec.csharp:
  - uid: Global.FNodeEnabler.Connect
    name: Connect
    isExternal: true
    href: Global.FNodeEnabler.html#FNodeEnabler_Connect
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNodeEnabler.Connect
    name: Connect
    isExternal: true
    href: Global.FNodeEnabler.html#FNodeEnabler_Connect
  - name: (
  - name: )
- uid: Global.FNodeEnablerForMultiTouch.Connect*
  commentId: Overload:Global.FNodeEnablerForMultiTouch.Connect
  isExternal: true
  href: Global.FNodeEnablerForMultiTouch.html#FNodeEnablerForMultiTouch_Connect
  name: Connect
  nameWithType: FNodeEnablerForMultiTouch.Connect
  fullName: FNodeEnablerForMultiTouch.Connect
- uid: Global.FNodeEnabler.Disconnect
  commentId: M:Global.FNodeEnabler.Disconnect
  parent: Global.FNodeEnabler
  isExternal: true
  href: Global.FNodeEnabler.html#FNodeEnabler_Disconnect
  name: Disconnect()
  nameWithType: FNodeEnabler.Disconnect()
  fullName: FNodeEnabler.Disconnect()
  spec.csharp:
  - uid: Global.FNodeEnabler.Disconnect
    name: Disconnect
    isExternal: true
    href: Global.FNodeEnabler.html#FNodeEnabler_Disconnect
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNodeEnabler.Disconnect
    name: Disconnect
    isExternal: true
    href: Global.FNodeEnabler.html#FNodeEnabler_Disconnect
  - name: (
  - name: )
- uid: Global.FNodeEnablerForMultiTouch.Disconnect*
  commentId: Overload:Global.FNodeEnablerForMultiTouch.Disconnect
  isExternal: true
  href: Global.FNodeEnablerForMultiTouch.html#FNodeEnablerForMultiTouch_Disconnect
  name: Disconnect
  nameWithType: FNodeEnablerForMultiTouch.Disconnect
  fullName: FNodeEnablerForMultiTouch.Disconnect
