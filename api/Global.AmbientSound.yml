### YamlMime:ManagedReference
items:
- uid: Global.AmbientSound
  commentId: T:Global.AmbientSound
  id: AmbientSound
  parent: Global
  children:
  - Global.AmbientSound.#ctor(System.String,System.Boolean)
  - Global.AmbientSound.FromString(System.String[])
  - Global.AmbientSound.ToString
  - Global.AmbientSound.inherited
  - Global.AmbientSound.overWrite
  - Global.AmbientSound.panelPosition
  - Global.AmbientSound.pitch
  - Global.AmbientSound.sample
  - Global.AmbientSound.type
  - Global.AmbientSound.unrecognizedAttributes
  - Global.AmbientSound.volume
  langs:
  - csharp
  - vb
  name: AmbientSound
  nameWithType: AmbientSound
  fullName: AmbientSound
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AmbientSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class AmbientSound
    content.vb: Public MustInherit Class AmbientSound
  inheritance:
  - System.Object
  derivedClasses:
  - Global.DopplerAffectedSound
  - Global.OmniDirectionalSound
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AmbientSound.sample
  commentId: F:Global.AmbientSound.sample
  id: sample
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: sample
  nameWithType: AmbientSound.sample
  fullName: AmbientSound.sample
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.sample</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string sample
    return:
      type: System.String
    content.vb: Public sample As String
- uid: Global.AmbientSound.volume
  commentId: F:Global.AmbientSound.volume
  id: volume
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: volume
  nameWithType: AmbientSound.volume
  fullName: AmbientSound.volume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.volume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float volume
    return:
      type: System.Single
    content.vb: Public volume As Single
- uid: Global.AmbientSound.pitch
  commentId: F:Global.AmbientSound.pitch
  id: pitch
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: pitch
  nameWithType: AmbientSound.pitch
  fullName: AmbientSound.pitch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.pitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pitch
    return:
      type: System.Single
    content.vb: Public pitch As Single
- uid: Global.AmbientSound.inherited
  commentId: F:Global.AmbientSound.inherited
  id: inherited
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: inherited
  nameWithType: AmbientSound.inherited
  fullName: AmbientSound.inherited
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.inherited</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inherited
    return:
      type: System.Boolean
    content.vb: Public inherited As Boolean
- uid: Global.AmbientSound.overWrite
  commentId: F:Global.AmbientSound.overWrite
  id: overWrite
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: overWrite
  nameWithType: AmbientSound.overWrite
  fullName: AmbientSound.overWrite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.overWrite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool overWrite
    return:
      type: System.Boolean
    content.vb: Public overWrite As Boolean
- uid: Global.AmbientSound.panelPosition
  commentId: F:Global.AmbientSound.panelPosition
  id: panelPosition
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: panelPosition
  nameWithType: AmbientSound.panelPosition
  fullName: AmbientSound.panelPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.panelPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panelPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Public panelPosition As Vector2
- uid: Global.AmbientSound.unrecognizedAttributes
  commentId: F:Global.AmbientSound.unrecognizedAttributes
  id: unrecognizedAttributes
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: unrecognizedAttributes
  nameWithType: AmbientSound.unrecognizedAttributes
  fullName: AmbientSound.unrecognizedAttributes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.unrecognizedAttributes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] unrecognizedAttributes
    return:
      type: System.String[]
    content.vb: Public unrecognizedAttributes As String()
- uid: Global.AmbientSound.type
  commentId: F:Global.AmbientSound.type
  id: type
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: type
  nameWithType: AmbientSound.type
  fullName: AmbientSound.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AmbientSound.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmbientSound.Type type
    return:
      type: Global.AmbientSound.Type
    content.vb: Public type As AmbientSound.Type
- uid: Global.AmbientSound.#ctor(System.String,System.Boolean)
  commentId: M:Global.AmbientSound.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: AmbientSound(string, bool)
  nameWithType: AmbientSound.AmbientSound(string, bool)
  fullName: AmbientSound.AmbientSound(string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AmbientSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmbientSound(string sample, bool inherited)
    parameters:
    - id: sample
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sample</parameter>
            <parameter>M:AmbientSound.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: inherited
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inherited</parameter>
            <parameter>M:AmbientSound.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(sample As String, inherited As Boolean)
  overload: Global.AmbientSound.#ctor*
  nameWithType.vb: AmbientSound.New(String, Boolean)
  fullName.vb: AmbientSound.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: Global.AmbientSound.ToString
  commentId: M:Global.AmbientSound.ToString
  id: ToString
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AmbientSound.ToString()
  fullName: AmbientSound.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AmbientSound.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AmbientSound.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.AmbientSound.ToString*
- uid: Global.AmbientSound.FromString(System.String[])
  commentId: M:Global.AmbientSound.FromString(System.String[])
  id: FromString(System.String[])
  parent: Global.AmbientSound
  langs:
  - csharp
  - vb
  name: FromString(string[])
  nameWithType: AmbientSound.FromString(string[])
  fullName: AmbientSound.FromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AmbientSound.FromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void FromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:AmbientSound.FromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub FromString(s As String())
  overload: Global.AmbientSound.FromString*
  nameWithType.vb: AmbientSound.FromString(String())
  fullName.vb: AmbientSound.FromString(String())
  name.vb: FromString(String())
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.AmbientSound.Type
  commentId: T:Global.AmbientSound.Type
  isExternal: true
  href: AmbientSound.html
  name: AmbientSound.Type
  nameWithType: AmbientSound.Type
  fullName: AmbientSound.Type
  spec.csharp:
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: .
  - uid: Global.AmbientSound.Type
    name: Type
    isExternal: true
    href: AmbientSound.Type.html
  spec.vb:
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: .
  - uid: Global.AmbientSound.Type
    name: Type
    isExternal: true
    href: AmbientSound.Type.html
- uid: Global.AmbientSound.#ctor*
  commentId: Overload:Global.AmbientSound.#ctor
  isExternal: true
  href: Global.AmbientSound.html#AmbientSound__ctor_System_String_System_Boolean_
  name: AmbientSound
  nameWithType: AmbientSound.AmbientSound
  fullName: AmbientSound.AmbientSound
  nameWithType.vb: AmbientSound.New
  fullName.vb: AmbientSound.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.AmbientSound.ToString*
  commentId: Overload:Global.AmbientSound.ToString
  isExternal: true
  href: Global.AmbientSound.html#AmbientSound_ToString
  name: ToString
  nameWithType: AmbientSound.ToString
  fullName: AmbientSound.ToString
- uid: Global.AmbientSound.FromString*
  commentId: Overload:Global.AmbientSound.FromString
  isExternal: true
  href: Global.AmbientSound.html#AmbientSound_FromString_System_String___
  name: FromString
  nameWithType: AmbientSound.FromString
  fullName: AmbientSound.FromString
