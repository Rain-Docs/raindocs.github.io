### YamlMime:ManagedReference
items:
- uid: RewiredConsts.Player
  commentId: T:RewiredConsts.Player
  id: Player
  parent: RewiredConsts
  children:
  - RewiredConsts.Player.Player0
  - RewiredConsts.Player.Player1
  - RewiredConsts.Player.Player2
  - RewiredConsts.Player.Player3
  - RewiredConsts.Player.PlayerTemplate
  - RewiredConsts.Player.System
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: RewiredConsts.Player
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RewiredConsts.Player</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class Player
    content.vb: Public Module Player
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: RewiredConsts.Player.System
  commentId: F:RewiredConsts.Player.System
  id: System
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: System
  nameWithType: Player.System
  fullName: RewiredConsts.Player.System
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.System</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int System = 9999999
    return:
      type: System.Int32
    content.vb: Public Const System As Integer = 9999999
- uid: RewiredConsts.Player.Player0
  commentId: F:RewiredConsts.Player.Player0
  id: Player0
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: Player0
  nameWithType: Player.Player0
  fullName: RewiredConsts.Player.Player0
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.Player0</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int Player0 = 0
    return:
      type: System.Int32
    content.vb: Public Const Player0 As Integer = 0
- uid: RewiredConsts.Player.Player1
  commentId: F:RewiredConsts.Player.Player1
  id: Player1
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: Player1
  nameWithType: Player.Player1
  fullName: RewiredConsts.Player.Player1
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.Player1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int Player1 = 1
    return:
      type: System.Int32
    content.vb: Public Const Player1 As Integer = 1
- uid: RewiredConsts.Player.Player2
  commentId: F:RewiredConsts.Player.Player2
  id: Player2
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: Player2
  nameWithType: Player.Player2
  fullName: RewiredConsts.Player.Player2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.Player2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int Player2 = 2
    return:
      type: System.Int32
    content.vb: Public Const Player2 As Integer = 2
- uid: RewiredConsts.Player.Player3
  commentId: F:RewiredConsts.Player.Player3
  id: Player3
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: Player3
  nameWithType: Player.Player3
  fullName: RewiredConsts.Player.Player3
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.Player3</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int Player3 = 3
    return:
      type: System.Int32
    content.vb: Public Const Player3 As Integer = 3
- uid: RewiredConsts.Player.PlayerTemplate
  commentId: F:RewiredConsts.Player.PlayerTemplate
  id: PlayerTemplate
  parent: RewiredConsts.Player
  langs:
  - csharp
  - vb
  name: PlayerTemplate
  nameWithType: Player.PlayerTemplate
  fullName: RewiredConsts.Player.PlayerTemplate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RewiredConsts
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RewiredConsts.Player.PlayerTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int PlayerTemplate = 4
    return:
      type: System.Int32
    content.vb: Public Const PlayerTemplate As Integer = 4
references:
- uid: RewiredConsts
  commentId: N:RewiredConsts
  isExternal: true
  href: RewiredConsts.html
  name: RewiredConsts
  nameWithType: RewiredConsts
  fullName: RewiredConsts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
