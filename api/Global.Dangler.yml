### YamlMime:ManagedReference
items:
- uid: Global.Dangler
  commentId: T:Global.Dangler
  id: Dangler
  parent: Global
  children:
  - Global.Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)
  - Global.Dangler.ConPos(System.Single)
  - Global.Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)
  - Global.Dangler.Props
  - Global.Dangler.Reset
  - Global.Dangler.Update
  - Global.Dangler.danglerNum
  - Global.Dangler.gModule
  - Global.Dangler.segments
  langs:
  - csharp
  - vb
  name: Dangler
  nameWithType: Dangler
  fullName: Dangler
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Dangler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Dangler
    content.vb: Public Class Dangler
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Dangler.gModule
  commentId: F:Global.Dangler.gModule
  id: gModule
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: gModule
  nameWithType: Dangler.gModule
  fullName: Dangler.gModule
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.gModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GraphicsModule gModule
    return:
      type: Global.GraphicsModule
    content.vb: Public gModule As GraphicsModule
- uid: Global.Dangler.segments
  commentId: F:Global.Dangler.segments
  id: segments
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: Dangler.segments
  fullName: Dangler.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dangler.DanglerSegment[] segments
    return:
      type: Global.Dangler.DanglerSegment[]
    content.vb: Public segments As Dangler.DanglerSegment()
- uid: Global.Dangler.danglerNum
  commentId: F:Global.Dangler.danglerNum
  id: danglerNum
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: danglerNum
  nameWithType: Dangler.danglerNum
  fullName: Dangler.danglerNum
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Dangler.danglerNum</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int danglerNum
    return:
      type: System.Int32
    content.vb: Public danglerNum As Integer
- uid: Global.Dangler.ConPos(System.Single)
  commentId: M:Global.Dangler.ConPos(System.Single)
  id: ConPos(System.Single)
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: ConPos(float)
  nameWithType: Dangler.ConPos(float)
  fullName: Dangler.ConPos(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Dangler.ConPos(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ConPos(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Dangler.ConPos(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Dangler.ConPos(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConPos(timeStacker As Single) As Vector2
  overload: Global.Dangler.ConPos*
  nameWithType.vb: Dangler.ConPos(Single)
  fullName.vb: Dangler.ConPos(Single)
  name.vb: ConPos(Single)
- uid: Global.Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)
  commentId: M:Global.Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)
  id: '#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)'
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: Dangler(GraphicsModule, int, int, float, float)
  nameWithType: Dangler.Dangler(GraphicsModule, int, int, float, float)
  fullName: Dangler.Dangler(GraphicsModule, int, int, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Dangler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dangler(GraphicsModule gModule, int danglerNum, int segs, float baseRad, float conRad)
    parameters:
    - id: gModule
      type: Global.GraphicsModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gModule</parameter>
            <parameter>M:Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: danglerNum
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>danglerNum</parameter>
            <parameter>M:Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: segs
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segs</parameter>
            <parameter>M:Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: baseRad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseRad</parameter>
            <parameter>M:Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: conRad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>conRad</parameter>
            <parameter>M:Dangler.#ctor(GraphicsModule,System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(gModule As GraphicsModule, danglerNum As Integer, segs As Integer, baseRad As Single, conRad As Single)
  overload: Global.Dangler.#ctor*
  nameWithType.vb: Dangler.New(GraphicsModule, Integer, Integer, Single, Single)
  fullName.vb: Dangler.New(GraphicsModule, Integer, Integer, Single, Single)
  name.vb: New(GraphicsModule, Integer, Integer, Single, Single)
- uid: Global.Dangler.Reset
  commentId: M:Global.Dangler.Reset
  id: Reset
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Dangler.Reset()
  fullName: Dangler.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Dangler.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.Dangler.Reset*
- uid: Global.Dangler.Update
  commentId: M:Global.Dangler.Update
  id: Update
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Dangler.Update()
  fullName: Dangler.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Dangler.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Dangler.Update*
- uid: Global.Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)
  commentId: M:Global.Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)
  id: InitSprite(RoomCamera.SpriteLeaser,System.Int32)
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: InitSprite(SpriteLeaser, int)
  nameWithType: Dangler.InitSprite(RoomCamera.SpriteLeaser, int)
  fullName: Dangler.InitSprite(RoomCamera.SpriteLeaser, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitSprite(RoomCamera.SpriteLeaser sLeaser, int spriteIndex)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)</parameter>
          </include>
        </markup>
    - id: spriteIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spriteIndex</parameter>
            <parameter>M:Dangler.InitSprite(RoomCamera.SpriteLeaser,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitSprite(sLeaser As RoomCamera.SpriteLeaser, spriteIndex As Integer)
  overload: Global.Dangler.InitSprite*
  nameWithType.vb: Dangler.InitSprite(RoomCamera.SpriteLeaser, Integer)
  fullName.vb: Dangler.InitSprite(RoomCamera.SpriteLeaser, Integer)
  name.vb: InitSprite(SpriteLeaser, Integer)
- uid: Global.Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: DrawSprite(int, SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Dangler.DrawSprite(int, RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Dangler.DrawSprite(int, RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprite(int spriteIndex, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: spriteIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spriteIndex</parameter>
            <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Dangler.DrawSprite(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprite(spriteIndex As Integer, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.Dangler.DrawSprite*
  nameWithType.vb: Dangler.DrawSprite(Integer, RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Dangler.DrawSprite(Integer, RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprite(Integer, SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.Dangler.Props
  commentId: P:Global.Dangler.Props
  id: Props
  parent: Global.Dangler
  langs:
  - csharp
  - vb
  name: Props
  nameWithType: Dangler.Props
  fullName: Dangler.Props
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Dangler.Props</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dangler.DanglerProps Props { get; }
    parameters: []
    return:
      type: Global.Dangler.DanglerProps
    content.vb: Public ReadOnly Property Props As Dangler.DanglerProps
  overload: Global.Dangler.Props*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.Dangler.DanglerSegment[]
  isExternal: true
  href: Dangler.DanglerSegment.html
  name: DanglerSegment[]
  nameWithType: Dangler.DanglerSegment[]
  fullName: Dangler.DanglerSegment[]
  nameWithType.vb: Dangler.DanglerSegment()
  fullName.vb: Dangler.DanglerSegment()
  name.vb: DanglerSegment()
  spec.csharp:
  - uid: Global.Dangler.DanglerSegment
    name: DanglerSegment
    isExternal: true
    href: Dangler.DanglerSegment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Dangler.DanglerSegment
    name: DanglerSegment
    isExternal: true
    href: Dangler.DanglerSegment.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Dangler.ConPos*
  commentId: Overload:Global.Dangler.ConPos
  isExternal: true
  href: Global.Dangler.html#Dangler_ConPos_System_Single_
  name: ConPos
  nameWithType: Dangler.ConPos
  fullName: Dangler.ConPos
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.Dangler.#ctor*
  commentId: Overload:Global.Dangler.#ctor
  isExternal: true
  href: Global.Dangler.html#Dangler__ctor_GraphicsModule_System_Int32_System_Int32_System_Single_System_Single_
  name: Dangler
  nameWithType: Dangler.Dangler
  fullName: Dangler.Dangler
  nameWithType.vb: Dangler.New
  fullName.vb: Dangler.New
  name.vb: New
- uid: Global.Dangler.Reset*
  commentId: Overload:Global.Dangler.Reset
  isExternal: true
  href: Global.Dangler.html#Dangler_Reset
  name: Reset
  nameWithType: Dangler.Reset
  fullName: Dangler.Reset
- uid: Global.Dangler.Update*
  commentId: Overload:Global.Dangler.Update
  isExternal: true
  href: Global.Dangler.html#Dangler_Update
  name: Update
  nameWithType: Dangler.Update
  fullName: Dangler.Update
- uid: Global.Dangler.InitSprite*
  commentId: Overload:Global.Dangler.InitSprite
  isExternal: true
  href: Global.Dangler.html#Dangler_InitSprite_RoomCamera_SpriteLeaser_System_Int32_
  name: InitSprite
  nameWithType: Dangler.InitSprite
  fullName: Dangler.InitSprite
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.Dangler.DrawSprite*
  commentId: Overload:Global.Dangler.DrawSprite
  isExternal: true
  href: Global.Dangler.html#Dangler_DrawSprite_System_Int32_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprite
  nameWithType: Dangler.DrawSprite
  fullName: Dangler.DrawSprite
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Dangler.Props*
  commentId: Overload:Global.Dangler.Props
  isExternal: true
  href: Global.Dangler.html#Dangler_Props
  name: Props
  nameWithType: Dangler.Props
  fullName: Dangler.Props
- uid: Global.Dangler.DanglerProps
  commentId: T:Global.Dangler.DanglerProps
  isExternal: true
  href: Dangler.html
  name: Dangler.DanglerProps
  nameWithType: Dangler.DanglerProps
  fullName: Dangler.DanglerProps
  spec.csharp:
  - uid: Global.Dangler
    name: Dangler
    isExternal: true
    href: Dangler.html
  - name: .
  - uid: Global.Dangler.DanglerProps
    name: DanglerProps
    isExternal: true
    href: Dangler.DanglerProps.html
  spec.vb:
  - uid: Global.Dangler
    name: Dangler
    isExternal: true
    href: Dangler.html
  - name: .
  - uid: Global.Dangler.DanglerProps
    name: DanglerProps
    isExternal: true
    href: Dangler.DanglerProps.html
