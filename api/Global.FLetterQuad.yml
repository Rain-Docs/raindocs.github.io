### YamlMime:ManagedReference
items:
- uid: Global.FLetterQuad
  commentId: T:Global.FLetterQuad
  id: FLetterQuad
  parent: Global
  children:
  - Global.FLetterQuad.CalculateVectors
  - Global.FLetterQuad.CalculateVectors(System.Single,System.Single)
  - Global.FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)
  - Global.FLetterQuad.bottomLeft
  - Global.FLetterQuad.bottomRight
  - Global.FLetterQuad.charInfo
  - Global.FLetterQuad.rect
  - Global.FLetterQuad.topLeft
  - Global.FLetterQuad.topRight
  langs:
  - csharp
  - vb
  name: FLetterQuad
  nameWithType: FLetterQuad
  fullName: FLetterQuad
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FLetterQuad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct FLetterQuad
    content.vb: Public Structure FLetterQuad
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.FLetterQuad.charInfo
  commentId: F:Global.FLetterQuad.charInfo
  id: charInfo
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: charInfo
  nameWithType: FLetterQuad.charInfo
  fullName: FLetterQuad.charInfo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.charInfo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FCharInfo charInfo
    return:
      type: Global.FCharInfo
    content.vb: Public charInfo As FCharInfo
- uid: Global.FLetterQuad.rect
  commentId: F:Global.FLetterQuad.rect
  id: rect
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: rect
  nameWithType: FLetterQuad.rect
  fullName: FLetterQuad.rect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.rect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rect rect
    return:
      type: UnityEngine.Rect
    content.vb: Public rect As Rect
- uid: Global.FLetterQuad.topLeft
  commentId: F:Global.FLetterQuad.topLeft
  id: topLeft
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: topLeft
  nameWithType: FLetterQuad.topLeft
  fullName: FLetterQuad.topLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.topLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 topLeft
    return:
      type: UnityEngine.Vector2
    content.vb: Public topLeft As Vector2
- uid: Global.FLetterQuad.topRight
  commentId: F:Global.FLetterQuad.topRight
  id: topRight
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: topRight
  nameWithType: FLetterQuad.topRight
  fullName: FLetterQuad.topRight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.topRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 topRight
    return:
      type: UnityEngine.Vector2
    content.vb: Public topRight As Vector2
- uid: Global.FLetterQuad.bottomRight
  commentId: F:Global.FLetterQuad.bottomRight
  id: bottomRight
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: bottomRight
  nameWithType: FLetterQuad.bottomRight
  fullName: FLetterQuad.bottomRight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.bottomRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 bottomRight
    return:
      type: UnityEngine.Vector2
    content.vb: Public bottomRight As Vector2
- uid: Global.FLetterQuad.bottomLeft
  commentId: F:Global.FLetterQuad.bottomLeft
  id: bottomLeft
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: bottomLeft
  nameWithType: FLetterQuad.bottomLeft
  fullName: FLetterQuad.bottomLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FLetterQuad.bottomLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 bottomLeft
    return:
      type: UnityEngine.Vector2
    content.vb: Public bottomLeft As Vector2
- uid: Global.FLetterQuad.CalculateVectors
  commentId: M:Global.FLetterQuad.CalculateVectors
  id: CalculateVectors
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: CalculateVectors()
  nameWithType: FLetterQuad.CalculateVectors()
  fullName: FLetterQuad.CalculateVectors()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FLetterQuad.CalculateVectors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CalculateVectors()
    content.vb: Public Sub CalculateVectors()
  overload: Global.FLetterQuad.CalculateVectors*
- uid: Global.FLetterQuad.CalculateVectors(System.Single,System.Single)
  commentId: M:Global.FLetterQuad.CalculateVectors(System.Single,System.Single)
  id: CalculateVectors(System.Single,System.Single)
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: CalculateVectors(float, float)
  nameWithType: FLetterQuad.CalculateVectors(float, float)
  fullName: FLetterQuad.CalculateVectors(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FLetterQuad.CalculateVectors(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CalculateVectors(float offsetX, float offsetY)
    parameters:
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:FLetterQuad.CalculateVectors(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:FLetterQuad.CalculateVectors(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CalculateVectors(offsetX As Single, offsetY As Single)
  overload: Global.FLetterQuad.CalculateVectors*
  nameWithType.vb: FLetterQuad.CalculateVectors(Single, Single)
  fullName.vb: FLetterQuad.CalculateVectors(Single, Single)
  name.vb: CalculateVectors(Single, Single)
- uid: Global.FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)
  commentId: M:Global.FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)
  id: CalculateVectorsToWholePixels(System.Single,System.Single)
  parent: Global.FLetterQuad
  langs:
  - csharp
  - vb
  name: CalculateVectorsToWholePixels(float, float)
  nameWithType: FLetterQuad.CalculateVectorsToWholePixels(float, float)
  fullName: FLetterQuad.CalculateVectorsToWholePixels(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CalculateVectorsToWholePixels(float offsetX, float offsetY)
    parameters:
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:FLetterQuad.CalculateVectorsToWholePixels(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CalculateVectorsToWholePixels(offsetX As Single, offsetY As Single)
  overload: Global.FLetterQuad.CalculateVectorsToWholePixels*
  nameWithType.vb: FLetterQuad.CalculateVectorsToWholePixels(Single, Single)
  fullName.vb: FLetterQuad.CalculateVectorsToWholePixels(Single, Single)
  name.vb: CalculateVectorsToWholePixels(Single, Single)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FCharInfo
  commentId: T:Global.FCharInfo
  isExternal: true
  href: FCharInfo.html
  name: FCharInfo
  nameWithType: FCharInfo
  fullName: FCharInfo
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FLetterQuad.CalculateVectors*
  commentId: Overload:Global.FLetterQuad.CalculateVectors
  isExternal: true
  href: Global.FLetterQuad.html#FLetterQuad_CalculateVectors
  name: CalculateVectors
  nameWithType: FLetterQuad.CalculateVectors
  fullName: FLetterQuad.CalculateVectors
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FLetterQuad.CalculateVectorsToWholePixels*
  commentId: Overload:Global.FLetterQuad.CalculateVectorsToWholePixels
  isExternal: true
  href: Global.FLetterQuad.html#FLetterQuad_CalculateVectorsToWholePixels_System_Single_System_Single_
  name: CalculateVectorsToWholePixels
  nameWithType: FLetterQuad.CalculateVectorsToWholePixels
  fullName: FLetterQuad.CalculateVectorsToWholePixels
