### YamlMime:ManagedReference
items:
- uid: Global.RXRectExtensions
  commentId: T:Global.RXRectExtensions
  id: RXRectExtensions
  parent: Global
  children:
  - Global.RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)
  - Global.RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)
  - Global.RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)
  - Global.RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)
  - Global.RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)
  - Global.RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)
  - Global.RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)
  - Global.RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)
  - Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)
  langs:
  - csharp
  - vb
  name: RXRectExtensions
  nameWithType: RXRectExtensions
  fullName: RXRectExtensions
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXRectExtensions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class RXRectExtensions
    content.vb: Public Module RXRectExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)
  commentId: M:Global.RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)
  id: CloneWithExpansion(UnityEngine.Rect,System.Single)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CloneWithExpansion(Rect, float)
  nameWithType: RXRectExtensions.CloneWithExpansion(Rect, float)
  fullName: RXRectExtensions.CloneWithExpansion(UnityEngine.Rect, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Rect CloneWithExpansion(this Rect rect, float expansionAmount)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    - id: expansionAmount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>expansionAmount</parameter>
            <parameter>M:RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CloneWithExpansion(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneWithExpansion(rect As Rect, expansionAmount As Single) As Rect
  overload: Global.RXRectExtensions.CloneWithExpansion*
  nameWithType.vb: RXRectExtensions.CloneWithExpansion(Rect, Single)
  fullName.vb: RXRectExtensions.CloneWithExpansion(UnityEngine.Rect, Single)
  name.vb: CloneWithExpansion(Rect, Single)
- uid: Global.RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)
  commentId: M:Global.RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)
  id: CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CheckIntersect(Rect, Rect)
  nameWithType: RXRectExtensions.CheckIntersect(Rect, Rect)
  fullName: RXRectExtensions.CheckIntersect(UnityEngine.Rect, UnityEngine.Rect)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CheckIntersect(this Rect rect, Rect otherRect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    - id: otherRect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherRect</parameter>
            <parameter>M:RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CheckIntersect(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CheckIntersect(rect As Rect, otherRect As Rect) As Boolean
  overload: Global.RXRectExtensions.CheckIntersect*
- uid: Global.RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)
  commentId: M:Global.RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)
  id: CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CheckIntersectComplex(Rect, Rect)
  nameWithType: RXRectExtensions.CheckIntersectComplex(Rect, Rect)
  fullName: RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect, UnityEngine.Rect)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CheckIntersectComplex(this Rect rect, Rect otherRect)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    - id: otherRect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherRect</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectComplex(UnityEngine.Rect,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CheckIntersectComplex(rect As Rect, otherRect As Rect) As Boolean
  overload: Global.RXRectExtensions.CheckIntersectComplex*
- uid: Global.RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)
  commentId: M:Global.RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)
  id: CloneAndMultiply(UnityEngine.Rect,System.Single)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CloneAndMultiply(Rect, float)
  nameWithType: RXRectExtensions.CloneAndMultiply(Rect, float)
  fullName: RXRectExtensions.CloneAndMultiply(UnityEngine.Rect, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Rect CloneAndMultiply(this Rect rect, float multiplier)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    - id: multiplier
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>multiplier</parameter>
            <parameter>M:RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CloneAndMultiply(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneAndMultiply(rect As Rect, multiplier As Single) As Rect
  overload: Global.RXRectExtensions.CloneAndMultiply*
  nameWithType.vb: RXRectExtensions.CloneAndMultiply(Rect, Single)
  fullName.vb: RXRectExtensions.CloneAndMultiply(UnityEngine.Rect, Single)
  name.vb: CloneAndMultiply(Rect, Single)
- uid: Global.RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)
  commentId: M:Global.RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)
  id: CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CloneAndOffset(Rect, float, float)
  nameWithType: RXRectExtensions.CloneAndOffset(Rect, float, float)
  fullName: RXRectExtensions.CloneAndOffset(UnityEngine.Rect, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Rect CloneAndOffset(this Rect rect, float offsetX, float offsetY)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CloneAndOffset(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneAndOffset(rect As Rect, offsetX As Single, offsetY As Single) As Rect
  overload: Global.RXRectExtensions.CloneAndOffset*
  nameWithType.vb: RXRectExtensions.CloneAndOffset(Rect, Single, Single)
  fullName.vb: RXRectExtensions.CloneAndOffset(UnityEngine.Rect, Single, Single)
  name.vb: CloneAndOffset(Rect, Single, Single)
- uid: Global.RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)
  id: CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CloneAndScaleThenOffset(Rect, float, float, float, float)
  nameWithType: RXRectExtensions.CloneAndScaleThenOffset(Rect, float, float, float, float)
  fullName: RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Rect CloneAndScaleThenOffset(this Rect rect, float scaleX, float scaleY, float offsetX, float offsetY)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: scaleX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scaleX</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: scaleY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scaleY</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetX</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetY</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneAndScaleThenOffset(rect As Rect, scaleX As Single, scaleY As Single, offsetX As Single, offsetY As Single) As Rect
  overload: Global.RXRectExtensions.CloneAndScaleThenOffset*
  nameWithType.vb: RXRectExtensions.CloneAndScaleThenOffset(Rect, Single, Single, Single, Single)
  fullName.vb: RXRectExtensions.CloneAndScaleThenOffset(UnityEngine.Rect, Single, Single, Single, Single)
  name.vb: CloneAndScaleThenOffset(Rect, Single, Single, Single, Single)
- uid: Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)
  commentId: M:Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)
  id: GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: GetClosestInteriorPointAlongDeltaVector(Rect, Vector2)
  nameWithType: RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(Rect, Vector2)
  fullName: RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 GetClosestInteriorPointAlongDeltaVector(this Rect rect, Vector2 targetPoint)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: targetPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetPoint</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPointAlongDeltaVector(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetClosestInteriorPointAlongDeltaVector(rect As Rect, targetPoint As Vector2) As Vector2
  overload: Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector*
- uid: Global.RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)
  commentId: M:Global.RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)
  id: GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: GetClosestInteriorPoint(Rect, Vector2)
  nameWithType: RXRectExtensions.GetClosestInteriorPoint(Rect, Vector2)
  fullName: RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 GetClosestInteriorPoint(this Rect rect, Vector2 targetPoint)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: targetPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetPoint</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.GetClosestInteriorPoint(UnityEngine.Rect,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetClosestInteriorPoint(rect As Rect, targetPoint As Vector2) As Vector2
  overload: Global.RXRectExtensions.GetClosestInteriorPoint*
- uid: Global.RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)
  commentId: M:Global.RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)
  id: CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)
  isExtensionMethod: true
  parent: Global.RXRectExtensions
  langs:
  - csharp
  - vb
  name: CheckIntersectWithCircle(Rect, RXCircle)
  nameWithType: RXRectExtensions.CheckIntersectWithCircle(Rect, RXCircle)
  fullName: RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect, RXCircle)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CheckIntersectWithCircle(this Rect rect, RXCircle circle)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)</parameter>
          </include>
        </markup>
    - id: circle
      type: Global.RXCircle
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>circle</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXRectExtensions.CheckIntersectWithCircle(UnityEngine.Rect,RXCircle)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CheckIntersectWithCircle(rect As Rect, circle As RXCircle) As Boolean
  overload: Global.RXRectExtensions.CheckIntersectWithCircle*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXRectExtensions.CloneWithExpansion*
  commentId: Overload:Global.RXRectExtensions.CloneWithExpansion
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CloneWithExpansion_UnityEngine_Rect_System_Single_
  name: CloneWithExpansion
  nameWithType: RXRectExtensions.CloneWithExpansion
  fullName: RXRectExtensions.CloneWithExpansion
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RXRectExtensions.CheckIntersect*
  commentId: Overload:Global.RXRectExtensions.CheckIntersect
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CheckIntersect_UnityEngine_Rect_UnityEngine_Rect_
  name: CheckIntersect
  nameWithType: RXRectExtensions.CheckIntersect
  fullName: RXRectExtensions.CheckIntersect
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RXRectExtensions.CheckIntersectComplex*
  commentId: Overload:Global.RXRectExtensions.CheckIntersectComplex
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CheckIntersectComplex_UnityEngine_Rect_UnityEngine_Rect_
  name: CheckIntersectComplex
  nameWithType: RXRectExtensions.CheckIntersectComplex
  fullName: RXRectExtensions.CheckIntersectComplex
- uid: Global.RXRectExtensions.CloneAndMultiply*
  commentId: Overload:Global.RXRectExtensions.CloneAndMultiply
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CloneAndMultiply_UnityEngine_Rect_System_Single_
  name: CloneAndMultiply
  nameWithType: RXRectExtensions.CloneAndMultiply
  fullName: RXRectExtensions.CloneAndMultiply
- uid: Global.RXRectExtensions.CloneAndOffset*
  commentId: Overload:Global.RXRectExtensions.CloneAndOffset
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CloneAndOffset_UnityEngine_Rect_System_Single_System_Single_
  name: CloneAndOffset
  nameWithType: RXRectExtensions.CloneAndOffset
  fullName: RXRectExtensions.CloneAndOffset
- uid: Global.RXRectExtensions.CloneAndScaleThenOffset*
  commentId: Overload:Global.RXRectExtensions.CloneAndScaleThenOffset
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CloneAndScaleThenOffset_UnityEngine_Rect_System_Single_System_Single_System_Single_System_Single_
  name: CloneAndScaleThenOffset
  nameWithType: RXRectExtensions.CloneAndScaleThenOffset
  fullName: RXRectExtensions.CloneAndScaleThenOffset
- uid: Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector*
  commentId: Overload:Global.RXRectExtensions.GetClosestInteriorPointAlongDeltaVector
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_GetClosestInteriorPointAlongDeltaVector_UnityEngine_Rect_UnityEngine_Vector2_
  name: GetClosestInteriorPointAlongDeltaVector
  nameWithType: RXRectExtensions.GetClosestInteriorPointAlongDeltaVector
  fullName: RXRectExtensions.GetClosestInteriorPointAlongDeltaVector
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.RXRectExtensions.GetClosestInteriorPoint*
  commentId: Overload:Global.RXRectExtensions.GetClosestInteriorPoint
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_GetClosestInteriorPoint_UnityEngine_Rect_UnityEngine_Vector2_
  name: GetClosestInteriorPoint
  nameWithType: RXRectExtensions.GetClosestInteriorPoint
  fullName: RXRectExtensions.GetClosestInteriorPoint
- uid: Global.RXRectExtensions.CheckIntersectWithCircle*
  commentId: Overload:Global.RXRectExtensions.CheckIntersectWithCircle
  isExternal: true
  href: Global.RXRectExtensions.html#RXRectExtensions_CheckIntersectWithCircle_UnityEngine_Rect_RXCircle_
  name: CheckIntersectWithCircle
  nameWithType: RXRectExtensions.CheckIntersectWithCircle
  fullName: RXRectExtensions.CheckIntersectWithCircle
- uid: Global.RXCircle
  commentId: T:Global.RXCircle
  isExternal: true
  href: RXCircle.html
  name: RXCircle
  nameWithType: RXCircle
  fullName: RXCircle
