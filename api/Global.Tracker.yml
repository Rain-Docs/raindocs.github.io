### YamlMime:ManagedReference
items:
- uid: Global.Tracker
  commentId: T:Global.Tracker
  id: Tracker
  parent: Global
  children:
  - Global.Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)
  - Global.Tracker.AddTrackedCreature(AbstractCreature)
  - Global.Tracker.CreaturesCount
  - Global.Tracker.ForgetCreature(AbstractCreature)
  - Global.Tracker.GetRep(System.Int32)
  - Global.Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)
  - Global.Tracker.RepresentationForObject(PhysicalObject,System.Boolean)
  - Global.Tracker.SeeCreature(AbstractCreature)
  - Global.Tracker.Update
  - Global.Tracker.framesToRememberCreatures
  - Global.Tracker.ghostDismissalRange
  - Global.Tracker.ghostPush
  - Global.Tracker.ghostPushSpeed
  - Global.Tracker.maxTrackedCreatures
  - Global.Tracker.noiseTracker
  - Global.Tracker.useTrackedCreatures
  - Global.Tracker.visualize
  - Global.Tracker.viz
  langs:
  - csharp
  - vb
  name: Tracker
  nameWithType: Tracker
  fullName: Tracker
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Tracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Tracker : AIModule'
    content.vb: Public Class Tracker Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.NewRoom(Room)
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Tracker.maxTrackedCreatures
  commentId: F:Global.Tracker.maxTrackedCreatures
  id: maxTrackedCreatures
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: maxTrackedCreatures
  nameWithType: Tracker.maxTrackedCreatures
  fullName: Tracker.maxTrackedCreatures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.maxTrackedCreatures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxTrackedCreatures
    return:
      type: System.Int32
    content.vb: Public maxTrackedCreatures As Integer
- uid: Global.Tracker.ghostPush
  commentId: F:Global.Tracker.ghostPush
  id: ghostPush
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: ghostPush
  nameWithType: Tracker.ghostPush
  fullName: Tracker.ghostPush
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.ghostPush</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int ghostPush
    return:
      type: System.Int32
    content.vb: Protected ghostPush As Integer
- uid: Global.Tracker.ghostPushSpeed
  commentId: F:Global.Tracker.ghostPushSpeed
  id: ghostPushSpeed
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: ghostPushSpeed
  nameWithType: Tracker.ghostPushSpeed
  fullName: Tracker.ghostPushSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.ghostPushSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int ghostPushSpeed
    return:
      type: System.Int32
    content.vb: Protected ghostPushSpeed As Integer
- uid: Global.Tracker.ghostDismissalRange
  commentId: F:Global.Tracker.ghostDismissalRange
  id: ghostDismissalRange
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: ghostDismissalRange
  nameWithType: Tracker.ghostDismissalRange
  fullName: Tracker.ghostDismissalRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.ghostDismissalRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int ghostDismissalRange
    return:
      type: System.Int32
    content.vb: Protected ghostDismissalRange As Integer
- uid: Global.Tracker.useTrackedCreatures
  commentId: F:Global.Tracker.useTrackedCreatures
  id: useTrackedCreatures
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: useTrackedCreatures
  nameWithType: Tracker.useTrackedCreatures
  fullName: Tracker.useTrackedCreatures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.useTrackedCreatures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool useTrackedCreatures
    return:
      type: System.Boolean
    content.vb: Public useTrackedCreatures As Boolean
- uid: Global.Tracker.visualize
  commentId: F:Global.Tracker.visualize
  id: visualize
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: visualize
  nameWithType: Tracker.visualize
  fullName: Tracker.visualize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.visualize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool visualize
    return:
      type: System.Boolean
    content.vb: Public visualize As Boolean
- uid: Global.Tracker.viz
  commentId: F:Global.Tracker.viz
  id: viz
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: viz
  nameWithType: Tracker.viz
  fullName: Tracker.viz
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.viz</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected DebugTrackerVisualizer viz
    return:
      type: Global.DebugTrackerVisualizer
    content.vb: Protected viz As DebugTrackerVisualizer
- uid: Global.Tracker.framesToRememberCreatures
  commentId: F:Global.Tracker.framesToRememberCreatures
  id: framesToRememberCreatures
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: framesToRememberCreatures
  nameWithType: Tracker.framesToRememberCreatures
  fullName: Tracker.framesToRememberCreatures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.framesToRememberCreatures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int framesToRememberCreatures
    return:
      type: System.Int32
    content.vb: Public framesToRememberCreatures As Integer
- uid: Global.Tracker.noiseTracker
  commentId: F:Global.Tracker.noiseTracker
  id: noiseTracker
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: noiseTracker
  nameWithType: Tracker.noiseTracker
  fullName: Tracker.noiseTracker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.noiseTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public NoiseTracker noiseTracker
    return:
      type: Global.NoiseTracker
    content.vb: Public noiseTracker As NoiseTracker
- uid: Global.Tracker.GetRep(System.Int32)
  commentId: M:Global.Tracker.GetRep(System.Int32)
  id: GetRep(System.Int32)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: GetRep(int)
  nameWithType: Tracker.GetRep(int)
  fullName: Tracker.GetRep(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.GetRep(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation GetRep(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Tracker.GetRep(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.GetRep(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetRep(index As Integer) As Tracker.CreatureRepresentation
  overload: Global.Tracker.GetRep*
  nameWithType.vb: Tracker.GetRep(Integer)
  fullName.vb: Tracker.GetRep(Integer)
  name.vb: GetRep(Integer)
- uid: Global.Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: '#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)'
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: Tracker(ArtificialIntelligence, int, int, int, float, int, int, int, bool)
  nameWithType: Tracker.Tracker(ArtificialIntelligence, int, int, int, float, int, int, int, bool)
  fullName: Tracker.Tracker(ArtificialIntelligence, int, int, int, float, int, int, int, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Tracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker(ArtificialIntelligence AI, int seeAroundCorners, int maxTrackedCreatures, int framesToRememberCreatures, float ghostSpeed, int ghostPush, int ghostPushSpeed, int ghostDismissalRange, bool useTrackedCreatures = false)
    parameters:
    - id: AI
      type: Global.ArtificialIntelligence
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: seeAroundCorners
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seeAroundCorners</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: maxTrackedCreatures
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxTrackedCreatures</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: framesToRememberCreatures
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>framesToRememberCreatures</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ghostSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostSpeed</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ghostPush
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostPush</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ghostPushSpeed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostPushSpeed</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ghostDismissalRange
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostDismissalRange</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: useTrackedCreatures
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useTrackedCreatures</parameter>
            <parameter>M:Tracker.#ctor(ArtificialIntelligence,System.Int32,System.Int32,System.Int32,System.Single,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As ArtificialIntelligence, seeAroundCorners As Integer, maxTrackedCreatures As Integer, framesToRememberCreatures As Integer, ghostSpeed As Single, ghostPush As Integer, ghostPushSpeed As Integer, ghostDismissalRange As Integer, useTrackedCreatures As Boolean = False)
  overload: Global.Tracker.#ctor*
  nameWithType.vb: Tracker.New(ArtificialIntelligence, Integer, Integer, Integer, Single, Integer, Integer, Integer, Boolean)
  fullName.vb: Tracker.New(ArtificialIntelligence, Integer, Integer, Integer, Single, Integer, Integer, Integer, Boolean)
  name.vb: New(ArtificialIntelligence, Integer, Integer, Integer, Single, Integer, Integer, Integer, Boolean)
- uid: Global.Tracker.Update
  commentId: M:Global.Tracker.Update
  id: Update
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Tracker.Update()
  fullName: Tracker.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.AIModule.Update
  overload: Global.Tracker.Update*
- uid: Global.Tracker.RepresentationForObject(PhysicalObject,System.Boolean)
  commentId: M:Global.Tracker.RepresentationForObject(PhysicalObject,System.Boolean)
  id: RepresentationForObject(PhysicalObject,System.Boolean)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: RepresentationForObject(PhysicalObject, bool)
  nameWithType: Tracker.RepresentationForObject(PhysicalObject, bool)
  fullName: Tracker.RepresentationForObject(PhysicalObject, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.RepresentationForObject(PhysicalObject,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation RepresentationForObject(PhysicalObject obj, bool AddIfMissing)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Tracker.RepresentationForObject(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: AddIfMissing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AddIfMissing</parameter>
            <parameter>M:Tracker.RepresentationForObject(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.RepresentationForObject(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function RepresentationForObject(obj As PhysicalObject, AddIfMissing As Boolean) As Tracker.CreatureRepresentation
  overload: Global.Tracker.RepresentationForObject*
  nameWithType.vb: Tracker.RepresentationForObject(PhysicalObject, Boolean)
  fullName.vb: Tracker.RepresentationForObject(PhysicalObject, Boolean)
  name.vb: RepresentationForObject(PhysicalObject, Boolean)
- uid: Global.Tracker.AddTrackedCreature(AbstractCreature)
  commentId: M:Global.Tracker.AddTrackedCreature(AbstractCreature)
  id: AddTrackedCreature(AbstractCreature)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: AddTrackedCreature(AbstractCreature)
  nameWithType: Tracker.AddTrackedCreature(AbstractCreature)
  fullName: Tracker.AddTrackedCreature(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.AddTrackedCreature(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddTrackedCreature(AbstractCreature aCreature)
    parameters:
    - id: aCreature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aCreature</parameter>
            <parameter>M:Tracker.AddTrackedCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddTrackedCreature(aCreature As AbstractCreature)
  overload: Global.Tracker.AddTrackedCreature*
- uid: Global.Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)
  commentId: M:Global.Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)
  id: RepresentationForCreature(AbstractCreature,System.Boolean)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: RepresentationForCreature(AbstractCreature, bool)
  nameWithType: Tracker.RepresentationForCreature(AbstractCreature, bool)
  fullName: Tracker.RepresentationForCreature(AbstractCreature, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation RepresentationForCreature(AbstractCreature checkCrit, bool addIfMissing)
    parameters:
    - id: checkCrit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkCrit</parameter>
            <parameter>M:Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)</parameter>
          </include>
        </markup>
    - id: addIfMissing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addIfMissing</parameter>
            <parameter>M:Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.RepresentationForCreature(AbstractCreature,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function RepresentationForCreature(checkCrit As AbstractCreature, addIfMissing As Boolean) As Tracker.CreatureRepresentation
  overload: Global.Tracker.RepresentationForCreature*
  nameWithType.vb: Tracker.RepresentationForCreature(AbstractCreature, Boolean)
  fullName.vb: Tracker.RepresentationForCreature(AbstractCreature, Boolean)
  name.vb: RepresentationForCreature(AbstractCreature, Boolean)
- uid: Global.Tracker.SeeCreature(AbstractCreature)
  commentId: M:Global.Tracker.SeeCreature(AbstractCreature)
  id: SeeCreature(AbstractCreature)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: SeeCreature(AbstractCreature)
  nameWithType: Tracker.SeeCreature(AbstractCreature)
  fullName: Tracker.SeeCreature(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.SeeCreature(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SeeCreature(AbstractCreature crit)
    parameters:
    - id: crit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Tracker.SeeCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SeeCreature(crit As AbstractCreature)
  overload: Global.Tracker.SeeCreature*
- uid: Global.Tracker.ForgetCreature(AbstractCreature)
  commentId: M:Global.Tracker.ForgetCreature(AbstractCreature)
  id: ForgetCreature(AbstractCreature)
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: ForgetCreature(AbstractCreature)
  nameWithType: Tracker.ForgetCreature(AbstractCreature)
  fullName: Tracker.ForgetCreature(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.ForgetCreature(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ForgetCreature(AbstractCreature crit)
    parameters:
    - id: crit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Tracker.ForgetCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ForgetCreature(crit As AbstractCreature)
  overload: Global.Tracker.ForgetCreature*
- uid: Global.Tracker.CreaturesCount
  commentId: P:Global.Tracker.CreaturesCount
  id: CreaturesCount
  parent: Global.Tracker
  langs:
  - csharp
  - vb
  name: CreaturesCount
  nameWithType: Tracker.CreaturesCount
  fullName: Tracker.CreaturesCount
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Tracker.CreaturesCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CreaturesCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CreaturesCount As Integer
  overload: Global.Tracker.CreaturesCount*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.DebugTrackerVisualizer
  commentId: T:Global.DebugTrackerVisualizer
  isExternal: true
  href: DebugTrackerVisualizer.html
  name: DebugTrackerVisualizer
  nameWithType: DebugTrackerVisualizer
  fullName: DebugTrackerVisualizer
- uid: Global.NoiseTracker
  commentId: T:Global.NoiseTracker
  isExternal: true
  href: NoiseTracker.html
  name: NoiseTracker
  nameWithType: NoiseTracker
  fullName: NoiseTracker
- uid: Global.Tracker.GetRep*
  commentId: Overload:Global.Tracker.GetRep
  isExternal: true
  href: Global.Tracker.html#Tracker_GetRep_System_Int32_
  name: GetRep
  nameWithType: Tracker.GetRep
  fullName: Tracker.GetRep
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Global.Tracker.#ctor*
  commentId: Overload:Global.Tracker.#ctor
  isExternal: true
  href: Global.Tracker.html#Tracker__ctor_ArtificialIntelligence_System_Int32_System_Int32_System_Int32_System_Single_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: Tracker
  nameWithType: Tracker.Tracker
  fullName: Tracker.Tracker
  nameWithType.vb: Tracker.New
  fullName.vb: Tracker.New
  name.vb: New
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.Tracker.Update*
  commentId: Overload:Global.Tracker.Update
  isExternal: true
  href: Global.Tracker.html#Tracker_Update
  name: Update
  nameWithType: Tracker.Update
  fullName: Tracker.Update
- uid: Global.Tracker.RepresentationForObject*
  commentId: Overload:Global.Tracker.RepresentationForObject
  isExternal: true
  href: Global.Tracker.html#Tracker_RepresentationForObject_PhysicalObject_System_Boolean_
  name: RepresentationForObject
  nameWithType: Tracker.RepresentationForObject
  fullName: Tracker.RepresentationForObject
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Tracker.AddTrackedCreature*
  commentId: Overload:Global.Tracker.AddTrackedCreature
  isExternal: true
  href: Global.Tracker.html#Tracker_AddTrackedCreature_AbstractCreature_
  name: AddTrackedCreature
  nameWithType: Tracker.AddTrackedCreature
  fullName: Tracker.AddTrackedCreature
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.Tracker.RepresentationForCreature*
  commentId: Overload:Global.Tracker.RepresentationForCreature
  isExternal: true
  href: Global.Tracker.html#Tracker_RepresentationForCreature_AbstractCreature_System_Boolean_
  name: RepresentationForCreature
  nameWithType: Tracker.RepresentationForCreature
  fullName: Tracker.RepresentationForCreature
- uid: Global.Tracker.SeeCreature*
  commentId: Overload:Global.Tracker.SeeCreature
  isExternal: true
  href: Global.Tracker.html#Tracker_SeeCreature_AbstractCreature_
  name: SeeCreature
  nameWithType: Tracker.SeeCreature
  fullName: Tracker.SeeCreature
- uid: Global.Tracker.ForgetCreature*
  commentId: Overload:Global.Tracker.ForgetCreature
  isExternal: true
  href: Global.Tracker.html#Tracker_ForgetCreature_AbstractCreature_
  name: ForgetCreature
  nameWithType: Tracker.ForgetCreature
  fullName: Tracker.ForgetCreature
- uid: Global.Tracker.CreaturesCount*
  commentId: Overload:Global.Tracker.CreaturesCount
  isExternal: true
  href: Global.Tracker.html#Tracker_CreaturesCount
  name: CreaturesCount
  nameWithType: Tracker.CreaturesCount
  fullName: Tracker.CreaturesCount
