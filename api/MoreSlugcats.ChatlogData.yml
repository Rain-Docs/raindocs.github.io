### YamlMime:ManagedReference
items:
- uid: MoreSlugcats.ChatlogData
  commentId: T:MoreSlugcats.ChatlogData
  id: ChatlogData
  parent: MoreSlugcats
  children:
  - MoreSlugcats.ChatlogData.#ctor
  - MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)
  - MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)
  - MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)
  - MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)
  - MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)
  - MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)
  - MoreSlugcats.ChatlogData.getChatlog(System.Int32)
  - MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)
  - MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)
  - MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)
  - MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)
  - MoreSlugcats.ChatlogData.markAllBroadcastsRead
  - MoreSlugcats.ChatlogData.rainWorld
  - MoreSlugcats.ChatlogData.resetBroadcasts
  - MoreSlugcats.ChatlogData.setHostPlayer(Player)
  - MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)
  langs:
  - csharp
  - vb
  name: ChatlogData
  nameWithType: ChatlogData
  fullName: MoreSlugcats.ChatlogData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MoreSlugcats.ChatlogData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ChatlogData
    content.vb: Public Class ChatlogData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MoreSlugcats.ChatlogData.rainWorld
  commentId: F:MoreSlugcats.ChatlogData.rainWorld
  id: rainWorld
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: rainWorld
  nameWithType: ChatlogData.rainWorld
  fullName: MoreSlugcats.ChatlogData.rainWorld
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.ChatlogData.rainWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static RainWorld rainWorld
    return:
      type: Global.RainWorld
    content.vb: Public Shared rainWorld As RainWorld
- uid: MoreSlugcats.ChatlogData.#ctor
  commentId: M:MoreSlugcats.ChatlogData.#ctor
  id: '#ctor'
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: ChatlogData()
  nameWithType: ChatlogData.ChatlogData()
  fullName: MoreSlugcats.ChatlogData.ChatlogData()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MoreSlugcats.ChatlogData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChatlogData()
    content.vb: Public Sub New()
  overload: MoreSlugcats.ChatlogData.#ctor*
  nameWithType.vb: ChatlogData.New()
  fullName.vb: MoreSlugcats.ChatlogData.New()
  name.vb: New()
- uid: MoreSlugcats.ChatlogData.setHostPlayer(Player)
  commentId: M:MoreSlugcats.ChatlogData.setHostPlayer(Player)
  id: setHostPlayer(Player)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: setHostPlayer(Player)
  nameWithType: ChatlogData.setHostPlayer(Player)
  fullName: MoreSlugcats.ChatlogData.setHostPlayer(Player)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.setHostPlayer(Player)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void setHostPlayer(Player Inputplayer)
    parameters:
    - id: Inputplayer
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Inputplayer</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.setHostPlayer(Player)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub setHostPlayer(Inputplayer As Player)
  overload: MoreSlugcats.ChatlogData.setHostPlayer*
- uid: MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)
  commentId: M:MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)
  id: setRainworldReference(RainWorld)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: setRainworldReference(RainWorld)
  nameWithType: ChatlogData.setRainworldReference(RainWorld)
  fullName: MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void setRainworldReference(RainWorld rw)
    parameters:
    - id: rw
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rw</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.setRainworldReference(RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub setRainworldReference(rw As RainWorld)
  overload: MoreSlugcats.ChatlogData.setRainworldReference*
- uid: MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)
  commentId: M:MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)
  id: getLinearBroadcast(System.Int32,System.Boolean)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: getLinearBroadcast(int, bool)
  nameWithType: ChatlogData.getLinearBroadcast(int, bool)
  fullName: MoreSlugcats.ChatlogData.getLinearBroadcast(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] getLinearBroadcast(int id, bool postPebbles)
    parameters:
    - id: id
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: postPebbles
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>postPebbles</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getLinearBroadcast(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getLinearBroadcast(id As Integer, postPebbles As Boolean) As String()
  overload: MoreSlugcats.ChatlogData.getLinearBroadcast*
  nameWithType.vb: ChatlogData.getLinearBroadcast(Integer, Boolean)
  fullName.vb: MoreSlugcats.ChatlogData.getLinearBroadcast(Integer, Boolean)
  name.vb: getLinearBroadcast(Integer, Boolean)
- uid: MoreSlugcats.ChatlogData.getChatlog(System.Int32)
  commentId: M:MoreSlugcats.ChatlogData.getChatlog(System.Int32)
  id: getChatlog(System.Int32)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: getChatlog(int)
  nameWithType: ChatlogData.getChatlog(int)
  fullName: MoreSlugcats.ChatlogData.getChatlog(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.getChatlog(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] getChatlog(int id)
    parameters:
    - id: id
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlog(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlog(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getChatlog(id As Integer) As String()
  overload: MoreSlugcats.ChatlogData.getChatlog*
  nameWithType.vb: ChatlogData.getChatlog(Integer)
  fullName.vb: MoreSlugcats.ChatlogData.getChatlog(Integer)
  name.vb: getChatlog(Integer)
- uid: MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)
  commentId: M:MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)
  id: getChatlogExists(System.Int32)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: getChatlogExists(int)
  nameWithType: ChatlogData.getChatlogExists(int)
  fullName: MoreSlugcats.ChatlogData.getChatlogExists(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool getChatlogExists(int id)
    parameters:
    - id: id
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlogExists(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getChatlogExists(id As Integer) As Boolean
  overload: MoreSlugcats.ChatlogData.getChatlogExists*
  nameWithType.vb: ChatlogData.getChatlogExists(Integer)
  fullName.vb: MoreSlugcats.ChatlogData.getChatlogExists(Integer)
  name.vb: getChatlogExists(Integer)
- uid: MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)
  commentId: M:MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)
  id: DecryptResult(System.String,System.String)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: DecryptResult(string, string)
  nameWithType: ChatlogData.DecryptResult(string, string)
  fullName: MoreSlugcats.ChatlogData.DecryptResult(string, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string DecryptResult(string result, string path)
    parameters:
    - id: result
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DecryptResult(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function DecryptResult(result As String, path As String) As String
  overload: MoreSlugcats.ChatlogData.DecryptResult*
  nameWithType.vb: ChatlogData.DecryptResult(String, String)
  fullName.vb: MoreSlugcats.ChatlogData.DecryptResult(String, String)
  name.vb: DecryptResult(String, String)
- uid: MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)
  commentId: M:MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)
  id: linearChatlogPath(System.Int32,System.Boolean)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: linearChatlogPath(int, bool)
  nameWithType: ChatlogData.linearChatlogPath(int, bool)
  fullName: MoreSlugcats.ChatlogData.linearChatlogPath(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string linearChatlogPath(int id, bool postPebbles)
    parameters:
    - id: id
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: postPebbles
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>postPebbles</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.linearChatlogPath(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function linearChatlogPath(id As Integer, postPebbles As Boolean) As String
  overload: MoreSlugcats.ChatlogData.linearChatlogPath*
  nameWithType.vb: ChatlogData.linearChatlogPath(Integer, Boolean)
  fullName.vb: MoreSlugcats.ChatlogData.linearChatlogPath(Integer, Boolean)
  name.vb: linearChatlogPath(Integer, Boolean)
- uid: MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)
  commentId: M:MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)
  id: DevCommPath(System.String,SlugcatStats.Name)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: DevCommPath(string, Name)
  nameWithType: ChatlogData.DevCommPath(string, SlugcatStats.Name)
  fullName: MoreSlugcats.ChatlogData.DevCommPath(string, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string DevCommPath(string roomName, SlugcatStats.Name slugcatIndex)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: slugcatIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatIndex</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.DevCommPath(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function DevCommPath(roomName As String, slugcatIndex As SlugcatStats.Name) As String
  overload: MoreSlugcats.ChatlogData.DevCommPath*
  nameWithType.vb: ChatlogData.DevCommPath(String, SlugcatStats.Name)
  fullName.vb: MoreSlugcats.ChatlogData.DevCommPath(String, SlugcatStats.Name)
  name.vb: DevCommPath(String, Name)
- uid: MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)
  commentId: M:MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)
  id: HasDevComm(System.String,SlugcatStats.Name)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: HasDevComm(string, Name)
  nameWithType: ChatlogData.HasDevComm(string, SlugcatStats.Name)
  fullName: MoreSlugcats.ChatlogData.HasDevComm(string, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool HasDevComm(string roomName, SlugcatStats.Name slugcatIndex)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: slugcatIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatIndex</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.HasDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HasDevComm(roomName As String, slugcatIndex As SlugcatStats.Name) As Boolean
  overload: MoreSlugcats.ChatlogData.HasDevComm*
  nameWithType.vb: ChatlogData.HasDevComm(String, SlugcatStats.Name)
  fullName.vb: MoreSlugcats.ChatlogData.HasDevComm(String, SlugcatStats.Name)
  name.vb: HasDevComm(String, Name)
- uid: MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)
  commentId: M:MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)
  id: UniquePath(MoreSlugcats.ChatlogData.ChatlogID)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: UniquePath(ChatlogID)
  nameWithType: ChatlogData.UniquePath(ChatlogData.ChatlogID)
  fullName: MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string UniquePath(ChatlogData.ChatlogID id)
    parameters:
    - id: id
      type: MoreSlugcats.ChatlogData.ChatlogID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.UniquePath(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function UniquePath(id As ChatlogData.ChatlogID) As String
  overload: MoreSlugcats.ChatlogData.UniquePath*
- uid: MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)
  commentId: M:MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)
  id: HasUnique(MoreSlugcats.ChatlogData.ChatlogID)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: HasUnique(ChatlogID)
  nameWithType: ChatlogData.HasUnique(ChatlogData.ChatlogID)
  fullName: MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool HasUnique(ChatlogData.ChatlogID id)
    parameters:
    - id: id
      type: MoreSlugcats.ChatlogData.ChatlogID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.HasUnique(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HasUnique(id As ChatlogData.ChatlogID) As Boolean
  overload: MoreSlugcats.ChatlogData.HasUnique*
- uid: MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)
  commentId: M:MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)
  id: getChatlog(MoreSlugcats.ChatlogData.ChatlogID)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: getChatlog(ChatlogID)
  nameWithType: ChatlogData.getChatlog(ChatlogData.ChatlogID)
  fullName: MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] getChatlog(ChatlogData.ChatlogID id)
    parameters:
    - id: id
      type: MoreSlugcats.ChatlogData.ChatlogID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getChatlog(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getChatlog(id As ChatlogData.ChatlogID) As String()
  overload: MoreSlugcats.ChatlogData.getChatlog*
- uid: MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)
  commentId: M:MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)
  id: getDevComm(System.String,SlugcatStats.Name)
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: getDevComm(string, Name)
  nameWithType: ChatlogData.getDevComm(string, SlugcatStats.Name)
  fullName: MoreSlugcats.ChatlogData.getDevComm(string, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] getDevComm(string roomName, SlugcatStats.Name slugcatIndex)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: slugcatIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatIndex</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.ChatlogData.getDevComm(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getDevComm(roomName As String, slugcatIndex As SlugcatStats.Name) As String()
  overload: MoreSlugcats.ChatlogData.getDevComm*
  nameWithType.vb: ChatlogData.getDevComm(String, SlugcatStats.Name)
  fullName.vb: MoreSlugcats.ChatlogData.getDevComm(String, SlugcatStats.Name)
  name.vb: getDevComm(String, Name)
- uid: MoreSlugcats.ChatlogData.resetBroadcasts
  commentId: M:MoreSlugcats.ChatlogData.resetBroadcasts
  id: resetBroadcasts
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: resetBroadcasts()
  nameWithType: ChatlogData.resetBroadcasts()
  fullName: MoreSlugcats.ChatlogData.resetBroadcasts()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.resetBroadcasts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void resetBroadcasts()
    content.vb: Public Shared Sub resetBroadcasts()
  overload: MoreSlugcats.ChatlogData.resetBroadcasts*
- uid: MoreSlugcats.ChatlogData.markAllBroadcastsRead
  commentId: M:MoreSlugcats.ChatlogData.markAllBroadcastsRead
  id: markAllBroadcastsRead
  parent: MoreSlugcats.ChatlogData
  langs:
  - csharp
  - vb
  name: markAllBroadcastsRead()
  nameWithType: ChatlogData.markAllBroadcastsRead()
  fullName: MoreSlugcats.ChatlogData.markAllBroadcastsRead()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.ChatlogData.markAllBroadcastsRead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void markAllBroadcastsRead()
    content.vb: Public Shared Sub markAllBroadcastsRead()
  overload: MoreSlugcats.ChatlogData.markAllBroadcastsRead*
references:
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RainWorld
  commentId: T:Global.RainWorld
  isExternal: true
  href: RainWorld.html
  name: RainWorld
  nameWithType: RainWorld
  fullName: RainWorld
- uid: MoreSlugcats.ChatlogData.#ctor*
  commentId: Overload:MoreSlugcats.ChatlogData.#ctor
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData__ctor
  name: ChatlogData
  nameWithType: ChatlogData.ChatlogData
  fullName: MoreSlugcats.ChatlogData.ChatlogData
  nameWithType.vb: ChatlogData.New
  fullName.vb: MoreSlugcats.ChatlogData.New
  name.vb: New
- uid: MoreSlugcats.ChatlogData.setHostPlayer*
  commentId: Overload:MoreSlugcats.ChatlogData.setHostPlayer
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_setHostPlayer_Player_
  name: setHostPlayer
  nameWithType: ChatlogData.setHostPlayer
  fullName: MoreSlugcats.ChatlogData.setHostPlayer
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: MoreSlugcats.ChatlogData.setRainworldReference*
  commentId: Overload:MoreSlugcats.ChatlogData.setRainworldReference
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_setRainworldReference_RainWorld_
  name: setRainworldReference
  nameWithType: ChatlogData.setRainworldReference
  fullName: MoreSlugcats.ChatlogData.setRainworldReference
- uid: MoreSlugcats.ChatlogData.getLinearBroadcast*
  commentId: Overload:MoreSlugcats.ChatlogData.getLinearBroadcast
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_getLinearBroadcast_System_Int32_System_Boolean_
  name: getLinearBroadcast
  nameWithType: ChatlogData.getLinearBroadcast
  fullName: MoreSlugcats.ChatlogData.getLinearBroadcast
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: MoreSlugcats.ChatlogData.getChatlog*
  commentId: Overload:MoreSlugcats.ChatlogData.getChatlog
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_getChatlog_System_Int32_
  name: getChatlog
  nameWithType: ChatlogData.getChatlog
  fullName: MoreSlugcats.ChatlogData.getChatlog
- uid: MoreSlugcats.ChatlogData.getChatlogExists*
  commentId: Overload:MoreSlugcats.ChatlogData.getChatlogExists
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_getChatlogExists_System_Int32_
  name: getChatlogExists
  nameWithType: ChatlogData.getChatlogExists
  fullName: MoreSlugcats.ChatlogData.getChatlogExists
- uid: MoreSlugcats.ChatlogData.DecryptResult*
  commentId: Overload:MoreSlugcats.ChatlogData.DecryptResult
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_DecryptResult_System_String_System_String_
  name: DecryptResult
  nameWithType: ChatlogData.DecryptResult
  fullName: MoreSlugcats.ChatlogData.DecryptResult
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: MoreSlugcats.ChatlogData.linearChatlogPath*
  commentId: Overload:MoreSlugcats.ChatlogData.linearChatlogPath
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_linearChatlogPath_System_Int32_System_Boolean_
  name: linearChatlogPath
  nameWithType: ChatlogData.linearChatlogPath
  fullName: MoreSlugcats.ChatlogData.linearChatlogPath
- uid: MoreSlugcats.ChatlogData.DevCommPath*
  commentId: Overload:MoreSlugcats.ChatlogData.DevCommPath
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_DevCommPath_System_String_SlugcatStats_Name_
  name: DevCommPath
  nameWithType: ChatlogData.DevCommPath
  fullName: MoreSlugcats.ChatlogData.DevCommPath
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: MoreSlugcats.ChatlogData.HasDevComm*
  commentId: Overload:MoreSlugcats.ChatlogData.HasDevComm
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_HasDevComm_System_String_SlugcatStats_Name_
  name: HasDevComm
  nameWithType: ChatlogData.HasDevComm
  fullName: MoreSlugcats.ChatlogData.HasDevComm
- uid: MoreSlugcats.ChatlogData.UniquePath*
  commentId: Overload:MoreSlugcats.ChatlogData.UniquePath
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_UniquePath_MoreSlugcats_ChatlogData_ChatlogID_
  name: UniquePath
  nameWithType: ChatlogData.UniquePath
  fullName: MoreSlugcats.ChatlogData.UniquePath
- uid: MoreSlugcats.ChatlogData.ChatlogID
  commentId: T:MoreSlugcats.ChatlogData.ChatlogID
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.ChatlogData.html
  name: ChatlogData.ChatlogID
  nameWithType: ChatlogData.ChatlogID
  fullName: MoreSlugcats.ChatlogData.ChatlogID
  spec.csharp:
  - uid: MoreSlugcats.ChatlogData
    name: ChatlogData
    isExternal: true
    href: MoreSlugcats.ChatlogData.html
  - name: .
  - uid: MoreSlugcats.ChatlogData.ChatlogID
    name: ChatlogID
    isExternal: true
    href: MoreSlugcats.ChatlogData.ChatlogID.html
  spec.vb:
  - uid: MoreSlugcats.ChatlogData
    name: ChatlogData
    isExternal: true
    href: MoreSlugcats.ChatlogData.html
  - name: .
  - uid: MoreSlugcats.ChatlogData.ChatlogID
    name: ChatlogID
    isExternal: true
    href: MoreSlugcats.ChatlogData.ChatlogID.html
- uid: MoreSlugcats.ChatlogData.HasUnique*
  commentId: Overload:MoreSlugcats.ChatlogData.HasUnique
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_HasUnique_MoreSlugcats_ChatlogData_ChatlogID_
  name: HasUnique
  nameWithType: ChatlogData.HasUnique
  fullName: MoreSlugcats.ChatlogData.HasUnique
- uid: MoreSlugcats.ChatlogData.getDevComm*
  commentId: Overload:MoreSlugcats.ChatlogData.getDevComm
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_getDevComm_System_String_SlugcatStats_Name_
  name: getDevComm
  nameWithType: ChatlogData.getDevComm
  fullName: MoreSlugcats.ChatlogData.getDevComm
- uid: MoreSlugcats.ChatlogData.resetBroadcasts*
  commentId: Overload:MoreSlugcats.ChatlogData.resetBroadcasts
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_resetBroadcasts
  name: resetBroadcasts
  nameWithType: ChatlogData.resetBroadcasts
  fullName: MoreSlugcats.ChatlogData.resetBroadcasts
- uid: MoreSlugcats.ChatlogData.markAllBroadcastsRead*
  commentId: Overload:MoreSlugcats.ChatlogData.markAllBroadcastsRead
  isExternal: true
  href: MoreSlugcats.ChatlogData.html#MoreSlugcats_ChatlogData_markAllBroadcastsRead
  name: markAllBroadcastsRead
  nameWithType: ChatlogData.markAllBroadcastsRead
  fullName: MoreSlugcats.ChatlogData.markAllBroadcastsRead
