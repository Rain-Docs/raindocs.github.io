### YamlMime:ManagedReference
items:
- uid: CoralBrain.CoralCircuit
  commentId: T:CoralBrain.CoralCircuit
  id: CoralCircuit
  parent: CoralBrain
  children:
  - CoralBrain.CoralCircuit.#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})
  - CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)
  - CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)
  - CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)
  - CoralBrain.CoralCircuit.Update(System.Boolean)
  - CoralBrain.CoralCircuit.bits
  - CoralBrain.CoralCircuit.bottomLeft
  - CoralBrain.CoralCircuit.displacedCounter
  - CoralBrain.CoralCircuit.places
  - CoralBrain.CoralCircuit.rotation
  - CoralBrain.CoralCircuit.system
  - CoralBrain.CoralCircuit.tiles
  - CoralBrain.CoralCircuit.topRight
  langs:
  - csharp
  - vb
  name: CoralCircuit
  nameWithType: CoralCircuit
  fullName: CoralBrain.CoralCircuit
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CoralBrain.CoralCircuit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CoralCircuit : UpdatableAndDeletable'
    content.vb: Public Class CoralCircuit Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: CoralBrain.CoralCircuit.system
  commentId: F:CoralBrain.CoralCircuit.system
  id: system
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: system
  nameWithType: CoralCircuit.system
  fullName: CoralBrain.CoralCircuit.system
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.system</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralNeuronSystem system
    return:
      type: CoralBrain.CoralNeuronSystem
    content.vb: Public system As CoralNeuronSystem
- uid: CoralBrain.CoralCircuit.tiles
  commentId: F:CoralBrain.CoralCircuit.tiles
  id: tiles
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: tiles
  nameWithType: CoralCircuit.tiles
  fullName: CoralBrain.CoralCircuit.tiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.tiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> tiles
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public tiles As List(Of IntVector2)
- uid: CoralBrain.CoralCircuit.rotation
  commentId: F:CoralBrain.CoralCircuit.rotation
  id: rotation
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: CoralCircuit.rotation
  fullName: CoralBrain.CoralCircuit.rotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 rotation
    return:
      type: UnityEngine.Vector2
    content.vb: Public rotation As Vector2
- uid: CoralBrain.CoralCircuit.bottomLeft
  commentId: F:CoralBrain.CoralCircuit.bottomLeft
  id: bottomLeft
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: bottomLeft
  nameWithType: CoralCircuit.bottomLeft
  fullName: CoralBrain.CoralCircuit.bottomLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.bottomLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 bottomLeft
    return:
      type: RWCustom.IntVector2
    content.vb: Public bottomLeft As IntVector2
- uid: CoralBrain.CoralCircuit.topRight
  commentId: F:CoralBrain.CoralCircuit.topRight
  id: topRight
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: topRight
  nameWithType: CoralCircuit.topRight
  fullName: CoralBrain.CoralCircuit.topRight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.topRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 topRight
    return:
      type: RWCustom.IntVector2
    content.vb: Public topRight As IntVector2
- uid: CoralBrain.CoralCircuit.bits
  commentId: F:CoralBrain.CoralCircuit.bits
  id: bits
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: bits
  nameWithType: CoralCircuit.bits
  fullName: CoralBrain.CoralCircuit.bits
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.bits</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralCircuit.CircuitBit[,,] bits
    return:
      type: CoralBrain.CoralCircuit.CircuitBit[,,]
    content.vb: Public bits As CoralCircuit.CircuitBit(,,)
- uid: CoralBrain.CoralCircuit.places
  commentId: F:CoralBrain.CoralCircuit.places
  id: places
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: places
  nameWithType: CoralCircuit.places
  fullName: CoralBrain.CoralCircuit.places
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.places</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlacedObject> places
    return:
      type: System.Collections.Generic.List{PlacedObject}
    content.vb: Public places As List(Of PlacedObject)
- uid: CoralBrain.CoralCircuit.displacedCounter
  commentId: F:CoralBrain.CoralCircuit.displacedCounter
  id: displacedCounter
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: displacedCounter
  nameWithType: CoralCircuit.displacedCounter
  fullName: CoralBrain.CoralCircuit.displacedCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralCircuit.displacedCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int displacedCounter
    return:
      type: System.Int32
    content.vb: Public displacedCounter As Integer
- uid: CoralBrain.CoralCircuit.#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})
  commentId: M:CoralBrain.CoralCircuit.#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})
  id: '#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})'
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: CoralCircuit(CoralNeuronSystem, List<PlacedObject>)
  nameWithType: CoralCircuit.CoralCircuit(CoralNeuronSystem, List<PlacedObject>)
  fullName: CoralBrain.CoralCircuit.CoralCircuit(CoralBrain.CoralNeuronSystem, System.Collections.Generic.List<PlacedObject>)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CoralBrain.CoralCircuit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralCircuit(CoralNeuronSystem system, List<PlacedObject> places)
    parameters:
    - id: system
      type: CoralBrain.CoralNeuronSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>system</parameter>
            <parameter>M:CoralBrain.CoralCircuit.#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})</parameter>
          </include>
        </markup>
    - id: places
      type: System.Collections.Generic.List{PlacedObject}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>places</parameter>
            <parameter>M:CoralBrain.CoralCircuit.#ctor(CoralBrain.CoralNeuronSystem,System.Collections.Generic.List{PlacedObject})</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(system As CoralNeuronSystem, places As List(Of PlacedObject))
  overload: CoralBrain.CoralCircuit.#ctor*
  nameWithType.vb: CoralCircuit.New(CoralNeuronSystem, List(Of PlacedObject))
  fullName.vb: CoralBrain.CoralCircuit.New(CoralBrain.CoralNeuronSystem, System.Collections.Generic.List(Of PlacedObject))
  name.vb: New(CoralNeuronSystem, List(Of PlacedObject))
- uid: CoralBrain.CoralCircuit.Update(System.Boolean)
  commentId: M:CoralBrain.CoralCircuit.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: CoralCircuit.Update(bool)
  fullName: CoralBrain.CoralCircuit.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralCircuit.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: CoralBrain.CoralCircuit.Update*
  nameWithType.vb: CoralCircuit.Update(Boolean)
  fullName.vb: CoralBrain.CoralCircuit.Update(Boolean)
  name.vb: Update(Boolean)
- uid: CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)
  commentId: M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)
  id: Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: Explosion(Vector2, float, float, Vector2)
  nameWithType: CoralCircuit.Explosion(Vector2, float, float, Vector2)
  fullName: CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2, float, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Explosion(Vector2 pos, float rad, float frc, Vector2 dirVec)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: frc
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>frc</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: dirVec
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dirVec</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Explosion(pos As Vector2, rad As Single, frc As Single, dirVec As Vector2)
  overload: CoralBrain.CoralCircuit.Explosion*
  nameWithType.vb: CoralCircuit.Explosion(Vector2, Single, Single, Vector2)
  fullName.vb: CoralBrain.CoralCircuit.Explosion(UnityEngine.Vector2, Single, Single, UnityEngine.Vector2)
  name.vb: Explosion(Vector2, Single, Single, Vector2)
- uid: CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)
  commentId: M:CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)
  id: Bit(RWCustom.IntVector2,System.Int32)
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: Bit(IntVector2, int)
  nameWithType: CoralCircuit.Bit(IntVector2, int)
  fullName: CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralCircuit.CircuitBit Bit(IntVector2 tile, int i)
    parameters:
    - id: tile
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tile</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: CoralBrain.CoralCircuit.CircuitBit
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Bit(tile As IntVector2, i As Integer) As CoralCircuit.CircuitBit
  overload: CoralBrain.CoralCircuit.Bit*
  nameWithType.vb: CoralCircuit.Bit(IntVector2, Integer)
  fullName.vb: CoralBrain.CoralCircuit.Bit(RWCustom.IntVector2, Integer)
  name.vb: Bit(IntVector2, Integer)
- uid: CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)
  commentId: M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)
  id: Bit(System.Int32,System.Int32,System.Int32)
  parent: CoralBrain.CoralCircuit
  langs:
  - csharp
  - vb
  name: Bit(int, int, int)
  nameWithType: CoralCircuit.Bit(int, int, int)
  fullName: CoralBrain.CoralCircuit.Bit(int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralCircuit.CircuitBit Bit(int x, int y, int i)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: CoralBrain.CoralCircuit.CircuitBit
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralCircuit.Bit(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Bit(x As Integer, y As Integer, i As Integer) As CoralCircuit.CircuitBit
  overload: CoralBrain.CoralCircuit.Bit*
  nameWithType.vb: CoralCircuit.Bit(Integer, Integer, Integer)
  fullName.vb: CoralBrain.CoralCircuit.Bit(Integer, Integer, Integer)
  name.vb: Bit(Integer, Integer, Integer)
references:
- uid: CoralBrain
  commentId: N:CoralBrain
  isExternal: true
  href: CoralBrain.html
  name: CoralBrain
  nameWithType: CoralBrain
  fullName: CoralBrain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CoralBrain.CoralNeuronSystem
  commentId: T:CoralBrain.CoralNeuronSystem
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralNeuronSystem.html
  name: CoralNeuronSystem
  nameWithType: CoralNeuronSystem
  fullName: CoralBrain.CoralNeuronSystem
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: CoralBrain.CoralCircuit.CircuitBit[,,]
  isExternal: true
  href: CoralBrain.CoralCircuit.CircuitBit.html
  name: CircuitBit[,,]
  nameWithType: CoralCircuit.CircuitBit[,,]
  fullName: CoralBrain.CoralCircuit.CircuitBit[,,]
  nameWithType.vb: CoralCircuit.CircuitBit(,,)
  fullName.vb: CoralBrain.CoralCircuit.CircuitBit(,,)
  name.vb: CircuitBit(,,)
  spec.csharp:
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  - name: '['
  - name: ','
  - name: ','
  - name: ']'
  spec.vb:
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  - name: (
  - name: ','
  - name: ','
  - name: )
- uid: System.Collections.Generic.List{PlacedObject}
  commentId: T:System.Collections.Generic.List{PlacedObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlacedObject>
  nameWithType: List<PlacedObject>
  fullName: System.Collections.Generic.List<PlacedObject>
  nameWithType.vb: List(Of PlacedObject)
  fullName.vb: System.Collections.Generic.List(Of PlacedObject)
  name.vb: List(Of PlacedObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CoralBrain.CoralCircuit.#ctor*
  commentId: Overload:CoralBrain.CoralCircuit.#ctor
  isExternal: true
  href: CoralBrain.CoralCircuit.html#CoralBrain_CoralCircuit__ctor_CoralBrain_CoralNeuronSystem_System_Collections_Generic_List_PlacedObject__
  name: CoralCircuit
  nameWithType: CoralCircuit.CoralCircuit
  fullName: CoralBrain.CoralCircuit.CoralCircuit
  nameWithType.vb: CoralCircuit.New
  fullName.vb: CoralBrain.CoralCircuit.New
  name.vb: New
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: CoralBrain.CoralCircuit.Update*
  commentId: Overload:CoralBrain.CoralCircuit.Update
  isExternal: true
  href: CoralBrain.CoralCircuit.html#CoralBrain_CoralCircuit_Update_System_Boolean_
  name: Update
  nameWithType: CoralCircuit.Update
  fullName: CoralBrain.CoralCircuit.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CoralBrain.CoralCircuit.Explosion*
  commentId: Overload:CoralBrain.CoralCircuit.Explosion
  isExternal: true
  href: CoralBrain.CoralCircuit.html#CoralBrain_CoralCircuit_Explosion_UnityEngine_Vector2_System_Single_System_Single_UnityEngine_Vector2_
  name: Explosion
  nameWithType: CoralCircuit.Explosion
  fullName: CoralBrain.CoralCircuit.Explosion
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: CoralBrain.CoralCircuit.Bit*
  commentId: Overload:CoralBrain.CoralCircuit.Bit
  isExternal: true
  href: CoralBrain.CoralCircuit.html#CoralBrain_CoralCircuit_Bit_RWCustom_IntVector2_System_Int32_
  name: Bit
  nameWithType: CoralCircuit.Bit
  fullName: CoralBrain.CoralCircuit.Bit
- uid: CoralBrain.CoralCircuit.CircuitBit
  commentId: T:CoralBrain.CoralCircuit.CircuitBit
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralCircuit.html
  name: CoralCircuit.CircuitBit
  nameWithType: CoralCircuit.CircuitBit
  fullName: CoralBrain.CoralCircuit.CircuitBit
  spec.csharp:
  - uid: CoralBrain.CoralCircuit
    name: CoralCircuit
    isExternal: true
    href: CoralBrain.CoralCircuit.html
  - name: .
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  spec.vb:
  - uid: CoralBrain.CoralCircuit
    name: CoralCircuit
    isExternal: true
    href: CoralBrain.CoralCircuit.html
  - name: .
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
