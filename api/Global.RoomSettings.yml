### YamlMime:ManagedReference
items:
- uid: Global.RoomSettings
  commentId: T:Global.RoomSettings
  id: RoomSettings
  parent: Global
  children:
  - Global.RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  - Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)
  - Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  - Global.RoomSettings.BkgDroneNoThreatVolume
  - Global.RoomSettings.BkgDroneVolume
  - Global.RoomSettings.CeilingDrips
  - Global.RoomSettings.Clouds
  - Global.RoomSettings.DangerType
  - Global.RoomSettings.EffectColorA
  - Global.RoomSettings.EffectColorB
  - Global.RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)
  - Global.RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)
  - Global.RoomSettings.Grime
  - Global.RoomSettings.InheritAmbientSounds
  - Global.RoomSettings.InheritEffects
  - Global.RoomSettings.Load(SlugcatStats.Name)
  - Global.RoomSettings.Load(SlugcatStats.Timeline)
  - Global.RoomSettings.Palette
  - Global.RoomSettings.RainIntensity
  - Global.RoomSettings.RandomItemDensity
  - Global.RoomSettings.RandomItemSpearChance
  - Global.RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)
  - Global.RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)
  - Global.RoomSettings.Reset
  - Global.RoomSettings.RumbleIntensity
  - Global.RoomSettings.Save
  - Global.RoomSettings.Save(SlugcatStats.Name)
  - Global.RoomSettings.Save(SlugcatStats.Timeline)
  - Global.RoomSettings.SaveAsTemplate(System.String,Region)
  - Global.RoomSettings.SecondWaveAmplitude
  - Global.RoomSettings.SecondWaveLength
  - Global.RoomSettings.SetTemplate(System.String,Region)
  - Global.RoomSettings.SpecificPath(SlugcatStats.Name)
  - Global.RoomSettings.SpecificPath(SlugcatStats.Timeline)
  - Global.RoomSettings.TerrainDepth
  - Global.RoomSettings.TerrainEdgeRadius
  - Global.RoomSettings.TerrainGooHeight
  - Global.RoomSettings.TerrainGrain
  - Global.RoomSettings.TerrainLight
  - Global.RoomSettings.TerrainPalette
  - Global.RoomSettings.TerrainSkyFade
  - Global.RoomSettings.TerrainStainAmount
  - Global.RoomSettings.TerrainStainBrightness
  - Global.RoomSettings.TerrainStainHeight
  - Global.RoomSettings.TerrainWaves
  - Global.RoomSettings.WaterReflectionAlpha
  - Global.RoomSettings.WaveAmplitude
  - Global.RoomSettings.WaveLength
  - Global.RoomSettings.WaveSpeed
  - Global.RoomSettings.ambientSounds
  - Global.RoomSettings.bkgDrnNoThreatVol
  - Global.RoomSettings.bkgDrnVl
  - Global.RoomSettings.cDrips
  - Global.RoomSettings.clds
  - Global.RoomSettings.dType
  - Global.RoomSettings.eColA
  - Global.RoomSettings.eColB
  - Global.RoomSettings.effects
  - Global.RoomSettings.fadePalette
  - Global.RoomSettings.filePath
  - Global.RoomSettings.game
  - Global.RoomSettings.grm
  - Global.RoomSettings.isAncestor
  - Global.RoomSettings.isFirstTemplate
  - Global.RoomSettings.isTemplate
  - Global.RoomSettings.name
  - Global.RoomSettings.pal
  - Global.RoomSettings.parent
  - Global.RoomSettings.placedObjects
  - Global.RoomSettings.rInts
  - Global.RoomSettings.rndItmDns
  - Global.RoomSettings.rndItmSprChnc
  - Global.RoomSettings.room
  - Global.RoomSettings.roomSpecificScript
  - Global.RoomSettings.rumInts
  - Global.RoomSettings.swAmp
  - Global.RoomSettings.swLength
  - Global.RoomSettings.terrainDepth
  - Global.RoomSettings.terrainEdgeRadius
  - Global.RoomSettings.terrainFadePalette
  - Global.RoomSettings.terrainGooHeight
  - Global.RoomSettings.terrainGrain
  - Global.RoomSettings.terrainLight
  - Global.RoomSettings.terrainPalette
  - Global.RoomSettings.terrainSkyFade
  - Global.RoomSettings.terrainStainAmount
  - Global.RoomSettings.terrainStainBrightness
  - Global.RoomSettings.terrainStainHeight
  - Global.RoomSettings.terrainWaves
  - Global.RoomSettings.triggers
  - Global.RoomSettings.wAmp
  - Global.RoomSettings.wLength
  - Global.RoomSettings.wSpeed
  - Global.RoomSettings.wetTerrain
  - Global.RoomSettings.wtrRflctAlpha
  langs:
  - csharp
  - vb
  name: RoomSettings
  nameWithType: RoomSettings
  fullName: RoomSettings
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RoomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RoomSettings
    content.vb: Public Class RoomSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RoomSettings.isAncestor
  commentId: F:Global.RoomSettings.isAncestor
  id: isAncestor
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: isAncestor
  nameWithType: RoomSettings.isAncestor
  fullName: RoomSettings.isAncestor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.isAncestor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isAncestor
    return:
      type: System.Boolean
    content.vb: Public isAncestor As Boolean
- uid: Global.RoomSettings.isTemplate
  commentId: F:Global.RoomSettings.isTemplate
  id: isTemplate
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: isTemplate
  nameWithType: RoomSettings.isTemplate
  fullName: RoomSettings.isTemplate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.isTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isTemplate
    return:
      type: System.Boolean
    content.vb: Public isTemplate As Boolean
- uid: Global.RoomSettings.isFirstTemplate
  commentId: F:Global.RoomSettings.isFirstTemplate
  id: isFirstTemplate
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: isFirstTemplate
  nameWithType: RoomSettings.isFirstTemplate
  fullName: RoomSettings.isFirstTemplate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.isFirstTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isFirstTemplate
    return:
      type: System.Boolean
    content.vb: Public isFirstTemplate As Boolean
- uid: Global.RoomSettings.parent
  commentId: F:Global.RoomSettings.parent
  id: parent
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: parent
  nameWithType: RoomSettings.parent
  fullName: RoomSettings.parent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.parent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings parent
    return:
      type: Global.RoomSettings
    content.vb: Public parent As RoomSettings
- uid: Global.RoomSettings.game
  commentId: F:Global.RoomSettings.game
  id: game
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: game
  nameWithType: RoomSettings.game
  fullName: RoomSettings.game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainWorldGame game
    return:
      type: Global.RainWorldGame
    content.vb: Public game As RainWorldGame
- uid: Global.RoomSettings.room
  commentId: F:Global.RoomSettings.room
  id: room
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: room
  nameWithType: RoomSettings.room
  fullName: RoomSettings.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.RoomSettings.dType
  commentId: F:Global.RoomSettings.dType
  id: dType
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: dType
  nameWithType: RoomSettings.dType
  fullName: RoomSettings.dType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.dType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomRain.DangerType dType
    return:
      type: Global.RoomRain.DangerType
    content.vb: Public dType As RoomRain.DangerType
- uid: Global.RoomSettings.rInts
  commentId: F:Global.RoomSettings.rInts
  id: rInts
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: rInts
  nameWithType: RoomSettings.rInts
  fullName: RoomSettings.rInts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.rInts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? rInts
    return:
      type: System.Nullable{System.Single}
    content.vb: Public rInts As Single?
- uid: Global.RoomSettings.rumInts
  commentId: F:Global.RoomSettings.rumInts
  id: rumInts
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: rumInts
  nameWithType: RoomSettings.rumInts
  fullName: RoomSettings.rumInts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.rumInts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? rumInts
    return:
      type: System.Nullable{System.Single}
    content.vb: Public rumInts As Single?
- uid: Global.RoomSettings.cDrips
  commentId: F:Global.RoomSettings.cDrips
  id: cDrips
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: cDrips
  nameWithType: RoomSettings.cDrips
  fullName: RoomSettings.cDrips
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.cDrips</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? cDrips
    return:
      type: System.Nullable{System.Single}
    content.vb: Public cDrips As Single?
- uid: Global.RoomSettings.wSpeed
  commentId: F:Global.RoomSettings.wSpeed
  id: wSpeed
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: wSpeed
  nameWithType: RoomSettings.wSpeed
  fullName: RoomSettings.wSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.wSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? wSpeed
    return:
      type: System.Nullable{System.Single}
    content.vb: Public wSpeed As Single?
- uid: Global.RoomSettings.wAmp
  commentId: F:Global.RoomSettings.wAmp
  id: wAmp
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: wAmp
  nameWithType: RoomSettings.wAmp
  fullName: RoomSettings.wAmp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.wAmp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? wAmp
    return:
      type: System.Nullable{System.Single}
    content.vb: Public wAmp As Single?
- uid: Global.RoomSettings.wLength
  commentId: F:Global.RoomSettings.wLength
  id: wLength
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: wLength
  nameWithType: RoomSettings.wLength
  fullName: RoomSettings.wLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.wLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? wLength
    return:
      type: System.Nullable{System.Single}
    content.vb: Public wLength As Single?
- uid: Global.RoomSettings.swAmp
  commentId: F:Global.RoomSettings.swAmp
  id: swAmp
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: swAmp
  nameWithType: RoomSettings.swAmp
  fullName: RoomSettings.swAmp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.swAmp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? swAmp
    return:
      type: System.Nullable{System.Single}
    content.vb: Public swAmp As Single?
- uid: Global.RoomSettings.swLength
  commentId: F:Global.RoomSettings.swLength
  id: swLength
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: swLength
  nameWithType: RoomSettings.swLength
  fullName: RoomSettings.swLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.swLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? swLength
    return:
      type: System.Nullable{System.Single}
    content.vb: Public swLength As Single?
- uid: Global.RoomSettings.clds
  commentId: F:Global.RoomSettings.clds
  id: clds
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: clds
  nameWithType: RoomSettings.clds
  fullName: RoomSettings.clds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.clds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? clds
    return:
      type: System.Nullable{System.Single}
    content.vb: Public clds As Single?
- uid: Global.RoomSettings.grm
  commentId: F:Global.RoomSettings.grm
  id: grm
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: grm
  nameWithType: RoomSettings.grm
  fullName: RoomSettings.grm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.grm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? grm
    return:
      type: System.Nullable{System.Single}
    content.vb: Public grm As Single?
- uid: Global.RoomSettings.bkgDrnVl
  commentId: F:Global.RoomSettings.bkgDrnVl
  id: bkgDrnVl
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: bkgDrnVl
  nameWithType: RoomSettings.bkgDrnVl
  fullName: RoomSettings.bkgDrnVl
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.bkgDrnVl</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? bkgDrnVl
    return:
      type: System.Nullable{System.Single}
    content.vb: Public bkgDrnVl As Single?
- uid: Global.RoomSettings.bkgDrnNoThreatVol
  commentId: F:Global.RoomSettings.bkgDrnNoThreatVol
  id: bkgDrnNoThreatVol
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: bkgDrnNoThreatVol
  nameWithType: RoomSettings.bkgDrnNoThreatVol
  fullName: RoomSettings.bkgDrnNoThreatVol
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.bkgDrnNoThreatVol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? bkgDrnNoThreatVol
    return:
      type: System.Nullable{System.Single}
    content.vb: Public bkgDrnNoThreatVol As Single?
- uid: Global.RoomSettings.rndItmDns
  commentId: F:Global.RoomSettings.rndItmDns
  id: rndItmDns
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: rndItmDns
  nameWithType: RoomSettings.rndItmDns
  fullName: RoomSettings.rndItmDns
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.rndItmDns</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? rndItmDns
    return:
      type: System.Nullable{System.Single}
    content.vb: Public rndItmDns As Single?
- uid: Global.RoomSettings.rndItmSprChnc
  commentId: F:Global.RoomSettings.rndItmSprChnc
  id: rndItmSprChnc
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: rndItmSprChnc
  nameWithType: RoomSettings.rndItmSprChnc
  fullName: RoomSettings.rndItmSprChnc
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.rndItmSprChnc</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? rndItmSprChnc
    return:
      type: System.Nullable{System.Single}
    content.vb: Public rndItmSprChnc As Single?
- uid: Global.RoomSettings.wtrRflctAlpha
  commentId: F:Global.RoomSettings.wtrRflctAlpha
  id: wtrRflctAlpha
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: wtrRflctAlpha
  nameWithType: RoomSettings.wtrRflctAlpha
  fullName: RoomSettings.wtrRflctAlpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.wtrRflctAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? wtrRflctAlpha
    return:
      type: System.Nullable{System.Single}
    content.vb: Public wtrRflctAlpha As Single?
- uid: Global.RoomSettings.pal
  commentId: F:Global.RoomSettings.pal
  id: pal
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: pal
  nameWithType: RoomSettings.pal
  fullName: RoomSettings.pal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.pal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int? pal
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public pal As Integer?
- uid: Global.RoomSettings.eColA
  commentId: F:Global.RoomSettings.eColA
  id: eColA
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: eColA
  nameWithType: RoomSettings.eColA
  fullName: RoomSettings.eColA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.eColA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int? eColA
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public eColA As Integer?
- uid: Global.RoomSettings.eColB
  commentId: F:Global.RoomSettings.eColB
  id: eColB
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: eColB
  nameWithType: RoomSettings.eColB
  fullName: RoomSettings.eColB
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.eColB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int? eColB
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public eColB As Integer?
- uid: Global.RoomSettings.roomSpecificScript
  commentId: F:Global.RoomSettings.roomSpecificScript
  id: roomSpecificScript
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: roomSpecificScript
  nameWithType: RoomSettings.roomSpecificScript
  fullName: RoomSettings.roomSpecificScript
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.roomSpecificScript</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool roomSpecificScript
    return:
      type: System.Boolean
    content.vb: Public roomSpecificScript As Boolean
- uid: Global.RoomSettings.wetTerrain
  commentId: F:Global.RoomSettings.wetTerrain
  id: wetTerrain
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: wetTerrain
  nameWithType: RoomSettings.wetTerrain
  fullName: RoomSettings.wetTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.wetTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool wetTerrain
    return:
      type: System.Boolean
    content.vb: Public wetTerrain As Boolean
- uid: Global.RoomSettings.terrainLight
  commentId: F:Global.RoomSettings.terrainLight
  id: terrainLight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainLight
  nameWithType: RoomSettings.terrainLight
  fullName: RoomSettings.terrainLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainLight
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainLight As Single?
- uid: Global.RoomSettings.terrainStainAmount
  commentId: F:Global.RoomSettings.terrainStainAmount
  id: terrainStainAmount
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainStainAmount
  nameWithType: RoomSettings.terrainStainAmount
  fullName: RoomSettings.terrainStainAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainStainAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainStainAmount
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainStainAmount As Single?
- uid: Global.RoomSettings.terrainStainBrightness
  commentId: F:Global.RoomSettings.terrainStainBrightness
  id: terrainStainBrightness
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainStainBrightness
  nameWithType: RoomSettings.terrainStainBrightness
  fullName: RoomSettings.terrainStainBrightness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainStainBrightness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainStainBrightness
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainStainBrightness As Single?
- uid: Global.RoomSettings.terrainStainHeight
  commentId: F:Global.RoomSettings.terrainStainHeight
  id: terrainStainHeight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainStainHeight
  nameWithType: RoomSettings.terrainStainHeight
  fullName: RoomSettings.terrainStainHeight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainStainHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainStainHeight
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainStainHeight As Single?
- uid: Global.RoomSettings.terrainWaves
  commentId: F:Global.RoomSettings.terrainWaves
  id: terrainWaves
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainWaves
  nameWithType: RoomSettings.terrainWaves
  fullName: RoomSettings.terrainWaves
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainWaves</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainWaves
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainWaves As Single?
- uid: Global.RoomSettings.terrainEdgeRadius
  commentId: F:Global.RoomSettings.terrainEdgeRadius
  id: terrainEdgeRadius
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainEdgeRadius
  nameWithType: RoomSettings.terrainEdgeRadius
  fullName: RoomSettings.terrainEdgeRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainEdgeRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainEdgeRadius
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainEdgeRadius As Single?
- uid: Global.RoomSettings.terrainGooHeight
  commentId: F:Global.RoomSettings.terrainGooHeight
  id: terrainGooHeight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainGooHeight
  nameWithType: RoomSettings.terrainGooHeight
  fullName: RoomSettings.terrainGooHeight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainGooHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainGooHeight
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainGooHeight As Single?
- uid: Global.RoomSettings.terrainGrain
  commentId: F:Global.RoomSettings.terrainGrain
  id: terrainGrain
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainGrain
  nameWithType: RoomSettings.terrainGrain
  fullName: RoomSettings.terrainGrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainGrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainGrain
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainGrain As Single?
- uid: Global.RoomSettings.terrainDepth
  commentId: F:Global.RoomSettings.terrainDepth
  id: terrainDepth
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainDepth
  nameWithType: RoomSettings.terrainDepth
  fullName: RoomSettings.terrainDepth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainDepth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainDepth
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainDepth As Single?
- uid: Global.RoomSettings.terrainSkyFade
  commentId: F:Global.RoomSettings.terrainSkyFade
  id: terrainSkyFade
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainSkyFade
  nameWithType: RoomSettings.terrainSkyFade
  fullName: RoomSettings.terrainSkyFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainSkyFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float? terrainSkyFade
    return:
      type: System.Nullable{System.Single}
    content.vb: Public terrainSkyFade As Single?
- uid: Global.RoomSettings.terrainPalette
  commentId: F:Global.RoomSettings.terrainPalette
  id: terrainPalette
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainPalette
  nameWithType: RoomSettings.terrainPalette
  fullName: RoomSettings.terrainPalette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string terrainPalette
    return:
      type: System.String
    content.vb: Public terrainPalette As String
- uid: Global.RoomSettings.fadePalette
  commentId: F:Global.RoomSettings.fadePalette
  id: fadePalette
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: fadePalette
  nameWithType: RoomSettings.fadePalette
  fullName: RoomSettings.fadePalette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.fadePalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings.FadePalette fadePalette
    return:
      type: Global.RoomSettings.FadePalette
    content.vb: Public fadePalette As RoomSettings.FadePalette
- uid: Global.RoomSettings.terrainFadePalette
  commentId: F:Global.RoomSettings.terrainFadePalette
  id: terrainFadePalette
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: terrainFadePalette
  nameWithType: RoomSettings.terrainFadePalette
  fullName: RoomSettings.terrainFadePalette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.terrainFadePalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings.TerrainFadePalette terrainFadePalette
    return:
      type: Global.RoomSettings.TerrainFadePalette
    content.vb: Public terrainFadePalette As RoomSettings.TerrainFadePalette
- uid: Global.RoomSettings.effects
  commentId: F:Global.RoomSettings.effects
  id: effects
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: effects
  nameWithType: RoomSettings.effects
  fullName: RoomSettings.effects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.effects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<RoomSettings.RoomEffect> effects
    return:
      type: System.Collections.Generic.List{RoomSettings.RoomEffect}
    content.vb: Public effects As List(Of RoomSettings.RoomEffect)
- uid: Global.RoomSettings.ambientSounds
  commentId: F:Global.RoomSettings.ambientSounds
  id: ambientSounds
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: ambientSounds
  nameWithType: RoomSettings.ambientSounds
  fullName: RoomSettings.ambientSounds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.ambientSounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AmbientSound> ambientSounds
    return:
      type: System.Collections.Generic.List{AmbientSound}
    content.vb: Public ambientSounds As List(Of AmbientSound)
- uid: Global.RoomSettings.triggers
  commentId: F:Global.RoomSettings.triggers
  id: triggers
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: triggers
  nameWithType: RoomSettings.triggers
  fullName: RoomSettings.triggers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.triggers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<EventTrigger> triggers
    return:
      type: System.Collections.Generic.List{EventTrigger}
    content.vb: Public triggers As List(Of EventTrigger)
- uid: Global.RoomSettings.placedObjects
  commentId: F:Global.RoomSettings.placedObjects
  id: placedObjects
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: placedObjects
  nameWithType: RoomSettings.placedObjects
  fullName: RoomSettings.placedObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.placedObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlacedObject> placedObjects
    return:
      type: System.Collections.Generic.List{PlacedObject}
    content.vb: Public placedObjects As List(Of PlacedObject)
- uid: Global.RoomSettings.name
  commentId: F:Global.RoomSettings.name
  id: name
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: name
  nameWithType: RoomSettings.name
  fullName: RoomSettings.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.RoomSettings.filePath
  commentId: F:Global.RoomSettings.filePath
  id: filePath
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: filePath
  nameWithType: RoomSettings.filePath
  fullName: RoomSettings.filePath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.filePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string filePath
    return:
      type: System.String
    content.vb: Public filePath As String
- uid: Global.RoomSettings.Reset
  commentId: M:Global.RoomSettings.Reset
  id: Reset
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: RoomSettings.Reset()
  fullName: RoomSettings.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.RoomSettings.Reset*
- uid: Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)
  commentId: M:Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)
  id: '#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)'
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RoomSettings(string, Region, bool, bool, Name)
  nameWithType: RoomSettings.RoomSettings(string, Region, bool, bool, SlugcatStats.Name)
  fullName: RoomSettings.RoomSettings(string, Region, bool, bool, SlugcatStats.Name)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter constructor instead.")]

      public RoomSettings(string name, Region region, bool template, bool firstTemplate, SlugcatStats.Name playerChar)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: region
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: template
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>template</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: firstTemplate
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstTemplate</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: playerChar
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerChar</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter constructor instead.")>

      Public Sub New(name As String, region As Region, template As Boolean, firstTemplate As Boolean, playerChar As SlugcatStats.Name)
  overload: Global.RoomSettings.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter constructor instead.
  nameWithType.vb: RoomSettings.New(String, Region, Boolean, Boolean, SlugcatStats.Name)
  fullName.vb: RoomSettings.New(String, Region, Boolean, Boolean, SlugcatStats.Name)
  name.vb: New(String, Region, Boolean, Boolean, Name)
- uid: Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  commentId: M:Global.RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  id: '#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)'
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RoomSettings(string, Region, bool, bool, Timeline, RainWorldGame)
  nameWithType: RoomSettings.RoomSettings(string, Region, bool, bool, SlugcatStats.Timeline, RainWorldGame)
  fullName: RoomSettings.RoomSettings(string, Region, bool, bool, SlugcatStats.Timeline, RainWorldGame)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings(string name, Region region, bool template, bool firstTemplate, SlugcatStats.Timeline timelinePoint, RainWorldGame game)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: region
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: template
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>template</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: firstTemplate
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstTemplate</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: timelinePoint
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelinePoint</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:RoomSettings.#ctor(System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, region As Region, template As Boolean, firstTemplate As Boolean, timelinePoint As SlugcatStats.Timeline, game As RainWorldGame)
  overload: Global.RoomSettings.#ctor*
  nameWithType.vb: RoomSettings.New(String, Region, Boolean, Boolean, SlugcatStats.Timeline, RainWorldGame)
  fullName.vb: RoomSettings.New(String, Region, Boolean, Boolean, SlugcatStats.Timeline, RainWorldGame)
  name.vb: New(String, Region, Boolean, Boolean, Timeline, RainWorldGame)
- uid: Global.RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  commentId: M:Global.RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)
  id: '#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)'
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RoomSettings(Room, string, Region, bool, bool, Timeline, RainWorldGame)
  nameWithType: RoomSettings.RoomSettings(Room, string, Region, bool, bool, SlugcatStats.Timeline, RainWorldGame)
  fullName: RoomSettings.RoomSettings(Room, string, Region, bool, bool, SlugcatStats.Timeline, RainWorldGame)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings(Room room, string name, Region region, bool template, bool firstTemplate, SlugcatStats.Timeline timelinePoint, RainWorldGame game)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: region
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: template
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>template</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: firstTemplate
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstTemplate</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: timelinePoint
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelinePoint</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:RoomSettings.#ctor(Room,System.String,Region,System.Boolean,System.Boolean,SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, name As String, region As Region, template As Boolean, firstTemplate As Boolean, timelinePoint As SlugcatStats.Timeline, game As RainWorldGame)
  overload: Global.RoomSettings.#ctor*
  nameWithType.vb: RoomSettings.New(Room, String, Region, Boolean, Boolean, SlugcatStats.Timeline, RainWorldGame)
  fullName.vb: RoomSettings.New(Room, String, Region, Boolean, Boolean, SlugcatStats.Timeline, RainWorldGame)
  name.vb: New(Room, String, Region, Boolean, Boolean, Timeline, RainWorldGame)
- uid: Global.RoomSettings.Save
  commentId: M:Global.RoomSettings.Save
  id: Save
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: RoomSettings.Save()
  fullName: RoomSettings.Save()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Save</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Save()
    content.vb: Public Sub Save()
  overload: Global.RoomSettings.Save*
- uid: Global.RoomSettings.Save(SlugcatStats.Name)
  commentId: M:Global.RoomSettings.Save(SlugcatStats.Name)
  id: Save(SlugcatStats.Name)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Save(Name)
  nameWithType: RoomSettings.Save(SlugcatStats.Name)
  fullName: RoomSettings.Save(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Save(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public void Save(SlugcatStats.Name slugcat)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:RoomSettings.Save(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Sub Save(slugcat As SlugcatStats.Name)
  overload: Global.RoomSettings.Save*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.RoomSettings.Save(SlugcatStats.Timeline)
  commentId: M:Global.RoomSettings.Save(SlugcatStats.Timeline)
  id: Save(SlugcatStats.Timeline)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Save(Timeline)
  nameWithType: RoomSettings.Save(SlugcatStats.Timeline)
  fullName: RoomSettings.Save(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Save(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Save(SlugcatStats.Timeline time)
    parameters:
    - id: time
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:RoomSettings.Save(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Save(time As SlugcatStats.Timeline)
  overload: Global.RoomSettings.Save*
- uid: Global.RoomSettings.SpecificPath(SlugcatStats.Name)
  commentId: M:Global.RoomSettings.SpecificPath(SlugcatStats.Name)
  id: SpecificPath(SlugcatStats.Name)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SpecificPath(Name)
  nameWithType: RoomSettings.SpecificPath(SlugcatStats.Name)
  fullName: RoomSettings.SpecificPath(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public string SpecificPath(SlugcatStats.Name id)
    parameters:
    - id: id
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Function SpecificPath(id As SlugcatStats.Name) As String
  overload: Global.RoomSettings.SpecificPath*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.RoomSettings.SpecificPath(SlugcatStats.Timeline)
  commentId: M:Global.RoomSettings.SpecificPath(SlugcatStats.Timeline)
  id: SpecificPath(SlugcatStats.Timeline)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SpecificPath(Timeline)
  nameWithType: RoomSettings.SpecificPath(SlugcatStats.Timeline)
  fullName: RoomSettings.SpecificPath(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string SpecificPath(SlugcatStats.Timeline time)
    parameters:
    - id: time
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.SpecificPath(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Function SpecificPath(time As SlugcatStats.Timeline) As String
  overload: Global.RoomSettings.SpecificPath*
- uid: Global.RoomSettings.Load(SlugcatStats.Name)
  commentId: M:Global.RoomSettings.Load(SlugcatStats.Name)
  id: Load(SlugcatStats.Name)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Load(Name)
  nameWithType: RoomSettings.Load(SlugcatStats.Name)
  fullName: RoomSettings.Load(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Load(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public bool Load(SlugcatStats.Name playerChar)
    parameters:
    - id: playerChar
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerChar</parameter>
            <parameter>M:RoomSettings.Load(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.Load(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Function Load(playerChar As SlugcatStats.Name) As Boolean
  overload: Global.RoomSettings.Load*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.RoomSettings.Load(SlugcatStats.Timeline)
  commentId: M:Global.RoomSettings.Load(SlugcatStats.Timeline)
  id: Load(SlugcatStats.Timeline)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Load(Timeline)
  nameWithType: RoomSettings.Load(SlugcatStats.Timeline)
  fullName: RoomSettings.Load(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.Load(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Load(SlugcatStats.Timeline timelinePoint)
    parameters:
    - id: timelinePoint
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelinePoint</parameter>
            <parameter>M:RoomSettings.Load(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.Load(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Function Load(timelinePoint As SlugcatStats.Timeline) As Boolean
  overload: Global.RoomSettings.Load*
- uid: Global.RoomSettings.InheritEffects
  commentId: M:Global.RoomSettings.InheritEffects
  id: InheritEffects
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: InheritEffects()
  nameWithType: RoomSettings.InheritEffects()
  fullName: RoomSettings.InheritEffects()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.InheritEffects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InheritEffects()
    content.vb: Public Sub InheritEffects()
  overload: Global.RoomSettings.InheritEffects*
- uid: Global.RoomSettings.InheritAmbientSounds
  commentId: M:Global.RoomSettings.InheritAmbientSounds
  id: InheritAmbientSounds
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: InheritAmbientSounds()
  nameWithType: RoomSettings.InheritAmbientSounds()
  fullName: RoomSettings.InheritAmbientSounds()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.InheritAmbientSounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InheritAmbientSounds()
    content.vb: Public Sub InheritAmbientSounds()
  overload: Global.RoomSettings.InheritAmbientSounds*
- uid: Global.RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)
  commentId: M:Global.RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)
  id: RemoveEffect(RoomSettings.RoomEffect.Type)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RemoveEffect(Type)
  nameWithType: RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)
  fullName: RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveEffect(RoomSettings.RoomEffect.Type type)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RemoveEffect(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveEffect(type As RoomSettings.RoomEffect.Type)
  overload: Global.RoomSettings.RemoveEffect*
- uid: Global.RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)
  commentId: M:Global.RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)
  id: RemoveAmbientSound(AmbientSound.Type,System.String)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RemoveAmbientSound(Type, string)
  nameWithType: RoomSettings.RemoveAmbientSound(AmbientSound.Type, string)
  fullName: RoomSettings.RemoveAmbientSound(AmbientSound.Type, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveAmbientSound(AmbientSound.Type type, string sampleName)
    parameters:
    - id: type
      type: Global.AmbientSound.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)</parameter>
          </include>
        </markup>
    - id: sampleName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sampleName</parameter>
            <parameter>M:RoomSettings.RemoveAmbientSound(AmbientSound.Type,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveAmbientSound(type As AmbientSound.Type, sampleName As String)
  overload: Global.RoomSettings.RemoveAmbientSound*
  nameWithType.vb: RoomSettings.RemoveAmbientSound(AmbientSound.Type, String)
  fullName.vb: RoomSettings.RemoveAmbientSound(AmbientSound.Type, String)
  name.vb: RemoveAmbientSound(Type, String)
- uid: Global.RoomSettings.SetTemplate(System.String,Region)
  commentId: M:Global.RoomSettings.SetTemplate(System.String,Region)
  id: SetTemplate(System.String,Region)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SetTemplate(string, Region)
  nameWithType: RoomSettings.SetTemplate(string, Region)
  fullName: RoomSettings.SetTemplate(string, Region)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.SetTemplate(System.String,Region)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetTemplate(string buttonText, Region region)
    parameters:
    - id: buttonText
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buttonText</parameter>
            <parameter>M:RoomSettings.SetTemplate(System.String,Region)</parameter>
          </include>
        </markup>
    - id: region
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:RoomSettings.SetTemplate(System.String,Region)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetTemplate(buttonText As String, region As Region)
  overload: Global.RoomSettings.SetTemplate*
  nameWithType.vb: RoomSettings.SetTemplate(String, Region)
  fullName.vb: RoomSettings.SetTemplate(String, Region)
  name.vb: SetTemplate(String, Region)
- uid: Global.RoomSettings.SaveAsTemplate(System.String,Region)
  commentId: M:Global.RoomSettings.SaveAsTemplate(System.String,Region)
  id: SaveAsTemplate(System.String,Region)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SaveAsTemplate(string, Region)
  nameWithType: RoomSettings.SaveAsTemplate(string, Region)
  fullName: RoomSettings.SaveAsTemplate(string, Region)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.SaveAsTemplate(System.String,Region)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveAsTemplate(string buttonText, Region region)
    parameters:
    - id: buttonText
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>buttonText</parameter>
            <parameter>M:RoomSettings.SaveAsTemplate(System.String,Region)</parameter>
          </include>
        </markup>
    - id: region
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:RoomSettings.SaveAsTemplate(System.String,Region)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SaveAsTemplate(buttonText As String, region As Region)
  overload: Global.RoomSettings.SaveAsTemplate*
  nameWithType.vb: RoomSettings.SaveAsTemplate(String, Region)
  fullName.vb: RoomSettings.SaveAsTemplate(String, Region)
  name.vb: SaveAsTemplate(String, Region)
- uid: Global.RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)
  commentId: M:Global.RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)
  id: GetEffect(RoomSettings.RoomEffect.Type)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: GetEffect(Type)
  nameWithType: RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)
  fullName: RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings.RoomEffect GetEffect(RoomSettings.RoomEffect.Type type)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    return:
      type: Global.RoomSettings.RoomEffect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.GetEffect(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetEffect(type As RoomSettings.RoomEffect.Type) As RoomSettings.RoomEffect
  overload: Global.RoomSettings.GetEffect*
- uid: Global.RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)
  commentId: M:Global.RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)
  id: GetEffectAmount(RoomSettings.RoomEffect.Type)
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: GetEffectAmount(Type)
  nameWithType: RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)
  fullName: RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetEffectAmount(RoomSettings.RoomEffect.Type type)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.GetEffectAmount(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetEffectAmount(type As RoomSettings.RoomEffect.Type) As Single
  overload: Global.RoomSettings.GetEffectAmount*
- uid: Global.RoomSettings.DangerType
  commentId: P:Global.RoomSettings.DangerType
  id: DangerType
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: DangerType
  nameWithType: RoomSettings.DangerType
  fullName: RoomSettings.DangerType
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.DangerType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomRain.DangerType DangerType { get; set; }
    parameters: []
    return:
      type: Global.RoomRain.DangerType
    content.vb: Public Property DangerType As RoomRain.DangerType
  overload: Global.RoomSettings.DangerType*
- uid: Global.RoomSettings.RainIntensity
  commentId: P:Global.RoomSettings.RainIntensity
  id: RainIntensity
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RainIntensity
  nameWithType: RoomSettings.RainIntensity
  fullName: RoomSettings.RainIntensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.RainIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RainIntensity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RainIntensity As Single
  overload: Global.RoomSettings.RainIntensity*
- uid: Global.RoomSettings.RumbleIntensity
  commentId: P:Global.RoomSettings.RumbleIntensity
  id: RumbleIntensity
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RumbleIntensity
  nameWithType: RoomSettings.RumbleIntensity
  fullName: RoomSettings.RumbleIntensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.RumbleIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RumbleIntensity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RumbleIntensity As Single
  overload: Global.RoomSettings.RumbleIntensity*
- uid: Global.RoomSettings.CeilingDrips
  commentId: P:Global.RoomSettings.CeilingDrips
  id: CeilingDrips
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: CeilingDrips
  nameWithType: RoomSettings.CeilingDrips
  fullName: RoomSettings.CeilingDrips
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.CeilingDrips</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CeilingDrips { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property CeilingDrips As Single
  overload: Global.RoomSettings.CeilingDrips*
- uid: Global.RoomSettings.WaveSpeed
  commentId: P:Global.RoomSettings.WaveSpeed
  id: WaveSpeed
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: WaveSpeed
  nameWithType: RoomSettings.WaveSpeed
  fullName: RoomSettings.WaveSpeed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.WaveSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaveSpeed { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WaveSpeed As Single
  overload: Global.RoomSettings.WaveSpeed*
- uid: Global.RoomSettings.WaveAmplitude
  commentId: P:Global.RoomSettings.WaveAmplitude
  id: WaveAmplitude
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: WaveAmplitude
  nameWithType: RoomSettings.WaveAmplitude
  fullName: RoomSettings.WaveAmplitude
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.WaveAmplitude</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaveAmplitude { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WaveAmplitude As Single
  overload: Global.RoomSettings.WaveAmplitude*
- uid: Global.RoomSettings.WaveLength
  commentId: P:Global.RoomSettings.WaveLength
  id: WaveLength
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: WaveLength
  nameWithType: RoomSettings.WaveLength
  fullName: RoomSettings.WaveLength
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.WaveLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaveLength { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WaveLength As Single
  overload: Global.RoomSettings.WaveLength*
- uid: Global.RoomSettings.SecondWaveAmplitude
  commentId: P:Global.RoomSettings.SecondWaveAmplitude
  id: SecondWaveAmplitude
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SecondWaveAmplitude
  nameWithType: RoomSettings.SecondWaveAmplitude
  fullName: RoomSettings.SecondWaveAmplitude
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.SecondWaveAmplitude</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float SecondWaveAmplitude { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property SecondWaveAmplitude As Single
  overload: Global.RoomSettings.SecondWaveAmplitude*
- uid: Global.RoomSettings.SecondWaveLength
  commentId: P:Global.RoomSettings.SecondWaveLength
  id: SecondWaveLength
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: SecondWaveLength
  nameWithType: RoomSettings.SecondWaveLength
  fullName: RoomSettings.SecondWaveLength
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.SecondWaveLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float SecondWaveLength { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property SecondWaveLength As Single
  overload: Global.RoomSettings.SecondWaveLength*
- uid: Global.RoomSettings.Clouds
  commentId: P:Global.RoomSettings.Clouds
  id: Clouds
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Clouds
  nameWithType: RoomSettings.Clouds
  fullName: RoomSettings.Clouds
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.Clouds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Clouds { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Clouds As Single
  overload: Global.RoomSettings.Clouds*
- uid: Global.RoomSettings.Grime
  commentId: P:Global.RoomSettings.Grime
  id: Grime
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Grime
  nameWithType: RoomSettings.Grime
  fullName: RoomSettings.Grime
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.Grime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Grime { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Grime As Single
  overload: Global.RoomSettings.Grime*
- uid: Global.RoomSettings.BkgDroneVolume
  commentId: P:Global.RoomSettings.BkgDroneVolume
  id: BkgDroneVolume
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: BkgDroneVolume
  nameWithType: RoomSettings.BkgDroneVolume
  fullName: RoomSettings.BkgDroneVolume
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.BkgDroneVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BkgDroneVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property BkgDroneVolume As Single
  overload: Global.RoomSettings.BkgDroneVolume*
- uid: Global.RoomSettings.BkgDroneNoThreatVolume
  commentId: P:Global.RoomSettings.BkgDroneNoThreatVolume
  id: BkgDroneNoThreatVolume
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: BkgDroneNoThreatVolume
  nameWithType: RoomSettings.BkgDroneNoThreatVolume
  fullName: RoomSettings.BkgDroneNoThreatVolume
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.BkgDroneNoThreatVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BkgDroneNoThreatVolume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property BkgDroneNoThreatVolume As Single
  overload: Global.RoomSettings.BkgDroneNoThreatVolume*
- uid: Global.RoomSettings.RandomItemDensity
  commentId: P:Global.RoomSettings.RandomItemDensity
  id: RandomItemDensity
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RandomItemDensity
  nameWithType: RoomSettings.RandomItemDensity
  fullName: RoomSettings.RandomItemDensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.RandomItemDensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RandomItemDensity { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RandomItemDensity As Single
  overload: Global.RoomSettings.RandomItemDensity*
- uid: Global.RoomSettings.RandomItemSpearChance
  commentId: P:Global.RoomSettings.RandomItemSpearChance
  id: RandomItemSpearChance
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: RandomItemSpearChance
  nameWithType: RoomSettings.RandomItemSpearChance
  fullName: RoomSettings.RandomItemSpearChance
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.RandomItemSpearChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RandomItemSpearChance { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property RandomItemSpearChance As Single
  overload: Global.RoomSettings.RandomItemSpearChance*
- uid: Global.RoomSettings.WaterReflectionAlpha
  commentId: P:Global.RoomSettings.WaterReflectionAlpha
  id: WaterReflectionAlpha
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: WaterReflectionAlpha
  nameWithType: RoomSettings.WaterReflectionAlpha
  fullName: RoomSettings.WaterReflectionAlpha
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.WaterReflectionAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaterReflectionAlpha { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property WaterReflectionAlpha As Single
  overload: Global.RoomSettings.WaterReflectionAlpha*
- uid: Global.RoomSettings.Palette
  commentId: P:Global.RoomSettings.Palette
  id: Palette
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: Palette
  nameWithType: RoomSettings.Palette
  fullName: RoomSettings.Palette
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.Palette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Palette { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Palette As Integer
  overload: Global.RoomSettings.Palette*
- uid: Global.RoomSettings.EffectColorA
  commentId: P:Global.RoomSettings.EffectColorA
  id: EffectColorA
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: EffectColorA
  nameWithType: RoomSettings.EffectColorA
  fullName: RoomSettings.EffectColorA
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.EffectColorA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int EffectColorA { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EffectColorA As Integer
  overload: Global.RoomSettings.EffectColorA*
- uid: Global.RoomSettings.EffectColorB
  commentId: P:Global.RoomSettings.EffectColorB
  id: EffectColorB
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: EffectColorB
  nameWithType: RoomSettings.EffectColorB
  fullName: RoomSettings.EffectColorB
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.EffectColorB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int EffectColorB { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property EffectColorB As Integer
  overload: Global.RoomSettings.EffectColorB*
- uid: Global.RoomSettings.TerrainLight
  commentId: P:Global.RoomSettings.TerrainLight
  id: TerrainLight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainLight
  nameWithType: RoomSettings.TerrainLight
  fullName: RoomSettings.TerrainLight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainLight { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainLight As Single
  overload: Global.RoomSettings.TerrainLight*
- uid: Global.RoomSettings.TerrainStainAmount
  commentId: P:Global.RoomSettings.TerrainStainAmount
  id: TerrainStainAmount
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainStainAmount
  nameWithType: RoomSettings.TerrainStainAmount
  fullName: RoomSettings.TerrainStainAmount
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainStainAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainStainAmount { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainStainAmount As Single
  overload: Global.RoomSettings.TerrainStainAmount*
- uid: Global.RoomSettings.TerrainStainBrightness
  commentId: P:Global.RoomSettings.TerrainStainBrightness
  id: TerrainStainBrightness
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainStainBrightness
  nameWithType: RoomSettings.TerrainStainBrightness
  fullName: RoomSettings.TerrainStainBrightness
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainStainBrightness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainStainBrightness { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainStainBrightness As Single
  overload: Global.RoomSettings.TerrainStainBrightness*
- uid: Global.RoomSettings.TerrainStainHeight
  commentId: P:Global.RoomSettings.TerrainStainHeight
  id: TerrainStainHeight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainStainHeight
  nameWithType: RoomSettings.TerrainStainHeight
  fullName: RoomSettings.TerrainStainHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainStainHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainStainHeight { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainStainHeight As Single
  overload: Global.RoomSettings.TerrainStainHeight*
- uid: Global.RoomSettings.TerrainWaves
  commentId: P:Global.RoomSettings.TerrainWaves
  id: TerrainWaves
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainWaves
  nameWithType: RoomSettings.TerrainWaves
  fullName: RoomSettings.TerrainWaves
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainWaves</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainWaves { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainWaves As Single
  overload: Global.RoomSettings.TerrainWaves*
- uid: Global.RoomSettings.TerrainEdgeRadius
  commentId: P:Global.RoomSettings.TerrainEdgeRadius
  id: TerrainEdgeRadius
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainEdgeRadius
  nameWithType: RoomSettings.TerrainEdgeRadius
  fullName: RoomSettings.TerrainEdgeRadius
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainEdgeRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainEdgeRadius { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainEdgeRadius As Single
  overload: Global.RoomSettings.TerrainEdgeRadius*
- uid: Global.RoomSettings.TerrainGooHeight
  commentId: P:Global.RoomSettings.TerrainGooHeight
  id: TerrainGooHeight
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainGooHeight
  nameWithType: RoomSettings.TerrainGooHeight
  fullName: RoomSettings.TerrainGooHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainGooHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainGooHeight { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainGooHeight As Single
  overload: Global.RoomSettings.TerrainGooHeight*
- uid: Global.RoomSettings.TerrainGrain
  commentId: P:Global.RoomSettings.TerrainGrain
  id: TerrainGrain
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainGrain
  nameWithType: RoomSettings.TerrainGrain
  fullName: RoomSettings.TerrainGrain
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainGrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainGrain { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainGrain As Single
  overload: Global.RoomSettings.TerrainGrain*
- uid: Global.RoomSettings.TerrainDepth
  commentId: P:Global.RoomSettings.TerrainDepth
  id: TerrainDepth
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainDepth
  nameWithType: RoomSettings.TerrainDepth
  fullName: RoomSettings.TerrainDepth
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainDepth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainDepth { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainDepth As Single
  overload: Global.RoomSettings.TerrainDepth*
- uid: Global.RoomSettings.TerrainSkyFade
  commentId: P:Global.RoomSettings.TerrainSkyFade
  id: TerrainSkyFade
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainSkyFade
  nameWithType: RoomSettings.TerrainSkyFade
  fullName: RoomSettings.TerrainSkyFade
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainSkyFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TerrainSkyFade { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property TerrainSkyFade As Single
  overload: Global.RoomSettings.TerrainSkyFade*
- uid: Global.RoomSettings.TerrainPalette
  commentId: P:Global.RoomSettings.TerrainPalette
  id: TerrainPalette
  parent: Global.RoomSettings
  langs:
  - csharp
  - vb
  name: TerrainPalette
  nameWithType: RoomSettings.TerrainPalette
  fullName: RoomSettings.TerrainPalette
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomSettings.TerrainPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string TerrainPalette { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TerrainPalette As String
  overload: Global.RoomSettings.TerrainPalette*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RoomSettings
  commentId: T:Global.RoomSettings
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings
  nameWithType: RoomSettings
  fullName: RoomSettings
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.RoomRain.DangerType
  commentId: T:Global.RoomRain.DangerType
  isExternal: true
  href: RoomRain.html
  name: RoomRain.DangerType
  nameWithType: RoomRain.DangerType
  fullName: RoomRain.DangerType
  spec.csharp:
  - uid: Global.RoomRain
    name: RoomRain
    isExternal: true
    href: RoomRain.html
  - name: .
  - uid: Global.RoomRain.DangerType
    name: DangerType
    isExternal: true
    href: RoomRain.DangerType.html
  spec.vb:
  - uid: Global.RoomRain
    name: RoomRain
    isExternal: true
    href: RoomRain.html
  - name: .
  - uid: Global.RoomRain.DangerType
    name: DangerType
    isExternal: true
    href: RoomRain.DangerType.html
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.RoomSettings.FadePalette
  commentId: T:Global.RoomSettings.FadePalette
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings.FadePalette
  nameWithType: RoomSettings.FadePalette
  fullName: RoomSettings.FadePalette
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.FadePalette
    name: FadePalette
    isExternal: true
    href: RoomSettings.FadePalette.html
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.FadePalette
    name: FadePalette
    isExternal: true
    href: RoomSettings.FadePalette.html
- uid: Global.RoomSettings.TerrainFadePalette
  commentId: T:Global.RoomSettings.TerrainFadePalette
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings.TerrainFadePalette
  nameWithType: RoomSettings.TerrainFadePalette
  fullName: RoomSettings.TerrainFadePalette
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.TerrainFadePalette
    name: TerrainFadePalette
    isExternal: true
    href: RoomSettings.TerrainFadePalette.html
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.TerrainFadePalette
    name: TerrainFadePalette
    isExternal: true
    href: RoomSettings.TerrainFadePalette.html
- uid: System.Collections.Generic.List{RoomSettings.RoomEffect}
  commentId: T:System.Collections.Generic.List{RoomSettings.RoomEffect}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RoomSettings.RoomEffect>
  nameWithType: List<RoomSettings.RoomEffect>
  fullName: System.Collections.Generic.List<RoomSettings.RoomEffect>
  nameWithType.vb: List(Of RoomSettings.RoomEffect)
  fullName.vb: System.Collections.Generic.List(Of RoomSettings.RoomEffect)
  name.vb: List(Of RoomSettings.RoomEffect)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{AmbientSound}
  commentId: T:System.Collections.Generic.List{AmbientSound}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AmbientSound>
  nameWithType: List<AmbientSound>
  fullName: System.Collections.Generic.List<AmbientSound>
  nameWithType.vb: List(Of AmbientSound)
  fullName.vb: System.Collections.Generic.List(Of AmbientSound)
  name.vb: List(Of AmbientSound)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: )
- uid: System.Collections.Generic.List{EventTrigger}
  commentId: T:System.Collections.Generic.List{EventTrigger}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EventTrigger>
  nameWithType: List<EventTrigger>
  fullName: System.Collections.Generic.List<EventTrigger>
  nameWithType.vb: List(Of EventTrigger)
  fullName.vb: System.Collections.Generic.List(Of EventTrigger)
  name.vb: List(Of EventTrigger)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.EventTrigger
    name: EventTrigger
    isExternal: true
    href: EventTrigger.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.EventTrigger
    name: EventTrigger
    isExternal: true
    href: EventTrigger.html
  - name: )
- uid: System.Collections.Generic.List{PlacedObject}
  commentId: T:System.Collections.Generic.List{PlacedObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlacedObject>
  nameWithType: List<PlacedObject>
  fullName: System.Collections.Generic.List<PlacedObject>
  nameWithType.vb: List(Of PlacedObject)
  fullName.vb: System.Collections.Generic.List(Of PlacedObject)
  name.vb: List(Of PlacedObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: )
- uid: Global.RoomSettings.Reset*
  commentId: Overload:Global.RoomSettings.Reset
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Reset
  name: Reset
  nameWithType: RoomSettings.Reset
  fullName: RoomSettings.Reset
- uid: Global.RoomSettings.#ctor*
  commentId: Overload:Global.RoomSettings.#ctor
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings__ctor_System_String_Region_System_Boolean_System_Boolean_SlugcatStats_Name_
  name: RoomSettings
  nameWithType: RoomSettings.RoomSettings
  fullName: RoomSettings.RoomSettings
  nameWithType.vb: RoomSettings.New
  fullName.vb: RoomSettings.New
  name.vb: New
- uid: Global.Region
  commentId: T:Global.Region
  isExternal: true
  href: Region.html
  name: Region
  nameWithType: Region
  fullName: Region
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.SlugcatStats.Timeline
  commentId: T:Global.SlugcatStats.Timeline
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Timeline
  nameWithType: SlugcatStats.Timeline
  fullName: SlugcatStats.Timeline
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
- uid: Global.RoomSettings.Save*
  commentId: Overload:Global.RoomSettings.Save
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Save
  name: Save
  nameWithType: RoomSettings.Save
  fullName: RoomSettings.Save
- uid: Global.RoomSettings.SpecificPath*
  commentId: Overload:Global.RoomSettings.SpecificPath
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_SpecificPath_SlugcatStats_Name_
  name: SpecificPath
  nameWithType: RoomSettings.SpecificPath
  fullName: RoomSettings.SpecificPath
- uid: Global.RoomSettings.Load*
  commentId: Overload:Global.RoomSettings.Load
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Load_SlugcatStats_Name_
  name: Load
  nameWithType: RoomSettings.Load
  fullName: RoomSettings.Load
- uid: Global.RoomSettings.InheritEffects*
  commentId: Overload:Global.RoomSettings.InheritEffects
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_InheritEffects
  name: InheritEffects
  nameWithType: RoomSettings.InheritEffects
  fullName: RoomSettings.InheritEffects
- uid: Global.RoomSettings.InheritAmbientSounds*
  commentId: Overload:Global.RoomSettings.InheritAmbientSounds
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_InheritAmbientSounds
  name: InheritAmbientSounds
  nameWithType: RoomSettings.InheritAmbientSounds
  fullName: RoomSettings.InheritAmbientSounds
- uid: Global.RoomSettings.RemoveEffect*
  commentId: Overload:Global.RoomSettings.RemoveEffect
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RemoveEffect_RoomSettings_RoomEffect_Type_
  name: RemoveEffect
  nameWithType: RoomSettings.RemoveEffect
  fullName: RoomSettings.RemoveEffect
- uid: Global.RoomSettings.RoomEffect.Type
  commentId: T:Global.RoomSettings.RoomEffect.Type
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings.RoomEffect.Type
  nameWithType: RoomSettings.RoomEffect.Type
  fullName: RoomSettings.RoomEffect.Type
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect.Type
    name: Type
    isExternal: true
    href: RoomSettings.RoomEffect.Type.html
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect.Type
    name: Type
    isExternal: true
    href: RoomSettings.RoomEffect.Type.html
- uid: Global.RoomSettings.RemoveAmbientSound*
  commentId: Overload:Global.RoomSettings.RemoveAmbientSound
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RemoveAmbientSound_AmbientSound_Type_System_String_
  name: RemoveAmbientSound
  nameWithType: RoomSettings.RemoveAmbientSound
  fullName: RoomSettings.RemoveAmbientSound
- uid: Global.AmbientSound.Type
  commentId: T:Global.AmbientSound.Type
  isExternal: true
  href: AmbientSound.html
  name: AmbientSound.Type
  nameWithType: AmbientSound.Type
  fullName: AmbientSound.Type
  spec.csharp:
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: .
  - uid: Global.AmbientSound.Type
    name: Type
    isExternal: true
    href: AmbientSound.Type.html
  spec.vb:
  - uid: Global.AmbientSound
    name: AmbientSound
    isExternal: true
    href: AmbientSound.html
  - name: .
  - uid: Global.AmbientSound.Type
    name: Type
    isExternal: true
    href: AmbientSound.Type.html
- uid: Global.RoomSettings.SetTemplate*
  commentId: Overload:Global.RoomSettings.SetTemplate
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_SetTemplate_System_String_Region_
  name: SetTemplate
  nameWithType: RoomSettings.SetTemplate
  fullName: RoomSettings.SetTemplate
- uid: Global.RoomSettings.SaveAsTemplate*
  commentId: Overload:Global.RoomSettings.SaveAsTemplate
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_SaveAsTemplate_System_String_Region_
  name: SaveAsTemplate
  nameWithType: RoomSettings.SaveAsTemplate
  fullName: RoomSettings.SaveAsTemplate
- uid: Global.RoomSettings.GetEffect*
  commentId: Overload:Global.RoomSettings.GetEffect
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_GetEffect_RoomSettings_RoomEffect_Type_
  name: GetEffect
  nameWithType: RoomSettings.GetEffect
  fullName: RoomSettings.GetEffect
- uid: Global.RoomSettings.RoomEffect
  commentId: T:Global.RoomSettings.RoomEffect
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings.RoomEffect
  nameWithType: RoomSettings.RoomEffect
  fullName: RoomSettings.RoomEffect
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
- uid: Global.RoomSettings.GetEffectAmount*
  commentId: Overload:Global.RoomSettings.GetEffectAmount
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_GetEffectAmount_RoomSettings_RoomEffect_Type_
  name: GetEffectAmount
  nameWithType: RoomSettings.GetEffectAmount
  fullName: RoomSettings.GetEffectAmount
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RoomSettings.DangerType*
  commentId: Overload:Global.RoomSettings.DangerType
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_DangerType
  name: DangerType
  nameWithType: RoomSettings.DangerType
  fullName: RoomSettings.DangerType
- uid: Global.RoomSettings.RainIntensity*
  commentId: Overload:Global.RoomSettings.RainIntensity
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RainIntensity
  name: RainIntensity
  nameWithType: RoomSettings.RainIntensity
  fullName: RoomSettings.RainIntensity
- uid: Global.RoomSettings.RumbleIntensity*
  commentId: Overload:Global.RoomSettings.RumbleIntensity
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RumbleIntensity
  name: RumbleIntensity
  nameWithType: RoomSettings.RumbleIntensity
  fullName: RoomSettings.RumbleIntensity
- uid: Global.RoomSettings.CeilingDrips*
  commentId: Overload:Global.RoomSettings.CeilingDrips
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_CeilingDrips
  name: CeilingDrips
  nameWithType: RoomSettings.CeilingDrips
  fullName: RoomSettings.CeilingDrips
- uid: Global.RoomSettings.WaveSpeed*
  commentId: Overload:Global.RoomSettings.WaveSpeed
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_WaveSpeed
  name: WaveSpeed
  nameWithType: RoomSettings.WaveSpeed
  fullName: RoomSettings.WaveSpeed
- uid: Global.RoomSettings.WaveAmplitude*
  commentId: Overload:Global.RoomSettings.WaveAmplitude
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_WaveAmplitude
  name: WaveAmplitude
  nameWithType: RoomSettings.WaveAmplitude
  fullName: RoomSettings.WaveAmplitude
- uid: Global.RoomSettings.WaveLength*
  commentId: Overload:Global.RoomSettings.WaveLength
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_WaveLength
  name: WaveLength
  nameWithType: RoomSettings.WaveLength
  fullName: RoomSettings.WaveLength
- uid: Global.RoomSettings.SecondWaveAmplitude*
  commentId: Overload:Global.RoomSettings.SecondWaveAmplitude
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_SecondWaveAmplitude
  name: SecondWaveAmplitude
  nameWithType: RoomSettings.SecondWaveAmplitude
  fullName: RoomSettings.SecondWaveAmplitude
- uid: Global.RoomSettings.SecondWaveLength*
  commentId: Overload:Global.RoomSettings.SecondWaveLength
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_SecondWaveLength
  name: SecondWaveLength
  nameWithType: RoomSettings.SecondWaveLength
  fullName: RoomSettings.SecondWaveLength
- uid: Global.RoomSettings.Clouds*
  commentId: Overload:Global.RoomSettings.Clouds
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Clouds
  name: Clouds
  nameWithType: RoomSettings.Clouds
  fullName: RoomSettings.Clouds
- uid: Global.RoomSettings.Grime*
  commentId: Overload:Global.RoomSettings.Grime
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Grime
  name: Grime
  nameWithType: RoomSettings.Grime
  fullName: RoomSettings.Grime
- uid: Global.RoomSettings.BkgDroneVolume*
  commentId: Overload:Global.RoomSettings.BkgDroneVolume
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_BkgDroneVolume
  name: BkgDroneVolume
  nameWithType: RoomSettings.BkgDroneVolume
  fullName: RoomSettings.BkgDroneVolume
- uid: Global.RoomSettings.BkgDroneNoThreatVolume*
  commentId: Overload:Global.RoomSettings.BkgDroneNoThreatVolume
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_BkgDroneNoThreatVolume
  name: BkgDroneNoThreatVolume
  nameWithType: RoomSettings.BkgDroneNoThreatVolume
  fullName: RoomSettings.BkgDroneNoThreatVolume
- uid: Global.RoomSettings.RandomItemDensity*
  commentId: Overload:Global.RoomSettings.RandomItemDensity
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RandomItemDensity
  name: RandomItemDensity
  nameWithType: RoomSettings.RandomItemDensity
  fullName: RoomSettings.RandomItemDensity
- uid: Global.RoomSettings.RandomItemSpearChance*
  commentId: Overload:Global.RoomSettings.RandomItemSpearChance
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_RandomItemSpearChance
  name: RandomItemSpearChance
  nameWithType: RoomSettings.RandomItemSpearChance
  fullName: RoomSettings.RandomItemSpearChance
- uid: Global.RoomSettings.WaterReflectionAlpha*
  commentId: Overload:Global.RoomSettings.WaterReflectionAlpha
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_WaterReflectionAlpha
  name: WaterReflectionAlpha
  nameWithType: RoomSettings.WaterReflectionAlpha
  fullName: RoomSettings.WaterReflectionAlpha
- uid: Global.RoomSettings.Palette*
  commentId: Overload:Global.RoomSettings.Palette
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_Palette
  name: Palette
  nameWithType: RoomSettings.Palette
  fullName: RoomSettings.Palette
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.RoomSettings.EffectColorA*
  commentId: Overload:Global.RoomSettings.EffectColorA
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_EffectColorA
  name: EffectColorA
  nameWithType: RoomSettings.EffectColorA
  fullName: RoomSettings.EffectColorA
- uid: Global.RoomSettings.EffectColorB*
  commentId: Overload:Global.RoomSettings.EffectColorB
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_EffectColorB
  name: EffectColorB
  nameWithType: RoomSettings.EffectColorB
  fullName: RoomSettings.EffectColorB
- uid: Global.RoomSettings.TerrainLight*
  commentId: Overload:Global.RoomSettings.TerrainLight
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainLight
  name: TerrainLight
  nameWithType: RoomSettings.TerrainLight
  fullName: RoomSettings.TerrainLight
- uid: Global.RoomSettings.TerrainStainAmount*
  commentId: Overload:Global.RoomSettings.TerrainStainAmount
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainStainAmount
  name: TerrainStainAmount
  nameWithType: RoomSettings.TerrainStainAmount
  fullName: RoomSettings.TerrainStainAmount
- uid: Global.RoomSettings.TerrainStainBrightness*
  commentId: Overload:Global.RoomSettings.TerrainStainBrightness
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainStainBrightness
  name: TerrainStainBrightness
  nameWithType: RoomSettings.TerrainStainBrightness
  fullName: RoomSettings.TerrainStainBrightness
- uid: Global.RoomSettings.TerrainStainHeight*
  commentId: Overload:Global.RoomSettings.TerrainStainHeight
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainStainHeight
  name: TerrainStainHeight
  nameWithType: RoomSettings.TerrainStainHeight
  fullName: RoomSettings.TerrainStainHeight
- uid: Global.RoomSettings.TerrainWaves*
  commentId: Overload:Global.RoomSettings.TerrainWaves
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainWaves
  name: TerrainWaves
  nameWithType: RoomSettings.TerrainWaves
  fullName: RoomSettings.TerrainWaves
- uid: Global.RoomSettings.TerrainEdgeRadius*
  commentId: Overload:Global.RoomSettings.TerrainEdgeRadius
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainEdgeRadius
  name: TerrainEdgeRadius
  nameWithType: RoomSettings.TerrainEdgeRadius
  fullName: RoomSettings.TerrainEdgeRadius
- uid: Global.RoomSettings.TerrainGooHeight*
  commentId: Overload:Global.RoomSettings.TerrainGooHeight
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainGooHeight
  name: TerrainGooHeight
  nameWithType: RoomSettings.TerrainGooHeight
  fullName: RoomSettings.TerrainGooHeight
- uid: Global.RoomSettings.TerrainGrain*
  commentId: Overload:Global.RoomSettings.TerrainGrain
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainGrain
  name: TerrainGrain
  nameWithType: RoomSettings.TerrainGrain
  fullName: RoomSettings.TerrainGrain
- uid: Global.RoomSettings.TerrainDepth*
  commentId: Overload:Global.RoomSettings.TerrainDepth
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainDepth
  name: TerrainDepth
  nameWithType: RoomSettings.TerrainDepth
  fullName: RoomSettings.TerrainDepth
- uid: Global.RoomSettings.TerrainSkyFade*
  commentId: Overload:Global.RoomSettings.TerrainSkyFade
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainSkyFade
  name: TerrainSkyFade
  nameWithType: RoomSettings.TerrainSkyFade
  fullName: RoomSettings.TerrainSkyFade
- uid: Global.RoomSettings.TerrainPalette*
  commentId: Overload:Global.RoomSettings.TerrainPalette
  isExternal: true
  href: Global.RoomSettings.html#RoomSettings_TerrainPalette
  name: TerrainPalette
  nameWithType: RoomSettings.TerrainPalette
  fullName: RoomSettings.TerrainPalette
