### YamlMime:ManagedReference
items:
- uid: Global.DaddyLongLegs.IHaveRotParts
  commentId: T:Global.DaddyLongLegs.IHaveRotParts
  id: DaddyLongLegs.IHaveRotParts
  parent: Global
  children:
  - Global.DaddyLongLegs.IHaveRotParts.RotAI
  - Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  - Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  - Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  - Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  - Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  - Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  - Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  - Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  langs:
  - csharp
  - vb
  name: DaddyLongLegs.IHaveRotParts
  nameWithType: DaddyLongLegs.IHaveRotParts
  fullName: DaddyLongLegs.IHaveRotParts
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DaddyLongLegs.IHaveRotParts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface DaddyLongLegs.IHaveRotParts
    content.vb: Public Interface DaddyLongLegs.IHaveRotParts
- uid: Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  id: RotGraphicsOwner
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotGraphicsOwner
  nameWithType: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  fullName: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotGraphicsOwner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: DaddyGraphics.IHaveRotGraphics RotGraphicsOwner { get; }
    parameters: []
    return:
      type: Global.DaddyGraphics.IHaveRotGraphics
    content.vb: ReadOnly Property RotGraphicsOwner As DaddyGraphics.IHaveRotGraphics
  overload: Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  id: RotTentacles
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotTentacles
  nameWithType: DaddyLongLegs.IHaveRotParts.RotTentacles
  fullName: DaddyLongLegs.IHaveRotParts.RotTentacles
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotTentacles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: DaddyTentacle[] RotTentacles { get; }
    parameters: []
    return:
      type: Global.DaddyTentacle[]
    content.vb: ReadOnly Property RotTentacles As DaddyTentacle()
  overload: Global.DaddyLongLegs.IHaveRotParts.RotTentacles*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotAI
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotAI
  id: RotAI
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotAI
  nameWithType: DaddyLongLegs.IHaveRotParts.RotAI
  fullName: DaddyLongLegs.IHaveRotParts.RotAI
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: ArtificialIntelligence RotAI { get; }
    parameters: []
    return:
      type: Global.ArtificialIntelligence
    content.vb: ReadOnly Property RotAI As ArtificialIntelligence
  overload: Global.DaddyLongLegs.IHaveRotParts.RotAI*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  id: RotMoveDirection
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotMoveDirection
  nameWithType: DaddyLongLegs.IHaveRotParts.RotMoveDirection
  fullName: DaddyLongLegs.IHaveRotParts.RotMoveDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotMoveDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 RotMoveDirection { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: ReadOnly Property RotMoveDirection As Vector2
  overload: Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  id: RotSizeClass
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotSizeClass
  nameWithType: DaddyLongLegs.IHaveRotParts.RotSizeClass
  fullName: DaddyLongLegs.IHaveRotParts.RotSizeClass
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotSizeClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool RotSizeClass { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property RotSizeClass As Boolean
  overload: Global.DaddyLongLegs.IHaveRotParts.RotSizeClass*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  id: RotEyeColor
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotEyeColor
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyeColor
  fullName: DaddyLongLegs.IHaveRotParts.RotEyeColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotEyeColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Color RotEyeColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: ReadOnly Property RotEyeColor As Color
  overload: Global.DaddyLongLegs.IHaveRotParts.RotEyeColor*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  id: RotEyesClose
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotEyesClose
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyesClose
  fullName: DaddyLongLegs.IHaveRotParts.RotEyesClose
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotEyesClose</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: int RotEyesClose { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RotEyesClose As Integer
  overload: Global.DaddyLongLegs.IHaveRotParts.RotEyesClose*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  id: RotDigesting
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotDigesting
  nameWithType: DaddyLongLegs.IHaveRotParts.RotDigesting
  fullName: DaddyLongLegs.IHaveRotParts.RotDigesting
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotDigesting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool RotDigesting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: ReadOnly Property RotDigesting As Boolean
  overload: Global.DaddyLongLegs.IHaveRotParts.RotDigesting*
- uid: Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  id: RotStuckCounter
  parent: Global.DaddyLongLegs.IHaveRotParts
  langs:
  - csharp
  - vb
  name: RotStuckCounter
  nameWithType: DaddyLongLegs.IHaveRotParts.RotStuckCounter
  fullName: DaddyLongLegs.IHaveRotParts.RotStuckCounter
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveRotParts.RotStuckCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: int RotStuckCounter { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: ReadOnly Property RotStuckCounter As Integer
  overload: Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter*
references:
- uid: Global
- uid: Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotGraphicsOwner
  name: RotGraphicsOwner
  nameWithType: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  fullName: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
- uid: Global.DaddyGraphics.IHaveRotGraphics
  commentId: T:Global.DaddyGraphics.IHaveRotGraphics
  isExternal: true
  href: DaddyGraphics.html
  name: DaddyGraphics.IHaveRotGraphics
  nameWithType: DaddyGraphics.IHaveRotGraphics
  fullName: DaddyGraphics.IHaveRotGraphics
  spec.csharp:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
  spec.vb:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
- uid: Global.DaddyLongLegs.IHaveRotParts.RotTentacles*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotTentacles
  name: RotTentacles
  nameWithType: DaddyLongLegs.IHaveRotParts.RotTentacles
  fullName: DaddyLongLegs.IHaveRotParts.RotTentacles
- uid: Global.DaddyTentacle[]
  isExternal: true
  href: DaddyTentacle.html
  name: DaddyTentacle[]
  nameWithType: DaddyTentacle[]
  fullName: DaddyTentacle[]
  nameWithType.vb: DaddyTentacle()
  fullName.vb: DaddyTentacle()
  name.vb: DaddyTentacle()
  spec.csharp:
  - uid: Global.DaddyTentacle
    name: DaddyTentacle
    isExternal: true
    href: DaddyTentacle.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.DaddyTentacle
    name: DaddyTentacle
    isExternal: true
    href: DaddyTentacle.html
  - name: (
  - name: )
- uid: Global.DaddyLongLegs.IHaveRotParts.RotAI*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotAI
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotAI
  name: RotAI
  nameWithType: DaddyLongLegs.IHaveRotParts.RotAI
  fullName: DaddyLongLegs.IHaveRotParts.RotAI
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotMoveDirection
  name: RotMoveDirection
  nameWithType: DaddyLongLegs.IHaveRotParts.RotMoveDirection
  fullName: DaddyLongLegs.IHaveRotParts.RotMoveDirection
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.DaddyLongLegs.IHaveRotParts.RotSizeClass*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotSizeClass
  name: RotSizeClass
  nameWithType: DaddyLongLegs.IHaveRotParts.RotSizeClass
  fullName: DaddyLongLegs.IHaveRotParts.RotSizeClass
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyeColor*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotEyeColor
  name: RotEyeColor
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyeColor
  fullName: DaddyLongLegs.IHaveRotParts.RotEyeColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyesClose*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotEyesClose
  name: RotEyesClose
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyesClose
  fullName: DaddyLongLegs.IHaveRotParts.RotEyesClose
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.DaddyLongLegs.IHaveRotParts.RotDigesting*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotDigesting
  name: RotDigesting
  nameWithType: DaddyLongLegs.IHaveRotParts.RotDigesting
  fullName: DaddyLongLegs.IHaveRotParts.RotDigesting
- uid: Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter*
  commentId: Overload:Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotStuckCounter
  name: RotStuckCounter
  nameWithType: DaddyLongLegs.IHaveRotParts.RotStuckCounter
  fullName: DaddyLongLegs.IHaveRotParts.RotStuckCounter
