### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.ListItem
  commentId: T:Menu.Remix.MixedUI.ListItem
  id: ListItem
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.Int32)
  - Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)
  - Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  - Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
  - Menu.Remix.MixedUI.ListItem.Equals(System.Object)
  - Menu.Remix.MixedUI.ListItem.GetHashCode
  - Menu.Remix.MixedUI.ListItem.GetRealName(System.String)
  - Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)
  - Menu.Remix.MixedUI.ListItem.desc
  - Menu.Remix.MixedUI.ListItem.displayName
  - Menu.Remix.MixedUI.ListItem.name
  - Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  - Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  - Menu.Remix.MixedUI.ListItem.value
  langs:
  - csharp
  - vb
  name: ListItem
  nameWithType: ListItem
  fullName: Menu.Remix.MixedUI.ListItem
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.ListItem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct ListItem
    content.vb: Public Structure ListItem
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Menu.Remix.MixedUI.ListItem.name
  commentId: F:Menu.Remix.MixedUI.ListItem.name
  id: name
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ListItem.name
  fullName: Menu.Remix.MixedUI.ListItem.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.ListItem.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string name
    return:
      type: System.String
    content.vb: Public ReadOnly name As String
- uid: Menu.Remix.MixedUI.ListItem.value
  commentId: F:Menu.Remix.MixedUI.ListItem.value
  id: value
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: value
  nameWithType: ListItem.value
  fullName: Menu.Remix.MixedUI.ListItem.value
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.ListItem.value</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly int value
    return:
      type: System.Int32
    content.vb: Public ReadOnly value As Integer
- uid: Menu.Remix.MixedUI.ListItem.desc
  commentId: F:Menu.Remix.MixedUI.ListItem.desc
  id: desc
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: desc
  nameWithType: ListItem.desc
  fullName: Menu.Remix.MixedUI.ListItem.desc
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.ListItem.desc</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string desc
    return:
      type: System.String
    content.vb: Public desc As String
- uid: Menu.Remix.MixedUI.ListItem.displayName
  commentId: F:Menu.Remix.MixedUI.ListItem.displayName
  id: displayName
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: displayName
  nameWithType: ListItem.displayName
  fullName: Menu.Remix.MixedUI.ListItem.displayName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.ListItem.displayName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string displayName
    return:
      type: System.String
    content.vb: Public displayName As String
- uid: Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.Int32)
  commentId: M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: ListItem(string, int)
  nameWithType: ListItem.ListItem(string, int)
  fullName: Menu.Remix.MixedUI.ListItem.ListItem(string, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.ListItem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ListItem(string name, int value = 2147483647)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: value
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, value As Integer = 2147483647)
  overload: Menu.Remix.MixedUI.ListItem.#ctor*
  nameWithType.vb: ListItem.New(String, Integer)
  fullName.vb: Menu.Remix.MixedUI.ListItem.New(String, Integer)
  name.vb: New(String, Integer)
- uid: Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)
  commentId: M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)
  id: '#ctor(System.String,System.String,System.Int32)'
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: ListItem(string, string, int)
  nameWithType: ListItem.ListItem(string, string, int)
  fullName: Menu.Remix.MixedUI.ListItem.ListItem(string, string, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.ListItem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ListItem(string name, string displayName, int value = 2147483647)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: displayName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayName</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: value
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.#ctor(System.String,System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, displayName As String, value As Integer = 2147483647)
  overload: Menu.Remix.MixedUI.ListItem.#ctor*
  nameWithType.vb: ListItem.New(String, String, Integer)
  fullName.vb: Menu.Remix.MixedUI.ListItem.New(String, String, Integer)
  name.vb: New(String, String, Integer)
- uid: Menu.Remix.MixedUI.ListItem.Equals(System.Object)
  commentId: M:Menu.Remix.MixedUI.ListItem.Equals(System.Object)
  id: Equals(System.Object)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ListItem.Equals(object)
  fullName: Menu.Remix.MixedUI.ListItem.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Menu.Remix.MixedUI.ListItem.Equals*
  nameWithType.vb: ListItem.Equals(Object)
  fullName.vb: Menu.Remix.MixedUI.ListItem.Equals(Object)
  name.vb: Equals(Object)
- uid: Menu.Remix.MixedUI.ListItem.GetHashCode
  commentId: M:Menu.Remix.MixedUI.ListItem.GetHashCode
  id: GetHashCode
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ListItem.GetHashCode()
  fullName: Menu.Remix.MixedUI.ListItem.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Menu.Remix.MixedUI.ListItem.GetHashCode*
- uid: Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  commentId: M:Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  id: op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: operator ==(ListItem, ListItem)
  nameWithType: ListItem.operator ==(ListItem, ListItem)
  fullName: Menu.Remix.MixedUI.ListItem.operator ==(Menu.Remix.MixedUI.ListItem, Menu.Remix.MixedUI.ListItem)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(ListItem left, ListItem right)
    parameters:
    - id: left
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    - id: right
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Equality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(left As ListItem, right As ListItem) As Boolean
  overload: Menu.Remix.MixedUI.ListItem.op_Equality*
  nameWithType.vb: ListItem.=(ListItem, ListItem)
  fullName.vb: Menu.Remix.MixedUI.ListItem.=(Menu.Remix.MixedUI.ListItem, Menu.Remix.MixedUI.ListItem)
  name.vb: =(ListItem, ListItem)
- uid: Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  commentId: M:Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  id: op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: operator !=(ListItem, ListItem)
  nameWithType: ListItem.operator !=(ListItem, ListItem)
  fullName: Menu.Remix.MixedUI.ListItem.operator !=(Menu.Remix.MixedUI.ListItem, Menu.Remix.MixedUI.ListItem)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(ListItem left, ListItem right)
    parameters:
    - id: left
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    - id: right
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.op_Inequality(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(left As ListItem, right As ListItem) As Boolean
  overload: Menu.Remix.MixedUI.ListItem.op_Inequality*
  nameWithType.vb: ListItem.<>(ListItem, ListItem)
  fullName.vb: Menu.Remix.MixedUI.ListItem.<>(Menu.Remix.MixedUI.ListItem, Menu.Remix.MixedUI.ListItem)
  name.vb: <>(ListItem, ListItem)
- uid: Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  commentId: M:Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  id: Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: Comparer(ListItem, ListItem)
  nameWithType: ListItem.Comparer(ListItem, ListItem)
  fullName: Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem, Menu.Remix.MixedUI.ListItem)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int Comparer(ListItem x, ListItem y)
    parameters:
    - id: x
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    - id: y
      type: Menu.Remix.MixedUI.ListItem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.Comparer(Menu.Remix.MixedUI.ListItem,Menu.Remix.MixedUI.ListItem)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Comparer(x As ListItem, y As ListItem) As Integer
  overload: Menu.Remix.MixedUI.ListItem.Comparer*
- uid: Menu.Remix.MixedUI.ListItem.GetRealName(System.String)
  commentId: M:Menu.Remix.MixedUI.ListItem.GetRealName(System.String)
  id: GetRealName(System.String)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: GetRealName(string)
  nameWithType: ListItem.GetRealName(string)
  fullName: Menu.Remix.MixedUI.ListItem.GetRealName(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.GetRealName(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetRealName(string text)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.GetRealName(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.GetRealName(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetRealName(text As String) As String
  overload: Menu.Remix.MixedUI.ListItem.GetRealName*
  nameWithType.vb: ListItem.GetRealName(String)
  fullName.vb: Menu.Remix.MixedUI.ListItem.GetRealName(String)
  name.vb: GetRealName(String)
- uid: Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)
  commentId: M:Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)
  id: SearchMatch(System.String,System.String)
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: SearchMatch(string, string)
  nameWithType: ListItem.SearchMatch(string, string)
  fullName: Menu.Remix.MixedUI.ListItem.SearchMatch(string, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool SearchMatch(string query, string text)
    parameters:
    - id: query
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>query</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.ListItem.SearchMatch(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SearchMatch(query As String, text As String) As Boolean
  overload: Menu.Remix.MixedUI.ListItem.SearchMatch*
  nameWithType.vb: ListItem.SearchMatch(String, String)
  fullName.vb: Menu.Remix.MixedUI.ListItem.SearchMatch(String, String)
  name.vb: SearchMatch(String, String)
- uid: Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
  commentId: P:Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
  id: EffectiveDisplayName
  parent: Menu.Remix.MixedUI.ListItem
  langs:
  - csharp
  - vb
  name: EffectiveDisplayName
  nameWithType: ListItem.EffectiveDisplayName
  fullName: Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.ListItem.EffectiveDisplayName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string EffectiveDisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EffectiveDisplayName As String
  overload: Menu.Remix.MixedUI.ListItem.EffectiveDisplayName*
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.Remix.MixedUI.ListItem.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem__ctor_System_String_System_Int32_
  name: ListItem
  nameWithType: ListItem.ListItem
  fullName: Menu.Remix.MixedUI.ListItem.ListItem
  nameWithType.vb: ListItem.New
  fullName.vb: Menu.Remix.MixedUI.ListItem.New
  name.vb: New
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Menu.Remix.MixedUI.ListItem.Equals*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.Equals
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_Equals_System_Object_
  name: Equals
  nameWithType: ListItem.Equals
  fullName: Menu.Remix.MixedUI.ListItem.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.ListItem.GetHashCode*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.GetHashCode
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_GetHashCode
  name: GetHashCode
  nameWithType: ListItem.GetHashCode
  fullName: Menu.Remix.MixedUI.ListItem.GetHashCode
- uid: Menu.Remix.MixedUI.ListItem.op_Equality*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.op_Equality
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_op_Equality_Menu_Remix_MixedUI_ListItem_Menu_Remix_MixedUI_ListItem_
  name: operator ==
  nameWithType: ListItem.operator ==
  fullName: Menu.Remix.MixedUI.ListItem.operator ==
  nameWithType.vb: ListItem.=
  fullName.vb: Menu.Remix.MixedUI.ListItem.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Menu.Remix.MixedUI.ListItem.op_Equality*
    name: ==
    isExternal: true
    href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_op_Equality_Menu_Remix_MixedUI_ListItem_Menu_Remix_MixedUI_ListItem_
- uid: Menu.Remix.MixedUI.ListItem
  commentId: T:Menu.Remix.MixedUI.ListItem
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html
  name: ListItem
  nameWithType: ListItem
  fullName: Menu.Remix.MixedUI.ListItem
- uid: Menu.Remix.MixedUI.ListItem.op_Inequality*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.op_Inequality
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_op_Inequality_Menu_Remix_MixedUI_ListItem_Menu_Remix_MixedUI_ListItem_
  name: operator !=
  nameWithType: ListItem.operator !=
  fullName: Menu.Remix.MixedUI.ListItem.operator !=
  nameWithType.vb: ListItem.<>
  fullName.vb: Menu.Remix.MixedUI.ListItem.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Menu.Remix.MixedUI.ListItem.op_Inequality*
    name: '!='
    isExternal: true
    href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_op_Inequality_Menu_Remix_MixedUI_ListItem_Menu_Remix_MixedUI_ListItem_
- uid: Menu.Remix.MixedUI.ListItem.Comparer*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.Comparer
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_Comparer_Menu_Remix_MixedUI_ListItem_Menu_Remix_MixedUI_ListItem_
  name: Comparer
  nameWithType: ListItem.Comparer
  fullName: Menu.Remix.MixedUI.ListItem.Comparer
- uid: Menu.Remix.MixedUI.ListItem.GetRealName*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.GetRealName
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_GetRealName_System_String_
  name: GetRealName
  nameWithType: ListItem.GetRealName
  fullName: Menu.Remix.MixedUI.ListItem.GetRealName
- uid: Menu.Remix.MixedUI.ListItem.SearchMatch*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.SearchMatch
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_SearchMatch_System_String_System_String_
  name: SearchMatch
  nameWithType: ListItem.SearchMatch
  fullName: Menu.Remix.MixedUI.ListItem.SearchMatch
- uid: Menu.Remix.MixedUI.ListItem.EffectiveDisplayName*
  commentId: Overload:Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
  isExternal: true
  href: Menu.Remix.MixedUI.ListItem.html#Menu_Remix_MixedUI_ListItem_EffectiveDisplayName
  name: EffectiveDisplayName
  nameWithType: ListItem.EffectiveDisplayName
  fullName: Menu.Remix.MixedUI.ListItem.EffectiveDisplayName
