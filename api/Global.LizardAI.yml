### YamlMime:ManagedReference
items:
- uid: Global.LizardAI
  commentId: T:Global.LizardAI
  id: LizardAI
  parent: Global
  children:
  - Global.LizardAI.#ctor(AbstractCreature,World)
  - Global.LizardAI.ApplyLocustDeterrent
  - Global.LizardAI.BitCreature(BodyChunk)
  - Global.LizardAI.CombinedFear
  - Global.LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)
  - Global.LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  - Global.LizardAI.CurrentPlayerAggression(AbstractCreature)
  - Global.LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  - Global.LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)
  - Global.LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  - Global.LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)
  - Global.LizardAI.NewArea(System.Boolean)
  - Global.LizardAI.NewRoom(Room)
  - Global.LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  - Global.LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)
  - Global.LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  - Global.LizardAI.TravelPreference(MovementConnection,PathCost)
  - Global.LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)
  - Global.LizardAI.Update
  - Global.LizardAI.VisualScore(UnityEngine.Vector2,System.Single)
  - Global.LizardAI.WantToStayInDenUntilEndOfCycle
  - Global.LizardAI.attemptBiteFrames
  - Global.LizardAI.behavior
  - Global.LizardAI.casualAggressionTarget
  - Global.LizardAI.currentUtility
  - Global.LizardAI.excitement
  - Global.LizardAI.fear
  - Global.LizardAI.focusCreature
  - Global.LizardAI.hunger
  - Global.LizardAI.idleCounter
  - Global.LizardAI.idleRestlessness
  - Global.LizardAI.idleSpotWinStreak
  - Global.LizardAI.lastDistressLength
  - Global.LizardAI.lurkTracker
  - Global.LizardAI.panic
  - Global.LizardAI.rainFear
  - Global.LizardAI.redSpitAI
  - Global.LizardAI.runSpeed
  - Global.LizardAI.submittedTo
  - Global.LizardAI.unableToFindComfortablePosition
  - Global.LizardAI.yellowAI
  langs:
  - csharp
  - vb
  name: LizardAI
  nameWithType: LizardAI
  fullName: LizardAI
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardAI : ArtificialIntelligence, IUseARelationshipTracker, IAINoiseReaction, IReactToSocialEvents, FriendTracker.IHaveFriendTracker'
    content.vb: Public Class LizardAI Inherits ArtificialIntelligence Implements IUseARelationshipTracker, IAINoiseReaction, IReactToSocialEvents, FriendTracker.IHaveFriendTracker
  inheritance:
  - System.Object
  - Global.ArtificialIntelligence
  implements:
  - Global.IUseARelationshipTracker
  - Global.IAINoiseReaction
  - Global.IReactToSocialEvents
  - Global.FriendTracker.IHaveFriendTracker
  inheritedMembers:
  - Global.ArtificialIntelligence.creature
  - Global.ArtificialIntelligence.modules
  - Global.ArtificialIntelligence.stranded
  - Global.ArtificialIntelligence.seeThroughWalls
  - Global.ArtificialIntelligence.timeInRoom
  - Global.ArtificialIntelligence.lastRoom
  - Global.ArtificialIntelligence.ripplePathingTarget
  - Global.ArtificialIntelligence.ripplePathingTime
  - Global.ArtificialIntelligence.AddModule(AIModule)
  - Global.ArtificialIntelligence.VisualContact(WorldCoordinate,System.Single)
  - Global.ArtificialIntelligence.VisualContact(UnityEngine.Vector2,System.Single)
  - Global.ArtificialIntelligence.VisualContact(BodyChunk)
  - Global.ArtificialIntelligence.SetDestination(WorldCoordinate)
  - Global.ArtificialIntelligence.DenPosition
  - Global.ArtificialIntelligence.DynamicRelationship(AbstractCreature)
  - Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
  - Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation,AbstractCreature)
  - Global.ArtificialIntelligence.StaticRelationship(AbstractCreature)
  - Global.ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
  - Global.ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
  - Global.ArtificialIntelligence.pathFinder
  - Global.ArtificialIntelligence.tracker
  - Global.ArtificialIntelligence.noiseTracker
  - Global.ArtificialIntelligence.obstacleTracker
  - Global.ArtificialIntelligence.threatTracker
  - Global.ArtificialIntelligence.preyTracker
  - Global.ArtificialIntelligence.rainTracker
  - Global.ArtificialIntelligence.denFinder
  - Global.ArtificialIntelligence.agressionTracker
  - Global.ArtificialIntelligence.utilityComparer
  - Global.ArtificialIntelligence.missionTracker
  - Global.ArtificialIntelligence.secondaryNodeFinder
  - Global.ArtificialIntelligence.relationshipTracker
  - Global.ArtificialIntelligence.itemTracker
  - Global.ArtificialIntelligence.discomfortTracker
  - Global.ArtificialIntelligence.stuckTracker
  - Global.ArtificialIntelligence.injuryTracker
  - Global.ArtificialIntelligence.friendTracker
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardAI.excitement
  commentId: F:Global.LizardAI.excitement
  id: excitement
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: excitement
  nameWithType: LizardAI.excitement
  fullName: LizardAI.excitement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.excitement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float excitement
    return:
      type: System.Single
    content.vb: Public excitement As Single
- uid: Global.LizardAI.panic
  commentId: F:Global.LizardAI.panic
  id: panic
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: panic
  nameWithType: LizardAI.panic
  fullName: LizardAI.panic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.panic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int panic
    return:
      type: System.Int32
    content.vb: Public panic As Integer
- uid: Global.LizardAI.hunger
  commentId: F:Global.LizardAI.hunger
  id: hunger
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: hunger
  nameWithType: LizardAI.hunger
  fullName: LizardAI.hunger
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.hunger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float hunger
    return:
      type: System.Single
    content.vb: Public hunger As Single
- uid: Global.LizardAI.fear
  commentId: F:Global.LizardAI.fear
  id: fear
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: fear
  nameWithType: LizardAI.fear
  fullName: LizardAI.fear
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.fear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fear
    return:
      type: System.Single
    content.vb: Public fear As Single
- uid: Global.LizardAI.rainFear
  commentId: F:Global.LizardAI.rainFear
  id: rainFear
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: rainFear
  nameWithType: LizardAI.rainFear
  fullName: LizardAI.rainFear
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.rainFear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rainFear
    return:
      type: System.Single
    content.vb: Public rainFear As Single
- uid: Global.LizardAI.lastDistressLength
  commentId: F:Global.LizardAI.lastDistressLength
  id: lastDistressLength
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: lastDistressLength
  nameWithType: LizardAI.lastDistressLength
  fullName: LizardAI.lastDistressLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.lastDistressLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastDistressLength
    return:
      type: System.Int32
    content.vb: Public lastDistressLength As Integer
- uid: Global.LizardAI.runSpeed
  commentId: F:Global.LizardAI.runSpeed
  id: runSpeed
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: runSpeed
  nameWithType: LizardAI.runSpeed
  fullName: LizardAI.runSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.runSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float runSpeed
    return:
      type: System.Single
    content.vb: Public runSpeed As Single
- uid: Global.LizardAI.currentUtility
  commentId: F:Global.LizardAI.currentUtility
  id: currentUtility
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: currentUtility
  nameWithType: LizardAI.currentUtility
  fullName: LizardAI.currentUtility
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.currentUtility</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float currentUtility
    return:
      type: System.Single
    content.vb: Public currentUtility As Single
- uid: Global.LizardAI.idleCounter
  commentId: F:Global.LizardAI.idleCounter
  id: idleCounter
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: idleCounter
  nameWithType: LizardAI.idleCounter
  fullName: LizardAI.idleCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.idleCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int idleCounter
    return:
      type: System.Int32
    content.vb: Public idleCounter As Integer
- uid: Global.LizardAI.idleSpotWinStreak
  commentId: F:Global.LizardAI.idleSpotWinStreak
  id: idleSpotWinStreak
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: idleSpotWinStreak
  nameWithType: LizardAI.idleSpotWinStreak
  fullName: LizardAI.idleSpotWinStreak
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.idleSpotWinStreak</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int idleSpotWinStreak
    return:
      type: System.Int32
    content.vb: Public idleSpotWinStreak As Integer
- uid: Global.LizardAI.idleRestlessness
  commentId: F:Global.LizardAI.idleRestlessness
  id: idleRestlessness
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: idleRestlessness
  nameWithType: LizardAI.idleRestlessness
  fullName: LizardAI.idleRestlessness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.idleRestlessness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int idleRestlessness
    return:
      type: System.Int32
    content.vb: Public idleRestlessness As Integer
- uid: Global.LizardAI.unableToFindComfortablePosition
  commentId: F:Global.LizardAI.unableToFindComfortablePosition
  id: unableToFindComfortablePosition
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: unableToFindComfortablePosition
  nameWithType: LizardAI.unableToFindComfortablePosition
  fullName: LizardAI.unableToFindComfortablePosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.unableToFindComfortablePosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int unableToFindComfortablePosition
    return:
      type: System.Int32
    content.vb: Public unableToFindComfortablePosition As Integer
- uid: Global.LizardAI.focusCreature
  commentId: F:Global.LizardAI.focusCreature
  id: focusCreature
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: focusCreature
  nameWithType: LizardAI.focusCreature
  fullName: LizardAI.focusCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.focusCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation focusCreature
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public focusCreature As Tracker.CreatureRepresentation
- uid: Global.LizardAI.casualAggressionTarget
  commentId: F:Global.LizardAI.casualAggressionTarget
  id: casualAggressionTarget
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: casualAggressionTarget
  nameWithType: LizardAI.casualAggressionTarget
  fullName: LizardAI.casualAggressionTarget
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.casualAggressionTarget</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation casualAggressionTarget
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public casualAggressionTarget As Tracker.CreatureRepresentation
- uid: Global.LizardAI.submittedTo
  commentId: F:Global.LizardAI.submittedTo
  id: submittedTo
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: submittedTo
  nameWithType: LizardAI.submittedTo
  fullName: LizardAI.submittedTo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.submittedTo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractCreature submittedTo
    return:
      type: Global.AbstractCreature
    content.vb: Public submittedTo As AbstractCreature
- uid: Global.LizardAI.attemptBiteFrames
  commentId: F:Global.LizardAI.attemptBiteFrames
  id: attemptBiteFrames
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: attemptBiteFrames
  nameWithType: LizardAI.attemptBiteFrames
  fullName: LizardAI.attemptBiteFrames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.attemptBiteFrames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int attemptBiteFrames
    return:
      type: System.Int32
    content.vb: Public attemptBiteFrames As Integer
- uid: Global.LizardAI.yellowAI
  commentId: F:Global.LizardAI.yellowAI
  id: yellowAI
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: yellowAI
  nameWithType: LizardAI.yellowAI
  fullName: LizardAI.yellowAI
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.yellowAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public YellowAI yellowAI
    return:
      type: Global.YellowAI
    content.vb: Public yellowAI As YellowAI
- uid: Global.LizardAI.redSpitAI
  commentId: F:Global.LizardAI.redSpitAI
  id: redSpitAI
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: redSpitAI
  nameWithType: LizardAI.redSpitAI
  fullName: LizardAI.redSpitAI
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.redSpitAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardAI.LizardSpitTracker redSpitAI
    return:
      type: Global.LizardAI.LizardSpitTracker
    content.vb: Public redSpitAI As LizardAI.LizardSpitTracker
- uid: Global.LizardAI.lurkTracker
  commentId: F:Global.LizardAI.lurkTracker
  id: lurkTracker
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: lurkTracker
  nameWithType: LizardAI.lurkTracker
  fullName: LizardAI.lurkTracker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.lurkTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardAI.LurkTracker lurkTracker
    return:
      type: Global.LizardAI.LurkTracker
    content.vb: Public lurkTracker As LizardAI.LurkTracker
- uid: Global.LizardAI.behavior
  commentId: F:Global.LizardAI.behavior
  id: behavior
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: behavior
  nameWithType: LizardAI.behavior
  fullName: LizardAI.behavior
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.behavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardAI.Behavior behavior
    return:
      type: Global.LizardAI.Behavior
    content.vb: Public behavior As LizardAI.Behavior
- uid: Global.LizardAI.#ctor(AbstractCreature,World)
  commentId: M:Global.LizardAI.#ctor(AbstractCreature,World)
  id: '#ctor(AbstractCreature,World)'
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: LizardAI(AbstractCreature, World)
  nameWithType: LizardAI.LizardAI(AbstractCreature, World)
  fullName: LizardAI.LizardAI(AbstractCreature, World)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardAI(AbstractCreature creature, World world)
    parameters:
    - id: creature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:LizardAI.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:LizardAI.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(creature As AbstractCreature, world As World)
  overload: Global.LizardAI.#ctor*
  nameWithType.vb: LizardAI.New(AbstractCreature, World)
  fullName.vb: LizardAI.New(AbstractCreature, World)
  name.vb: New(AbstractCreature, World)
- uid: Global.LizardAI.NewRoom(Room)
  commentId: M:Global.LizardAI.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: LizardAI.NewRoom(Room)
  fullName: LizardAI.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:LizardAI.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(room As Room)
  overridden: Global.ArtificialIntelligence.NewRoom(Room)
  overload: Global.LizardAI.NewRoom*
- uid: Global.LizardAI.Update
  commentId: M:Global.LizardAI.Update
  id: Update
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardAI.Update()
  fullName: LizardAI.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.ArtificialIntelligence.Update
  overload: Global.LizardAI.Update*
- uid: Global.LizardAI.NewArea(System.Boolean)
  commentId: M:Global.LizardAI.NewArea(System.Boolean)
  id: NewArea(System.Boolean)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: NewArea(bool)
  nameWithType: LizardAI.NewArea(bool)
  fullName: LizardAI.NewArea(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.NewArea(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewArea(bool strandedFromExits)
    parameters:
    - id: strandedFromExits
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>strandedFromExits</parameter>
            <parameter>M:LizardAI.NewArea(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewArea(strandedFromExits As Boolean)
  overridden: Global.ArtificialIntelligence.NewArea(System.Boolean)
  overload: Global.LizardAI.NewArea*
  nameWithType.vb: LizardAI.NewArea(Boolean)
  fullName.vb: LizardAI.NewArea(Boolean)
  name.vb: NewArea(Boolean)
- uid: Global.LizardAI.WantToStayInDenUntilEndOfCycle
  commentId: M:Global.LizardAI.WantToStayInDenUntilEndOfCycle
  id: WantToStayInDenUntilEndOfCycle
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: WantToStayInDenUntilEndOfCycle()
  nameWithType: LizardAI.WantToStayInDenUntilEndOfCycle()
  fullName: LizardAI.WantToStayInDenUntilEndOfCycle()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.WantToStayInDenUntilEndOfCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool WantToStayInDenUntilEndOfCycle()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.WantToStayInDenUntilEndOfCycle</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function WantToStayInDenUntilEndOfCycle() As Boolean
  overridden: Global.ArtificialIntelligence.WantToStayInDenUntilEndOfCycle
  overload: Global.LizardAI.WantToStayInDenUntilEndOfCycle*
- uid: Global.LizardAI.VisualScore(UnityEngine.Vector2,System.Single)
  commentId: M:Global.LizardAI.VisualScore(UnityEngine.Vector2,System.Single)
  id: VisualScore(UnityEngine.Vector2,System.Single)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: VisualScore(Vector2, float)
  nameWithType: LizardAI.VisualScore(Vector2, float)
  fullName: LizardAI.VisualScore(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.VisualScore(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override float VisualScore(Vector2 lookAtPoint, float bonus)
    parameters:
    - id: lookAtPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lookAtPoint</parameter>
            <parameter>M:LizardAI.VisualScore(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: bonus
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bonus</parameter>
            <parameter>M:LizardAI.VisualScore(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.VisualScore(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function VisualScore(lookAtPoint As Vector2, bonus As Single) As Single
  overridden: Global.ArtificialIntelligence.VisualScore(UnityEngine.Vector2,System.Single)
  overload: Global.LizardAI.VisualScore*
  nameWithType.vb: LizardAI.VisualScore(Vector2, Single)
  fullName.vb: LizardAI.VisualScore(UnityEngine.Vector2, Single)
  name.vb: VisualScore(Vector2, Single)
- uid: Global.LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)
  commentId: M:Global.LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)
  id: UnpleasantFallRisk(RWCustom.IntVector2)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: UnpleasantFallRisk(IntVector2)
  nameWithType: LizardAI.UnpleasantFallRisk(IntVector2)
  fullName: LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool UnpleasantFallRisk(IntVector2 tile)
    parameters:
    - id: tile
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tile</parameter>
            <parameter>M:LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.UnpleasantFallRisk(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function UnpleasantFallRisk(tile As IntVector2) As Boolean
  overload: Global.LizardAI.UnpleasantFallRisk*
- uid: Global.LizardAI.BitCreature(BodyChunk)
  commentId: M:Global.LizardAI.BitCreature(BodyChunk)
  id: BitCreature(BodyChunk)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: BitCreature(BodyChunk)
  nameWithType: LizardAI.BitCreature(BodyChunk)
  fullName: LizardAI.BitCreature(BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.BitCreature(BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BitCreature(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:LizardAI.BitCreature(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BitCreature(chunk As BodyChunk)
  overload: Global.LizardAI.BitCreature*
- uid: Global.LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  commentId: M:Global.LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  id: CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: CreatureSpotted(bool, CreatureRepresentation)
  nameWithType: LizardAI.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  fullName: LizardAI.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void CreatureSpotted(bool firstSpot, Tracker.CreatureRepresentation otherCreature)
    parameters:
    - id: firstSpot
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSpot</parameter>
            <parameter>M:LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    - id: otherCreature
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherCreature</parameter>
            <parameter>M:LizardAI.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub CreatureSpotted(firstSpot As Boolean, otherCreature As Tracker.CreatureRepresentation)
  overridden: Global.ArtificialIntelligence.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  overload: Global.LizardAI.CreatureSpotted*
  nameWithType.vb: LizardAI.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  fullName.vb: LizardAI.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  name.vb: CreatureSpotted(Boolean, CreatureRepresentation)
- uid: Global.LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)
  commentId: M:Global.LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)
  id: CreateTrackerRepresentationForCreature(AbstractCreature)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: CreateTrackerRepresentationForCreature(AbstractCreature)
  nameWithType: LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)
  fullName: LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override Tracker.CreatureRepresentation CreateTrackerRepresentationForCreature(AbstractCreature otherCreature)
    parameters:
    - id: otherCreature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherCreature</parameter>
            <parameter>M:LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.CreateTrackerRepresentationForCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function CreateTrackerRepresentationForCreature(otherCreature As AbstractCreature) As Tracker.CreatureRepresentation
  overridden: Global.ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
  overload: Global.LizardAI.CreateTrackerRepresentationForCreature*
- uid: Global.LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)
  commentId: M:Global.LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)
  id: LikeOfPlayer(Tracker.CreatureRepresentation)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: LikeOfPlayer(CreatureRepresentation)
  nameWithType: LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)
  fullName: LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LikeOfPlayer(Tracker.CreatureRepresentation player)
    parameters:
    - id: player
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>player</parameter>
            <parameter>M:LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.LikeOfPlayer(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Function LikeOfPlayer(player As Tracker.CreatureRepresentation) As Single
  overload: Global.LizardAI.LikeOfPlayer*
- uid: Global.LizardAI.CurrentPlayerAggression(AbstractCreature)
  commentId: M:Global.LizardAI.CurrentPlayerAggression(AbstractCreature)
  id: CurrentPlayerAggression(AbstractCreature)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: CurrentPlayerAggression(AbstractCreature)
  nameWithType: LizardAI.CurrentPlayerAggression(AbstractCreature)
  fullName: LizardAI.CurrentPlayerAggression(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.CurrentPlayerAggression(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override float CurrentPlayerAggression(AbstractCreature player)
    parameters:
    - id: player
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>player</parameter>
            <parameter>M:LizardAI.CurrentPlayerAggression(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.CurrentPlayerAggression(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function CurrentPlayerAggression(player As AbstractCreature) As Single
  overridden: Global.ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
  overload: Global.LizardAI.CurrentPlayerAggression*
- uid: Global.LizardAI.TravelPreference(MovementConnection,PathCost)
  commentId: M:Global.LizardAI.TravelPreference(MovementConnection,PathCost)
  id: TravelPreference(MovementConnection,PathCost)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: TravelPreference(MovementConnection, PathCost)
  nameWithType: LizardAI.TravelPreference(MovementConnection, PathCost)
  fullName: LizardAI.TravelPreference(MovementConnection, PathCost)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.TravelPreference(MovementConnection,PathCost)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override PathCost TravelPreference(MovementConnection connection, PathCost cost)
    parameters:
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:LizardAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    - id: cost
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cost</parameter>
            <parameter>M:LizardAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function TravelPreference(connection As MovementConnection, cost As PathCost) As PathCost
  overridden: Global.ArtificialIntelligence.TravelPreference(MovementConnection,PathCost)
  overload: Global.LizardAI.TravelPreference*
- uid: Global.LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)
  commentId: M:Global.LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)
  id: DoIWantToHoldThisWithMyTongue(BodyChunk)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: DoIWantToHoldThisWithMyTongue(BodyChunk)
  nameWithType: LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)
  fullName: LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DoIWantToHoldThisWithMyTongue(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.DoIWantToHoldThisWithMyTongue(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Function DoIWantToHoldThisWithMyTongue(chunk As BodyChunk) As Boolean
  overload: Global.LizardAI.DoIWantToHoldThisWithMyTongue*
- uid: Global.LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  commentId: M:Global.LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  id: DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: DoIWantToBiteThisCreature(CreatureRepresentation)
  nameWithType: LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  fullName: LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DoIWantToBiteThisCreature(Tracker.CreatureRepresentation otherCrit)
    parameters:
    - id: otherCrit
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherCrit</parameter>
            <parameter>M:LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.DoIWantToBiteThisCreature(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Function DoIWantToBiteThisCreature(otherCrit As Tracker.CreatureRepresentation) As Boolean
  overload: Global.LizardAI.DoIWantToBiteThisCreature*
- uid: Global.LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)
  commentId: M:Global.LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)
  id: RecieveCommunication(Lizard,LizardAI.LizardCommunication)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: RecieveCommunication(Lizard, LizardCommunication)
  nameWithType: LizardAI.RecieveCommunication(Lizard, LizardAI.LizardCommunication)
  fullName: LizardAI.RecieveCommunication(Lizard, LizardAI.LizardCommunication)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RecieveCommunication(Lizard otherLizard, LizardAI.LizardCommunication signal)
    parameters:
    - id: otherLizard
      type: Global.Lizard
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherLizard</parameter>
            <parameter>M:LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)</parameter>
          </include>
        </markup>
    - id: signal
      type: Global.LizardAI.LizardCommunication
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>signal</parameter>
            <parameter>M:LizardAI.RecieveCommunication(Lizard,LizardAI.LizardCommunication)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RecieveCommunication(otherLizard As Lizard, signal As LizardAI.LizardCommunication)
  overload: Global.LizardAI.RecieveCommunication*
- uid: Global.LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  commentId: M:Global.LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  id: ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: ReactToNoise(TheorizedSource, InGameNoise)
  nameWithType: LizardAI.ReactToNoise(NoiseTracker.TheorizedSource, InGameNoise)
  fullName: LizardAI.ReactToNoise(NoiseTracker.TheorizedSource, Noise.InGameNoise)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReactToNoise(NoiseTracker.TheorizedSource source, InGameNoise noise)
    parameters:
    - id: source
      type: Global.NoiseTracker.TheorizedSource
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    - id: noise
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>noise</parameter>
            <parameter>M:LizardAI.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReactToNoise(source As NoiseTracker.TheorizedSource, noise As InGameNoise)
  overload: Global.LizardAI.ReactToNoise*
  implements:
  - Global.IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
- uid: Global.LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  commentId: M:Global.LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  id: SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: SocialEvent(EventID, Creature, Creature, PhysicalObject)
  nameWithType: LizardAI.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  fullName: LizardAI.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SocialEvent(SocialEventRecognizer.EventID ID, Creature subjectCrit, Creature objectCrit, PhysicalObject involvedItem)
    parameters:
    - id: ID
      type: Global.SocialEventRecognizer.EventID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: subjectCrit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectCrit</parameter>
            <parameter>M:LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: objectCrit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>objectCrit</parameter>
            <parameter>M:LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    - id: involvedItem
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>involvedItem</parameter>
            <parameter>M:LizardAI.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SocialEvent(ID As SocialEventRecognizer.EventID, subjectCrit As Creature, objectCrit As Creature, involvedItem As PhysicalObject)
  overload: Global.LizardAI.SocialEvent*
  implements:
  - Global.IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
- uid: Global.LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  commentId: M:Global.LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  id: GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: GiftRecieved(OwnedItemOnGround)
  nameWithType: LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  fullName: LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GiftRecieved(SocialEventRecognizer.OwnedItemOnGround giftOfferedToMe)
    parameters:
    - id: giftOfferedToMe
      type: Global.SocialEventRecognizer.OwnedItemOnGround
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>giftOfferedToMe</parameter>
            <parameter>M:LizardAI.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GiftRecieved(giftOfferedToMe As SocialEventRecognizer.OwnedItemOnGround)
  overload: Global.LizardAI.GiftRecieved*
  implements:
  - Global.FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
- uid: Global.LizardAI.CombinedFear
  commentId: P:Global.LizardAI.CombinedFear
  id: CombinedFear
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: CombinedFear
  nameWithType: LizardAI.CombinedFear
  fullName: LizardAI.CombinedFear
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardAI.CombinedFear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CombinedFear { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property CombinedFear As Single
  overload: Global.LizardAI.CombinedFear*
- uid: Global.LizardAI.ApplyLocustDeterrent
  commentId: P:Global.LizardAI.ApplyLocustDeterrent
  id: ApplyLocustDeterrent
  parent: Global.LizardAI
  langs:
  - csharp
  - vb
  name: ApplyLocustDeterrent
  nameWithType: LizardAI.ApplyLocustDeterrent
  fullName: LizardAI.ApplyLocustDeterrent
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardAI.ApplyLocustDeterrent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ApplyLocustDeterrent { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ApplyLocustDeterrent As Boolean
  overload: Global.LizardAI.ApplyLocustDeterrent*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Global.IUseARelationshipTracker
  commentId: T:Global.IUseARelationshipTracker
  isExternal: true
  href: IUseARelationshipTracker.html
  name: IUseARelationshipTracker
  nameWithType: IUseARelationshipTracker
  fullName: IUseARelationshipTracker
- uid: Global.IAINoiseReaction
  commentId: T:Global.IAINoiseReaction
  isExternal: true
  href: IAINoiseReaction.html
  name: IAINoiseReaction
  nameWithType: IAINoiseReaction
  fullName: IAINoiseReaction
- uid: Global.IReactToSocialEvents
  commentId: T:Global.IReactToSocialEvents
  isExternal: true
  href: IReactToSocialEvents.html
  name: IReactToSocialEvents
  nameWithType: IReactToSocialEvents
  fullName: IReactToSocialEvents
- uid: Global.FriendTracker.IHaveFriendTracker
  commentId: T:Global.FriendTracker.IHaveFriendTracker
  isExternal: true
  href: FriendTracker.html
  name: FriendTracker.IHaveFriendTracker
  nameWithType: FriendTracker.IHaveFriendTracker
  fullName: FriendTracker.IHaveFriendTracker
  spec.csharp:
  - uid: Global.FriendTracker
    name: FriendTracker
    isExternal: true
    href: FriendTracker.html
  - name: .
  - uid: Global.FriendTracker.IHaveFriendTracker
    name: IHaveFriendTracker
    isExternal: true
    href: FriendTracker.IHaveFriendTracker.html
  spec.vb:
  - uid: Global.FriendTracker
    name: FriendTracker
    isExternal: true
    href: FriendTracker.html
  - name: .
  - uid: Global.FriendTracker.IHaveFriendTracker
    name: IHaveFriendTracker
    isExternal: true
    href: FriendTracker.IHaveFriendTracker.html
- uid: Global.ArtificialIntelligence.creature
  commentId: F:Global.ArtificialIntelligence.creature
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_creature
  name: creature
  nameWithType: ArtificialIntelligence.creature
  fullName: ArtificialIntelligence.creature
- uid: Global.ArtificialIntelligence.modules
  commentId: F:Global.ArtificialIntelligence.modules
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_modules
  name: modules
  nameWithType: ArtificialIntelligence.modules
  fullName: ArtificialIntelligence.modules
- uid: Global.ArtificialIntelligence.stranded
  commentId: F:Global.ArtificialIntelligence.stranded
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_stranded
  name: stranded
  nameWithType: ArtificialIntelligence.stranded
  fullName: ArtificialIntelligence.stranded
- uid: Global.ArtificialIntelligence.seeThroughWalls
  commentId: F:Global.ArtificialIntelligence.seeThroughWalls
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_seeThroughWalls
  name: seeThroughWalls
  nameWithType: ArtificialIntelligence.seeThroughWalls
  fullName: ArtificialIntelligence.seeThroughWalls
- uid: Global.ArtificialIntelligence.timeInRoom
  commentId: F:Global.ArtificialIntelligence.timeInRoom
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_timeInRoom
  name: timeInRoom
  nameWithType: ArtificialIntelligence.timeInRoom
  fullName: ArtificialIntelligence.timeInRoom
- uid: Global.ArtificialIntelligence.lastRoom
  commentId: F:Global.ArtificialIntelligence.lastRoom
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_lastRoom
  name: lastRoom
  nameWithType: ArtificialIntelligence.lastRoom
  fullName: ArtificialIntelligence.lastRoom
- uid: Global.ArtificialIntelligence.ripplePathingTarget
  commentId: F:Global.ArtificialIntelligence.ripplePathingTarget
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_ripplePathingTarget
  name: ripplePathingTarget
  nameWithType: ArtificialIntelligence.ripplePathingTarget
  fullName: ArtificialIntelligence.ripplePathingTarget
- uid: Global.ArtificialIntelligence.ripplePathingTime
  commentId: F:Global.ArtificialIntelligence.ripplePathingTime
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_ripplePathingTime
  name: ripplePathingTime
  nameWithType: ArtificialIntelligence.ripplePathingTime
  fullName: ArtificialIntelligence.ripplePathingTime
- uid: Global.ArtificialIntelligence.AddModule(AIModule)
  commentId: M:Global.ArtificialIntelligence.AddModule(AIModule)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_AddModule_AIModule_
  name: AddModule(AIModule)
  nameWithType: ArtificialIntelligence.AddModule(AIModule)
  fullName: ArtificialIntelligence.AddModule(AIModule)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.AddModule(AIModule)
    name: AddModule
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_AddModule_AIModule_
  - name: (
  - uid: Global.AIModule
    name: AIModule
    isExternal: true
    href: AIModule.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.AddModule(AIModule)
    name: AddModule
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_AddModule_AIModule_
  - name: (
  - uid: Global.AIModule
    name: AIModule
    isExternal: true
    href: AIModule.html
  - name: )
- uid: Global.ArtificialIntelligence.VisualContact(WorldCoordinate,System.Single)
  commentId: M:Global.ArtificialIntelligence.VisualContact(WorldCoordinate,System.Single)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_WorldCoordinate_System_Single_
  name: VisualContact(WorldCoordinate, float)
  nameWithType: ArtificialIntelligence.VisualContact(WorldCoordinate, float)
  fullName: ArtificialIntelligence.VisualContact(WorldCoordinate, float)
  nameWithType.vb: ArtificialIntelligence.VisualContact(WorldCoordinate, Single)
  fullName.vb: ArtificialIntelligence.VisualContact(WorldCoordinate, Single)
  name.vb: VisualContact(WorldCoordinate, Single)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.VisualContact(WorldCoordinate,System.Single)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_WorldCoordinate_System_Single_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.VisualContact(WorldCoordinate,System.Single)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_WorldCoordinate_System_Single_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.ArtificialIntelligence.VisualContact(UnityEngine.Vector2,System.Single)
  commentId: M:Global.ArtificialIntelligence.VisualContact(UnityEngine.Vector2,System.Single)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_UnityEngine_Vector2_System_Single_
  name: VisualContact(Vector2, float)
  nameWithType: ArtificialIntelligence.VisualContact(Vector2, float)
  fullName: ArtificialIntelligence.VisualContact(UnityEngine.Vector2, float)
  nameWithType.vb: ArtificialIntelligence.VisualContact(Vector2, Single)
  fullName.vb: ArtificialIntelligence.VisualContact(UnityEngine.Vector2, Single)
  name.vb: VisualContact(Vector2, Single)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.VisualContact(UnityEngine.Vector2,System.Single)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.VisualContact(UnityEngine.Vector2,System.Single)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.ArtificialIntelligence.VisualContact(BodyChunk)
  commentId: M:Global.ArtificialIntelligence.VisualContact(BodyChunk)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_BodyChunk_
  name: VisualContact(BodyChunk)
  nameWithType: ArtificialIntelligence.VisualContact(BodyChunk)
  fullName: ArtificialIntelligence.VisualContact(BodyChunk)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.VisualContact(BodyChunk)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.VisualContact(BodyChunk)
    name: VisualContact
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualContact_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
- uid: Global.ArtificialIntelligence.SetDestination(WorldCoordinate)
  commentId: M:Global.ArtificialIntelligence.SetDestination(WorldCoordinate)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_SetDestination_WorldCoordinate_
  name: SetDestination(WorldCoordinate)
  nameWithType: ArtificialIntelligence.SetDestination(WorldCoordinate)
  fullName: ArtificialIntelligence.SetDestination(WorldCoordinate)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.SetDestination(WorldCoordinate)
    name: SetDestination
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_SetDestination_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.SetDestination(WorldCoordinate)
    name: SetDestination
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_SetDestination_WorldCoordinate_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
- uid: Global.ArtificialIntelligence.DenPosition
  commentId: M:Global.ArtificialIntelligence.DenPosition
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DenPosition
  name: DenPosition()
  nameWithType: ArtificialIntelligence.DenPosition()
  fullName: ArtificialIntelligence.DenPosition()
  spec.csharp:
  - uid: Global.ArtificialIntelligence.DenPosition
    name: DenPosition
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DenPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.DenPosition
    name: DenPosition
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DenPosition
  - name: (
  - name: )
- uid: Global.ArtificialIntelligence.DynamicRelationship(AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.DynamicRelationship(AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_AbstractCreature_
  name: DynamicRelationship(AbstractCreature)
  nameWithType: ArtificialIntelligence.DynamicRelationship(AbstractCreature)
  fullName: ArtificialIntelligence.DynamicRelationship(AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(AbstractCreature)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(AbstractCreature)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
  commentId: M:Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_
  name: DynamicRelationship(CreatureRepresentation)
  nameWithType: ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
  fullName: ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: )
- uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation,AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation,AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_AbstractCreature_
  name: DynamicRelationship(CreatureRepresentation, AbstractCreature)
  nameWithType: ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation, AbstractCreature)
  fullName: ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation, AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation,AbstractCreature)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_AbstractCreature_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.DynamicRelationship(Tracker.CreatureRepresentation,AbstractCreature)
    name: DynamicRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_DynamicRelationship_Tracker_CreatureRepresentation_AbstractCreature_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.ArtificialIntelligence.StaticRelationship(AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.StaticRelationship(AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_StaticRelationship_AbstractCreature_
  name: StaticRelationship(AbstractCreature)
  nameWithType: ArtificialIntelligence.StaticRelationship(AbstractCreature)
  fullName: ArtificialIntelligence.StaticRelationship(AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.StaticRelationship(AbstractCreature)
    name: StaticRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_StaticRelationship_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.StaticRelationship(AbstractCreature)
    name: StaticRelationship
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_StaticRelationship_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TrackerToDiscardDeadCreature_AbstractCreature_
  name: TrackerToDiscardDeadCreature(AbstractCreature)
  nameWithType: ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
  fullName: ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
    name: TrackerToDiscardDeadCreature
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TrackerToDiscardDeadCreature_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.TrackerToDiscardDeadCreature(AbstractCreature)
    name: TrackerToDiscardDeadCreature
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TrackerToDiscardDeadCreature_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
  commentId: M:Global.ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_HeardNoise_Noise_InGameNoise_
  name: HeardNoise(InGameNoise)
  nameWithType: ArtificialIntelligence.HeardNoise(InGameNoise)
  fullName: ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: Global.ArtificialIntelligence.pathFinder
  commentId: P:Global.ArtificialIntelligence.pathFinder
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_pathFinder
  name: pathFinder
  nameWithType: ArtificialIntelligence.pathFinder
  fullName: ArtificialIntelligence.pathFinder
- uid: Global.ArtificialIntelligence.tracker
  commentId: P:Global.ArtificialIntelligence.tracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_tracker
  name: tracker
  nameWithType: ArtificialIntelligence.tracker
  fullName: ArtificialIntelligence.tracker
- uid: Global.ArtificialIntelligence.noiseTracker
  commentId: P:Global.ArtificialIntelligence.noiseTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_noiseTracker
  name: noiseTracker
  nameWithType: ArtificialIntelligence.noiseTracker
  fullName: ArtificialIntelligence.noiseTracker
- uid: Global.ArtificialIntelligence.obstacleTracker
  commentId: P:Global.ArtificialIntelligence.obstacleTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_obstacleTracker
  name: obstacleTracker
  nameWithType: ArtificialIntelligence.obstacleTracker
  fullName: ArtificialIntelligence.obstacleTracker
- uid: Global.ArtificialIntelligence.threatTracker
  commentId: P:Global.ArtificialIntelligence.threatTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_threatTracker
  name: threatTracker
  nameWithType: ArtificialIntelligence.threatTracker
  fullName: ArtificialIntelligence.threatTracker
- uid: Global.ArtificialIntelligence.preyTracker
  commentId: P:Global.ArtificialIntelligence.preyTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_preyTracker
  name: preyTracker
  nameWithType: ArtificialIntelligence.preyTracker
  fullName: ArtificialIntelligence.preyTracker
- uid: Global.ArtificialIntelligence.rainTracker
  commentId: P:Global.ArtificialIntelligence.rainTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_rainTracker
  name: rainTracker
  nameWithType: ArtificialIntelligence.rainTracker
  fullName: ArtificialIntelligence.rainTracker
- uid: Global.ArtificialIntelligence.denFinder
  commentId: P:Global.ArtificialIntelligence.denFinder
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_denFinder
  name: denFinder
  nameWithType: ArtificialIntelligence.denFinder
  fullName: ArtificialIntelligence.denFinder
- uid: Global.ArtificialIntelligence.agressionTracker
  commentId: P:Global.ArtificialIntelligence.agressionTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_agressionTracker
  name: agressionTracker
  nameWithType: ArtificialIntelligence.agressionTracker
  fullName: ArtificialIntelligence.agressionTracker
- uid: Global.ArtificialIntelligence.utilityComparer
  commentId: P:Global.ArtificialIntelligence.utilityComparer
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_utilityComparer
  name: utilityComparer
  nameWithType: ArtificialIntelligence.utilityComparer
  fullName: ArtificialIntelligence.utilityComparer
- uid: Global.ArtificialIntelligence.missionTracker
  commentId: P:Global.ArtificialIntelligence.missionTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_missionTracker
  name: missionTracker
  nameWithType: ArtificialIntelligence.missionTracker
  fullName: ArtificialIntelligence.missionTracker
- uid: Global.ArtificialIntelligence.secondaryNodeFinder
  commentId: P:Global.ArtificialIntelligence.secondaryNodeFinder
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_secondaryNodeFinder
  name: secondaryNodeFinder
  nameWithType: ArtificialIntelligence.secondaryNodeFinder
  fullName: ArtificialIntelligence.secondaryNodeFinder
- uid: Global.ArtificialIntelligence.relationshipTracker
  commentId: P:Global.ArtificialIntelligence.relationshipTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_relationshipTracker
  name: relationshipTracker
  nameWithType: ArtificialIntelligence.relationshipTracker
  fullName: ArtificialIntelligence.relationshipTracker
- uid: Global.ArtificialIntelligence.itemTracker
  commentId: P:Global.ArtificialIntelligence.itemTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_itemTracker
  name: itemTracker
  nameWithType: ArtificialIntelligence.itemTracker
  fullName: ArtificialIntelligence.itemTracker
- uid: Global.ArtificialIntelligence.discomfortTracker
  commentId: P:Global.ArtificialIntelligence.discomfortTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_discomfortTracker
  name: discomfortTracker
  nameWithType: ArtificialIntelligence.discomfortTracker
  fullName: ArtificialIntelligence.discomfortTracker
- uid: Global.ArtificialIntelligence.stuckTracker
  commentId: P:Global.ArtificialIntelligence.stuckTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_stuckTracker
  name: stuckTracker
  nameWithType: ArtificialIntelligence.stuckTracker
  fullName: ArtificialIntelligence.stuckTracker
- uid: Global.ArtificialIntelligence.injuryTracker
  commentId: P:Global.ArtificialIntelligence.injuryTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_injuryTracker
  name: injuryTracker
  nameWithType: ArtificialIntelligence.injuryTracker
  fullName: ArtificialIntelligence.injuryTracker
- uid: Global.ArtificialIntelligence.friendTracker
  commentId: P:Global.ArtificialIntelligence.friendTracker
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_friendTracker
  name: friendTracker
  nameWithType: ArtificialIntelligence.friendTracker
  fullName: ArtificialIntelligence.friendTracker
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.YellowAI
  commentId: T:Global.YellowAI
  isExternal: true
  href: YellowAI.html
  name: YellowAI
  nameWithType: YellowAI
  fullName: YellowAI
- uid: Global.LizardAI.LizardSpitTracker
  commentId: T:Global.LizardAI.LizardSpitTracker
  isExternal: true
  href: LizardAI.html
  name: LizardAI.LizardSpitTracker
  nameWithType: LizardAI.LizardSpitTracker
  fullName: LizardAI.LizardSpitTracker
  spec.csharp:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LizardSpitTracker
    name: LizardSpitTracker
    isExternal: true
    href: LizardAI.LizardSpitTracker.html
  spec.vb:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LizardSpitTracker
    name: LizardSpitTracker
    isExternal: true
    href: LizardAI.LizardSpitTracker.html
- uid: Global.LizardAI.LurkTracker
  commentId: T:Global.LizardAI.LurkTracker
  isExternal: true
  href: LizardAI.html
  name: LizardAI.LurkTracker
  nameWithType: LizardAI.LurkTracker
  fullName: LizardAI.LurkTracker
  spec.csharp:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LurkTracker
    name: LurkTracker
    isExternal: true
    href: LizardAI.LurkTracker.html
  spec.vb:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LurkTracker
    name: LurkTracker
    isExternal: true
    href: LizardAI.LurkTracker.html
- uid: Global.LizardAI.Behavior
  commentId: T:Global.LizardAI.Behavior
  isExternal: true
  href: LizardAI.html
  name: LizardAI.Behavior
  nameWithType: LizardAI.Behavior
  fullName: LizardAI.Behavior
  spec.csharp:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.Behavior
    name: Behavior
    isExternal: true
    href: LizardAI.Behavior.html
  spec.vb:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.Behavior
    name: Behavior
    isExternal: true
    href: LizardAI.Behavior.html
- uid: Global.LizardAI.#ctor*
  commentId: Overload:Global.LizardAI.#ctor
  isExternal: true
  href: Global.LizardAI.html#LizardAI__ctor_AbstractCreature_World_
  name: LizardAI
  nameWithType: LizardAI.LizardAI
  fullName: LizardAI.LizardAI
  nameWithType.vb: LizardAI.New
  fullName.vb: LizardAI.New
  name.vb: New
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.ArtificialIntelligence.NewRoom(Room)
  commentId: M:Global.ArtificialIntelligence.NewRoom(Room)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: ArtificialIntelligence.NewRoom(Room)
  fullName: ArtificialIntelligence.NewRoom(Room)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.LizardAI.NewRoom*
  commentId: Overload:Global.LizardAI.NewRoom
  isExternal: true
  href: Global.LizardAI.html#LizardAI_NewRoom_Room_
  name: NewRoom
  nameWithType: LizardAI.NewRoom
  fullName: LizardAI.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.ArtificialIntelligence.Update
  commentId: M:Global.ArtificialIntelligence.Update
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_Update
  name: Update()
  nameWithType: ArtificialIntelligence.Update()
  fullName: ArtificialIntelligence.Update()
  spec.csharp:
  - uid: Global.ArtificialIntelligence.Update
    name: Update
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.Update
    name: Update
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_Update
  - name: (
  - name: )
- uid: Global.LizardAI.Update*
  commentId: Overload:Global.LizardAI.Update
  isExternal: true
  href: Global.LizardAI.html#LizardAI_Update
  name: Update
  nameWithType: LizardAI.Update
  fullName: LizardAI.Update
- uid: Global.ArtificialIntelligence.NewArea(System.Boolean)
  commentId: M:Global.ArtificialIntelligence.NewArea(System.Boolean)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewArea_System_Boolean_
  name: NewArea(bool)
  nameWithType: ArtificialIntelligence.NewArea(bool)
  fullName: ArtificialIntelligence.NewArea(bool)
  nameWithType.vb: ArtificialIntelligence.NewArea(Boolean)
  fullName.vb: ArtificialIntelligence.NewArea(Boolean)
  name.vb: NewArea(Boolean)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.NewArea(System.Boolean)
    name: NewArea
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewArea_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.NewArea(System.Boolean)
    name: NewArea
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_NewArea_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.LizardAI.NewArea*
  commentId: Overload:Global.LizardAI.NewArea
  isExternal: true
  href: Global.LizardAI.html#LizardAI_NewArea_System_Boolean_
  name: NewArea
  nameWithType: LizardAI.NewArea
  fullName: LizardAI.NewArea
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ArtificialIntelligence.WantToStayInDenUntilEndOfCycle
  commentId: M:Global.ArtificialIntelligence.WantToStayInDenUntilEndOfCycle
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_WantToStayInDenUntilEndOfCycle
  name: WantToStayInDenUntilEndOfCycle()
  nameWithType: ArtificialIntelligence.WantToStayInDenUntilEndOfCycle()
  fullName: ArtificialIntelligence.WantToStayInDenUntilEndOfCycle()
  spec.csharp:
  - uid: Global.ArtificialIntelligence.WantToStayInDenUntilEndOfCycle
    name: WantToStayInDenUntilEndOfCycle
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_WantToStayInDenUntilEndOfCycle
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.WantToStayInDenUntilEndOfCycle
    name: WantToStayInDenUntilEndOfCycle
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_WantToStayInDenUntilEndOfCycle
  - name: (
  - name: )
- uid: Global.LizardAI.WantToStayInDenUntilEndOfCycle*
  commentId: Overload:Global.LizardAI.WantToStayInDenUntilEndOfCycle
  isExternal: true
  href: Global.LizardAI.html#LizardAI_WantToStayInDenUntilEndOfCycle
  name: WantToStayInDenUntilEndOfCycle
  nameWithType: LizardAI.WantToStayInDenUntilEndOfCycle
  fullName: LizardAI.WantToStayInDenUntilEndOfCycle
- uid: Global.ArtificialIntelligence.VisualScore(UnityEngine.Vector2,System.Single)
  commentId: M:Global.ArtificialIntelligence.VisualScore(UnityEngine.Vector2,System.Single)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualScore_UnityEngine_Vector2_System_Single_
  name: VisualScore(Vector2, float)
  nameWithType: ArtificialIntelligence.VisualScore(Vector2, float)
  fullName: ArtificialIntelligence.VisualScore(UnityEngine.Vector2, float)
  nameWithType.vb: ArtificialIntelligence.VisualScore(Vector2, Single)
  fullName.vb: ArtificialIntelligence.VisualScore(UnityEngine.Vector2, Single)
  name.vb: VisualScore(Vector2, Single)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.VisualScore(UnityEngine.Vector2,System.Single)
    name: VisualScore
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualScore_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.VisualScore(UnityEngine.Vector2,System.Single)
    name: VisualScore
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_VisualScore_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.LizardAI.VisualScore*
  commentId: Overload:Global.LizardAI.VisualScore
  isExternal: true
  href: Global.LizardAI.html#LizardAI_VisualScore_UnityEngine_Vector2_System_Single_
  name: VisualScore
  nameWithType: LizardAI.VisualScore
  fullName: LizardAI.VisualScore
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.LizardAI.UnpleasantFallRisk*
  commentId: Overload:Global.LizardAI.UnpleasantFallRisk
  isExternal: true
  href: Global.LizardAI.html#LizardAI_UnpleasantFallRisk_RWCustom_IntVector2_
  name: UnpleasantFallRisk
  nameWithType: LizardAI.UnpleasantFallRisk
  fullName: LizardAI.UnpleasantFallRisk
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.LizardAI.BitCreature*
  commentId: Overload:Global.LizardAI.BitCreature
  isExternal: true
  href: Global.LizardAI.html#LizardAI_BitCreature_BodyChunk_
  name: BitCreature
  nameWithType: LizardAI.BitCreature
  fullName: LizardAI.BitCreature
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.ArtificialIntelligence.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  commentId: M:Global.ArtificialIntelligence.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreatureSpotted_System_Boolean_Tracker_CreatureRepresentation_
  name: CreatureSpotted(bool, CreatureRepresentation)
  nameWithType: ArtificialIntelligence.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  fullName: ArtificialIntelligence.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  nameWithType.vb: ArtificialIntelligence.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  fullName.vb: ArtificialIntelligence.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  name.vb: CreatureSpotted(Boolean, CreatureRepresentation)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
    name: CreatureSpotted
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreatureSpotted_System_Boolean_Tracker_CreatureRepresentation_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
    name: CreatureSpotted
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreatureSpotted_System_Boolean_Tracker_CreatureRepresentation_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: )
- uid: Global.LizardAI.CreatureSpotted*
  commentId: Overload:Global.LizardAI.CreatureSpotted
  isExternal: true
  href: Global.LizardAI.html#LizardAI_CreatureSpotted_System_Boolean_Tracker_CreatureRepresentation_
  name: CreatureSpotted
  nameWithType: LizardAI.CreatureSpotted
  fullName: LizardAI.CreatureSpotted
- uid: Global.ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreateTrackerRepresentationForCreature_AbstractCreature_
  name: CreateTrackerRepresentationForCreature(AbstractCreature)
  nameWithType: ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
  fullName: ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
    name: CreateTrackerRepresentationForCreature
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreateTrackerRepresentationForCreature_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.CreateTrackerRepresentationForCreature(AbstractCreature)
    name: CreateTrackerRepresentationForCreature
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CreateTrackerRepresentationForCreature_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.LizardAI.CreateTrackerRepresentationForCreature*
  commentId: Overload:Global.LizardAI.CreateTrackerRepresentationForCreature
  isExternal: true
  href: Global.LizardAI.html#LizardAI_CreateTrackerRepresentationForCreature_AbstractCreature_
  name: CreateTrackerRepresentationForCreature
  nameWithType: LizardAI.CreateTrackerRepresentationForCreature
  fullName: LizardAI.CreateTrackerRepresentationForCreature
- uid: Global.LizardAI.LikeOfPlayer*
  commentId: Overload:Global.LizardAI.LikeOfPlayer
  isExternal: true
  href: Global.LizardAI.html#LizardAI_LikeOfPlayer_Tracker_CreatureRepresentation_
  name: LikeOfPlayer
  nameWithType: LizardAI.LikeOfPlayer
  fullName: LizardAI.LikeOfPlayer
- uid: Global.ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
  commentId: M:Global.ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CurrentPlayerAggression_AbstractCreature_
  name: CurrentPlayerAggression(AbstractCreature)
  nameWithType: ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
  fullName: ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
    name: CurrentPlayerAggression
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CurrentPlayerAggression_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.CurrentPlayerAggression(AbstractCreature)
    name: CurrentPlayerAggression
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_CurrentPlayerAggression_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.LizardAI.CurrentPlayerAggression*
  commentId: Overload:Global.LizardAI.CurrentPlayerAggression
  isExternal: true
  href: Global.LizardAI.html#LizardAI_CurrentPlayerAggression_AbstractCreature_
  name: CurrentPlayerAggression
  nameWithType: LizardAI.CurrentPlayerAggression
  fullName: LizardAI.CurrentPlayerAggression
- uid: Global.ArtificialIntelligence.TravelPreference(MovementConnection,PathCost)
  commentId: M:Global.ArtificialIntelligence.TravelPreference(MovementConnection,PathCost)
  parent: Global.ArtificialIntelligence
  isExternal: true
  href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TravelPreference_MovementConnection_PathCost_
  name: TravelPreference(MovementConnection, PathCost)
  nameWithType: ArtificialIntelligence.TravelPreference(MovementConnection, PathCost)
  fullName: ArtificialIntelligence.TravelPreference(MovementConnection, PathCost)
  spec.csharp:
  - uid: Global.ArtificialIntelligence.TravelPreference(MovementConnection,PathCost)
    name: TravelPreference
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TravelPreference_MovementConnection_PathCost_
  - name: (
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: ','
  - name: " "
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: )
  spec.vb:
  - uid: Global.ArtificialIntelligence.TravelPreference(MovementConnection,PathCost)
    name: TravelPreference
    isExternal: true
    href: Global.ArtificialIntelligence.html#ArtificialIntelligence_TravelPreference_MovementConnection_PathCost_
  - name: (
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: ','
  - name: " "
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: )
- uid: Global.LizardAI.TravelPreference*
  commentId: Overload:Global.LizardAI.TravelPreference
  isExternal: true
  href: Global.LizardAI.html#LizardAI_TravelPreference_MovementConnection_PathCost_
  name: TravelPreference
  nameWithType: LizardAI.TravelPreference
  fullName: LizardAI.TravelPreference
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: Global.LizardAI.DoIWantToHoldThisWithMyTongue*
  commentId: Overload:Global.LizardAI.DoIWantToHoldThisWithMyTongue
  isExternal: true
  href: Global.LizardAI.html#LizardAI_DoIWantToHoldThisWithMyTongue_BodyChunk_
  name: DoIWantToHoldThisWithMyTongue
  nameWithType: LizardAI.DoIWantToHoldThisWithMyTongue
  fullName: LizardAI.DoIWantToHoldThisWithMyTongue
- uid: Global.LizardAI.DoIWantToBiteThisCreature*
  commentId: Overload:Global.LizardAI.DoIWantToBiteThisCreature
  isExternal: true
  href: Global.LizardAI.html#LizardAI_DoIWantToBiteThisCreature_Tracker_CreatureRepresentation_
  name: DoIWantToBiteThisCreature
  nameWithType: LizardAI.DoIWantToBiteThisCreature
  fullName: LizardAI.DoIWantToBiteThisCreature
- uid: Global.LizardAI.RecieveCommunication*
  commentId: Overload:Global.LizardAI.RecieveCommunication
  isExternal: true
  href: Global.LizardAI.html#LizardAI_RecieveCommunication_Lizard_LizardAI_LizardCommunication_
  name: RecieveCommunication
  nameWithType: LizardAI.RecieveCommunication
  fullName: LizardAI.RecieveCommunication
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: Global.LizardAI.LizardCommunication
  commentId: T:Global.LizardAI.LizardCommunication
  isExternal: true
  href: LizardAI.html
  name: LizardAI.LizardCommunication
  nameWithType: LizardAI.LizardCommunication
  fullName: LizardAI.LizardCommunication
  spec.csharp:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LizardCommunication
    name: LizardCommunication
    isExternal: true
    href: LizardAI.LizardCommunication.html
  spec.vb:
  - uid: Global.LizardAI
    name: LizardAI
    isExternal: true
    href: LizardAI.html
  - name: .
  - uid: Global.LizardAI.LizardCommunication
    name: LizardCommunication
    isExternal: true
    href: LizardAI.LizardCommunication.html
- uid: Global.LizardAI.ReactToNoise*
  commentId: Overload:Global.LizardAI.ReactToNoise
  isExternal: true
  href: Global.LizardAI.html#LizardAI_ReactToNoise_NoiseTracker_TheorizedSource_Noise_InGameNoise_
  name: ReactToNoise
  nameWithType: LizardAI.ReactToNoise
  fullName: LizardAI.ReactToNoise
- uid: Global.IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  commentId: M:Global.IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
  parent: Global.IAINoiseReaction
  isExternal: true
  href: Global.IAINoiseReaction.html#IAINoiseReaction_ReactToNoise_NoiseTracker_TheorizedSource_Noise_InGameNoise_
  name: ReactToNoise(TheorizedSource, InGameNoise)
  nameWithType: IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource, InGameNoise)
  fullName: IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource, Noise.InGameNoise)
  spec.csharp:
  - uid: Global.IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
    name: ReactToNoise
    isExternal: true
    href: Global.IAINoiseReaction.html#IAINoiseReaction_ReactToNoise_NoiseTracker_TheorizedSource_Noise_InGameNoise_
  - name: (
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
  - name: ','
  - name: " "
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
  spec.vb:
  - uid: Global.IAINoiseReaction.ReactToNoise(NoiseTracker.TheorizedSource,Noise.InGameNoise)
    name: ReactToNoise
    isExternal: true
    href: Global.IAINoiseReaction.html#IAINoiseReaction_ReactToNoise_NoiseTracker_TheorizedSource_Noise_InGameNoise_
  - name: (
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
  - name: ','
  - name: " "
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: Global.NoiseTracker.TheorizedSource
  commentId: T:Global.NoiseTracker.TheorizedSource
  isExternal: true
  href: NoiseTracker.html
  name: NoiseTracker.TheorizedSource
  nameWithType: NoiseTracker.TheorizedSource
  fullName: NoiseTracker.TheorizedSource
  spec.csharp:
  - uid: Global.NoiseTracker
    name: NoiseTracker
    isExternal: true
    href: NoiseTracker.html
  - name: .
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
  spec.vb:
  - uid: Global.NoiseTracker
    name: NoiseTracker
    isExternal: true
    href: NoiseTracker.html
  - name: .
  - uid: Global.NoiseTracker.TheorizedSource
    name: TheorizedSource
    isExternal: true
    href: NoiseTracker.TheorizedSource.html
- uid: Noise.InGameNoise
  commentId: T:Noise.InGameNoise
  parent: Noise
  isExternal: true
  href: Noise.InGameNoise.html
  name: InGameNoise
  nameWithType: InGameNoise
  fullName: Noise.InGameNoise
- uid: Noise
  commentId: N:Noise
  isExternal: true
  href: Noise.html
  name: Noise
  nameWithType: Noise
  fullName: Noise
- uid: Global.LizardAI.SocialEvent*
  commentId: Overload:Global.LizardAI.SocialEvent
  isExternal: true
  href: Global.LizardAI.html#LizardAI_SocialEvent_SocialEventRecognizer_EventID_Creature_Creature_PhysicalObject_
  name: SocialEvent
  nameWithType: LizardAI.SocialEvent
  fullName: LizardAI.SocialEvent
- uid: Global.IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  commentId: M:Global.IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
  parent: Global.IReactToSocialEvents
  isExternal: true
  href: Global.IReactToSocialEvents.html#IReactToSocialEvents_SocialEvent_SocialEventRecognizer_EventID_Creature_Creature_PhysicalObject_
  name: SocialEvent(EventID, Creature, Creature, PhysicalObject)
  nameWithType: IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  fullName: IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID, Creature, Creature, PhysicalObject)
  spec.csharp:
  - uid: Global.IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
    name: SocialEvent
    isExternal: true
    href: Global.IReactToSocialEvents.html#IReactToSocialEvents_SocialEvent_SocialEventRecognizer_EventID_Creature_Creature_PhysicalObject_
  - name: (
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
  spec.vb:
  - uid: Global.IReactToSocialEvents.SocialEvent(SocialEventRecognizer.EventID,Creature,Creature,PhysicalObject)
    name: SocialEvent
    isExternal: true
    href: Global.IReactToSocialEvents.html#IReactToSocialEvents_SocialEvent_SocialEventRecognizer_EventID_Creature_Creature_PhysicalObject_
  - name: (
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
- uid: Global.SocialEventRecognizer.EventID
  commentId: T:Global.SocialEventRecognizer.EventID
  isExternal: true
  href: SocialEventRecognizer.html
  name: SocialEventRecognizer.EventID
  nameWithType: SocialEventRecognizer.EventID
  fullName: SocialEventRecognizer.EventID
  spec.csharp:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
  spec.vb:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.EventID
    name: EventID
    isExternal: true
    href: SocialEventRecognizer.EventID.html
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.LizardAI.GiftRecieved*
  commentId: Overload:Global.LizardAI.GiftRecieved
  isExternal: true
  href: Global.LizardAI.html#LizardAI_GiftRecieved_SocialEventRecognizer_OwnedItemOnGround_
  name: GiftRecieved
  nameWithType: LizardAI.GiftRecieved
  fullName: LizardAI.GiftRecieved
- uid: Global.FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  commentId: M:Global.FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  parent: Global.FriendTracker.IHaveFriendTracker
  isExternal: true
  href: Global.FriendTracker.IHaveFriendTracker.html#FriendTracker_IHaveFriendTracker_GiftRecieved_SocialEventRecognizer_OwnedItemOnGround_
  name: GiftRecieved(OwnedItemOnGround)
  nameWithType: FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  fullName: FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
  spec.csharp:
  - uid: Global.FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
    name: GiftRecieved
    isExternal: true
    href: Global.FriendTracker.IHaveFriendTracker.html#FriendTracker_IHaveFriendTracker_GiftRecieved_SocialEventRecognizer_OwnedItemOnGround_
  - name: (
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  - name: )
  spec.vb:
  - uid: Global.FriendTracker.IHaveFriendTracker.GiftRecieved(SocialEventRecognizer.OwnedItemOnGround)
    name: GiftRecieved
    isExternal: true
    href: Global.FriendTracker.IHaveFriendTracker.html#FriendTracker_IHaveFriendTracker_GiftRecieved_SocialEventRecognizer_OwnedItemOnGround_
  - name: (
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  - name: )
- uid: Global.SocialEventRecognizer.OwnedItemOnGround
  commentId: T:Global.SocialEventRecognizer.OwnedItemOnGround
  isExternal: true
  href: SocialEventRecognizer.html
  name: SocialEventRecognizer.OwnedItemOnGround
  nameWithType: SocialEventRecognizer.OwnedItemOnGround
  fullName: SocialEventRecognizer.OwnedItemOnGround
  spec.csharp:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
  spec.vb:
  - uid: Global.SocialEventRecognizer
    name: SocialEventRecognizer
    isExternal: true
    href: SocialEventRecognizer.html
  - name: .
  - uid: Global.SocialEventRecognizer.OwnedItemOnGround
    name: OwnedItemOnGround
    isExternal: true
    href: SocialEventRecognizer.OwnedItemOnGround.html
- uid: Global.LizardAI.CombinedFear*
  commentId: Overload:Global.LizardAI.CombinedFear
  isExternal: true
  href: Global.LizardAI.html#LizardAI_CombinedFear
  name: CombinedFear
  nameWithType: LizardAI.CombinedFear
  fullName: LizardAI.CombinedFear
- uid: Global.LizardAI.ApplyLocustDeterrent*
  commentId: Overload:Global.LizardAI.ApplyLocustDeterrent
  isExternal: true
  href: Global.LizardAI.html#LizardAI_ApplyLocustDeterrent
  name: ApplyLocustDeterrent
  nameWithType: LizardAI.ApplyLocustDeterrent
  fullName: LizardAI.ApplyLocustDeterrent
