### YamlMime:ManagedReference
items:
- uid: Global.AbstractCreature.Personality
  commentId: T:Global.AbstractCreature.Personality
  id: AbstractCreature.Personality
  parent: Global
  children:
  - Global.AbstractCreature.Personality.#ctor(EntityID)
  - Global.AbstractCreature.Personality.aggression
  - Global.AbstractCreature.Personality.bravery
  - Global.AbstractCreature.Personality.dominance
  - Global.AbstractCreature.Personality.energy
  - Global.AbstractCreature.Personality.nervous
  - Global.AbstractCreature.Personality.sympathy
  langs:
  - csharp
  - vb
  name: AbstractCreature.Personality
  nameWithType: AbstractCreature.Personality
  fullName: AbstractCreature.Personality
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractCreature.Personality</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct AbstractCreature.Personality
    content.vb: Public Structure AbstractCreature.Personality
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.AbstractCreature.Personality.energy
  commentId: F:Global.AbstractCreature.Personality.energy
  id: energy
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: energy
  nameWithType: AbstractCreature.Personality.energy
  fullName: AbstractCreature.Personality.energy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.energy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float energy
    return:
      type: System.Single
    content.vb: Public energy As Single
- uid: Global.AbstractCreature.Personality.bravery
  commentId: F:Global.AbstractCreature.Personality.bravery
  id: bravery
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: bravery
  nameWithType: AbstractCreature.Personality.bravery
  fullName: AbstractCreature.Personality.bravery
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.bravery</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bravery
    return:
      type: System.Single
    content.vb: Public bravery As Single
- uid: Global.AbstractCreature.Personality.sympathy
  commentId: F:Global.AbstractCreature.Personality.sympathy
  id: sympathy
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: sympathy
  nameWithType: AbstractCreature.Personality.sympathy
  fullName: AbstractCreature.Personality.sympathy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.sympathy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sympathy
    return:
      type: System.Single
    content.vb: Public sympathy As Single
- uid: Global.AbstractCreature.Personality.dominance
  commentId: F:Global.AbstractCreature.Personality.dominance
  id: dominance
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: dominance
  nameWithType: AbstractCreature.Personality.dominance
  fullName: AbstractCreature.Personality.dominance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.dominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dominance
    return:
      type: System.Single
    content.vb: Public dominance As Single
- uid: Global.AbstractCreature.Personality.nervous
  commentId: F:Global.AbstractCreature.Personality.nervous
  id: nervous
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: nervous
  nameWithType: AbstractCreature.Personality.nervous
  fullName: AbstractCreature.Personality.nervous
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.nervous</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float nervous
    return:
      type: System.Single
    content.vb: Public nervous As Single
- uid: Global.AbstractCreature.Personality.aggression
  commentId: F:Global.AbstractCreature.Personality.aggression
  id: aggression
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: aggression
  nameWithType: AbstractCreature.Personality.aggression
  fullName: AbstractCreature.Personality.aggression
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractCreature.Personality.aggression</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float aggression
    return:
      type: System.Single
    content.vb: Public aggression As Single
- uid: Global.AbstractCreature.Personality.#ctor(EntityID)
  commentId: M:Global.AbstractCreature.Personality.#ctor(EntityID)
  id: '#ctor(EntityID)'
  parent: Global.AbstractCreature.Personality
  langs:
  - csharp
  - vb
  name: Personality(EntityID)
  nameWithType: AbstractCreature.Personality.Personality(EntityID)
  fullName: AbstractCreature.Personality.Personality(EntityID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractCreature.Personality</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Personality(EntityID ID)
    parameters:
    - id: ID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:AbstractCreature.Personality.#ctor(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ID As EntityID)
  overload: Global.AbstractCreature.Personality.#ctor*
  nameWithType.vb: AbstractCreature.Personality.New(EntityID)
  fullName.vb: AbstractCreature.Personality.New(EntityID)
  name.vb: New(EntityID)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.AbstractCreature.Personality.#ctor*
  commentId: Overload:Global.AbstractCreature.Personality.#ctor
  isExternal: true
  href: Global.AbstractCreature.Personality.html#AbstractCreature_Personality__ctor_EntityID_
  name: Personality
  nameWithType: AbstractCreature.Personality.Personality
  fullName: AbstractCreature.Personality.Personality
  nameWithType.vb: AbstractCreature.Personality.New
  fullName.vb: AbstractCreature.Personality.New
  name.vb: New
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
