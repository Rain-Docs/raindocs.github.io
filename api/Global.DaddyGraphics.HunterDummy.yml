### YamlMime:ManagedReference
items:
- uid: Global.DaddyGraphics.HunterDummy
  commentId: T:Global.DaddyGraphics.HunterDummy
  id: DaddyGraphics.HunterDummy
  parent: Global
  children:
  - Global.DaddyGraphics.HunterDummy.#ctor(DaddyGraphics,System.Int32)
  - Global.DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.DaddyGraphics.HunterDummy.Reset
  - Global.DaddyGraphics.HunterDummy.Update
  - Global.DaddyGraphics.HunterDummy.bodyParts
  - Global.DaddyGraphics.HunterDummy.breath
  - Global.DaddyGraphics.HunterDummy.darkenFactor
  - Global.DaddyGraphics.HunterDummy.drawPositions
  - Global.DaddyGraphics.HunterDummy.head
  - Global.DaddyGraphics.HunterDummy.lastBreath
  - Global.DaddyGraphics.HunterDummy.numberOfSprites
  - Global.DaddyGraphics.HunterDummy.owner
  - Global.DaddyGraphics.HunterDummy.startSprite
  - Global.DaddyGraphics.HunterDummy.tail
  langs:
  - csharp
  - vb
  name: DaddyGraphics.HunterDummy
  nameWithType: DaddyGraphics.HunterDummy
  fullName: DaddyGraphics.HunterDummy
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DaddyGraphics.HunterDummy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class DaddyGraphics.HunterDummy
    content.vb: Public Class DaddyGraphics.HunterDummy
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.DaddyGraphics.HunterDummy.owner
  commentId: F:Global.DaddyGraphics.HunterDummy.owner
  id: owner
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: DaddyGraphics.HunterDummy.owner
  fullName: DaddyGraphics.HunterDummy.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DaddyGraphics owner
    return:
      type: Global.DaddyGraphics
    content.vb: Public owner As DaddyGraphics
- uid: Global.DaddyGraphics.HunterDummy.startSprite
  commentId: F:Global.DaddyGraphics.HunterDummy.startSprite
  id: startSprite
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: startSprite
  nameWithType: DaddyGraphics.HunterDummy.startSprite
  fullName: DaddyGraphics.HunterDummy.startSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.startSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int startSprite
    return:
      type: System.Int32
    content.vb: Public startSprite As Integer
- uid: Global.DaddyGraphics.HunterDummy.numberOfSprites
  commentId: F:Global.DaddyGraphics.HunterDummy.numberOfSprites
  id: numberOfSprites
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: numberOfSprites
  nameWithType: DaddyGraphics.HunterDummy.numberOfSprites
  fullName: DaddyGraphics.HunterDummy.numberOfSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.numberOfSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int numberOfSprites
    return:
      type: System.Int32
    content.vb: Public numberOfSprites As Integer
- uid: Global.DaddyGraphics.HunterDummy.tail
  commentId: F:Global.DaddyGraphics.HunterDummy.tail
  id: tail
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: tail
  nameWithType: DaddyGraphics.HunterDummy.tail
  fullName: DaddyGraphics.HunterDummy.tail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.tail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TailSegment[] tail
    return:
      type: Global.TailSegment[]
    content.vb: Public tail As TailSegment()
- uid: Global.DaddyGraphics.HunterDummy.head
  commentId: F:Global.DaddyGraphics.HunterDummy.head
  id: head
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: head
  nameWithType: DaddyGraphics.HunterDummy.head
  fullName: DaddyGraphics.HunterDummy.head
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.head</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GenericBodyPart head
    return:
      type: Global.GenericBodyPart
    content.vb: Public head As GenericBodyPart
- uid: Global.DaddyGraphics.HunterDummy.bodyParts
  commentId: F:Global.DaddyGraphics.HunterDummy.bodyParts
  id: bodyParts
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: bodyParts
  nameWithType: DaddyGraphics.HunterDummy.bodyParts
  fullName: DaddyGraphics.HunterDummy.bodyParts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.bodyParts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyPart[] bodyParts
    return:
      type: Global.BodyPart[]
    content.vb: Public bodyParts As BodyPart()
- uid: Global.DaddyGraphics.HunterDummy.drawPositions
  commentId: F:Global.DaddyGraphics.HunterDummy.drawPositions
  id: drawPositions
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: drawPositions
  nameWithType: DaddyGraphics.HunterDummy.drawPositions
  fullName: DaddyGraphics.HunterDummy.drawPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.drawPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] drawPositions
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public drawPositions As Vector2(,)
- uid: Global.DaddyGraphics.HunterDummy.breath
  commentId: F:Global.DaddyGraphics.HunterDummy.breath
  id: breath
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: breath
  nameWithType: DaddyGraphics.HunterDummy.breath
  fullName: DaddyGraphics.HunterDummy.breath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.breath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float breath
    return:
      type: System.Single
    content.vb: Public breath As Single
- uid: Global.DaddyGraphics.HunterDummy.lastBreath
  commentId: F:Global.DaddyGraphics.HunterDummy.lastBreath
  id: lastBreath
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: lastBreath
  nameWithType: DaddyGraphics.HunterDummy.lastBreath
  fullName: DaddyGraphics.HunterDummy.lastBreath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.lastBreath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastBreath
    return:
      type: System.Single
    content.vb: Public lastBreath As Single
- uid: Global.DaddyGraphics.HunterDummy.darkenFactor
  commentId: F:Global.DaddyGraphics.HunterDummy.darkenFactor
  id: darkenFactor
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: darkenFactor
  nameWithType: DaddyGraphics.HunterDummy.darkenFactor
  fullName: DaddyGraphics.HunterDummy.darkenFactor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DaddyGraphics.HunterDummy.darkenFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float darkenFactor
    return:
      type: System.Single
    content.vb: Public darkenFactor As Single
- uid: Global.DaddyGraphics.HunterDummy.#ctor(DaddyGraphics,System.Int32)
  commentId: M:Global.DaddyGraphics.HunterDummy.#ctor(DaddyGraphics,System.Int32)
  id: '#ctor(DaddyGraphics,System.Int32)'
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: HunterDummy(DaddyGraphics, int)
  nameWithType: DaddyGraphics.HunterDummy.HunterDummy(DaddyGraphics, int)
  fullName: DaddyGraphics.HunterDummy.HunterDummy(DaddyGraphics, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>DaddyGraphics.HunterDummy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HunterDummy(DaddyGraphics dg, int startSprite)
    parameters:
    - id: dg
      type: Global.DaddyGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dg</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.#ctor(DaddyGraphics,System.Int32)</parameter>
          </include>
        </markup>
    - id: startSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startSprite</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.#ctor(DaddyGraphics,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(dg As DaddyGraphics, startSprite As Integer)
  overload: Global.DaddyGraphics.HunterDummy.#ctor*
  nameWithType.vb: DaddyGraphics.HunterDummy.New(DaddyGraphics, Integer)
  fullName.vb: DaddyGraphics.HunterDummy.New(DaddyGraphics, Integer)
  name.vb: New(DaddyGraphics, Integer)
- uid: Global.DaddyGraphics.HunterDummy.Update
  commentId: M:Global.DaddyGraphics.HunterDummy.Update
  id: Update
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DaddyGraphics.HunterDummy.Update()
  fullName: DaddyGraphics.HunterDummy.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.DaddyGraphics.HunterDummy.Update*
- uid: Global.DaddyGraphics.HunterDummy.Reset
  commentId: M:Global.DaddyGraphics.HunterDummy.Reset
  id: Reset
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: DaddyGraphics.HunterDummy.Reset()
  fullName: DaddyGraphics.HunterDummy.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.DaddyGraphics.HunterDummy.Reset*
- uid: Global.DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.DaddyGraphics.HunterDummy.InitiateSprites*
- uid: Global.DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.DaddyGraphics.HunterDummy.DrawSprites*
  nameWithType.vb: DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: DaddyGraphics.HunterDummy.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.DaddyGraphics.HunterDummy.ApplyPalette*
- uid: Global.DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.DaddyGraphics.HunterDummy
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:DaddyGraphics.HunterDummy.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.DaddyGraphics.HunterDummy.AddToContainer*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.DaddyGraphics
  commentId: T:Global.DaddyGraphics
  isExternal: true
  href: DaddyGraphics.html
  name: DaddyGraphics
  nameWithType: DaddyGraphics
  fullName: DaddyGraphics
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.TailSegment[]
  isExternal: true
  href: TailSegment.html
  name: TailSegment[]
  nameWithType: TailSegment[]
  fullName: TailSegment[]
  nameWithType.vb: TailSegment()
  fullName.vb: TailSegment()
  name.vb: TailSegment()
  spec.csharp:
  - uid: Global.TailSegment
    name: TailSegment
    isExternal: true
    href: TailSegment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.TailSegment
    name: TailSegment
    isExternal: true
    href: TailSegment.html
  - name: (
  - name: )
- uid: Global.GenericBodyPart
  commentId: T:Global.GenericBodyPart
  isExternal: true
  href: GenericBodyPart.html
  name: GenericBodyPart
  nameWithType: GenericBodyPart
  fullName: GenericBodyPart
- uid: Global.BodyPart[]
  isExternal: true
  href: BodyPart.html
  name: BodyPart[]
  nameWithType: BodyPart[]
  fullName: BodyPart[]
  nameWithType.vb: BodyPart()
  fullName.vb: BodyPart()
  name.vb: BodyPart()
  spec.csharp:
  - uid: Global.BodyPart
    name: BodyPart
    isExternal: true
    href: BodyPart.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.BodyPart
    name: BodyPart
    isExternal: true
    href: BodyPart.html
  - name: (
  - name: )
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.DaddyGraphics.HunterDummy.#ctor*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.#ctor
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy__ctor_DaddyGraphics_System_Int32_
  name: HunterDummy
  nameWithType: DaddyGraphics.HunterDummy.HunterDummy
  fullName: DaddyGraphics.HunterDummy.HunterDummy
  nameWithType.vb: DaddyGraphics.HunterDummy.New
  fullName.vb: DaddyGraphics.HunterDummy.New
  name.vb: New
- uid: Global.DaddyGraphics.HunterDummy.Update*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.Update
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_Update
  name: Update
  nameWithType: DaddyGraphics.HunterDummy.Update
  fullName: DaddyGraphics.HunterDummy.Update
- uid: Global.DaddyGraphics.HunterDummy.Reset*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.Reset
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_Reset
  name: Reset
  nameWithType: DaddyGraphics.HunterDummy.Reset
  fullName: DaddyGraphics.HunterDummy.Reset
- uid: Global.DaddyGraphics.HunterDummy.InitiateSprites*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.InitiateSprites
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: DaddyGraphics.HunterDummy.InitiateSprites
  fullName: DaddyGraphics.HunterDummy.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.DaddyGraphics.HunterDummy.DrawSprites*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.DrawSprites
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: DaddyGraphics.HunterDummy.DrawSprites
  fullName: DaddyGraphics.HunterDummy.DrawSprites
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.DaddyGraphics.HunterDummy.ApplyPalette*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.ApplyPalette
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: DaddyGraphics.HunterDummy.ApplyPalette
  fullName: DaddyGraphics.HunterDummy.ApplyPalette
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.DaddyGraphics.HunterDummy.AddToContainer*
  commentId: Overload:Global.DaddyGraphics.HunterDummy.AddToContainer
  isExternal: true
  href: Global.DaddyGraphics.HunterDummy.html#DaddyGraphics_HunterDummy_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: DaddyGraphics.HunterDummy.AddToContainer
  fullName: DaddyGraphics.HunterDummy.AddToContainer
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
