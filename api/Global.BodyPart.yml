### YamlMime:ManagedReference
items:
- uid: Global.BodyPart
  commentId: T:Global.BodyPart
  id: BodyPart
  parent: Global
  children:
  - Global.BodyPart.#ctor(GraphicsModule)
  - Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  - Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  - Global.BodyPart.Reset(UnityEngine.Vector2)
  - Global.BodyPart.Update
  - Global.BodyPart.airFriction
  - Global.BodyPart.bodyPartArrayIndex
  - Global.BodyPart.lastPos
  - Global.BodyPart.owner
  - Global.BodyPart.pos
  - Global.BodyPart.rad
  - Global.BodyPart.surfaceFric
  - Global.BodyPart.terrainContact
  - Global.BodyPart.vel
  langs:
  - csharp
  - vb
  name: BodyPart
  nameWithType: BodyPart
  fullName: BodyPart
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:BodyPart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class BodyPart
    content.vb: Public Class BodyPart
  inheritance:
  - System.Object
  derivedClasses:
  - Global.Dangler.DanglerSegment
  - Global.GenericBodyPart
  - Global.Limb
  - Global.LizardScale
  - Global.PlayerGraphics.AxolotlScale
  - Global.TailSegment
  - Global.VultureAppendage
  - Global.VultureFeather
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.BodyPart.owner
  commentId: F:Global.BodyPart.owner
  id: owner
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: BodyPart.owner
  fullName: BodyPart.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected GraphicsModule owner
    return:
      type: Global.GraphicsModule
    content.vb: Protected owner As GraphicsModule
- uid: Global.BodyPart.lastPos
  commentId: F:Global.BodyPart.lastPos
  id: lastPos
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: BodyPart.lastPos
  fullName: BodyPart.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.BodyPart.pos
  commentId: F:Global.BodyPart.pos
  id: pos
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: BodyPart.pos
  fullName: BodyPart.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.BodyPart.vel
  commentId: F:Global.BodyPart.vel
  id: vel
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: BodyPart.vel
  fullName: BodyPart.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.BodyPart.rad
  commentId: F:Global.BodyPart.rad
  id: rad
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: BodyPart.rad
  fullName: BodyPart.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.BodyPart.surfaceFric
  commentId: F:Global.BodyPart.surfaceFric
  id: surfaceFric
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: surfaceFric
  nameWithType: BodyPart.surfaceFric
  fullName: BodyPart.surfaceFric
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.surfaceFric</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float surfaceFric
    return:
      type: System.Single
    content.vb: Protected surfaceFric As Single
- uid: Global.BodyPart.airFriction
  commentId: F:Global.BodyPart.airFriction
  id: airFriction
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: airFriction
  nameWithType: BodyPart.airFriction
  fullName: BodyPart.airFriction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.airFriction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float airFriction
    return:
      type: System.Single
    content.vb: Protected airFriction As Single
- uid: Global.BodyPart.terrainContact
  commentId: F:Global.BodyPart.terrainContact
  id: terrainContact
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: terrainContact
  nameWithType: BodyPart.terrainContact
  fullName: BodyPart.terrainContact
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.terrainContact</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool terrainContact
    return:
      type: System.Boolean
    content.vb: Public terrainContact As Boolean
- uid: Global.BodyPart.bodyPartArrayIndex
  commentId: F:Global.BodyPart.bodyPartArrayIndex
  id: bodyPartArrayIndex
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: bodyPartArrayIndex
  nameWithType: BodyPart.bodyPartArrayIndex
  fullName: BodyPart.bodyPartArrayIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyPart.bodyPartArrayIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int bodyPartArrayIndex
    return:
      type: System.Int32
    content.vb: Public bodyPartArrayIndex As Integer
- uid: Global.BodyPart.#ctor(GraphicsModule)
  commentId: M:Global.BodyPart.#ctor(GraphicsModule)
  id: '#ctor(GraphicsModule)'
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: BodyPart(GraphicsModule)
  nameWithType: BodyPart.BodyPart(GraphicsModule)
  fullName: BodyPart.BodyPart(GraphicsModule)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>BodyPart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyPart(GraphicsModule ow)
    parameters:
    - id: ow
      type: Global.GraphicsModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ow</parameter>
            <parameter>M:BodyPart.#ctor(GraphicsModule)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ow As GraphicsModule)
  overload: Global.BodyPart.#ctor*
  nameWithType.vb: BodyPart.New(GraphicsModule)
  fullName.vb: BodyPart.New(GraphicsModule)
  name.vb: New(GraphicsModule)
- uid: Global.BodyPart.Update
  commentId: M:Global.BodyPart.Update
  id: Update
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BodyPart.Update()
  fullName: BodyPart.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Global.BodyPart.Update*
- uid: Global.BodyPart.Reset(UnityEngine.Vector2)
  commentId: M:Global.BodyPart.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: BodyPart.Reset(Vector2)
  fullName: BodyPart.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Reset(Vector2 resetPoint)
    parameters:
    - id: resetPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetPoint</parameter>
            <parameter>M:BodyPart.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Reset(resetPoint As Vector2)
  overload: Global.BodyPart.Reset*
- uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  id: ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  nameWithType: BodyPart.ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  fullName: BodyPart.ConnectToPoint(UnityEngine.Vector2, float, bool, float, UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ConnectToPoint(Vector2 pnt, float connectionRad, bool push, float elasticMovement, Vector2 hostVel, float adaptVel, float exaggerateVel)
    parameters:
    - id: pnt
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pnt</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: connectionRad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connectionRad</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: push
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>push</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: elasticMovement
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elasticMovement</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hostVel
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hostVel</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: adaptVel
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>adaptVel</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: exaggerateVel
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exaggerateVel</parameter>
            <parameter>M:BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ConnectToPoint(pnt As Vector2, connectionRad As Single, push As Boolean, elasticMovement As Single, hostVel As Vector2, adaptVel As Single, exaggerateVel As Single)
  overload: Global.BodyPart.ConnectToPoint*
  nameWithType.vb: BodyPart.ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
  fullName.vb: BodyPart.ConnectToPoint(UnityEngine.Vector2, Single, Boolean, Single, UnityEngine.Vector2, Single, Single)
  name.vb: ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
- uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  id: PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: PushFromPoint(Vector2, float, float)
  nameWithType: BodyPart.PushFromPoint(Vector2, float, float)
  fullName: BodyPart.PushFromPoint(UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PushFromPoint(Vector2 pnt, float pushRad, float elasticity)
    parameters:
    - id: pnt
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pnt</parameter>
            <parameter>M:BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pushRad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pushRad</parameter>
            <parameter>M:BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: elasticity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elasticity</parameter>
            <parameter>M:BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PushFromPoint(pnt As Vector2, pushRad As Single, elasticity As Single)
  overload: Global.BodyPart.PushFromPoint*
  nameWithType.vb: BodyPart.PushFromPoint(Vector2, Single, Single)
  fullName.vb: BodyPart.PushFromPoint(UnityEngine.Vector2, Single, Single)
  name.vb: PushFromPoint(Vector2, Single, Single)
- uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  commentId: M:Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  id: OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: OnOtherSideOfTerrain(Vector2, float)
  nameWithType: BodyPart.OnOtherSideOfTerrain(Vector2, float)
  fullName: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool OnOtherSideOfTerrain(Vector2 conPos, float minAffectRadius)
    parameters:
    - id: conPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>conPos</parameter>
            <parameter>M:BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: minAffectRadius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minAffectRadius</parameter>
            <parameter>M:BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function OnOtherSideOfTerrain(conPos As Vector2, minAffectRadius As Single) As Boolean
  overload: Global.BodyPart.OnOtherSideOfTerrain*
  nameWithType.vb: BodyPart.OnOtherSideOfTerrain(Vector2, Single)
  fullName.vb: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, Single)
  name.vb: OnOtherSideOfTerrain(Vector2, Single)
- uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  commentId: M:Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  id: PushOutOfTerrain(Room,UnityEngine.Vector2)
  parent: Global.BodyPart
  langs:
  - csharp
  - vb
  name: PushOutOfTerrain(Room, Vector2)
  nameWithType: BodyPart.PushOutOfTerrain(Room, Vector2)
  fullName: BodyPart.PushOutOfTerrain(Room, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PushOutOfTerrain(Room room, Vector2 basePoint)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: basePoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>basePoint</parameter>
            <parameter>M:BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PushOutOfTerrain(room As Room, basePoint As Vector2)
  overload: Global.BodyPart.PushOutOfTerrain*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.BodyPart.#ctor*
  commentId: Overload:Global.BodyPart.#ctor
  isExternal: true
  href: Global.BodyPart.html#BodyPart__ctor_GraphicsModule_
  name: BodyPart
  nameWithType: BodyPart.BodyPart
  fullName: BodyPart.BodyPart
  nameWithType.vb: BodyPart.New
  fullName.vb: BodyPart.New
  name.vb: New
- uid: Global.BodyPart.Update*
  commentId: Overload:Global.BodyPart.Update
  isExternal: true
  href: Global.BodyPart.html#BodyPart_Update
  name: Update
  nameWithType: BodyPart.Update
  fullName: BodyPart.Update
- uid: Global.BodyPart.Reset*
  commentId: Overload:Global.BodyPart.Reset
  isExternal: true
  href: Global.BodyPart.html#BodyPart_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: BodyPart.Reset
  fullName: BodyPart.Reset
- uid: Global.BodyPart.ConnectToPoint*
  commentId: Overload:Global.BodyPart.ConnectToPoint
  isExternal: true
  href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  name: ConnectToPoint
  nameWithType: BodyPart.ConnectToPoint
  fullName: BodyPart.ConnectToPoint
- uid: Global.BodyPart.PushFromPoint*
  commentId: Overload:Global.BodyPart.PushFromPoint
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  name: PushFromPoint
  nameWithType: BodyPart.PushFromPoint
  fullName: BodyPart.PushFromPoint
- uid: Global.BodyPart.OnOtherSideOfTerrain*
  commentId: Overload:Global.BodyPart.OnOtherSideOfTerrain
  isExternal: true
  href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  name: OnOtherSideOfTerrain
  nameWithType: BodyPart.OnOtherSideOfTerrain
  fullName: BodyPart.OnOtherSideOfTerrain
- uid: Global.BodyPart.PushOutOfTerrain*
  commentId: Overload:Global.BodyPart.PushOutOfTerrain
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  name: PushOutOfTerrain
  nameWithType: BodyPart.PushOutOfTerrain
  fullName: BodyPart.PushOutOfTerrain
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
