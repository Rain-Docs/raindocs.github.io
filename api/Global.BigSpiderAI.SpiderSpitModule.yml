### YamlMime:ManagedReference
items:
- uid: Global.BigSpiderAI.SpiderSpitModule
  commentId: T:Global.BigSpiderAI.SpiderSpitModule
  id: BigSpiderAI.SpiderSpitModule
  parent: Global
  children:
  - Global.BigSpiderAI.SpiderSpitModule.#ctor(BigSpiderAI)
  - Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
  - Global.BigSpiderAI.SpiderSpitModule.CanSpit
  - Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  - Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)
  - Global.BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.BigSpiderAI.SpiderSpitModule.SitAndSpit
  - Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit
  - Global.BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)
  - Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos
  - Global.BigSpiderAI.SpiderSpitModule.Update
  - Global.BigSpiderAI.SpiderSpitModule.aimDir
  - Global.BigSpiderAI.SpiderSpitModule.ammo
  - Global.BigSpiderAI.SpiderSpitModule.fastAmmoRegen
  - Global.BigSpiderAI.SpiderSpitModule.goToSpitPos
  - Global.BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker
  - Global.BigSpiderAI.SpiderSpitModule.noSitDelay
  - Global.BigSpiderAI.SpiderSpitModule.randomCritSpitDelay
  - Global.BigSpiderAI.SpiderSpitModule.sameScreenDelay
  - Global.BigSpiderAI.SpiderSpitModule.spitAtCrit
  - Global.BigSpiderAI.SpiderSpitModule.spitPos
  - Global.BigSpiderAI.SpiderSpitModule.taggedCreature
  - Global.BigSpiderAI.SpiderSpitModule.targetPoint
  - Global.BigSpiderAI.SpiderSpitModule.targetTrail
  - Global.BigSpiderAI.SpiderSpitModule.targetTrailMaxLength
  langs:
  - csharp
  - vb
  name: BigSpiderAI.SpiderSpitModule
  nameWithType: BigSpiderAI.SpiderSpitModule
  fullName: BigSpiderAI.SpiderSpitModule
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:BigSpiderAI.SpiderSpitModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class BigSpiderAI.SpiderSpitModule : AIModule'
    content.vb: Public Class BigSpiderAI.SpiderSpitModule Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.NewRoom(Room)
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.BigSpiderAI.SpiderSpitModule.spitAtCrit
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.spitAtCrit
  id: spitAtCrit
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: spitAtCrit
  nameWithType: BigSpiderAI.SpiderSpitModule.spitAtCrit
  fullName: BigSpiderAI.SpiderSpitModule.spitAtCrit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.spitAtCrit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation spitAtCrit
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public spitAtCrit As Tracker.CreatureRepresentation
- uid: Global.BigSpiderAI.SpiderSpitModule.goToSpitPos
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.goToSpitPos
  id: goToSpitPos
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: goToSpitPos
  nameWithType: BigSpiderAI.SpiderSpitModule.goToSpitPos
  fullName: BigSpiderAI.SpiderSpitModule.goToSpitPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.goToSpitPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool goToSpitPos
    return:
      type: System.Boolean
    content.vb: Public goToSpitPos As Boolean
- uid: Global.BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker
  id: goToSpitPosAntiFlicker
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: goToSpitPosAntiFlicker
  nameWithType: BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker
  fullName: BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.goToSpitPosAntiFlicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int goToSpitPosAntiFlicker
    return:
      type: System.Int32
    content.vb: Public goToSpitPosAntiFlicker As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.spitPos
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.spitPos
  id: spitPos
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: spitPos
  nameWithType: BigSpiderAI.SpiderSpitModule.spitPos
  fullName: BigSpiderAI.SpiderSpitModule.spitPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.spitPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate spitPos
    return:
      type: Global.WorldCoordinate
    content.vb: Public spitPos As WorldCoordinate
- uid: Global.BigSpiderAI.SpiderSpitModule.targetPoint
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.targetPoint
  id: targetPoint
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: targetPoint
  nameWithType: BigSpiderAI.SpiderSpitModule.targetPoint
  fullName: BigSpiderAI.SpiderSpitModule.targetPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.targetPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 targetPoint
    return:
      type: UnityEngine.Vector2
    content.vb: Public targetPoint As Vector2
- uid: Global.BigSpiderAI.SpiderSpitModule.aimDir
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.aimDir
  id: aimDir
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: aimDir
  nameWithType: BigSpiderAI.SpiderSpitModule.aimDir
  fullName: BigSpiderAI.SpiderSpitModule.aimDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.aimDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 aimDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public aimDir As Vector2
- uid: Global.BigSpiderAI.SpiderSpitModule.noSitDelay
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.noSitDelay
  id: noSitDelay
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: noSitDelay
  nameWithType: BigSpiderAI.SpiderSpitModule.noSitDelay
  fullName: BigSpiderAI.SpiderSpitModule.noSitDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.noSitDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int noSitDelay
    return:
      type: System.Int32
    content.vb: Public noSitDelay As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.targetTrail
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.targetTrail
  id: targetTrail
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: targetTrail
  nameWithType: BigSpiderAI.SpiderSpitModule.targetTrail
  fullName: BigSpiderAI.SpiderSpitModule.targetTrail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.targetTrail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2> targetTrail
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2}
    content.vb: Public targetTrail As List(Of Vector2)
- uid: Global.BigSpiderAI.SpiderSpitModule.targetTrailMaxLength
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.targetTrailMaxLength
  id: targetTrailMaxLength
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: targetTrailMaxLength
  nameWithType: BigSpiderAI.SpiderSpitModule.targetTrailMaxLength
  fullName: BigSpiderAI.SpiderSpitModule.targetTrailMaxLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.targetTrailMaxLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int targetTrailMaxLength
    return:
      type: System.Int32
    content.vb: Public targetTrailMaxLength As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.ammo
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.ammo
  id: ammo
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: ammo
  nameWithType: BigSpiderAI.SpiderSpitModule.ammo
  fullName: BigSpiderAI.SpiderSpitModule.ammo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.ammo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ammo
    return:
      type: System.Int32
    content.vb: Public ammo As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.fastAmmoRegen
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.fastAmmoRegen
  id: fastAmmoRegen
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: fastAmmoRegen
  nameWithType: BigSpiderAI.SpiderSpitModule.fastAmmoRegen
  fullName: BigSpiderAI.SpiderSpitModule.fastAmmoRegen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.fastAmmoRegen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool fastAmmoRegen
    return:
      type: System.Boolean
    content.vb: Public fastAmmoRegen As Boolean
- uid: Global.BigSpiderAI.SpiderSpitModule.taggedCreature
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.taggedCreature
  id: taggedCreature
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: taggedCreature
  nameWithType: BigSpiderAI.SpiderSpitModule.taggedCreature
  fullName: BigSpiderAI.SpiderSpitModule.taggedCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.taggedCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation taggedCreature
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public taggedCreature As Tracker.CreatureRepresentation
- uid: Global.BigSpiderAI.SpiderSpitModule.randomCritSpitDelay
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.randomCritSpitDelay
  id: randomCritSpitDelay
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: randomCritSpitDelay
  nameWithType: BigSpiderAI.SpiderSpitModule.randomCritSpitDelay
  fullName: BigSpiderAI.SpiderSpitModule.randomCritSpitDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.randomCritSpitDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int randomCritSpitDelay
    return:
      type: System.Int32
    content.vb: Public randomCritSpitDelay As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.sameScreenDelay
  commentId: F:Global.BigSpiderAI.SpiderSpitModule.sameScreenDelay
  id: sameScreenDelay
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: sameScreenDelay
  nameWithType: BigSpiderAI.SpiderSpitModule.sameScreenDelay
  fullName: BigSpiderAI.SpiderSpitModule.sameScreenDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BigSpiderAI.SpiderSpitModule.sameScreenDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sameScreenDelay
    return:
      type: System.Int32
    content.vb: Public sameScreenDelay As Integer
- uid: Global.BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)
  id: SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: SameScreen(Vector2, Vector2)
  nameWithType: BigSpiderAI.SpiderSpitModule.SameScreen(Vector2, Vector2)
  fullName: BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SameScreen(Vector2 a, Vector2 b)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SameScreen(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function SameScreen(a As Vector2, b As Vector2) As Boolean
  overload: Global.BigSpiderAI.SpiderSpitModule.SameScreen*
- uid: Global.BigSpiderAI.SpiderSpitModule.CanSpit
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.CanSpit
  id: CanSpit
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: CanSpit()
  nameWithType: BigSpiderAI.SpiderSpitModule.CanSpit()
  fullName: BigSpiderAI.SpiderSpitModule.CanSpit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.CanSpit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanSpit()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.CanSpit</parameter>
          </include>
        </markup>
    content.vb: Public Function CanSpit() As Boolean
  overload: Global.BigSpiderAI.SpiderSpitModule.CanSpit*
- uid: Global.BigSpiderAI.SpiderSpitModule.#ctor(BigSpiderAI)
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.#ctor(BigSpiderAI)
  id: '#ctor(BigSpiderAI)'
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: SpiderSpitModule(BigSpiderAI)
  nameWithType: BigSpiderAI.SpiderSpitModule.SpiderSpitModule(BigSpiderAI)
  fullName: BigSpiderAI.SpiderSpitModule.SpiderSpitModule(BigSpiderAI)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>BigSpiderAI.SpiderSpitModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SpiderSpitModule(BigSpiderAI AI)
    parameters:
    - id: AI
      type: Global.BigSpiderAI
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.#ctor(BigSpiderAI)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As BigSpiderAI)
  overload: Global.BigSpiderAI.SpiderSpitModule.#ctor*
  nameWithType.vb: BigSpiderAI.SpiderSpitModule.New(BigSpiderAI)
  fullName.vb: BigSpiderAI.SpiderSpitModule.New(BigSpiderAI)
  name.vb: New(BigSpiderAI)
- uid: Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit
  id: SpiderHasSpit
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: SpiderHasSpit()
  nameWithType: BigSpiderAI.SpiderSpitModule.SpiderHasSpit()
  fullName: BigSpiderAI.SpiderSpitModule.SpiderHasSpit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.SpiderHasSpit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpiderHasSpit()
    content.vb: Public Sub SpiderHasSpit()
  overload: Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit*
- uid: Global.BigSpiderAI.SpiderSpitModule.Update
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.Update
  id: Update
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BigSpiderAI.SpiderSpitModule.Update()
  fullName: BigSpiderAI.SpiderSpitModule.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.AIModule.Update
  overload: Global.BigSpiderAI.SpiderSpitModule.Update*
- uid: Global.BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)
  id: SpitPosScore(WorldCoordinate)
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: SpitPosScore(WorldCoordinate)
  nameWithType: BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)
  fullName: BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float SpitPosScore(WorldCoordinate test)
    parameters:
    - id: test
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>test</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SpitPosScore(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function SpitPosScore(test As WorldCoordinate) As Single
  overload: Global.BigSpiderAI.SpiderSpitModule.SpitPosScore*
- uid: Global.BigSpiderAI.SpiderSpitModule.SitAndSpit
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.SitAndSpit
  id: SitAndSpit
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: SitAndSpit()
  nameWithType: BigSpiderAI.SpiderSpitModule.SitAndSpit()
  fullName: BigSpiderAI.SpiderSpitModule.SitAndSpit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.SitAndSpit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SitAndSpit()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.SitAndSpit</parameter>
          </include>
        </markup>
    content.vb: Public Function SitAndSpit() As Boolean
  overload: Global.BigSpiderAI.SpiderSpitModule.SitAndSpit*
- uid: Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
  id: AbandonSitAndSpit
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: AbandonSitAndSpit()
  nameWithType: BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit()
  fullName: BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AbandonSitAndSpit()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit</parameter>
          </include>
        </markup>
    content.vb: Public Function AbandonSitAndSpit() As Boolean
  overload: Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit*
- uid: Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)
  commentId: M:Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)
  id: CreatureHitByDart(AbstractCreature)
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: CreatureHitByDart(AbstractCreature)
  nameWithType: BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)
  fullName: BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CreatureHitByDart(AbstractCreature crit)
    parameters:
    - id: crit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:BigSpiderAI.SpiderSpitModule.CreatureHitByDart(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CreatureHitByDart(crit As AbstractCreature)
  overload: Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart*
- uid: Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos
  commentId: P:Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos
  id: TargetChunkPos
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: TargetChunkPos
  nameWithType: BigSpiderAI.SpiderSpitModule.TargetChunkPos
  fullName: BigSpiderAI.SpiderSpitModule.TargetChunkPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BigSpiderAI.SpiderSpitModule.TargetChunkPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 TargetChunkPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property TargetChunkPos As Vector2
  overload: Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos*
- uid: Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  commentId: P:Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  id: CanSpitBetweenScreens
  parent: Global.BigSpiderAI.SpiderSpitModule
  langs:
  - csharp
  - vb
  name: CanSpitBetweenScreens
  nameWithType: BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  fullName: BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanSpitBetweenScreens { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanSpitBetweenScreens As Boolean
  overload: Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Collections.Generic.List{UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.BigSpiderAI.SpiderSpitModule.SameScreen*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.SameScreen
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_SameScreen_UnityEngine_Vector2_UnityEngine_Vector2_
  name: SameScreen
  nameWithType: BigSpiderAI.SpiderSpitModule.SameScreen
  fullName: BigSpiderAI.SpiderSpitModule.SameScreen
- uid: Global.BigSpiderAI.SpiderSpitModule.CanSpit*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.CanSpit
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_CanSpit
  name: CanSpit
  nameWithType: BigSpiderAI.SpiderSpitModule.CanSpit
  fullName: BigSpiderAI.SpiderSpitModule.CanSpit
- uid: Global.BigSpiderAI.SpiderSpitModule.#ctor*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.#ctor
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule__ctor_BigSpiderAI_
  name: SpiderSpitModule
  nameWithType: BigSpiderAI.SpiderSpitModule.SpiderSpitModule
  fullName: BigSpiderAI.SpiderSpitModule.SpiderSpitModule
  nameWithType.vb: BigSpiderAI.SpiderSpitModule.New
  fullName.vb: BigSpiderAI.SpiderSpitModule.New
  name.vb: New
- uid: Global.BigSpiderAI
  commentId: T:Global.BigSpiderAI
  isExternal: true
  href: BigSpiderAI.html
  name: BigSpiderAI
  nameWithType: BigSpiderAI
  fullName: BigSpiderAI
- uid: Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.SpiderHasSpit
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_SpiderHasSpit
  name: SpiderHasSpit
  nameWithType: BigSpiderAI.SpiderSpitModule.SpiderHasSpit
  fullName: BigSpiderAI.SpiderSpitModule.SpiderHasSpit
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.BigSpiderAI.SpiderSpitModule.Update*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.Update
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_Update
  name: Update
  nameWithType: BigSpiderAI.SpiderSpitModule.Update
  fullName: BigSpiderAI.SpiderSpitModule.Update
- uid: Global.BigSpiderAI.SpiderSpitModule.SpitPosScore*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.SpitPosScore
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_SpitPosScore_WorldCoordinate_
  name: SpitPosScore
  nameWithType: BigSpiderAI.SpiderSpitModule.SpitPosScore
  fullName: BigSpiderAI.SpiderSpitModule.SpitPosScore
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BigSpiderAI.SpiderSpitModule.SitAndSpit*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.SitAndSpit
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_SitAndSpit
  name: SitAndSpit
  nameWithType: BigSpiderAI.SpiderSpitModule.SitAndSpit
  fullName: BigSpiderAI.SpiderSpitModule.SitAndSpit
- uid: Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_AbandonSitAndSpit
  name: AbandonSitAndSpit
  nameWithType: BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
  fullName: BigSpiderAI.SpiderSpitModule.AbandonSitAndSpit
- uid: Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.CreatureHitByDart
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_CreatureHitByDart_AbstractCreature_
  name: CreatureHitByDart
  nameWithType: BigSpiderAI.SpiderSpitModule.CreatureHitByDart
  fullName: BigSpiderAI.SpiderSpitModule.CreatureHitByDart
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.TargetChunkPos
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_TargetChunkPos
  name: TargetChunkPos
  nameWithType: BigSpiderAI.SpiderSpitModule.TargetChunkPos
  fullName: BigSpiderAI.SpiderSpitModule.TargetChunkPos
- uid: Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens*
  commentId: Overload:Global.BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  isExternal: true
  href: Global.BigSpiderAI.SpiderSpitModule.html#BigSpiderAI_SpiderSpitModule_CanSpitBetweenScreens
  name: CanSpitBetweenScreens
  nameWithType: BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
  fullName: BigSpiderAI.SpiderSpitModule.CanSpitBetweenScreens
