### YamlMime:ManagedReference
items:
- uid: CoralBrain.CoralStem
  commentId: T:CoralBrain.CoralStem
  id: CoralStem
  parent: CoralBrain
  children:
  - CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)
  - CoralBrain.CoralStem.BeingClimbedOn(Creature)
  - CoralBrain.CoralStem.CanHostCircle
  - CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)
  - CoralBrain.CoralStem.CurrentlyClimbable
  - CoralBrain.CoralStem.HostingCircleFromRoom
  - CoralBrain.CoralStem.Mass(System.Int32)
  - CoralBrain.CoralStem.Pos(System.Int32)
  - CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)
  - CoralBrain.CoralStem.Rad(System.Int32)
  - CoralBrain.CoralStem.TotalPositions
  - CoralBrain.CoralStem.rootDirection
  - CoralBrain.CoralStem.rootPos
  - CoralBrain.CoralStem.rootTile
  - CoralBrain.CoralStem.segments
  - CoralBrain.CoralStem.size
  - CoralBrain.CoralStem.system
  - CoralBrain.CoralStem.withNeurons
  langs:
  - csharp
  - vb
  name: CoralStem
  nameWithType: CoralStem
  fullName: CoralBrain.CoralStem
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CoralBrain.CoralStem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CoralStem : UpdatableAndDeletable, IClimbableVine, IOwnProjectedCircles'
    content.vb: Public Class CoralStem Inherits UpdatableAndDeletable Implements IClimbableVine, IOwnProjectedCircles
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IClimbableVine
  - Global.IOwnProjectedCircles
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.Update(System.Boolean)
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: CoralBrain.CoralStem.system
  commentId: F:CoralBrain.CoralStem.system
  id: system
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: system
  nameWithType: CoralStem.system
  fullName: CoralBrain.CoralStem.system
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.system</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralNeuronSystem system
    return:
      type: CoralBrain.CoralNeuronSystem
    content.vb: Public system As CoralNeuronSystem
- uid: CoralBrain.CoralStem.rootPos
  commentId: F:CoralBrain.CoralStem.rootPos
  id: rootPos
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: rootPos
  nameWithType: CoralStem.rootPos
  fullName: CoralBrain.CoralStem.rootPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.rootPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 rootPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public rootPos As Vector2
- uid: CoralBrain.CoralStem.rootDirection
  commentId: F:CoralBrain.CoralStem.rootDirection
  id: rootDirection
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: rootDirection
  nameWithType: CoralStem.rootDirection
  fullName: CoralBrain.CoralStem.rootDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.rootDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 rootDirection
    return:
      type: UnityEngine.Vector2
    content.vb: Public rootDirection As Vector2
- uid: CoralBrain.CoralStem.rootTile
  commentId: F:CoralBrain.CoralStem.rootTile
  id: rootTile
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: rootTile
  nameWithType: CoralStem.rootTile
  fullName: CoralBrain.CoralStem.rootTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.rootTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 rootTile
    return:
      type: RWCustom.IntVector2
    content.vb: Public rootTile As IntVector2
- uid: CoralBrain.CoralStem.segments
  commentId: F:CoralBrain.CoralStem.segments
  id: segments
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: CoralStem.segments
  fullName: CoralBrain.CoralStem.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<StemSegment> segments
    return:
      type: System.Collections.Generic.List{CoralBrain.StemSegment}
    content.vb: Public segments As List(Of StemSegment)
- uid: CoralBrain.CoralStem.size
  commentId: F:CoralBrain.CoralStem.size
  id: size
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: size
  nameWithType: CoralStem.size
  fullName: CoralBrain.CoralStem.size
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.size</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float size
    return:
      type: System.Single
    content.vb: Public size As Single
- uid: CoralBrain.CoralStem.withNeurons
  commentId: F:CoralBrain.CoralStem.withNeurons
  id: withNeurons
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: withNeurons
  nameWithType: CoralStem.withNeurons
  fullName: CoralBrain.CoralStem.withNeurons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.CoralStem.withNeurons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool withNeurons
    return:
      type: System.Boolean
    content.vb: Public withNeurons As Boolean
- uid: CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)
  commentId: M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)
  id: '#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)'
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: CoralStem(CoralNeuronSystem, Vector2, float, Room, bool)
  nameWithType: CoralStem.CoralStem(CoralNeuronSystem, Vector2, float, Room, bool)
  fullName: CoralBrain.CoralStem.CoralStem(CoralBrain.CoralNeuronSystem, UnityEngine.Vector2, float, Room, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CoralBrain.CoralStem</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralStem(CoralNeuronSystem system, Vector2 rootPos, float rad, Room room, bool withNeurons)
    parameters:
    - id: system
      type: CoralBrain.CoralNeuronSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>system</parameter>
            <parameter>M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rootPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rootPos</parameter>
            <parameter>M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: withNeurons
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>withNeurons</parameter>
            <parameter>M:CoralBrain.CoralStem.#ctor(CoralBrain.CoralNeuronSystem,UnityEngine.Vector2,System.Single,Room,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(system As CoralNeuronSystem, rootPos As Vector2, rad As Single, room As Room, withNeurons As Boolean)
  overload: CoralBrain.CoralStem.#ctor*
  nameWithType.vb: CoralStem.New(CoralNeuronSystem, Vector2, Single, Room, Boolean)
  fullName.vb: CoralBrain.CoralStem.New(CoralBrain.CoralNeuronSystem, UnityEngine.Vector2, Single, Room, Boolean)
  name.vb: New(CoralNeuronSystem, Vector2, Single, Room, Boolean)
- uid: CoralBrain.CoralStem.Pos(System.Int32)
  commentId: M:CoralBrain.CoralStem.Pos(System.Int32)
  id: Pos(System.Int32)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: Pos(int)
  nameWithType: CoralStem.Pos(int)
  fullName: CoralBrain.CoralStem.Pos(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.Pos(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Pos(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralStem.Pos(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.Pos(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Pos(index As Integer) As Vector2
  overload: CoralBrain.CoralStem.Pos*
  implements:
  - Global.IClimbableVine.Pos(System.Int32)
  nameWithType.vb: CoralStem.Pos(Integer)
  fullName.vb: CoralBrain.CoralStem.Pos(Integer)
  name.vb: Pos(Integer)
- uid: CoralBrain.CoralStem.TotalPositions
  commentId: M:CoralBrain.CoralStem.TotalPositions
  id: TotalPositions
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: TotalPositions()
  nameWithType: CoralStem.TotalPositions()
  fullName: CoralBrain.CoralStem.TotalPositions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.TotalPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalPositions()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.TotalPositions</parameter>
          </include>
        </markup>
    content.vb: Public Function TotalPositions() As Integer
  overload: CoralBrain.CoralStem.TotalPositions*
  implements:
  - Global.IClimbableVine.TotalPositions
- uid: CoralBrain.CoralStem.Rad(System.Int32)
  commentId: M:CoralBrain.CoralStem.Rad(System.Int32)
  id: Rad(System.Int32)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: Rad(int)
  nameWithType: CoralStem.Rad(int)
  fullName: CoralBrain.CoralStem.Rad(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.Rad(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Rad(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralStem.Rad(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.Rad(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Rad(index As Integer) As Single
  overload: CoralBrain.CoralStem.Rad*
  implements:
  - Global.IClimbableVine.Rad(System.Int32)
  nameWithType.vb: CoralStem.Rad(Integer)
  fullName.vb: CoralBrain.CoralStem.Rad(Integer)
  name.vb: Rad(Integer)
- uid: CoralBrain.CoralStem.Mass(System.Int32)
  commentId: M:CoralBrain.CoralStem.Mass(System.Int32)
  id: Mass(System.Int32)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: Mass(int)
  nameWithType: CoralStem.Mass(int)
  fullName: CoralBrain.CoralStem.Mass(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.Mass(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Mass(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralStem.Mass(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.Mass(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Mass(index As Integer) As Single
  overload: CoralBrain.CoralStem.Mass*
  implements:
  - Global.IClimbableVine.Mass(System.Int32)
  nameWithType.vb: CoralStem.Mass(Integer)
  fullName.vb: CoralBrain.CoralStem.Mass(Integer)
  name.vb: Mass(Integer)
- uid: CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)
  id: Push(System.Int32,UnityEngine.Vector2)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: Push(int, Vector2)
  nameWithType: CoralStem.Push(int, Vector2)
  fullName: CoralBrain.CoralStem.Push(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Push(int index, Vector2 movement)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: movement
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movement</parameter>
            <parameter>M:CoralBrain.CoralStem.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Push(index As Integer, movement As Vector2)
  overload: CoralBrain.CoralStem.Push*
  implements:
  - Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  nameWithType.vb: CoralStem.Push(Integer, Vector2)
  fullName.vb: CoralBrain.CoralStem.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
- uid: CoralBrain.CoralStem.BeingClimbedOn(Creature)
  commentId: M:CoralBrain.CoralStem.BeingClimbedOn(Creature)
  id: BeingClimbedOn(Creature)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: BeingClimbedOn(Creature)
  nameWithType: CoralStem.BeingClimbedOn(Creature)
  fullName: CoralBrain.CoralStem.BeingClimbedOn(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.BeingClimbedOn(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BeingClimbedOn(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:CoralBrain.CoralStem.BeingClimbedOn(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BeingClimbedOn(crit As Creature)
  overload: CoralBrain.CoralStem.BeingClimbedOn*
  implements:
  - Global.IClimbableVine.BeingClimbedOn(Creature)
- uid: CoralBrain.CoralStem.CurrentlyClimbable
  commentId: M:CoralBrain.CoralStem.CurrentlyClimbable
  id: CurrentlyClimbable
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: CurrentlyClimbable()
  nameWithType: CoralStem.CurrentlyClimbable()
  fullName: CoralBrain.CoralStem.CurrentlyClimbable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.CurrentlyClimbable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CurrentlyClimbable()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.CurrentlyClimbable</parameter>
          </include>
        </markup>
    content.vb: Public Function CurrentlyClimbable() As Boolean
  overload: CoralBrain.CoralStem.CurrentlyClimbable*
  implements:
  - Global.IClimbableVine.CurrentlyClimbable
- uid: CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)
  commentId: M:CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)
  id: CircleCenter(System.Int32,System.Single)
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: CircleCenter(int, float)
  nameWithType: CoralStem.CircleCenter(int, float)
  fullName: CoralBrain.CoralStem.CircleCenter(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 CircleCenter(int index, float timeStacker)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.CircleCenter(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CircleCenter(index As Integer, timeStacker As Single) As Vector2
  overload: CoralBrain.CoralStem.CircleCenter*
  implements:
  - Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  nameWithType.vb: CoralStem.CircleCenter(Integer, Single)
  fullName.vb: CoralBrain.CoralStem.CircleCenter(Integer, Single)
  name.vb: CircleCenter(Integer, Single)
- uid: CoralBrain.CoralStem.HostingCircleFromRoom
  commentId: M:CoralBrain.CoralStem.HostingCircleFromRoom
  id: HostingCircleFromRoom
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: HostingCircleFromRoom()
  nameWithType: CoralStem.HostingCircleFromRoom()
  fullName: CoralBrain.CoralStem.HostingCircleFromRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.HostingCircleFromRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room HostingCircleFromRoom()
    return:
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.HostingCircleFromRoom</parameter>
          </include>
        </markup>
    content.vb: Public Function HostingCircleFromRoom() As Room
  overload: CoralBrain.CoralStem.HostingCircleFromRoom*
  implements:
  - Global.IOwnProjectedCircles.HostingCircleFromRoom
- uid: CoralBrain.CoralStem.CanHostCircle
  commentId: M:CoralBrain.CoralStem.CanHostCircle
  id: CanHostCircle
  parent: CoralBrain.CoralStem
  langs:
  - csharp
  - vb
  name: CanHostCircle()
  nameWithType: CoralStem.CanHostCircle()
  fullName: CoralBrain.CoralStem.CanHostCircle()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.CoralStem.CanHostCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanHostCircle()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CoralBrain.CoralStem.CanHostCircle</parameter>
          </include>
        </markup>
    content.vb: Public Function CanHostCircle() As Boolean
  overload: CoralBrain.CoralStem.CanHostCircle*
  implements:
  - Global.IOwnProjectedCircles.CanHostCircle
references:
- uid: CoralBrain
  commentId: N:CoralBrain
  isExternal: true
  href: CoralBrain.html
  name: CoralBrain
  nameWithType: CoralBrain
  fullName: CoralBrain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IClimbableVine
  commentId: T:Global.IClimbableVine
  isExternal: true
  href: IClimbableVine.html
  name: IClimbableVine
  nameWithType: IClimbableVine
  fullName: IClimbableVine
- uid: Global.IOwnProjectedCircles
  commentId: T:Global.IOwnProjectedCircles
  isExternal: true
  href: IOwnProjectedCircles.html
  name: IOwnProjectedCircles
  nameWithType: IOwnProjectedCircles
  fullName: IOwnProjectedCircles
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: CoralBrain.CoralNeuronSystem
  commentId: T:CoralBrain.CoralNeuronSystem
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralNeuronSystem.html
  name: CoralNeuronSystem
  nameWithType: CoralNeuronSystem
  fullName: CoralBrain.CoralNeuronSystem
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Collections.Generic.List{CoralBrain.StemSegment}
  commentId: T:System.Collections.Generic.List{CoralBrain.StemSegment}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<StemSegment>
  nameWithType: List<StemSegment>
  fullName: System.Collections.Generic.List<CoralBrain.StemSegment>
  nameWithType.vb: List(Of StemSegment)
  fullName.vb: System.Collections.Generic.List(Of CoralBrain.StemSegment)
  name.vb: List(Of StemSegment)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: CoralBrain.StemSegment
    name: StemSegment
    isExternal: true
    href: CoralBrain.StemSegment.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: CoralBrain.StemSegment
    name: StemSegment
    isExternal: true
    href: CoralBrain.StemSegment.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CoralBrain.CoralStem.#ctor*
  commentId: Overload:CoralBrain.CoralStem.#ctor
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem__ctor_CoralBrain_CoralNeuronSystem_UnityEngine_Vector2_System_Single_Room_System_Boolean_
  name: CoralStem
  nameWithType: CoralStem.CoralStem
  fullName: CoralBrain.CoralStem.CoralStem
  nameWithType.vb: CoralStem.New
  fullName.vb: CoralBrain.CoralStem.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: CoralBrain.CoralStem.Pos*
  commentId: Overload:CoralBrain.CoralStem.Pos
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_Pos_System_Int32_
  name: Pos
  nameWithType: CoralStem.Pos
  fullName: CoralBrain.CoralStem.Pos
- uid: Global.IClimbableVine.Pos(System.Int32)
  commentId: M:Global.IClimbableVine.Pos(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  name: Pos(int)
  nameWithType: IClimbableVine.Pos(int)
  fullName: IClimbableVine.Pos(int)
  nameWithType.vb: IClimbableVine.Pos(Integer)
  fullName.vb: IClimbableVine.Pos(Integer)
  name.vb: Pos(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CoralBrain.CoralStem.TotalPositions*
  commentId: Overload:CoralBrain.CoralStem.TotalPositions
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_TotalPositions
  name: TotalPositions
  nameWithType: CoralStem.TotalPositions
  fullName: CoralBrain.CoralStem.TotalPositions
- uid: Global.IClimbableVine.TotalPositions
  commentId: M:Global.IClimbableVine.TotalPositions
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  name: TotalPositions()
  nameWithType: IClimbableVine.TotalPositions()
  fullName: IClimbableVine.TotalPositions()
  spec.csharp:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
- uid: CoralBrain.CoralStem.Rad*
  commentId: Overload:CoralBrain.CoralStem.Rad
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_Rad_System_Int32_
  name: Rad
  nameWithType: CoralStem.Rad
  fullName: CoralBrain.CoralStem.Rad
- uid: Global.IClimbableVine.Rad(System.Int32)
  commentId: M:Global.IClimbableVine.Rad(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  name: Rad(int)
  nameWithType: IClimbableVine.Rad(int)
  fullName: IClimbableVine.Rad(int)
  nameWithType.vb: IClimbableVine.Rad(Integer)
  fullName.vb: IClimbableVine.Rad(Integer)
  name.vb: Rad(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: CoralBrain.CoralStem.Mass*
  commentId: Overload:CoralBrain.CoralStem.Mass
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_Mass_System_Int32_
  name: Mass
  nameWithType: CoralStem.Mass
  fullName: CoralBrain.CoralStem.Mass
- uid: Global.IClimbableVine.Mass(System.Int32)
  commentId: M:Global.IClimbableVine.Mass(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  name: Mass(int)
  nameWithType: IClimbableVine.Mass(int)
  fullName: IClimbableVine.Mass(int)
  nameWithType.vb: IClimbableVine.Mass(Integer)
  fullName.vb: IClimbableVine.Mass(Integer)
  name.vb: Mass(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: CoralBrain.CoralStem.Push*
  commentId: Overload:CoralBrain.CoralStem.Push
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_Push_System_Int32_UnityEngine_Vector2_
  name: Push
  nameWithType: CoralStem.Push
  fullName: CoralBrain.CoralStem.Push
- uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  name: Push(int, Vector2)
  nameWithType: IClimbableVine.Push(int, Vector2)
  fullName: IClimbableVine.Push(int, UnityEngine.Vector2)
  nameWithType.vb: IClimbableVine.Push(Integer, Vector2)
  fullName.vb: IClimbableVine.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
  spec.csharp:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: CoralBrain.CoralStem.BeingClimbedOn*
  commentId: Overload:CoralBrain.CoralStem.BeingClimbedOn
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_BeingClimbedOn_Creature_
  name: BeingClimbedOn
  nameWithType: CoralStem.BeingClimbedOn
  fullName: CoralBrain.CoralStem.BeingClimbedOn
- uid: Global.IClimbableVine.BeingClimbedOn(Creature)
  commentId: M:Global.IClimbableVine.BeingClimbedOn(Creature)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  name: BeingClimbedOn(Creature)
  nameWithType: IClimbableVine.BeingClimbedOn(Creature)
  fullName: IClimbableVine.BeingClimbedOn(Creature)
  spec.csharp:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: CoralBrain.CoralStem.CurrentlyClimbable*
  commentId: Overload:CoralBrain.CoralStem.CurrentlyClimbable
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_CurrentlyClimbable
  name: CurrentlyClimbable
  nameWithType: CoralStem.CurrentlyClimbable
  fullName: CoralBrain.CoralStem.CurrentlyClimbable
- uid: Global.IClimbableVine.CurrentlyClimbable
  commentId: M:Global.IClimbableVine.CurrentlyClimbable
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  name: CurrentlyClimbable()
  nameWithType: IClimbableVine.CurrentlyClimbable()
  fullName: IClimbableVine.CurrentlyClimbable()
  spec.csharp:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
- uid: CoralBrain.CoralStem.CircleCenter*
  commentId: Overload:CoralBrain.CoralStem.CircleCenter
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_CircleCenter_System_Int32_System_Single_
  name: CircleCenter
  nameWithType: CoralStem.CircleCenter
  fullName: CoralBrain.CoralStem.CircleCenter
- uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  commentId: M:Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  name: CircleCenter(int, float)
  nameWithType: IOwnProjectedCircles.CircleCenter(int, float)
  fullName: IOwnProjectedCircles.CircleCenter(int, float)
  nameWithType.vb: IOwnProjectedCircles.CircleCenter(Integer, Single)
  fullName.vb: IOwnProjectedCircles.CircleCenter(Integer, Single)
  name.vb: CircleCenter(Integer, Single)
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
    name: CircleCenter
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.CircleCenter(System.Int32,System.Single)
    name: CircleCenter
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CircleCenter_System_Int32_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: CoralBrain.CoralStem.HostingCircleFromRoom*
  commentId: Overload:CoralBrain.CoralStem.HostingCircleFromRoom
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_HostingCircleFromRoom
  name: HostingCircleFromRoom
  nameWithType: CoralStem.HostingCircleFromRoom
  fullName: CoralBrain.CoralStem.HostingCircleFromRoom
- uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
  commentId: M:Global.IOwnProjectedCircles.HostingCircleFromRoom
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  name: HostingCircleFromRoom()
  nameWithType: IOwnProjectedCircles.HostingCircleFromRoom()
  fullName: IOwnProjectedCircles.HostingCircleFromRoom()
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
    name: HostingCircleFromRoom
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.HostingCircleFromRoom
    name: HostingCircleFromRoom
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_HostingCircleFromRoom
  - name: (
  - name: )
- uid: CoralBrain.CoralStem.CanHostCircle*
  commentId: Overload:CoralBrain.CoralStem.CanHostCircle
  isExternal: true
  href: CoralBrain.CoralStem.html#CoralBrain_CoralStem_CanHostCircle
  name: CanHostCircle
  nameWithType: CoralStem.CanHostCircle
  fullName: CoralBrain.CoralStem.CanHostCircle
- uid: Global.IOwnProjectedCircles.CanHostCircle
  commentId: M:Global.IOwnProjectedCircles.CanHostCircle
  parent: Global.IOwnProjectedCircles
  isExternal: true
  href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  name: CanHostCircle()
  nameWithType: IOwnProjectedCircles.CanHostCircle()
  fullName: IOwnProjectedCircles.CanHostCircle()
  spec.csharp:
  - uid: Global.IOwnProjectedCircles.CanHostCircle
    name: CanHostCircle
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IOwnProjectedCircles.CanHostCircle
    name: CanHostCircle
    isExternal: true
    href: Global.IOwnProjectedCircles.html#IOwnProjectedCircles_CanHostCircle
  - name: (
  - name: )
