### YamlMime:ManagedReference
items:
- uid: Global.Scavenger
  commentId: T:Global.Scavenger
  id: Scavenger
  parent: Global
  children:
  - Global.Scavenger.#ctor(AbstractCreature,World)
  - Global.Scavenger.AI
  - Global.Scavenger.AllowIdleMoves
  - Global.Scavenger.ArenaScavID
  - Global.Scavenger.ArrangeInventory
  - Global.Scavenger.Charging
  - Global.Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)
  - Global.Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)
  - Global.Scavenger.CombatUpdate
  - Global.Scavenger.CommitedToMoveIsDrop
  - Global.Scavenger.Communicating
  - Global.Scavenger.ControlCycleInventory
  - Global.Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  - Global.Scavenger.CycleItemIntoPrimaryHand
  - Global.Scavenger.Disciple
  - Global.Scavenger.DisciplePing
  - Global.Scavenger.Elite
  - Global.Scavenger.EyesLookPoint
  - Global.Scavenger.FastReactionCheck
  - Global.Scavenger.FlyingWeapon(Weapon)
  - Global.Scavenger.ForceScavJump
  - Global.Scavenger.ForcedLookCreature
  - Global.Scavenger.GiveWeaponToOther(Scavenger)
  - Global.Scavenger.GoInForKill
  - Global.Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  - Global.Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)
  - Global.Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  - Global.Scavenger.HeadLookDir
  - Global.Scavenger.HeadLookPoint
  - Global.Scavenger.HeavyStun(System.Int32)
  - Global.Scavenger.IdentifiedMovingCreatures
  - Global.Scavenger.IdentifiedObjects
  - Global.Scavenger.InStandardRunMode
  - Global.Scavenger.InitiateGraphicsModule
  - Global.Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)
  - Global.Scavenger.Injured
  - Global.Scavenger.IsControlPointing
  - Global.Scavenger.JoinedLookPoint
  - Global.Scavenger.Jump
  - Global.Scavenger.JumpingUpdate
  - Global.Scavenger.KarmicArmorMentalDamage
  - Global.Scavenger.KarmicArmorProtected
  - Global.Scavenger.King
  - Global.Scavenger.LittleStuck
  - Global.Scavenger.LookAtNothing
  - Global.Scavenger.LookForItemsToPickUp
  - Global.Scavenger.MeleeGetFree(Creature,System.Boolean)
  - Global.Scavenger.MovementSpeed
  - Global.Scavenger.NewRoom(Room)
  - Global.Scavenger.NewTile
  - Global.Scavenger.NextTile
  - Global.Scavenger.NoRunBehavior
  - Global.Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)
  - Global.Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)
  - Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
  - Global.Scavenger.PlaceInRoom(Room)
  - Global.Scavenger.PlayerHasImmunity(Player)
  - Global.Scavenger.Pointing
  - Global.Scavenger.ReactionCheck
  - Global.Scavenger.ReallyStuck
  - Global.Scavenger.RecreateSticksFromAbstract
  - Global.Scavenger.ReleaseGrasp(System.Int32)
  - Global.Scavenger.Rummaging
  - Global.Scavenger.RunningUpdate
  - Global.Scavenger.SetUpCombatSkills
  - Global.Scavenger.ShortCutColor
  - Global.Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  - Global.Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  - Global.Scavenger.Stun(System.Int32)
  - Global.Scavenger.Templar
  - Global.Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  - Global.Scavenger.Throw(UnityEngine.Vector2)
  - Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)
  - Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})
  - Global.Scavenger.Update(System.Boolean)
  - Global.Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  - Global.Scavenger.VisionPoint
  - Global.Scavenger.actOnJump
  - Global.Scavenger.addDelay
  - Global.Scavenger.animation
  - Global.Scavenger.armorPieces
  - Global.Scavenger.boomerangCD
  - Global.Scavenger.boomerangCharge
  - Global.Scavenger.climbOrientation
  - Global.Scavenger.climbingUpComing
  - Global.Scavenger.commitToMoveCounter
  - Global.Scavenger.commitedMoveFollowChunk
  - Global.Scavenger.commitedToMove
  - Global.Scavenger.connections
  - Global.Scavenger.controlledJumpFinder
  - Global.Scavenger.critLooker
  - Global.Scavenger.dodgeDelay
  - Global.Scavenger.drop
  - Global.Scavenger.explosionDamageCooldown
  - Global.Scavenger.flip
  - Global.Scavenger.footingCounter
  - Global.Scavenger.ghostCounter
  - Global.Scavenger.grabbedAttackCounter
  - Global.Scavenger.immediatelyThrowAtChunk
  - Global.Scavenger.jumpCell
  - Global.Scavenger.jumpCounter
  - Global.Scavenger.jumpFinders
  - Global.Scavenger.jumpToPoint
  - Global.Scavenger.karmaLevels
  - Global.Scavenger.karmicArmor
  - Global.Scavenger.karmicArmorResetTime
  - Global.Scavenger.karmicArmorTimer
  - Global.Scavenger.karmicArmorTriggered
  - Global.Scavenger.kingWaiting
  - Global.Scavenger.knucklePos
  - Global.Scavenger.lastInputDir
  - Global.Scavenger.lastMovMode
  - Global.Scavenger.lastNonSolidTile
  - Global.Scavenger.lastSafariJoinedLookPoint
  - Global.Scavenger.lookPoint
  - Global.Scavenger.movMode
  - Global.Scavenger.moveModeChangeCounter
  - Global.Scavenger.moving
  - Global.Scavenger.myRobot
  - Global.Scavenger.narrowVision
  - Global.Scavenger.nextSwingPos
  - Global.Scavenger.notFollowingPathToCurrentGoalCounter
  - Global.Scavenger.occupyTile
  - Global.Scavenger.pastPositions
  - Global.Scavenger.readyToReleaseMask
  - Global.Scavenger.spin
  - Global.Scavenger.stuckCounter
  - Global.Scavenger.stuckOnShortcutCounter
  - Global.Scavenger.swingArm
  - Global.Scavenger.swingClimbCounter
  - Global.Scavenger.swingPos
  - Global.Scavenger.swingProgress
  - Global.Scavenger.swingRadius
  - Global.Scavenger.swingingForbidden
  - Global.Scavenger.timeSinceLastInputDir
  - Global.Scavenger.visionFactor
  langs:
  - csharp
  - vb
  name: Scavenger
  nameWithType: Scavenger
  fullName: Scavenger
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Scavenger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Scavenger : AirBreatherCreature, ILookingAtCreatures, Weapon.INotifyOfFlyingWeapons'
    content.vb: Public Class Scavenger Inherits AirBreatherCreature Implements ILookingAtCreatures, Weapon.INotifyOfFlyingWeapons
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  - Global.PhysicalObject
  - Global.Creature
  - Global.AirBreatherCreature
  implements:
  - Global.ILookingAtCreatures
  - Global.Weapon.INotifyOfFlyingWeapons
  inheritedMembers:
  - Global.AirBreatherCreature.lungs
  - Global.Creature.blind
  - Global.Creature.deaf
  - Global.Creature.killTag
  - Global.Creature.killTagCounter
  - Global.Creature.leechedOut
  - Global.Creature.newToRoomInvinsibility
  - Global.Creature.rainDeath
  - Global.Creature.shortcutDelay
  - Global.Creature.enteringShortCut
  - Global.Creature.NPCTransportationDestination
  - Global.Creature.lastCoord
  - Global.Creature.lavaContact
  - Global.Creature.lavaContactCount
  - Global.Creature.rippleTransferCooldown
  - Global.Creature.repelLocusts
  - Global.Creature.muddy
  - Global.Creature.mudColor
  - Global.Creature.injectedPoison
  - Global.Creature.GrabbedByDaddyCorruption
  - Global.Creature.stunDamageType
  - Global.Creature.HypothermiaGain
  - Global.Creature.HypothermiaExposure
  - Global.Creature.inputWithoutDiagonals
  - Global.Creature.lastInputWithoutDiagonals
  - Global.Creature.inputWithDiagonals
  - Global.Creature.lastInputWithDiagonals
  - Global.Creature.freezeControls
  - Global.Creature.protectDeathRecursionFlag
  - Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  - Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  - Global.Creature.RippleViolenceCheck(BodyChunk)
  - Global.Creature.SetKillTag(AbstractCreature)
  - Global.Creature.Blind(System.Int32)
  - Global.Creature.Deafen(System.Int32)
  - Global.Creature.Die
  - Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  - Global.Creature.FlyAwayFromRoom(System.Boolean)
  - Global.Creature.Abstractize
  - Global.Creature.LoseAllGrasps
  - Global.Creature.BodyPartByIndex(System.Int32)
  - Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  - Global.Creature.UpdateGraspIndexes
  - Global.Creature.CanBeGrabbed(Creature)
  - Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  - Global.Creature.HeardNoise(Noise.InGameNoise)
  - Global.Creature.ToString
  - Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  - Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  - Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  - Global.Creature.SafariControlInputUpdate(System.Int32)
  - Global.Creature.stun
  - Global.Creature.Stunned
  - Global.Creature.Blinded
  - Global.Creature.Deaf
  - Global.Creature.mainBodyChunkIndex
  - Global.Creature.mainBodyChunk
  - Global.Creature.dead
  - Global.Creature.Consious
  - Global.Creature.inShortcut
  - Global.Creature.grasps
  - Global.Creature.DangerPos
  - Global.Creature.abstractCreature
  - Global.Creature.Template
  - Global.Creature.State
  - Global.Creature.coord
  - Global.Creature.safariControlled
  - Global.Creature.Hypothermia
  - Global.Creature.WormGrassGooduckyImmune
  - Global.PhysicalObject.bodyChunkConnections
  - Global.PhysicalObject.grabbedBy
  - Global.PhysicalObject.collisionRange
  - Global.PhysicalObject.collisionLayer
  - Global.PhysicalObject.abstractPhysicalObject
  - Global.PhysicalObject.surfaceFriction
  - Global.PhysicalObject.bounce
  - Global.PhysicalObject.impactTreshhold
  - Global.PhysicalObject.waterRetardationImmunity
  - Global.PhysicalObject.burrowFriction
  - Global.PhysicalObject.sticksRespawned
  - Global.PhysicalObject.appendages
  - Global.PhysicalObject.canBeHitByWeapons
  - Global.PhysicalObject.jollyBeingPointedCounter
  - Global.PhysicalObject.FirstChunk
  - Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  - Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  - Global.PhysicalObject.HitByWeapon(Weapon)
  - Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  - Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  - Global.PhysicalObject.Grabbed(Creature.Grasp)
  - Global.PhysicalObject.RemoveGraphicsModule
  - Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  - Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  - Global.PhysicalObject.SetLocalGravity(System.Single)
  - Global.PhysicalObject.GetLocalGravity
  - Global.PhysicalObject.SetLocalAirFriction(System.Single)
  - Global.PhysicalObject.WeatherInertia
  - Global.PhysicalObject.DisposeGraphicsModule
  - Global.PhysicalObject.bodyChunks
  - Global.PhysicalObject.graphicsModule
  - Global.PhysicalObject.firstChunk
  - Global.PhysicalObject.TotalMass
  - Global.PhysicalObject.RandomChunk
  - Global.PhysicalObject.gravity
  - Global.PhysicalObject.airFriction
  - Global.PhysicalObject.waterFriction
  - Global.PhysicalObject.buoyancy
  - Global.PhysicalObject.windAffectiveness
  - Global.PhysicalObject.VisibilityBonus
  - Global.PhysicalObject.GoThroughFloors
  - Global.PhysicalObject.CollideWithTerrain
  - Global.PhysicalObject.CollideWithSlopes
  - Global.PhysicalObject.CollideWithObjects
  - Global.PhysicalObject.Buried
  - Global.PhysicalObject.WantsToBurrow
  - Global.PhysicalObject.Submersion
  - Global.PhysicalObject.SandstormImmune
  - Global.PhysicalObject.EffectiveRoomGravity
  - Global.PhysicalObject.LickedByPlayer
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Scavenger.AI
  commentId: F:Global.Scavenger.AI
  id: AI
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: AI
  nameWithType: Scavenger.AI
  fullName: Scavenger.AI
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.AI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ScavengerAI AI
    return:
      type: Global.ScavengerAI
    content.vb: Public AI As ScavengerAI
- uid: Global.Scavenger.lookPoint
  commentId: F:Global.Scavenger.lookPoint
  id: lookPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: lookPoint
  nameWithType: Scavenger.lookPoint
  fullName: Scavenger.lookPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.lookPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lookPoint
    return:
      type: UnityEngine.Vector2
    content.vb: Public lookPoint As Vector2
- uid: Global.Scavenger.lastSafariJoinedLookPoint
  commentId: F:Global.Scavenger.lastSafariJoinedLookPoint
  id: lastSafariJoinedLookPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: lastSafariJoinedLookPoint
  nameWithType: Scavenger.lastSafariJoinedLookPoint
  fullName: Scavenger.lastSafariJoinedLookPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.lastSafariJoinedLookPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? lastSafariJoinedLookPoint
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public lastSafariJoinedLookPoint As Vector2?
- uid: Global.Scavenger.commitedToMove
  commentId: F:Global.Scavenger.commitedToMove
  id: commitedToMove
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: commitedToMove
  nameWithType: Scavenger.commitedToMove
  fullName: Scavenger.commitedToMove
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.commitedToMove</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection commitedToMove
    return:
      type: Global.MovementConnection
    content.vb: Public commitedToMove As MovementConnection
- uid: Global.Scavenger.commitToMoveCounter
  commentId: F:Global.Scavenger.commitToMoveCounter
  id: commitToMoveCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: commitToMoveCounter
  nameWithType: Scavenger.commitToMoveCounter
  fullName: Scavenger.commitToMoveCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.commitToMoveCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int commitToMoveCounter
    return:
      type: System.Int32
    content.vb: Public commitToMoveCounter As Integer
- uid: Global.Scavenger.commitedMoveFollowChunk
  commentId: F:Global.Scavenger.commitedMoveFollowChunk
  id: commitedMoveFollowChunk
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: commitedMoveFollowChunk
  nameWithType: Scavenger.commitedMoveFollowChunk
  fullName: Scavenger.commitedMoveFollowChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.commitedMoveFollowChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int commitedMoveFollowChunk
    return:
      type: System.Int32
    content.vb: Public commitedMoveFollowChunk As Integer
- uid: Global.Scavenger.drop
  commentId: F:Global.Scavenger.drop
  id: drop
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: drop
  nameWithType: Scavenger.drop
  fullName: Scavenger.drop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.drop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool drop
    return:
      type: System.Boolean
    content.vb: Public drop As Boolean
- uid: Global.Scavenger.grabbedAttackCounter
  commentId: F:Global.Scavenger.grabbedAttackCounter
  id: grabbedAttackCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: grabbedAttackCounter
  nameWithType: Scavenger.grabbedAttackCounter
  fullName: Scavenger.grabbedAttackCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.grabbedAttackCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int grabbedAttackCounter
    return:
      type: System.Int32
    content.vb: Public grabbedAttackCounter As Integer
- uid: Global.Scavenger.moving
  commentId: F:Global.Scavenger.moving
  id: moving
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: moving
  nameWithType: Scavenger.moving
  fullName: Scavenger.moving
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.moving</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool moving
    return:
      type: System.Boolean
    content.vb: Public moving As Boolean
- uid: Global.Scavenger.connections
  commentId: F:Global.Scavenger.connections
  id: connections
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: connections
  nameWithType: Scavenger.connections
  fullName: Scavenger.connections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.connections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<MovementConnection> connections
    return:
      type: System.Collections.Generic.List{MovementConnection}
    content.vb: Public connections As List(Of MovementConnection)
- uid: Global.Scavenger.knucklePos
  commentId: F:Global.Scavenger.knucklePos
  id: knucklePos
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: knucklePos
  nameWithType: Scavenger.knucklePos
  fullName: Scavenger.knucklePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.knucklePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? knucklePos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public knucklePos As Vector2?
- uid: Global.Scavenger.swingPos
  commentId: F:Global.Scavenger.swingPos
  id: swingPos
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingPos
  nameWithType: Scavenger.swingPos
  fullName: Scavenger.swingPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? swingPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public swingPos As Vector2?
- uid: Global.Scavenger.nextSwingPos
  commentId: F:Global.Scavenger.nextSwingPos
  id: nextSwingPos
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: nextSwingPos
  nameWithType: Scavenger.nextSwingPos
  fullName: Scavenger.nextSwingPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.nextSwingPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? nextSwingPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public nextSwingPos As Vector2?
- uid: Global.Scavenger.flip
  commentId: F:Global.Scavenger.flip
  id: flip
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: flip
  nameWithType: Scavenger.flip
  fullName: Scavenger.flip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.flip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flip
    return:
      type: System.Single
    content.vb: Public flip As Single
- uid: Global.Scavenger.swingArm
  commentId: F:Global.Scavenger.swingArm
  id: swingArm
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingArm
  nameWithType: Scavenger.swingArm
  fullName: Scavenger.swingArm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingArm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int swingArm
    return:
      type: System.Int32
    content.vb: Public swingArm As Integer
- uid: Global.Scavenger.swingClimbCounter
  commentId: F:Global.Scavenger.swingClimbCounter
  id: swingClimbCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingClimbCounter
  nameWithType: Scavenger.swingClimbCounter
  fullName: Scavenger.swingClimbCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingClimbCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int swingClimbCounter
    return:
      type: System.Int32
    content.vb: Public swingClimbCounter As Integer
- uid: Global.Scavenger.swingingForbidden
  commentId: F:Global.Scavenger.swingingForbidden
  id: swingingForbidden
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingingForbidden
  nameWithType: Scavenger.swingingForbidden
  fullName: Scavenger.swingingForbidden
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingingForbidden</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int swingingForbidden
    return:
      type: System.Int32
    content.vb: Public swingingForbidden As Integer
- uid: Global.Scavenger.climbOrientation
  commentId: F:Global.Scavenger.climbOrientation
  id: climbOrientation
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: climbOrientation
  nameWithType: Scavenger.climbOrientation
  fullName: Scavenger.climbOrientation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.climbOrientation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 climbOrientation
    return:
      type: RWCustom.IntVector2
    content.vb: Public climbOrientation As IntVector2
- uid: Global.Scavenger.occupyTile
  commentId: F:Global.Scavenger.occupyTile
  id: occupyTile
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: occupyTile
  nameWithType: Scavenger.occupyTile
  fullName: Scavenger.occupyTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.occupyTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 occupyTile
    return:
      type: RWCustom.IntVector2
    content.vb: Public occupyTile As IntVector2
- uid: Global.Scavenger.pastPositions
  commentId: F:Global.Scavenger.pastPositions
  id: pastPositions
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: pastPositions
  nameWithType: Scavenger.pastPositions
  fullName: Scavenger.pastPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.pastPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> pastPositions
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public pastPositions As List(Of IntVector2)
- uid: Global.Scavenger.stuckCounter
  commentId: F:Global.Scavenger.stuckCounter
  id: stuckCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: stuckCounter
  nameWithType: Scavenger.stuckCounter
  fullName: Scavenger.stuckCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.stuckCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stuckCounter
    return:
      type: System.Int32
    content.vb: Public stuckCounter As Integer
- uid: Global.Scavenger.notFollowingPathToCurrentGoalCounter
  commentId: F:Global.Scavenger.notFollowingPathToCurrentGoalCounter
  id: notFollowingPathToCurrentGoalCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: notFollowingPathToCurrentGoalCounter
  nameWithType: Scavenger.notFollowingPathToCurrentGoalCounter
  fullName: Scavenger.notFollowingPathToCurrentGoalCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.notFollowingPathToCurrentGoalCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int notFollowingPathToCurrentGoalCounter
    return:
      type: System.Int32
    content.vb: Public notFollowingPathToCurrentGoalCounter As Integer
- uid: Global.Scavenger.stuckOnShortcutCounter
  commentId: F:Global.Scavenger.stuckOnShortcutCounter
  id: stuckOnShortcutCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: stuckOnShortcutCounter
  nameWithType: Scavenger.stuckOnShortcutCounter
  fullName: Scavenger.stuckOnShortcutCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.stuckOnShortcutCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stuckOnShortcutCounter
    return:
      type: System.Int32
    content.vb: Public stuckOnShortcutCounter As Integer
- uid: Global.Scavenger.visionFactor
  commentId: F:Global.Scavenger.visionFactor
  id: visionFactor
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: visionFactor
  nameWithType: Scavenger.visionFactor
  fullName: Scavenger.visionFactor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.visionFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float visionFactor
    return:
      type: System.Single
    content.vb: Public visionFactor As Single
- uid: Global.Scavenger.narrowVision
  commentId: F:Global.Scavenger.narrowVision
  id: narrowVision
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: narrowVision
  nameWithType: Scavenger.narrowVision
  fullName: Scavenger.narrowVision
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.narrowVision</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float narrowVision
    return:
      type: System.Single
    content.vb: Public narrowVision As Single
- uid: Global.Scavenger.animation
  commentId: F:Global.Scavenger.animation
  id: animation
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: animation
  nameWithType: Scavenger.animation
  fullName: Scavenger.animation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.animation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger.ScavengerAnimation animation
    return:
      type: Global.Scavenger.ScavengerAnimation
    content.vb: Public animation As Scavenger.ScavengerAnimation
- uid: Global.Scavenger.climbingUpComing
  commentId: F:Global.Scavenger.climbingUpComing
  id: climbingUpComing
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: climbingUpComing
  nameWithType: Scavenger.climbingUpComing
  fullName: Scavenger.climbingUpComing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.climbingUpComing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool climbingUpComing
    return:
      type: System.Boolean
    content.vb: Public climbingUpComing As Boolean
- uid: Global.Scavenger.ghostCounter
  commentId: F:Global.Scavenger.ghostCounter
  id: ghostCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ghostCounter
  nameWithType: Scavenger.ghostCounter
  fullName: Scavenger.ghostCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.ghostCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ghostCounter
    return:
      type: System.Int32
    content.vb: Public ghostCounter As Integer
- uid: Global.Scavenger.lastNonSolidTile
  commentId: F:Global.Scavenger.lastNonSolidTile
  id: lastNonSolidTile
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: lastNonSolidTile
  nameWithType: Scavenger.lastNonSolidTile
  fullName: Scavenger.lastNonSolidTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.lastNonSolidTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 lastNonSolidTile
    return:
      type: RWCustom.IntVector2
    content.vb: Public lastNonSolidTile As IntVector2
- uid: Global.Scavenger.movMode
  commentId: F:Global.Scavenger.movMode
  id: movMode
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: movMode
  nameWithType: Scavenger.movMode
  fullName: Scavenger.movMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.movMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger.MovementMode movMode
    return:
      type: Global.Scavenger.MovementMode
    content.vb: Public movMode As Scavenger.MovementMode
- uid: Global.Scavenger.lastMovMode
  commentId: F:Global.Scavenger.lastMovMode
  id: lastMovMode
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: lastMovMode
  nameWithType: Scavenger.lastMovMode
  fullName: Scavenger.lastMovMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.lastMovMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger.MovementMode lastMovMode
    return:
      type: Global.Scavenger.MovementMode
    content.vb: Public lastMovMode As Scavenger.MovementMode
- uid: Global.Scavenger.moveModeChangeCounter
  commentId: F:Global.Scavenger.moveModeChangeCounter
  id: moveModeChangeCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: moveModeChangeCounter
  nameWithType: Scavenger.moveModeChangeCounter
  fullName: Scavenger.moveModeChangeCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.moveModeChangeCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int moveModeChangeCounter
    return:
      type: System.Int32
    content.vb: Public moveModeChangeCounter As Integer
- uid: Global.Scavenger.swingProgress
  commentId: F:Global.Scavenger.swingProgress
  id: swingProgress
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingProgress
  nameWithType: Scavenger.swingProgress
  fullName: Scavenger.swingProgress
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingProgress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swingProgress
    return:
      type: System.Single
    content.vb: Public swingProgress As Single
- uid: Global.Scavenger.swingRadius
  commentId: F:Global.Scavenger.swingRadius
  id: swingRadius
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: swingRadius
  nameWithType: Scavenger.swingRadius
  fullName: Scavenger.swingRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.swingRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swingRadius
    return:
      type: System.Single
    content.vb: Public swingRadius As Single
- uid: Global.Scavenger.footingCounter
  commentId: F:Global.Scavenger.footingCounter
  id: footingCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: footingCounter
  nameWithType: Scavenger.footingCounter
  fullName: Scavenger.footingCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.footingCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int footingCounter
    return:
      type: System.Int32
    content.vb: Public footingCounter As Integer
- uid: Global.Scavenger.critLooker
  commentId: F:Global.Scavenger.critLooker
  id: critLooker
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: critLooker
  nameWithType: Scavenger.critLooker
  fullName: Scavenger.critLooker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.critLooker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureLooker critLooker
    return:
      type: Global.CreatureLooker
    content.vb: Public critLooker As CreatureLooker
- uid: Global.Scavenger.GoInForKill
  commentId: F:Global.Scavenger.GoInForKill
  id: GoInForKill
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: GoInForKill
  nameWithType: Scavenger.GoInForKill
  fullName: Scavenger.GoInForKill
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.GoInForKill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool GoInForKill
    return:
      type: System.Boolean
    content.vb: Public GoInForKill As Boolean
- uid: Global.Scavenger.readyToReleaseMask
  commentId: F:Global.Scavenger.readyToReleaseMask
  id: readyToReleaseMask
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: readyToReleaseMask
  nameWithType: Scavenger.readyToReleaseMask
  fullName: Scavenger.readyToReleaseMask
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.readyToReleaseMask</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyToReleaseMask
    return:
      type: System.Boolean
    content.vb: Public readyToReleaseMask As Boolean
- uid: Global.Scavenger.lastInputDir
  commentId: F:Global.Scavenger.lastInputDir
  id: lastInputDir
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: lastInputDir
  nameWithType: Scavenger.lastInputDir
  fullName: Scavenger.lastInputDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.lastInputDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? lastInputDir
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public lastInputDir As Vector2?
- uid: Global.Scavenger.timeSinceLastInputDir
  commentId: F:Global.Scavenger.timeSinceLastInputDir
  id: timeSinceLastInputDir
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: timeSinceLastInputDir
  nameWithType: Scavenger.timeSinceLastInputDir
  fullName: Scavenger.timeSinceLastInputDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.timeSinceLastInputDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeSinceLastInputDir
    return:
      type: System.Int32
    content.vb: Public timeSinceLastInputDir As Integer
- uid: Global.Scavenger.jumpFinders
  commentId: F:Global.Scavenger.jumpFinders
  id: jumpFinders
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: jumpFinders
  nameWithType: Scavenger.jumpFinders
  fullName: Scavenger.jumpFinders
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.jumpFinders</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Scavenger.JumpFinder> jumpFinders
    return:
      type: System.Collections.Generic.List{Scavenger.JumpFinder}
    content.vb: Public jumpFinders As List(Of Scavenger.JumpFinder)
- uid: Global.Scavenger.actOnJump
  commentId: F:Global.Scavenger.actOnJump
  id: actOnJump
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: actOnJump
  nameWithType: Scavenger.actOnJump
  fullName: Scavenger.actOnJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.actOnJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger.JumpFinder actOnJump
    return:
      type: Global.Scavenger.JumpFinder
    content.vb: Public actOnJump As Scavenger.JumpFinder
- uid: Global.Scavenger.controlledJumpFinder
  commentId: F:Global.Scavenger.controlledJumpFinder
  id: controlledJumpFinder
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: controlledJumpFinder
  nameWithType: Scavenger.controlledJumpFinder
  fullName: Scavenger.controlledJumpFinder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.controlledJumpFinder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger.JumpFinder controlledJumpFinder
    return:
      type: Global.Scavenger.JumpFinder
    content.vb: Public controlledJumpFinder As Scavenger.JumpFinder
- uid: Global.Scavenger.jumpCell
  commentId: F:Global.Scavenger.jumpCell
  id: jumpCell
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: jumpCell
  nameWithType: Scavenger.jumpCell
  fullName: Scavenger.jumpCell
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.jumpCell</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathFinder.PathingCell jumpCell
    return:
      type: Global.PathFinder.PathingCell
    content.vb: Public jumpCell As PathFinder.PathingCell
- uid: Global.Scavenger.jumpCounter
  commentId: F:Global.Scavenger.jumpCounter
  id: jumpCounter
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: jumpCounter
  nameWithType: Scavenger.jumpCounter
  fullName: Scavenger.jumpCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.jumpCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int jumpCounter
    return:
      type: System.Int32
    content.vb: Public jumpCounter As Integer
- uid: Global.Scavenger.addDelay
  commentId: F:Global.Scavenger.addDelay
  id: addDelay
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: addDelay
  nameWithType: Scavenger.addDelay
  fullName: Scavenger.addDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.addDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int addDelay
    return:
      type: System.Int32
    content.vb: Public addDelay As Integer
- uid: Global.Scavenger.spin
  commentId: F:Global.Scavenger.spin
  id: spin
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: spin
  nameWithType: Scavenger.spin
  fullName: Scavenger.spin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.spin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int spin
    return:
      type: System.Int32
    content.vb: Public spin As Integer
- uid: Global.Scavenger.myRobot
  commentId: F:Global.Scavenger.myRobot
  id: myRobot
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: myRobot
  nameWithType: Scavenger.myRobot
  fullName: Scavenger.myRobot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.myRobot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AncientBot myRobot
    return:
      type: MoreSlugcats.AncientBot
    content.vb: Public myRobot As AncientBot
- uid: Global.Scavenger.kingWaiting
  commentId: F:Global.Scavenger.kingWaiting
  id: kingWaiting
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: kingWaiting
  nameWithType: Scavenger.kingWaiting
  fullName: Scavenger.kingWaiting
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.kingWaiting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool kingWaiting
    return:
      type: System.Boolean
    content.vb: Public kingWaiting As Boolean
- uid: Global.Scavenger.armorPieces
  commentId: F:Global.Scavenger.armorPieces
  id: armorPieces
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: armorPieces
  nameWithType: Scavenger.armorPieces
  fullName: Scavenger.armorPieces
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.armorPieces</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int armorPieces
    return:
      type: System.Int32
    content.vb: Public armorPieces As Integer
- uid: Global.Scavenger.explosionDamageCooldown
  commentId: F:Global.Scavenger.explosionDamageCooldown
  id: explosionDamageCooldown
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: explosionDamageCooldown
  nameWithType: Scavenger.explosionDamageCooldown
  fullName: Scavenger.explosionDamageCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.explosionDamageCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int explosionDamageCooldown
    return:
      type: System.Int32
    content.vb: Public explosionDamageCooldown As Integer
- uid: Global.Scavenger.ArenaScavID
  commentId: F:Global.Scavenger.ArenaScavID
  id: ArenaScavID
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ArenaScavID
  nameWithType: Scavenger.ArenaScavID
  fullName: Scavenger.ArenaScavID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.ArenaScavID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int ArenaScavID
    return:
      type: System.Int32
    content.vb: Public Shared ArenaScavID As Integer
- uid: Global.Scavenger.boomerangCharge
  commentId: F:Global.Scavenger.boomerangCharge
  id: boomerangCharge
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: boomerangCharge
  nameWithType: Scavenger.boomerangCharge
  fullName: Scavenger.boomerangCharge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.boomerangCharge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool boomerangCharge
    return:
      type: System.Boolean
    content.vb: Public boomerangCharge As Boolean
- uid: Global.Scavenger.karmicArmor
  commentId: F:Global.Scavenger.karmicArmor
  id: karmicArmor
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: karmicArmor
  nameWithType: Scavenger.karmicArmor
  fullName: Scavenger.karmicArmor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.karmicArmor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KarmicArmor karmicArmor
    return:
      type: Global.KarmicArmor
    content.vb: Public karmicArmor As KarmicArmor
- uid: Global.Scavenger.karmaLevels
  commentId: F:Global.Scavenger.karmaLevels
  id: karmaLevels
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: karmaLevels
  nameWithType: Scavenger.karmaLevels
  fullName: Scavenger.karmaLevels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.karmaLevels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int karmaLevels
    return:
      type: System.Int32
    content.vb: Public karmaLevels As Integer
- uid: Global.Scavenger.karmicArmorTimer
  commentId: F:Global.Scavenger.karmicArmorTimer
  id: karmicArmorTimer
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: karmicArmorTimer
  nameWithType: Scavenger.karmicArmorTimer
  fullName: Scavenger.karmicArmorTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.karmicArmorTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int karmicArmorTimer
    return:
      type: System.Int32
    content.vb: Public karmicArmorTimer As Integer
- uid: Global.Scavenger.karmicArmorResetTime
  commentId: F:Global.Scavenger.karmicArmorResetTime
  id: karmicArmorResetTime
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: karmicArmorResetTime
  nameWithType: Scavenger.karmicArmorResetTime
  fullName: Scavenger.karmicArmorResetTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.karmicArmorResetTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int karmicArmorResetTime
    return:
      type: System.Int32
    content.vb: Public karmicArmorResetTime As Integer
- uid: Global.Scavenger.karmicArmorTriggered
  commentId: F:Global.Scavenger.karmicArmorTriggered
  id: karmicArmorTriggered
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: karmicArmorTriggered
  nameWithType: Scavenger.karmicArmorTriggered
  fullName: Scavenger.karmicArmorTriggered
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.karmicArmorTriggered</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool karmicArmorTriggered
    return:
      type: System.Boolean
    content.vb: Public karmicArmorTriggered As Boolean
- uid: Global.Scavenger.boomerangCD
  commentId: F:Global.Scavenger.boomerangCD
  id: boomerangCD
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: boomerangCD
  nameWithType: Scavenger.boomerangCD
  fullName: Scavenger.boomerangCD
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.boomerangCD</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int boomerangCD
    return:
      type: System.Int32
    content.vb: Public boomerangCD As Integer
- uid: Global.Scavenger.IdentifiedObjects
  commentId: F:Global.Scavenger.IdentifiedObjects
  id: IdentifiedObjects
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: IdentifiedObjects
  nameWithType: Scavenger.IdentifiedObjects
  fullName: Scavenger.IdentifiedObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.IdentifiedObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PhysicalObject> IdentifiedObjects
    return:
      type: System.Collections.Generic.List{PhysicalObject}
    content.vb: Public IdentifiedObjects As List(Of PhysicalObject)
- uid: Global.Scavenger.IdentifiedMovingCreatures
  commentId: F:Global.Scavenger.IdentifiedMovingCreatures
  id: IdentifiedMovingCreatures
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: IdentifiedMovingCreatures
  nameWithType: Scavenger.IdentifiedMovingCreatures
  fullName: Scavenger.IdentifiedMovingCreatures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.IdentifiedMovingCreatures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PhysicalObject> IdentifiedMovingCreatures
    return:
      type: System.Collections.Generic.List{PhysicalObject}
    content.vb: Public IdentifiedMovingCreatures As List(Of PhysicalObject)
- uid: Global.Scavenger.dodgeDelay
  commentId: F:Global.Scavenger.dodgeDelay
  id: dodgeDelay
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: dodgeDelay
  nameWithType: Scavenger.dodgeDelay
  fullName: Scavenger.dodgeDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.dodgeDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dodgeDelay
    return:
      type: System.Int32
    content.vb: Public dodgeDelay As Integer
- uid: Global.Scavenger.immediatelyThrowAtChunk
  commentId: F:Global.Scavenger.immediatelyThrowAtChunk
  id: immediatelyThrowAtChunk
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: immediatelyThrowAtChunk
  nameWithType: Scavenger.immediatelyThrowAtChunk
  fullName: Scavenger.immediatelyThrowAtChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Scavenger.immediatelyThrowAtChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk immediatelyThrowAtChunk
    return:
      type: Global.BodyChunk
    content.vb: Public immediatelyThrowAtChunk As BodyChunk
- uid: Global.Scavenger.#ctor(AbstractCreature,World)
  commentId: M:Global.Scavenger.#ctor(AbstractCreature,World)
  id: '#ctor(AbstractCreature,World)'
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Scavenger(AbstractCreature, World)
  nameWithType: Scavenger.Scavenger(AbstractCreature, World)
  fullName: Scavenger.Scavenger(AbstractCreature, World)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Scavenger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Scavenger(AbstractCreature abstractCreature, World world)
    parameters:
    - id: abstractCreature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractCreature</parameter>
            <parameter>M:Scavenger.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:Scavenger.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(abstractCreature As AbstractCreature, world As World)
  overload: Global.Scavenger.#ctor*
  nameWithType.vb: Scavenger.New(AbstractCreature, World)
  fullName.vb: Scavenger.New(AbstractCreature, World)
  name.vb: New(AbstractCreature, World)
- uid: Global.Scavenger.InitiateGraphicsModule
  commentId: M:Global.Scavenger.InitiateGraphicsModule
  id: InitiateGraphicsModule
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: InitiateGraphicsModule()
  nameWithType: Scavenger.InitiateGraphicsModule()
  fullName: Scavenger.InitiateGraphicsModule()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.InitiateGraphicsModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void InitiateGraphicsModule()
    content.vb: Public Overrides Sub InitiateGraphicsModule()
  overridden: Global.PhysicalObject.InitiateGraphicsModule
  overload: Global.Scavenger.InitiateGraphicsModule*
- uid: Global.Scavenger.NewRoom(Room)
  commentId: M:Global.Scavenger.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: Scavenger.NewRoom(Room)
  fullName: Scavenger.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Scavenger.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(newRoom As Room)
  overridden: Global.Creature.NewRoom(Room)
  overload: Global.Scavenger.NewRoom*
- uid: Global.Scavenger.PlaceInRoom(Room)
  commentId: M:Global.Scavenger.PlaceInRoom(Room)
  id: PlaceInRoom(Room)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: PlaceInRoom(Room)
  nameWithType: Scavenger.PlaceInRoom(Room)
  fullName: Scavenger.PlaceInRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.PlaceInRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void PlaceInRoom(Room placeRoom)
    parameters:
    - id: placeRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placeRoom</parameter>
            <parameter>M:Scavenger.PlaceInRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub PlaceInRoom(placeRoom As Room)
  overridden: Global.Creature.PlaceInRoom(Room)
  overload: Global.Scavenger.PlaceInRoom*
- uid: Global.Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)
  commentId: M:Global.Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)
  id: PingReturnInfo(PhysicalObject,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: PingReturnInfo(PhysicalObject, bool)
  nameWithType: Scavenger.PingReturnInfo(PhysicalObject, bool)
  fullName: Scavenger.PingReturnInfo(PhysicalObject, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PingReturnInfo(PhysicalObject pObj, bool isCreature)
    parameters:
    - id: pObj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pObj</parameter>
            <parameter>M:Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: isCreature
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isCreature</parameter>
            <parameter>M:Scavenger.PingReturnInfo(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PingReturnInfo(pObj As PhysicalObject, isCreature As Boolean)
  overload: Global.Scavenger.PingReturnInfo*
  nameWithType.vb: Scavenger.PingReturnInfo(PhysicalObject, Boolean)
  fullName.vb: Scavenger.PingReturnInfo(PhysicalObject, Boolean)
  name.vb: PingReturnInfo(PhysicalObject, Boolean)
- uid: Global.Scavenger.Update(System.Boolean)
  commentId: M:Global.Scavenger.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Scavenger.Update(bool)
  fullName: Scavenger.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Scavenger.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.AirBreatherCreature.Update(System.Boolean)
  overload: Global.Scavenger.Update*
  nameWithType.vb: Scavenger.Update(Boolean)
  fullName.vb: Scavenger.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Scavenger.NewTile
  commentId: M:Global.Scavenger.NewTile
  id: NewTile
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: NewTile()
  nameWithType: Scavenger.NewTile()
  fullName: Scavenger.NewTile()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.NewTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewTile()
    content.vb: Public Overrides Sub NewTile()
  overridden: Global.Creature.NewTile
  overload: Global.Scavenger.NewTile*
- uid: Global.Scavenger.DisciplePing
  commentId: M:Global.Scavenger.DisciplePing
  id: DisciplePing
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: DisciplePing()
  nameWithType: Scavenger.DisciplePing()
  fullName: Scavenger.DisciplePing()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.DisciplePing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DisciplePing()
    content.vb: Public Sub DisciplePing()
  overload: Global.Scavenger.DisciplePing*
- uid: Global.Scavenger.LookForItemsToPickUp
  commentId: M:Global.Scavenger.LookForItemsToPickUp
  id: LookForItemsToPickUp
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: LookForItemsToPickUp()
  nameWithType: Scavenger.LookForItemsToPickUp()
  fullName: Scavenger.LookForItemsToPickUp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.LookForItemsToPickUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LookForItemsToPickUp()
    content.vb: Public Sub LookForItemsToPickUp()
  overload: Global.Scavenger.LookForItemsToPickUp*
- uid: Global.Scavenger.GiveWeaponToOther(Scavenger)
  commentId: M:Global.Scavenger.GiveWeaponToOther(Scavenger)
  id: GiveWeaponToOther(Scavenger)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: GiveWeaponToOther(Scavenger)
  nameWithType: Scavenger.GiveWeaponToOther(Scavenger)
  fullName: Scavenger.GiveWeaponToOther(Scavenger)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.GiveWeaponToOther(Scavenger)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GiveWeaponToOther(Scavenger other)
    parameters:
    - id: other
      type: Global.Scavenger
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Scavenger.GiveWeaponToOther(Scavenger)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GiveWeaponToOther(other As Scavenger)
  overload: Global.Scavenger.GiveWeaponToOther*
- uid: Global.Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)
  commentId: M:Global.Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)
  id: PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: PickUpAndPlaceInInventory(PhysicalObject, bool)
  nameWithType: Scavenger.PickUpAndPlaceInInventory(PhysicalObject, bool)
  fullName: Scavenger.PickUpAndPlaceInInventory(PhysicalObject, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PickUpAndPlaceInInventory(PhysicalObject obj, bool lethalityBypass = false)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lethalityBypass
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lethalityBypass</parameter>
            <parameter>M:Scavenger.PickUpAndPlaceInInventory(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PickUpAndPlaceInInventory(obj As PhysicalObject, lethalityBypass As Boolean = False)
  overload: Global.Scavenger.PickUpAndPlaceInInventory*
  nameWithType.vb: Scavenger.PickUpAndPlaceInInventory(PhysicalObject, Boolean)
  fullName.vb: Scavenger.PickUpAndPlaceInInventory(PhysicalObject, Boolean)
  name.vb: PickUpAndPlaceInInventory(PhysicalObject, Boolean)
- uid: Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
  commentId: M:Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
  id: PlaceAllGrabbedObjectsInCorrectContainers
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: PlaceAllGrabbedObjectsInCorrectContainers()
  nameWithType: Scavenger.PlaceAllGrabbedObjectsInCorrectContainers()
  fullName: Scavenger.PlaceAllGrabbedObjectsInCorrectContainers()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.PlaceAllGrabbedObjectsInCorrectContainers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaceAllGrabbedObjectsInCorrectContainers()
    content.vb: Public Sub PlaceAllGrabbedObjectsInCorrectContainers()
  overload: Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers*
- uid: Global.Scavenger.ArrangeInventory
  commentId: M:Global.Scavenger.ArrangeInventory
  id: ArrangeInventory
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ArrangeInventory()
  nameWithType: Scavenger.ArrangeInventory()
  fullName: Scavenger.ArrangeInventory()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ArrangeInventory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ArrangeInventory()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.ArrangeInventory</parameter>
          </include>
        </markup>
    content.vb: Public Function ArrangeInventory() As Boolean
  overload: Global.Scavenger.ArrangeInventory*
- uid: Global.Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  commentId: M:Global.Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  id: Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Grab(PhysicalObject, int, int, Shareability, float, bool, bool)
  nameWithType: Scavenger.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  fullName: Scavenger.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Grab(PhysicalObject obj, int graspUsed, int chunkGrabbed, Creature.Grasp.Shareability shareability, float dominance, bool overrideEquallyDominant, bool pacifying)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: graspUsed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>graspUsed</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: chunkGrabbed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunkGrabbed</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: shareability
      type: Global.Creature.Grasp.Shareability
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shareability</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: dominance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dominance</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: overrideEquallyDominant
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overrideEquallyDominant</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pacifying
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pacifying</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Grab(obj As PhysicalObject, graspUsed As Integer, chunkGrabbed As Integer, shareability As Creature.Grasp.Shareability, dominance As Single, overrideEquallyDominant As Boolean, pacifying As Boolean) As Boolean
  overridden: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  overload: Global.Scavenger.Grab*
  nameWithType.vb: Scavenger.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  fullName.vb: Scavenger.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  name.vb: Grab(PhysicalObject, Integer, Integer, Shareability, Single, Boolean, Boolean)
- uid: Global.Scavenger.RecreateSticksFromAbstract
  commentId: M:Global.Scavenger.RecreateSticksFromAbstract
  id: RecreateSticksFromAbstract
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: RecreateSticksFromAbstract()
  nameWithType: Scavenger.RecreateSticksFromAbstract()
  fullName: Scavenger.RecreateSticksFromAbstract()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.RecreateSticksFromAbstract</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void RecreateSticksFromAbstract()
    content.vb: Public Overrides Sub RecreateSticksFromAbstract()
  overridden: Global.Creature.RecreateSticksFromAbstract
  overload: Global.Scavenger.RecreateSticksFromAbstract*
- uid: Global.Scavenger.ReleaseGrasp(System.Int32)
  commentId: M:Global.Scavenger.ReleaseGrasp(System.Int32)
  id: ReleaseGrasp(System.Int32)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ReleaseGrasp(int)
  nameWithType: Scavenger.ReleaseGrasp(int)
  fullName: Scavenger.ReleaseGrasp(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ReleaseGrasp(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ReleaseGrasp(int grasp)
    parameters:
    - id: grasp
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Scavenger.ReleaseGrasp(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub ReleaseGrasp(grasp As Integer)
  overridden: Global.Creature.ReleaseGrasp(System.Int32)
  overload: Global.Scavenger.ReleaseGrasp*
  nameWithType.vb: Scavenger.ReleaseGrasp(Integer)
  fullName.vb: Scavenger.ReleaseGrasp(Integer)
  name.vb: ReleaseGrasp(Integer)
- uid: Global.Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  id: GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: Scavenger.GraphicsModuleUpdated(bool, bool)
  fullName: Scavenger.GraphicsModuleUpdated(bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GraphicsModuleUpdated(bool actuallyViewed, bool eu)
    parameters:
    - id: actuallyViewed
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actuallyViewed</parameter>
            <parameter>M:Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Scavenger.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GraphicsModuleUpdated(actuallyViewed As Boolean, eu As Boolean)
  overridden: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  overload: Global.Scavenger.GraphicsModuleUpdated*
  nameWithType.vb: Scavenger.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: Scavenger.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
- uid: Global.Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)
  id: Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Collide(PhysicalObject, int, int)
  nameWithType: Scavenger.Collide(PhysicalObject, int, int)
  fullName: Scavenger.Collide(PhysicalObject, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Collide(PhysicalObject otherObject, int myChunk, int otherChunk)
    parameters:
    - id: otherObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherObject</parameter>
            <parameter>M:Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: myChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>myChunk</parameter>
            <parameter>M:Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: otherChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherChunk</parameter>
            <parameter>M:Scavenger.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Collide(otherObject As PhysicalObject, myChunk As Integer, otherChunk As Integer)
  overridden: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  overload: Global.Scavenger.Collide*
  nameWithType.vb: Scavenger.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: Scavenger.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
- uid: Global.Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  id: TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: Scavenger.TerrainImpact(int, IntVector2, float, bool)
  fullName: Scavenger.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void TerrainImpact(int chunk, IntVector2 direction, float speed, bool firstContact)
    parameters:
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: firstContact
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstContact</parameter>
            <parameter>M:Scavenger.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub TerrainImpact(chunk As Integer, direction As IntVector2, speed As Single, firstContact As Boolean)
  overridden: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  overload: Global.Scavenger.TerrainImpact*
  nameWithType.vb: Scavenger.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: Scavenger.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
- uid: Global.Scavenger.ShortCutColor
  commentId: M:Global.Scavenger.ShortCutColor
  id: ShortCutColor
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ShortCutColor()
  nameWithType: Scavenger.ShortCutColor()
  fullName: Scavenger.ShortCutColor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ShortCutColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override Color ShortCutColor()
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.ShortCutColor</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ShortCutColor() As Color
  overridden: Global.Creature.ShortCutColor
  overload: Global.Scavenger.ShortCutColor*
- uid: Global.Scavenger.HeavyStun(System.Int32)
  commentId: M:Global.Scavenger.HeavyStun(System.Int32)
  id: HeavyStun(System.Int32)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: HeavyStun(int)
  nameWithType: Scavenger.HeavyStun(int)
  fullName: Scavenger.HeavyStun(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.HeavyStun(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HeavyStun(int st)
    parameters:
    - id: st
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>st</parameter>
            <parameter>M:Scavenger.HeavyStun(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HeavyStun(st As Integer)
  overload: Global.Scavenger.HeavyStun*
  nameWithType.vb: Scavenger.HeavyStun(Integer)
  fullName.vb: Scavenger.HeavyStun(Integer)
  name.vb: HeavyStun(Integer)
- uid: Global.Scavenger.Stun(System.Int32)
  commentId: M:Global.Scavenger.Stun(System.Int32)
  id: Stun(System.Int32)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Stun(int)
  nameWithType: Scavenger.Stun(int)
  fullName: Scavenger.Stun(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Stun(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Stun(int st)
    parameters:
    - id: st
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>st</parameter>
            <parameter>M:Scavenger.Stun(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Stun(st As Integer)
  overridden: Global.Creature.Stun(System.Int32)
  overload: Global.Scavenger.Stun*
  nameWithType.vb: Scavenger.Stun(Integer)
  fullName.vb: Scavenger.Stun(Integer)
  name.vb: Stun(Integer)
- uid: Global.Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  commentId: M:Global.Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  id: SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: SpitOutOfShortCut(IntVector2, Room, bool)
  nameWithType: Scavenger.SpitOutOfShortCut(IntVector2, Room, bool)
  fullName: Scavenger.SpitOutOfShortCut(RWCustom.IntVector2, Room, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void SpitOutOfShortCut(IntVector2 pos, Room newRoom, bool spitOutAllSticks)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: spitOutAllSticks
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spitOutAllSticks</parameter>
            <parameter>M:Scavenger.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub SpitOutOfShortCut(pos As IntVector2, newRoom As Room, spitOutAllSticks As Boolean)
  overridden: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  overload: Global.Scavenger.SpitOutOfShortCut*
  nameWithType.vb: Scavenger.SpitOutOfShortCut(IntVector2, Room, Boolean)
  fullName.vb: Scavenger.SpitOutOfShortCut(RWCustom.IntVector2, Room, Boolean)
  name.vb: SpitOutOfShortCut(IntVector2, Room, Boolean)
- uid: Global.Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  commentId: M:Global.Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  id: Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, float, float)
  nameWithType: Scavenger.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  fullName: Scavenger.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Violence(BodyChunk source, Vector2? directionAndMomentum, BodyChunk hitChunk, PhysicalObject.Appendage.Pos hitAppendage, Creature.DamageType type, float damage, float stunBonus)
    parameters:
    - id: source
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: directionAndMomentum
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directionAndMomentum</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hitChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hitChunk</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hitAppendage
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hitAppendage</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: type
      type: Global.Creature.DamageType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: damage
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>damage</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: stunBonus
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stunBonus</parameter>
            <parameter>M:Scavenger.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Violence(source As BodyChunk, directionAndMomentum As Vector2?, hitChunk As BodyChunk, hitAppendage As PhysicalObject.Appendage.Pos, type As Creature.DamageType, damage As Single, stunBonus As Single)
  overridden: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  overload: Global.Scavenger.Violence*
  nameWithType.vb: Scavenger.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  fullName.vb: Scavenger.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  name.vb: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, Single, Single)
- uid: Global.Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  commentId: M:Global.Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  id: CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: CreatureInterestBonus(CreatureRepresentation, float)
  nameWithType: Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  fullName: Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CreatureInterestBonus(Tracker.CreatureRepresentation crit, float score)
    parameters:
    - id: crit
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    - id: score
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>score</parameter>
            <parameter>M:Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatureInterestBonus(crit As Tracker.CreatureRepresentation, score As Single) As Single
  overload: Global.Scavenger.CreatureInterestBonus*
  implements:
  - Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  nameWithType.vb: Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  fullName.vb: Scavenger.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  name.vb: CreatureInterestBonus(CreatureRepresentation, Single)
- uid: Global.Scavenger.ForcedLookCreature
  commentId: M:Global.Scavenger.ForcedLookCreature
  id: ForcedLookCreature
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ForcedLookCreature()
  nameWithType: Scavenger.ForcedLookCreature()
  fullName: Scavenger.ForcedLookCreature()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ForcedLookCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation ForcedLookCreature()
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.ForcedLookCreature</parameter>
          </include>
        </markup>
    content.vb: Public Function ForcedLookCreature() As Tracker.CreatureRepresentation
  overload: Global.Scavenger.ForcedLookCreature*
  implements:
  - Global.ILookingAtCreatures.ForcedLookCreature
- uid: Global.Scavenger.LookAtNothing
  commentId: M:Global.Scavenger.LookAtNothing
  id: LookAtNothing
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: LookAtNothing()
  nameWithType: Scavenger.LookAtNothing()
  fullName: Scavenger.LookAtNothing()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.LookAtNothing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LookAtNothing()
    content.vb: Public Sub LookAtNothing()
  overload: Global.Scavenger.LookAtNothing*
  implements:
  - Global.ILookingAtCreatures.LookAtNothing
- uid: Global.Scavenger.KarmicArmorMentalDamage
  commentId: M:Global.Scavenger.KarmicArmorMentalDamage
  id: KarmicArmorMentalDamage
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: KarmicArmorMentalDamage()
  nameWithType: Scavenger.KarmicArmorMentalDamage()
  fullName: Scavenger.KarmicArmorMentalDamage()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.KarmicArmorMentalDamage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void KarmicArmorMentalDamage()
    content.vb: Public Sub KarmicArmorMentalDamage()
  overload: Global.Scavenger.KarmicArmorMentalDamage*
- uid: Global.Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)
  commentId: M:Global.Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)
  id: GrabbedObjectSnatched(PhysicalObject,Creature)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: GrabbedObjectSnatched(PhysicalObject, Creature)
  nameWithType: Scavenger.GrabbedObjectSnatched(PhysicalObject, Creature)
  fullName: Scavenger.GrabbedObjectSnatched(PhysicalObject, Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrabbedObjectSnatched(PhysicalObject grabbedObject, Creature thief)
    parameters:
    - id: grabbedObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabbedObject</parameter>
            <parameter>M:Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    - id: thief
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thief</parameter>
            <parameter>M:Scavenger.GrabbedObjectSnatched(PhysicalObject,Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GrabbedObjectSnatched(grabbedObject As PhysicalObject, thief As Creature)
  overridden: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  overload: Global.Scavenger.GrabbedObjectSnatched*
- uid: Global.Scavenger.ControlCycleInventory
  commentId: M:Global.Scavenger.ControlCycleInventory
  id: ControlCycleInventory
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ControlCycleInventory()
  nameWithType: Scavenger.ControlCycleInventory()
  fullName: Scavenger.ControlCycleInventory()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ControlCycleInventory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ControlCycleInventory()
    content.vb: Public Sub ControlCycleInventory()
  overload: Global.Scavenger.ControlCycleInventory*
- uid: Global.Scavenger.CycleItemIntoPrimaryHand
  commentId: M:Global.Scavenger.CycleItemIntoPrimaryHand
  id: CycleItemIntoPrimaryHand
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: CycleItemIntoPrimaryHand()
  nameWithType: Scavenger.CycleItemIntoPrimaryHand()
  fullName: Scavenger.CycleItemIntoPrimaryHand()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.CycleItemIntoPrimaryHand</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CycleItemIntoPrimaryHand()
    content.vb: Public Sub CycleItemIntoPrimaryHand()
  overload: Global.Scavenger.CycleItemIntoPrimaryHand*
- uid: Global.Scavenger.FastReactionCheck
  commentId: M:Global.Scavenger.FastReactionCheck
  id: FastReactionCheck
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: FastReactionCheck()
  nameWithType: Scavenger.FastReactionCheck()
  fullName: Scavenger.FastReactionCheck()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.FastReactionCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool FastReactionCheck()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.FastReactionCheck</parameter>
          </include>
        </markup>
    content.vb: Public Function FastReactionCheck() As Boolean
  overload: Global.Scavenger.FastReactionCheck*
- uid: Global.Scavenger.PlayerHasImmunity(Player)
  commentId: M:Global.Scavenger.PlayerHasImmunity(Player)
  id: PlayerHasImmunity(Player)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: PlayerHasImmunity(Player)
  nameWithType: Scavenger.PlayerHasImmunity(Player)
  fullName: Scavenger.PlayerHasImmunity(Player)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.PlayerHasImmunity(Player)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PlayerHasImmunity(Player player)
    parameters:
    - id: player
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>player</parameter>
            <parameter>M:Scavenger.PlayerHasImmunity(Player)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.PlayerHasImmunity(Player)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayerHasImmunity(player As Player) As Boolean
  overload: Global.Scavenger.PlayerHasImmunity*
- uid: Global.Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Global.Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  id: SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: SpearStick(Weapon, float, BodyChunk, Pos, Vector2)
  nameWithType: Scavenger.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName: Scavenger.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool SpearStick(Weapon source, float dmg, BodyChunk chunk, PhysicalObject.Appendage.Pos onAppendagePos, Vector2 direction)
    parameters:
    - id: source
      type: Global.Weapon
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: dmg
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dmg</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: onAppendagePos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>onAppendagePos</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: direction
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function SpearStick(source As Weapon, dmg As Single, chunk As BodyChunk, onAppendagePos As PhysicalObject.Appendage.Pos, direction As Vector2) As Boolean
  overridden: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  overload: Global.Scavenger.SpearStick*
  nameWithType.vb: Scavenger.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName.vb: Scavenger.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  name.vb: SpearStick(Weapon, Single, BodyChunk, Pos, Vector2)
- uid: Global.Scavenger.JumpingUpdate
  commentId: M:Global.Scavenger.JumpingUpdate
  id: JumpingUpdate
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: JumpingUpdate()
  nameWithType: Scavenger.JumpingUpdate()
  fullName: Scavenger.JumpingUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.JumpingUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JumpingUpdate()
    content.vb: Public Sub JumpingUpdate()
  overload: Global.Scavenger.JumpingUpdate*
- uid: Global.Scavenger.ForceScavJump
  commentId: M:Global.Scavenger.ForceScavJump
  id: ForceScavJump
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ForceScavJump()
  nameWithType: Scavenger.ForceScavJump()
  fullName: Scavenger.ForceScavJump()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ForceScavJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ForceScavJump()
    content.vb: Public Sub ForceScavJump()
  overload: Global.Scavenger.ForceScavJump*
- uid: Global.Scavenger.RunningUpdate
  commentId: M:Global.Scavenger.RunningUpdate
  id: RunningUpdate
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: RunningUpdate()
  nameWithType: Scavenger.RunningUpdate()
  fullName: Scavenger.RunningUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.RunningUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RunningUpdate()
    content.vb: Public Sub RunningUpdate()
  overload: Global.Scavenger.RunningUpdate*
- uid: Global.Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)
  commentId: M:Global.Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)
  id: InitiateJump(Scavenger.JumpFinder,System.Int32)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: InitiateJump(JumpFinder, int)
  nameWithType: Scavenger.InitiateJump(Scavenger.JumpFinder, int)
  fullName: Scavenger.InitiateJump(Scavenger.JumpFinder, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateJump(Scavenger.JumpFinder jump, int jumpTime = 30)
    parameters:
    - id: jump
      type: Global.Scavenger.JumpFinder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>jump</parameter>
            <parameter>M:Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)</parameter>
          </include>
        </markup>
    - id: jumpTime
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>jumpTime</parameter>
            <parameter>M:Scavenger.InitiateJump(Scavenger.JumpFinder,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateJump(jump As Scavenger.JumpFinder, jumpTime As Integer = 30)
  overload: Global.Scavenger.InitiateJump*
  nameWithType.vb: Scavenger.InitiateJump(Scavenger.JumpFinder, Integer)
  fullName.vb: Scavenger.InitiateJump(Scavenger.JumpFinder, Integer)
  name.vb: InitiateJump(JumpFinder, Integer)
- uid: Global.Scavenger.Jump
  commentId: M:Global.Scavenger.Jump
  id: Jump
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Jump()
  nameWithType: Scavenger.Jump()
  fullName: Scavenger.Jump()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Jump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Jump()
    content.vb: Public Sub Jump()
  overload: Global.Scavenger.Jump*
- uid: Global.Scavenger.SetUpCombatSkills
  commentId: M:Global.Scavenger.SetUpCombatSkills
  id: SetUpCombatSkills
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: SetUpCombatSkills()
  nameWithType: Scavenger.SetUpCombatSkills()
  fullName: Scavenger.SetUpCombatSkills()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.SetUpCombatSkills</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetUpCombatSkills()
    content.vb: Public Sub SetUpCombatSkills()
  overload: Global.Scavenger.SetUpCombatSkills*
- uid: Global.Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)
  commentId: M:Global.Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)
  id: CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: CollideWithOtherCreature(BodyChunk, CreatureRepresentation)
  nameWithType: Scavenger.CollideWithOtherCreature(BodyChunk, Tracker.CreatureRepresentation)
  fullName: Scavenger.CollideWithOtherCreature(BodyChunk, Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CollideWithOtherCreature(BodyChunk creatureChunk, Tracker.CreatureRepresentation rep)
    parameters:
    - id: creatureChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatureChunk</parameter>
            <parameter>M:Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    - id: rep
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rep</parameter>
            <parameter>M:Scavenger.CollideWithOtherCreature(BodyChunk,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CollideWithOtherCreature(creatureChunk As BodyChunk, rep As Tracker.CreatureRepresentation)
  overload: Global.Scavenger.CollideWithOtherCreature*
- uid: Global.Scavenger.CombatUpdate
  commentId: M:Global.Scavenger.CombatUpdate
  id: CombatUpdate
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: CombatUpdate()
  nameWithType: Scavenger.CombatUpdate()
  fullName: Scavenger.CombatUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.CombatUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CombatUpdate()
    content.vb: Public Sub CombatUpdate()
  overload: Global.Scavenger.CombatUpdate*
- uid: Global.Scavenger.ReactionCheck
  commentId: M:Global.Scavenger.ReactionCheck
  id: ReactionCheck
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ReactionCheck()
  nameWithType: Scavenger.ReactionCheck()
  fullName: Scavenger.ReactionCheck()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.ReactionCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReactionCheck()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Scavenger.ReactionCheck</parameter>
          </include>
        </markup>
    content.vb: Public Function ReactionCheck() As Boolean
  overload: Global.Scavenger.ReactionCheck*
- uid: Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)
  commentId: M:Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)
  id: TryThrow(BodyChunk,ScavengerAI.ViolenceType)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: TryThrow(BodyChunk, ViolenceType)
  nameWithType: Scavenger.TryThrow(BodyChunk, ScavengerAI.ViolenceType)
  fullName: Scavenger.TryThrow(BodyChunk, ScavengerAI.ViolenceType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TryThrow(BodyChunk aimChunk, ScavengerAI.ViolenceType violenceType)
    parameters:
    - id: aimChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aimChunk</parameter>
            <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)</parameter>
          </include>
        </markup>
    - id: violenceType
      type: Global.ScavengerAI.ViolenceType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>violenceType</parameter>
            <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType)</parameter>
          </include>
        </markup>
    content.vb: Public Sub TryThrow(aimChunk As BodyChunk, violenceType As ScavengerAI.ViolenceType)
  overload: Global.Scavenger.TryThrow*
- uid: Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})
  commentId: M:Global.Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})
  id: TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: TryThrow(BodyChunk, ViolenceType, Vector2?)
  nameWithType: Scavenger.TryThrow(BodyChunk, ScavengerAI.ViolenceType, Vector2?)
  fullName: Scavenger.TryThrow(BodyChunk, ScavengerAI.ViolenceType, UnityEngine.Vector2?)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TryThrow(BodyChunk aimChunk, ScavengerAI.ViolenceType violenceType, Vector2? aimPosition)
    parameters:
    - id: aimChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aimChunk</parameter>
            <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: violenceType
      type: Global.ScavengerAI.ViolenceType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>violenceType</parameter>
            <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    - id: aimPosition
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aimPosition</parameter>
            <parameter>M:Scavenger.TryThrow(BodyChunk,ScavengerAI.ViolenceType,System.Nullable{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    content.vb: Public Sub TryThrow(aimChunk As BodyChunk, violenceType As ScavengerAI.ViolenceType, aimPosition As Vector2?)
  overload: Global.Scavenger.TryThrow*
- uid: Global.Scavenger.Throw(UnityEngine.Vector2)
  commentId: M:Global.Scavenger.Throw(UnityEngine.Vector2)
  id: Throw(UnityEngine.Vector2)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Throw(Vector2)
  nameWithType: Scavenger.Throw(Vector2)
  fullName: Scavenger.Throw(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.Throw(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Throw(Vector2 throwDir)
    parameters:
    - id: throwDir
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>throwDir</parameter>
            <parameter>M:Scavenger.Throw(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub [Throw](throwDir As Vector2)
  overload: Global.Scavenger.Throw*
- uid: Global.Scavenger.MeleeGetFree(Creature,System.Boolean)
  commentId: M:Global.Scavenger.MeleeGetFree(Creature,System.Boolean)
  id: MeleeGetFree(Creature,System.Boolean)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: MeleeGetFree(Creature, bool)
  nameWithType: Scavenger.MeleeGetFree(Creature, bool)
  fullName: Scavenger.MeleeGetFree(Creature, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.MeleeGetFree(Creature,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MeleeGetFree(Creature target, bool eu)
    parameters:
    - id: target
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:Scavenger.MeleeGetFree(Creature,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Scavenger.MeleeGetFree(Creature,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MeleeGetFree(target As Creature, eu As Boolean)
  overload: Global.Scavenger.MeleeGetFree*
  nameWithType.vb: Scavenger.MeleeGetFree(Creature, Boolean)
  fullName.vb: Scavenger.MeleeGetFree(Creature, Boolean)
  name.vb: MeleeGetFree(Creature, Boolean)
- uid: Global.Scavenger.FlyingWeapon(Weapon)
  commentId: M:Global.Scavenger.FlyingWeapon(Weapon)
  id: FlyingWeapon(Weapon)
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: FlyingWeapon(Weapon)
  nameWithType: Scavenger.FlyingWeapon(Weapon)
  fullName: Scavenger.FlyingWeapon(Weapon)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Scavenger.FlyingWeapon(Weapon)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FlyingWeapon(Weapon weapon)
    parameters:
    - id: weapon
      type: Global.Weapon
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>weapon</parameter>
            <parameter>M:Scavenger.FlyingWeapon(Weapon)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FlyingWeapon(weapon As Weapon)
  overload: Global.Scavenger.FlyingWeapon*
  implements:
  - Global.Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
- uid: Global.Scavenger.JoinedLookPoint
  commentId: P:Global.Scavenger.JoinedLookPoint
  id: JoinedLookPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: JoinedLookPoint
  nameWithType: Scavenger.JoinedLookPoint
  fullName: Scavenger.JoinedLookPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.JoinedLookPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 JoinedLookPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property JoinedLookPoint As Vector2
  overload: Global.Scavenger.JoinedLookPoint*
- uid: Global.Scavenger.HeadLookDir
  commentId: P:Global.Scavenger.HeadLookDir
  id: HeadLookDir
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: HeadLookDir
  nameWithType: Scavenger.HeadLookDir
  fullName: Scavenger.HeadLookDir
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.HeadLookDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 HeadLookDir { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property HeadLookDir As Vector2
  overload: Global.Scavenger.HeadLookDir*
- uid: Global.Scavenger.Rummaging
  commentId: P:Global.Scavenger.Rummaging
  id: Rummaging
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Rummaging
  nameWithType: Scavenger.Rummaging
  fullName: Scavenger.Rummaging
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Rummaging</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Rummaging { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Rummaging As Boolean
  overload: Global.Scavenger.Rummaging*
- uid: Global.Scavenger.Pointing
  commentId: P:Global.Scavenger.Pointing
  id: Pointing
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Pointing
  nameWithType: Scavenger.Pointing
  fullName: Scavenger.Pointing
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Pointing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Pointing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Pointing As Boolean
  overload: Global.Scavenger.Pointing*
- uid: Global.Scavenger.Communicating
  commentId: P:Global.Scavenger.Communicating
  id: Communicating
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Communicating
  nameWithType: Scavenger.Communicating
  fullName: Scavenger.Communicating
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Communicating</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Communicating { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Communicating As Boolean
  overload: Global.Scavenger.Communicating*
- uid: Global.Scavenger.Charging
  commentId: P:Global.Scavenger.Charging
  id: Charging
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Charging
  nameWithType: Scavenger.Charging
  fullName: Scavenger.Charging
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Charging</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Charging { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Charging As Boolean
  overload: Global.Scavenger.Charging*
- uid: Global.Scavenger.CommitedToMoveIsDrop
  commentId: P:Global.Scavenger.CommitedToMoveIsDrop
  id: CommitedToMoveIsDrop
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: CommitedToMoveIsDrop
  nameWithType: Scavenger.CommitedToMoveIsDrop
  fullName: Scavenger.CommitedToMoveIsDrop
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.CommitedToMoveIsDrop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CommitedToMoveIsDrop { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CommitedToMoveIsDrop As Boolean
  overload: Global.Scavenger.CommitedToMoveIsDrop*
- uid: Global.Scavenger.LittleStuck
  commentId: P:Global.Scavenger.LittleStuck
  id: LittleStuck
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: LittleStuck
  nameWithType: Scavenger.LittleStuck
  fullName: Scavenger.LittleStuck
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.LittleStuck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LittleStuck { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property LittleStuck As Single
  overload: Global.Scavenger.LittleStuck*
- uid: Global.Scavenger.ReallyStuck
  commentId: P:Global.Scavenger.ReallyStuck
  id: ReallyStuck
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: ReallyStuck
  nameWithType: Scavenger.ReallyStuck
  fullName: Scavenger.ReallyStuck
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.ReallyStuck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ReallyStuck { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ReallyStuck As Single
  overload: Global.Scavenger.ReallyStuck*
- uid: Global.Scavenger.NextTile
  commentId: P:Global.Scavenger.NextTile
  id: NextTile
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: NextTile
  nameWithType: Scavenger.NextTile
  fullName: Scavenger.NextTile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.NextTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 NextTile { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property NextTile As IntVector2
  overload: Global.Scavenger.NextTile*
- uid: Global.Scavenger.VisionPoint
  commentId: P:Global.Scavenger.VisionPoint
  id: VisionPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: VisionPoint
  nameWithType: Scavenger.VisionPoint
  fullName: Scavenger.VisionPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.VisionPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override Vector2 VisionPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides ReadOnly Property VisionPoint As Vector2
  overridden: Global.Creature.VisionPoint
  overload: Global.Scavenger.VisionPoint*
- uid: Global.Scavenger.Injured
  commentId: P:Global.Scavenger.Injured
  id: Injured
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Injured
  nameWithType: Scavenger.Injured
  fullName: Scavenger.Injured
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Injured</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Injured { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Injured As Single
  overload: Global.Scavenger.Injured*
- uid: Global.Scavenger.MovementSpeed
  commentId: P:Global.Scavenger.MovementSpeed
  id: MovementSpeed
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: MovementSpeed
  nameWithType: Scavenger.MovementSpeed
  fullName: Scavenger.MovementSpeed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.MovementSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float MovementSpeed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property MovementSpeed As Single
  overload: Global.Scavenger.MovementSpeed*
- uid: Global.Scavenger.HeadLookPoint
  commentId: P:Global.Scavenger.HeadLookPoint
  id: HeadLookPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: HeadLookPoint
  nameWithType: Scavenger.HeadLookPoint
  fullName: Scavenger.HeadLookPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.HeadLookPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 HeadLookPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property HeadLookPoint As Vector2
  overload: Global.Scavenger.HeadLookPoint*
- uid: Global.Scavenger.EyesLookPoint
  commentId: P:Global.Scavenger.EyesLookPoint
  id: EyesLookPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: EyesLookPoint
  nameWithType: Scavenger.EyesLookPoint
  fullName: Scavenger.EyesLookPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.EyesLookPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 EyesLookPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property EyesLookPoint As Vector2
  overload: Global.Scavenger.EyesLookPoint*
- uid: Global.Scavenger.Elite
  commentId: P:Global.Scavenger.Elite
  id: Elite
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Elite
  nameWithType: Scavenger.Elite
  fullName: Scavenger.Elite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Elite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Elite { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Elite As Boolean
  overload: Global.Scavenger.Elite*
- uid: Global.Scavenger.King
  commentId: P:Global.Scavenger.King
  id: King
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: King
  nameWithType: Scavenger.King
  fullName: Scavenger.King
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.King</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool King { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property King As Boolean
  overload: Global.Scavenger.King*
- uid: Global.Scavenger.AllowIdleMoves
  commentId: P:Global.Scavenger.AllowIdleMoves
  id: AllowIdleMoves
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: AllowIdleMoves
  nameWithType: Scavenger.AllowIdleMoves
  fullName: Scavenger.AllowIdleMoves
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.AllowIdleMoves</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AllowIdleMoves { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllowIdleMoves As Boolean
  overload: Global.Scavenger.AllowIdleMoves*
- uid: Global.Scavenger.IsControlPointing
  commentId: P:Global.Scavenger.IsControlPointing
  id: IsControlPointing
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: IsControlPointing
  nameWithType: Scavenger.IsControlPointing
  fullName: Scavenger.IsControlPointing
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.IsControlPointing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsControlPointing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsControlPointing As Boolean
  overload: Global.Scavenger.IsControlPointing*
- uid: Global.Scavenger.jumpToPoint
  commentId: P:Global.Scavenger.jumpToPoint
  id: jumpToPoint
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: jumpToPoint
  nameWithType: Scavenger.jumpToPoint
  fullName: Scavenger.jumpToPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.jumpToPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 jumpToPoint { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property jumpToPoint As Vector2
  overload: Global.Scavenger.jumpToPoint*
- uid: Global.Scavenger.InStandardRunMode
  commentId: P:Global.Scavenger.InStandardRunMode
  id: InStandardRunMode
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: InStandardRunMode
  nameWithType: Scavenger.InStandardRunMode
  fullName: Scavenger.InStandardRunMode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.InStandardRunMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InStandardRunMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InStandardRunMode As Boolean
  overload: Global.Scavenger.InStandardRunMode*
- uid: Global.Scavenger.NoRunBehavior
  commentId: P:Global.Scavenger.NoRunBehavior
  id: NoRunBehavior
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: NoRunBehavior
  nameWithType: Scavenger.NoRunBehavior
  fullName: Scavenger.NoRunBehavior
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.NoRunBehavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool NoRunBehavior { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NoRunBehavior As Boolean
  overload: Global.Scavenger.NoRunBehavior*
- uid: Global.Scavenger.Templar
  commentId: P:Global.Scavenger.Templar
  id: Templar
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Templar
  nameWithType: Scavenger.Templar
  fullName: Scavenger.Templar
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Templar</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Templar { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Templar As Boolean
  overload: Global.Scavenger.Templar*
- uid: Global.Scavenger.Disciple
  commentId: P:Global.Scavenger.Disciple
  id: Disciple
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: Disciple
  nameWithType: Scavenger.Disciple
  fullName: Scavenger.Disciple
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.Disciple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Disciple { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Disciple As Boolean
  overload: Global.Scavenger.Disciple*
- uid: Global.Scavenger.KarmicArmorProtected
  commentId: P:Global.Scavenger.KarmicArmorProtected
  id: KarmicArmorProtected
  parent: Global.Scavenger
  langs:
  - csharp
  - vb
  name: KarmicArmorProtected
  nameWithType: Scavenger.KarmicArmorProtected
  fullName: Scavenger.KarmicArmorProtected
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Scavenger.KarmicArmorProtected</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool KarmicArmorProtected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property KarmicArmorProtected As Boolean
  overload: Global.Scavenger.KarmicArmorProtected*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.AirBreatherCreature
  commentId: T:Global.AirBreatherCreature
  isExternal: true
  href: AirBreatherCreature.html
  name: AirBreatherCreature
  nameWithType: AirBreatherCreature
  fullName: AirBreatherCreature
- uid: Global.ILookingAtCreatures
  commentId: T:Global.ILookingAtCreatures
  isExternal: true
  href: ILookingAtCreatures.html
  name: ILookingAtCreatures
  nameWithType: ILookingAtCreatures
  fullName: ILookingAtCreatures
- uid: Global.Weapon.INotifyOfFlyingWeapons
  commentId: T:Global.Weapon.INotifyOfFlyingWeapons
  isExternal: true
  href: Weapon.html
  name: Weapon.INotifyOfFlyingWeapons
  nameWithType: Weapon.INotifyOfFlyingWeapons
  fullName: Weapon.INotifyOfFlyingWeapons
  spec.csharp:
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: .
  - uid: Global.Weapon.INotifyOfFlyingWeapons
    name: INotifyOfFlyingWeapons
    isExternal: true
    href: Weapon.INotifyOfFlyingWeapons.html
  spec.vb:
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: .
  - uid: Global.Weapon.INotifyOfFlyingWeapons
    name: INotifyOfFlyingWeapons
    isExternal: true
    href: Weapon.INotifyOfFlyingWeapons.html
- uid: Global.AirBreatherCreature.lungs
  commentId: F:Global.AirBreatherCreature.lungs
  parent: Global.AirBreatherCreature
  isExternal: true
  href: Global.AirBreatherCreature.html#AirBreatherCreature_lungs
  name: lungs
  nameWithType: AirBreatherCreature.lungs
  fullName: AirBreatherCreature.lungs
- uid: Global.Creature.blind
  commentId: F:Global.Creature.blind
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_blind
  name: blind
  nameWithType: Creature.blind
  fullName: Creature.blind
- uid: Global.Creature.deaf
  commentId: F:Global.Creature.deaf
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_deaf
  name: deaf
  nameWithType: Creature.deaf
  fullName: Creature.deaf
- uid: Global.Creature.killTag
  commentId: F:Global.Creature.killTag
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_killTag
  name: killTag
  nameWithType: Creature.killTag
  fullName: Creature.killTag
- uid: Global.Creature.killTagCounter
  commentId: F:Global.Creature.killTagCounter
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_killTagCounter
  name: killTagCounter
  nameWithType: Creature.killTagCounter
  fullName: Creature.killTagCounter
- uid: Global.Creature.leechedOut
  commentId: F:Global.Creature.leechedOut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_leechedOut
  name: leechedOut
  nameWithType: Creature.leechedOut
  fullName: Creature.leechedOut
- uid: Global.Creature.newToRoomInvinsibility
  commentId: F:Global.Creature.newToRoomInvinsibility
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_newToRoomInvinsibility
  name: newToRoomInvinsibility
  nameWithType: Creature.newToRoomInvinsibility
  fullName: Creature.newToRoomInvinsibility
- uid: Global.Creature.rainDeath
  commentId: F:Global.Creature.rainDeath
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_rainDeath
  name: rainDeath
  nameWithType: Creature.rainDeath
  fullName: Creature.rainDeath
- uid: Global.Creature.shortcutDelay
  commentId: F:Global.Creature.shortcutDelay
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_shortcutDelay
  name: shortcutDelay
  nameWithType: Creature.shortcutDelay
  fullName: Creature.shortcutDelay
- uid: Global.Creature.enteringShortCut
  commentId: F:Global.Creature.enteringShortCut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_enteringShortCut
  name: enteringShortCut
  nameWithType: Creature.enteringShortCut
  fullName: Creature.enteringShortCut
- uid: Global.Creature.NPCTransportationDestination
  commentId: F:Global.Creature.NPCTransportationDestination
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NPCTransportationDestination
  name: NPCTransportationDestination
  nameWithType: Creature.NPCTransportationDestination
  fullName: Creature.NPCTransportationDestination
- uid: Global.Creature.lastCoord
  commentId: F:Global.Creature.lastCoord
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastCoord
  name: lastCoord
  nameWithType: Creature.lastCoord
  fullName: Creature.lastCoord
- uid: Global.Creature.lavaContact
  commentId: F:Global.Creature.lavaContact
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lavaContact
  name: lavaContact
  nameWithType: Creature.lavaContact
  fullName: Creature.lavaContact
- uid: Global.Creature.lavaContactCount
  commentId: F:Global.Creature.lavaContactCount
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lavaContactCount
  name: lavaContactCount
  nameWithType: Creature.lavaContactCount
  fullName: Creature.lavaContactCount
- uid: Global.Creature.rippleTransferCooldown
  commentId: F:Global.Creature.rippleTransferCooldown
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_rippleTransferCooldown
  name: rippleTransferCooldown
  nameWithType: Creature.rippleTransferCooldown
  fullName: Creature.rippleTransferCooldown
- uid: Global.Creature.repelLocusts
  commentId: F:Global.Creature.repelLocusts
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_repelLocusts
  name: repelLocusts
  nameWithType: Creature.repelLocusts
  fullName: Creature.repelLocusts
- uid: Global.Creature.muddy
  commentId: F:Global.Creature.muddy
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_muddy
  name: muddy
  nameWithType: Creature.muddy
  fullName: Creature.muddy
- uid: Global.Creature.mudColor
  commentId: F:Global.Creature.mudColor
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mudColor
  name: mudColor
  nameWithType: Creature.mudColor
  fullName: Creature.mudColor
- uid: Global.Creature.injectedPoison
  commentId: F:Global.Creature.injectedPoison
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_injectedPoison
  name: injectedPoison
  nameWithType: Creature.injectedPoison
  fullName: Creature.injectedPoison
- uid: Global.Creature.GrabbedByDaddyCorruption
  commentId: F:Global.Creature.GrabbedByDaddyCorruption
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_GrabbedByDaddyCorruption
  name: GrabbedByDaddyCorruption
  nameWithType: Creature.GrabbedByDaddyCorruption
  fullName: Creature.GrabbedByDaddyCorruption
- uid: Global.Creature.stunDamageType
  commentId: F:Global.Creature.stunDamageType
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_stunDamageType
  name: stunDamageType
  nameWithType: Creature.stunDamageType
  fullName: Creature.stunDamageType
- uid: Global.Creature.HypothermiaGain
  commentId: F:Global.Creature.HypothermiaGain
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaGain
  name: HypothermiaGain
  nameWithType: Creature.HypothermiaGain
  fullName: Creature.HypothermiaGain
- uid: Global.Creature.HypothermiaExposure
  commentId: F:Global.Creature.HypothermiaExposure
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaExposure
  name: HypothermiaExposure
  nameWithType: Creature.HypothermiaExposure
  fullName: Creature.HypothermiaExposure
- uid: Global.Creature.inputWithoutDiagonals
  commentId: F:Global.Creature.inputWithoutDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inputWithoutDiagonals
  name: inputWithoutDiagonals
  nameWithType: Creature.inputWithoutDiagonals
  fullName: Creature.inputWithoutDiagonals
- uid: Global.Creature.lastInputWithoutDiagonals
  commentId: F:Global.Creature.lastInputWithoutDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastInputWithoutDiagonals
  name: lastInputWithoutDiagonals
  nameWithType: Creature.lastInputWithoutDiagonals
  fullName: Creature.lastInputWithoutDiagonals
- uid: Global.Creature.inputWithDiagonals
  commentId: F:Global.Creature.inputWithDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inputWithDiagonals
  name: inputWithDiagonals
  nameWithType: Creature.inputWithDiagonals
  fullName: Creature.inputWithDiagonals
- uid: Global.Creature.lastInputWithDiagonals
  commentId: F:Global.Creature.lastInputWithDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastInputWithDiagonals
  name: lastInputWithDiagonals
  nameWithType: Creature.lastInputWithDiagonals
  fullName: Creature.lastInputWithDiagonals
- uid: Global.Creature.freezeControls
  commentId: F:Global.Creature.freezeControls
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_freezeControls
  name: freezeControls
  nameWithType: Creature.freezeControls
  fullName: Creature.freezeControls
- uid: Global.Creature.protectDeathRecursionFlag
  commentId: F:Global.Creature.protectDeathRecursionFlag
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_protectDeathRecursionFlag
  name: protectDeathRecursionFlag
  nameWithType: Creature.protectDeathRecursionFlag
  fullName: Creature.protectDeathRecursionFlag
- uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  commentId: M:Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  name: InjectPoison(float, Color)
  nameWithType: Creature.InjectPoison(float, Color)
  fullName: Creature.InjectPoison(float, UnityEngine.Color)
  nameWithType.vb: Creature.InjectPoison(Single, Color)
  fullName.vb: Creature.InjectPoison(Single, UnityEngine.Color)
  name.vb: InjectPoison(Single, Color)
  spec.csharp:
  - uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
    name: InjectPoison
    isExternal: true
    href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
    name: InjectPoison
    isExternal: true
    href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  commentId: M:Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  name: AddMud(int, int, Color)
  nameWithType: Creature.AddMud(int, int, Color)
  fullName: Creature.AddMud(int, int, UnityEngine.Color)
  nameWithType.vb: Creature.AddMud(Integer, Integer, Color)
  fullName.vb: Creature.AddMud(Integer, Integer, UnityEngine.Color)
  name.vb: AddMud(Integer, Integer, Color)
  spec.csharp:
  - uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
    name: AddMud
    isExternal: true
    href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
    name: AddMud
    isExternal: true
    href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Creature.RippleViolenceCheck(BodyChunk)
  commentId: M:Global.Creature.RippleViolenceCheck(BodyChunk)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  name: RippleViolenceCheck(BodyChunk)
  nameWithType: Creature.RippleViolenceCheck(BodyChunk)
  fullName: Creature.RippleViolenceCheck(BodyChunk)
  spec.csharp:
  - uid: Global.Creature.RippleViolenceCheck(BodyChunk)
    name: RippleViolenceCheck
    isExternal: true
    href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
  spec.vb:
  - uid: Global.Creature.RippleViolenceCheck(BodyChunk)
    name: RippleViolenceCheck
    isExternal: true
    href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
- uid: Global.Creature.SetKillTag(AbstractCreature)
  commentId: M:Global.Creature.SetKillTag(AbstractCreature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  name: SetKillTag(AbstractCreature)
  nameWithType: Creature.SetKillTag(AbstractCreature)
  fullName: Creature.SetKillTag(AbstractCreature)
  spec.csharp:
  - uid: Global.Creature.SetKillTag(AbstractCreature)
    name: SetKillTag
    isExternal: true
    href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.SetKillTag(AbstractCreature)
    name: SetKillTag
    isExternal: true
    href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.Creature.Blind(System.Int32)
  commentId: M:Global.Creature.Blind(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Blind_System_Int32_
  name: Blind(int)
  nameWithType: Creature.Blind(int)
  fullName: Creature.Blind(int)
  nameWithType.vb: Creature.Blind(Integer)
  fullName.vb: Creature.Blind(Integer)
  name.vb: Blind(Integer)
  spec.csharp:
  - uid: Global.Creature.Blind(System.Int32)
    name: Blind
    isExternal: true
    href: Global.Creature.html#Creature_Blind_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Blind(System.Int32)
    name: Blind
    isExternal: true
    href: Global.Creature.html#Creature_Blind_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.Deafen(System.Int32)
  commentId: M:Global.Creature.Deafen(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Deafen_System_Int32_
  name: Deafen(int)
  nameWithType: Creature.Deafen(int)
  fullName: Creature.Deafen(int)
  nameWithType.vb: Creature.Deafen(Integer)
  fullName.vb: Creature.Deafen(Integer)
  name.vb: Deafen(Integer)
  spec.csharp:
  - uid: Global.Creature.Deafen(System.Int32)
    name: Deafen
    isExternal: true
    href: Global.Creature.html#Creature_Deafen_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Deafen(System.Int32)
    name: Deafen
    isExternal: true
    href: Global.Creature.html#Creature_Deafen_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.Die
  commentId: M:Global.Creature.Die
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Die
  name: Die()
  nameWithType: Creature.Die()
  fullName: Creature.Die()
  spec.csharp:
  - uid: Global.Creature.Die
    name: Die
    isExternal: true
    href: Global.Creature.html#Creature_Die
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.Die
    name: Die
    isExternal: true
    href: Global.Creature.html#Creature_Die
  - name: (
  - name: )
- uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  commentId: M:Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  name: FlyIntoRoom(WorldCoordinate, Room)
  nameWithType: Creature.FlyIntoRoom(WorldCoordinate, Room)
  fullName: Creature.FlyIntoRoom(WorldCoordinate, Room)
  spec.csharp:
  - uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
    name: FlyIntoRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
    name: FlyIntoRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
  commentId: M:Global.Creature.FlyAwayFromRoom(System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  name: FlyAwayFromRoom(bool)
  nameWithType: Creature.FlyAwayFromRoom(bool)
  fullName: Creature.FlyAwayFromRoom(bool)
  nameWithType.vb: Creature.FlyAwayFromRoom(Boolean)
  fullName.vb: Creature.FlyAwayFromRoom(Boolean)
  name.vb: FlyAwayFromRoom(Boolean)
  spec.csharp:
  - uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
    name: FlyAwayFromRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
    name: FlyAwayFromRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Creature.Abstractize
  commentId: M:Global.Creature.Abstractize
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Abstractize
  name: Abstractize()
  nameWithType: Creature.Abstractize()
  fullName: Creature.Abstractize()
  spec.csharp:
  - uid: Global.Creature.Abstractize
    name: Abstractize
    isExternal: true
    href: Global.Creature.html#Creature_Abstractize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.Abstractize
    name: Abstractize
    isExternal: true
    href: Global.Creature.html#Creature_Abstractize
  - name: (
  - name: )
- uid: Global.Creature.LoseAllGrasps
  commentId: M:Global.Creature.LoseAllGrasps
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_LoseAllGrasps
  name: LoseAllGrasps()
  nameWithType: Creature.LoseAllGrasps()
  fullName: Creature.LoseAllGrasps()
  spec.csharp:
  - uid: Global.Creature.LoseAllGrasps
    name: LoseAllGrasps
    isExternal: true
    href: Global.Creature.html#Creature_LoseAllGrasps
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.LoseAllGrasps
    name: LoseAllGrasps
    isExternal: true
    href: Global.Creature.html#Creature_LoseAllGrasps
  - name: (
  - name: )
- uid: Global.Creature.BodyPartByIndex(System.Int32)
  commentId: M:Global.Creature.BodyPartByIndex(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  name: BodyPartByIndex(int)
  nameWithType: Creature.BodyPartByIndex(int)
  fullName: Creature.BodyPartByIndex(int)
  nameWithType.vb: Creature.BodyPartByIndex(Integer)
  fullName.vb: Creature.BodyPartByIndex(Integer)
  name.vb: BodyPartByIndex(Integer)
  spec.csharp:
  - uid: Global.Creature.BodyPartByIndex(System.Int32)
    name: BodyPartByIndex
    isExternal: true
    href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.BodyPartByIndex(System.Int32)
    name: BodyPartByIndex
    isExternal: true
    href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  commentId: M:Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  name: SwitchGrasps(int, int)
  nameWithType: Creature.SwitchGrasps(int, int)
  fullName: Creature.SwitchGrasps(int, int)
  nameWithType.vb: Creature.SwitchGrasps(Integer, Integer)
  fullName.vb: Creature.SwitchGrasps(Integer, Integer)
  name.vb: SwitchGrasps(Integer, Integer)
  spec.csharp:
  - uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
    name: SwitchGrasps
    isExternal: true
    href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
    name: SwitchGrasps
    isExternal: true
    href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.UpdateGraspIndexes
  commentId: M:Global.Creature.UpdateGraspIndexes
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_UpdateGraspIndexes
  name: UpdateGraspIndexes()
  nameWithType: Creature.UpdateGraspIndexes()
  fullName: Creature.UpdateGraspIndexes()
  spec.csharp:
  - uid: Global.Creature.UpdateGraspIndexes
    name: UpdateGraspIndexes
    isExternal: true
    href: Global.Creature.html#Creature_UpdateGraspIndexes
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.UpdateGraspIndexes
    name: UpdateGraspIndexes
    isExternal: true
    href: Global.Creature.html#Creature_UpdateGraspIndexes
  - name: (
  - name: )
- uid: Global.Creature.CanBeGrabbed(Creature)
  commentId: M:Global.Creature.CanBeGrabbed(Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  name: CanBeGrabbed(Creature)
  nameWithType: Creature.CanBeGrabbed(Creature)
  fullName: Creature.CanBeGrabbed(Creature)
  spec.csharp:
  - uid: Global.Creature.CanBeGrabbed(Creature)
    name: CanBeGrabbed
    isExternal: true
    href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.CanBeGrabbed(Creature)
    name: CanBeGrabbed
    isExternal: true
    href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  name: PushOutOf(Vector2, float, int)
  nameWithType: Creature.PushOutOf(Vector2, float, int)
  fullName: Creature.PushOutOf(UnityEngine.Vector2, float, int)
  nameWithType.vb: Creature.PushOutOf(Vector2, Single, Integer)
  fullName.vb: Creature.PushOutOf(UnityEngine.Vector2, Single, Integer)
  name.vb: PushOutOf(Vector2, Single, Integer)
  spec.csharp:
  - uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.HeardNoise(Noise.InGameNoise)
  commentId: M:Global.Creature.HeardNoise(Noise.InGameNoise)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  name: HeardNoise(InGameNoise)
  nameWithType: Creature.HeardNoise(InGameNoise)
  fullName: Creature.HeardNoise(Noise.InGameNoise)
  spec.csharp:
  - uid: Global.Creature.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
  spec.vb:
  - uid: Global.Creature.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: Global.Creature.ToString
  commentId: M:Global.Creature.ToString
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ToString
  name: ToString()
  nameWithType: Creature.ToString()
  fullName: Creature.ToString()
  spec.csharp:
  - uid: Global.Creature.ToString
    name: ToString
    isExternal: true
    href: Global.Creature.html#Creature_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.ToString
    name: ToString
    isExternal: true
    href: Global.Creature.html#Creature_ToString
  - name: (
  - name: )
- uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  commentId: M:Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  name: ReleaseDoorForbiddenCreatures(bool, bool)
  nameWithType: Creature.ReleaseDoorForbiddenCreatures(bool, bool)
  fullName: Creature.ReleaseDoorForbiddenCreatures(bool, bool)
  nameWithType.vb: Creature.ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  fullName.vb: Creature.ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  name.vb: ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  spec.csharp:
  - uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
    name: ReleaseDoorForbiddenCreatures
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
    name: ReleaseDoorForbiddenCreatures
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  commentId: M:Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  name: AllowableControlledAIOverride(MovementType)
  nameWithType: Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  fullName: Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  spec.csharp:
  - uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
    name: AllowableControlledAIOverride
    isExternal: true
    href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  - name: (
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  - name: )
  spec.vb:
  - uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
    name: AllowableControlledAIOverride
    isExternal: true
    href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  - name: (
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  - name: )
- uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  commentId: M:Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  name: HypothermiaBodyContactWarmup(Creature, Creature)
  nameWithType: Creature.HypothermiaBodyContactWarmup(Creature, Creature)
  fullName: Creature.HypothermiaBodyContactWarmup(Creature, Creature)
  spec.csharp:
  - uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
    name: HypothermiaBodyContactWarmup
    isExternal: true
    href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
    name: HypothermiaBodyContactWarmup
    isExternal: true
    href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature.SafariControlInputUpdate(System.Int32)
  commentId: M:Global.Creature.SafariControlInputUpdate(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  name: SafariControlInputUpdate(int)
  nameWithType: Creature.SafariControlInputUpdate(int)
  fullName: Creature.SafariControlInputUpdate(int)
  nameWithType.vb: Creature.SafariControlInputUpdate(Integer)
  fullName.vb: Creature.SafariControlInputUpdate(Integer)
  name.vb: SafariControlInputUpdate(Integer)
  spec.csharp:
  - uid: Global.Creature.SafariControlInputUpdate(System.Int32)
    name: SafariControlInputUpdate
    isExternal: true
    href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.SafariControlInputUpdate(System.Int32)
    name: SafariControlInputUpdate
    isExternal: true
    href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.stun
  commentId: P:Global.Creature.stun
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_stun
  name: stun
  nameWithType: Creature.stun
  fullName: Creature.stun
- uid: Global.Creature.Stunned
  commentId: P:Global.Creature.Stunned
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Stunned
  name: Stunned
  nameWithType: Creature.Stunned
  fullName: Creature.Stunned
- uid: Global.Creature.Blinded
  commentId: P:Global.Creature.Blinded
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Blinded
  name: Blinded
  nameWithType: Creature.Blinded
  fullName: Creature.Blinded
- uid: Global.Creature.Deaf
  commentId: P:Global.Creature.Deaf
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Deaf
  name: Deaf
  nameWithType: Creature.Deaf
  fullName: Creature.Deaf
- uid: Global.Creature.mainBodyChunkIndex
  commentId: P:Global.Creature.mainBodyChunkIndex
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mainBodyChunkIndex
  name: mainBodyChunkIndex
  nameWithType: Creature.mainBodyChunkIndex
  fullName: Creature.mainBodyChunkIndex
- uid: Global.Creature.mainBodyChunk
  commentId: P:Global.Creature.mainBodyChunk
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mainBodyChunk
  name: mainBodyChunk
  nameWithType: Creature.mainBodyChunk
  fullName: Creature.mainBodyChunk
- uid: Global.Creature.dead
  commentId: P:Global.Creature.dead
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_dead
  name: dead
  nameWithType: Creature.dead
  fullName: Creature.dead
- uid: Global.Creature.Consious
  commentId: P:Global.Creature.Consious
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Consious
  name: Consious
  nameWithType: Creature.Consious
  fullName: Creature.Consious
- uid: Global.Creature.inShortcut
  commentId: P:Global.Creature.inShortcut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inShortcut
  name: inShortcut
  nameWithType: Creature.inShortcut
  fullName: Creature.inShortcut
- uid: Global.Creature.grasps
  commentId: P:Global.Creature.grasps
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_grasps
  name: grasps
  nameWithType: Creature.grasps
  fullName: Creature.grasps
- uid: Global.Creature.DangerPos
  commentId: P:Global.Creature.DangerPos
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_DangerPos
  name: DangerPos
  nameWithType: Creature.DangerPos
  fullName: Creature.DangerPos
- uid: Global.Creature.abstractCreature
  commentId: P:Global.Creature.abstractCreature
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_abstractCreature
  name: abstractCreature
  nameWithType: Creature.abstractCreature
  fullName: Creature.abstractCreature
- uid: Global.Creature.Template
  commentId: P:Global.Creature.Template
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Template
  name: Template
  nameWithType: Creature.Template
  fullName: Creature.Template
- uid: Global.Creature.State
  commentId: P:Global.Creature.State
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_State
  name: State
  nameWithType: Creature.State
  fullName: Creature.State
- uid: Global.Creature.coord
  commentId: P:Global.Creature.coord
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_coord
  name: coord
  nameWithType: Creature.coord
  fullName: Creature.coord
- uid: Global.Creature.safariControlled
  commentId: P:Global.Creature.safariControlled
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_safariControlled
  name: safariControlled
  nameWithType: Creature.safariControlled
  fullName: Creature.safariControlled
- uid: Global.Creature.Hypothermia
  commentId: P:Global.Creature.Hypothermia
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Hypothermia
  name: Hypothermia
  nameWithType: Creature.Hypothermia
  fullName: Creature.Hypothermia
- uid: Global.Creature.WormGrassGooduckyImmune
  commentId: P:Global.Creature.WormGrassGooduckyImmune
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_WormGrassGooduckyImmune
  name: WormGrassGooduckyImmune
  nameWithType: Creature.WormGrassGooduckyImmune
  fullName: Creature.WormGrassGooduckyImmune
- uid: Global.PhysicalObject.bodyChunkConnections
  commentId: F:Global.PhysicalObject.bodyChunkConnections
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunkConnections
  name: bodyChunkConnections
  nameWithType: PhysicalObject.bodyChunkConnections
  fullName: PhysicalObject.bodyChunkConnections
- uid: Global.PhysicalObject.grabbedBy
  commentId: F:Global.PhysicalObject.grabbedBy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_grabbedBy
  name: grabbedBy
  nameWithType: PhysicalObject.grabbedBy
  fullName: PhysicalObject.grabbedBy
- uid: Global.PhysicalObject.collisionRange
  commentId: F:Global.PhysicalObject.collisionRange
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionRange
  name: collisionRange
  nameWithType: PhysicalObject.collisionRange
  fullName: PhysicalObject.collisionRange
- uid: Global.PhysicalObject.collisionLayer
  commentId: F:Global.PhysicalObject.collisionLayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionLayer
  name: collisionLayer
  nameWithType: PhysicalObject.collisionLayer
  fullName: PhysicalObject.collisionLayer
- uid: Global.PhysicalObject.abstractPhysicalObject
  commentId: F:Global.PhysicalObject.abstractPhysicalObject
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_abstractPhysicalObject
  name: abstractPhysicalObject
  nameWithType: PhysicalObject.abstractPhysicalObject
  fullName: PhysicalObject.abstractPhysicalObject
- uid: Global.PhysicalObject.surfaceFriction
  commentId: F:Global.PhysicalObject.surfaceFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_surfaceFriction
  name: surfaceFriction
  nameWithType: PhysicalObject.surfaceFriction
  fullName: PhysicalObject.surfaceFriction
- uid: Global.PhysicalObject.bounce
  commentId: F:Global.PhysicalObject.bounce
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bounce
  name: bounce
  nameWithType: PhysicalObject.bounce
  fullName: PhysicalObject.bounce
- uid: Global.PhysicalObject.impactTreshhold
  commentId: F:Global.PhysicalObject.impactTreshhold
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_impactTreshhold
  name: impactTreshhold
  nameWithType: PhysicalObject.impactTreshhold
  fullName: PhysicalObject.impactTreshhold
- uid: Global.PhysicalObject.waterRetardationImmunity
  commentId: F:Global.PhysicalObject.waterRetardationImmunity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterRetardationImmunity
  name: waterRetardationImmunity
  nameWithType: PhysicalObject.waterRetardationImmunity
  fullName: PhysicalObject.waterRetardationImmunity
- uid: Global.PhysicalObject.burrowFriction
  commentId: F:Global.PhysicalObject.burrowFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_burrowFriction
  name: burrowFriction
  nameWithType: PhysicalObject.burrowFriction
  fullName: PhysicalObject.burrowFriction
- uid: Global.PhysicalObject.sticksRespawned
  commentId: F:Global.PhysicalObject.sticksRespawned
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_sticksRespawned
  name: sticksRespawned
  nameWithType: PhysicalObject.sticksRespawned
  fullName: PhysicalObject.sticksRespawned
- uid: Global.PhysicalObject.appendages
  commentId: F:Global.PhysicalObject.appendages
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_appendages
  name: appendages
  nameWithType: PhysicalObject.appendages
  fullName: PhysicalObject.appendages
- uid: Global.PhysicalObject.canBeHitByWeapons
  commentId: F:Global.PhysicalObject.canBeHitByWeapons
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_canBeHitByWeapons
  name: canBeHitByWeapons
  nameWithType: PhysicalObject.canBeHitByWeapons
  fullName: PhysicalObject.canBeHitByWeapons
- uid: Global.PhysicalObject.jollyBeingPointedCounter
  commentId: F:Global.PhysicalObject.jollyBeingPointedCounter
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_jollyBeingPointedCounter
  name: jollyBeingPointedCounter
  nameWithType: PhysicalObject.jollyBeingPointedCounter
  fullName: PhysicalObject.jollyBeingPointedCounter
- uid: Global.PhysicalObject.FirstChunk
  commentId: M:Global.PhysicalObject.FirstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  name: FirstChunk()
  nameWithType: PhysicalObject.FirstChunk()
  fullName: PhysicalObject.FirstChunk()
  spec.csharp:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
- uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  name: ChangeCollisionLayer(int)
  nameWithType: PhysicalObject.ChangeCollisionLayer(int)
  fullName: PhysicalObject.ChangeCollisionLayer(int)
  nameWithType.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  fullName.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  name.vb: ChangeCollisionLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  name: ChangeRippleLayer(int)
  nameWithType: PhysicalObject.ChangeRippleLayer(int)
  fullName: PhysicalObject.ChangeRippleLayer(int)
  nameWithType.vb: PhysicalObject.ChangeRippleLayer(Integer)
  fullName.vb: PhysicalObject.ChangeRippleLayer(Integer)
  name.vb: ChangeRippleLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.HitByWeapon(Weapon)
  commentId: M:Global.PhysicalObject.HitByWeapon(Weapon)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  name: HitByWeapon(Weapon)
  nameWithType: PhysicalObject.HitByWeapon(Weapon)
  fullName: PhysicalObject.HitByWeapon(Weapon)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
- uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  name: IsTileSolid(int, int, int)
  nameWithType: PhysicalObject.IsTileSolid(int, int, int)
  fullName: PhysicalObject.IsTileSolid(int, int, int)
  nameWithType.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  fullName.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  name.vb: IsTileSolid(Integer, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  commentId: M:Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  name: AllGraspsLetGoOfThisObject(bool)
  nameWithType: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  fullName: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  nameWithType.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  fullName.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  name.vb: AllGraspsLetGoOfThisObject(Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
  commentId: M:Global.PhysicalObject.Grabbed(Creature.Grasp)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  name: Grabbed(Grasp)
  nameWithType: PhysicalObject.Grabbed(Creature.Grasp)
  fullName: PhysicalObject.Grabbed(Creature.Grasp)
  spec.csharp:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
- uid: Global.PhysicalObject.RemoveGraphicsModule
  commentId: M:Global.PhysicalObject.RemoveGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  name: RemoveGraphicsModule()
  nameWithType: PhysicalObject.RemoveGraphicsModule()
  fullName: PhysicalObject.RemoveGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  commentId: M:Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  name: WeightedPush(int, int, Vector2, float)
  nameWithType: PhysicalObject.WeightedPush(int, int, Vector2, float)
  fullName: PhysicalObject.WeightedPush(int, int, UnityEngine.Vector2, float)
  nameWithType.vb: PhysicalObject.WeightedPush(Integer, Integer, Vector2, Single)
  fullName.vb: PhysicalObject.WeightedPush(Integer, Integer, UnityEngine.Vector2, Single)
  name.vb: WeightedPush(Integer, Integer, Vector2, Single)
  spec.csharp:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  commentId: M:Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  name: HitByExplosion(float, Explosion, int)
  nameWithType: PhysicalObject.HitByExplosion(float, Explosion, int)
  fullName: PhysicalObject.HitByExplosion(float, Explosion, int)
  nameWithType.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  fullName.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  name.vb: HitByExplosion(Single, Explosion, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.SetLocalGravity(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalGravity(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  name: SetLocalGravity(float)
  nameWithType: PhysicalObject.SetLocalGravity(float)
  fullName: PhysicalObject.SetLocalGravity(float)
  nameWithType.vb: PhysicalObject.SetLocalGravity(Single)
  fullName.vb: PhysicalObject.SetLocalGravity(Single)
  name.vb: SetLocalGravity(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.GetLocalGravity
  commentId: M:Global.PhysicalObject.GetLocalGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  name: GetLocalGravity()
  nameWithType: PhysicalObject.GetLocalGravity()
  fullName: PhysicalObject.GetLocalGravity()
  spec.csharp:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
- uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalAirFriction(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  name: SetLocalAirFriction(float)
  nameWithType: PhysicalObject.SetLocalAirFriction(float)
  fullName: PhysicalObject.SetLocalAirFriction(float)
  nameWithType.vb: PhysicalObject.SetLocalAirFriction(Single)
  fullName.vb: PhysicalObject.SetLocalAirFriction(Single)
  name.vb: SetLocalAirFriction(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.WeatherInertia
  commentId: M:Global.PhysicalObject.WeatherInertia
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  name: WeatherInertia()
  nameWithType: PhysicalObject.WeatherInertia()
  fullName: PhysicalObject.WeatherInertia()
  spec.csharp:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
- uid: Global.PhysicalObject.DisposeGraphicsModule
  commentId: M:Global.PhysicalObject.DisposeGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  name: DisposeGraphicsModule()
  nameWithType: PhysicalObject.DisposeGraphicsModule()
  fullName: PhysicalObject.DisposeGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.bodyChunks
  commentId: P:Global.PhysicalObject.bodyChunks
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunks
  name: bodyChunks
  nameWithType: PhysicalObject.bodyChunks
  fullName: PhysicalObject.bodyChunks
- uid: Global.PhysicalObject.graphicsModule
  commentId: P:Global.PhysicalObject.graphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_graphicsModule
  name: graphicsModule
  nameWithType: PhysicalObject.graphicsModule
  fullName: PhysicalObject.graphicsModule
- uid: Global.PhysicalObject.firstChunk
  commentId: P:Global.PhysicalObject.firstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_firstChunk
  name: firstChunk
  nameWithType: PhysicalObject.firstChunk
  fullName: PhysicalObject.firstChunk
- uid: Global.PhysicalObject.TotalMass
  commentId: P:Global.PhysicalObject.TotalMass
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TotalMass
  name: TotalMass
  nameWithType: PhysicalObject.TotalMass
  fullName: PhysicalObject.TotalMass
- uid: Global.PhysicalObject.RandomChunk
  commentId: P:Global.PhysicalObject.RandomChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RandomChunk
  name: RandomChunk
  nameWithType: PhysicalObject.RandomChunk
  fullName: PhysicalObject.RandomChunk
- uid: Global.PhysicalObject.gravity
  commentId: P:Global.PhysicalObject.gravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_gravity
  name: gravity
  nameWithType: PhysicalObject.gravity
  fullName: PhysicalObject.gravity
- uid: Global.PhysicalObject.airFriction
  commentId: P:Global.PhysicalObject.airFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_airFriction
  name: airFriction
  nameWithType: PhysicalObject.airFriction
  fullName: PhysicalObject.airFriction
- uid: Global.PhysicalObject.waterFriction
  commentId: P:Global.PhysicalObject.waterFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterFriction
  name: waterFriction
  nameWithType: PhysicalObject.waterFriction
  fullName: PhysicalObject.waterFriction
- uid: Global.PhysicalObject.buoyancy
  commentId: P:Global.PhysicalObject.buoyancy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_buoyancy
  name: buoyancy
  nameWithType: PhysicalObject.buoyancy
  fullName: PhysicalObject.buoyancy
- uid: Global.PhysicalObject.windAffectiveness
  commentId: P:Global.PhysicalObject.windAffectiveness
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_windAffectiveness
  name: windAffectiveness
  nameWithType: PhysicalObject.windAffectiveness
  fullName: PhysicalObject.windAffectiveness
- uid: Global.PhysicalObject.VisibilityBonus
  commentId: P:Global.PhysicalObject.VisibilityBonus
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_VisibilityBonus
  name: VisibilityBonus
  nameWithType: PhysicalObject.VisibilityBonus
  fullName: PhysicalObject.VisibilityBonus
- uid: Global.PhysicalObject.GoThroughFloors
  commentId: P:Global.PhysicalObject.GoThroughFloors
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GoThroughFloors
  name: GoThroughFloors
  nameWithType: PhysicalObject.GoThroughFloors
  fullName: PhysicalObject.GoThroughFloors
- uid: Global.PhysicalObject.CollideWithTerrain
  commentId: P:Global.PhysicalObject.CollideWithTerrain
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithTerrain
  name: CollideWithTerrain
  nameWithType: PhysicalObject.CollideWithTerrain
  fullName: PhysicalObject.CollideWithTerrain
- uid: Global.PhysicalObject.CollideWithSlopes
  commentId: P:Global.PhysicalObject.CollideWithSlopes
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithSlopes
  name: CollideWithSlopes
  nameWithType: PhysicalObject.CollideWithSlopes
  fullName: PhysicalObject.CollideWithSlopes
- uid: Global.PhysicalObject.CollideWithObjects
  commentId: P:Global.PhysicalObject.CollideWithObjects
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithObjects
  name: CollideWithObjects
  nameWithType: PhysicalObject.CollideWithObjects
  fullName: PhysicalObject.CollideWithObjects
- uid: Global.PhysicalObject.Buried
  commentId: P:Global.PhysicalObject.Buried
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Buried
  name: Buried
  nameWithType: PhysicalObject.Buried
  fullName: PhysicalObject.Buried
- uid: Global.PhysicalObject.WantsToBurrow
  commentId: P:Global.PhysicalObject.WantsToBurrow
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WantsToBurrow
  name: WantsToBurrow
  nameWithType: PhysicalObject.WantsToBurrow
  fullName: PhysicalObject.WantsToBurrow
- uid: Global.PhysicalObject.Submersion
  commentId: P:Global.PhysicalObject.Submersion
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Submersion
  name: Submersion
  nameWithType: PhysicalObject.Submersion
  fullName: PhysicalObject.Submersion
- uid: Global.PhysicalObject.SandstormImmune
  commentId: P:Global.PhysicalObject.SandstormImmune
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SandstormImmune
  name: SandstormImmune
  nameWithType: PhysicalObject.SandstormImmune
  fullName: PhysicalObject.SandstormImmune
- uid: Global.PhysicalObject.EffectiveRoomGravity
  commentId: P:Global.PhysicalObject.EffectiveRoomGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_EffectiveRoomGravity
  name: EffectiveRoomGravity
  nameWithType: PhysicalObject.EffectiveRoomGravity
  fullName: PhysicalObject.EffectiveRoomGravity
- uid: Global.PhysicalObject.LickedByPlayer
  commentId: P:Global.PhysicalObject.LickedByPlayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_LickedByPlayer
  name: LickedByPlayer
  nameWithType: PhysicalObject.LickedByPlayer
  fullName: PhysicalObject.LickedByPlayer
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ScavengerAI
  commentId: T:Global.ScavengerAI
  isExternal: true
  href: ScavengerAI.html
  name: ScavengerAI
  nameWithType: ScavengerAI
  fullName: ScavengerAI
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{MovementConnection}
  commentId: T:System.Collections.Generic.List{MovementConnection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MovementConnection>
  nameWithType: List<MovementConnection>
  fullName: System.Collections.Generic.List<MovementConnection>
  nameWithType.vb: List(Of MovementConnection)
  fullName.vb: System.Collections.Generic.List(Of MovementConnection)
  name.vb: List(Of MovementConnection)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: Global.Scavenger.ScavengerAnimation
  commentId: T:Global.Scavenger.ScavengerAnimation
  isExternal: true
  href: Scavenger.html
  name: Scavenger.ScavengerAnimation
  nameWithType: Scavenger.ScavengerAnimation
  fullName: Scavenger.ScavengerAnimation
  spec.csharp:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.ScavengerAnimation
    name: ScavengerAnimation
    isExternal: true
    href: Scavenger.ScavengerAnimation.html
  spec.vb:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.ScavengerAnimation
    name: ScavengerAnimation
    isExternal: true
    href: Scavenger.ScavengerAnimation.html
- uid: Global.Scavenger.MovementMode
  commentId: T:Global.Scavenger.MovementMode
  isExternal: true
  href: Scavenger.html
  name: Scavenger.MovementMode
  nameWithType: Scavenger.MovementMode
  fullName: Scavenger.MovementMode
  spec.csharp:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.MovementMode
    name: MovementMode
    isExternal: true
    href: Scavenger.MovementMode.html
  spec.vb:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.MovementMode
    name: MovementMode
    isExternal: true
    href: Scavenger.MovementMode.html
- uid: Global.CreatureLooker
  commentId: T:Global.CreatureLooker
  isExternal: true
  href: CreatureLooker.html
  name: CreatureLooker
  nameWithType: CreatureLooker
  fullName: CreatureLooker
- uid: System.Collections.Generic.List{Scavenger.JumpFinder}
  commentId: T:System.Collections.Generic.List{Scavenger.JumpFinder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Scavenger.JumpFinder>
  nameWithType: List<Scavenger.JumpFinder>
  fullName: System.Collections.Generic.List<Scavenger.JumpFinder>
  nameWithType.vb: List(Of Scavenger.JumpFinder)
  fullName.vb: System.Collections.Generic.List(Of Scavenger.JumpFinder)
  name.vb: List(Of Scavenger.JumpFinder)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.JumpFinder
    name: JumpFinder
    isExternal: true
    href: Scavenger.JumpFinder.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.JumpFinder
    name: JumpFinder
    isExternal: true
    href: Scavenger.JumpFinder.html
  - name: )
- uid: Global.Scavenger.JumpFinder
  commentId: T:Global.Scavenger.JumpFinder
  isExternal: true
  href: Scavenger.html
  name: Scavenger.JumpFinder
  nameWithType: Scavenger.JumpFinder
  fullName: Scavenger.JumpFinder
  spec.csharp:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.JumpFinder
    name: JumpFinder
    isExternal: true
    href: Scavenger.JumpFinder.html
  spec.vb:
  - uid: Global.Scavenger
    name: Scavenger
    isExternal: true
    href: Scavenger.html
  - name: .
  - uid: Global.Scavenger.JumpFinder
    name: JumpFinder
    isExternal: true
    href: Scavenger.JumpFinder.html
- uid: Global.PathFinder.PathingCell
  commentId: T:Global.PathFinder.PathingCell
  isExternal: true
  href: PathFinder.html
  name: PathFinder.PathingCell
  nameWithType: PathFinder.PathingCell
  fullName: PathFinder.PathingCell
  spec.csharp:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  spec.vb:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
- uid: MoreSlugcats.AncientBot
  commentId: T:MoreSlugcats.AncientBot
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.AncientBot.html
  name: AncientBot
  nameWithType: AncientBot
  fullName: MoreSlugcats.AncientBot
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: Global.KarmicArmor
  commentId: T:Global.KarmicArmor
  isExternal: true
  href: KarmicArmor.html
  name: KarmicArmor
  nameWithType: KarmicArmor
  fullName: KarmicArmor
- uid: System.Collections.Generic.List{PhysicalObject}
  commentId: T:System.Collections.Generic.List{PhysicalObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PhysicalObject>
  nameWithType: List<PhysicalObject>
  fullName: System.Collections.Generic.List<PhysicalObject>
  nameWithType.vb: List(Of PhysicalObject)
  fullName.vb: System.Collections.Generic.List(Of PhysicalObject)
  name.vb: List(Of PhysicalObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.Scavenger.#ctor*
  commentId: Overload:Global.Scavenger.#ctor
  isExternal: true
  href: Global.Scavenger.html#Scavenger__ctor_AbstractCreature_World_
  name: Scavenger
  nameWithType: Scavenger.Scavenger
  fullName: Scavenger.Scavenger
  nameWithType.vb: Scavenger.New
  fullName.vb: Scavenger.New
  name.vb: New
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.PhysicalObject.InitiateGraphicsModule
  commentId: M:Global.PhysicalObject.InitiateGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  name: InitiateGraphicsModule()
  nameWithType: PhysicalObject.InitiateGraphicsModule()
  fullName: PhysicalObject.InitiateGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
- uid: Global.Scavenger.InitiateGraphicsModule*
  commentId: Overload:Global.Scavenger.InitiateGraphicsModule
  isExternal: true
  href: Global.Scavenger.html#Scavenger_InitiateGraphicsModule
  name: InitiateGraphicsModule
  nameWithType: Scavenger.InitiateGraphicsModule
  fullName: Scavenger.InitiateGraphicsModule
- uid: Global.Creature.NewRoom(Room)
  commentId: M:Global.Creature.NewRoom(Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: Creature.NewRoom(Room)
  fullName: Creature.NewRoom(Room)
  spec.csharp:
  - uid: Global.Creature.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Creature.html#Creature_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Creature.html#Creature_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Scavenger.NewRoom*
  commentId: Overload:Global.Scavenger.NewRoom
  isExternal: true
  href: Global.Scavenger.html#Scavenger_NewRoom_Room_
  name: NewRoom
  nameWithType: Scavenger.NewRoom
  fullName: Scavenger.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Creature.PlaceInRoom(Room)
  commentId: M:Global.Creature.PlaceInRoom(Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_PlaceInRoom_Room_
  name: PlaceInRoom(Room)
  nameWithType: Creature.PlaceInRoom(Room)
  fullName: Creature.PlaceInRoom(Room)
  spec.csharp:
  - uid: Global.Creature.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.Creature.html#Creature_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.Creature.html#Creature_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Scavenger.PlaceInRoom*
  commentId: Overload:Global.Scavenger.PlaceInRoom
  isExternal: true
  href: Global.Scavenger.html#Scavenger_PlaceInRoom_Room_
  name: PlaceInRoom
  nameWithType: Scavenger.PlaceInRoom
  fullName: Scavenger.PlaceInRoom
- uid: Global.Scavenger.PingReturnInfo*
  commentId: Overload:Global.Scavenger.PingReturnInfo
  isExternal: true
  href: Global.Scavenger.html#Scavenger_PingReturnInfo_PhysicalObject_System_Boolean_
  name: PingReturnInfo
  nameWithType: Scavenger.PingReturnInfo
  fullName: Scavenger.PingReturnInfo
- uid: Global.AirBreatherCreature.Update(System.Boolean)
  commentId: M:Global.AirBreatherCreature.Update(System.Boolean)
  parent: Global.AirBreatherCreature
  isExternal: true
  href: Global.AirBreatherCreature.html#AirBreatherCreature_Update_System_Boolean_
  name: Update(bool)
  nameWithType: AirBreatherCreature.Update(bool)
  fullName: AirBreatherCreature.Update(bool)
  nameWithType.vb: AirBreatherCreature.Update(Boolean)
  fullName.vb: AirBreatherCreature.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.AirBreatherCreature.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.AirBreatherCreature.html#AirBreatherCreature_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.AirBreatherCreature.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.AirBreatherCreature.html#AirBreatherCreature_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Scavenger.Update*
  commentId: Overload:Global.Scavenger.Update
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Update_System_Boolean_
  name: Update
  nameWithType: Scavenger.Update
  fullName: Scavenger.Update
- uid: Global.Creature.NewTile
  commentId: M:Global.Creature.NewTile
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NewTile
  name: NewTile()
  nameWithType: Creature.NewTile()
  fullName: Creature.NewTile()
  spec.csharp:
  - uid: Global.Creature.NewTile
    name: NewTile
    isExternal: true
    href: Global.Creature.html#Creature_NewTile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.NewTile
    name: NewTile
    isExternal: true
    href: Global.Creature.html#Creature_NewTile
  - name: (
  - name: )
- uid: Global.Scavenger.NewTile*
  commentId: Overload:Global.Scavenger.NewTile
  isExternal: true
  href: Global.Scavenger.html#Scavenger_NewTile
  name: NewTile
  nameWithType: Scavenger.NewTile
  fullName: Scavenger.NewTile
- uid: Global.Scavenger.DisciplePing*
  commentId: Overload:Global.Scavenger.DisciplePing
  isExternal: true
  href: Global.Scavenger.html#Scavenger_DisciplePing
  name: DisciplePing
  nameWithType: Scavenger.DisciplePing
  fullName: Scavenger.DisciplePing
- uid: Global.Scavenger.LookForItemsToPickUp*
  commentId: Overload:Global.Scavenger.LookForItemsToPickUp
  isExternal: true
  href: Global.Scavenger.html#Scavenger_LookForItemsToPickUp
  name: LookForItemsToPickUp
  nameWithType: Scavenger.LookForItemsToPickUp
  fullName: Scavenger.LookForItemsToPickUp
- uid: Global.Scavenger.GiveWeaponToOther*
  commentId: Overload:Global.Scavenger.GiveWeaponToOther
  isExternal: true
  href: Global.Scavenger.html#Scavenger_GiveWeaponToOther_Scavenger_
  name: GiveWeaponToOther
  nameWithType: Scavenger.GiveWeaponToOther
  fullName: Scavenger.GiveWeaponToOther
- uid: Global.Scavenger
  commentId: T:Global.Scavenger
  isExternal: true
  href: Scavenger.html
  name: Scavenger
  nameWithType: Scavenger
  fullName: Scavenger
- uid: Global.Scavenger.PickUpAndPlaceInInventory*
  commentId: Overload:Global.Scavenger.PickUpAndPlaceInInventory
  isExternal: true
  href: Global.Scavenger.html#Scavenger_PickUpAndPlaceInInventory_PhysicalObject_System_Boolean_
  name: PickUpAndPlaceInInventory
  nameWithType: Scavenger.PickUpAndPlaceInInventory
  fullName: Scavenger.PickUpAndPlaceInInventory
- uid: Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers*
  commentId: Overload:Global.Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
  isExternal: true
  href: Global.Scavenger.html#Scavenger_PlaceAllGrabbedObjectsInCorrectContainers
  name: PlaceAllGrabbedObjectsInCorrectContainers
  nameWithType: Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
  fullName: Scavenger.PlaceAllGrabbedObjectsInCorrectContainers
- uid: Global.Scavenger.ArrangeInventory*
  commentId: Overload:Global.Scavenger.ArrangeInventory
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ArrangeInventory
  name: ArrangeInventory
  nameWithType: Scavenger.ArrangeInventory
  fullName: Scavenger.ArrangeInventory
- uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  commentId: M:Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  name: Grab(PhysicalObject, int, int, Shareability, float, bool, bool)
  nameWithType: Creature.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  fullName: Creature.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  nameWithType.vb: Creature.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  fullName.vb: Creature.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  name.vb: Grab(PhysicalObject, Integer, Integer, Shareability, Single, Boolean, Boolean)
  spec.csharp:
  - uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
    name: Grab
    isExternal: true
    href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
    name: Grab
    isExternal: true
    href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Scavenger.Grab*
  commentId: Overload:Global.Scavenger.Grab
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  name: Grab
  nameWithType: Scavenger.Grab
  fullName: Scavenger.Grab
- uid: Global.Creature.Grasp.Shareability
  commentId: T:Global.Creature.Grasp.Shareability
  isExternal: true
  href: Creature.html
  name: Creature.Grasp.Shareability
  nameWithType: Creature.Grasp.Shareability
  fullName: Creature.Grasp.Shareability
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: .
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: .
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
- uid: Global.Creature.RecreateSticksFromAbstract
  commentId: M:Global.Creature.RecreateSticksFromAbstract
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  name: RecreateSticksFromAbstract()
  nameWithType: Creature.RecreateSticksFromAbstract()
  fullName: Creature.RecreateSticksFromAbstract()
  spec.csharp:
  - uid: Global.Creature.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  - name: (
  - name: )
- uid: Global.Scavenger.RecreateSticksFromAbstract*
  commentId: Overload:Global.Scavenger.RecreateSticksFromAbstract
  isExternal: true
  href: Global.Scavenger.html#Scavenger_RecreateSticksFromAbstract
  name: RecreateSticksFromAbstract
  nameWithType: Scavenger.RecreateSticksFromAbstract
  fullName: Scavenger.RecreateSticksFromAbstract
- uid: Global.Creature.ReleaseGrasp(System.Int32)
  commentId: M:Global.Creature.ReleaseGrasp(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  name: ReleaseGrasp(int)
  nameWithType: Creature.ReleaseGrasp(int)
  fullName: Creature.ReleaseGrasp(int)
  nameWithType.vb: Creature.ReleaseGrasp(Integer)
  fullName.vb: Creature.ReleaseGrasp(Integer)
  name.vb: ReleaseGrasp(Integer)
  spec.csharp:
  - uid: Global.Creature.ReleaseGrasp(System.Int32)
    name: ReleaseGrasp
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.ReleaseGrasp(System.Int32)
    name: ReleaseGrasp
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Scavenger.ReleaseGrasp*
  commentId: Overload:Global.Scavenger.ReleaseGrasp
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ReleaseGrasp_System_Int32_
  name: ReleaseGrasp
  nameWithType: Scavenger.ReleaseGrasp
  fullName: Scavenger.ReleaseGrasp
- uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  fullName: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  nameWithType.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Scavenger.GraphicsModuleUpdated*
  commentId: Overload:Global.Scavenger.GraphicsModuleUpdated
  isExternal: true
  href: Global.Scavenger.html#Scavenger_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated
  nameWithType: Scavenger.GraphicsModuleUpdated
  fullName: Scavenger.GraphicsModuleUpdated
- uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide(PhysicalObject, int, int)
  nameWithType: PhysicalObject.Collide(PhysicalObject, int, int)
  fullName: PhysicalObject.Collide(PhysicalObject, int, int)
  nameWithType.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Scavenger.Collide*
  commentId: Overload:Global.Scavenger.Collide
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide
  nameWithType: Scavenger.Collide
  fullName: Scavenger.Collide
- uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: Creature.TerrainImpact(int, IntVector2, float, bool)
  fullName: Creature.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  nameWithType.vb: Creature.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: Creature.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
  spec.csharp:
  - uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Scavenger.TerrainImpact*
  commentId: Overload:Global.Scavenger.TerrainImpact
  isExternal: true
  href: Global.Scavenger.html#Scavenger_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact
  nameWithType: Scavenger.TerrainImpact
  fullName: Scavenger.TerrainImpact
- uid: Global.Creature.ShortCutColor
  commentId: M:Global.Creature.ShortCutColor
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ShortCutColor
  name: ShortCutColor()
  nameWithType: Creature.ShortCutColor()
  fullName: Creature.ShortCutColor()
  spec.csharp:
  - uid: Global.Creature.ShortCutColor
    name: ShortCutColor
    isExternal: true
    href: Global.Creature.html#Creature_ShortCutColor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.ShortCutColor
    name: ShortCutColor
    isExternal: true
    href: Global.Creature.html#Creature_ShortCutColor
  - name: (
  - name: )
- uid: Global.Scavenger.ShortCutColor*
  commentId: Overload:Global.Scavenger.ShortCutColor
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ShortCutColor
  name: ShortCutColor
  nameWithType: Scavenger.ShortCutColor
  fullName: Scavenger.ShortCutColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.Scavenger.HeavyStun*
  commentId: Overload:Global.Scavenger.HeavyStun
  isExternal: true
  href: Global.Scavenger.html#Scavenger_HeavyStun_System_Int32_
  name: HeavyStun
  nameWithType: Scavenger.HeavyStun
  fullName: Scavenger.HeavyStun
- uid: Global.Creature.Stun(System.Int32)
  commentId: M:Global.Creature.Stun(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Stun_System_Int32_
  name: Stun(int)
  nameWithType: Creature.Stun(int)
  fullName: Creature.Stun(int)
  nameWithType.vb: Creature.Stun(Integer)
  fullName.vb: Creature.Stun(Integer)
  name.vb: Stun(Integer)
  spec.csharp:
  - uid: Global.Creature.Stun(System.Int32)
    name: Stun
    isExternal: true
    href: Global.Creature.html#Creature_Stun_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Stun(System.Int32)
    name: Stun
    isExternal: true
    href: Global.Creature.html#Creature_Stun_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Scavenger.Stun*
  commentId: Overload:Global.Scavenger.Stun
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Stun_System_Int32_
  name: Stun
  nameWithType: Scavenger.Stun
  fullName: Scavenger.Stun
- uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  commentId: M:Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  name: SpitOutOfShortCut(IntVector2, Room, bool)
  nameWithType: Creature.SpitOutOfShortCut(IntVector2, Room, bool)
  fullName: Creature.SpitOutOfShortCut(RWCustom.IntVector2, Room, bool)
  nameWithType.vb: Creature.SpitOutOfShortCut(IntVector2, Room, Boolean)
  fullName.vb: Creature.SpitOutOfShortCut(RWCustom.IntVector2, Room, Boolean)
  name.vb: SpitOutOfShortCut(IntVector2, Room, Boolean)
  spec.csharp:
  - uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
    name: SpitOutOfShortCut
    isExternal: true
    href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
    name: SpitOutOfShortCut
    isExternal: true
    href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Scavenger.SpitOutOfShortCut*
  commentId: Overload:Global.Scavenger.SpitOutOfShortCut
  isExternal: true
  href: Global.Scavenger.html#Scavenger_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  name: SpitOutOfShortCut
  nameWithType: Scavenger.SpitOutOfShortCut
  fullName: Scavenger.SpitOutOfShortCut
- uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  commentId: M:Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  name: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, float, float)
  nameWithType: Creature.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  fullName: Creature.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  nameWithType.vb: Creature.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  fullName.vb: Creature.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  name.vb: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, Single, Single)
  spec.csharp:
  - uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
    name: Violence
    isExternal: true
    href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
    name: Violence
    isExternal: true
    href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.Scavenger.Violence*
  commentId: Overload:Global.Scavenger.Violence
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  name: Violence
  nameWithType: Scavenger.Violence
  fullName: Scavenger.Violence
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
- uid: Global.Creature.DamageType
  commentId: T:Global.Creature.DamageType
  isExternal: true
  href: Creature.html
  name: Creature.DamageType
  nameWithType: Creature.DamageType
  fullName: Creature.DamageType
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
- uid: Global.Scavenger.CreatureInterestBonus*
  commentId: Overload:Global.Scavenger.CreatureInterestBonus
  isExternal: true
  href: Global.Scavenger.html#Scavenger_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  name: CreatureInterestBonus
  nameWithType: Scavenger.CreatureInterestBonus
  fullName: Scavenger.CreatureInterestBonus
- uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  commentId: M:Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  name: CreatureInterestBonus(CreatureRepresentation, float)
  nameWithType: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  fullName: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  nameWithType.vb: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  fullName.vb: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  name.vb: CreatureInterestBonus(CreatureRepresentation, Single)
  spec.csharp:
  - uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
    name: CreatureInterestBonus
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
    name: CreatureInterestBonus
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Global.Scavenger.ForcedLookCreature*
  commentId: Overload:Global.Scavenger.ForcedLookCreature
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ForcedLookCreature
  name: ForcedLookCreature
  nameWithType: Scavenger.ForcedLookCreature
  fullName: Scavenger.ForcedLookCreature
- uid: Global.ILookingAtCreatures.ForcedLookCreature
  commentId: M:Global.ILookingAtCreatures.ForcedLookCreature
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  name: ForcedLookCreature()
  nameWithType: ILookingAtCreatures.ForcedLookCreature()
  fullName: ILookingAtCreatures.ForcedLookCreature()
  spec.csharp:
  - uid: Global.ILookingAtCreatures.ForcedLookCreature
    name: ForcedLookCreature
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.ForcedLookCreature
    name: ForcedLookCreature
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  - name: (
  - name: )
- uid: Global.Scavenger.LookAtNothing*
  commentId: Overload:Global.Scavenger.LookAtNothing
  isExternal: true
  href: Global.Scavenger.html#Scavenger_LookAtNothing
  name: LookAtNothing
  nameWithType: Scavenger.LookAtNothing
  fullName: Scavenger.LookAtNothing
- uid: Global.ILookingAtCreatures.LookAtNothing
  commentId: M:Global.ILookingAtCreatures.LookAtNothing
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  name: LookAtNothing()
  nameWithType: ILookingAtCreatures.LookAtNothing()
  fullName: ILookingAtCreatures.LookAtNothing()
  spec.csharp:
  - uid: Global.ILookingAtCreatures.LookAtNothing
    name: LookAtNothing
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.LookAtNothing
    name: LookAtNothing
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  - name: (
  - name: )
- uid: Global.Scavenger.KarmicArmorMentalDamage*
  commentId: Overload:Global.Scavenger.KarmicArmorMentalDamage
  isExternal: true
  href: Global.Scavenger.html#Scavenger_KarmicArmorMentalDamage
  name: KarmicArmorMentalDamage
  nameWithType: Scavenger.KarmicArmorMentalDamage
  fullName: Scavenger.KarmicArmorMentalDamage
- uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  commentId: M:Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  name: GrabbedObjectSnatched(PhysicalObject, Creature)
  nameWithType: Creature.GrabbedObjectSnatched(PhysicalObject, Creature)
  fullName: Creature.GrabbedObjectSnatched(PhysicalObject, Creature)
  spec.csharp:
  - uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
    name: GrabbedObjectSnatched
    isExternal: true
    href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
    name: GrabbedObjectSnatched
    isExternal: true
    href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Scavenger.GrabbedObjectSnatched*
  commentId: Overload:Global.Scavenger.GrabbedObjectSnatched
  isExternal: true
  href: Global.Scavenger.html#Scavenger_GrabbedObjectSnatched_PhysicalObject_Creature_
  name: GrabbedObjectSnatched
  nameWithType: Scavenger.GrabbedObjectSnatched
  fullName: Scavenger.GrabbedObjectSnatched
- uid: Global.Scavenger.ControlCycleInventory*
  commentId: Overload:Global.Scavenger.ControlCycleInventory
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ControlCycleInventory
  name: ControlCycleInventory
  nameWithType: Scavenger.ControlCycleInventory
  fullName: Scavenger.ControlCycleInventory
- uid: Global.Scavenger.CycleItemIntoPrimaryHand*
  commentId: Overload:Global.Scavenger.CycleItemIntoPrimaryHand
  isExternal: true
  href: Global.Scavenger.html#Scavenger_CycleItemIntoPrimaryHand
  name: CycleItemIntoPrimaryHand
  nameWithType: Scavenger.CycleItemIntoPrimaryHand
  fullName: Scavenger.CycleItemIntoPrimaryHand
- uid: Global.Scavenger.FastReactionCheck*
  commentId: Overload:Global.Scavenger.FastReactionCheck
  isExternal: true
  href: Global.Scavenger.html#Scavenger_FastReactionCheck
  name: FastReactionCheck
  nameWithType: Scavenger.FastReactionCheck
  fullName: Scavenger.FastReactionCheck
- uid: Global.Scavenger.PlayerHasImmunity*
  commentId: Overload:Global.Scavenger.PlayerHasImmunity
  isExternal: true
  href: Global.Scavenger.html#Scavenger_PlayerHasImmunity_Player_
  name: PlayerHasImmunity
  nameWithType: Scavenger.PlayerHasImmunity
  fullName: Scavenger.PlayerHasImmunity
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: SpearStick(Weapon, float, BodyChunk, Pos, Vector2)
  nameWithType: Creature.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName: Creature.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  nameWithType.vb: Creature.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName.vb: Creature.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  name.vb: SpearStick(Weapon, Single, BodyChunk, Pos, Vector2)
  spec.csharp:
  - uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
    name: SpearStick
    isExternal: true
    href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
    name: SpearStick
    isExternal: true
    href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Scavenger.SpearStick*
  commentId: Overload:Global.Scavenger.SpearStick
  isExternal: true
  href: Global.Scavenger.html#Scavenger_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: SpearStick
  nameWithType: Scavenger.SpearStick
  fullName: Scavenger.SpearStick
- uid: Global.Weapon
  commentId: T:Global.Weapon
  isExternal: true
  href: Weapon.html
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
- uid: Global.Scavenger.JumpingUpdate*
  commentId: Overload:Global.Scavenger.JumpingUpdate
  isExternal: true
  href: Global.Scavenger.html#Scavenger_JumpingUpdate
  name: JumpingUpdate
  nameWithType: Scavenger.JumpingUpdate
  fullName: Scavenger.JumpingUpdate
- uid: Global.Scavenger.ForceScavJump*
  commentId: Overload:Global.Scavenger.ForceScavJump
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ForceScavJump
  name: ForceScavJump
  nameWithType: Scavenger.ForceScavJump
  fullName: Scavenger.ForceScavJump
- uid: Global.Scavenger.RunningUpdate*
  commentId: Overload:Global.Scavenger.RunningUpdate
  isExternal: true
  href: Global.Scavenger.html#Scavenger_RunningUpdate
  name: RunningUpdate
  nameWithType: Scavenger.RunningUpdate
  fullName: Scavenger.RunningUpdate
- uid: Global.Scavenger.InitiateJump*
  commentId: Overload:Global.Scavenger.InitiateJump
  isExternal: true
  href: Global.Scavenger.html#Scavenger_InitiateJump_Scavenger_JumpFinder_System_Int32_
  name: InitiateJump
  nameWithType: Scavenger.InitiateJump
  fullName: Scavenger.InitiateJump
- uid: Global.Scavenger.Jump*
  commentId: Overload:Global.Scavenger.Jump
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Jump
  name: Jump
  nameWithType: Scavenger.Jump
  fullName: Scavenger.Jump
- uid: Global.Scavenger.SetUpCombatSkills*
  commentId: Overload:Global.Scavenger.SetUpCombatSkills
  isExternal: true
  href: Global.Scavenger.html#Scavenger_SetUpCombatSkills
  name: SetUpCombatSkills
  nameWithType: Scavenger.SetUpCombatSkills
  fullName: Scavenger.SetUpCombatSkills
- uid: Global.Scavenger.CollideWithOtherCreature*
  commentId: Overload:Global.Scavenger.CollideWithOtherCreature
  isExternal: true
  href: Global.Scavenger.html#Scavenger_CollideWithOtherCreature_BodyChunk_Tracker_CreatureRepresentation_
  name: CollideWithOtherCreature
  nameWithType: Scavenger.CollideWithOtherCreature
  fullName: Scavenger.CollideWithOtherCreature
- uid: Global.Scavenger.CombatUpdate*
  commentId: Overload:Global.Scavenger.CombatUpdate
  isExternal: true
  href: Global.Scavenger.html#Scavenger_CombatUpdate
  name: CombatUpdate
  nameWithType: Scavenger.CombatUpdate
  fullName: Scavenger.CombatUpdate
- uid: Global.Scavenger.ReactionCheck*
  commentId: Overload:Global.Scavenger.ReactionCheck
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ReactionCheck
  name: ReactionCheck
  nameWithType: Scavenger.ReactionCheck
  fullName: Scavenger.ReactionCheck
- uid: Global.Scavenger.TryThrow*
  commentId: Overload:Global.Scavenger.TryThrow
  isExternal: true
  href: Global.Scavenger.html#Scavenger_TryThrow_BodyChunk_ScavengerAI_ViolenceType_
  name: TryThrow
  nameWithType: Scavenger.TryThrow
  fullName: Scavenger.TryThrow
- uid: Global.ScavengerAI.ViolenceType
  commentId: T:Global.ScavengerAI.ViolenceType
  isExternal: true
  href: ScavengerAI.html
  name: ScavengerAI.ViolenceType
  nameWithType: ScavengerAI.ViolenceType
  fullName: ScavengerAI.ViolenceType
  spec.csharp:
  - uid: Global.ScavengerAI
    name: ScavengerAI
    isExternal: true
    href: ScavengerAI.html
  - name: .
  - uid: Global.ScavengerAI.ViolenceType
    name: ViolenceType
    isExternal: true
    href: ScavengerAI.ViolenceType.html
  spec.vb:
  - uid: Global.ScavengerAI
    name: ScavengerAI
    isExternal: true
    href: ScavengerAI.html
  - name: .
  - uid: Global.ScavengerAI.ViolenceType
    name: ViolenceType
    isExternal: true
    href: ScavengerAI.ViolenceType.html
- uid: Global.Scavenger.Throw*
  commentId: Overload:Global.Scavenger.Throw
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Throw_UnityEngine_Vector2_
  name: Throw
  nameWithType: Scavenger.Throw
  fullName: Scavenger.Throw
- uid: Global.Scavenger.MeleeGetFree*
  commentId: Overload:Global.Scavenger.MeleeGetFree
  isExternal: true
  href: Global.Scavenger.html#Scavenger_MeleeGetFree_Creature_System_Boolean_
  name: MeleeGetFree
  nameWithType: Scavenger.MeleeGetFree
  fullName: Scavenger.MeleeGetFree
- uid: Global.Scavenger.FlyingWeapon*
  commentId: Overload:Global.Scavenger.FlyingWeapon
  isExternal: true
  href: Global.Scavenger.html#Scavenger_FlyingWeapon_Weapon_
  name: FlyingWeapon
  nameWithType: Scavenger.FlyingWeapon
  fullName: Scavenger.FlyingWeapon
- uid: Global.Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
  commentId: M:Global.Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
  parent: Global.Weapon.INotifyOfFlyingWeapons
  isExternal: true
  href: Global.Weapon.INotifyOfFlyingWeapons.html#Weapon_INotifyOfFlyingWeapons_FlyingWeapon_Weapon_
  name: FlyingWeapon(Weapon)
  nameWithType: Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
  fullName: Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
  spec.csharp:
  - uid: Global.Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
    name: FlyingWeapon
    isExternal: true
    href: Global.Weapon.INotifyOfFlyingWeapons.html#Weapon_INotifyOfFlyingWeapons_FlyingWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
  spec.vb:
  - uid: Global.Weapon.INotifyOfFlyingWeapons.FlyingWeapon(Weapon)
    name: FlyingWeapon
    isExternal: true
    href: Global.Weapon.INotifyOfFlyingWeapons.html#Weapon_INotifyOfFlyingWeapons_FlyingWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
- uid: Global.Scavenger.JoinedLookPoint*
  commentId: Overload:Global.Scavenger.JoinedLookPoint
  isExternal: true
  href: Global.Scavenger.html#Scavenger_JoinedLookPoint
  name: JoinedLookPoint
  nameWithType: Scavenger.JoinedLookPoint
  fullName: Scavenger.JoinedLookPoint
- uid: Global.Scavenger.HeadLookDir*
  commentId: Overload:Global.Scavenger.HeadLookDir
  isExternal: true
  href: Global.Scavenger.html#Scavenger_HeadLookDir
  name: HeadLookDir
  nameWithType: Scavenger.HeadLookDir
  fullName: Scavenger.HeadLookDir
- uid: Global.Scavenger.Rummaging*
  commentId: Overload:Global.Scavenger.Rummaging
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Rummaging
  name: Rummaging
  nameWithType: Scavenger.Rummaging
  fullName: Scavenger.Rummaging
- uid: Global.Scavenger.Pointing*
  commentId: Overload:Global.Scavenger.Pointing
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Pointing
  name: Pointing
  nameWithType: Scavenger.Pointing
  fullName: Scavenger.Pointing
- uid: Global.Scavenger.Communicating*
  commentId: Overload:Global.Scavenger.Communicating
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Communicating
  name: Communicating
  nameWithType: Scavenger.Communicating
  fullName: Scavenger.Communicating
- uid: Global.Scavenger.Charging*
  commentId: Overload:Global.Scavenger.Charging
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Charging
  name: Charging
  nameWithType: Scavenger.Charging
  fullName: Scavenger.Charging
- uid: Global.Scavenger.CommitedToMoveIsDrop*
  commentId: Overload:Global.Scavenger.CommitedToMoveIsDrop
  isExternal: true
  href: Global.Scavenger.html#Scavenger_CommitedToMoveIsDrop
  name: CommitedToMoveIsDrop
  nameWithType: Scavenger.CommitedToMoveIsDrop
  fullName: Scavenger.CommitedToMoveIsDrop
- uid: Global.Scavenger.LittleStuck*
  commentId: Overload:Global.Scavenger.LittleStuck
  isExternal: true
  href: Global.Scavenger.html#Scavenger_LittleStuck
  name: LittleStuck
  nameWithType: Scavenger.LittleStuck
  fullName: Scavenger.LittleStuck
- uid: Global.Scavenger.ReallyStuck*
  commentId: Overload:Global.Scavenger.ReallyStuck
  isExternal: true
  href: Global.Scavenger.html#Scavenger_ReallyStuck
  name: ReallyStuck
  nameWithType: Scavenger.ReallyStuck
  fullName: Scavenger.ReallyStuck
- uid: Global.Scavenger.NextTile*
  commentId: Overload:Global.Scavenger.NextTile
  isExternal: true
  href: Global.Scavenger.html#Scavenger_NextTile
  name: NextTile
  nameWithType: Scavenger.NextTile
  fullName: Scavenger.NextTile
- uid: Global.Creature.VisionPoint
  commentId: P:Global.Creature.VisionPoint
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_VisionPoint
  name: VisionPoint
  nameWithType: Creature.VisionPoint
  fullName: Creature.VisionPoint
- uid: Global.Scavenger.VisionPoint*
  commentId: Overload:Global.Scavenger.VisionPoint
  isExternal: true
  href: Global.Scavenger.html#Scavenger_VisionPoint
  name: VisionPoint
  nameWithType: Scavenger.VisionPoint
  fullName: Scavenger.VisionPoint
- uid: Global.Scavenger.Injured*
  commentId: Overload:Global.Scavenger.Injured
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Injured
  name: Injured
  nameWithType: Scavenger.Injured
  fullName: Scavenger.Injured
- uid: Global.Scavenger.MovementSpeed*
  commentId: Overload:Global.Scavenger.MovementSpeed
  isExternal: true
  href: Global.Scavenger.html#Scavenger_MovementSpeed
  name: MovementSpeed
  nameWithType: Scavenger.MovementSpeed
  fullName: Scavenger.MovementSpeed
- uid: Global.Scavenger.HeadLookPoint*
  commentId: Overload:Global.Scavenger.HeadLookPoint
  isExternal: true
  href: Global.Scavenger.html#Scavenger_HeadLookPoint
  name: HeadLookPoint
  nameWithType: Scavenger.HeadLookPoint
  fullName: Scavenger.HeadLookPoint
- uid: Global.Scavenger.EyesLookPoint*
  commentId: Overload:Global.Scavenger.EyesLookPoint
  isExternal: true
  href: Global.Scavenger.html#Scavenger_EyesLookPoint
  name: EyesLookPoint
  nameWithType: Scavenger.EyesLookPoint
  fullName: Scavenger.EyesLookPoint
- uid: Global.Scavenger.Elite*
  commentId: Overload:Global.Scavenger.Elite
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Elite
  name: Elite
  nameWithType: Scavenger.Elite
  fullName: Scavenger.Elite
- uid: Global.Scavenger.King*
  commentId: Overload:Global.Scavenger.King
  isExternal: true
  href: Global.Scavenger.html#Scavenger_King
  name: King
  nameWithType: Scavenger.King
  fullName: Scavenger.King
- uid: Global.Scavenger.AllowIdleMoves*
  commentId: Overload:Global.Scavenger.AllowIdleMoves
  isExternal: true
  href: Global.Scavenger.html#Scavenger_AllowIdleMoves
  name: AllowIdleMoves
  nameWithType: Scavenger.AllowIdleMoves
  fullName: Scavenger.AllowIdleMoves
- uid: Global.Scavenger.IsControlPointing*
  commentId: Overload:Global.Scavenger.IsControlPointing
  isExternal: true
  href: Global.Scavenger.html#Scavenger_IsControlPointing
  name: IsControlPointing
  nameWithType: Scavenger.IsControlPointing
  fullName: Scavenger.IsControlPointing
- uid: Global.Scavenger.jumpToPoint*
  commentId: Overload:Global.Scavenger.jumpToPoint
  isExternal: true
  href: Global.Scavenger.html#Scavenger_jumpToPoint
  name: jumpToPoint
  nameWithType: Scavenger.jumpToPoint
  fullName: Scavenger.jumpToPoint
- uid: Global.Scavenger.InStandardRunMode*
  commentId: Overload:Global.Scavenger.InStandardRunMode
  isExternal: true
  href: Global.Scavenger.html#Scavenger_InStandardRunMode
  name: InStandardRunMode
  nameWithType: Scavenger.InStandardRunMode
  fullName: Scavenger.InStandardRunMode
- uid: Global.Scavenger.NoRunBehavior*
  commentId: Overload:Global.Scavenger.NoRunBehavior
  isExternal: true
  href: Global.Scavenger.html#Scavenger_NoRunBehavior
  name: NoRunBehavior
  nameWithType: Scavenger.NoRunBehavior
  fullName: Scavenger.NoRunBehavior
- uid: Global.Scavenger.Templar*
  commentId: Overload:Global.Scavenger.Templar
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Templar
  name: Templar
  nameWithType: Scavenger.Templar
  fullName: Scavenger.Templar
- uid: Global.Scavenger.Disciple*
  commentId: Overload:Global.Scavenger.Disciple
  isExternal: true
  href: Global.Scavenger.html#Scavenger_Disciple
  name: Disciple
  nameWithType: Scavenger.Disciple
  fullName: Scavenger.Disciple
- uid: Global.Scavenger.KarmicArmorProtected*
  commentId: Overload:Global.Scavenger.KarmicArmorProtected
  isExternal: true
  href: Global.Scavenger.html#Scavenger_KarmicArmorProtected
  name: KarmicArmorProtected
  nameWithType: Scavenger.KarmicArmorProtected
  fullName: Scavenger.KarmicArmorProtected
