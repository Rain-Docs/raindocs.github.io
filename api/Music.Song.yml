### YamlMime:ManagedReference
items:
- uid: Music.Song
  commentId: T:Music.Song
  id: Song
  parent: Music
  children:
  - Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)
  - Music.Song.FadeOut(System.Single)
  - Music.Song.FadingOut
  - Music.Song.PlayerToNewRoom
  - Music.Song.ResetSongStream
  - Music.Song.Update
  - Music.Song.baseVolume
  - Music.Song.droneVolume
  - Music.Song.fadeInTime
  - Music.Song.fadeOutAtThreat
  - Music.Song.fadeOutTime
  - Music.Song.priority
  - Music.Song.roomTransitions
  - Music.Song.stopAtDeath
  - Music.Song.stopAtGate
  langs:
  - csharp
  - vb
  name: Song
  nameWithType: Song
  fullName: Music.Song
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Music.Song</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Song : MusicPiece'
    content.vb: Public Class Song Inherits MusicPiece
  inheritance:
  - System.Object
  - Music.MusicPiece
  derivedClasses:
  - MoreSlugcats.HalcyonSong
  - MoreSlugcats.MSSirenSong
  - MoreSlugcats.SMEndingSong
  - MoreSlugcats.SaintEndingSong
  - Music.GhostSong
  - Music.IntroRollMusic
  - Music.MenuOrSlideShowSong
  - Music.SSSong
  - Music.VoidSeaMusic
  inheritedMembers:
  - Music.MusicPiece.musicPlayer
  - Music.MusicPiece.subTracks
  - Music.MusicPiece.startedPlaying
  - Music.MusicPiece.playWhenReady
  - Music.MusicPiece.name
  - Music.MusicPiece.volume
  - Music.MusicPiece.context
  - Music.MusicPiece.StartPlaying
  - Music.MusicPiece.StopAndDestroy
  - Music.MusicPiece.IsProcedural
  - Music.MusicPiece.Loop
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Music.Song.priority
  commentId: F:Music.Song.priority
  id: priority
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: priority
  nameWithType: Song.priority
  fullName: Music.Song.priority
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.priority</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float priority
    return:
      type: System.Single
    content.vb: Public priority As Single
- uid: Music.Song.fadeOutAtThreat
  commentId: F:Music.Song.fadeOutAtThreat
  id: fadeOutAtThreat
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: fadeOutAtThreat
  nameWithType: Song.fadeOutAtThreat
  fullName: Music.Song.fadeOutAtThreat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.fadeOutAtThreat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fadeOutAtThreat
    return:
      type: System.Single
    content.vb: Public fadeOutAtThreat As Single
- uid: Music.Song.droneVolume
  commentId: F:Music.Song.droneVolume
  id: droneVolume
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: droneVolume
  nameWithType: Song.droneVolume
  fullName: Music.Song.droneVolume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.droneVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float droneVolume
    return:
      type: System.Single
    content.vb: Public droneVolume As Single
- uid: Music.Song.fadeInTime
  commentId: F:Music.Song.fadeInTime
  id: fadeInTime
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: fadeInTime
  nameWithType: Song.fadeInTime
  fullName: Music.Song.fadeInTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.fadeInTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fadeInTime
    return:
      type: System.Single
    content.vb: Public fadeInTime As Single
- uid: Music.Song.baseVolume
  commentId: F:Music.Song.baseVolume
  id: baseVolume
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: baseVolume
  nameWithType: Song.baseVolume
  fullName: Music.Song.baseVolume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.baseVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float baseVolume
    return:
      type: System.Single
    content.vb: Public baseVolume As Single
- uid: Music.Song.roomTransitions
  commentId: F:Music.Song.roomTransitions
  id: roomTransitions
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: roomTransitions
  nameWithType: Song.roomTransitions
  fullName: Music.Song.roomTransitions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.roomTransitions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int roomTransitions
    return:
      type: System.Int32
    content.vb: Public roomTransitions As Integer
- uid: Music.Song.fadeOutTime
  commentId: F:Music.Song.fadeOutTime
  id: fadeOutTime
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: fadeOutTime
  nameWithType: Song.fadeOutTime
  fullName: Music.Song.fadeOutTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.fadeOutTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fadeOutTime
    return:
      type: System.Single
    content.vb: Public fadeOutTime As Single
- uid: Music.Song.stopAtGate
  commentId: F:Music.Song.stopAtGate
  id: stopAtGate
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: stopAtGate
  nameWithType: Song.stopAtGate
  fullName: Music.Song.stopAtGate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.stopAtGate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stopAtGate
    return:
      type: System.Boolean
    content.vb: Public stopAtGate As Boolean
- uid: Music.Song.stopAtDeath
  commentId: F:Music.Song.stopAtDeath
  id: stopAtDeath
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: stopAtDeath
  nameWithType: Song.stopAtDeath
  fullName: Music.Song.stopAtDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.Song.stopAtDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stopAtDeath
    return:
      type: System.Boolean
    content.vb: Public stopAtDeath As Boolean
- uid: Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)
  commentId: M:Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)
  id: '#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)'
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: Song(MusicPlayer, string, MusicContext)
  nameWithType: Song.Song(MusicPlayer, string, MusicPlayer.MusicContext)
  fullName: Music.Song.Song(Music.MusicPlayer, string, Music.MusicPlayer.MusicContext)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Music.Song</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Song(MusicPlayer musicPlayer, string name, MusicPlayer.MusicContext context)
    parameters:
    - id: musicPlayer
      type: Music.MusicPlayer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>musicPlayer</parameter>
            <parameter>M:Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)</parameter>
          </include>
        </markup>
    - id: context
      type: Music.MusicPlayer.MusicContext
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>context</parameter>
            <parameter>M:Music.Song.#ctor(Music.MusicPlayer,System.String,Music.MusicPlayer.MusicContext)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(musicPlayer As MusicPlayer, name As String, context As MusicPlayer.MusicContext)
  overload: Music.Song.#ctor*
  nameWithType.vb: Song.New(MusicPlayer, String, MusicPlayer.MusicContext)
  fullName.vb: Music.Song.New(Music.MusicPlayer, String, Music.MusicPlayer.MusicContext)
  name.vb: New(MusicPlayer, String, MusicContext)
- uid: Music.Song.Update
  commentId: M:Music.Song.Update
  id: Update
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Song.Update()
  fullName: Music.Song.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.Song.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Music.MusicPiece.Update
  overload: Music.Song.Update*
- uid: Music.Song.PlayerToNewRoom
  commentId: M:Music.Song.PlayerToNewRoom
  id: PlayerToNewRoom
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: PlayerToNewRoom()
  nameWithType: Song.PlayerToNewRoom()
  fullName: Music.Song.PlayerToNewRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.Song.PlayerToNewRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayerToNewRoom()
    content.vb: Public Sub PlayerToNewRoom()
  overload: Music.Song.PlayerToNewRoom*
- uid: Music.Song.FadeOut(System.Single)
  commentId: M:Music.Song.FadeOut(System.Single)
  id: FadeOut(System.Single)
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: FadeOut(float)
  nameWithType: Song.FadeOut(float)
  fullName: Music.Song.FadeOut(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.Song.FadeOut(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FadeOut(float speed)
    parameters:
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Music.Song.FadeOut(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FadeOut(speed As Single)
  overload: Music.Song.FadeOut*
  nameWithType.vb: Song.FadeOut(Single)
  fullName.vb: Music.Song.FadeOut(Single)
  name.vb: FadeOut(Single)
- uid: Music.Song.ResetSongStream
  commentId: M:Music.Song.ResetSongStream
  id: ResetSongStream
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: ResetSongStream()
  nameWithType: Song.ResetSongStream()
  fullName: Music.Song.ResetSongStream()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.Song.ResetSongStream</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetSongStream()
    content.vb: Public Sub ResetSongStream()
  overload: Music.Song.ResetSongStream*
- uid: Music.Song.FadingOut
  commentId: P:Music.Song.FadingOut
  id: FadingOut
  parent: Music.Song
  langs:
  - csharp
  - vb
  name: FadingOut
  nameWithType: Song.FadingOut
  fullName: Music.Song.FadingOut
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Music.Song.FadingOut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool FadingOut { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property FadingOut As Boolean
  overload: Music.Song.FadingOut*
references:
- uid: Music
  commentId: N:Music
  isExternal: true
  href: Music.html
  name: Music
  nameWithType: Music
  fullName: Music
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Music.MusicPiece
  commentId: T:Music.MusicPiece
  parent: Music
  isExternal: true
  href: Music.MusicPiece.html
  name: MusicPiece
  nameWithType: MusicPiece
  fullName: Music.MusicPiece
- uid: Music.MusicPiece.musicPlayer
  commentId: F:Music.MusicPiece.musicPlayer
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_musicPlayer
  name: musicPlayer
  nameWithType: MusicPiece.musicPlayer
  fullName: Music.MusicPiece.musicPlayer
- uid: Music.MusicPiece.subTracks
  commentId: F:Music.MusicPiece.subTracks
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_subTracks
  name: subTracks
  nameWithType: MusicPiece.subTracks
  fullName: Music.MusicPiece.subTracks
- uid: Music.MusicPiece.startedPlaying
  commentId: F:Music.MusicPiece.startedPlaying
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_startedPlaying
  name: startedPlaying
  nameWithType: MusicPiece.startedPlaying
  fullName: Music.MusicPiece.startedPlaying
- uid: Music.MusicPiece.playWhenReady
  commentId: F:Music.MusicPiece.playWhenReady
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_playWhenReady
  name: playWhenReady
  nameWithType: MusicPiece.playWhenReady
  fullName: Music.MusicPiece.playWhenReady
- uid: Music.MusicPiece.name
  commentId: F:Music.MusicPiece.name
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_name
  name: name
  nameWithType: MusicPiece.name
  fullName: Music.MusicPiece.name
- uid: Music.MusicPiece.volume
  commentId: F:Music.MusicPiece.volume
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_volume
  name: volume
  nameWithType: MusicPiece.volume
  fullName: Music.MusicPiece.volume
- uid: Music.MusicPiece.context
  commentId: F:Music.MusicPiece.context
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_context
  name: context
  nameWithType: MusicPiece.context
  fullName: Music.MusicPiece.context
- uid: Music.MusicPiece.StartPlaying
  commentId: M:Music.MusicPiece.StartPlaying
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  name: StartPlaying()
  nameWithType: MusicPiece.StartPlaying()
  fullName: Music.MusicPiece.StartPlaying()
  spec.csharp:
  - uid: Music.MusicPiece.StartPlaying
    name: StartPlaying
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.StartPlaying
    name: StartPlaying
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  - name: (
  - name: )
- uid: Music.MusicPiece.StopAndDestroy
  commentId: M:Music.MusicPiece.StopAndDestroy
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  name: StopAndDestroy()
  nameWithType: MusicPiece.StopAndDestroy()
  fullName: Music.MusicPiece.StopAndDestroy()
  spec.csharp:
  - uid: Music.MusicPiece.StopAndDestroy
    name: StopAndDestroy
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.StopAndDestroy
    name: StopAndDestroy
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  - name: (
  - name: )
- uid: Music.MusicPiece.IsProcedural
  commentId: P:Music.MusicPiece.IsProcedural
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_IsProcedural
  name: IsProcedural
  nameWithType: MusicPiece.IsProcedural
  fullName: Music.MusicPiece.IsProcedural
- uid: Music.MusicPiece.Loop
  commentId: P:Music.MusicPiece.Loop
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_Loop
  name: Loop
  nameWithType: MusicPiece.Loop
  fullName: Music.MusicPiece.Loop
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Music.Song.#ctor*
  commentId: Overload:Music.Song.#ctor
  isExternal: true
  href: Music.Song.html#Music_Song__ctor_Music_MusicPlayer_System_String_Music_MusicPlayer_MusicContext_
  name: Song
  nameWithType: Song.Song
  fullName: Music.Song.Song
  nameWithType.vb: Song.New
  fullName.vb: Music.Song.New
  name.vb: New
- uid: Music.MusicPlayer
  commentId: T:Music.MusicPlayer
  parent: Music
  isExternal: true
  href: Music.MusicPlayer.html
  name: MusicPlayer
  nameWithType: MusicPlayer
  fullName: Music.MusicPlayer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Music.MusicPlayer.MusicContext
  commentId: T:Music.MusicPlayer.MusicContext
  parent: Music
  isExternal: true
  href: Music.MusicPlayer.html
  name: MusicPlayer.MusicContext
  nameWithType: MusicPlayer.MusicContext
  fullName: Music.MusicPlayer.MusicContext
  spec.csharp:
  - uid: Music.MusicPlayer
    name: MusicPlayer
    isExternal: true
    href: Music.MusicPlayer.html
  - name: .
  - uid: Music.MusicPlayer.MusicContext
    name: MusicContext
    isExternal: true
    href: Music.MusicPlayer.MusicContext.html
  spec.vb:
  - uid: Music.MusicPlayer
    name: MusicPlayer
    isExternal: true
    href: Music.MusicPlayer.html
  - name: .
  - uid: Music.MusicPlayer.MusicContext
    name: MusicContext
    isExternal: true
    href: Music.MusicPlayer.MusicContext.html
- uid: Music.MusicPiece.Update
  commentId: M:Music.MusicPiece.Update
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_Update
  name: Update()
  nameWithType: MusicPiece.Update()
  fullName: Music.MusicPiece.Update()
  spec.csharp:
  - uid: Music.MusicPiece.Update
    name: Update
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.Update
    name: Update
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_Update
  - name: (
  - name: )
- uid: Music.Song.Update*
  commentId: Overload:Music.Song.Update
  isExternal: true
  href: Music.Song.html#Music_Song_Update
  name: Update
  nameWithType: Song.Update
  fullName: Music.Song.Update
- uid: Music.Song.PlayerToNewRoom*
  commentId: Overload:Music.Song.PlayerToNewRoom
  isExternal: true
  href: Music.Song.html#Music_Song_PlayerToNewRoom
  name: PlayerToNewRoom
  nameWithType: Song.PlayerToNewRoom
  fullName: Music.Song.PlayerToNewRoom
- uid: Music.Song.FadeOut*
  commentId: Overload:Music.Song.FadeOut
  isExternal: true
  href: Music.Song.html#Music_Song_FadeOut_System_Single_
  name: FadeOut
  nameWithType: Song.FadeOut
  fullName: Music.Song.FadeOut
- uid: Music.Song.ResetSongStream*
  commentId: Overload:Music.Song.ResetSongStream
  isExternal: true
  href: Music.Song.html#Music_Song_ResetSongStream
  name: ResetSongStream
  nameWithType: Song.ResetSongStream
  fullName: Music.Song.ResetSongStream
- uid: Music.Song.FadingOut*
  commentId: Overload:Music.Song.FadingOut
  isExternal: true
  href: Music.Song.html#Music_Song_FadingOut
  name: FadingOut
  nameWithType: Song.FadingOut
  fullName: Music.Song.FadingOut
