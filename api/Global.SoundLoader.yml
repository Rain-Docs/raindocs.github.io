### YamlMime:ManagedReference
items:
- uid: Global.SoundLoader
  commentId: T:Global.SoundLoader
  id: SoundLoader
  parent: Global
  children:
  - Global.SoundLoader.#ctor(System.Boolean,RainWorld)
  - Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS
  - Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  - Global.SoundLoader.DontLog(SoundID)
  - Global.SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)
  - Global.SoundLoader.GetSoundData(SoundID)
  - Global.SoundLoader.GetSoundData(SoundID,System.Int32)
  - Global.SoundLoader.GroupVolume(System.Int32)
  - Global.SoundLoader.LoadAllAmbientSounds
  - Global.SoundLoader.LoadSounds
  - Global.SoundLoader.ReleaseAllUnityAudio
  - Global.SoundLoader.RequestAmbientAudioClip(System.String)
  - Global.SoundLoader.ShouldSoundPlay(SoundID)
  - Global.SoundLoader.TriggerGroupVolume(SoundID)
  - Global.SoundLoader.TriggerPlayAll(SoundID)
  - Global.SoundLoader.TriggerSamples(SoundID)
  - Global.SoundLoader.Update
  - Global.SoundLoader.ambientClipsThroughUnity
  - Global.SoundLoader.ambientImporters
  - Global.SoundLoader.assetBundlesLoaded
  - Global.SoundLoader.errors
  - Global.SoundLoader.loadingDone
  - Global.SoundLoader.volume
  - Global.SoundLoader.volumeExponent
  - Global.SoundLoader.workingTriggers
  langs:
  - csharp
  - vb
  name: SoundLoader
  nameWithType: SoundLoader
  fullName: SoundLoader
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SoundLoader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SoundLoader
    content.vb: Public Class SoundLoader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS
  commentId: F:Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS
  id: ASSETBUNDLE_LOADEDSOUNDEFFECTS
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ASSETBUNDLE_LOADEDSOUNDEFFECTS
  nameWithType: SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS
  fullName: SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const string ASSETBUNDLE_LOADEDSOUNDEFFECTS = "loadedsoundeffects"
    return:
      type: System.String
    content.vb: Public Const ASSETBUNDLE_LOADEDSOUNDEFFECTS As String = "loadedsoundeffects"
- uid: Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  commentId: F:Global.SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  id: ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  nameWithType: SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  fullName: SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const string ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT = "loadedsoundeffects_ambient"
    return:
      type: System.String
    content.vb: Public Const ASSETBUNDLE_LOADEDSOUNDEFFECTS_AMBIENT As String = "loadedsoundeffects_ambient"
- uid: Global.SoundLoader.workingTriggers
  commentId: F:Global.SoundLoader.workingTriggers
  id: workingTriggers
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: workingTriggers
  nameWithType: SoundLoader.workingTriggers
  fullName: SoundLoader.workingTriggers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.workingTriggers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] workingTriggers
    return:
      type: System.Boolean[]
    content.vb: Public workingTriggers As Boolean()
- uid: Global.SoundLoader.ambientClipsThroughUnity
  commentId: F:Global.SoundLoader.ambientClipsThroughUnity
  id: ambientClipsThroughUnity
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ambientClipsThroughUnity
  nameWithType: SoundLoader.ambientClipsThroughUnity
  fullName: SoundLoader.ambientClipsThroughUnity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.ambientClipsThroughUnity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AudioClip> ambientClipsThroughUnity
    return:
      type: System.Collections.Generic.List{UnityEngine.AudioClip}
    content.vb: Public ambientClipsThroughUnity As List(Of AudioClip)
- uid: Global.SoundLoader.ambientImporters
  commentId: F:Global.SoundLoader.ambientImporters
  id: ambientImporters
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ambientImporters
  nameWithType: SoundLoader.ambientImporters
  fullName: SoundLoader.ambientImporters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.ambientImporters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SoundLoader.AmbientImporter> ambientImporters
    return:
      type: System.Collections.Generic.List{SoundLoader.AmbientImporter}
    content.vb: Public ambientImporters As List(Of SoundLoader.AmbientImporter)
- uid: Global.SoundLoader.volume
  commentId: F:Global.SoundLoader.volume
  id: volume
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: volume
  nameWithType: SoundLoader.volume
  fullName: SoundLoader.volume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.volume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float volume
    return:
      type: System.Single
    content.vb: Public volume As Single
- uid: Global.SoundLoader.volumeExponent
  commentId: F:Global.SoundLoader.volumeExponent
  id: volumeExponent
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: volumeExponent
  nameWithType: SoundLoader.volumeExponent
  fullName: SoundLoader.volumeExponent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.volumeExponent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float volumeExponent
    return:
      type: System.Single
    content.vb: Public volumeExponent As Single
- uid: Global.SoundLoader.loadingDone
  commentId: F:Global.SoundLoader.loadingDone
  id: loadingDone
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: loadingDone
  nameWithType: SoundLoader.loadingDone
  fullName: SoundLoader.loadingDone
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.loadingDone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool loadingDone
    return:
      type: System.Boolean
    content.vb: Public loadingDone As Boolean
- uid: Global.SoundLoader.errors
  commentId: F:Global.SoundLoader.errors
  id: errors
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: errors
  nameWithType: SoundLoader.errors
  fullName: SoundLoader.errors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundLoader.errors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> errors
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public errors As List(Of String)
- uid: Global.SoundLoader.#ctor(System.Boolean,RainWorld)
  commentId: M:Global.SoundLoader.#ctor(System.Boolean,RainWorld)
  id: '#ctor(System.Boolean,RainWorld)'
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: SoundLoader(bool, RainWorld)
  nameWithType: SoundLoader.SoundLoader(bool, RainWorld)
  fullName: SoundLoader.SoundLoader(bool, RainWorld)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SoundLoader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader(bool loadAllAmbientSounds, RainWorld rainWorld)
    parameters:
    - id: loadAllAmbientSounds
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loadAllAmbientSounds</parameter>
            <parameter>M:SoundLoader.#ctor(System.Boolean,RainWorld)</parameter>
          </include>
        </markup>
    - id: rainWorld
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rainWorld</parameter>
            <parameter>M:SoundLoader.#ctor(System.Boolean,RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(loadAllAmbientSounds As Boolean, rainWorld As RainWorld)
  overload: Global.SoundLoader.#ctor*
  nameWithType.vb: SoundLoader.New(Boolean, RainWorld)
  fullName.vb: SoundLoader.New(Boolean, RainWorld)
  name.vb: New(Boolean, RainWorld)
- uid: Global.SoundLoader.ReleaseAllUnityAudio
  commentId: M:Global.SoundLoader.ReleaseAllUnityAudio
  id: ReleaseAllUnityAudio
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ReleaseAllUnityAudio()
  nameWithType: SoundLoader.ReleaseAllUnityAudio()
  fullName: SoundLoader.ReleaseAllUnityAudio()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.ReleaseAllUnityAudio</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseAllUnityAudio()
    content.vb: Public Sub ReleaseAllUnityAudio()
  overload: Global.SoundLoader.ReleaseAllUnityAudio*
- uid: Global.SoundLoader.Update
  commentId: M:Global.SoundLoader.Update
  id: Update
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SoundLoader.Update()
  fullName: SoundLoader.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.SoundLoader.Update*
- uid: Global.SoundLoader.GroupVolume(System.Int32)
  commentId: M:Global.SoundLoader.GroupVolume(System.Int32)
  id: GroupVolume(System.Int32)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: GroupVolume(int)
  nameWithType: SoundLoader.GroupVolume(int)
  fullName: SoundLoader.GroupVolume(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.GroupVolume(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GroupVolume(int line)
    parameters:
    - id: line
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>line</parameter>
            <parameter>M:SoundLoader.GroupVolume(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.GroupVolume(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GroupVolume(line As Integer) As Single
  overload: Global.SoundLoader.GroupVolume*
  nameWithType.vb: SoundLoader.GroupVolume(Integer)
  fullName.vb: SoundLoader.GroupVolume(Integer)
  name.vb: GroupVolume(Integer)
- uid: Global.SoundLoader.LoadSounds
  commentId: M:Global.SoundLoader.LoadSounds
  id: LoadSounds
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: LoadSounds()
  nameWithType: SoundLoader.LoadSounds()
  fullName: SoundLoader.LoadSounds()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.LoadSounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadSounds()
    content.vb: Public Sub LoadSounds()
  overload: Global.SoundLoader.LoadSounds*
- uid: Global.SoundLoader.ShouldSoundPlay(SoundID)
  commentId: M:Global.SoundLoader.ShouldSoundPlay(SoundID)
  id: ShouldSoundPlay(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: ShouldSoundPlay(SoundID)
  nameWithType: SoundLoader.ShouldSoundPlay(SoundID)
  fullName: SoundLoader.ShouldSoundPlay(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.ShouldSoundPlay(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ShouldSoundPlay(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.ShouldSoundPlay(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.ShouldSoundPlay(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShouldSoundPlay(soundID As SoundID) As Boolean
  overload: Global.SoundLoader.ShouldSoundPlay*
- uid: Global.SoundLoader.GetSoundData(SoundID)
  commentId: M:Global.SoundLoader.GetSoundData(SoundID)
  id: GetSoundData(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: GetSoundData(SoundID)
  nameWithType: SoundLoader.GetSoundData(SoundID)
  fullName: SoundLoader.GetSoundData(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.GetSoundData(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader.SoundData GetSoundData(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.GetSoundData(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: Global.SoundLoader.SoundData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.GetSoundData(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetSoundData(soundID As SoundID) As SoundLoader.SoundData
  overload: Global.SoundLoader.GetSoundData*
- uid: Global.SoundLoader.GetSoundData(SoundID,System.Int32)
  commentId: M:Global.SoundLoader.GetSoundData(SoundID,System.Int32)
  id: GetSoundData(SoundID,System.Int32)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: GetSoundData(SoundID, int)
  nameWithType: SoundLoader.GetSoundData(SoundID, int)
  fullName: SoundLoader.GetSoundData(SoundID, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.GetSoundData(SoundID,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundLoader.SoundData GetSoundData(SoundID soundID, int i)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SoundLoader.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.SoundLoader.SoundData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.GetSoundData(SoundID,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetSoundData(soundID As SoundID, i As Integer) As SoundLoader.SoundData
  overload: Global.SoundLoader.GetSoundData*
  nameWithType.vb: SoundLoader.GetSoundData(SoundID, Integer)
  fullName.vb: SoundLoader.GetSoundData(SoundID, Integer)
  name.vb: GetSoundData(SoundID, Integer)
- uid: Global.SoundLoader.TriggerPlayAll(SoundID)
  commentId: M:Global.SoundLoader.TriggerPlayAll(SoundID)
  id: TriggerPlayAll(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: TriggerPlayAll(SoundID)
  nameWithType: SoundLoader.TriggerPlayAll(SoundID)
  fullName: SoundLoader.TriggerPlayAll(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.TriggerPlayAll(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool TriggerPlayAll(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.TriggerPlayAll(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.TriggerPlayAll(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function TriggerPlayAll(soundID As SoundID) As Boolean
  overload: Global.SoundLoader.TriggerPlayAll*
- uid: Global.SoundLoader.TriggerSamples(SoundID)
  commentId: M:Global.SoundLoader.TriggerSamples(SoundID)
  id: TriggerSamples(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: TriggerSamples(SoundID)
  nameWithType: SoundLoader.TriggerSamples(SoundID)
  fullName: SoundLoader.TriggerSamples(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.TriggerSamples(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TriggerSamples(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.TriggerSamples(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.TriggerSamples(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function TriggerSamples(soundID As SoundID) As Integer
  overload: Global.SoundLoader.TriggerSamples*
- uid: Global.SoundLoader.TriggerGroupVolume(SoundID)
  commentId: M:Global.SoundLoader.TriggerGroupVolume(SoundID)
  id: TriggerGroupVolume(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: TriggerGroupVolume(SoundID)
  nameWithType: SoundLoader.TriggerGroupVolume(SoundID)
  fullName: SoundLoader.TriggerGroupVolume(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.TriggerGroupVolume(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float TriggerGroupVolume(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.TriggerGroupVolume(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.TriggerGroupVolume(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function TriggerGroupVolume(soundID As SoundID) As Single
  overload: Global.SoundLoader.TriggerGroupVolume*
- uid: Global.SoundLoader.DontLog(SoundID)
  commentId: M:Global.SoundLoader.DontLog(SoundID)
  id: DontLog(SoundID)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: DontLog(SoundID)
  nameWithType: SoundLoader.DontLog(SoundID)
  fullName: SoundLoader.DontLog(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.DontLog(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DontLog(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:SoundLoader.DontLog(SoundID)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.DontLog(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Function DontLog(soundID As SoundID) As Boolean
  overload: Global.SoundLoader.DontLog*
- uid: Global.SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)
  commentId: M:Global.SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)
  id: GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: GetAudioClip(int, out AssetBundleLoadAssetOperation, out string)
  nameWithType: SoundLoader.GetAudioClip(int, out AssetBundleLoadAssetOperation, out string)
  fullName: SoundLoader.GetAudioClip(int, out AssetBundles.AssetBundleLoadAssetOperation, out string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioClip GetAudioClip(int i, out AssetBundleLoadAssetOperation loadOp, out string name)
    parameters:
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)</parameter>
          </include>
        </markup>
    - id: loadOp
      type: AssetBundles.AssetBundleLoadAssetOperation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loadOp</parameter>
            <parameter>M:SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.AudioClip
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.GetAudioClip(System.Int32,AssetBundles.AssetBundleLoadAssetOperation@,System.String@)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAudioClip(i As Integer, loadOp As AssetBundleLoadAssetOperation, name As String) As AudioClip
  overload: Global.SoundLoader.GetAudioClip*
  nameWithType.vb: SoundLoader.GetAudioClip(Integer, AssetBundleLoadAssetOperation, String)
  fullName.vb: SoundLoader.GetAudioClip(Integer, AssetBundles.AssetBundleLoadAssetOperation, String)
  name.vb: GetAudioClip(Integer, AssetBundleLoadAssetOperation, String)
- uid: Global.SoundLoader.LoadAllAmbientSounds
  commentId: M:Global.SoundLoader.LoadAllAmbientSounds
  id: LoadAllAmbientSounds
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: LoadAllAmbientSounds()
  nameWithType: SoundLoader.LoadAllAmbientSounds()
  fullName: SoundLoader.LoadAllAmbientSounds()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.LoadAllAmbientSounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadAllAmbientSounds()
    content.vb: Public Sub LoadAllAmbientSounds()
  overload: Global.SoundLoader.LoadAllAmbientSounds*
- uid: Global.SoundLoader.RequestAmbientAudioClip(System.String)
  commentId: M:Global.SoundLoader.RequestAmbientAudioClip(System.String)
  id: RequestAmbientAudioClip(System.String)
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: RequestAmbientAudioClip(string)
  nameWithType: SoundLoader.RequestAmbientAudioClip(string)
  fullName: SoundLoader.RequestAmbientAudioClip(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundLoader.RequestAmbientAudioClip(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioClip RequestAmbientAudioClip(string clipName)
    parameters:
    - id: clipName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clipName</parameter>
            <parameter>M:SoundLoader.RequestAmbientAudioClip(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.AudioClip
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SoundLoader.RequestAmbientAudioClip(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function RequestAmbientAudioClip(clipName As String) As AudioClip
  overload: Global.SoundLoader.RequestAmbientAudioClip*
  nameWithType.vb: SoundLoader.RequestAmbientAudioClip(String)
  fullName.vb: SoundLoader.RequestAmbientAudioClip(String)
  name.vb: RequestAmbientAudioClip(String)
- uid: Global.SoundLoader.assetBundlesLoaded
  commentId: P:Global.SoundLoader.assetBundlesLoaded
  id: assetBundlesLoaded
  parent: Global.SoundLoader
  langs:
  - csharp
  - vb
  name: assetBundlesLoaded
  nameWithType: SoundLoader.assetBundlesLoaded
  fullName: SoundLoader.assetBundlesLoaded
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SoundLoader.assetBundlesLoaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool assetBundlesLoaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property assetBundlesLoaded As Boolean
  overload: Global.SoundLoader.assetBundlesLoaded*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.AudioClip}
  commentId: T:System.Collections.Generic.List{UnityEngine.AudioClip}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AudioClip>
  nameWithType: List<AudioClip>
  fullName: System.Collections.Generic.List<UnityEngine.AudioClip>
  nameWithType.vb: List(Of AudioClip)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.AudioClip)
  name.vb: List(Of AudioClip)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.AudioClip
    name: AudioClip
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.AudioClip
    name: AudioClip
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{SoundLoader.AmbientImporter}
  commentId: T:System.Collections.Generic.List{SoundLoader.AmbientImporter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SoundLoader.AmbientImporter>
  nameWithType: List<SoundLoader.AmbientImporter>
  fullName: System.Collections.Generic.List<SoundLoader.AmbientImporter>
  nameWithType.vb: List(Of SoundLoader.AmbientImporter)
  fullName.vb: System.Collections.Generic.List(Of SoundLoader.AmbientImporter)
  name.vb: List(Of SoundLoader.AmbientImporter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.AmbientImporter
    name: AmbientImporter
    isExternal: true
    href: SoundLoader.AmbientImporter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.AmbientImporter
    name: AmbientImporter
    isExternal: true
    href: SoundLoader.AmbientImporter.html
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Global.SoundLoader.#ctor*
  commentId: Overload:Global.SoundLoader.#ctor
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader__ctor_System_Boolean_RainWorld_
  name: SoundLoader
  nameWithType: SoundLoader.SoundLoader
  fullName: SoundLoader.SoundLoader
  nameWithType.vb: SoundLoader.New
  fullName.vb: SoundLoader.New
  name.vb: New
- uid: Global.RainWorld
  commentId: T:Global.RainWorld
  isExternal: true
  href: RainWorld.html
  name: RainWorld
  nameWithType: RainWorld
  fullName: RainWorld
- uid: Global.SoundLoader.ReleaseAllUnityAudio*
  commentId: Overload:Global.SoundLoader.ReleaseAllUnityAudio
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_ReleaseAllUnityAudio
  name: ReleaseAllUnityAudio
  nameWithType: SoundLoader.ReleaseAllUnityAudio
  fullName: SoundLoader.ReleaseAllUnityAudio
- uid: Global.SoundLoader.Update*
  commentId: Overload:Global.SoundLoader.Update
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_Update
  name: Update
  nameWithType: SoundLoader.Update
  fullName: SoundLoader.Update
- uid: Global.SoundLoader.GroupVolume*
  commentId: Overload:Global.SoundLoader.GroupVolume
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_GroupVolume_System_Int32_
  name: GroupVolume
  nameWithType: SoundLoader.GroupVolume
  fullName: SoundLoader.GroupVolume
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SoundLoader.LoadSounds*
  commentId: Overload:Global.SoundLoader.LoadSounds
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_LoadSounds
  name: LoadSounds
  nameWithType: SoundLoader.LoadSounds
  fullName: SoundLoader.LoadSounds
- uid: Global.SoundLoader.ShouldSoundPlay*
  commentId: Overload:Global.SoundLoader.ShouldSoundPlay
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_ShouldSoundPlay_SoundID_
  name: ShouldSoundPlay
  nameWithType: SoundLoader.ShouldSoundPlay
  fullName: SoundLoader.ShouldSoundPlay
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: Global.SoundLoader.GetSoundData*
  commentId: Overload:Global.SoundLoader.GetSoundData
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_GetSoundData_SoundID_
  name: GetSoundData
  nameWithType: SoundLoader.GetSoundData
  fullName: SoundLoader.GetSoundData
- uid: Global.SoundLoader.SoundData
  commentId: T:Global.SoundLoader.SoundData
  isExternal: true
  href: SoundLoader.html
  name: SoundLoader.SoundData
  nameWithType: SoundLoader.SoundData
  fullName: SoundLoader.SoundData
  spec.csharp:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
  spec.vb:
  - uid: Global.SoundLoader
    name: SoundLoader
    isExternal: true
    href: SoundLoader.html
  - name: .
  - uid: Global.SoundLoader.SoundData
    name: SoundData
    isExternal: true
    href: SoundLoader.SoundData.html
- uid: Global.SoundLoader.TriggerPlayAll*
  commentId: Overload:Global.SoundLoader.TriggerPlayAll
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_TriggerPlayAll_SoundID_
  name: TriggerPlayAll
  nameWithType: SoundLoader.TriggerPlayAll
  fullName: SoundLoader.TriggerPlayAll
- uid: Global.SoundLoader.TriggerSamples*
  commentId: Overload:Global.SoundLoader.TriggerSamples
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_TriggerSamples_SoundID_
  name: TriggerSamples
  nameWithType: SoundLoader.TriggerSamples
  fullName: SoundLoader.TriggerSamples
- uid: Global.SoundLoader.TriggerGroupVolume*
  commentId: Overload:Global.SoundLoader.TriggerGroupVolume
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_TriggerGroupVolume_SoundID_
  name: TriggerGroupVolume
  nameWithType: SoundLoader.TriggerGroupVolume
  fullName: SoundLoader.TriggerGroupVolume
- uid: Global.SoundLoader.DontLog*
  commentId: Overload:Global.SoundLoader.DontLog
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_DontLog_SoundID_
  name: DontLog
  nameWithType: SoundLoader.DontLog
  fullName: SoundLoader.DontLog
- uid: Global.SoundLoader.GetAudioClip*
  commentId: Overload:Global.SoundLoader.GetAudioClip
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_GetAudioClip_System_Int32_AssetBundles_AssetBundleLoadAssetOperation__System_String__
  name: GetAudioClip
  nameWithType: SoundLoader.GetAudioClip
  fullName: SoundLoader.GetAudioClip
- uid: AssetBundles.AssetBundleLoadAssetOperation
  isExternal: true
  name: AssetBundleLoadAssetOperation
  nameWithType: AssetBundleLoadAssetOperation
  fullName: AssetBundles.AssetBundleLoadAssetOperation
- uid: UnityEngine.AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: UnityEngine.AudioClip
- uid: Global.SoundLoader.LoadAllAmbientSounds*
  commentId: Overload:Global.SoundLoader.LoadAllAmbientSounds
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_LoadAllAmbientSounds
  name: LoadAllAmbientSounds
  nameWithType: SoundLoader.LoadAllAmbientSounds
  fullName: SoundLoader.LoadAllAmbientSounds
- uid: Global.SoundLoader.RequestAmbientAudioClip*
  commentId: Overload:Global.SoundLoader.RequestAmbientAudioClip
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_RequestAmbientAudioClip_System_String_
  name: RequestAmbientAudioClip
  nameWithType: SoundLoader.RequestAmbientAudioClip
  fullName: SoundLoader.RequestAmbientAudioClip
- uid: Global.SoundLoader.assetBundlesLoaded*
  commentId: Overload:Global.SoundLoader.assetBundlesLoaded
  isExternal: true
  href: Global.SoundLoader.html#SoundLoader_assetBundlesLoaded
  name: assetBundlesLoaded
  nameWithType: SoundLoader.assetBundlesLoaded
  fullName: SoundLoader.assetBundlesLoaded
