### YamlMime:ManagedReference
items:
- uid: Global.Conversation.IOwnAConversation
  commentId: T:Global.Conversation.IOwnAConversation
  id: Conversation.IOwnAConversation
  parent: Global
  children:
  - Global.Conversation.IOwnAConversation.ReplaceParts(System.String)
  - Global.Conversation.IOwnAConversation.SpecialEvent(System.String)
  langs:
  - csharp
  - vb
  name: Conversation.IOwnAConversation
  nameWithType: Conversation.IOwnAConversation
  fullName: Conversation.IOwnAConversation
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Conversation.IOwnAConversation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface Conversation.IOwnAConversation
    content.vb: Public Interface Conversation.IOwnAConversation
- uid: Global.Conversation.IOwnAConversation.ReplaceParts(System.String)
  commentId: M:Global.Conversation.IOwnAConversation.ReplaceParts(System.String)
  id: ReplaceParts(System.String)
  parent: Global.Conversation.IOwnAConversation
  langs:
  - csharp
  - vb
  name: ReplaceParts(string)
  nameWithType: Conversation.IOwnAConversation.ReplaceParts(string)
  fullName: Conversation.IOwnAConversation.ReplaceParts(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Conversation.IOwnAConversation.ReplaceParts(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: string ReplaceParts(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:Conversation.IOwnAConversation.ReplaceParts(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Conversation.IOwnAConversation.ReplaceParts(System.String)</parameter>
          </include>
        </markup>
    content.vb: Function ReplaceParts(s As String) As String
  overload: Global.Conversation.IOwnAConversation.ReplaceParts*
  nameWithType.vb: Conversation.IOwnAConversation.ReplaceParts(String)
  fullName.vb: Conversation.IOwnAConversation.ReplaceParts(String)
  name.vb: ReplaceParts(String)
- uid: Global.Conversation.IOwnAConversation.SpecialEvent(System.String)
  commentId: M:Global.Conversation.IOwnAConversation.SpecialEvent(System.String)
  id: SpecialEvent(System.String)
  parent: Global.Conversation.IOwnAConversation
  langs:
  - csharp
  - vb
  name: SpecialEvent(string)
  nameWithType: Conversation.IOwnAConversation.SpecialEvent(string)
  fullName: Conversation.IOwnAConversation.SpecialEvent(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Conversation.IOwnAConversation.SpecialEvent(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void SpecialEvent(string eventName)
    parameters:
    - id: eventName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eventName</parameter>
            <parameter>M:Conversation.IOwnAConversation.SpecialEvent(System.String)</parameter>
          </include>
        </markup>
    content.vb: Sub SpecialEvent(eventName As String)
  overload: Global.Conversation.IOwnAConversation.SpecialEvent*
  nameWithType.vb: Conversation.IOwnAConversation.SpecialEvent(String)
  fullName.vb: Conversation.IOwnAConversation.SpecialEvent(String)
  name.vb: SpecialEvent(String)
references:
- uid: Global
- uid: Global.Conversation.IOwnAConversation.ReplaceParts*
  commentId: Overload:Global.Conversation.IOwnAConversation.ReplaceParts
  isExternal: true
  href: Global.Conversation.IOwnAConversation.html#Conversation_IOwnAConversation_ReplaceParts_System_String_
  name: ReplaceParts
  nameWithType: Conversation.IOwnAConversation.ReplaceParts
  fullName: Conversation.IOwnAConversation.ReplaceParts
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Conversation.IOwnAConversation.SpecialEvent*
  commentId: Overload:Global.Conversation.IOwnAConversation.SpecialEvent
  isExternal: true
  href: Global.Conversation.IOwnAConversation.html#Conversation_IOwnAConversation_SpecialEvent_System_String_
  name: SpecialEvent
  nameWithType: Conversation.IOwnAConversation.SpecialEvent
  fullName: Conversation.IOwnAConversation.SpecialEvent
