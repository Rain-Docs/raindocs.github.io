### YamlMime:ManagedReference
items:
- uid: VoidSea.PlayerGhosts.Ghost
  commentId: T:VoidSea.PlayerGhosts.Ghost
  id: PlayerGhosts.Ghost
  parent: VoidSea
  children:
  - VoidSea.PlayerGhosts.Ghost.#ctor(VoidSea.PlayerGhosts,Player)
  - VoidSea.PlayerGhosts.Ghost.Destroy
  - VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)
  - VoidSea.PlayerGhosts.Ghost.Update
  - VoidSea.PlayerGhosts.Ghost.creature
  - VoidSea.PlayerGhosts.Ghost.drift
  - VoidSea.PlayerGhosts.Ghost.owner
  - VoidSea.PlayerGhosts.Ghost.slatedForDeletion
  - VoidSea.PlayerGhosts.Ghost.swimSpeed
  langs:
  - csharp
  - vb
  name: PlayerGhosts.Ghost
  nameWithType: PlayerGhosts.Ghost
  fullName: VoidSea.PlayerGhosts.Ghost
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: A single voidsea player ghost that follows the movements of the player with a slight deviation in swim speed.
  example: []
  syntax:
    content: public class PlayerGhosts.Ghost
    content.vb: Public Class PlayerGhosts.Ghost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: VoidSea.PlayerGhosts.Ghost.owner
  commentId: F:VoidSea.PlayerGhosts.Ghost.owner
  id: owner
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: PlayerGhosts.Ghost.owner
  fullName: VoidSea.PlayerGhosts.Ghost.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.Ghost.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerGhosts owner
    return:
      type: VoidSea.PlayerGhosts
    content.vb: Public owner As PlayerGhosts
- uid: VoidSea.PlayerGhosts.Ghost.creature
  commentId: F:VoidSea.PlayerGhosts.Ghost.creature
  id: creature
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: creature
  nameWithType: PlayerGhosts.Ghost.creature
  fullName: VoidSea.PlayerGhosts.Ghost.creature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.Ghost.creature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player creature
    return:
      type: Global.Player
    content.vb: Public creature As Player
- uid: VoidSea.PlayerGhosts.Ghost.swimSpeed
  commentId: F:VoidSea.PlayerGhosts.Ghost.swimSpeed
  id: swimSpeed
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: swimSpeed
  nameWithType: PlayerGhosts.Ghost.swimSpeed
  fullName: VoidSea.PlayerGhosts.Ghost.swimSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.Ghost.swimSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimSpeed
    return:
      type: System.Single
    content.vb: Public swimSpeed As Single
- uid: VoidSea.PlayerGhosts.Ghost.drift
  commentId: F:VoidSea.PlayerGhosts.Ghost.drift
  id: drift
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: drift
  nameWithType: PlayerGhosts.Ghost.drift
  fullName: VoidSea.PlayerGhosts.Ghost.drift
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.Ghost.drift</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 drift
    return:
      type: UnityEngine.Vector2
    content.vb: Public drift As Vector2
- uid: VoidSea.PlayerGhosts.Ghost.slatedForDeletion
  commentId: F:VoidSea.PlayerGhosts.Ghost.slatedForDeletion
  id: slatedForDeletion
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: PlayerGhosts.Ghost.slatedForDeletion
  fullName: VoidSea.PlayerGhosts.Ghost.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.Ghost.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: VoidSea.PlayerGhosts.Ghost.#ctor(VoidSea.PlayerGhosts,Player)
  commentId: M:VoidSea.PlayerGhosts.Ghost.#ctor(VoidSea.PlayerGhosts,Player)
  id: '#ctor(VoidSea.PlayerGhosts,Player)'
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: Ghost(PlayerGhosts, Player)
  nameWithType: PlayerGhosts.Ghost.Ghost(PlayerGhosts, Player)
  fullName: VoidSea.PlayerGhosts.Ghost.Ghost(VoidSea.PlayerGhosts, Player)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>VoidSea.PlayerGhosts.Ghost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Ghost(PlayerGhosts owner, Player creature)
    parameters:
    - id: owner
      type: VoidSea.PlayerGhosts
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:VoidSea.PlayerGhosts.Ghost.#ctor(VoidSea.PlayerGhosts,Player)</parameter>
          </include>
        </markup>
    - id: creature
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:VoidSea.PlayerGhosts.Ghost.#ctor(VoidSea.PlayerGhosts,Player)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As PlayerGhosts, creature As Player)
  overload: VoidSea.PlayerGhosts.Ghost.#ctor*
  nameWithType.vb: PlayerGhosts.Ghost.New(PlayerGhosts, Player)
  fullName.vb: VoidSea.PlayerGhosts.Ghost.New(VoidSea.PlayerGhosts, Player)
  name.vb: New(PlayerGhosts, Player)
- uid: VoidSea.PlayerGhosts.Ghost.Update
  commentId: M:VoidSea.PlayerGhosts.Ghost.Update
  id: Update
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: PlayerGhosts.Ghost.Update()
  fullName: VoidSea.PlayerGhosts.Ghost.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSea.PlayerGhosts.Ghost.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: VoidSea.PlayerGhosts.Ghost.Update*
- uid: VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)
  commentId: M:VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)
  id: MoveCreature(UnityEngine.Vector2)
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: MoveCreature(Vector2)
  nameWithType: PlayerGhosts.Ghost.MoveCreature(Vector2)
  fullName: VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveCreature(Vector2 movePos)
    parameters:
    - id: movePos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movePos</parameter>
            <parameter>M:VoidSea.PlayerGhosts.Ghost.MoveCreature(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveCreature(movePos As Vector2)
  overload: VoidSea.PlayerGhosts.Ghost.MoveCreature*
- uid: VoidSea.PlayerGhosts.Ghost.Destroy
  commentId: M:VoidSea.PlayerGhosts.Ghost.Destroy
  id: Destroy
  parent: VoidSea.PlayerGhosts.Ghost
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: PlayerGhosts.Ghost.Destroy()
  fullName: VoidSea.PlayerGhosts.Ghost.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSea.PlayerGhosts.Ghost.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: VoidSea.PlayerGhosts.Ghost.Destroy*
references:
- uid: VoidSea
  commentId: N:VoidSea
  isExternal: true
  href: VoidSea.html
  name: VoidSea
  nameWithType: VoidSea
  fullName: VoidSea
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VoidSea.PlayerGhosts
  commentId: T:VoidSea.PlayerGhosts
  parent: VoidSea
  isExternal: true
  href: VoidSea.PlayerGhosts.html
  name: PlayerGhosts
  nameWithType: PlayerGhosts
  fullName: VoidSea.PlayerGhosts
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: VoidSea.PlayerGhosts.Ghost.#ctor*
  commentId: Overload:VoidSea.PlayerGhosts.Ghost.#ctor
  isExternal: true
  href: VoidSea.PlayerGhosts.Ghost.html#VoidSea_PlayerGhosts_Ghost__ctor_VoidSea_PlayerGhosts_Player_
  name: Ghost
  nameWithType: PlayerGhosts.Ghost.Ghost
  fullName: VoidSea.PlayerGhosts.Ghost.Ghost
  nameWithType.vb: PlayerGhosts.Ghost.New
  fullName.vb: VoidSea.PlayerGhosts.Ghost.New
  name.vb: New
- uid: VoidSea.PlayerGhosts.Ghost.Update*
  commentId: Overload:VoidSea.PlayerGhosts.Ghost.Update
  isExternal: true
  href: VoidSea.PlayerGhosts.Ghost.html#VoidSea_PlayerGhosts_Ghost_Update
  name: Update
  nameWithType: PlayerGhosts.Ghost.Update
  fullName: VoidSea.PlayerGhosts.Ghost.Update
- uid: VoidSea.PlayerGhosts.Ghost.MoveCreature*
  commentId: Overload:VoidSea.PlayerGhosts.Ghost.MoveCreature
  isExternal: true
  href: VoidSea.PlayerGhosts.Ghost.html#VoidSea_PlayerGhosts_Ghost_MoveCreature_UnityEngine_Vector2_
  name: MoveCreature
  nameWithType: PlayerGhosts.Ghost.MoveCreature
  fullName: VoidSea.PlayerGhosts.Ghost.MoveCreature
- uid: VoidSea.PlayerGhosts.Ghost.Destroy*
  commentId: Overload:VoidSea.PlayerGhosts.Ghost.Destroy
  isExternal: true
  href: VoidSea.PlayerGhosts.Ghost.html#VoidSea_PlayerGhosts_Ghost_Destroy
  name: Destroy
  nameWithType: PlayerGhosts.Ghost.Destroy
  fullName: VoidSea.PlayerGhosts.Ghost.Destroy
