### YamlMime:ManagedReference
items:
- uid: HUD.KarmaMeter
  commentId: T:HUD.KarmaMeter
  id: KarmaMeter
  parent: HUD
  children:
  - HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)
  - HUD.KarmaMeter.AnyVisibility
  - HUD.KarmaMeter.ClearScavengerFlash
  - HUD.KarmaMeter.ClearSprites
  - HUD.KarmaMeter.Draw(System.Single)
  - HUD.KarmaMeter.DrawPos(System.Single)
  - HUD.KarmaMeter.DropScavengerFlash
  - HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)
  - HUD.KarmaMeter.Radius
  - HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)
  - HUD.KarmaMeter.Show
  - HUD.KarmaMeter.Update
  - HUD.KarmaMeter.UpdateGraphic
  - HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)
  - HUD.KarmaMeter.blinkRedCounter
  - HUD.KarmaMeter.darkFade
  - HUD.KarmaMeter.displayKarma
  - HUD.KarmaMeter.fade
  - HUD.KarmaMeter.forceVisibleCounter
  - HUD.KarmaMeter.glowSprite
  - HUD.KarmaMeter.glowyFac
  - HUD.KarmaMeter.karmaSprite
  - HUD.KarmaMeter.lastFade
  - HUD.KarmaMeter.lastGlowyFac
  - HUD.KarmaMeter.lastPos
  - HUD.KarmaMeter.lastRad
  - HUD.KarmaMeter.lastReinforcementCycle
  - HUD.KarmaMeter.pos
  - HUD.KarmaMeter.rad
  - HUD.KarmaMeter.reinforceAnimation
  - HUD.KarmaMeter.reinforcementCycle
  - HUD.KarmaMeter.ringSprite
  - HUD.KarmaMeter.showAsReinforced
  - HUD.KarmaMeter.timer
  - HUD.KarmaMeter.vectorRingSprite
  langs:
  - csharp
  - vb
  name: KarmaMeter
  nameWithType: KarmaMeter
  fullName: HUD.KarmaMeter
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.KarmaMeter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class KarmaMeter : HudPart'
    content.vb: Public Class KarmaMeter Inherits HudPart
  inheritance:
  - System.Object
  - HUD.HudPart
  inheritedMembers:
  - HUD.HudPart.hud
  - HUD.HudPart.slatedForDeletion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.KarmaMeter.karmaSprite
  commentId: F:HUD.KarmaMeter.karmaSprite
  id: karmaSprite
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: karmaSprite
  nameWithType: KarmaMeter.karmaSprite
  fullName: HUD.KarmaMeter.karmaSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.karmaSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite karmaSprite
    return:
      type: Global.FSprite
    content.vb: Public karmaSprite As FSprite
- uid: HUD.KarmaMeter.darkFade
  commentId: F:HUD.KarmaMeter.darkFade
  id: darkFade
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: darkFade
  nameWithType: KarmaMeter.darkFade
  fullName: HUD.KarmaMeter.darkFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.darkFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite darkFade
    return:
      type: Global.FSprite
    content.vb: Public darkFade As FSprite
- uid: HUD.KarmaMeter.ringSprite
  commentId: F:HUD.KarmaMeter.ringSprite
  id: ringSprite
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: ringSprite
  nameWithType: KarmaMeter.ringSprite
  fullName: HUD.KarmaMeter.ringSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.ringSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite ringSprite
    return:
      type: Global.FSprite
    content.vb: Public ringSprite As FSprite
- uid: HUD.KarmaMeter.vectorRingSprite
  commentId: F:HUD.KarmaMeter.vectorRingSprite
  id: vectorRingSprite
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: vectorRingSprite
  nameWithType: KarmaMeter.vectorRingSprite
  fullName: HUD.KarmaMeter.vectorRingSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.vectorRingSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite vectorRingSprite
    return:
      type: Global.FSprite
    content.vb: Public vectorRingSprite As FSprite
- uid: HUD.KarmaMeter.glowSprite
  commentId: F:HUD.KarmaMeter.glowSprite
  id: glowSprite
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: glowSprite
  nameWithType: KarmaMeter.glowSprite
  fullName: HUD.KarmaMeter.glowSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.glowSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite glowSprite
    return:
      type: Global.FSprite
    content.vb: Public glowSprite As FSprite
- uid: HUD.KarmaMeter.pos
  commentId: F:HUD.KarmaMeter.pos
  id: pos
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: KarmaMeter.pos
  fullName: HUD.KarmaMeter.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: HUD.KarmaMeter.lastPos
  commentId: F:HUD.KarmaMeter.lastPos
  id: lastPos
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: KarmaMeter.lastPos
  fullName: HUD.KarmaMeter.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: HUD.KarmaMeter.forceVisibleCounter
  commentId: F:HUD.KarmaMeter.forceVisibleCounter
  id: forceVisibleCounter
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: forceVisibleCounter
  nameWithType: KarmaMeter.forceVisibleCounter
  fullName: HUD.KarmaMeter.forceVisibleCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.forceVisibleCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int forceVisibleCounter
    return:
      type: System.Int32
    content.vb: Public forceVisibleCounter As Integer
- uid: HUD.KarmaMeter.fade
  commentId: F:HUD.KarmaMeter.fade
  id: fade
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: fade
  nameWithType: KarmaMeter.fade
  fullName: HUD.KarmaMeter.fade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.fade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fade
    return:
      type: System.Single
    content.vb: Public fade As Single
- uid: HUD.KarmaMeter.lastFade
  commentId: F:HUD.KarmaMeter.lastFade
  id: lastFade
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: lastFade
  nameWithType: KarmaMeter.lastFade
  fullName: HUD.KarmaMeter.lastFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.lastFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFade
    return:
      type: System.Single
    content.vb: Public lastFade As Single
- uid: HUD.KarmaMeter.rad
  commentId: F:HUD.KarmaMeter.rad
  id: rad
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: KarmaMeter.rad
  fullName: HUD.KarmaMeter.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: HUD.KarmaMeter.lastRad
  commentId: F:HUD.KarmaMeter.lastRad
  id: lastRad
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: lastRad
  nameWithType: KarmaMeter.lastRad
  fullName: HUD.KarmaMeter.lastRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.lastRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastRad
    return:
      type: System.Single
    content.vb: Public lastRad As Single
- uid: HUD.KarmaMeter.displayKarma
  commentId: F:HUD.KarmaMeter.displayKarma
  id: displayKarma
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: displayKarma
  nameWithType: KarmaMeter.displayKarma
  fullName: HUD.KarmaMeter.displayKarma
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.displayKarma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 displayKarma
    return:
      type: RWCustom.IntVector2
    content.vb: Public displayKarma As IntVector2
- uid: HUD.KarmaMeter.showAsReinforced
  commentId: F:HUD.KarmaMeter.showAsReinforced
  id: showAsReinforced
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: showAsReinforced
  nameWithType: KarmaMeter.showAsReinforced
  fullName: HUD.KarmaMeter.showAsReinforced
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.showAsReinforced</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool showAsReinforced
    return:
      type: System.Boolean
    content.vb: Public showAsReinforced As Boolean
- uid: HUD.KarmaMeter.reinforceAnimation
  commentId: F:HUD.KarmaMeter.reinforceAnimation
  id: reinforceAnimation
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: reinforceAnimation
  nameWithType: KarmaMeter.reinforceAnimation
  fullName: HUD.KarmaMeter.reinforceAnimation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.reinforceAnimation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int reinforceAnimation
    return:
      type: System.Int32
    content.vb: Public reinforceAnimation As Integer
- uid: HUD.KarmaMeter.glowyFac
  commentId: F:HUD.KarmaMeter.glowyFac
  id: glowyFac
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: glowyFac
  nameWithType: KarmaMeter.glowyFac
  fullName: HUD.KarmaMeter.glowyFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.glowyFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float glowyFac
    return:
      type: System.Single
    content.vb: Public glowyFac As Single
- uid: HUD.KarmaMeter.lastGlowyFac
  commentId: F:HUD.KarmaMeter.lastGlowyFac
  id: lastGlowyFac
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: lastGlowyFac
  nameWithType: KarmaMeter.lastGlowyFac
  fullName: HUD.KarmaMeter.lastGlowyFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.lastGlowyFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastGlowyFac
    return:
      type: System.Single
    content.vb: Public lastGlowyFac As Single
- uid: HUD.KarmaMeter.reinforcementCycle
  commentId: F:HUD.KarmaMeter.reinforcementCycle
  id: reinforcementCycle
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: reinforcementCycle
  nameWithType: KarmaMeter.reinforcementCycle
  fullName: HUD.KarmaMeter.reinforcementCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.reinforcementCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementCycle
    return:
      type: System.Single
    content.vb: Public reinforcementCycle As Single
- uid: HUD.KarmaMeter.lastReinforcementCycle
  commentId: F:HUD.KarmaMeter.lastReinforcementCycle
  id: lastReinforcementCycle
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: lastReinforcementCycle
  nameWithType: KarmaMeter.lastReinforcementCycle
  fullName: HUD.KarmaMeter.lastReinforcementCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.lastReinforcementCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementCycle
    return:
      type: System.Single
    content.vb: Public lastReinforcementCycle As Single
- uid: HUD.KarmaMeter.blinkRedCounter
  commentId: F:HUD.KarmaMeter.blinkRedCounter
  id: blinkRedCounter
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: blinkRedCounter
  nameWithType: KarmaMeter.blinkRedCounter
  fullName: HUD.KarmaMeter.blinkRedCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.blinkRedCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int blinkRedCounter
    return:
      type: System.Int32
    content.vb: Public blinkRedCounter As Integer
- uid: HUD.KarmaMeter.timer
  commentId: F:HUD.KarmaMeter.timer
  id: timer
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: timer
  nameWithType: KarmaMeter.timer
  fullName: HUD.KarmaMeter.timer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.KarmaMeter.timer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timer
    return:
      type: System.Int32
    content.vb: Public timer As Integer
- uid: HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)
  commentId: M:HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)
  id: '#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)'
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: KarmaMeter(HUD, FContainer, IntVector2, bool)
  nameWithType: KarmaMeter.KarmaMeter(HUD, FContainer, IntVector2, bool)
  fullName: HUD.KarmaMeter.KarmaMeter(HUD.HUD, FContainer, RWCustom.IntVector2, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.KarmaMeter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KarmaMeter(HUD hud, FContainer fContainer, IntVector2 displayKarma, bool showAsReinforced)
    parameters:
    - id: hud
      type: HUD.HUD
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hud</parameter>
            <parameter>M:HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: fContainer
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fContainer</parameter>
            <parameter>M:HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: displayKarma
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayKarma</parameter>
            <parameter>M:HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: showAsReinforced
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>showAsReinforced</parameter>
            <parameter>M:HUD.KarmaMeter.#ctor(HUD.HUD,FContainer,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(hud As HUD, fContainer As FContainer, displayKarma As IntVector2, showAsReinforced As Boolean)
  overload: HUD.KarmaMeter.#ctor*
  nameWithType.vb: KarmaMeter.New(HUD, FContainer, IntVector2, Boolean)
  fullName.vb: HUD.KarmaMeter.New(HUD.HUD, FContainer, RWCustom.IntVector2, Boolean)
  name.vb: New(HUD, FContainer, IntVector2, Boolean)
- uid: HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)
  commentId: M:HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)
  id: KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: KarmaSymbolSprite(bool, IntVector2)
  nameWithType: KarmaMeter.KarmaSymbolSprite(bool, IntVector2)
  fullName: HUD.KarmaMeter.KarmaSymbolSprite(bool, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string KarmaSymbolSprite(bool small, IntVector2 k)
    parameters:
    - id: small
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>small</parameter>
            <parameter>M:HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: k
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>k</parameter>
            <parameter>M:HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.KarmaMeter.KarmaSymbolSprite(System.Boolean,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function KarmaSymbolSprite(small As Boolean, k As IntVector2) As String
  overload: HUD.KarmaMeter.KarmaSymbolSprite*
  nameWithType.vb: KarmaMeter.KarmaSymbolSprite(Boolean, IntVector2)
  fullName.vb: HUD.KarmaMeter.KarmaSymbolSprite(Boolean, RWCustom.IntVector2)
  name.vb: KarmaSymbolSprite(Boolean, IntVector2)
- uid: HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)
  commentId: M:HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)
  id: RippleSymbolSprite(System.Boolean,System.Single)
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: RippleSymbolSprite(bool, float)
  nameWithType: KarmaMeter.RippleSymbolSprite(bool, float)
  fullName: HUD.KarmaMeter.RippleSymbolSprite(bool, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string RippleSymbolSprite(bool small, float rippleLevel)
    parameters:
    - id: small
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>small</parameter>
            <parameter>M:HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    - id: rippleLevel
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rippleLevel</parameter>
            <parameter>M:HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.KarmaMeter.RippleSymbolSprite(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RippleSymbolSprite(small As Boolean, rippleLevel As Single) As String
  overload: HUD.KarmaMeter.RippleSymbolSprite*
  nameWithType.vb: KarmaMeter.RippleSymbolSprite(Boolean, Single)
  fullName.vb: HUD.KarmaMeter.RippleSymbolSprite(Boolean, Single)
  name.vb: RippleSymbolSprite(Boolean, Single)
- uid: HUD.KarmaMeter.ClearScavengerFlash
  commentId: M:HUD.KarmaMeter.ClearScavengerFlash
  id: ClearScavengerFlash
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: ClearScavengerFlash()
  nameWithType: KarmaMeter.ClearScavengerFlash()
  fullName: HUD.KarmaMeter.ClearScavengerFlash()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.ClearScavengerFlash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClearScavengerFlash()
    content.vb: Public Sub ClearScavengerFlash()
  overload: HUD.KarmaMeter.ClearScavengerFlash*
- uid: HUD.KarmaMeter.DropScavengerFlash
  commentId: M:HUD.KarmaMeter.DropScavengerFlash
  id: DropScavengerFlash
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: DropScavengerFlash()
  nameWithType: KarmaMeter.DropScavengerFlash()
  fullName: HUD.KarmaMeter.DropScavengerFlash()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.DropScavengerFlash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DropScavengerFlash()
    content.vb: Public Sub DropScavengerFlash()
  overload: HUD.KarmaMeter.DropScavengerFlash*
- uid: HUD.KarmaMeter.Update
  commentId: M:HUD.KarmaMeter.Update
  id: Update
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: KarmaMeter.Update()
  fullName: HUD.KarmaMeter.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: HUD.HudPart.Update
  overload: HUD.KarmaMeter.Update*
- uid: HUD.KarmaMeter.UpdateGraphic
  commentId: M:HUD.KarmaMeter.UpdateGraphic
  id: UpdateGraphic
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: UpdateGraphic()
  nameWithType: KarmaMeter.UpdateGraphic()
  fullName: HUD.KarmaMeter.UpdateGraphic()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.UpdateGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateGraphic()
    content.vb: Public Sub UpdateGraphic()
  overload: HUD.KarmaMeter.UpdateGraphic*
- uid: HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)
  commentId: M:HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)
  id: UpdateGraphic(System.Int32,System.Int32)
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: UpdateGraphic(int, int)
  nameWithType: KarmaMeter.UpdateGraphic(int, int)
  fullName: HUD.KarmaMeter.UpdateGraphic(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateGraphic(int karma, int cap)
    parameters:
    - id: karma
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>karma</parameter>
            <parameter>M:HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: cap
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cap</parameter>
            <parameter>M:HUD.KarmaMeter.UpdateGraphic(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateGraphic(karma As Integer, cap As Integer)
  overload: HUD.KarmaMeter.UpdateGraphic*
  nameWithType.vb: KarmaMeter.UpdateGraphic(Integer, Integer)
  fullName.vb: HUD.KarmaMeter.UpdateGraphic(Integer, Integer)
  name.vb: UpdateGraphic(Integer, Integer)
- uid: HUD.KarmaMeter.DrawPos(System.Single)
  commentId: M:HUD.KarmaMeter.DrawPos(System.Single)
  id: DrawPos(System.Single)
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: DrawPos(float)
  nameWithType: KarmaMeter.DrawPos(float)
  fullName: HUD.KarmaMeter.DrawPos(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.DrawPos(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 DrawPos(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.KarmaMeter.DrawPos(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.KarmaMeter.DrawPos(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function DrawPos(timeStacker As Single) As Vector2
  overload: HUD.KarmaMeter.DrawPos*
  nameWithType.vb: KarmaMeter.DrawPos(Single)
  fullName.vb: HUD.KarmaMeter.DrawPos(Single)
  name.vb: DrawPos(Single)
- uid: HUD.KarmaMeter.Draw(System.Single)
  commentId: M:HUD.KarmaMeter.Draw(System.Single)
  id: Draw(System.Single)
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: Draw(float)
  nameWithType: KarmaMeter.Draw(float)
  fullName: HUD.KarmaMeter.Draw(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.Draw(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Draw(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.KarmaMeter.Draw(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Draw(timeStacker As Single)
  overridden: HUD.HudPart.Draw(System.Single)
  overload: HUD.KarmaMeter.Draw*
  nameWithType.vb: KarmaMeter.Draw(Single)
  fullName.vb: HUD.KarmaMeter.Draw(Single)
  name.vb: Draw(Single)
- uid: HUD.KarmaMeter.ClearSprites
  commentId: M:HUD.KarmaMeter.ClearSprites
  id: ClearSprites
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: ClearSprites()
  nameWithType: KarmaMeter.ClearSprites()
  fullName: HUD.KarmaMeter.ClearSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.KarmaMeter.ClearSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ClearSprites()
    content.vb: Public Overrides Sub ClearSprites()
  overridden: HUD.HudPart.ClearSprites
  overload: HUD.KarmaMeter.ClearSprites*
- uid: HUD.KarmaMeter.Radius
  commentId: P:HUD.KarmaMeter.Radius
  id: Radius
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: Radius
  nameWithType: KarmaMeter.Radius
  fullName: HUD.KarmaMeter.Radius
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.KarmaMeter.Radius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Radius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Radius As Single
  overload: HUD.KarmaMeter.Radius*
- uid: HUD.KarmaMeter.Show
  commentId: P:HUD.KarmaMeter.Show
  id: Show
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: Show
  nameWithType: KarmaMeter.Show
  fullName: HUD.KarmaMeter.Show
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.KarmaMeter.Show</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Show { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Show As Boolean
  overload: HUD.KarmaMeter.Show*
- uid: HUD.KarmaMeter.AnyVisibility
  commentId: P:HUD.KarmaMeter.AnyVisibility
  id: AnyVisibility
  parent: HUD.KarmaMeter
  langs:
  - csharp
  - vb
  name: AnyVisibility
  nameWithType: KarmaMeter.AnyVisibility
  fullName: HUD.KarmaMeter.AnyVisibility
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.KarmaMeter.AnyVisibility</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AnyVisibility { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyVisibility As Boolean
  overload: HUD.KarmaMeter.AnyVisibility*
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: HUD.HudPart
  commentId: T:HUD.HudPart
  parent: HUD
  isExternal: true
  href: HUD.HudPart.html
  name: HudPart
  nameWithType: HudPart
  fullName: HUD.HudPart
- uid: HUD.HudPart.hud
  commentId: F:HUD.HudPart.hud
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_hud
  name: hud
  nameWithType: HudPart.hud
  fullName: HUD.HudPart.hud
- uid: HUD.HudPart.slatedForDeletion
  commentId: F:HUD.HudPart.slatedForDeletion
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_slatedForDeletion
  name: slatedForDeletion
  nameWithType: HudPart.slatedForDeletion
  fullName: HUD.HudPart.slatedForDeletion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: HUD.KarmaMeter.#ctor*
  commentId: Overload:HUD.KarmaMeter.#ctor
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter__ctor_HUD_HUD_FContainer_RWCustom_IntVector2_System_Boolean_
  name: KarmaMeter
  nameWithType: KarmaMeter.KarmaMeter
  fullName: HUD.KarmaMeter.KarmaMeter
  nameWithType.vb: KarmaMeter.New
  fullName.vb: HUD.KarmaMeter.New
  name.vb: New
- uid: HUD.HUD
  commentId: T:HUD.HUD
  parent: HUD
  isExternal: true
  href: HUD.HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD.HUD
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: HUD.KarmaMeter.KarmaSymbolSprite*
  commentId: Overload:HUD.KarmaMeter.KarmaSymbolSprite
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_KarmaSymbolSprite_System_Boolean_RWCustom_IntVector2_
  name: KarmaSymbolSprite
  nameWithType: KarmaMeter.KarmaSymbolSprite
  fullName: HUD.KarmaMeter.KarmaSymbolSprite
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: HUD.KarmaMeter.RippleSymbolSprite*
  commentId: Overload:HUD.KarmaMeter.RippleSymbolSprite
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_RippleSymbolSprite_System_Boolean_System_Single_
  name: RippleSymbolSprite
  nameWithType: KarmaMeter.RippleSymbolSprite
  fullName: HUD.KarmaMeter.RippleSymbolSprite
- uid: HUD.KarmaMeter.ClearScavengerFlash*
  commentId: Overload:HUD.KarmaMeter.ClearScavengerFlash
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_ClearScavengerFlash
  name: ClearScavengerFlash
  nameWithType: KarmaMeter.ClearScavengerFlash
  fullName: HUD.KarmaMeter.ClearScavengerFlash
- uid: HUD.KarmaMeter.DropScavengerFlash*
  commentId: Overload:HUD.KarmaMeter.DropScavengerFlash
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_DropScavengerFlash
  name: DropScavengerFlash
  nameWithType: KarmaMeter.DropScavengerFlash
  fullName: HUD.KarmaMeter.DropScavengerFlash
- uid: HUD.HudPart.Update
  commentId: M:HUD.HudPart.Update
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_Update
  name: Update()
  nameWithType: HudPart.Update()
  fullName: HUD.HudPart.Update()
  spec.csharp:
  - uid: HUD.HudPart.Update
    name: Update
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Update
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.HudPart.Update
    name: Update
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Update
  - name: (
  - name: )
- uid: HUD.KarmaMeter.Update*
  commentId: Overload:HUD.KarmaMeter.Update
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_Update
  name: Update
  nameWithType: KarmaMeter.Update
  fullName: HUD.KarmaMeter.Update
- uid: HUD.KarmaMeter.UpdateGraphic*
  commentId: Overload:HUD.KarmaMeter.UpdateGraphic
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_UpdateGraphic
  name: UpdateGraphic
  nameWithType: KarmaMeter.UpdateGraphic
  fullName: HUD.KarmaMeter.UpdateGraphic
- uid: HUD.KarmaMeter.DrawPos*
  commentId: Overload:HUD.KarmaMeter.DrawPos
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_DrawPos_System_Single_
  name: DrawPos
  nameWithType: KarmaMeter.DrawPos
  fullName: HUD.KarmaMeter.DrawPos
- uid: HUD.HudPart.Draw(System.Single)
  commentId: M:HUD.HudPart.Draw(System.Single)
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  name: Draw(float)
  nameWithType: HudPart.Draw(float)
  fullName: HUD.HudPart.Draw(float)
  nameWithType.vb: HudPart.Draw(Single)
  fullName.vb: HUD.HudPart.Draw(Single)
  name.vb: Draw(Single)
  spec.csharp:
  - uid: HUD.HudPart.Draw(System.Single)
    name: Draw
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: HUD.HudPart.Draw(System.Single)
    name: Draw
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: HUD.KarmaMeter.Draw*
  commentId: Overload:HUD.KarmaMeter.Draw
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_Draw_System_Single_
  name: Draw
  nameWithType: KarmaMeter.Draw
  fullName: HUD.KarmaMeter.Draw
- uid: HUD.HudPart.ClearSprites
  commentId: M:HUD.HudPart.ClearSprites
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  name: ClearSprites()
  nameWithType: HudPart.ClearSprites()
  fullName: HUD.HudPart.ClearSprites()
  spec.csharp:
  - uid: HUD.HudPart.ClearSprites
    name: ClearSprites
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.HudPart.ClearSprites
    name: ClearSprites
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  - name: (
  - name: )
- uid: HUD.KarmaMeter.ClearSprites*
  commentId: Overload:HUD.KarmaMeter.ClearSprites
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_ClearSprites
  name: ClearSprites
  nameWithType: KarmaMeter.ClearSprites
  fullName: HUD.KarmaMeter.ClearSprites
- uid: HUD.KarmaMeter.Radius*
  commentId: Overload:HUD.KarmaMeter.Radius
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_Radius
  name: Radius
  nameWithType: KarmaMeter.Radius
  fullName: HUD.KarmaMeter.Radius
- uid: HUD.KarmaMeter.Show*
  commentId: Overload:HUD.KarmaMeter.Show
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_Show
  name: Show
  nameWithType: KarmaMeter.Show
  fullName: HUD.KarmaMeter.Show
- uid: HUD.KarmaMeter.AnyVisibility*
  commentId: Overload:HUD.KarmaMeter.AnyVisibility
  isExternal: true
  href: HUD.KarmaMeter.html#HUD_KarmaMeter_AnyVisibility
  name: AnyVisibility
  nameWithType: KarmaMeter.AnyVisibility
  fullName: HUD.KarmaMeter.AnyVisibility
