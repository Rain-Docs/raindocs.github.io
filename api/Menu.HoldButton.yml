### YamlMime:ManagedReference
items:
- uid: Menu.HoldButton
  commentId: T:Menu.HoldButton
  id: HoldButton
  parent: Menu
  children:
  - Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)
  - Menu.HoldButton.Clicked
  - Menu.HoldButton.CurrentlySelectableMouse
  - Menu.HoldButton.CurrentlySelectableNonMouse
  - Menu.HoldButton.FillingUp
  - Menu.HoldButton.GetButtonBehavior
  - Menu.HoldButton.GrafUpdate(System.Single)
  - Menu.HoldButton.IsMouseOverMe
  - Menu.HoldButton.MyColor(System.Single)
  - Menu.HoldButton.RemoveSprites
  - Menu.HoldButton.Update
  - Menu.HoldButton.buttonBehav
  - Menu.HoldButton.buttonReleasedCounter
  - Menu.HoldButton.circleSprites
  - Menu.HoldButton.controlledFromOutside
  - Menu.HoldButton.fillTime
  - Menu.HoldButton.filled
  - Menu.HoldButton.held
  - Menu.HoldButton.lastFilled
  - Menu.HoldButton.lastHeld
  - Menu.HoldButton.menuLabel
  - Menu.HoldButton.signalText
  - Menu.HoldButton.soundLoop
  - Menu.HoldButton.warningMode
  langs:
  - csharp
  - vb
  name: HoldButton
  nameWithType: HoldButton
  fullName: Menu.HoldButton
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.HoldButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class HoldButton : CircularMenuObject, SelectableMenuObject, ButtonMenuObject'
    content.vb: Public Class HoldButton Inherits CircularMenuObject Implements SelectableMenuObject, ButtonMenuObject
  inheritance:
  - System.Object
  - Menu.MenuObject
  - Menu.PositionedMenuObject
  - Menu.CircularMenuObject
  implements:
  - Menu.SelectableMenuObject
  - Menu.ButtonMenuObject
  inheritedMembers:
  - Menu.CircularMenuObject.rad
  - Menu.CircularMenuObject.lastRad
  - Menu.CircularMenuObject.DrawRad(System.Single)
  - Menu.CircularMenuObject.MouseOver
  - Menu.PositionedMenuObject.pos
  - Menu.PositionedMenuObject.lastPos
  - Menu.PositionedMenuObject.DrawPos(System.Single)
  - Menu.PositionedMenuObject.DrawX(System.Single)
  - Menu.PositionedMenuObject.DrawY(System.Single)
  - Menu.PositionedMenuObject.ScreenPos
  - Menu.PositionedMenuObject.ScreenLastPos
  - Menu.MenuObject.menu
  - Menu.MenuObject.subObjects
  - Menu.MenuObject.owner
  - Menu.MenuObject.nextSelectable
  - Menu.MenuObject.toggled
  - Menu.MenuObject.inactive
  - Menu.MenuObject.myContainer
  - Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  - Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  - Menu.MenuObject.Container
  - Menu.MenuObject.Selected
  - Menu.MenuObject.page
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.HoldButton.menuLabel
  commentId: F:Menu.HoldButton.menuLabel
  id: menuLabel
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: menuLabel
  nameWithType: HoldButton.menuLabel
  fullName: Menu.HoldButton.menuLabel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.menuLabel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuLabel menuLabel
    return:
      type: Menu.MenuLabel
    content.vb: Public menuLabel As MenuLabel
- uid: Menu.HoldButton.buttonBehav
  commentId: F:Menu.HoldButton.buttonBehav
  id: buttonBehav
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: buttonBehav
  nameWithType: HoldButton.buttonBehav
  fullName: Menu.HoldButton.buttonBehav
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.buttonBehav</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ButtonBehavior buttonBehav
    return:
      type: Menu.ButtonBehavior
    content.vb: Public buttonBehav As ButtonBehavior
- uid: Menu.HoldButton.circleSprites
  commentId: F:Menu.HoldButton.circleSprites
  id: circleSprites
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: circleSprites
  nameWithType: HoldButton.circleSprites
  fullName: Menu.HoldButton.circleSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.circleSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite[] circleSprites
    return:
      type: Global.FSprite[]
    content.vb: Public circleSprites As FSprite()
- uid: Menu.HoldButton.filled
  commentId: F:Menu.HoldButton.filled
  id: filled
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: filled
  nameWithType: HoldButton.filled
  fullName: Menu.HoldButton.filled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.filled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float filled
    return:
      type: System.Single
    content.vb: Public filled As Single
- uid: Menu.HoldButton.lastFilled
  commentId: F:Menu.HoldButton.lastFilled
  id: lastFilled
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: lastFilled
  nameWithType: HoldButton.lastFilled
  fullName: Menu.HoldButton.lastFilled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.lastFilled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFilled
    return:
      type: System.Single
    content.vb: Public lastFilled As Single
- uid: Menu.HoldButton.fillTime
  commentId: F:Menu.HoldButton.fillTime
  id: fillTime
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: fillTime
  nameWithType: HoldButton.fillTime
  fullName: Menu.HoldButton.fillTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.fillTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fillTime
    return:
      type: System.Single
    content.vb: Public fillTime As Single
- uid: Menu.HoldButton.buttonReleasedCounter
  commentId: F:Menu.HoldButton.buttonReleasedCounter
  id: buttonReleasedCounter
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: buttonReleasedCounter
  nameWithType: HoldButton.buttonReleasedCounter
  fullName: Menu.HoldButton.buttonReleasedCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.buttonReleasedCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int buttonReleasedCounter
    return:
      type: System.Int32
    content.vb: Public buttonReleasedCounter As Integer
- uid: Menu.HoldButton.signalText
  commentId: F:Menu.HoldButton.signalText
  id: signalText
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: signalText
  nameWithType: HoldButton.signalText
  fullName: Menu.HoldButton.signalText
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.signalText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string signalText
    return:
      type: System.String
    content.vb: Public signalText As String
- uid: Menu.HoldButton.controlledFromOutside
  commentId: F:Menu.HoldButton.controlledFromOutside
  id: controlledFromOutside
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: controlledFromOutside
  nameWithType: HoldButton.controlledFromOutside
  fullName: Menu.HoldButton.controlledFromOutside
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.controlledFromOutside</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool controlledFromOutside
    return:
      type: System.Boolean
    content.vb: Public controlledFromOutside As Boolean
- uid: Menu.HoldButton.held
  commentId: F:Menu.HoldButton.held
  id: held
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: held
  nameWithType: HoldButton.held
  fullName: Menu.HoldButton.held
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.held</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool held
    return:
      type: System.Boolean
    content.vb: Public held As Boolean
- uid: Menu.HoldButton.lastHeld
  commentId: F:Menu.HoldButton.lastHeld
  id: lastHeld
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: lastHeld
  nameWithType: HoldButton.lastHeld
  fullName: Menu.HoldButton.lastHeld
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.lastHeld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastHeld
    return:
      type: System.Boolean
    content.vb: Public lastHeld As Boolean
- uid: Menu.HoldButton.soundLoop
  commentId: F:Menu.HoldButton.soundLoop
  id: soundLoop
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: HoldButton.soundLoop
  fullName: Menu.HoldButton.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuMicrophone.MenuSoundLoop soundLoop
    return:
      type: Global.MenuMicrophone.MenuSoundLoop
    content.vb: Public soundLoop As MenuMicrophone.MenuSoundLoop
- uid: Menu.HoldButton.warningMode
  commentId: F:Menu.HoldButton.warningMode
  id: warningMode
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: warningMode
  nameWithType: HoldButton.warningMode
  fullName: Menu.HoldButton.warningMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.HoldButton.warningMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool warningMode
    return:
      type: System.Boolean
    content.vb: Public warningMode As Boolean
- uid: Menu.HoldButton.MyColor(System.Single)
  commentId: M:Menu.HoldButton.MyColor(System.Single)
  id: MyColor(System.Single)
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: MyColor(float)
  nameWithType: HoldButton.MyColor(float)
  fullName: Menu.HoldButton.MyColor(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.HoldButton.MyColor(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color MyColor(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.HoldButton.MyColor(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.HoldButton.MyColor(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function MyColor(timeStacker As Single) As Color
  overload: Menu.HoldButton.MyColor*
  nameWithType.vb: HoldButton.MyColor(Single)
  fullName.vb: Menu.HoldButton.MyColor(Single)
  name.vb: MyColor(Single)
- uid: Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)
  commentId: M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)
  id: '#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)'
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: HoldButton(Menu, MenuObject, string, string, Vector2, float)
  nameWithType: HoldButton.HoldButton(Menu, MenuObject, string, string, Vector2, float)
  fullName: Menu.HoldButton.HoldButton(Menu.Menu, Menu.MenuObject, string, string, UnityEngine.Vector2, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.HoldButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HoldButton(Menu menu, MenuObject owner, string displayText, string singalText, Vector2 pos, float fillTime)
    parameters:
    - id: menu
      type: Menu.Menu
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>menu</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: owner
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: displayText
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayText</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: singalText
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>singalText</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: fillTime
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fillTime</parameter>
            <parameter>M:Menu.HoldButton.#ctor(Menu.Menu,Menu.MenuObject,System.String,System.String,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(menu As Menu, owner As MenuObject, displayText As String, singalText As String, pos As Vector2, fillTime As Single)
  overload: Menu.HoldButton.#ctor*
  nameWithType.vb: HoldButton.New(Menu, MenuObject, String, String, Vector2, Single)
  fullName.vb: Menu.HoldButton.New(Menu.Menu, Menu.MenuObject, String, String, UnityEngine.Vector2, Single)
  name.vb: New(Menu, MenuObject, String, String, Vector2, Single)
- uid: Menu.HoldButton.Update
  commentId: M:Menu.HoldButton.Update
  id: Update
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: HoldButton.Update()
  fullName: Menu.HoldButton.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.HoldButton.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Menu.CircularMenuObject.Update
  overload: Menu.HoldButton.Update*
- uid: Menu.HoldButton.GrafUpdate(System.Single)
  commentId: M:Menu.HoldButton.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: HoldButton.GrafUpdate(float)
  fullName: Menu.HoldButton.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.HoldButton.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.HoldButton.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GrafUpdate(timeStacker As Single)
  overridden: Menu.MenuObject.GrafUpdate(System.Single)
  overload: Menu.HoldButton.GrafUpdate*
  nameWithType.vb: HoldButton.GrafUpdate(Single)
  fullName.vb: Menu.HoldButton.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.HoldButton.RemoveSprites
  commentId: M:Menu.HoldButton.RemoveSprites
  id: RemoveSprites
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: RemoveSprites()
  nameWithType: HoldButton.RemoveSprites()
  fullName: Menu.HoldButton.RemoveSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.HoldButton.RemoveSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void RemoveSprites()
    content.vb: Public Overrides Sub RemoveSprites()
  overridden: Menu.MenuObject.RemoveSprites
  overload: Menu.HoldButton.RemoveSprites*
- uid: Menu.HoldButton.Clicked
  commentId: M:Menu.HoldButton.Clicked
  id: Clicked
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: Clicked()
  nameWithType: HoldButton.Clicked()
  fullName: Menu.HoldButton.Clicked()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.HoldButton.Clicked</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Clicked()
    content.vb: Public Overridable Sub Clicked()
  overload: Menu.HoldButton.Clicked*
  implements:
  - Menu.ButtonMenuObject.Clicked
- uid: Menu.HoldButton.FillingUp
  commentId: P:Menu.HoldButton.FillingUp
  id: FillingUp
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: FillingUp
  nameWithType: HoldButton.FillingUp
  fullName: Menu.HoldButton.FillingUp
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.HoldButton.FillingUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool FillingUp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property FillingUp As Boolean
  overload: Menu.HoldButton.FillingUp*
- uid: Menu.HoldButton.IsMouseOverMe
  commentId: P:Menu.HoldButton.IsMouseOverMe
  id: IsMouseOverMe
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: IsMouseOverMe
  nameWithType: HoldButton.IsMouseOverMe
  fullName: Menu.HoldButton.IsMouseOverMe
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.HoldButton.IsMouseOverMe</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsMouseOverMe { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsMouseOverMe As Boolean
  overload: Menu.HoldButton.IsMouseOverMe*
  implements:
  - Menu.SelectableMenuObject.IsMouseOverMe
- uid: Menu.HoldButton.CurrentlySelectableMouse
  commentId: P:Menu.HoldButton.CurrentlySelectableMouse
  id: CurrentlySelectableMouse
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: CurrentlySelectableMouse
  nameWithType: HoldButton.CurrentlySelectableMouse
  fullName: Menu.HoldButton.CurrentlySelectableMouse
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.HoldButton.CurrentlySelectableMouse</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CurrentlySelectableMouse { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CurrentlySelectableMouse As Boolean
  overload: Menu.HoldButton.CurrentlySelectableMouse*
  implements:
  - Menu.SelectableMenuObject.CurrentlySelectableMouse
- uid: Menu.HoldButton.CurrentlySelectableNonMouse
  commentId: P:Menu.HoldButton.CurrentlySelectableNonMouse
  id: CurrentlySelectableNonMouse
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: CurrentlySelectableNonMouse
  nameWithType: HoldButton.CurrentlySelectableNonMouse
  fullName: Menu.HoldButton.CurrentlySelectableNonMouse
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.HoldButton.CurrentlySelectableNonMouse</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CurrentlySelectableNonMouse { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CurrentlySelectableNonMouse As Boolean
  overload: Menu.HoldButton.CurrentlySelectableNonMouse*
  implements:
  - Menu.SelectableMenuObject.CurrentlySelectableNonMouse
- uid: Menu.HoldButton.GetButtonBehavior
  commentId: P:Menu.HoldButton.GetButtonBehavior
  id: GetButtonBehavior
  parent: Menu.HoldButton
  langs:
  - csharp
  - vb
  name: GetButtonBehavior
  nameWithType: HoldButton.GetButtonBehavior
  fullName: Menu.HoldButton.GetButtonBehavior
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.HoldButton.GetButtonBehavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ButtonBehavior GetButtonBehavior { get; }
    parameters: []
    return:
      type: Menu.ButtonBehavior
    content.vb: Public ReadOnly Property GetButtonBehavior As ButtonBehavior
  overload: Menu.HoldButton.GetButtonBehavior*
  implements:
  - Menu.ButtonMenuObject.GetButtonBehavior
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Menu.PositionedMenuObject
  commentId: T:Menu.PositionedMenuObject
  parent: Menu
  isExternal: true
  href: Menu.PositionedMenuObject.html
  name: PositionedMenuObject
  nameWithType: PositionedMenuObject
  fullName: Menu.PositionedMenuObject
- uid: Menu.CircularMenuObject
  commentId: T:Menu.CircularMenuObject
  parent: Menu
  isExternal: true
  href: Menu.CircularMenuObject.html
  name: CircularMenuObject
  nameWithType: CircularMenuObject
  fullName: Menu.CircularMenuObject
- uid: Menu.SelectableMenuObject
  commentId: T:Menu.SelectableMenuObject
  parent: Menu
  isExternal: true
  href: Menu.SelectableMenuObject.html
  name: SelectableMenuObject
  nameWithType: SelectableMenuObject
  fullName: Menu.SelectableMenuObject
- uid: Menu.ButtonMenuObject
  commentId: T:Menu.ButtonMenuObject
  parent: Menu
  isExternal: true
  href: Menu.ButtonMenuObject.html
  name: ButtonMenuObject
  nameWithType: ButtonMenuObject
  fullName: Menu.ButtonMenuObject
- uid: Menu.CircularMenuObject.rad
  commentId: F:Menu.CircularMenuObject.rad
  parent: Menu.CircularMenuObject
  isExternal: true
  href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_rad
  name: rad
  nameWithType: CircularMenuObject.rad
  fullName: Menu.CircularMenuObject.rad
- uid: Menu.CircularMenuObject.lastRad
  commentId: F:Menu.CircularMenuObject.lastRad
  parent: Menu.CircularMenuObject
  isExternal: true
  href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_lastRad
  name: lastRad
  nameWithType: CircularMenuObject.lastRad
  fullName: Menu.CircularMenuObject.lastRad
- uid: Menu.CircularMenuObject.DrawRad(System.Single)
  commentId: M:Menu.CircularMenuObject.DrawRad(System.Single)
  parent: Menu.CircularMenuObject
  isExternal: true
  href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_DrawRad_System_Single_
  name: DrawRad(float)
  nameWithType: CircularMenuObject.DrawRad(float)
  fullName: Menu.CircularMenuObject.DrawRad(float)
  nameWithType.vb: CircularMenuObject.DrawRad(Single)
  fullName.vb: Menu.CircularMenuObject.DrawRad(Single)
  name.vb: DrawRad(Single)
  spec.csharp:
  - uid: Menu.CircularMenuObject.DrawRad(System.Single)
    name: DrawRad
    isExternal: true
    href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_DrawRad_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.CircularMenuObject.DrawRad(System.Single)
    name: DrawRad
    isExternal: true
    href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_DrawRad_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.CircularMenuObject.MouseOver
  commentId: P:Menu.CircularMenuObject.MouseOver
  parent: Menu.CircularMenuObject
  isExternal: true
  href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_MouseOver
  name: MouseOver
  nameWithType: CircularMenuObject.MouseOver
  fullName: Menu.CircularMenuObject.MouseOver
- uid: Menu.PositionedMenuObject.pos
  commentId: F:Menu.PositionedMenuObject.pos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_pos
  name: pos
  nameWithType: PositionedMenuObject.pos
  fullName: Menu.PositionedMenuObject.pos
- uid: Menu.PositionedMenuObject.lastPos
  commentId: F:Menu.PositionedMenuObject.lastPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_lastPos
  name: lastPos
  nameWithType: PositionedMenuObject.lastPos
  fullName: Menu.PositionedMenuObject.lastPos
- uid: Menu.PositionedMenuObject.DrawPos(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawPos(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  name: DrawPos(float)
  nameWithType: PositionedMenuObject.DrawPos(float)
  fullName: Menu.PositionedMenuObject.DrawPos(float)
  nameWithType.vb: PositionedMenuObject.DrawPos(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawPos(Single)
  name.vb: DrawPos(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawPos(System.Single)
    name: DrawPos
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawPos(System.Single)
    name: DrawPos
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.DrawX(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawX(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  name: DrawX(float)
  nameWithType: PositionedMenuObject.DrawX(float)
  fullName: Menu.PositionedMenuObject.DrawX(float)
  nameWithType.vb: PositionedMenuObject.DrawX(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawX(Single)
  name.vb: DrawX(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawX(System.Single)
    name: DrawX
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawX(System.Single)
    name: DrawX
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.DrawY(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawY(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  name: DrawY(float)
  nameWithType: PositionedMenuObject.DrawY(float)
  fullName: Menu.PositionedMenuObject.DrawY(float)
  nameWithType.vb: PositionedMenuObject.DrawY(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawY(Single)
  name.vb: DrawY(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawY(System.Single)
    name: DrawY
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawY(System.Single)
    name: DrawY
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.ScreenPos
  commentId: P:Menu.PositionedMenuObject.ScreenPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_ScreenPos
  name: ScreenPos
  nameWithType: PositionedMenuObject.ScreenPos
  fullName: Menu.PositionedMenuObject.ScreenPos
- uid: Menu.PositionedMenuObject.ScreenLastPos
  commentId: P:Menu.PositionedMenuObject.ScreenLastPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_ScreenLastPos
  name: ScreenLastPos
  nameWithType: PositionedMenuObject.ScreenLastPos
  fullName: Menu.PositionedMenuObject.ScreenLastPos
- uid: Menu.MenuObject.menu
  commentId: F:Menu.MenuObject.menu
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_menu
  name: menu
  nameWithType: MenuObject.menu
  fullName: Menu.MenuObject.menu
- uid: Menu.MenuObject.subObjects
  commentId: F:Menu.MenuObject.subObjects
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_subObjects
  name: subObjects
  nameWithType: MenuObject.subObjects
  fullName: Menu.MenuObject.subObjects
- uid: Menu.MenuObject.owner
  commentId: F:Menu.MenuObject.owner
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_owner
  name: owner
  nameWithType: MenuObject.owner
  fullName: Menu.MenuObject.owner
- uid: Menu.MenuObject.nextSelectable
  commentId: F:Menu.MenuObject.nextSelectable
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_nextSelectable
  name: nextSelectable
  nameWithType: MenuObject.nextSelectable
  fullName: Menu.MenuObject.nextSelectable
- uid: Menu.MenuObject.toggled
  commentId: F:Menu.MenuObject.toggled
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_toggled
  name: toggled
  nameWithType: MenuObject.toggled
  fullName: Menu.MenuObject.toggled
- uid: Menu.MenuObject.inactive
  commentId: F:Menu.MenuObject.inactive
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_inactive
  name: inactive
  nameWithType: MenuObject.inactive
  fullName: Menu.MenuObject.inactive
- uid: Menu.MenuObject.myContainer
  commentId: F:Menu.MenuObject.myContainer
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_myContainer
  name: myContainer
  nameWithType: MenuObject.myContainer
  fullName: Menu.MenuObject.myContainer
- uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  name: Singal(MenuObject, string)
  nameWithType: MenuObject.Singal(MenuObject, string)
  fullName: Menu.MenuObject.Singal(Menu.MenuObject, string)
  nameWithType.vb: MenuObject.Singal(MenuObject, String)
  fullName.vb: Menu.MenuObject.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
  spec.csharp:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  commentId: M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  name: RemoveSubObject(MenuObject)
  nameWithType: MenuObject.RemoveSubObject(MenuObject)
  fullName: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: Menu.MenuObject.Container
  commentId: P:Menu.MenuObject.Container
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Container
  name: Container
  nameWithType: MenuObject.Container
  fullName: Menu.MenuObject.Container
- uid: Menu.MenuObject.Selected
  commentId: P:Menu.MenuObject.Selected
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Selected
  name: Selected
  nameWithType: MenuObject.Selected
  fullName: Menu.MenuObject.Selected
- uid: Menu.MenuObject.page
  commentId: P:Menu.MenuObject.page
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_page
  name: page
  nameWithType: MenuObject.page
  fullName: Menu.MenuObject.page
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.MenuLabel
  commentId: T:Menu.MenuLabel
  parent: Menu
  isExternal: true
  href: Menu.MenuLabel.html
  name: MenuLabel
  nameWithType: MenuLabel
  fullName: Menu.MenuLabel
- uid: Menu.ButtonBehavior
  commentId: T:Menu.ButtonBehavior
  parent: Menu
  isExternal: true
  href: Menu.ButtonBehavior.html
  name: ButtonBehavior
  nameWithType: ButtonBehavior
  fullName: Menu.ButtonBehavior
- uid: Global.FSprite[]
  isExternal: true
  href: FSprite.html
  name: FSprite[]
  nameWithType: FSprite[]
  fullName: FSprite[]
  nameWithType.vb: FSprite()
  fullName.vb: FSprite()
  name.vb: FSprite()
  spec.csharp:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.MenuMicrophone.MenuSoundLoop
  commentId: T:Global.MenuMicrophone.MenuSoundLoop
  isExternal: true
  href: MenuMicrophone.html
  name: MenuMicrophone.MenuSoundLoop
  nameWithType: MenuMicrophone.MenuSoundLoop
  fullName: MenuMicrophone.MenuSoundLoop
  spec.csharp:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
  spec.vb:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
- uid: Menu.HoldButton.MyColor*
  commentId: Overload:Menu.HoldButton.MyColor
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_MyColor_System_Single_
  name: MyColor
  nameWithType: HoldButton.MyColor
  fullName: Menu.HoldButton.MyColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Menu.HoldButton.#ctor*
  commentId: Overload:Menu.HoldButton.#ctor
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton__ctor_Menu_Menu_Menu_MenuObject_System_String_System_String_UnityEngine_Vector2_System_Single_
  name: HoldButton
  nameWithType: HoldButton.HoldButton
  fullName: Menu.HoldButton.HoldButton
  nameWithType.vb: HoldButton.New
  fullName.vb: Menu.HoldButton.New
  name.vb: New
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Menu.CircularMenuObject.Update
  commentId: M:Menu.CircularMenuObject.Update
  parent: Menu.CircularMenuObject
  isExternal: true
  href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_Update
  name: Update()
  nameWithType: CircularMenuObject.Update()
  fullName: Menu.CircularMenuObject.Update()
  spec.csharp:
  - uid: Menu.CircularMenuObject.Update
    name: Update
    isExternal: true
    href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.CircularMenuObject.Update
    name: Update
    isExternal: true
    href: Menu.CircularMenuObject.html#Menu_CircularMenuObject_Update
  - name: (
  - name: )
- uid: Menu.HoldButton.Update*
  commentId: Overload:Menu.HoldButton.Update
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_Update
  name: Update
  nameWithType: HoldButton.Update
  fullName: Menu.HoldButton.Update
- uid: Menu.MenuObject.GrafUpdate(System.Single)
  commentId: M:Menu.MenuObject.GrafUpdate(System.Single)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  name: GrafUpdate(float)
  nameWithType: MenuObject.GrafUpdate(float)
  fullName: Menu.MenuObject.GrafUpdate(float)
  nameWithType.vb: MenuObject.GrafUpdate(Single)
  fullName.vb: Menu.MenuObject.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.HoldButton.GrafUpdate*
  commentId: Overload:Menu.HoldButton.GrafUpdate
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: HoldButton.GrafUpdate
  fullName: Menu.HoldButton.GrafUpdate
- uid: Menu.MenuObject.RemoveSprites
  commentId: M:Menu.MenuObject.RemoveSprites
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  name: RemoveSprites()
  nameWithType: MenuObject.RemoveSprites()
  fullName: Menu.MenuObject.RemoveSprites()
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
- uid: Menu.HoldButton.RemoveSprites*
  commentId: Overload:Menu.HoldButton.RemoveSprites
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_RemoveSprites
  name: RemoveSprites
  nameWithType: HoldButton.RemoveSprites
  fullName: Menu.HoldButton.RemoveSprites
- uid: Menu.HoldButton.Clicked*
  commentId: Overload:Menu.HoldButton.Clicked
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_Clicked
  name: Clicked
  nameWithType: HoldButton.Clicked
  fullName: Menu.HoldButton.Clicked
- uid: Menu.ButtonMenuObject.Clicked
  commentId: M:Menu.ButtonMenuObject.Clicked
  parent: Menu.ButtonMenuObject
  isExternal: true
  href: Menu.ButtonMenuObject.html#Menu_ButtonMenuObject_Clicked
  name: Clicked()
  nameWithType: ButtonMenuObject.Clicked()
  fullName: Menu.ButtonMenuObject.Clicked()
  spec.csharp:
  - uid: Menu.ButtonMenuObject.Clicked
    name: Clicked
    isExternal: true
    href: Menu.ButtonMenuObject.html#Menu_ButtonMenuObject_Clicked
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.ButtonMenuObject.Clicked
    name: Clicked
    isExternal: true
    href: Menu.ButtonMenuObject.html#Menu_ButtonMenuObject_Clicked
  - name: (
  - name: )
- uid: Menu.HoldButton.FillingUp*
  commentId: Overload:Menu.HoldButton.FillingUp
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_FillingUp
  name: FillingUp
  nameWithType: HoldButton.FillingUp
  fullName: Menu.HoldButton.FillingUp
- uid: Menu.HoldButton.IsMouseOverMe*
  commentId: Overload:Menu.HoldButton.IsMouseOverMe
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_IsMouseOverMe
  name: IsMouseOverMe
  nameWithType: HoldButton.IsMouseOverMe
  fullName: Menu.HoldButton.IsMouseOverMe
- uid: Menu.SelectableMenuObject.IsMouseOverMe
  commentId: P:Menu.SelectableMenuObject.IsMouseOverMe
  parent: Menu.SelectableMenuObject
  isExternal: true
  href: Menu.SelectableMenuObject.html#Menu_SelectableMenuObject_IsMouseOverMe
  name: IsMouseOverMe
  nameWithType: SelectableMenuObject.IsMouseOverMe
  fullName: Menu.SelectableMenuObject.IsMouseOverMe
- uid: Menu.HoldButton.CurrentlySelectableMouse*
  commentId: Overload:Menu.HoldButton.CurrentlySelectableMouse
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_CurrentlySelectableMouse
  name: CurrentlySelectableMouse
  nameWithType: HoldButton.CurrentlySelectableMouse
  fullName: Menu.HoldButton.CurrentlySelectableMouse
- uid: Menu.SelectableMenuObject.CurrentlySelectableMouse
  commentId: P:Menu.SelectableMenuObject.CurrentlySelectableMouse
  parent: Menu.SelectableMenuObject
  isExternal: true
  href: Menu.SelectableMenuObject.html#Menu_SelectableMenuObject_CurrentlySelectableMouse
  name: CurrentlySelectableMouse
  nameWithType: SelectableMenuObject.CurrentlySelectableMouse
  fullName: Menu.SelectableMenuObject.CurrentlySelectableMouse
- uid: Menu.HoldButton.CurrentlySelectableNonMouse*
  commentId: Overload:Menu.HoldButton.CurrentlySelectableNonMouse
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_CurrentlySelectableNonMouse
  name: CurrentlySelectableNonMouse
  nameWithType: HoldButton.CurrentlySelectableNonMouse
  fullName: Menu.HoldButton.CurrentlySelectableNonMouse
- uid: Menu.SelectableMenuObject.CurrentlySelectableNonMouse
  commentId: P:Menu.SelectableMenuObject.CurrentlySelectableNonMouse
  parent: Menu.SelectableMenuObject
  isExternal: true
  href: Menu.SelectableMenuObject.html#Menu_SelectableMenuObject_CurrentlySelectableNonMouse
  name: CurrentlySelectableNonMouse
  nameWithType: SelectableMenuObject.CurrentlySelectableNonMouse
  fullName: Menu.SelectableMenuObject.CurrentlySelectableNonMouse
- uid: Menu.HoldButton.GetButtonBehavior*
  commentId: Overload:Menu.HoldButton.GetButtonBehavior
  isExternal: true
  href: Menu.HoldButton.html#Menu_HoldButton_GetButtonBehavior
  name: GetButtonBehavior
  nameWithType: HoldButton.GetButtonBehavior
  fullName: Menu.HoldButton.GetButtonBehavior
- uid: Menu.ButtonMenuObject.GetButtonBehavior
  commentId: P:Menu.ButtonMenuObject.GetButtonBehavior
  parent: Menu.ButtonMenuObject
  isExternal: true
  href: Menu.ButtonMenuObject.html#Menu_ButtonMenuObject_GetButtonBehavior
  name: GetButtonBehavior
  nameWithType: ButtonMenuObject.GetButtonBehavior
  fullName: Menu.ButtonMenuObject.GetButtonBehavior
