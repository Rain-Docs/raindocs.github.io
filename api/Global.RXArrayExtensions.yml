### YamlMime:ManagedReference
items:
- uid: Global.RXArrayExtensions
  commentId: T:Global.RXArrayExtensions
  id: RXArrayExtensions
  parent: Global
  children:
  - Global.RXArrayExtensions.IndexOf``1(``0[],``0)
  - Global.RXArrayExtensions.Log``1(``0[])
  - Global.RXArrayExtensions.Log``1(``0[],System.String)
  - Global.RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)
  langs:
  - csharp
  - vb
  name: RXArrayExtensions
  nameWithType: RXArrayExtensions
  fullName: RXArrayExtensions
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXArrayExtensions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class RXArrayExtensions
    content.vb: Public Module RXArrayExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXArrayExtensions.IndexOf``1(``0[],``0)
  commentId: M:Global.RXArrayExtensions.IndexOf``1(``0[],``0)
  id: IndexOf``1(``0[],``0)
  isExtensionMethod: true
  parent: Global.RXArrayExtensions
  langs:
  - csharp
  - vb
  name: IndexOf<T>(T[], T)
  nameWithType: RXArrayExtensions.IndexOf<T>(T[], T)
  fullName: RXArrayExtensions.IndexOf<T>(T[], T)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXArrayExtensions.IndexOf``1(``0[],``0)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public static int IndexOf<T>(this T[] items, T itemToFind) where T : class'
    parameters:
    - id: items
      type: '{T}[]'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:RXArrayExtensions.IndexOf``1(``0[],``0)</parameter>
          </include>
        </markup>
    - id: itemToFind
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemToFind</parameter>
            <parameter>M:RXArrayExtensions.IndexOf``1(``0[],``0)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXArrayExtensions.IndexOf``1(``0[],``0)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXArrayExtensions.IndexOf``1(``0[],``0)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IndexOf(Of T As Class)(items As T(), itemToFind As T) As Integer
  overload: Global.RXArrayExtensions.IndexOf*
  nameWithType.vb: RXArrayExtensions.IndexOf(Of T)(T(), T)
  fullName.vb: RXArrayExtensions.IndexOf(Of T)(T(), T)
  name.vb: IndexOf(Of T)(T(), T)
- uid: Global.RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)
  commentId: M:Global.RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)
  id: RemoveItem``1(``0[],``0,System.Int32@)
  isExtensionMethod: true
  parent: Global.RXArrayExtensions
  langs:
  - csharp
  - vb
  name: RemoveItem<T>(T[], T, ref int)
  nameWithType: RXArrayExtensions.RemoveItem<T>(T[], T, ref int)
  fullName: RXArrayExtensions.RemoveItem<T>(T[], T, ref int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public static void RemoveItem<T>(this T[] items, T itemToRemove, ref int count) where T : class'
    parameters:
    - id: items
      type: '{T}[]'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)</parameter>
          </include>
        </markup>
    - id: itemToRemove
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemToRemove</parameter>
            <parameter>M:RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)</parameter>
          </include>
        </markup>
    - id: count
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>count</parameter>
            <parameter>M:RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXArrayExtensions.RemoveItem``1(``0[],``0,System.Int32@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub RemoveItem(Of T As Class)(items As T(), itemToRemove As T, count As Integer)
  overload: Global.RXArrayExtensions.RemoveItem*
  nameWithType.vb: RXArrayExtensions.RemoveItem(Of T)(T(), T, Integer)
  fullName.vb: RXArrayExtensions.RemoveItem(Of T)(T(), T, Integer)
  name.vb: RemoveItem(Of T)(T(), T, Integer)
- uid: Global.RXArrayExtensions.Log``1(``0[])
  commentId: M:Global.RXArrayExtensions.Log``1(``0[])
  id: Log``1(``0[])
  isExtensionMethod: true
  parent: Global.RXArrayExtensions
  langs:
  - csharp
  - vb
  name: Log<T>(T[])
  nameWithType: RXArrayExtensions.Log<T>(T[])
  fullName: RXArrayExtensions.Log<T>(T[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXArrayExtensions.Log``1(``0[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Log<T>(this T[] items)
    parameters:
    - id: items
      type: '{T}[]'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:RXArrayExtensions.Log``1(``0[])</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXArrayExtensions.Log``1(``0[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Log(Of T)(items As T())
  overload: Global.RXArrayExtensions.Log*
  nameWithType.vb: RXArrayExtensions.Log(Of T)(T())
  fullName.vb: RXArrayExtensions.Log(Of T)(T())
  name.vb: Log(Of T)(T())
- uid: Global.RXArrayExtensions.Log``1(``0[],System.String)
  commentId: M:Global.RXArrayExtensions.Log``1(``0[],System.String)
  id: Log``1(``0[],System.String)
  isExtensionMethod: true
  parent: Global.RXArrayExtensions
  langs:
  - csharp
  - vb
  name: Log<T>(T[], string)
  nameWithType: RXArrayExtensions.Log<T>(T[], string)
  fullName: RXArrayExtensions.Log<T>(T[], string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXArrayExtensions.Log``1(``0[],System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Log<T>(this T[] items, string name)
    parameters:
    - id: items
      type: '{T}[]'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:RXArrayExtensions.Log``1(``0[],System.String)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXArrayExtensions.Log``1(``0[],System.String)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXArrayExtensions.Log``1(``0[],System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Log(Of T)(items As T(), name As String)
  overload: Global.RXArrayExtensions.Log*
  nameWithType.vb: RXArrayExtensions.Log(Of T)(T(), String)
  fullName.vb: RXArrayExtensions.Log(Of T)(T(), String)
  name.vb: Log(Of T)(T(), String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXArrayExtensions.IndexOf*
  commentId: Overload:Global.RXArrayExtensions.IndexOf
  isExternal: true
  href: Global.RXArrayExtensions.html#RXArrayExtensions_IndexOf__1___0_____0_
  name: IndexOf
  nameWithType: RXArrayExtensions.IndexOf
  fullName: RXArrayExtensions.IndexOf
- uid: '{T}[]'
  isExternal: true
  name: T[]
  nameWithType: T[]
  fullName: T[]
  nameWithType.vb: T()
  fullName.vb: T()
  name.vb: T()
  spec.csharp:
  - name: T
  - name: '['
  - name: ']'
  spec.vb:
  - name: T
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.RXArrayExtensions.RemoveItem*
  commentId: Overload:Global.RXArrayExtensions.RemoveItem
  isExternal: true
  href: Global.RXArrayExtensions.html#RXArrayExtensions_RemoveItem__1___0_____0_System_Int32__
  name: RemoveItem
  nameWithType: RXArrayExtensions.RemoveItem
  fullName: RXArrayExtensions.RemoveItem
- uid: Global.RXArrayExtensions.Log*
  commentId: Overload:Global.RXArrayExtensions.Log
  isExternal: true
  href: Global.RXArrayExtensions.html#RXArrayExtensions_Log__1___0___
  name: Log
  nameWithType: RXArrayExtensions.Log
  fullName: RXArrayExtensions.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
