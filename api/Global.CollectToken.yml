### YamlMime:ManagedReference
items:
- uid: Global.CollectToken
  commentId: T:Global.CollectToken
  id: CollectToken
  parent: Global
  children:
  - Global.CollectToken.#ctor(Room,PlacedObject)
  - Global.CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.CollectToken.DevColor
  - Global.CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.CollectToken.GoldCol(System.Single)
  - Global.CollectToken.GoldSprite
  - Global.CollectToken.GreenColor
  - Global.CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.CollectToken.LightSprite
  - Global.CollectToken.LineSprite(System.Int32)
  - Global.CollectToken.MainSprite
  - Global.CollectToken.Pop(Player)
  - Global.CollectToken.RedColor
  - Global.CollectToken.TokenColor
  - Global.CollectToken.TotalSprites
  - Global.CollectToken.TrailSprite
  - Global.CollectToken.Update(System.Boolean)
  - Global.CollectToken.WhiteColor
  - Global.CollectToken.anythingUnlocked
  - Global.CollectToken.blueToken
  - Global.CollectToken.devToken
  - Global.CollectToken.expandAroundPlayer
  - Global.CollectToken.greenToken
  - Global.CollectToken.hoverPos
  - Global.CollectToken.lastPos
  - Global.CollectToken.lines
  - Global.CollectToken.locked
  - Global.CollectToken.placedObj
  - Global.CollectToken.pos
  - Global.CollectToken.redToken
  - Global.CollectToken.showUnlockSymbols
  - Global.CollectToken.sinCounter
  - Global.CollectToken.sinCounter2
  - Global.CollectToken.stalk
  - Global.CollectToken.trail
  - Global.CollectToken.underWaterMode
  - Global.CollectToken.vel
  - Global.CollectToken.whiteToken
  langs:
  - csharp
  - vb
  name: CollectToken
  nameWithType: CollectToken
  fullName: CollectToken
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CollectToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CollectToken : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class CollectToken Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CollectToken.hoverPos
  commentId: F:Global.CollectToken.hoverPos
  id: hoverPos
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: hoverPos
  nameWithType: CollectToken.hoverPos
  fullName: CollectToken.hoverPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.hoverPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 hoverPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public hoverPos As Vector2
- uid: Global.CollectToken.pos
  commentId: F:Global.CollectToken.pos
  id: pos
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: CollectToken.pos
  fullName: CollectToken.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.CollectToken.lastPos
  commentId: F:Global.CollectToken.lastPos
  id: lastPos
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: CollectToken.lastPos
  fullName: CollectToken.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.CollectToken.vel
  commentId: F:Global.CollectToken.vel
  id: vel
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: CollectToken.vel
  fullName: CollectToken.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.CollectToken.sinCounter
  commentId: F:Global.CollectToken.sinCounter
  id: sinCounter
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: sinCounter
  nameWithType: CollectToken.sinCounter
  fullName: CollectToken.sinCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.sinCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sinCounter
    return:
      type: System.Single
    content.vb: Public sinCounter As Single
- uid: Global.CollectToken.sinCounter2
  commentId: F:Global.CollectToken.sinCounter2
  id: sinCounter2
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: sinCounter2
  nameWithType: CollectToken.sinCounter2
  fullName: CollectToken.sinCounter2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.sinCounter2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sinCounter2
    return:
      type: System.Single
    content.vb: Public sinCounter2 As Single
- uid: Global.CollectToken.trail
  commentId: F:Global.CollectToken.trail
  id: trail
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: trail
  nameWithType: CollectToken.trail
  fullName: CollectToken.trail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.trail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] trail
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public trail As Vector2()
- uid: Global.CollectToken.lines
  commentId: F:Global.CollectToken.lines
  id: lines
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: lines
  nameWithType: CollectToken.lines
  fullName: CollectToken.lines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.lines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] lines
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public lines As Vector2(,)
- uid: Global.CollectToken.underWaterMode
  commentId: F:Global.CollectToken.underWaterMode
  id: underWaterMode
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: underWaterMode
  nameWithType: CollectToken.underWaterMode
  fullName: CollectToken.underWaterMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.underWaterMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool underWaterMode
    return:
      type: System.Boolean
    content.vb: Public underWaterMode As Boolean
- uid: Global.CollectToken.expandAroundPlayer
  commentId: F:Global.CollectToken.expandAroundPlayer
  id: expandAroundPlayer
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: expandAroundPlayer
  nameWithType: CollectToken.expandAroundPlayer
  fullName: CollectToken.expandAroundPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.expandAroundPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player expandAroundPlayer
    return:
      type: Global.Player
    content.vb: Public expandAroundPlayer As Player
- uid: Global.CollectToken.placedObj
  commentId: F:Global.CollectToken.placedObj
  id: placedObj
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: placedObj
  nameWithType: CollectToken.placedObj
  fullName: CollectToken.placedObj
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.placedObj</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject placedObj
    return:
      type: Global.PlacedObject
    content.vb: Public placedObj As PlacedObject
- uid: Global.CollectToken.stalk
  commentId: F:Global.CollectToken.stalk
  id: stalk
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: stalk
  nameWithType: CollectToken.stalk
  fullName: CollectToken.stalk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.stalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CollectToken.TokenStalk stalk
    return:
      type: Global.CollectToken.TokenStalk
    content.vb: Public stalk As CollectToken.TokenStalk
- uid: Global.CollectToken.locked
  commentId: F:Global.CollectToken.locked
  id: locked
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: locked
  nameWithType: CollectToken.locked
  fullName: CollectToken.locked
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.locked</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool locked
    return:
      type: System.Boolean
    content.vb: Public locked As Boolean
- uid: Global.CollectToken.anythingUnlocked
  commentId: F:Global.CollectToken.anythingUnlocked
  id: anythingUnlocked
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: anythingUnlocked
  nameWithType: CollectToken.anythingUnlocked
  fullName: CollectToken.anythingUnlocked
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.anythingUnlocked</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool anythingUnlocked
    return:
      type: System.Boolean
    content.vb: Public anythingUnlocked As Boolean
- uid: Global.CollectToken.showUnlockSymbols
  commentId: F:Global.CollectToken.showUnlockSymbols
  id: showUnlockSymbols
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: showUnlockSymbols
  nameWithType: CollectToken.showUnlockSymbols
  fullName: CollectToken.showUnlockSymbols
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.showUnlockSymbols</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<MultiplayerUnlocks.SandboxUnlockID> showUnlockSymbols
    return:
      type: System.Collections.Generic.List{MultiplayerUnlocks.SandboxUnlockID}
    content.vb: Public showUnlockSymbols As List(Of MultiplayerUnlocks.SandboxUnlockID)
- uid: Global.CollectToken.LineSprite(System.Int32)
  commentId: M:Global.CollectToken.LineSprite(System.Int32)
  id: LineSprite(System.Int32)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: LineSprite(int)
  nameWithType: CollectToken.LineSprite(int)
  fullName: CollectToken.LineSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.LineSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LineSprite(int line)
    parameters:
    - id: line
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>line</parameter>
            <parameter>M:CollectToken.LineSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CollectToken.LineSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function LineSprite(line As Integer) As Integer
  overload: Global.CollectToken.LineSprite*
  nameWithType.vb: CollectToken.LineSprite(Integer)
  fullName.vb: CollectToken.LineSprite(Integer)
  name.vb: LineSprite(Integer)
- uid: Global.CollectToken.#ctor(Room,PlacedObject)
  commentId: M:Global.CollectToken.#ctor(Room,PlacedObject)
  id: '#ctor(Room,PlacedObject)'
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: CollectToken(Room, PlacedObject)
  nameWithType: CollectToken.CollectToken(Room, PlacedObject)
  fullName: CollectToken.CollectToken(Room, PlacedObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CollectToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CollectToken(Room room, PlacedObject placedObj)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:CollectToken.#ctor(Room,PlacedObject)</parameter>
          </include>
        </markup>
    - id: placedObj
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placedObj</parameter>
            <parameter>M:CollectToken.#ctor(Room,PlacedObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, placedObj As PlacedObject)
  overload: Global.CollectToken.#ctor*
  nameWithType.vb: CollectToken.New(Room, PlacedObject)
  fullName.vb: CollectToken.New(Room, PlacedObject)
  name.vb: New(Room, PlacedObject)
- uid: Global.CollectToken.Update(System.Boolean)
  commentId: M:Global.CollectToken.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: CollectToken.Update(bool)
  fullName: CollectToken.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:CollectToken.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.CollectToken.Update*
  nameWithType.vb: CollectToken.Update(Boolean)
  fullName.vb: CollectToken.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.CollectToken.Pop(Player)
  commentId: M:Global.CollectToken.Pop(Player)
  id: Pop(Player)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: Pop(Player)
  nameWithType: CollectToken.Pop(Player)
  fullName: CollectToken.Pop(Player)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.Pop(Player)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Pop(Player player)
    parameters:
    - id: player
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>player</parameter>
            <parameter>M:CollectToken.Pop(Player)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Pop(player As Player)
  overload: Global.CollectToken.Pop*
- uid: Global.CollectToken.GoldCol(System.Single)
  commentId: M:Global.CollectToken.GoldCol(System.Single)
  id: GoldCol(System.Single)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: GoldCol(float)
  nameWithType: CollectToken.GoldCol(float)
  fullName: CollectToken.GoldCol(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.GoldCol(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GoldCol(float g)
    parameters:
    - id: g
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>g</parameter>
            <parameter>M:CollectToken.GoldCol(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CollectToken.GoldCol(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function GoldCol(g As Single) As Color
  overload: Global.CollectToken.GoldCol*
  nameWithType.vb: CollectToken.GoldCol(Single)
  fullName.vb: CollectToken.GoldCol(Single)
  name.vb: GoldCol(Single)
- uid: Global.CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: CollectToken.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: CollectToken.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.CollectToken.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: CollectToken.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: CollectToken.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:CollectToken.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.CollectToken.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: CollectToken.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: CollectToken.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: CollectToken.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: CollectToken.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:CollectToken.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.CollectToken.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: CollectToken.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: CollectToken.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:CollectToken.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.CollectToken.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.CollectToken.LightSprite
  commentId: P:Global.CollectToken.LightSprite
  id: LightSprite
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: LightSprite
  nameWithType: CollectToken.LightSprite
  fullName: CollectToken.LightSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.LightSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LightSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LightSprite As Integer
  overload: Global.CollectToken.LightSprite*
- uid: Global.CollectToken.MainSprite
  commentId: P:Global.CollectToken.MainSprite
  id: MainSprite
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: MainSprite
  nameWithType: CollectToken.MainSprite
  fullName: CollectToken.MainSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.MainSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int MainSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MainSprite As Integer
  overload: Global.CollectToken.MainSprite*
- uid: Global.CollectToken.TrailSprite
  commentId: P:Global.CollectToken.TrailSprite
  id: TrailSprite
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: TrailSprite
  nameWithType: CollectToken.TrailSprite
  fullName: CollectToken.TrailSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TrailSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TrailSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TrailSprite As Integer
  overload: Global.CollectToken.TrailSprite*
- uid: Global.CollectToken.GoldSprite
  commentId: P:Global.CollectToken.GoldSprite
  id: GoldSprite
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: GoldSprite
  nameWithType: CollectToken.GoldSprite
  fullName: CollectToken.GoldSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.GoldSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GoldSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property GoldSprite As Integer
  overload: Global.CollectToken.GoldSprite*
- uid: Global.CollectToken.TotalSprites
  commentId: P:Global.CollectToken.TotalSprites
  id: TotalSprites
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: TotalSprites
  nameWithType: CollectToken.TotalSprites
  fullName: CollectToken.TotalSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TotalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSprites As Integer
  overload: Global.CollectToken.TotalSprites*
- uid: Global.CollectToken.blueToken
  commentId: P:Global.CollectToken.blueToken
  id: blueToken
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: blueToken
  nameWithType: CollectToken.blueToken
  fullName: CollectToken.blueToken
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.blueToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool blueToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property blueToken As Boolean
  overload: Global.CollectToken.blueToken*
- uid: Global.CollectToken.GreenColor
  commentId: P:Global.CollectToken.GreenColor
  id: GreenColor
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: GreenColor
  nameWithType: CollectToken.GreenColor
  fullName: CollectToken.GreenColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.GreenColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor GreenColor { get; }
    parameters: []
    return:
      type: Global.HSLColor
    content.vb: Public Shared ReadOnly Property GreenColor As HSLColor
  overload: Global.CollectToken.GreenColor*
- uid: Global.CollectToken.greenToken
  commentId: P:Global.CollectToken.greenToken
  id: greenToken
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: greenToken
  nameWithType: CollectToken.greenToken
  fullName: CollectToken.greenToken
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.greenToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool greenToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property greenToken As Boolean
  overload: Global.CollectToken.greenToken*
- uid: Global.CollectToken.WhiteColor
  commentId: P:Global.CollectToken.WhiteColor
  id: WhiteColor
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: WhiteColor
  nameWithType: CollectToken.WhiteColor
  fullName: CollectToken.WhiteColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.WhiteColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor WhiteColor { get; }
    parameters: []
    return:
      type: Global.HSLColor
    content.vb: Public Shared ReadOnly Property WhiteColor As HSLColor
  overload: Global.CollectToken.WhiteColor*
- uid: Global.CollectToken.whiteToken
  commentId: P:Global.CollectToken.whiteToken
  id: whiteToken
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: whiteToken
  nameWithType: CollectToken.whiteToken
  fullName: CollectToken.whiteToken
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.whiteToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool whiteToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property whiteToken As Boolean
  overload: Global.CollectToken.whiteToken*
- uid: Global.CollectToken.RedColor
  commentId: P:Global.CollectToken.RedColor
  id: RedColor
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: RedColor
  nameWithType: CollectToken.RedColor
  fullName: CollectToken.RedColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.RedColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor RedColor { get; }
    parameters: []
    return:
      type: Global.HSLColor
    content.vb: Public Shared ReadOnly Property RedColor As HSLColor
  overload: Global.CollectToken.RedColor*
- uid: Global.CollectToken.redToken
  commentId: P:Global.CollectToken.redToken
  id: redToken
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: redToken
  nameWithType: CollectToken.redToken
  fullName: CollectToken.redToken
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.redToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool redToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property redToken As Boolean
  overload: Global.CollectToken.redToken*
- uid: Global.CollectToken.DevColor
  commentId: P:Global.CollectToken.DevColor
  id: DevColor
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: DevColor
  nameWithType: CollectToken.DevColor
  fullName: CollectToken.DevColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.DevColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor DevColor { get; }
    parameters: []
    return:
      type: Global.HSLColor
    content.vb: Public Shared ReadOnly Property DevColor As HSLColor
  overload: Global.CollectToken.DevColor*
- uid: Global.CollectToken.devToken
  commentId: P:Global.CollectToken.devToken
  id: devToken
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: devToken
  nameWithType: CollectToken.devToken
  fullName: CollectToken.devToken
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.devToken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool devToken { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property devToken As Boolean
  overload: Global.CollectToken.devToken*
- uid: Global.CollectToken.TokenColor
  commentId: P:Global.CollectToken.TokenColor
  id: TokenColor
  parent: Global.CollectToken
  langs:
  - csharp
  - vb
  name: TokenColor
  nameWithType: CollectToken.TokenColor
  fullName: CollectToken.TokenColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color TokenColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property TokenColor As Color
  overload: Global.CollectToken.TokenColor*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Global.CollectToken.TokenStalk
  commentId: T:Global.CollectToken.TokenStalk
  isExternal: true
  href: CollectToken.html
  name: CollectToken.TokenStalk
  nameWithType: CollectToken.TokenStalk
  fullName: CollectToken.TokenStalk
  spec.csharp:
  - uid: Global.CollectToken
    name: CollectToken
    isExternal: true
    href: CollectToken.html
  - name: .
  - uid: Global.CollectToken.TokenStalk
    name: TokenStalk
    isExternal: true
    href: CollectToken.TokenStalk.html
  spec.vb:
  - uid: Global.CollectToken
    name: CollectToken
    isExternal: true
    href: CollectToken.html
  - name: .
  - uid: Global.CollectToken.TokenStalk
    name: TokenStalk
    isExternal: true
    href: CollectToken.TokenStalk.html
- uid: System.Collections.Generic.List{MultiplayerUnlocks.SandboxUnlockID}
  commentId: T:System.Collections.Generic.List{MultiplayerUnlocks.SandboxUnlockID}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MultiplayerUnlocks.SandboxUnlockID>
  nameWithType: List<MultiplayerUnlocks.SandboxUnlockID>
  fullName: System.Collections.Generic.List<MultiplayerUnlocks.SandboxUnlockID>
  nameWithType.vb: List(Of MultiplayerUnlocks.SandboxUnlockID)
  fullName.vb: System.Collections.Generic.List(Of MultiplayerUnlocks.SandboxUnlockID)
  name.vb: List(Of MultiplayerUnlocks.SandboxUnlockID)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.MultiplayerUnlocks
    name: MultiplayerUnlocks
    isExternal: true
    href: MultiplayerUnlocks.html
  - name: .
  - uid: Global.MultiplayerUnlocks.SandboxUnlockID
    name: SandboxUnlockID
    isExternal: true
    href: MultiplayerUnlocks.SandboxUnlockID.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.MultiplayerUnlocks
    name: MultiplayerUnlocks
    isExternal: true
    href: MultiplayerUnlocks.html
  - name: .
  - uid: Global.MultiplayerUnlocks.SandboxUnlockID
    name: SandboxUnlockID
    isExternal: true
    href: MultiplayerUnlocks.SandboxUnlockID.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.CollectToken.LineSprite*
  commentId: Overload:Global.CollectToken.LineSprite
  isExternal: true
  href: Global.CollectToken.html#CollectToken_LineSprite_System_Int32_
  name: LineSprite
  nameWithType: CollectToken.LineSprite
  fullName: CollectToken.LineSprite
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CollectToken.#ctor*
  commentId: Overload:Global.CollectToken.#ctor
  isExternal: true
  href: Global.CollectToken.html#CollectToken__ctor_Room_PlacedObject_
  name: CollectToken
  nameWithType: CollectToken.CollectToken
  fullName: CollectToken.CollectToken
  nameWithType.vb: CollectToken.New
  fullName.vb: CollectToken.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.CollectToken.Update*
  commentId: Overload:Global.CollectToken.Update
  isExternal: true
  href: Global.CollectToken.html#CollectToken_Update_System_Boolean_
  name: Update
  nameWithType: CollectToken.Update
  fullName: CollectToken.Update
- uid: Global.CollectToken.Pop*
  commentId: Overload:Global.CollectToken.Pop
  isExternal: true
  href: Global.CollectToken.html#CollectToken_Pop_Player_
  name: Pop
  nameWithType: CollectToken.Pop
  fullName: CollectToken.Pop
- uid: Global.CollectToken.GoldCol*
  commentId: Overload:Global.CollectToken.GoldCol
  isExternal: true
  href: Global.CollectToken.html#CollectToken_GoldCol_System_Single_
  name: GoldCol
  nameWithType: CollectToken.GoldCol
  fullName: CollectToken.GoldCol
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.CollectToken.InitiateSprites*
  commentId: Overload:Global.CollectToken.InitiateSprites
  isExternal: true
  href: Global.CollectToken.html#CollectToken_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: CollectToken.InitiateSprites
  fullName: CollectToken.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.CollectToken.DrawSprites*
  commentId: Overload:Global.CollectToken.DrawSprites
  isExternal: true
  href: Global.CollectToken.html#CollectToken_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: CollectToken.DrawSprites
  fullName: CollectToken.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.CollectToken.ApplyPalette*
  commentId: Overload:Global.CollectToken.ApplyPalette
  isExternal: true
  href: Global.CollectToken.html#CollectToken_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: CollectToken.ApplyPalette
  fullName: CollectToken.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.CollectToken.AddToContainer*
  commentId: Overload:Global.CollectToken.AddToContainer
  isExternal: true
  href: Global.CollectToken.html#CollectToken_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: CollectToken.AddToContainer
  fullName: CollectToken.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.CollectToken.LightSprite*
  commentId: Overload:Global.CollectToken.LightSprite
  isExternal: true
  href: Global.CollectToken.html#CollectToken_LightSprite
  name: LightSprite
  nameWithType: CollectToken.LightSprite
  fullName: CollectToken.LightSprite
- uid: Global.CollectToken.MainSprite*
  commentId: Overload:Global.CollectToken.MainSprite
  isExternal: true
  href: Global.CollectToken.html#CollectToken_MainSprite
  name: MainSprite
  nameWithType: CollectToken.MainSprite
  fullName: CollectToken.MainSprite
- uid: Global.CollectToken.TrailSprite*
  commentId: Overload:Global.CollectToken.TrailSprite
  isExternal: true
  href: Global.CollectToken.html#CollectToken_TrailSprite
  name: TrailSprite
  nameWithType: CollectToken.TrailSprite
  fullName: CollectToken.TrailSprite
- uid: Global.CollectToken.GoldSprite*
  commentId: Overload:Global.CollectToken.GoldSprite
  isExternal: true
  href: Global.CollectToken.html#CollectToken_GoldSprite
  name: GoldSprite
  nameWithType: CollectToken.GoldSprite
  fullName: CollectToken.GoldSprite
- uid: Global.CollectToken.TotalSprites*
  commentId: Overload:Global.CollectToken.TotalSprites
  isExternal: true
  href: Global.CollectToken.html#CollectToken_TotalSprites
  name: TotalSprites
  nameWithType: CollectToken.TotalSprites
  fullName: CollectToken.TotalSprites
- uid: Global.CollectToken.blueToken*
  commentId: Overload:Global.CollectToken.blueToken
  isExternal: true
  href: Global.CollectToken.html#CollectToken_blueToken
  name: blueToken
  nameWithType: CollectToken.blueToken
  fullName: CollectToken.blueToken
- uid: Global.CollectToken.GreenColor*
  commentId: Overload:Global.CollectToken.GreenColor
  isExternal: true
  href: Global.CollectToken.html#CollectToken_GreenColor
  name: GreenColor
  nameWithType: CollectToken.GreenColor
  fullName: CollectToken.GreenColor
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  isExternal: true
  href: HSLColor.html
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
- uid: Global.CollectToken.greenToken*
  commentId: Overload:Global.CollectToken.greenToken
  isExternal: true
  href: Global.CollectToken.html#CollectToken_greenToken
  name: greenToken
  nameWithType: CollectToken.greenToken
  fullName: CollectToken.greenToken
- uid: Global.CollectToken.WhiteColor*
  commentId: Overload:Global.CollectToken.WhiteColor
  isExternal: true
  href: Global.CollectToken.html#CollectToken_WhiteColor
  name: WhiteColor
  nameWithType: CollectToken.WhiteColor
  fullName: CollectToken.WhiteColor
- uid: Global.CollectToken.whiteToken*
  commentId: Overload:Global.CollectToken.whiteToken
  isExternal: true
  href: Global.CollectToken.html#CollectToken_whiteToken
  name: whiteToken
  nameWithType: CollectToken.whiteToken
  fullName: CollectToken.whiteToken
- uid: Global.CollectToken.RedColor*
  commentId: Overload:Global.CollectToken.RedColor
  isExternal: true
  href: Global.CollectToken.html#CollectToken_RedColor
  name: RedColor
  nameWithType: CollectToken.RedColor
  fullName: CollectToken.RedColor
- uid: Global.CollectToken.redToken*
  commentId: Overload:Global.CollectToken.redToken
  isExternal: true
  href: Global.CollectToken.html#CollectToken_redToken
  name: redToken
  nameWithType: CollectToken.redToken
  fullName: CollectToken.redToken
- uid: Global.CollectToken.DevColor*
  commentId: Overload:Global.CollectToken.DevColor
  isExternal: true
  href: Global.CollectToken.html#CollectToken_DevColor
  name: DevColor
  nameWithType: CollectToken.DevColor
  fullName: CollectToken.DevColor
- uid: Global.CollectToken.devToken*
  commentId: Overload:Global.CollectToken.devToken
  isExternal: true
  href: Global.CollectToken.html#CollectToken_devToken
  name: devToken
  nameWithType: CollectToken.devToken
  fullName: CollectToken.devToken
- uid: Global.CollectToken.TokenColor*
  commentId: Overload:Global.CollectToken.TokenColor
  isExternal: true
  href: Global.CollectToken.html#CollectToken_TokenColor
  name: TokenColor
  nameWithType: CollectToken.TokenColor
  fullName: CollectToken.TokenColor
