### YamlMime:ManagedReference
items:
- uid: Global.AbstractWorldEntity
  commentId: T:Global.AbstractWorldEntity
  id: AbstractWorldEntity
  parent: Global
  children:
  - Global.AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)
  - Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  - Global.AbstractWorldEntity.Destroy
  - Global.AbstractWorldEntity.ID
  - Global.AbstractWorldEntity.InDen
  - Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  - Global.AbstractWorldEntity.IsExitingDen
  - Global.AbstractWorldEntity.Room
  - Global.AbstractWorldEntity.Update(System.Int32)
  - Global.AbstractWorldEntity.evenUpdate
  - Global.AbstractWorldEntity.pos
  - Global.AbstractWorldEntity.slatedForDeletion
  - Global.AbstractWorldEntity.timeSpentHere
  - Global.AbstractWorldEntity.world
  langs:
  - csharp
  - vb
  name: AbstractWorldEntity
  nameWithType: AbstractWorldEntity
  fullName: AbstractWorldEntity
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractWorldEntity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AbstractWorldEntity
    content.vb: Public Class AbstractWorldEntity
  inheritance:
  - System.Object
  derivedClasses:
  - Global.AbstractPhysicalObject
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AbstractWorldEntity.pos
  commentId: F:Global.AbstractWorldEntity.pos
  id: pos
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: AbstractWorldEntity.pos
  fullName: AbstractWorldEntity.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate pos
    return:
      type: Global.WorldCoordinate
    content.vb: Public pos As WorldCoordinate
- uid: Global.AbstractWorldEntity.world
  commentId: F:Global.AbstractWorldEntity.world
  id: world
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: world
  nameWithType: AbstractWorldEntity.world
  fullName: AbstractWorldEntity.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.AbstractWorldEntity.timeSpentHere
  commentId: F:Global.AbstractWorldEntity.timeSpentHere
  id: timeSpentHere
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: timeSpentHere
  nameWithType: AbstractWorldEntity.timeSpentHere
  fullName: AbstractWorldEntity.timeSpentHere
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.timeSpentHere</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeSpentHere
    return:
      type: System.Int32
    content.vb: Public timeSpentHere As Integer
- uid: Global.AbstractWorldEntity.evenUpdate
  commentId: F:Global.AbstractWorldEntity.evenUpdate
  id: evenUpdate
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: evenUpdate
  nameWithType: AbstractWorldEntity.evenUpdate
  fullName: AbstractWorldEntity.evenUpdate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.evenUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool evenUpdate
    return:
      type: System.Boolean
    content.vb: Public evenUpdate As Boolean
- uid: Global.AbstractWorldEntity.InDen
  commentId: F:Global.AbstractWorldEntity.InDen
  id: InDen
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: InDen
  nameWithType: AbstractWorldEntity.InDen
  fullName: AbstractWorldEntity.InDen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.InDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InDen
    return:
      type: System.Boolean
    content.vb: Public InDen As Boolean
- uid: Global.AbstractWorldEntity.slatedForDeletion
  commentId: F:Global.AbstractWorldEntity.slatedForDeletion
  id: slatedForDeletion
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: AbstractWorldEntity.slatedForDeletion
  fullName: AbstractWorldEntity.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: Global.AbstractWorldEntity.ID
  commentId: F:Global.AbstractWorldEntity.ID
  id: ID
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: AbstractWorldEntity.ID
  fullName: AbstractWorldEntity.ID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractWorldEntity.ID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public EntityID ID
    return:
      type: Global.EntityID
    content.vb: Public ID As EntityID
- uid: Global.AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)
  commentId: M:Global.AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)
  id: '#ctor(World,WorldCoordinate,EntityID)'
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: AbstractWorldEntity(World, WorldCoordinate, EntityID)
  nameWithType: AbstractWorldEntity.AbstractWorldEntity(World, WorldCoordinate, EntityID)
  fullName: AbstractWorldEntity.AbstractWorldEntity(World, WorldCoordinate, EntityID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractWorldEntity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractWorldEntity(World world, WorldCoordinate pos, EntityID ID)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: pos
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    - id: ID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:AbstractWorldEntity.#ctor(World,WorldCoordinate,EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, pos As WorldCoordinate, ID As EntityID)
  overload: Global.AbstractWorldEntity.#ctor*
  nameWithType.vb: AbstractWorldEntity.New(World, WorldCoordinate, EntityID)
  fullName.vb: AbstractWorldEntity.New(World, WorldCoordinate, EntityID)
  name.vb: New(World, WorldCoordinate, EntityID)
- uid: Global.AbstractWorldEntity.Update(System.Int32)
  commentId: M:Global.AbstractWorldEntity.Update(System.Int32)
  id: Update(System.Int32)
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: Update(int)
  nameWithType: AbstractWorldEntity.Update(int)
  fullName: AbstractWorldEntity.Update(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractWorldEntity.Update(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update(int time)
    parameters:
    - id: time
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:AbstractWorldEntity.Update(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Update(time As Integer)
  overload: Global.AbstractWorldEntity.Update*
  nameWithType.vb: AbstractWorldEntity.Update(Integer)
  fullName.vb: AbstractWorldEntity.Update(Integer)
  name.vb: Update(Integer)
- uid: Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  commentId: M:Global.AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  id: IsEnteringDen(WorldCoordinate)
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: IsEnteringDen(WorldCoordinate)
  nameWithType: AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  fullName: AbstractWorldEntity.IsEnteringDen(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractWorldEntity.IsEnteringDen(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void IsEnteringDen(WorldCoordinate den)
    parameters:
    - id: den
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>den</parameter>
            <parameter>M:AbstractWorldEntity.IsEnteringDen(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub IsEnteringDen(den As WorldCoordinate)
  overload: Global.AbstractWorldEntity.IsEnteringDen*
- uid: Global.AbstractWorldEntity.IsExitingDen
  commentId: M:Global.AbstractWorldEntity.IsExitingDen
  id: IsExitingDen
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: IsExitingDen()
  nameWithType: AbstractWorldEntity.IsExitingDen()
  fullName: AbstractWorldEntity.IsExitingDen()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractWorldEntity.IsExitingDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void IsExitingDen()
    content.vb: Public Overridable Sub IsExitingDen()
  overload: Global.AbstractWorldEntity.IsExitingDen*
- uid: Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  commentId: M:Global.AbstractWorldEntity.Abstractize(WorldCoordinate)
  id: Abstractize(WorldCoordinate)
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: Abstractize(WorldCoordinate)
  nameWithType: AbstractWorldEntity.Abstractize(WorldCoordinate)
  fullName: AbstractWorldEntity.Abstractize(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractWorldEntity.Abstractize(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Abstractize(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:AbstractWorldEntity.Abstractize(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Abstractize(coord As WorldCoordinate)
  overload: Global.AbstractWorldEntity.Abstractize*
- uid: Global.AbstractWorldEntity.Destroy
  commentId: M:Global.AbstractWorldEntity.Destroy
  id: Destroy
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: AbstractWorldEntity.Destroy()
  fullName: AbstractWorldEntity.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractWorldEntity.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Destroy()
    content.vb: Public Overridable Sub Destroy()
  overload: Global.AbstractWorldEntity.Destroy*
- uid: Global.AbstractWorldEntity.Room
  commentId: P:Global.AbstractWorldEntity.Room
  id: Room
  parent: Global.AbstractWorldEntity
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: AbstractWorldEntity.Room
  fullName: AbstractWorldEntity.Room
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AbstractWorldEntity.Room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoom Room { get; }
    parameters: []
    return:
      type: Global.AbstractRoom
    content.vb: Public ReadOnly Property Room As AbstractRoom
  overload: Global.AbstractWorldEntity.Room*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
- uid: Global.AbstractWorldEntity.#ctor*
  commentId: Overload:Global.AbstractWorldEntity.#ctor
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity__ctor_World_WorldCoordinate_EntityID_
  name: AbstractWorldEntity
  nameWithType: AbstractWorldEntity.AbstractWorldEntity
  fullName: AbstractWorldEntity.AbstractWorldEntity
  nameWithType.vb: AbstractWorldEntity.New
  fullName.vb: AbstractWorldEntity.New
  name.vb: New
- uid: Global.AbstractWorldEntity.Update*
  commentId: Overload:Global.AbstractWorldEntity.Update
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Update_System_Int32_
  name: Update
  nameWithType: AbstractWorldEntity.Update
  fullName: AbstractWorldEntity.Update
- uid: Global.AbstractWorldEntity.IsEnteringDen*
  commentId: Overload:Global.AbstractWorldEntity.IsEnteringDen
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsEnteringDen_WorldCoordinate_
  name: IsEnteringDen
  nameWithType: AbstractWorldEntity.IsEnteringDen
  fullName: AbstractWorldEntity.IsEnteringDen
- uid: Global.AbstractWorldEntity.IsExitingDen*
  commentId: Overload:Global.AbstractWorldEntity.IsExitingDen
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_IsExitingDen
  name: IsExitingDen
  nameWithType: AbstractWorldEntity.IsExitingDen
  fullName: AbstractWorldEntity.IsExitingDen
- uid: Global.AbstractWorldEntity.Abstractize*
  commentId: Overload:Global.AbstractWorldEntity.Abstractize
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Abstractize_WorldCoordinate_
  name: Abstractize
  nameWithType: AbstractWorldEntity.Abstractize
  fullName: AbstractWorldEntity.Abstractize
- uid: Global.AbstractWorldEntity.Destroy*
  commentId: Overload:Global.AbstractWorldEntity.Destroy
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Destroy
  name: Destroy
  nameWithType: AbstractWorldEntity.Destroy
  fullName: AbstractWorldEntity.Destroy
- uid: Global.AbstractWorldEntity.Room*
  commentId: Overload:Global.AbstractWorldEntity.Room
  isExternal: true
  href: Global.AbstractWorldEntity.html#AbstractWorldEntity_Room
  name: Room
  nameWithType: AbstractWorldEntity.Room
  fullName: AbstractWorldEntity.Room
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
