### YamlMime:ManagedReference
items:
- uid: CoralBrain.Mycelium
  commentId: T:CoralBrain.Mycelium
  id: Mycelium
  parent: CoralBrain
  children:
  - CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)
  - CoralBrain.Mycelium.Base
  - CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)
  - CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)
  - CoralBrain.Mycelium.Reset(UnityEngine.Vector2)
  - CoralBrain.Mycelium.Tip
  - CoralBrain.Mycelium.Update
  - CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)
  - CoralBrain.Mycelium.color
  - CoralBrain.Mycelium.conRad
  - CoralBrain.Mycelium.connection
  - CoralBrain.Mycelium.culled
  - CoralBrain.Mycelium.index
  - CoralBrain.Mycelium.lastCameraCullTick
  - CoralBrain.Mycelium.lastCulled
  - CoralBrain.Mycelium.length
  - CoralBrain.Mycelium.moveAwayFromWalls
  - CoralBrain.Mycelium.owner
  - CoralBrain.Mycelium.points
  - CoralBrain.Mycelium.rest
  - CoralBrain.Mycelium.system
  - CoralBrain.Mycelium.useStaticCulling
  - CoralBrain.Mycelium.viewedByCamera
  langs:
  - csharp
  - vb
  name: Mycelium
  nameWithType: Mycelium
  fullName: CoralBrain.Mycelium
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CoralBrain.Mycelium</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Mycelium
    content.vb: Public Class Mycelium
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: CoralBrain.Mycelium.points
  commentId: F:CoralBrain.Mycelium.points
  id: points
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: points
  nameWithType: Mycelium.points
  fullName: CoralBrain.Mycelium.points
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.points</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] points
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public points As Vector2(,)
- uid: CoralBrain.Mycelium.conRad
  commentId: F:CoralBrain.Mycelium.conRad
  id: conRad
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: conRad
  nameWithType: Mycelium.conRad
  fullName: CoralBrain.Mycelium.conRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.conRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float conRad
    return:
      type: System.Single
    content.vb: Public conRad As Single
- uid: CoralBrain.Mycelium.color
  commentId: F:CoralBrain.Mycelium.color
  id: color
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: color
  nameWithType: Mycelium.color
  fullName: CoralBrain.Mycelium.color
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color color
    return:
      type: UnityEngine.Color
    content.vb: Public color As Color
- uid: CoralBrain.Mycelium.system
  commentId: F:CoralBrain.Mycelium.system
  id: system
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: system
  nameWithType: Mycelium.system
  fullName: CoralBrain.Mycelium.system
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.system</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralNeuronSystem system
    return:
      type: CoralBrain.CoralNeuronSystem
    content.vb: Public system As CoralNeuronSystem
- uid: CoralBrain.Mycelium.owner
  commentId: F:CoralBrain.Mycelium.owner
  id: owner
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: Mycelium.owner
  fullName: CoralBrain.Mycelium.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IOwnMycelia owner
    return:
      type: Global.IOwnMycelia
    content.vb: Public owner As IOwnMycelia
- uid: CoralBrain.Mycelium.index
  commentId: F:CoralBrain.Mycelium.index
  id: index
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: index
  nameWithType: Mycelium.index
  fullName: CoralBrain.Mycelium.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: CoralBrain.Mycelium.length
  commentId: F:CoralBrain.Mycelium.length
  id: length
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: length
  nameWithType: Mycelium.length
  fullName: CoralBrain.Mycelium.length
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.length</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float length
    return:
      type: System.Single
    content.vb: Public length As Single
- uid: CoralBrain.Mycelium.connection
  commentId: F:CoralBrain.Mycelium.connection
  id: connection
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: connection
  nameWithType: Mycelium.connection
  fullName: CoralBrain.Mycelium.connection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.connection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Mycelium.MyceliaConnection connection
    return:
      type: CoralBrain.Mycelium.MyceliaConnection
    content.vb: Public connection As Mycelium.MyceliaConnection
- uid: CoralBrain.Mycelium.lastCameraCullTick
  commentId: F:CoralBrain.Mycelium.lastCameraCullTick
  id: lastCameraCullTick
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: lastCameraCullTick
  nameWithType: Mycelium.lastCameraCullTick
  fullName: CoralBrain.Mycelium.lastCameraCullTick
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.lastCameraCullTick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastCameraCullTick
    return:
      type: System.Int32
    content.vb: Public lastCameraCullTick As Integer
- uid: CoralBrain.Mycelium.viewedByCamera
  commentId: F:CoralBrain.Mycelium.viewedByCamera
  id: viewedByCamera
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: viewedByCamera
  nameWithType: Mycelium.viewedByCamera
  fullName: CoralBrain.Mycelium.viewedByCamera
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.viewedByCamera</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool viewedByCamera
    return:
      type: System.Boolean
    content.vb: Public viewedByCamera As Boolean
- uid: CoralBrain.Mycelium.useStaticCulling
  commentId: F:CoralBrain.Mycelium.useStaticCulling
  id: useStaticCulling
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: useStaticCulling
  nameWithType: Mycelium.useStaticCulling
  fullName: CoralBrain.Mycelium.useStaticCulling
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.useStaticCulling</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool useStaticCulling
    return:
      type: System.Boolean
    content.vb: Public useStaticCulling As Boolean
- uid: CoralBrain.Mycelium.culled
  commentId: F:CoralBrain.Mycelium.culled
  id: culled
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: culled
  nameWithType: Mycelium.culled
  fullName: CoralBrain.Mycelium.culled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.culled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool culled
    return:
      type: System.Boolean
    content.vb: Public culled As Boolean
- uid: CoralBrain.Mycelium.lastCulled
  commentId: F:CoralBrain.Mycelium.lastCulled
  id: lastCulled
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: lastCulled
  nameWithType: Mycelium.lastCulled
  fullName: CoralBrain.Mycelium.lastCulled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.lastCulled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastCulled
    return:
      type: System.Boolean
    content.vb: Public lastCulled As Boolean
- uid: CoralBrain.Mycelium.moveAwayFromWalls
  commentId: F:CoralBrain.Mycelium.moveAwayFromWalls
  id: moveAwayFromWalls
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: moveAwayFromWalls
  nameWithType: Mycelium.moveAwayFromWalls
  fullName: CoralBrain.Mycelium.moveAwayFromWalls
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.moveAwayFromWalls</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool moveAwayFromWalls
    return:
      type: System.Boolean
    content.vb: Public moveAwayFromWalls As Boolean
- uid: CoralBrain.Mycelium.rest
  commentId: F:CoralBrain.Mycelium.rest
  id: rest
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: rest
  nameWithType: Mycelium.rest
  fullName: CoralBrain.Mycelium.rest
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CoralBrain.Mycelium.rest</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rest
    return:
      type: System.Int32
    content.vb: Public rest As Integer
- uid: CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)
  commentId: M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)
  id: '#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)'
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: Mycelium(CoralNeuronSystem, IOwnMycelia, int, float, Vector2)
  nameWithType: Mycelium.Mycelium(CoralNeuronSystem, IOwnMycelia, int, float, Vector2)
  fullName: CoralBrain.Mycelium.Mycelium(CoralBrain.CoralNeuronSystem, IOwnMycelia, int, float, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CoralBrain.Mycelium</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Mycelium(CoralNeuronSystem system, IOwnMycelia owner, int index, float length, Vector2 initPoint)
    parameters:
    - id: system
      type: CoralBrain.CoralNeuronSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>system</parameter>
            <parameter>M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: owner
      type: Global.IOwnMycelia
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: length
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: initPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initPoint</parameter>
            <parameter>M:CoralBrain.Mycelium.#ctor(CoralBrain.CoralNeuronSystem,IOwnMycelia,System.Int32,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(system As CoralNeuronSystem, owner As IOwnMycelia, index As Integer, length As Single, initPoint As Vector2)
  overload: CoralBrain.Mycelium.#ctor*
  nameWithType.vb: Mycelium.New(CoralNeuronSystem, IOwnMycelia, Integer, Single, Vector2)
  fullName.vb: CoralBrain.Mycelium.New(CoralBrain.CoralNeuronSystem, IOwnMycelia, Integer, Single, UnityEngine.Vector2)
  name.vb: New(CoralNeuronSystem, IOwnMycelia, Integer, Single, Vector2)
- uid: CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)
  commentId: M:CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)
  id: ConnectSystem(CoralBrain.CoralNeuronSystem)
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: ConnectSystem(CoralNeuronSystem)
  nameWithType: Mycelium.ConnectSystem(CoralNeuronSystem)
  fullName: CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ConnectSystem(CoralNeuronSystem newSystem)
    parameters:
    - id: newSystem
      type: CoralBrain.CoralNeuronSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newSystem</parameter>
            <parameter>M:CoralBrain.Mycelium.ConnectSystem(CoralBrain.CoralNeuronSystem)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ConnectSystem(newSystem As CoralNeuronSystem)
  overload: CoralBrain.Mycelium.ConnectSystem*
- uid: CoralBrain.Mycelium.Reset(UnityEngine.Vector2)
  commentId: M:CoralBrain.Mycelium.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: Mycelium.Reset(Vector2)
  fullName: CoralBrain.Mycelium.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset(Vector2 resetPos)
    parameters:
    - id: resetPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetPos</parameter>
            <parameter>M:CoralBrain.Mycelium.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Reset(resetPos As Vector2)
  overload: CoralBrain.Mycelium.Reset*
- uid: CoralBrain.Mycelium.Update
  commentId: M:CoralBrain.Mycelium.Update
  id: Update
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Mycelium.Update()
  fullName: CoralBrain.Mycelium.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: CoralBrain.Mycelium.Update*
- uid: CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: InitiateSprites(int, SpriteLeaser, RoomCamera)
  nameWithType: Mycelium.InitiateSprites(int, RoomCamera.SpriteLeaser, RoomCamera)
  fullName: CoralBrain.Mycelium.InitiateSprites(int, RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(int spr, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: spr
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spr</parameter>
            <parameter>M:CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.Mycelium.InitiateSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(spr As Integer, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: CoralBrain.Mycelium.InitiateSprites*
  nameWithType.vb: Mycelium.InitiateSprites(Integer, RoomCamera.SpriteLeaser, RoomCamera)
  fullName.vb: CoralBrain.Mycelium.InitiateSprites(Integer, RoomCamera.SpriteLeaser, RoomCamera)
  name.vb: InitiateSprites(Integer, SpriteLeaser, RoomCamera)
- uid: CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: DrawSprites(int, SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Mycelium.DrawSprites(int, RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: CoralBrain.Mycelium.DrawSprites(int, RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(int spr, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: spr
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spr</parameter>
            <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:CoralBrain.Mycelium.DrawSprites(System.Int32,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(spr As Integer, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: CoralBrain.Mycelium.DrawSprites*
  nameWithType.vb: Mycelium.DrawSprites(Integer, RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: CoralBrain.Mycelium.DrawSprites(Integer, RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(Integer, SpriteLeaser, RoomCamera, Single, Vector2)
- uid: CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)
  commentId: M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)
  id: UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: UpdateColor(Color, float, int, SpriteLeaser)
  nameWithType: Mycelium.UpdateColor(Color, float, int, RoomCamera.SpriteLeaser)
  fullName: CoralBrain.Mycelium.UpdateColor(UnityEngine.Color, float, int, RoomCamera.SpriteLeaser)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateColor(Color newColor, float gradientStart, int spr, RoomCamera.SpriteLeaser sLeaser)
    parameters:
    - id: newColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newColor</parameter>
            <parameter>M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)</parameter>
          </include>
        </markup>
    - id: gradientStart
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gradientStart</parameter>
            <parameter>M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)</parameter>
          </include>
        </markup>
    - id: spr
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spr</parameter>
            <parameter>M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CoralBrain.Mycelium.UpdateColor(UnityEngine.Color,System.Single,System.Int32,RoomCamera.SpriteLeaser)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateColor(newColor As Color, gradientStart As Single, spr As Integer, sLeaser As RoomCamera.SpriteLeaser)
  overload: CoralBrain.Mycelium.UpdateColor*
  nameWithType.vb: Mycelium.UpdateColor(Color, Single, Integer, RoomCamera.SpriteLeaser)
  fullName.vb: CoralBrain.Mycelium.UpdateColor(UnityEngine.Color, Single, Integer, RoomCamera.SpriteLeaser)
  name.vb: UpdateColor(Color, Single, Integer, SpriteLeaser)
- uid: CoralBrain.Mycelium.Tip
  commentId: P:CoralBrain.Mycelium.Tip
  id: Tip
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: Tip
  nameWithType: Mycelium.Tip
  fullName: CoralBrain.Mycelium.Tip
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CoralBrain.Mycelium.Tip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Tip { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Tip As Vector2
  overload: CoralBrain.Mycelium.Tip*
- uid: CoralBrain.Mycelium.Base
  commentId: P:CoralBrain.Mycelium.Base
  id: Base
  parent: CoralBrain.Mycelium
  langs:
  - csharp
  - vb
  name: Base
  nameWithType: Mycelium.Base
  fullName: CoralBrain.Mycelium.Base
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: CoralBrain
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CoralBrain.Mycelium.Base</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Base { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Base As Vector2
  overload: CoralBrain.Mycelium.Base*
references:
- uid: CoralBrain
  commentId: N:CoralBrain
  isExternal: true
  href: CoralBrain.html
  name: CoralBrain
  nameWithType: CoralBrain
  fullName: CoralBrain
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: CoralBrain.CoralNeuronSystem
  commentId: T:CoralBrain.CoralNeuronSystem
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralNeuronSystem.html
  name: CoralNeuronSystem
  nameWithType: CoralNeuronSystem
  fullName: CoralBrain.CoralNeuronSystem
- uid: Global.IOwnMycelia
  commentId: T:Global.IOwnMycelia
  isExternal: true
  href: IOwnMycelia.html
  name: IOwnMycelia
  nameWithType: IOwnMycelia
  fullName: IOwnMycelia
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: CoralBrain.Mycelium.MyceliaConnection
  commentId: T:CoralBrain.Mycelium.MyceliaConnection
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.Mycelium.html
  name: Mycelium.MyceliaConnection
  nameWithType: Mycelium.MyceliaConnection
  fullName: CoralBrain.Mycelium.MyceliaConnection
  spec.csharp:
  - uid: CoralBrain.Mycelium
    name: Mycelium
    isExternal: true
    href: CoralBrain.Mycelium.html
  - name: .
  - uid: CoralBrain.Mycelium.MyceliaConnection
    name: MyceliaConnection
    isExternal: true
    href: CoralBrain.Mycelium.MyceliaConnection.html
  spec.vb:
  - uid: CoralBrain.Mycelium
    name: Mycelium
    isExternal: true
    href: CoralBrain.Mycelium.html
  - name: .
  - uid: CoralBrain.Mycelium.MyceliaConnection
    name: MyceliaConnection
    isExternal: true
    href: CoralBrain.Mycelium.MyceliaConnection.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: CoralBrain.Mycelium.#ctor*
  commentId: Overload:CoralBrain.Mycelium.#ctor
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium__ctor_CoralBrain_CoralNeuronSystem_IOwnMycelia_System_Int32_System_Single_UnityEngine_Vector2_
  name: Mycelium
  nameWithType: Mycelium.Mycelium
  fullName: CoralBrain.Mycelium.Mycelium
  nameWithType.vb: Mycelium.New
  fullName.vb: CoralBrain.Mycelium.New
  name.vb: New
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: CoralBrain.Mycelium.ConnectSystem*
  commentId: Overload:CoralBrain.Mycelium.ConnectSystem
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_ConnectSystem_CoralBrain_CoralNeuronSystem_
  name: ConnectSystem
  nameWithType: Mycelium.ConnectSystem
  fullName: CoralBrain.Mycelium.ConnectSystem
- uid: CoralBrain.Mycelium.Reset*
  commentId: Overload:CoralBrain.Mycelium.Reset
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: Mycelium.Reset
  fullName: CoralBrain.Mycelium.Reset
- uid: CoralBrain.Mycelium.Update*
  commentId: Overload:CoralBrain.Mycelium.Update
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_Update
  name: Update
  nameWithType: Mycelium.Update
  fullName: CoralBrain.Mycelium.Update
- uid: CoralBrain.Mycelium.InitiateSprites*
  commentId: Overload:CoralBrain.Mycelium.InitiateSprites
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_InitiateSprites_System_Int32_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: Mycelium.InitiateSprites
  fullName: CoralBrain.Mycelium.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: CoralBrain.Mycelium.DrawSprites*
  commentId: Overload:CoralBrain.Mycelium.DrawSprites
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_DrawSprites_System_Int32_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: Mycelium.DrawSprites
  fullName: CoralBrain.Mycelium.DrawSprites
- uid: CoralBrain.Mycelium.UpdateColor*
  commentId: Overload:CoralBrain.Mycelium.UpdateColor
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_UpdateColor_UnityEngine_Color_System_Single_System_Int32_RoomCamera_SpriteLeaser_
  name: UpdateColor
  nameWithType: Mycelium.UpdateColor
  fullName: CoralBrain.Mycelium.UpdateColor
- uid: CoralBrain.Mycelium.Tip*
  commentId: Overload:CoralBrain.Mycelium.Tip
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_Tip
  name: Tip
  nameWithType: Mycelium.Tip
  fullName: CoralBrain.Mycelium.Tip
- uid: CoralBrain.Mycelium.Base*
  commentId: Overload:CoralBrain.Mycelium.Base
  isExternal: true
  href: CoralBrain.Mycelium.html#CoralBrain_Mycelium_Base
  name: Base
  nameWithType: Mycelium.Base
  fullName: CoralBrain.Mycelium.Base
