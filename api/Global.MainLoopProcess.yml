### YamlMime:ManagedReference
items:
- uid: Global.MainLoopProcess
  commentId: T:Global.MainLoopProcess
  id: MainLoopProcess
  parent: Global
  children:
  - Global.MainLoopProcess.#ctor(ProcessManager,ProcessManager.ProcessID)
  - Global.MainLoopProcess.AllowDialogs
  - Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  - Global.MainLoopProcess.FadeInTime
  - Global.MainLoopProcess.GrafUpdate(System.Single)
  - Global.MainLoopProcess.ID
  - Global.MainLoopProcess.InitialBlackSeconds
  - Global.MainLoopProcess.RawUpdate(System.Single)
  - Global.MainLoopProcess.ShutDownProcess
  - Global.MainLoopProcess.TimeSpeedFac
  - Global.MainLoopProcess.Update
  - Global.MainLoopProcess.framesPerSecond
  - Global.MainLoopProcess.manager
  - Global.MainLoopProcess.processActive
  langs:
  - csharp
  - vb
  name: MainLoopProcess
  nameWithType: MainLoopProcess
  fullName: MainLoopProcess
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MainLoopProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class MainLoopProcess
    content.vb: Public MustInherit Class MainLoopProcess
  inheritance:
  - System.Object
  derivedClasses:
  - Global.MenuMicrophone
  - Global.RainWorldGame
  - Menu.Menu
  - Music.MusicPlayer
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.MainLoopProcess.manager
  commentId: F:Global.MainLoopProcess.manager
  id: manager
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: manager
  nameWithType: MainLoopProcess.manager
  fullName: MainLoopProcess.manager
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MainLoopProcess.manager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProcessManager manager
    return:
      type: Global.ProcessManager
    content.vb: Public manager As ProcessManager
- uid: Global.MainLoopProcess.ID
  commentId: F:Global.MainLoopProcess.ID
  id: ID
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: MainLoopProcess.ID
  fullName: MainLoopProcess.ID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MainLoopProcess.ID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProcessManager.ProcessID ID
    return:
      type: Global.ProcessManager.ProcessID
    content.vb: Public ID As ProcessManager.ProcessID
- uid: Global.MainLoopProcess.framesPerSecond
  commentId: F:Global.MainLoopProcess.framesPerSecond
  id: framesPerSecond
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: framesPerSecond
  nameWithType: MainLoopProcess.framesPerSecond
  fullName: MainLoopProcess.framesPerSecond
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MainLoopProcess.framesPerSecond</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int framesPerSecond
    return:
      type: System.Int32
    content.vb: Public framesPerSecond As Integer
- uid: Global.MainLoopProcess.processActive
  commentId: F:Global.MainLoopProcess.processActive
  id: processActive
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: processActive
  nameWithType: MainLoopProcess.processActive
  fullName: MainLoopProcess.processActive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MainLoopProcess.processActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool processActive
    return:
      type: System.Boolean
    content.vb: Public processActive As Boolean
- uid: Global.MainLoopProcess.#ctor(ProcessManager,ProcessManager.ProcessID)
  commentId: M:Global.MainLoopProcess.#ctor(ProcessManager,ProcessManager.ProcessID)
  id: '#ctor(ProcessManager,ProcessManager.ProcessID)'
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: MainLoopProcess(ProcessManager, ProcessID)
  nameWithType: MainLoopProcess.MainLoopProcess(ProcessManager, ProcessManager.ProcessID)
  fullName: MainLoopProcess.MainLoopProcess(ProcessManager, ProcessManager.ProcessID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MainLoopProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MainLoopProcess(ProcessManager manager, ProcessManager.ProcessID ID)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:MainLoopProcess.#ctor(ProcessManager,ProcessManager.ProcessID)</parameter>
          </include>
        </markup>
    - id: ID
      type: Global.ProcessManager.ProcessID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:MainLoopProcess.#ctor(ProcessManager,ProcessManager.ProcessID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(manager As ProcessManager, ID As ProcessManager.ProcessID)
  overload: Global.MainLoopProcess.#ctor*
  nameWithType.vb: MainLoopProcess.New(ProcessManager, ProcessManager.ProcessID)
  fullName.vb: MainLoopProcess.New(ProcessManager, ProcessManager.ProcessID)
  name.vb: New(ProcessManager, ProcessID)
- uid: Global.MainLoopProcess.RawUpdate(System.Single)
  commentId: M:Global.MainLoopProcess.RawUpdate(System.Single)
  id: RawUpdate(System.Single)
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: RawUpdate(float)
  nameWithType: MainLoopProcess.RawUpdate(float)
  fullName: MainLoopProcess.RawUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MainLoopProcess.RawUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void RawUpdate(float dt)
    parameters:
    - id: dt
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dt</parameter>
            <parameter>M:MainLoopProcess.RawUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub RawUpdate(dt As Single)
  overload: Global.MainLoopProcess.RawUpdate*
  nameWithType.vb: MainLoopProcess.RawUpdate(Single)
  fullName.vb: MainLoopProcess.RawUpdate(Single)
  name.vb: RawUpdate(Single)
- uid: Global.MainLoopProcess.Update
  commentId: M:Global.MainLoopProcess.Update
  id: Update
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: MainLoopProcess.Update()
  fullName: MainLoopProcess.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MainLoopProcess.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Global.MainLoopProcess.Update*
- uid: Global.MainLoopProcess.GrafUpdate(System.Single)
  commentId: M:Global.MainLoopProcess.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: MainLoopProcess.GrafUpdate(float)
  fullName: MainLoopProcess.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MainLoopProcess.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MainLoopProcess.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub GrafUpdate(timeStacker As Single)
  overload: Global.MainLoopProcess.GrafUpdate*
  nameWithType.vb: MainLoopProcess.GrafUpdate(Single)
  fullName.vb: MainLoopProcess.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Global.MainLoopProcess.ShutDownProcess
  commentId: M:Global.MainLoopProcess.ShutDownProcess
  id: ShutDownProcess
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: ShutDownProcess()
  nameWithType: MainLoopProcess.ShutDownProcess()
  fullName: MainLoopProcess.ShutDownProcess()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MainLoopProcess.ShutDownProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ShutDownProcess()
    content.vb: Public Overridable Sub ShutDownProcess()
  overload: Global.MainLoopProcess.ShutDownProcess*
- uid: Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  commentId: M:Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  id: CommunicateWithUpcomingProcess(MainLoopProcess)
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: CommunicateWithUpcomingProcess(MainLoopProcess)
  nameWithType: MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  fullName: MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void CommunicateWithUpcomingProcess(MainLoopProcess nextProcess)
    parameters:
    - id: nextProcess
      type: Global.MainLoopProcess
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nextProcess</parameter>
            <parameter>M:MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub CommunicateWithUpcomingProcess(nextProcess As MainLoopProcess)
  overload: Global.MainLoopProcess.CommunicateWithUpcomingProcess*
- uid: Global.MainLoopProcess.TimeSpeedFac
  commentId: P:Global.MainLoopProcess.TimeSpeedFac
  id: TimeSpeedFac
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: TimeSpeedFac
  nameWithType: MainLoopProcess.TimeSpeedFac
  fullName: MainLoopProcess.TimeSpeedFac
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MainLoopProcess.TimeSpeedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual float TimeSpeedFac { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property TimeSpeedFac As Single
  overload: Global.MainLoopProcess.TimeSpeedFac*
- uid: Global.MainLoopProcess.FadeInTime
  commentId: P:Global.MainLoopProcess.FadeInTime
  id: FadeInTime
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: FadeInTime
  nameWithType: MainLoopProcess.FadeInTime
  fullName: MainLoopProcess.FadeInTime
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MainLoopProcess.FadeInTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual float FadeInTime { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property FadeInTime As Single
  overload: Global.MainLoopProcess.FadeInTime*
- uid: Global.MainLoopProcess.InitialBlackSeconds
  commentId: P:Global.MainLoopProcess.InitialBlackSeconds
  id: InitialBlackSeconds
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: InitialBlackSeconds
  nameWithType: MainLoopProcess.InitialBlackSeconds
  fullName: MainLoopProcess.InitialBlackSeconds
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MainLoopProcess.InitialBlackSeconds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual float InitialBlackSeconds { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overridable ReadOnly Property InitialBlackSeconds As Single
  overload: Global.MainLoopProcess.InitialBlackSeconds*
- uid: Global.MainLoopProcess.AllowDialogs
  commentId: P:Global.MainLoopProcess.AllowDialogs
  id: AllowDialogs
  parent: Global.MainLoopProcess
  langs:
  - csharp
  - vb
  name: AllowDialogs
  nameWithType: MainLoopProcess.AllowDialogs
  fullName: MainLoopProcess.AllowDialogs
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MainLoopProcess.AllowDialogs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool AllowDialogs { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property AllowDialogs As Boolean
  overload: Global.MainLoopProcess.AllowDialogs*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ProcessManager
  commentId: T:Global.ProcessManager
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager
  nameWithType: ProcessManager
  fullName: ProcessManager
- uid: Global.ProcessManager.ProcessID
  commentId: T:Global.ProcessManager.ProcessID
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager.ProcessID
  nameWithType: ProcessManager.ProcessID
  fullName: ProcessManager.ProcessID
  spec.csharp:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  spec.vb:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.MainLoopProcess.#ctor*
  commentId: Overload:Global.MainLoopProcess.#ctor
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess__ctor_ProcessManager_ProcessManager_ProcessID_
  name: MainLoopProcess
  nameWithType: MainLoopProcess.MainLoopProcess
  fullName: MainLoopProcess.MainLoopProcess
  nameWithType.vb: MainLoopProcess.New
  fullName.vb: MainLoopProcess.New
  name.vb: New
- uid: Global.MainLoopProcess.RawUpdate*
  commentId: Overload:Global.MainLoopProcess.RawUpdate
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  name: RawUpdate
  nameWithType: MainLoopProcess.RawUpdate
  fullName: MainLoopProcess.RawUpdate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.MainLoopProcess.Update*
  commentId: Overload:Global.MainLoopProcess.Update
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_Update
  name: Update
  nameWithType: MainLoopProcess.Update
  fullName: MainLoopProcess.Update
- uid: Global.MainLoopProcess.GrafUpdate*
  commentId: Overload:Global.MainLoopProcess.GrafUpdate
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: MainLoopProcess.GrafUpdate
  fullName: MainLoopProcess.GrafUpdate
- uid: Global.MainLoopProcess.ShutDownProcess*
  commentId: Overload:Global.MainLoopProcess.ShutDownProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_ShutDownProcess
  name: ShutDownProcess
  nameWithType: MainLoopProcess.ShutDownProcess
  fullName: MainLoopProcess.ShutDownProcess
- uid: Global.MainLoopProcess.CommunicateWithUpcomingProcess*
  commentId: Overload:Global.MainLoopProcess.CommunicateWithUpcomingProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_CommunicateWithUpcomingProcess_MainLoopProcess_
  name: CommunicateWithUpcomingProcess
  nameWithType: MainLoopProcess.CommunicateWithUpcomingProcess
  fullName: MainLoopProcess.CommunicateWithUpcomingProcess
- uid: Global.MainLoopProcess
  commentId: T:Global.MainLoopProcess
  isExternal: true
  href: MainLoopProcess.html
  name: MainLoopProcess
  nameWithType: MainLoopProcess
  fullName: MainLoopProcess
- uid: Global.MainLoopProcess.TimeSpeedFac*
  commentId: Overload:Global.MainLoopProcess.TimeSpeedFac
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_TimeSpeedFac
  name: TimeSpeedFac
  nameWithType: MainLoopProcess.TimeSpeedFac
  fullName: MainLoopProcess.TimeSpeedFac
- uid: Global.MainLoopProcess.FadeInTime*
  commentId: Overload:Global.MainLoopProcess.FadeInTime
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_FadeInTime
  name: FadeInTime
  nameWithType: MainLoopProcess.FadeInTime
  fullName: MainLoopProcess.FadeInTime
- uid: Global.MainLoopProcess.InitialBlackSeconds*
  commentId: Overload:Global.MainLoopProcess.InitialBlackSeconds
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_InitialBlackSeconds
  name: InitialBlackSeconds
  nameWithType: MainLoopProcess.InitialBlackSeconds
  fullName: MainLoopProcess.InitialBlackSeconds
- uid: Global.MainLoopProcess.AllowDialogs*
  commentId: Overload:Global.MainLoopProcess.AllowDialogs
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_AllowDialogs
  name: AllowDialogs
  nameWithType: MainLoopProcess.AllowDialogs
  fullName: MainLoopProcess.AllowDialogs
