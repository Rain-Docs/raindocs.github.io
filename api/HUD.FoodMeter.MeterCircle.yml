### YamlMime:ManagedReference
items:
- uid: HUD.FoodMeter.MeterCircle
  commentId: T:HUD.FoodMeter.MeterCircle
  id: FoodMeter.MeterCircle
  parent: HUD
  children:
  - HUD.FoodMeter.MeterCircle.#ctor(HUD.FoodMeter,System.Int32)
  - HUD.FoodMeter.MeterCircle.AddCircles
  - HUD.FoodMeter.MeterCircle.AddGradient
  - HUD.FoodMeter.MeterCircle.Draw(System.Single)
  - HUD.FoodMeter.MeterCircle.DrawPos(System.Single)
  - HUD.FoodMeter.MeterCircle.EatFade
  - HUD.FoodMeter.MeterCircle.FoodPlop
  - HUD.FoodMeter.MeterCircle.InitPlop
  - HUD.FoodMeter.MeterCircle.QuarterCirclePlop
  - HUD.FoodMeter.MeterCircle.Update
  - HUD.FoodMeter.MeterCircle.XAdd(System.Single)
  - HUD.FoodMeter.MeterCircle.backCircle
  - HUD.FoodMeter.MeterCircle.circles
  - HUD.FoodMeter.MeterCircle.eatCounter
  - HUD.FoodMeter.MeterCircle.eaten
  - HUD.FoodMeter.MeterCircle.foodPlopDelay
  - HUD.FoodMeter.MeterCircle.foodPlopped
  - HUD.FoodMeter.MeterCircle.gradient
  - HUD.FoodMeter.MeterCircle.lastSlowXAdd
  - HUD.FoodMeter.MeterCircle.meter
  - HUD.FoodMeter.MeterCircle.number
  - HUD.FoodMeter.MeterCircle.plopped
  - HUD.FoodMeter.MeterCircle.rads
  - HUD.FoodMeter.MeterCircle.slowXAdd
  langs:
  - csharp
  - vb
  name: FoodMeter.MeterCircle
  nameWithType: FoodMeter.MeterCircle
  fullName: HUD.FoodMeter.MeterCircle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.FoodMeter.MeterCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FoodMeter.MeterCircle
    content.vb: Public Class FoodMeter.MeterCircle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.FoodMeter.MeterCircle.meter
  commentId: F:HUD.FoodMeter.MeterCircle.meter
  id: meter
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: meter
  nameWithType: FoodMeter.MeterCircle.meter
  fullName: HUD.FoodMeter.MeterCircle.meter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.meter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FoodMeter meter
    return:
      type: HUD.FoodMeter
    content.vb: Public meter As FoodMeter
- uid: HUD.FoodMeter.MeterCircle.circles
  commentId: F:HUD.FoodMeter.MeterCircle.circles
  id: circles
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: circles
  nameWithType: FoodMeter.MeterCircle.circles
  fullName: HUD.FoodMeter.MeterCircle.circles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.circles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle[] circles
    return:
      type: HUD.HUDCircle[]
    content.vb: Public circles As HUDCircle()
- uid: HUD.FoodMeter.MeterCircle.gradient
  commentId: F:HUD.FoodMeter.MeterCircle.gradient
  id: gradient
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: gradient
  nameWithType: FoodMeter.MeterCircle.gradient
  fullName: HUD.FoodMeter.MeterCircle.gradient
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.gradient</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite gradient
    return:
      type: Global.FSprite
    content.vb: Public gradient As FSprite
- uid: HUD.FoodMeter.MeterCircle.number
  commentId: F:HUD.FoodMeter.MeterCircle.number
  id: number
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: number
  nameWithType: FoodMeter.MeterCircle.number
  fullName: HUD.FoodMeter.MeterCircle.number
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.number</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int number
    return:
      type: System.Int32
    content.vb: Public number As Integer
- uid: HUD.FoodMeter.MeterCircle.backCircle
  commentId: F:HUD.FoodMeter.MeterCircle.backCircle
  id: backCircle
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: backCircle
  nameWithType: FoodMeter.MeterCircle.backCircle
  fullName: HUD.FoodMeter.MeterCircle.backCircle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.backCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle backCircle
    return:
      type: HUD.HUDCircle
    content.vb: Public backCircle As HUDCircle
- uid: HUD.FoodMeter.MeterCircle.rads
  commentId: F:HUD.FoodMeter.MeterCircle.rads
  id: rads
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: rads
  nameWithType: FoodMeter.MeterCircle.rads
  fullName: HUD.FoodMeter.MeterCircle.rads
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.rads</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] rads
    return:
      type: System.Single[,]
    content.vb: Public rads As Single(,)
- uid: HUD.FoodMeter.MeterCircle.plopped
  commentId: F:HUD.FoodMeter.MeterCircle.plopped
  id: plopped
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: plopped
  nameWithType: FoodMeter.MeterCircle.plopped
  fullName: HUD.FoodMeter.MeterCircle.plopped
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.plopped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool plopped
    return:
      type: System.Boolean
    content.vb: Public plopped As Boolean
- uid: HUD.FoodMeter.MeterCircle.foodPlopped
  commentId: F:HUD.FoodMeter.MeterCircle.foodPlopped
  id: foodPlopped
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: foodPlopped
  nameWithType: FoodMeter.MeterCircle.foodPlopped
  fullName: HUD.FoodMeter.MeterCircle.foodPlopped
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.foodPlopped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool foodPlopped
    return:
      type: System.Boolean
    content.vb: Public foodPlopped As Boolean
- uid: HUD.FoodMeter.MeterCircle.eaten
  commentId: F:HUD.FoodMeter.MeterCircle.eaten
  id: eaten
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: eaten
  nameWithType: FoodMeter.MeterCircle.eaten
  fullName: HUD.FoodMeter.MeterCircle.eaten
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.eaten</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool eaten
    return:
      type: System.Boolean
    content.vb: Public eaten As Boolean
- uid: HUD.FoodMeter.MeterCircle.foodPlopDelay
  commentId: F:HUD.FoodMeter.MeterCircle.foodPlopDelay
  id: foodPlopDelay
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: foodPlopDelay
  nameWithType: FoodMeter.MeterCircle.foodPlopDelay
  fullName: HUD.FoodMeter.MeterCircle.foodPlopDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.foodPlopDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int foodPlopDelay
    return:
      type: System.Int32
    content.vb: Public foodPlopDelay As Integer
- uid: HUD.FoodMeter.MeterCircle.eatCounter
  commentId: F:HUD.FoodMeter.MeterCircle.eatCounter
  id: eatCounter
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: eatCounter
  nameWithType: FoodMeter.MeterCircle.eatCounter
  fullName: HUD.FoodMeter.MeterCircle.eatCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.eatCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eatCounter
    return:
      type: System.Int32
    content.vb: Public eatCounter As Integer
- uid: HUD.FoodMeter.MeterCircle.slowXAdd
  commentId: F:HUD.FoodMeter.MeterCircle.slowXAdd
  id: slowXAdd
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: slowXAdd
  nameWithType: FoodMeter.MeterCircle.slowXAdd
  fullName: HUD.FoodMeter.MeterCircle.slowXAdd
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.slowXAdd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float slowXAdd
    return:
      type: System.Single
    content.vb: Public slowXAdd As Single
- uid: HUD.FoodMeter.MeterCircle.lastSlowXAdd
  commentId: F:HUD.FoodMeter.MeterCircle.lastSlowXAdd
  id: lastSlowXAdd
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: lastSlowXAdd
  nameWithType: FoodMeter.MeterCircle.lastSlowXAdd
  fullName: HUD.FoodMeter.MeterCircle.lastSlowXAdd
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.FoodMeter.MeterCircle.lastSlowXAdd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastSlowXAdd
    return:
      type: System.Single
    content.vb: Public lastSlowXAdd As Single
- uid: HUD.FoodMeter.MeterCircle.#ctor(HUD.FoodMeter,System.Int32)
  commentId: M:HUD.FoodMeter.MeterCircle.#ctor(HUD.FoodMeter,System.Int32)
  id: '#ctor(HUD.FoodMeter,System.Int32)'
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: MeterCircle(FoodMeter, int)
  nameWithType: FoodMeter.MeterCircle.MeterCircle(FoodMeter, int)
  fullName: HUD.FoodMeter.MeterCircle.MeterCircle(HUD.FoodMeter, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.FoodMeter.MeterCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MeterCircle(FoodMeter meter, int number)
    parameters:
    - id: meter
      type: HUD.FoodMeter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>meter</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.#ctor(HUD.FoodMeter,System.Int32)</parameter>
          </include>
        </markup>
    - id: number
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>number</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.#ctor(HUD.FoodMeter,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(meter As FoodMeter, number As Integer)
  overload: HUD.FoodMeter.MeterCircle.#ctor*
  nameWithType.vb: FoodMeter.MeterCircle.New(FoodMeter, Integer)
  fullName.vb: HUD.FoodMeter.MeterCircle.New(HUD.FoodMeter, Integer)
  name.vb: New(FoodMeter, Integer)
- uid: HUD.FoodMeter.MeterCircle.DrawPos(System.Single)
  commentId: M:HUD.FoodMeter.MeterCircle.DrawPos(System.Single)
  id: DrawPos(System.Single)
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: DrawPos(float)
  nameWithType: FoodMeter.MeterCircle.DrawPos(float)
  fullName: HUD.FoodMeter.MeterCircle.DrawPos(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.DrawPos(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 DrawPos(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.DrawPos(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.DrawPos(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function DrawPos(timeStacker As Single) As Vector2
  overload: HUD.FoodMeter.MeterCircle.DrawPos*
  nameWithType.vb: FoodMeter.MeterCircle.DrawPos(Single)
  fullName.vb: HUD.FoodMeter.MeterCircle.DrawPos(Single)
  name.vb: DrawPos(Single)
- uid: HUD.FoodMeter.MeterCircle.XAdd(System.Single)
  commentId: M:HUD.FoodMeter.MeterCircle.XAdd(System.Single)
  id: XAdd(System.Single)
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: XAdd(float)
  nameWithType: FoodMeter.MeterCircle.XAdd(float)
  fullName: HUD.FoodMeter.MeterCircle.XAdd(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.XAdd(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float XAdd(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.XAdd(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.XAdd(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function XAdd(timeStacker As Single) As Single
  overload: HUD.FoodMeter.MeterCircle.XAdd*
  nameWithType.vb: FoodMeter.MeterCircle.XAdd(Single)
  fullName.vb: HUD.FoodMeter.MeterCircle.XAdd(Single)
  name.vb: XAdd(Single)
- uid: HUD.FoodMeter.MeterCircle.AddGradient
  commentId: M:HUD.FoodMeter.MeterCircle.AddGradient
  id: AddGradient
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: AddGradient()
  nameWithType: FoodMeter.MeterCircle.AddGradient()
  fullName: HUD.FoodMeter.MeterCircle.AddGradient()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.AddGradient</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddGradient()
    content.vb: Public Sub AddGradient()
  overload: HUD.FoodMeter.MeterCircle.AddGradient*
- uid: HUD.FoodMeter.MeterCircle.AddCircles
  commentId: M:HUD.FoodMeter.MeterCircle.AddCircles
  id: AddCircles
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: AddCircles()
  nameWithType: FoodMeter.MeterCircle.AddCircles()
  fullName: HUD.FoodMeter.MeterCircle.AddCircles()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.AddCircles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddCircles()
    content.vb: Public Sub AddCircles()
  overload: HUD.FoodMeter.MeterCircle.AddCircles*
- uid: HUD.FoodMeter.MeterCircle.InitPlop
  commentId: M:HUD.FoodMeter.MeterCircle.InitPlop
  id: InitPlop
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: InitPlop()
  nameWithType: FoodMeter.MeterCircle.InitPlop()
  fullName: HUD.FoodMeter.MeterCircle.InitPlop()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.InitPlop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitPlop()
    content.vb: Public Sub InitPlop()
  overload: HUD.FoodMeter.MeterCircle.InitPlop*
- uid: HUD.FoodMeter.MeterCircle.FoodPlop
  commentId: M:HUD.FoodMeter.MeterCircle.FoodPlop
  id: FoodPlop
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: FoodPlop()
  nameWithType: FoodMeter.MeterCircle.FoodPlop()
  fullName: HUD.FoodMeter.MeterCircle.FoodPlop()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.FoodPlop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FoodPlop()
    content.vb: Public Sub FoodPlop()
  overload: HUD.FoodMeter.MeterCircle.FoodPlop*
- uid: HUD.FoodMeter.MeterCircle.QuarterCirclePlop
  commentId: M:HUD.FoodMeter.MeterCircle.QuarterCirclePlop
  id: QuarterCirclePlop
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: QuarterCirclePlop()
  nameWithType: FoodMeter.MeterCircle.QuarterCirclePlop()
  fullName: HUD.FoodMeter.MeterCircle.QuarterCirclePlop()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.QuarterCirclePlop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void QuarterCirclePlop()
    content.vb: Public Sub QuarterCirclePlop()
  overload: HUD.FoodMeter.MeterCircle.QuarterCirclePlop*
- uid: HUD.FoodMeter.MeterCircle.EatFade
  commentId: M:HUD.FoodMeter.MeterCircle.EatFade
  id: EatFade
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: EatFade()
  nameWithType: FoodMeter.MeterCircle.EatFade()
  fullName: HUD.FoodMeter.MeterCircle.EatFade()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.EatFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EatFade()
    content.vb: Public Sub EatFade()
  overload: HUD.FoodMeter.MeterCircle.EatFade*
- uid: HUD.FoodMeter.MeterCircle.Update
  commentId: M:HUD.FoodMeter.MeterCircle.Update
  id: Update
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: FoodMeter.MeterCircle.Update()
  fullName: HUD.FoodMeter.MeterCircle.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: HUD.FoodMeter.MeterCircle.Update*
- uid: HUD.FoodMeter.MeterCircle.Draw(System.Single)
  commentId: M:HUD.FoodMeter.MeterCircle.Draw(System.Single)
  id: Draw(System.Single)
  parent: HUD.FoodMeter.MeterCircle
  langs:
  - csharp
  - vb
  name: Draw(float)
  nameWithType: FoodMeter.MeterCircle.Draw(float)
  fullName: HUD.FoodMeter.MeterCircle.Draw(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.FoodMeter.MeterCircle.Draw(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Draw(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.FoodMeter.MeterCircle.Draw(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Draw(timeStacker As Single)
  overload: HUD.FoodMeter.MeterCircle.Draw*
  nameWithType.vb: FoodMeter.MeterCircle.Draw(Single)
  fullName.vb: HUD.FoodMeter.MeterCircle.Draw(Single)
  name.vb: Draw(Single)
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HUD.FoodMeter
  commentId: T:HUD.FoodMeter
  parent: HUD
  isExternal: true
  href: HUD.FoodMeter.html
  name: FoodMeter
  nameWithType: FoodMeter
  fullName: HUD.FoodMeter
- uid: HUD.HUDCircle[]
  isExternal: true
  href: HUD.HUDCircle.html
  name: HUDCircle[]
  nameWithType: HUDCircle[]
  fullName: HUD.HUDCircle[]
  nameWithType.vb: HUDCircle()
  fullName.vb: HUD.HUDCircle()
  name.vb: HUDCircle()
  spec.csharp:
  - uid: HUD.HUDCircle
    name: HUDCircle
    isExternal: true
    href: HUD.HUDCircle.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: HUD.HUDCircle
    name: HUDCircle
    isExternal: true
    href: HUD.HUDCircle.html
  - name: (
  - name: )
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: HUD.HUDCircle
  commentId: T:HUD.HUDCircle
  parent: HUD
  isExternal: true
  href: HUD.HUDCircle.html
  name: HUDCircle
  nameWithType: HUDCircle
  fullName: HUD.HUDCircle
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: HUD.FoodMeter.MeterCircle.#ctor*
  commentId: Overload:HUD.FoodMeter.MeterCircle.#ctor
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle__ctor_HUD_FoodMeter_System_Int32_
  name: MeterCircle
  nameWithType: FoodMeter.MeterCircle.MeterCircle
  fullName: HUD.FoodMeter.MeterCircle.MeterCircle
  nameWithType.vb: FoodMeter.MeterCircle.New
  fullName.vb: HUD.FoodMeter.MeterCircle.New
  name.vb: New
- uid: HUD.FoodMeter.MeterCircle.DrawPos*
  commentId: Overload:HUD.FoodMeter.MeterCircle.DrawPos
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_DrawPos_System_Single_
  name: DrawPos
  nameWithType: FoodMeter.MeterCircle.DrawPos
  fullName: HUD.FoodMeter.MeterCircle.DrawPos
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: HUD.FoodMeter.MeterCircle.XAdd*
  commentId: Overload:HUD.FoodMeter.MeterCircle.XAdd
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_XAdd_System_Single_
  name: XAdd
  nameWithType: FoodMeter.MeterCircle.XAdd
  fullName: HUD.FoodMeter.MeterCircle.XAdd
- uid: HUD.FoodMeter.MeterCircle.AddGradient*
  commentId: Overload:HUD.FoodMeter.MeterCircle.AddGradient
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_AddGradient
  name: AddGradient
  nameWithType: FoodMeter.MeterCircle.AddGradient
  fullName: HUD.FoodMeter.MeterCircle.AddGradient
- uid: HUD.FoodMeter.MeterCircle.AddCircles*
  commentId: Overload:HUD.FoodMeter.MeterCircle.AddCircles
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_AddCircles
  name: AddCircles
  nameWithType: FoodMeter.MeterCircle.AddCircles
  fullName: HUD.FoodMeter.MeterCircle.AddCircles
- uid: HUD.FoodMeter.MeterCircle.InitPlop*
  commentId: Overload:HUD.FoodMeter.MeterCircle.InitPlop
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_InitPlop
  name: InitPlop
  nameWithType: FoodMeter.MeterCircle.InitPlop
  fullName: HUD.FoodMeter.MeterCircle.InitPlop
- uid: HUD.FoodMeter.MeterCircle.FoodPlop*
  commentId: Overload:HUD.FoodMeter.MeterCircle.FoodPlop
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_FoodPlop
  name: FoodPlop
  nameWithType: FoodMeter.MeterCircle.FoodPlop
  fullName: HUD.FoodMeter.MeterCircle.FoodPlop
- uid: HUD.FoodMeter.MeterCircle.QuarterCirclePlop*
  commentId: Overload:HUD.FoodMeter.MeterCircle.QuarterCirclePlop
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_QuarterCirclePlop
  name: QuarterCirclePlop
  nameWithType: FoodMeter.MeterCircle.QuarterCirclePlop
  fullName: HUD.FoodMeter.MeterCircle.QuarterCirclePlop
- uid: HUD.FoodMeter.MeterCircle.EatFade*
  commentId: Overload:HUD.FoodMeter.MeterCircle.EatFade
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_EatFade
  name: EatFade
  nameWithType: FoodMeter.MeterCircle.EatFade
  fullName: HUD.FoodMeter.MeterCircle.EatFade
- uid: HUD.FoodMeter.MeterCircle.Update*
  commentId: Overload:HUD.FoodMeter.MeterCircle.Update
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_Update
  name: Update
  nameWithType: FoodMeter.MeterCircle.Update
  fullName: HUD.FoodMeter.MeterCircle.Update
- uid: HUD.FoodMeter.MeterCircle.Draw*
  commentId: Overload:HUD.FoodMeter.MeterCircle.Draw
  isExternal: true
  href: HUD.FoodMeter.MeterCircle.html#HUD_FoodMeter_MeterCircle_Draw_System_Single_
  name: Draw
  nameWithType: FoodMeter.MeterCircle.Draw
  fullName: HUD.FoodMeter.MeterCircle.Draw
