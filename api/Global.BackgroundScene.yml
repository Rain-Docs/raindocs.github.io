### YamlMime:ManagedReference
items:
- uid: Global.BackgroundScene
  commentId: T:Global.BackgroundScene
  id: BackgroundScene
  parent: Global
  children:
  - Global.BackgroundScene.#ctor(Room)
  - Global.BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)
  - Global.BackgroundScene.Destroy
  - Global.BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)
  - Global.BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)
  - Global.BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)
  - Global.BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)
  - Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)
  - Global.BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)
  - Global.BackgroundScene.Update(System.Boolean)
  - Global.BackgroundScene.convergencePoint
  - Global.BackgroundScene.elements
  - Global.BackgroundScene.sceneOrigo
  langs:
  - csharp
  - vb
  name: BackgroundScene
  nameWithType: BackgroundScene
  fullName: BackgroundScene
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:BackgroundScene</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class BackgroundScene : UpdatableAndDeletable'
    content.vb: Public Class BackgroundScene Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  derivedClasses:
  - Global.AboveCloudsView
  - Global.RoofTopView
  - Global.RotWormScene
  - VoidSea.VoidSeaScene
  - Watcher.AncientUrbanView
  - Watcher.InnerOuterRimView
  - Watcher.OuterRimView
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.BackgroundScene.elements
  commentId: F:Global.BackgroundScene.elements
  id: elements
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: elements
  nameWithType: BackgroundScene.elements
  fullName: BackgroundScene.elements
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackgroundScene.elements</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<BackgroundScene.BackgroundSceneElement> elements
    return:
      type: System.Collections.Generic.List{BackgroundScene.BackgroundSceneElement}
    content.vb: Public elements As List(Of BackgroundScene.BackgroundSceneElement)
- uid: Global.BackgroundScene.sceneOrigo
  commentId: F:Global.BackgroundScene.sceneOrigo
  id: sceneOrigo
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: sceneOrigo
  nameWithType: BackgroundScene.sceneOrigo
  fullName: BackgroundScene.sceneOrigo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackgroundScene.sceneOrigo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 sceneOrigo
    return:
      type: UnityEngine.Vector2
    content.vb: Public sceneOrigo As Vector2
- uid: Global.BackgroundScene.convergencePoint
  commentId: F:Global.BackgroundScene.convergencePoint
  id: convergencePoint
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: convergencePoint
  nameWithType: BackgroundScene.convergencePoint
  fullName: BackgroundScene.convergencePoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackgroundScene.convergencePoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 convergencePoint
    return:
      type: UnityEngine.Vector2
    content.vb: Public convergencePoint As Vector2
- uid: Global.BackgroundScene.#ctor(Room)
  commentId: M:Global.BackgroundScene.#ctor(Room)
  id: '#ctor(Room)'
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: BackgroundScene(Room)
  nameWithType: BackgroundScene.BackgroundScene(Room)
  fullName: BackgroundScene.BackgroundScene(Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>BackgroundScene</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BackgroundScene(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:BackgroundScene.#ctor(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room)
  overload: Global.BackgroundScene.#ctor*
  nameWithType.vb: BackgroundScene.New(Room)
  fullName.vb: BackgroundScene.New(Room)
  name.vb: New(Room)
- uid: Global.BackgroundScene.Update(System.Boolean)
  commentId: M:Global.BackgroundScene.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: BackgroundScene.Update(bool)
  fullName: BackgroundScene.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:BackgroundScene.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.BackgroundScene.Update*
  nameWithType.vb: BackgroundScene.Update(Boolean)
  fullName.vb: BackgroundScene.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)
  commentId: M:Global.BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)
  id: AddElement(BackgroundScene.BackgroundSceneElement)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: AddElement(BackgroundSceneElement)
  nameWithType: BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)
  fullName: BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void AddElement(BackgroundScene.BackgroundSceneElement element)
    parameters:
    - id: element
      type: Global.BackgroundScene.BackgroundSceneElement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>element</parameter>
            <parameter>M:BackgroundScene.AddElement(BackgroundScene.BackgroundSceneElement)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub AddElement(element As BackgroundScene.BackgroundSceneElement)
  overload: Global.BackgroundScene.AddElement*
- uid: Global.BackgroundScene.Destroy
  commentId: M:Global.BackgroundScene.Destroy
  id: Destroy
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: BackgroundScene.Destroy()
  fullName: BackgroundScene.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy()
  overridden: Global.UpdatableAndDeletable.Destroy
  overload: Global.BackgroundScene.Destroy*
- uid: Global.BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)
  commentId: M:Global.BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)
  id: RoomToWorldPos(UnityEngine.Vector2)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: RoomToWorldPos(Vector2)
  nameWithType: BackgroundScene.RoomToWorldPos(Vector2)
  fullName: BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RoomToWorldPos(Vector2 inRoomPos)
    parameters:
    - id: inRoomPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inRoomPos</parameter>
            <parameter>M:BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BackgroundScene.RoomToWorldPos(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function RoomToWorldPos(inRoomPos As Vector2) As Vector2
  overload: Global.BackgroundScene.RoomToWorldPos*
- uid: Global.BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)
  commentId: M:Global.BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)
  id: DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: DrawPos(Vector2, float, Vector2, float)
  nameWithType: BackgroundScene.DrawPos(Vector2, float, Vector2, float)
  fullName: BackgroundScene.DrawPos(UnityEngine.Vector2, float, UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 DrawPos(Vector2 pos, float depth, Vector2 camPos, float hDisplace)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: depth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depth</parameter>
            <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: hDisplace
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hDisplace</parameter>
            <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BackgroundScene.DrawPos(UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function DrawPos(pos As Vector2, depth As Single, camPos As Vector2, hDisplace As Single) As Vector2
  overload: Global.BackgroundScene.DrawPos*
  nameWithType.vb: BackgroundScene.DrawPos(Vector2, Single, Vector2, Single)
  fullName.vb: BackgroundScene.DrawPos(UnityEngine.Vector2, Single, UnityEngine.Vector2, Single)
  name.vb: DrawPos(Vector2, Single, Vector2, Single)
- uid: Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)
  commentId: M:Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)
  id: PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: PosFromDrawPosAtNeutralCamPos(Vector2, float)
  nameWithType: BackgroundScene.PosFromDrawPosAtNeutralCamPos(Vector2, float)
  fullName: BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 PosFromDrawPosAtNeutralCamPos(Vector2 input, float depth)
    parameters:
    - id: input
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>input</parameter>
            <parameter>M:BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: depth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depth</parameter>
            <parameter>M:BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PosFromDrawPosAtNeutralCamPos(input As Vector2, depth As Single) As Vector2
  overload: Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos*
  nameWithType.vb: BackgroundScene.PosFromDrawPosAtNeutralCamPos(Vector2, Single)
  fullName.vb: BackgroundScene.PosFromDrawPosAtNeutralCamPos(UnityEngine.Vector2, Single)
  name.vb: PosFromDrawPosAtNeutralCamPos(Vector2, Single)
- uid: Global.BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)
  commentId: M:Global.BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)
  id: LoadGraphic(System.String,System.Boolean,System.Boolean)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: LoadGraphic(string, bool, bool)
  nameWithType: BackgroundScene.LoadGraphic(string, bool, bool)
  fullName: BackgroundScene.LoadGraphic(string, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadGraphic(string elementName, bool crispPixels, bool clampWrapMode)
    parameters:
    - id: elementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elementName</parameter>
            <parameter>M:BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: crispPixels
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crispPixels</parameter>
            <parameter>M:BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: clampWrapMode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clampWrapMode</parameter>
            <parameter>M:BackgroundScene.LoadGraphic(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub LoadGraphic(elementName As String, crispPixels As Boolean, clampWrapMode As Boolean)
  overload: Global.BackgroundScene.LoadGraphic*
  nameWithType.vb: BackgroundScene.LoadGraphic(String, Boolean, Boolean)
  fullName.vb: BackgroundScene.LoadGraphic(String, Boolean, Boolean)
  name.vb: LoadGraphic(String, Boolean, Boolean)
- uid: Global.BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Global.BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)
  id: ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: ManualLoadGraphic(string, string, bool, bool)
  nameWithType: BackgroundScene.ManualLoadGraphic(string, string, bool, bool)
  fullName: BackgroundScene.ManualLoadGraphic(string, string, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ManualLoadGraphic(string fullPath, string name, bool crispPixels, bool clampWrapMode)
    parameters:
    - id: fullPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fullPath</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: crispPixels
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crispPixels</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: clampWrapMode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clampWrapMode</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphic(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ManualLoadGraphic(fullPath As String, name As String, crispPixels As Boolean, clampWrapMode As Boolean)
  overload: Global.BackgroundScene.ManualLoadGraphic*
  nameWithType.vb: BackgroundScene.ManualLoadGraphic(String, String, Boolean, Boolean)
  fullName.vb: BackgroundScene.ManualLoadGraphic(String, String, Boolean, Boolean)
  name.vb: ManualLoadGraphic(String, String, Boolean, Boolean)
- uid: Global.BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)
  commentId: M:Global.BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)
  id: ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)
  parent: Global.BackgroundScene
  langs:
  - csharp
  - vb
  name: ManualLoadGraphicFullpath(string, string, bool, bool)
  nameWithType: BackgroundScene.ManualLoadGraphicFullpath(string, string, bool, bool)
  fullName: BackgroundScene.ManualLoadGraphicFullpath(string, string, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ManualLoadGraphicFullpath(string fullFilePath, string atlasName, bool crispPixels, bool clampWrapMode)
    parameters:
    - id: fullFilePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fullFilePath</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: atlasName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlasName</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: crispPixels
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crispPixels</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: clampWrapMode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clampWrapMode</parameter>
            <parameter>M:BackgroundScene.ManualLoadGraphicFullpath(System.String,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ManualLoadGraphicFullpath(fullFilePath As String, atlasName As String, crispPixels As Boolean, clampWrapMode As Boolean)
  overload: Global.BackgroundScene.ManualLoadGraphicFullpath*
  nameWithType.vb: BackgroundScene.ManualLoadGraphicFullpath(String, String, Boolean, Boolean)
  fullName.vb: BackgroundScene.ManualLoadGraphicFullpath(String, String, Boolean, Boolean)
  name.vb: ManualLoadGraphicFullpath(String, String, Boolean, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{BackgroundScene.BackgroundSceneElement}
  commentId: T:System.Collections.Generic.List{BackgroundScene.BackgroundSceneElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<BackgroundScene.BackgroundSceneElement>
  nameWithType: List<BackgroundScene.BackgroundSceneElement>
  fullName: System.Collections.Generic.List<BackgroundScene.BackgroundSceneElement>
  nameWithType.vb: List(Of BackgroundScene.BackgroundSceneElement)
  fullName.vb: System.Collections.Generic.List(Of BackgroundScene.BackgroundSceneElement)
  name.vb: List(Of BackgroundScene.BackgroundSceneElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.BackgroundScene
    name: BackgroundScene
    isExternal: true
    href: BackgroundScene.html
  - name: .
  - uid: Global.BackgroundScene.BackgroundSceneElement
    name: BackgroundSceneElement
    isExternal: true
    href: BackgroundScene.BackgroundSceneElement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.BackgroundScene
    name: BackgroundScene
    isExternal: true
    href: BackgroundScene.html
  - name: .
  - uid: Global.BackgroundScene.BackgroundSceneElement
    name: BackgroundSceneElement
    isExternal: true
    href: BackgroundScene.BackgroundSceneElement.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.BackgroundScene.#ctor*
  commentId: Overload:Global.BackgroundScene.#ctor
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene__ctor_Room_
  name: BackgroundScene
  nameWithType: BackgroundScene.BackgroundScene
  fullName: BackgroundScene.BackgroundScene
  nameWithType.vb: BackgroundScene.New
  fullName.vb: BackgroundScene.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.BackgroundScene.Update*
  commentId: Overload:Global.BackgroundScene.Update
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_Update_System_Boolean_
  name: Update
  nameWithType: BackgroundScene.Update
  fullName: BackgroundScene.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.BackgroundScene.AddElement*
  commentId: Overload:Global.BackgroundScene.AddElement
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_AddElement_BackgroundScene_BackgroundSceneElement_
  name: AddElement
  nameWithType: BackgroundScene.AddElement
  fullName: BackgroundScene.AddElement
- uid: Global.BackgroundScene.BackgroundSceneElement
  commentId: T:Global.BackgroundScene.BackgroundSceneElement
  isExternal: true
  href: BackgroundScene.html
  name: BackgroundScene.BackgroundSceneElement
  nameWithType: BackgroundScene.BackgroundSceneElement
  fullName: BackgroundScene.BackgroundSceneElement
  spec.csharp:
  - uid: Global.BackgroundScene
    name: BackgroundScene
    isExternal: true
    href: BackgroundScene.html
  - name: .
  - uid: Global.BackgroundScene.BackgroundSceneElement
    name: BackgroundSceneElement
    isExternal: true
    href: BackgroundScene.BackgroundSceneElement.html
  spec.vb:
  - uid: Global.BackgroundScene
    name: BackgroundScene
    isExternal: true
    href: BackgroundScene.html
  - name: .
  - uid: Global.BackgroundScene.BackgroundSceneElement
    name: BackgroundSceneElement
    isExternal: true
    href: BackgroundScene.BackgroundSceneElement.html
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.BackgroundScene.Destroy*
  commentId: Overload:Global.BackgroundScene.Destroy
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_Destroy
  name: Destroy
  nameWithType: BackgroundScene.Destroy
  fullName: BackgroundScene.Destroy
- uid: Global.BackgroundScene.RoomToWorldPos*
  commentId: Overload:Global.BackgroundScene.RoomToWorldPos
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_RoomToWorldPos_UnityEngine_Vector2_
  name: RoomToWorldPos
  nameWithType: BackgroundScene.RoomToWorldPos
  fullName: BackgroundScene.RoomToWorldPos
- uid: Global.BackgroundScene.DrawPos*
  commentId: Overload:Global.BackgroundScene.DrawPos
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_DrawPos_UnityEngine_Vector2_System_Single_UnityEngine_Vector2_System_Single_
  name: DrawPos
  nameWithType: BackgroundScene.DrawPos
  fullName: BackgroundScene.DrawPos
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos*
  commentId: Overload:Global.BackgroundScene.PosFromDrawPosAtNeutralCamPos
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_PosFromDrawPosAtNeutralCamPos_UnityEngine_Vector2_System_Single_
  name: PosFromDrawPosAtNeutralCamPos
  nameWithType: BackgroundScene.PosFromDrawPosAtNeutralCamPos
  fullName: BackgroundScene.PosFromDrawPosAtNeutralCamPos
- uid: Global.BackgroundScene.LoadGraphic*
  commentId: Overload:Global.BackgroundScene.LoadGraphic
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_LoadGraphic_System_String_System_Boolean_System_Boolean_
  name: LoadGraphic
  nameWithType: BackgroundScene.LoadGraphic
  fullName: BackgroundScene.LoadGraphic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.BackgroundScene.ManualLoadGraphic*
  commentId: Overload:Global.BackgroundScene.ManualLoadGraphic
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_ManualLoadGraphic_System_String_System_String_System_Boolean_System_Boolean_
  name: ManualLoadGraphic
  nameWithType: BackgroundScene.ManualLoadGraphic
  fullName: BackgroundScene.ManualLoadGraphic
- uid: Global.BackgroundScene.ManualLoadGraphicFullpath*
  commentId: Overload:Global.BackgroundScene.ManualLoadGraphicFullpath
  isExternal: true
  href: Global.BackgroundScene.html#BackgroundScene_ManualLoadGraphicFullpath_System_String_System_String_System_Boolean_System_Boolean_
  name: ManualLoadGraphicFullpath
  nameWithType: BackgroundScene.ManualLoadGraphicFullpath
  fullName: BackgroundScene.ManualLoadGraphicFullpath
