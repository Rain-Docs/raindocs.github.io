### YamlMime:ManagedReference
items:
- uid: Watcher.FloatingDebris.FloaterData
  commentId: T:Watcher.FloatingDebris.FloaterData
  id: FloatingDebris.FloaterData
  parent: Watcher
  children:
  - Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)
  - Watcher.FloatingDebris.FloaterData.depth
  - Watcher.FloatingDebris.FloaterData.depthOffset
  - Watcher.FloatingDebris.FloaterData.extraOffsets
  - Watcher.FloatingDebris.FloaterData.index
  - Watcher.FloatingDebris.FloaterData.influence
  - Watcher.FloatingDebris.FloaterData.movement
  - Watcher.FloatingDebris.FloaterData.offset
  - Watcher.FloatingDebris.FloaterData.offsetAmount
  - Watcher.FloatingDebris.FloaterData.origPos
  - Watcher.FloatingDebris.FloaterData.owner
  - Watcher.FloatingDebris.FloaterData.scale
  - Watcher.FloatingDebris.FloaterData.scaleOffset
  langs:
  - csharp
  - vb
  name: FloatingDebris.FloaterData
  nameWithType: FloatingDebris.FloaterData
  fullName: Watcher.FloatingDebris.FloaterData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.FloatingDebris.FloaterData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FloatingDebris.FloaterData
    content.vb: Public Class FloatingDebris.FloaterData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.FloatingDebris.FloaterData.index
  commentId: F:Watcher.FloatingDebris.FloaterData.index
  id: index
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: index
  nameWithType: FloatingDebris.FloaterData.index
  fullName: Watcher.FloatingDebris.FloaterData.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Watcher.FloatingDebris.FloaterData.influence
  commentId: F:Watcher.FloatingDebris.FloaterData.influence
  id: influence
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: influence
  nameWithType: FloatingDebris.FloaterData.influence
  fullName: Watcher.FloatingDebris.FloaterData.influence
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.influence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public (int, float) influence
    return:
      type: System.ValueTuple{System.Int32,System.Single}
    content.vb: Public influence As (Integer, Single)
- uid: Watcher.FloatingDebris.FloaterData.offset
  commentId: F:Watcher.FloatingDebris.FloaterData.offset
  id: offset
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: offset
  nameWithType: FloatingDebris.FloaterData.offset
  fullName: Watcher.FloatingDebris.FloaterData.offset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.offset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 offset
    return:
      type: UnityEngine.Vector2
    content.vb: Public offset As Vector2
- uid: Watcher.FloatingDebris.FloaterData.offsetAmount
  commentId: F:Watcher.FloatingDebris.FloaterData.offsetAmount
  id: offsetAmount
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: offsetAmount
  nameWithType: FloatingDebris.FloaterData.offsetAmount
  fullName: Watcher.FloatingDebris.FloaterData.offsetAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.offsetAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offsetAmount
    return:
      type: System.Single
    content.vb: Public offsetAmount As Single
- uid: Watcher.FloatingDebris.FloaterData.origPos
  commentId: F:Watcher.FloatingDebris.FloaterData.origPos
  id: origPos
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: origPos
  nameWithType: FloatingDebris.FloaterData.origPos
  fullName: Watcher.FloatingDebris.FloaterData.origPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.origPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 origPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public origPos As Vector2
- uid: Watcher.FloatingDebris.FloaterData.scale
  commentId: F:Watcher.FloatingDebris.FloaterData.scale
  id: scale
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: scale
  nameWithType: FloatingDebris.FloaterData.scale
  fullName: Watcher.FloatingDebris.FloaterData.scale
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.scale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scale
    return:
      type: System.Single
    content.vb: Public scale As Single
- uid: Watcher.FloatingDebris.FloaterData.scaleOffset
  commentId: F:Watcher.FloatingDebris.FloaterData.scaleOffset
  id: scaleOffset
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: scaleOffset
  nameWithType: FloatingDebris.FloaterData.scaleOffset
  fullName: Watcher.FloatingDebris.FloaterData.scaleOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.scaleOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scaleOffset
    return:
      type: System.Single
    content.vb: Public scaleOffset As Single
- uid: Watcher.FloatingDebris.FloaterData.extraOffsets
  commentId: F:Watcher.FloatingDebris.FloaterData.extraOffsets
  id: extraOffsets
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: extraOffsets
  nameWithType: FloatingDebris.FloaterData.extraOffsets
  fullName: Watcher.FloatingDebris.FloaterData.extraOffsets
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.extraOffsets</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector4 extraOffsets
    return:
      type: UnityEngine.Vector4
    content.vb: Public extraOffsets As Vector4
- uid: Watcher.FloatingDebris.FloaterData.depth
  commentId: F:Watcher.FloatingDebris.FloaterData.depth
  id: depth
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: depth
  nameWithType: FloatingDebris.FloaterData.depth
  fullName: Watcher.FloatingDebris.FloaterData.depth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.depth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float depth
    return:
      type: System.Single
    content.vb: Public depth As Single
- uid: Watcher.FloatingDebris.FloaterData.depthOffset
  commentId: F:Watcher.FloatingDebris.FloaterData.depthOffset
  id: depthOffset
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: depthOffset
  nameWithType: FloatingDebris.FloaterData.depthOffset
  fullName: Watcher.FloatingDebris.FloaterData.depthOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.depthOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float depthOffset
    return:
      type: System.Single
    content.vb: Public depthOffset As Single
- uid: Watcher.FloatingDebris.FloaterData.movement
  commentId: F:Watcher.FloatingDebris.FloaterData.movement
  id: movement
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: movement
  nameWithType: FloatingDebris.FloaterData.movement
  fullName: Watcher.FloatingDebris.FloaterData.movement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.movement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float movement
    return:
      type: System.Single
    content.vb: Public movement As Single
- uid: Watcher.FloatingDebris.FloaterData.owner
  commentId: F:Watcher.FloatingDebris.FloaterData.owner
  id: owner
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: FloatingDebris.FloaterData.owner
  fullName: Watcher.FloatingDebris.FloaterData.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FloatingDebris.FloaterData.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatingDebris owner
    return:
      type: Watcher.FloatingDebris
    content.vb: Public owner As FloatingDebris
- uid: Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)
  commentId: M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)
  id: '#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)'
  parent: Watcher.FloatingDebris.FloaterData
  langs:
  - csharp
  - vb
  name: FloaterData(FloatingDebris, int, (int, float), Vector2, Vector2, float, float, float, float, float, Vector4, float)
  nameWithType: FloatingDebris.FloaterData.FloaterData(FloatingDebris, int, (int, float), Vector2, Vector2, float, float, float, float, float, Vector4, float)
  fullName: Watcher.FloatingDebris.FloaterData.FloaterData(Watcher.FloatingDebris, int, (int, float), UnityEngine.Vector2, UnityEngine.Vector2, float, float, float, float, float, UnityEngine.Vector4, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.FloatingDebris.FloaterData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloaterData(FloatingDebris owner, int index, (int, float) influence, Vector2 origPos, Vector2 offset, float offsetAmount, float depth, float depthOffset, float scale, float scaleOffset, Vector4 extraOffsets, float movement)
    parameters:
    - id: owner
      type: Watcher.FloatingDebris
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: influence
      type: System.ValueTuple{System.Int32,System.Single}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>influence</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: origPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>origPos</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: offset
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetAmount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetAmount</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: depth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depth</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: depthOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depthOffset</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: scale
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scale</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: scaleOffset
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scaleOffset</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: extraOffsets
      type: UnityEngine.Vector4
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>extraOffsets</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    - id: movement
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movement</parameter>
            <parameter>M:Watcher.FloatingDebris.FloaterData.#ctor(Watcher.FloatingDebris,System.Int32,System.ValueTuple{System.Int32,System.Single},UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Single,System.Single,System.Single,System.Single,UnityEngine.Vector4,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As FloatingDebris, index As Integer, influence As (Integer, Single), origPos As Vector2, offset As Vector2, offsetAmount As Single, depth As Single, depthOffset As Single, scale As Single, scaleOffset As Single, extraOffsets As Vector4, movement As Single)
  overload: Watcher.FloatingDebris.FloaterData.#ctor*
  nameWithType.vb: FloatingDebris.FloaterData.New(FloatingDebris, Integer, (Integer, Single), Vector2, Vector2, Single, Single, Single, Single, Single, Vector4, Single)
  fullName.vb: Watcher.FloatingDebris.FloaterData.New(Watcher.FloatingDebris, Integer, (Integer, Single), UnityEngine.Vector2, UnityEngine.Vector2, Single, Single, Single, Single, Single, UnityEngine.Vector4, Single)
  name.vb: New(FloatingDebris, Integer, (Integer, Single), Vector2, Vector2, Single, Single, Single, Single, Single, Vector4, Single)
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueTuple{System.Int32,System.Single}
  commentId: T:System.ValueTuple{System.Int32,System.Single}
  parent: System
  definition: System.ValueTuple`2
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: (int, float)
  nameWithType: (int, float)
  fullName: (int, float)
  nameWithType.vb: (Integer, Single)
  fullName.vb: (Integer, Single)
  name.vb: (Integer, Single)
  spec.csharp:
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.ValueTuple`2
  commentId: T:System.ValueTuple`2
  name: (T1, T2)
  nameWithType: (T1, T2)
  fullName: (T1, T2)
  spec.csharp:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
  spec.vb:
  - name: (
  - name: T1
  - name: ','
  - name: " "
  - name: T2
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector4
  isExternal: true
  name: Vector4
  nameWithType: Vector4
  fullName: UnityEngine.Vector4
- uid: Watcher.FloatingDebris
  commentId: T:Watcher.FloatingDebris
  parent: Watcher
  isExternal: true
  href: Watcher.FloatingDebris.html
  name: FloatingDebris
  nameWithType: FloatingDebris
  fullName: Watcher.FloatingDebris
- uid: Watcher.FloatingDebris.FloaterData.#ctor*
  commentId: Overload:Watcher.FloatingDebris.FloaterData.#ctor
  isExternal: true
  href: Watcher.FloatingDebris.FloaterData.html#Watcher_FloatingDebris_FloaterData__ctor_Watcher_FloatingDebris_System_Int32_System_ValueTuple_System_Int32_System_Single__UnityEngine_Vector2_UnityEngine_Vector2_System_Single_System_Single_System_Single_System_Single_System_Single_UnityEngine_Vector4_System_Single_
  name: FloaterData
  nameWithType: FloatingDebris.FloaterData.FloaterData
  fullName: Watcher.FloatingDebris.FloaterData.FloaterData
  nameWithType.vb: FloatingDebris.FloaterData.New
  fullName.vb: Watcher.FloatingDebris.FloaterData.New
  name.vb: New
