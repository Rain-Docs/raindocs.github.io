### YamlMime:ManagedReference
items:
- uid: Global.LizardLimb
  commentId: T:Global.LizardLimb
  id: LizardLimb
  parent: Global
  children:
  - Global.LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)
  - Global.LizardLimb.GrabbedTerrain
  - Global.LizardLimb.Reset(UnityEngine.Vector2)
  - Global.LizardLimb.Update
  - Global.LizardLimb.currentlyDisabled
  - Global.LizardLimb.flip
  - Global.LizardLimb.grabPos
  - Global.LizardLimb.gripCounter
  - Global.LizardLimb.health
  - Global.LizardLimb.jointDist
  - Global.LizardLimb.reachingForTerrain
  langs:
  - csharp
  - vb
  name: LizardLimb
  nameWithType: LizardLimb
  fullName: LizardLimb
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardLimb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardLimb : Limb'
    content.vb: Public Class LizardLimb Inherits Limb
  inheritance:
  - System.Object
  - Global.BodyPart
  - Global.Limb
  inheritedMembers:
  - Global.Limb.connection
  - Global.Limb.limbNumber
  - Global.Limb.defaultHuntSpeed
  - Global.Limb.huntSpeed
  - Global.Limb.relativeHuntPos
  - Global.Limb.absoluteHuntPos
  - Global.Limb.defaultQuickness
  - Global.Limb.quickness
  - Global.Limb.reachedSnapPosition
  - Global.Limb.retract
  - Global.Limb.pushOutOfTerrain
  - Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  - Global.Limb.mode
  - Global.Limb.OverLappingHuntPos
  - Global.BodyPart.owner
  - Global.BodyPart.lastPos
  - Global.BodyPart.pos
  - Global.BodyPart.vel
  - Global.BodyPart.rad
  - Global.BodyPart.surfaceFric
  - Global.BodyPart.airFriction
  - Global.BodyPart.terrainContact
  - Global.BodyPart.bodyPartArrayIndex
  - Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  - Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardLimb.reachingForTerrain
  commentId: F:Global.LizardLimb.reachingForTerrain
  id: reachingForTerrain
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: reachingForTerrain
  nameWithType: LizardLimb.reachingForTerrain
  fullName: LizardLimb.reachingForTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.reachingForTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool reachingForTerrain
    return:
      type: System.Boolean
    content.vb: Public reachingForTerrain As Boolean
- uid: Global.LizardLimb.gripCounter
  commentId: F:Global.LizardLimb.gripCounter
  id: gripCounter
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: gripCounter
  nameWithType: LizardLimb.gripCounter
  fullName: LizardLimb.gripCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.gripCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int gripCounter
    return:
      type: System.Int32
    content.vb: Public gripCounter As Integer
- uid: Global.LizardLimb.currentlyDisabled
  commentId: F:Global.LizardLimb.currentlyDisabled
  id: currentlyDisabled
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: currentlyDisabled
  nameWithType: LizardLimb.currentlyDisabled
  fullName: LizardLimb.currentlyDisabled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.currentlyDisabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool currentlyDisabled
    return:
      type: System.Boolean
    content.vb: Public currentlyDisabled As Boolean
- uid: Global.LizardLimb.jointDist
  commentId: F:Global.LizardLimb.jointDist
  id: jointDist
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: jointDist
  nameWithType: LizardLimb.jointDist
  fullName: LizardLimb.jointDist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.jointDist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float jointDist
    return:
      type: System.Single
    content.vb: Public jointDist As Single
- uid: Global.LizardLimb.grabPos
  commentId: F:Global.LizardLimb.grabPos
  id: grabPos
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: grabPos
  nameWithType: LizardLimb.grabPos
  fullName: LizardLimb.grabPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.grabPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 grabPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public grabPos As Vector2
- uid: Global.LizardLimb.flip
  commentId: F:Global.LizardLimb.flip
  id: flip
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: flip
  nameWithType: LizardLimb.flip
  fullName: LizardLimb.flip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardLimb.flip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flip
    return:
      type: System.Single
    content.vb: Public flip As Single
- uid: Global.LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)
  commentId: M:Global.LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)
  id: '#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)'
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: LizardLimb(GraphicsModule, BodyChunk, int, float, float, float, float, float, LizardLimb)
  nameWithType: LizardLimb.LizardLimb(GraphicsModule, BodyChunk, int, float, float, float, float, float, LizardLimb)
  fullName: LizardLimb.LizardLimb(GraphicsModule, BodyChunk, int, float, float, float, float, float, LizardLimb)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardLimb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardLimb(GraphicsModule owner, BodyChunk connectionChunk, int num, float rad, float sfFric, float aFric, float huntSpeed, float quickness, LizardLimb otherLimbInPair)
    parameters:
    - id: owner
      type: Global.GraphicsModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: connectionChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connectionChunk</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: num
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: sfFric
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sfFric</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: aFric
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aFric</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: huntSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>huntSpeed</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: quickness
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>quickness</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    - id: otherLimbInPair
      type: Global.LizardLimb
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherLimbInPair</parameter>
            <parameter>M:LizardLimb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single,LizardLimb)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As GraphicsModule, connectionChunk As BodyChunk, num As Integer, rad As Single, sfFric As Single, aFric As Single, huntSpeed As Single, quickness As Single, otherLimbInPair As LizardLimb)
  overload: Global.LizardLimb.#ctor*
  nameWithType.vb: LizardLimb.New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single, LizardLimb)
  fullName.vb: LizardLimb.New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single, LizardLimb)
  name.vb: New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single, LizardLimb)
- uid: Global.LizardLimb.Reset(UnityEngine.Vector2)
  commentId: M:Global.LizardLimb.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: LizardLimb.Reset(Vector2)
  fullName: LizardLimb.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardLimb.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Reset(Vector2 resetPoint)
    parameters:
    - id: resetPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetPoint</parameter>
            <parameter>M:LizardLimb.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Reset(resetPoint As Vector2)
  overridden: Global.Limb.Reset(UnityEngine.Vector2)
  overload: Global.LizardLimb.Reset*
- uid: Global.LizardLimb.Update
  commentId: M:Global.LizardLimb.Update
  id: Update
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardLimb.Update()
  fullName: LizardLimb.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardLimb.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.Limb.Update
  overload: Global.LizardLimb.Update*
- uid: Global.LizardLimb.GrabbedTerrain
  commentId: M:Global.LizardLimb.GrabbedTerrain
  id: GrabbedTerrain
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: GrabbedTerrain()
  nameWithType: LizardLimb.GrabbedTerrain()
  fullName: LizardLimb.GrabbedTerrain()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardLimb.GrabbedTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrabbedTerrain()
    content.vb: Public Overrides Sub GrabbedTerrain()
  overridden: Global.Limb.GrabbedTerrain
  overload: Global.LizardLimb.GrabbedTerrain*
- uid: Global.LizardLimb.health
  commentId: P:Global.LizardLimb.health
  id: health
  parent: Global.LizardLimb
  langs:
  - csharp
  - vb
  name: health
  nameWithType: LizardLimb.health
  fullName: LizardLimb.health
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardLimb.health</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float health { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property health As Single
  overload: Global.LizardLimb.health*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.BodyPart
  commentId: T:Global.BodyPart
  isExternal: true
  href: BodyPart.html
  name: BodyPart
  nameWithType: BodyPart
  fullName: BodyPart
- uid: Global.Limb
  commentId: T:Global.Limb
  isExternal: true
  href: Limb.html
  name: Limb
  nameWithType: Limb
  fullName: Limb
- uid: Global.Limb.connection
  commentId: F:Global.Limb.connection
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_connection
  name: connection
  nameWithType: Limb.connection
  fullName: Limb.connection
- uid: Global.Limb.limbNumber
  commentId: F:Global.Limb.limbNumber
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_limbNumber
  name: limbNumber
  nameWithType: Limb.limbNumber
  fullName: Limb.limbNumber
- uid: Global.Limb.defaultHuntSpeed
  commentId: F:Global.Limb.defaultHuntSpeed
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_defaultHuntSpeed
  name: defaultHuntSpeed
  nameWithType: Limb.defaultHuntSpeed
  fullName: Limb.defaultHuntSpeed
- uid: Global.Limb.huntSpeed
  commentId: F:Global.Limb.huntSpeed
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_huntSpeed
  name: huntSpeed
  nameWithType: Limb.huntSpeed
  fullName: Limb.huntSpeed
- uid: Global.Limb.relativeHuntPos
  commentId: F:Global.Limb.relativeHuntPos
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_relativeHuntPos
  name: relativeHuntPos
  nameWithType: Limb.relativeHuntPos
  fullName: Limb.relativeHuntPos
- uid: Global.Limb.absoluteHuntPos
  commentId: F:Global.Limb.absoluteHuntPos
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_absoluteHuntPos
  name: absoluteHuntPos
  nameWithType: Limb.absoluteHuntPos
  fullName: Limb.absoluteHuntPos
- uid: Global.Limb.defaultQuickness
  commentId: F:Global.Limb.defaultQuickness
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_defaultQuickness
  name: defaultQuickness
  nameWithType: Limb.defaultQuickness
  fullName: Limb.defaultQuickness
- uid: Global.Limb.quickness
  commentId: F:Global.Limb.quickness
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_quickness
  name: quickness
  nameWithType: Limb.quickness
  fullName: Limb.quickness
- uid: Global.Limb.reachedSnapPosition
  commentId: F:Global.Limb.reachedSnapPosition
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_reachedSnapPosition
  name: reachedSnapPosition
  nameWithType: Limb.reachedSnapPosition
  fullName: Limb.reachedSnapPosition
- uid: Global.Limb.retract
  commentId: F:Global.Limb.retract
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_retract
  name: retract
  nameWithType: Limb.retract
  fullName: Limb.retract
- uid: Global.Limb.pushOutOfTerrain
  commentId: F:Global.Limb.pushOutOfTerrain
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_pushOutOfTerrain
  name: pushOutOfTerrain
  nameWithType: Limb.pushOutOfTerrain
  fullName: Limb.pushOutOfTerrain
- uid: Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_FindGrip_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_UnityEngine_Vector2_System_Int32_System_Int32_System_Boolean_
  name: FindGrip(Room, Vector2, Vector2, float, Vector2, int, int, bool)
  nameWithType: Limb.FindGrip(Room, Vector2, Vector2, float, Vector2, int, int, bool)
  fullName: Limb.FindGrip(Room, UnityEngine.Vector2, UnityEngine.Vector2, float, UnityEngine.Vector2, int, int, bool)
  nameWithType.vb: Limb.FindGrip(Room, Vector2, Vector2, Single, Vector2, Integer, Integer, Boolean)
  fullName.vb: Limb.FindGrip(Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, UnityEngine.Vector2, Integer, Integer, Boolean)
  name.vb: FindGrip(Room, Vector2, Vector2, Single, Vector2, Integer, Integer, Boolean)
  spec.csharp:
  - uid: Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
    name: FindGrip
    isExternal: true
    href: Global.Limb.html#Limb_FindGrip_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_UnityEngine_Vector2_System_Int32_System_Int32_System_Boolean_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
    name: FindGrip
    isExternal: true
    href: Global.Limb.html#Limb_FindGrip_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_UnityEngine_Vector2_System_Int32_System_Int32_System_Boolean_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Limb.mode
  commentId: P:Global.Limb.mode
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_mode
  name: mode
  nameWithType: Limb.mode
  fullName: Limb.mode
- uid: Global.Limb.OverLappingHuntPos
  commentId: P:Global.Limb.OverLappingHuntPos
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_OverLappingHuntPos
  name: OverLappingHuntPos
  nameWithType: Limb.OverLappingHuntPos
  fullName: Limb.OverLappingHuntPos
- uid: Global.BodyPart.owner
  commentId: F:Global.BodyPart.owner
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_owner
  name: owner
  nameWithType: BodyPart.owner
  fullName: BodyPart.owner
- uid: Global.BodyPart.lastPos
  commentId: F:Global.BodyPart.lastPos
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_lastPos
  name: lastPos
  nameWithType: BodyPart.lastPos
  fullName: BodyPart.lastPos
- uid: Global.BodyPart.pos
  commentId: F:Global.BodyPart.pos
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_pos
  name: pos
  nameWithType: BodyPart.pos
  fullName: BodyPart.pos
- uid: Global.BodyPart.vel
  commentId: F:Global.BodyPart.vel
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_vel
  name: vel
  nameWithType: BodyPart.vel
  fullName: BodyPart.vel
- uid: Global.BodyPart.rad
  commentId: F:Global.BodyPart.rad
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_rad
  name: rad
  nameWithType: BodyPart.rad
  fullName: BodyPart.rad
- uid: Global.BodyPart.surfaceFric
  commentId: F:Global.BodyPart.surfaceFric
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_surfaceFric
  name: surfaceFric
  nameWithType: BodyPart.surfaceFric
  fullName: BodyPart.surfaceFric
- uid: Global.BodyPart.airFriction
  commentId: F:Global.BodyPart.airFriction
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_airFriction
  name: airFriction
  nameWithType: BodyPart.airFriction
  fullName: BodyPart.airFriction
- uid: Global.BodyPart.terrainContact
  commentId: F:Global.BodyPart.terrainContact
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_terrainContact
  name: terrainContact
  nameWithType: BodyPart.terrainContact
  fullName: BodyPart.terrainContact
- uid: Global.BodyPart.bodyPartArrayIndex
  commentId: F:Global.BodyPart.bodyPartArrayIndex
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_bodyPartArrayIndex
  name: bodyPartArrayIndex
  nameWithType: BodyPart.bodyPartArrayIndex
  fullName: BodyPart.bodyPartArrayIndex
- uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  name: ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  nameWithType: BodyPart.ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  fullName: BodyPart.ConnectToPoint(UnityEngine.Vector2, float, bool, float, UnityEngine.Vector2, float, float)
  nameWithType.vb: BodyPart.ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
  fullName.vb: BodyPart.ConnectToPoint(UnityEngine.Vector2, Single, Boolean, Single, UnityEngine.Vector2, Single, Single)
  name.vb: ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
  spec.csharp:
  - uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
    name: ConnectToPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
    name: ConnectToPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  name: PushFromPoint(Vector2, float, float)
  nameWithType: BodyPart.PushFromPoint(Vector2, float, float)
  fullName: BodyPart.PushFromPoint(UnityEngine.Vector2, float, float)
  nameWithType.vb: BodyPart.PushFromPoint(Vector2, Single, Single)
  fullName.vb: BodyPart.PushFromPoint(UnityEngine.Vector2, Single, Single)
  name.vb: PushFromPoint(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
    name: PushFromPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
    name: PushFromPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  commentId: M:Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  name: OnOtherSideOfTerrain(Vector2, float)
  nameWithType: BodyPart.OnOtherSideOfTerrain(Vector2, float)
  fullName: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, float)
  nameWithType.vb: BodyPart.OnOtherSideOfTerrain(Vector2, Single)
  fullName.vb: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, Single)
  name.vb: OnOtherSideOfTerrain(Vector2, Single)
  spec.csharp:
  - uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
    name: OnOtherSideOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
    name: OnOtherSideOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  commentId: M:Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  name: PushOutOfTerrain(Room, Vector2)
  nameWithType: BodyPart.PushOutOfTerrain(Room, Vector2)
  fullName: BodyPart.PushOutOfTerrain(Room, UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
    name: PushOutOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
    name: PushOutOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.LizardLimb.#ctor*
  commentId: Overload:Global.LizardLimb.#ctor
  isExternal: true
  href: Global.LizardLimb.html#LizardLimb__ctor_GraphicsModule_BodyChunk_System_Int32_System_Single_System_Single_System_Single_System_Single_System_Single_LizardLimb_
  name: LizardLimb
  nameWithType: LizardLimb.LizardLimb
  fullName: LizardLimb.LizardLimb
  nameWithType.vb: LizardLimb.New
  fullName.vb: LizardLimb.New
  name.vb: New
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.LizardLimb
  commentId: T:Global.LizardLimb
  isExternal: true
  href: LizardLimb.html
  name: LizardLimb
  nameWithType: LizardLimb
  fullName: LizardLimb
- uid: Global.Limb.Reset(UnityEngine.Vector2)
  commentId: M:Global.Limb.Reset(UnityEngine.Vector2)
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_Reset_UnityEngine_Vector2_
  name: Reset(Vector2)
  nameWithType: Limb.Reset(Vector2)
  fullName: Limb.Reset(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.Limb.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.Limb.html#Limb_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Limb.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.Limb.html#Limb_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.LizardLimb.Reset*
  commentId: Overload:Global.LizardLimb.Reset
  isExternal: true
  href: Global.LizardLimb.html#LizardLimb_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: LizardLimb.Reset
  fullName: LizardLimb.Reset
- uid: Global.Limb.Update
  commentId: M:Global.Limb.Update
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_Update
  name: Update()
  nameWithType: Limb.Update()
  fullName: Limb.Update()
  spec.csharp:
  - uid: Global.Limb.Update
    name: Update
    isExternal: true
    href: Global.Limb.html#Limb_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Limb.Update
    name: Update
    isExternal: true
    href: Global.Limb.html#Limb_Update
  - name: (
  - name: )
- uid: Global.LizardLimb.Update*
  commentId: Overload:Global.LizardLimb.Update
  isExternal: true
  href: Global.LizardLimb.html#LizardLimb_Update
  name: Update
  nameWithType: LizardLimb.Update
  fullName: LizardLimb.Update
- uid: Global.Limb.GrabbedTerrain
  commentId: M:Global.Limb.GrabbedTerrain
  parent: Global.Limb
  isExternal: true
  href: Global.Limb.html#Limb_GrabbedTerrain
  name: GrabbedTerrain()
  nameWithType: Limb.GrabbedTerrain()
  fullName: Limb.GrabbedTerrain()
  spec.csharp:
  - uid: Global.Limb.GrabbedTerrain
    name: GrabbedTerrain
    isExternal: true
    href: Global.Limb.html#Limb_GrabbedTerrain
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Limb.GrabbedTerrain
    name: GrabbedTerrain
    isExternal: true
    href: Global.Limb.html#Limb_GrabbedTerrain
  - name: (
  - name: )
- uid: Global.LizardLimb.GrabbedTerrain*
  commentId: Overload:Global.LizardLimb.GrabbedTerrain
  isExternal: true
  href: Global.LizardLimb.html#LizardLimb_GrabbedTerrain
  name: GrabbedTerrain
  nameWithType: LizardLimb.GrabbedTerrain
  fullName: LizardLimb.GrabbedTerrain
- uid: Global.LizardLimb.health*
  commentId: Overload:Global.LizardLimb.health
  isExternal: true
  href: Global.LizardLimb.html#LizardLimb_health
  name: health
  nameWithType: LizardLimb.health
  fullName: LizardLimb.health
