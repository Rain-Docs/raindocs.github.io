### YamlMime:ManagedReference
items:
- uid: Global.FPPolygonalData
  commentId: T:Global.FPPolygonalData
  id: FPPolygonalData
  parent: Global
  children:
  - Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]})
  - Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})
  - Global.FPPolygonalData.#ctor(UnityEngine.Vector2[],System.Boolean)
  - Global.FPPolygonalData.hasBeenDecomposedIntoConvexPolygons
  - Global.FPPolygonalData.meshes
  - Global.FPPolygonalData.shouldUseSmoothSphereCollisions
  - Global.FPPolygonalData.sourceVertices
  - Global.FPPolygonalData.trianglePolygons
  - Global.FPPolygonalData.vertexPolygons
  langs:
  - csharp
  - vb
  name: FPPolygonalData
  nameWithType: FPPolygonalData
  fullName: FPPolygonalData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FPPolygonalData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FPPolygonalData
    content.vb: Public Class FPPolygonalData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FPPolygonalData.hasBeenDecomposedIntoConvexPolygons
  commentId: F:Global.FPPolygonalData.hasBeenDecomposedIntoConvexPolygons
  id: hasBeenDecomposedIntoConvexPolygons
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: hasBeenDecomposedIntoConvexPolygons
  nameWithType: FPPolygonalData.hasBeenDecomposedIntoConvexPolygons
  fullName: FPPolygonalData.hasBeenDecomposedIntoConvexPolygons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.hasBeenDecomposedIntoConvexPolygons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasBeenDecomposedIntoConvexPolygons
    return:
      type: System.Boolean
    content.vb: Public hasBeenDecomposedIntoConvexPolygons As Boolean
- uid: Global.FPPolygonalData.shouldUseSmoothSphereCollisions
  commentId: F:Global.FPPolygonalData.shouldUseSmoothSphereCollisions
  id: shouldUseSmoothSphereCollisions
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: shouldUseSmoothSphereCollisions
  nameWithType: FPPolygonalData.shouldUseSmoothSphereCollisions
  fullName: FPPolygonalData.shouldUseSmoothSphereCollisions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.shouldUseSmoothSphereCollisions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool shouldUseSmoothSphereCollisions
    return:
      type: System.Boolean
    content.vb: Public shouldUseSmoothSphereCollisions As Boolean
- uid: Global.FPPolygonalData.sourceVertices
  commentId: F:Global.FPPolygonalData.sourceVertices
  id: sourceVertices
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: sourceVertices
  nameWithType: FPPolygonalData.sourceVertices
  fullName: FPPolygonalData.sourceVertices
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.sourceVertices</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] sourceVertices
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public sourceVertices As Vector2()
- uid: Global.FPPolygonalData.vertexPolygons
  commentId: F:Global.FPPolygonalData.vertexPolygons
  id: vertexPolygons
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: vertexPolygons
  nameWithType: FPPolygonalData.vertexPolygons
  fullName: FPPolygonalData.vertexPolygons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.vertexPolygons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2[]> vertexPolygons
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2[]}
    content.vb: Public vertexPolygons As List(Of Vector2())
- uid: Global.FPPolygonalData.trianglePolygons
  commentId: F:Global.FPPolygonalData.trianglePolygons
  id: trianglePolygons
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: trianglePolygons
  nameWithType: FPPolygonalData.trianglePolygons
  fullName: FPPolygonalData.trianglePolygons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.trianglePolygons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<int[]> trianglePolygons
    return:
      type: System.Collections.Generic.List{System.Int32[]}
    content.vb: Public trianglePolygons As List(Of Integer())
- uid: Global.FPPolygonalData.meshes
  commentId: F:Global.FPPolygonalData.meshes
  id: meshes
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: meshes
  nameWithType: FPPolygonalData.meshes
  fullName: FPPolygonalData.meshes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPPolygonalData.meshes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Mesh[] meshes
    return:
      type: UnityEngine.Mesh[]
    content.vb: Public meshes As Mesh()
- uid: Global.FPPolygonalData.#ctor(UnityEngine.Vector2[],System.Boolean)
  commentId: M:Global.FPPolygonalData.#ctor(UnityEngine.Vector2[],System.Boolean)
  id: '#ctor(UnityEngine.Vector2[],System.Boolean)'
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: FPPolygonalData(Vector2[], bool)
  nameWithType: FPPolygonalData.FPPolygonalData(Vector2[], bool)
  fullName: FPPolygonalData.FPPolygonalData(UnityEngine.Vector2[], bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FPPolygonalData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FPPolygonalData(Vector2[] vertices, bool shouldDecomposeIntoConvexPolygons)
    parameters:
    - id: vertices
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertices</parameter>
            <parameter>M:FPPolygonalData.#ctor(UnityEngine.Vector2[],System.Boolean)</parameter>
          </include>
        </markup>
    - id: shouldDecomposeIntoConvexPolygons
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shouldDecomposeIntoConvexPolygons</parameter>
            <parameter>M:FPPolygonalData.#ctor(UnityEngine.Vector2[],System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(vertices As Vector2(), shouldDecomposeIntoConvexPolygons As Boolean)
  overload: Global.FPPolygonalData.#ctor*
  nameWithType.vb: FPPolygonalData.New(Vector2(), Boolean)
  fullName.vb: FPPolygonalData.New(UnityEngine.Vector2(), Boolean)
  name.vb: New(Vector2(), Boolean)
- uid: Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})
  commentId: M:Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})
  id: '#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})'
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: FPPolygonalData(List<Vector2[]>, List<int[]>)
  nameWithType: FPPolygonalData.FPPolygonalData(List<Vector2[]>, List<int[]>)
  fullName: FPPolygonalData.FPPolygonalData(System.Collections.Generic.List<UnityEngine.Vector2[]>, System.Collections.Generic.List<int[]>)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FPPolygonalData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FPPolygonalData(List<Vector2[]> vertexPolygons, List<int[]> trianglePolygons)
    parameters:
    - id: vertexPolygons
      type: System.Collections.Generic.List{UnityEngine.Vector2[]}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertexPolygons</parameter>
            <parameter>M:FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})</parameter>
          </include>
        </markup>
    - id: trianglePolygons
      type: System.Collections.Generic.List{System.Int32[]}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trianglePolygons</parameter>
            <parameter>M:FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]},System.Collections.Generic.List{System.Int32[]})</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(vertexPolygons As List(Of Vector2()), trianglePolygons As List(Of Integer()))
  overload: Global.FPPolygonalData.#ctor*
  nameWithType.vb: FPPolygonalData.New(List(Of Vector2()), List(Of Integer()))
  fullName.vb: FPPolygonalData.New(System.Collections.Generic.List(Of UnityEngine.Vector2()), System.Collections.Generic.List(Of Integer()))
  name.vb: New(List(Of Vector2()), List(Of Integer()))
- uid: Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]})
  commentId: M:Global.FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]})
  id: '#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]})'
  parent: Global.FPPolygonalData
  langs:
  - csharp
  - vb
  name: FPPolygonalData(List<Vector2[]>)
  nameWithType: FPPolygonalData.FPPolygonalData(List<Vector2[]>)
  fullName: FPPolygonalData.FPPolygonalData(System.Collections.Generic.List<UnityEngine.Vector2[]>)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FPPolygonalData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FPPolygonalData(List<Vector2[]> vertexPolygons)
    parameters:
    - id: vertexPolygons
      type: System.Collections.Generic.List{UnityEngine.Vector2[]}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertexPolygons</parameter>
            <parameter>M:FPPolygonalData.#ctor(System.Collections.Generic.List{UnityEngine.Vector2[]})</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(vertexPolygons As List(Of Vector2()))
  overload: Global.FPPolygonalData.#ctor*
  nameWithType.vb: FPPolygonalData.New(List(Of Vector2()))
  fullName.vb: FPPolygonalData.New(System.Collections.Generic.List(Of UnityEngine.Vector2()))
  name.vb: New(List(Of Vector2()))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector2[]}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2[]>
  nameWithType: List<Vector2[]>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2[]>
  nameWithType.vb: List(Of Vector2())
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2())
  name.vb: List(Of Vector2())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{System.Int32[]}
  commentId: T:System.Collections.Generic.List{System.Int32[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int[]>
  nameWithType: List<int[]>
  fullName: System.Collections.Generic.List<int[]>
  nameWithType.vb: List(Of Integer())
  fullName.vb: System.Collections.Generic.List(Of Integer())
  name.vb: List(Of Integer())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: )
- uid: UnityEngine.Mesh[]
  isExternal: true
  name: Mesh[]
  nameWithType: Mesh[]
  fullName: UnityEngine.Mesh[]
  nameWithType.vb: Mesh()
  fullName.vb: UnityEngine.Mesh()
  name.vb: Mesh()
  spec.csharp:
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Mesh
    name: Mesh
    isExternal: true
  - name: (
  - name: )
- uid: Global.FPPolygonalData.#ctor*
  commentId: Overload:Global.FPPolygonalData.#ctor
  isExternal: true
  href: Global.FPPolygonalData.html#FPPolygonalData__ctor_UnityEngine_Vector2___System_Boolean_
  name: FPPolygonalData
  nameWithType: FPPolygonalData.FPPolygonalData
  fullName: FPPolygonalData.FPPolygonalData
  nameWithType.vb: FPPolygonalData.New
  fullName.vb: FPPolygonalData.New
  name.vb: New
