### YamlMime:ManagedReference
items:
- uid: Smoke.SmokePool
  commentId: T:Smoke.SmokePool
  id: SmokePool
  parent: Smoke
  children:
  - Smoke.SmokePool.#ctor(Smoke.SmokeSystem.SmokeType)
  - Smoke.SmokePool.GetParticle
  - Smoke.SmokePool.ID
  - Smoke.SmokePool.KillCountToDestroyParticle
  - Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)
  - Smoke.SmokePool.Update(System.Boolean)
  - Smoke.SmokePool.restingParticles
  - Smoke.SmokePool.type
  langs:
  - csharp
  - vb
  name: SmokePool
  nameWithType: SmokePool
  fullName: Smoke.SmokePool
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Smoke.SmokePool</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class SmokePool : UpdatableAndDeletable'
    content.vb: Public Class SmokePool Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Smoke.SmokePool.type
  commentId: F:Smoke.SmokePool.type
  id: type
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: type
  nameWithType: SmokePool.type
  fullName: Smoke.SmokePool.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Smoke.SmokePool.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SmokeSystem.SmokeType type
    return:
      type: Smoke.SmokeSystem.SmokeType
    content.vb: Public type As SmokeSystem.SmokeType
- uid: Smoke.SmokePool.restingParticles
  commentId: F:Smoke.SmokePool.restingParticles
  id: restingParticles
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: restingParticles
  nameWithType: SmokePool.restingParticles
  fullName: Smoke.SmokePool.restingParticles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Smoke.SmokePool.restingParticles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SmokeSystem.SmokeSystemParticle> restingParticles
    return:
      type: System.Collections.Generic.List{Smoke.SmokeSystem.SmokeSystemParticle}
    content.vb: Public restingParticles As List(Of SmokeSystem.SmokeSystemParticle)
- uid: Smoke.SmokePool.ID
  commentId: F:Smoke.SmokePool.ID
  id: ID
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: SmokePool.ID
  fullName: Smoke.SmokePool.ID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Smoke.SmokePool.ID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ID
    return:
      type: System.Int32
    content.vb: Public ID As Integer
- uid: Smoke.SmokePool.KillCountToDestroyParticle
  commentId: F:Smoke.SmokePool.KillCountToDestroyParticle
  id: KillCountToDestroyParticle
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: KillCountToDestroyParticle
  nameWithType: SmokePool.KillCountToDestroyParticle
  fullName: Smoke.SmokePool.KillCountToDestroyParticle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Smoke.SmokePool.KillCountToDestroyParticle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int KillCountToDestroyParticle
    return:
      type: System.Int32
    content.vb: Public Shared KillCountToDestroyParticle As Integer
- uid: Smoke.SmokePool.#ctor(Smoke.SmokeSystem.SmokeType)
  commentId: M:Smoke.SmokePool.#ctor(Smoke.SmokeSystem.SmokeType)
  id: '#ctor(Smoke.SmokeSystem.SmokeType)'
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: SmokePool(SmokeType)
  nameWithType: SmokePool.SmokePool(SmokeSystem.SmokeType)
  fullName: Smoke.SmokePool.SmokePool(Smoke.SmokeSystem.SmokeType)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Smoke.SmokePool</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SmokePool(SmokeSystem.SmokeType type)
    parameters:
    - id: type
      type: Smoke.SmokeSystem.SmokeType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Smoke.SmokePool.#ctor(Smoke.SmokeSystem.SmokeType)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As SmokeSystem.SmokeType)
  overload: Smoke.SmokePool.#ctor*
  nameWithType.vb: SmokePool.New(SmokeSystem.SmokeType)
  fullName.vb: Smoke.SmokePool.New(Smoke.SmokeSystem.SmokeType)
  name.vb: New(SmokeType)
- uid: Smoke.SmokePool.Update(System.Boolean)
  commentId: M:Smoke.SmokePool.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: SmokePool.Update(bool)
  fullName: Smoke.SmokePool.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Smoke.SmokePool.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Smoke.SmokePool.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Smoke.SmokePool.Update*
  nameWithType.vb: SmokePool.Update(Boolean)
  fullName.vb: Smoke.SmokePool.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)
  commentId: M:Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)
  id: ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: ParticleToRest(SmokeSystemParticle)
  nameWithType: SmokePool.ParticleToRest(SmokeSystem.SmokeSystemParticle)
  fullName: Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ParticleToRest(SmokeSystem.SmokeSystemParticle particle)
    parameters:
    - id: particle
      type: Smoke.SmokeSystem.SmokeSystemParticle
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>particle</parameter>
            <parameter>M:Smoke.SmokePool.ParticleToRest(Smoke.SmokeSystem.SmokeSystemParticle)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ParticleToRest(particle As SmokeSystem.SmokeSystemParticle)
  overload: Smoke.SmokePool.ParticleToRest*
- uid: Smoke.SmokePool.GetParticle
  commentId: M:Smoke.SmokePool.GetParticle
  id: GetParticle
  parent: Smoke.SmokePool
  langs:
  - csharp
  - vb
  name: GetParticle()
  nameWithType: SmokePool.GetParticle()
  fullName: Smoke.SmokePool.GetParticle()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Smoke
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Smoke.SmokePool.GetParticle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SmokeSystem.SmokeSystemParticle GetParticle()
    return:
      type: Smoke.SmokeSystem.SmokeSystemParticle
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Smoke.SmokePool.GetParticle</parameter>
          </include>
        </markup>
    content.vb: Public Function GetParticle() As SmokeSystem.SmokeSystemParticle
  overload: Smoke.SmokePool.GetParticle*
references:
- uid: Smoke
  commentId: N:Smoke
  isExternal: true
  href: Smoke.html
  name: Smoke
  nameWithType: Smoke
  fullName: Smoke
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Smoke.SmokeSystem.SmokeType
  commentId: T:Smoke.SmokeSystem.SmokeType
  parent: Smoke
  isExternal: true
  href: Smoke.SmokeSystem.html
  name: SmokeSystem.SmokeType
  nameWithType: SmokeSystem.SmokeType
  fullName: Smoke.SmokeSystem.SmokeType
  spec.csharp:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeType
    name: SmokeType
    isExternal: true
    href: Smoke.SmokeSystem.SmokeType.html
  spec.vb:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeType
    name: SmokeType
    isExternal: true
    href: Smoke.SmokeSystem.SmokeType.html
- uid: System.Collections.Generic.List{Smoke.SmokeSystem.SmokeSystemParticle}
  commentId: T:System.Collections.Generic.List{Smoke.SmokeSystem.SmokeSystemParticle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SmokeSystem.SmokeSystemParticle>
  nameWithType: List<SmokeSystem.SmokeSystemParticle>
  fullName: System.Collections.Generic.List<Smoke.SmokeSystem.SmokeSystemParticle>
  nameWithType.vb: List(Of SmokeSystem.SmokeSystemParticle)
  fullName.vb: System.Collections.Generic.List(Of Smoke.SmokeSystem.SmokeSystemParticle)
  name.vb: List(Of SmokeSystem.SmokeSystemParticle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeSystemParticle
    name: SmokeSystemParticle
    isExternal: true
    href: Smoke.SmokeSystem.SmokeSystemParticle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeSystemParticle
    name: SmokeSystemParticle
    isExternal: true
    href: Smoke.SmokeSystem.SmokeSystemParticle.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Smoke.SmokePool.#ctor*
  commentId: Overload:Smoke.SmokePool.#ctor
  isExternal: true
  href: Smoke.SmokePool.html#Smoke_SmokePool__ctor_Smoke_SmokeSystem_SmokeType_
  name: SmokePool
  nameWithType: SmokePool.SmokePool
  fullName: Smoke.SmokePool.SmokePool
  nameWithType.vb: SmokePool.New
  fullName.vb: Smoke.SmokePool.New
  name.vb: New
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Smoke.SmokePool.Update*
  commentId: Overload:Smoke.SmokePool.Update
  isExternal: true
  href: Smoke.SmokePool.html#Smoke_SmokePool_Update_System_Boolean_
  name: Update
  nameWithType: SmokePool.Update
  fullName: Smoke.SmokePool.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Smoke.SmokePool.ParticleToRest*
  commentId: Overload:Smoke.SmokePool.ParticleToRest
  isExternal: true
  href: Smoke.SmokePool.html#Smoke_SmokePool_ParticleToRest_Smoke_SmokeSystem_SmokeSystemParticle_
  name: ParticleToRest
  nameWithType: SmokePool.ParticleToRest
  fullName: Smoke.SmokePool.ParticleToRest
- uid: Smoke.SmokeSystem.SmokeSystemParticle
  commentId: T:Smoke.SmokeSystem.SmokeSystemParticle
  parent: Smoke
  isExternal: true
  href: Smoke.SmokeSystem.html
  name: SmokeSystem.SmokeSystemParticle
  nameWithType: SmokeSystem.SmokeSystemParticle
  fullName: Smoke.SmokeSystem.SmokeSystemParticle
  spec.csharp:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeSystemParticle
    name: SmokeSystemParticle
    isExternal: true
    href: Smoke.SmokeSystem.SmokeSystemParticle.html
  spec.vb:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeSystemParticle
    name: SmokeSystemParticle
    isExternal: true
    href: Smoke.SmokeSystem.SmokeSystemParticle.html
- uid: Smoke.SmokePool.GetParticle*
  commentId: Overload:Smoke.SmokePool.GetParticle
  isExternal: true
  href: Smoke.SmokePool.html#Smoke_SmokePool_GetParticle
  name: GetParticle
  nameWithType: SmokePool.GetParticle
  fullName: Smoke.SmokePool.GetParticle
