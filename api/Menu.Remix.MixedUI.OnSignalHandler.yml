### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.OnSignalHandler
  commentId: T:Menu.Remix.MixedUI.OnSignalHandler
  id: OnSignalHandler
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.OnSignalHandler.#ctor(System.Object,System.IntPtr)
  - Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke(Menu.Remix.MixedUI.UIfocusable,System.AsyncCallback,System.Object)
  - Menu.Remix.MixedUI.OnSignalHandler.EndInvoke(System.IAsyncResult)
  - Menu.Remix.MixedUI.OnSignalHandler.Invoke(Menu.Remix.MixedUI.UIfocusable)
  langs:
  - csharp
  - vb
  name: OnSignalHandler
  nameWithType: OnSignalHandler
  fullName: Menu.Remix.MixedUI.OnSignalHandler
  type: Delegate
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.OnSignalHandler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public delegate void OnSignalHandler(UIfocusable trigger)
    parameters:
    - id: trigger
      type: Menu.Remix.MixedUI.UIfocusable
    content.vb: Public Delegate Sub OnSignalHandler(trigger As UIfocusable)
- uid: Menu.Remix.MixedUI.OnSignalHandler.#ctor(System.Object,System.IntPtr)
  commentId: M:Menu.Remix.MixedUI.OnSignalHandler.#ctor(System.Object,System.IntPtr)
  id: '#ctor(System.Object,System.IntPtr)'
  parent: Menu.Remix.MixedUI.OnSignalHandler
  langs:
  - csharp
  - vb
  name: OnSignalHandler(object, IntPtr)
  nameWithType: OnSignalHandler.OnSignalHandler(object, IntPtr)
  fullName: Menu.Remix.MixedUI.OnSignalHandler.OnSignalHandler(object, System.IntPtr)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  syntax:
    content: public OnSignalHandler(object @object, IntPtr method)
    parameters:
    - id: object
      type: System.Object
    - id: method
      type: System.IntPtr
    content.vb: Public Sub New([object] As Object, method As IntPtr)
  overload: Menu.Remix.MixedUI.OnSignalHandler.#ctor*
  nameWithType.vb: OnSignalHandler.New(Object, IntPtr)
  fullName.vb: Menu.Remix.MixedUI.OnSignalHandler.New(Object, System.IntPtr)
  name.vb: New(Object, IntPtr)
- uid: Menu.Remix.MixedUI.OnSignalHandler.Invoke(Menu.Remix.MixedUI.UIfocusable)
  commentId: M:Menu.Remix.MixedUI.OnSignalHandler.Invoke(Menu.Remix.MixedUI.UIfocusable)
  id: Invoke(Menu.Remix.MixedUI.UIfocusable)
  parent: Menu.Remix.MixedUI.OnSignalHandler
  langs:
  - csharp
  - vb
  name: Invoke(UIfocusable)
  nameWithType: OnSignalHandler.Invoke(UIfocusable)
  fullName: Menu.Remix.MixedUI.OnSignalHandler.Invoke(Menu.Remix.MixedUI.UIfocusable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  syntax:
    content: public virtual void Invoke(UIfocusable trigger)
    parameters:
    - id: trigger
      type: Menu.Remix.MixedUI.UIfocusable
    content.vb: Public Overridable Sub Invoke(trigger As UIfocusable)
  overload: Menu.Remix.MixedUI.OnSignalHandler.Invoke*
- uid: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke(Menu.Remix.MixedUI.UIfocusable,System.AsyncCallback,System.Object)
  commentId: M:Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke(Menu.Remix.MixedUI.UIfocusable,System.AsyncCallback,System.Object)
  id: BeginInvoke(Menu.Remix.MixedUI.UIfocusable,System.AsyncCallback,System.Object)
  parent: Menu.Remix.MixedUI.OnSignalHandler
  langs:
  - csharp
  - vb
  name: BeginInvoke(UIfocusable, AsyncCallback, object)
  nameWithType: OnSignalHandler.BeginInvoke(UIfocusable, AsyncCallback, object)
  fullName: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke(Menu.Remix.MixedUI.UIfocusable, System.AsyncCallback, object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  syntax:
    content: public virtual IAsyncResult BeginInvoke(UIfocusable trigger, AsyncCallback callback, object @object)
    parameters:
    - id: trigger
      type: Menu.Remix.MixedUI.UIfocusable
    - id: callback
      type: System.AsyncCallback
    - id: object
      type: System.Object
    return:
      type: System.IAsyncResult
    content.vb: Public Overridable Function BeginInvoke(trigger As UIfocusable, callback As AsyncCallback, [object] As Object) As IAsyncResult
  overload: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke*
  nameWithType.vb: OnSignalHandler.BeginInvoke(UIfocusable, AsyncCallback, Object)
  fullName.vb: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke(Menu.Remix.MixedUI.UIfocusable, System.AsyncCallback, Object)
  name.vb: BeginInvoke(UIfocusable, AsyncCallback, Object)
- uid: Menu.Remix.MixedUI.OnSignalHandler.EndInvoke(System.IAsyncResult)
  commentId: M:Menu.Remix.MixedUI.OnSignalHandler.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: Menu.Remix.MixedUI.OnSignalHandler
  langs:
  - csharp
  - vb
  name: EndInvoke(IAsyncResult)
  nameWithType: OnSignalHandler.EndInvoke(IAsyncResult)
  fullName: Menu.Remix.MixedUI.OnSignalHandler.EndInvoke(System.IAsyncResult)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  syntax:
    content: public virtual void EndInvoke(IAsyncResult result)
    parameters:
    - id: result
      type: System.IAsyncResult
    content.vb: Public Overridable Sub EndInvoke(result As IAsyncResult)
  overload: Menu.Remix.MixedUI.OnSignalHandler.EndInvoke*
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: Menu.Remix.MixedUI.UIfocusable
  commentId: T:Menu.Remix.MixedUI.UIfocusable
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.UIfocusable.html
  name: UIfocusable
  nameWithType: UIfocusable
  fullName: Menu.Remix.MixedUI.UIfocusable
- uid: Menu.Remix.MixedUI.OnSignalHandler.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.OnSignalHandler.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.OnSignalHandler.html#Menu_Remix_MixedUI_OnSignalHandler__ctor_System_Object_System_IntPtr_
  name: OnSignalHandler
  nameWithType: OnSignalHandler.OnSignalHandler
  fullName: Menu.Remix.MixedUI.OnSignalHandler.OnSignalHandler
  nameWithType.vb: OnSignalHandler.New
  fullName.vb: Menu.Remix.MixedUI.OnSignalHandler.New
  name.vb: New
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.MixedUI.OnSignalHandler.Invoke*
  commentId: Overload:Menu.Remix.MixedUI.OnSignalHandler.Invoke
  isExternal: true
  href: Menu.Remix.MixedUI.OnSignalHandler.html#Menu_Remix_MixedUI_OnSignalHandler_Invoke_Menu_Remix_MixedUI_UIfocusable_
  name: Invoke
  nameWithType: OnSignalHandler.Invoke
  fullName: Menu.Remix.MixedUI.OnSignalHandler.Invoke
- uid: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke*
  commentId: Overload:Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke
  isExternal: true
  href: Menu.Remix.MixedUI.OnSignalHandler.html#Menu_Remix_MixedUI_OnSignalHandler_BeginInvoke_Menu_Remix_MixedUI_UIfocusable_System_AsyncCallback_System_Object_
  name: BeginInvoke
  nameWithType: OnSignalHandler.BeginInvoke
  fullName: Menu.Remix.MixedUI.OnSignalHandler.BeginInvoke
- uid: System.AsyncCallback
  commentId: T:System.AsyncCallback
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.asynccallback
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.IAsyncResult
  commentId: T:System.IAsyncResult
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iasyncresult
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: Menu.Remix.MixedUI.OnSignalHandler.EndInvoke*
  commentId: Overload:Menu.Remix.MixedUI.OnSignalHandler.EndInvoke
  isExternal: true
  href: Menu.Remix.MixedUI.OnSignalHandler.html#Menu_Remix_MixedUI_OnSignalHandler_EndInvoke_System_IAsyncResult_
  name: EndInvoke
  nameWithType: OnSignalHandler.EndInvoke
  fullName: Menu.Remix.MixedUI.OnSignalHandler.EndInvoke
