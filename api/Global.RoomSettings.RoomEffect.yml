### YamlMime:ManagedReference
items:
- uid: Global.RoomSettings.RoomEffect
  commentId: T:Global.RoomSettings.RoomEffect
  id: RoomSettings.RoomEffect
  parent: Global
  children:
  - Global.RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)
  - Global.RoomSettings.RoomEffect.FromString(System.String[])
  - Global.RoomSettings.RoomEffect.GetAmount(System.Int32)
  - Global.RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)
  - Global.RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)
  - Global.RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)
  - Global.RoomSettings.RoomEffect.ToString
  - Global.RoomSettings.RoomEffect.amount
  - Global.RoomSettings.RoomEffect.extraAmounts
  - Global.RoomSettings.RoomEffect.inherited
  - Global.RoomSettings.RoomEffect.overWrite
  - Global.RoomSettings.RoomEffect.panelPosition
  - Global.RoomSettings.RoomEffect.type
  - Global.RoomSettings.RoomEffect.unrecognizedAttributes
  langs:
  - csharp
  - vb
  name: RoomSettings.RoomEffect
  nameWithType: RoomSettings.RoomEffect
  fullName: RoomSettings.RoomEffect
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RoomSettings.RoomEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RoomSettings.RoomEffect
    content.vb: Public Class RoomSettings.RoomEffect
  inheritance:
  - System.Object
  derivedClasses:
  - Watcher.RippleEffectSettings
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RoomSettings.RoomEffect.type
  commentId: F:Global.RoomSettings.RoomEffect.type
  id: type
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: type
  nameWithType: RoomSettings.RoomEffect.type
  fullName: RoomSettings.RoomEffect.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings.RoomEffect.Type type
    return:
      type: Global.RoomSettings.RoomEffect.Type
    content.vb: Public type As RoomSettings.RoomEffect.Type
- uid: Global.RoomSettings.RoomEffect.amount
  commentId: F:Global.RoomSettings.RoomEffect.amount
  id: amount
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: amount
  nameWithType: RoomSettings.RoomEffect.amount
  fullName: RoomSettings.RoomEffect.amount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.amount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float amount
    return:
      type: System.Single
    content.vb: Public amount As Single
- uid: Global.RoomSettings.RoomEffect.extraAmounts
  commentId: F:Global.RoomSettings.RoomEffect.extraAmounts
  id: extraAmounts
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: extraAmounts
  nameWithType: RoomSettings.RoomEffect.extraAmounts
  fullName: RoomSettings.RoomEffect.extraAmounts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.extraAmounts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] extraAmounts
    return:
      type: System.Single[]
    content.vb: Public extraAmounts As Single()
- uid: Global.RoomSettings.RoomEffect.inherited
  commentId: F:Global.RoomSettings.RoomEffect.inherited
  id: inherited
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: inherited
  nameWithType: RoomSettings.RoomEffect.inherited
  fullName: RoomSettings.RoomEffect.inherited
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.inherited</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inherited
    return:
      type: System.Boolean
    content.vb: Public inherited As Boolean
- uid: Global.RoomSettings.RoomEffect.overWrite
  commentId: F:Global.RoomSettings.RoomEffect.overWrite
  id: overWrite
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: overWrite
  nameWithType: RoomSettings.RoomEffect.overWrite
  fullName: RoomSettings.RoomEffect.overWrite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.overWrite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool overWrite
    return:
      type: System.Boolean
    content.vb: Public overWrite As Boolean
- uid: Global.RoomSettings.RoomEffect.panelPosition
  commentId: F:Global.RoomSettings.RoomEffect.panelPosition
  id: panelPosition
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: panelPosition
  nameWithType: RoomSettings.RoomEffect.panelPosition
  fullName: RoomSettings.RoomEffect.panelPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.panelPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panelPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Public panelPosition As Vector2
- uid: Global.RoomSettings.RoomEffect.unrecognizedAttributes
  commentId: F:Global.RoomSettings.RoomEffect.unrecognizedAttributes
  id: unrecognizedAttributes
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: unrecognizedAttributes
  nameWithType: RoomSettings.RoomEffect.unrecognizedAttributes
  fullName: RoomSettings.RoomEffect.unrecognizedAttributes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomSettings.RoomEffect.unrecognizedAttributes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] unrecognizedAttributes
    return:
      type: System.String[]
    content.vb: Public unrecognizedAttributes As String()
- uid: Global.RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)
  commentId: M:Global.RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)
  id: '#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)'
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: RoomEffect(Type, float, bool)
  nameWithType: RoomSettings.RoomEffect.RoomEffect(RoomSettings.RoomEffect.Type, float, bool)
  fullName: RoomSettings.RoomEffect.RoomEffect(RoomSettings.RoomEffect.Type, float, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomSettings.RoomEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomEffect(RoomSettings.RoomEffect.Type type, float amount, bool inherited)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: amount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>amount</parameter>
            <parameter>M:RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: inherited
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inherited</parameter>
            <parameter>M:RoomSettings.RoomEffect.#ctor(RoomSettings.RoomEffect.Type,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As RoomSettings.RoomEffect.Type, amount As Single, inherited As Boolean)
  overload: Global.RoomSettings.RoomEffect.#ctor*
  nameWithType.vb: RoomSettings.RoomEffect.New(RoomSettings.RoomEffect.Type, Single, Boolean)
  fullName.vb: RoomSettings.RoomEffect.New(RoomSettings.RoomEffect.Type, Single, Boolean)
  name.vb: New(Type, Single, Boolean)
- uid: Global.RoomSettings.RoomEffect.GetAmount(System.Int32)
  commentId: M:Global.RoomSettings.RoomEffect.GetAmount(System.Int32)
  id: GetAmount(System.Int32)
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: GetAmount(int)
  nameWithType: RoomSettings.RoomEffect.GetAmount(int)
  fullName: RoomSettings.RoomEffect.GetAmount(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.GetAmount(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetAmount(int sliderIndex)
    parameters:
    - id: sliderIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sliderIndex</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetAmount(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetAmount(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAmount(sliderIndex As Integer) As Single
  overload: Global.RoomSettings.RoomEffect.GetAmount*
  nameWithType.vb: RoomSettings.RoomEffect.GetAmount(Integer)
  fullName.vb: RoomSettings.RoomEffect.GetAmount(Integer)
  name.vb: GetAmount(Integer)
- uid: Global.RoomSettings.RoomEffect.ToString
  commentId: M:Global.RoomSettings.RoomEffect.ToString
  id: ToString
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: RoomSettings.RoomEffect.ToString()
  fullName: RoomSettings.RoomEffect.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.RoomEffect.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.RoomSettings.RoomEffect.ToString*
- uid: Global.RoomSettings.RoomEffect.FromString(System.String[])
  commentId: M:Global.RoomSettings.RoomEffect.FromString(System.String[])
  id: FromString(System.String[])
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: FromString(string[])
  nameWithType: RoomSettings.RoomEffect.FromString(string[])
  fullName: RoomSettings.RoomEffect.FromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.FromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:RoomSettings.RoomEffect.FromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub FromString(s As String())
  overload: Global.RoomSettings.RoomEffect.FromString*
  nameWithType.vb: RoomSettings.RoomEffect.FromString(String())
  fullName.vb: RoomSettings.RoomEffect.FromString(String())
  name.vb: FromString(String())
- uid: Global.RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)
  commentId: M:Global.RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)
  id: GetSliderCount(RoomSettings.RoomEffect.Type)
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: GetSliderCount(Type)
  nameWithType: RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)
  fullName: RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int GetSliderCount(RoomSettings.RoomEffect.Type type)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderCount(RoomSettings.RoomEffect.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetSliderCount(type As RoomSettings.RoomEffect.Type) As Integer
  overload: Global.RoomSettings.RoomEffect.GetSliderCount*
- uid: Global.RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)
  commentId: M:Global.RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)
  id: GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: GetSliderName(Type, int)
  nameWithType: RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type, int)
  fullName: RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetSliderName(RoomSettings.RoomEffect.Type type, int index)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetSliderName(type As RoomSettings.RoomEffect.Type, index As Integer) As String
  overload: Global.RoomSettings.RoomEffect.GetSliderName*
  nameWithType.vb: RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type, Integer)
  fullName.vb: RoomSettings.RoomEffect.GetSliderName(RoomSettings.RoomEffect.Type, Integer)
  name.vb: GetSliderName(Type, Integer)
- uid: Global.RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)
  commentId: M:Global.RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)
  id: GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)
  parent: Global.RoomSettings.RoomEffect
  langs:
  - csharp
  - vb
  name: GetSliderDefault(Type, int)
  nameWithType: RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type, int)
  fullName: RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float GetSliderDefault(RoomSettings.RoomEffect.Type type, int index)
    parameters:
    - id: type
      type: Global.RoomSettings.RoomEffect.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetSliderDefault(type As RoomSettings.RoomEffect.Type, index As Integer) As Single
  overload: Global.RoomSettings.RoomEffect.GetSliderDefault*
  nameWithType.vb: RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type, Integer)
  fullName.vb: RoomSettings.RoomEffect.GetSliderDefault(RoomSettings.RoomEffect.Type, Integer)
  name.vb: GetSliderDefault(Type, Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RoomSettings.RoomEffect.Type
  commentId: T:Global.RoomSettings.RoomEffect.Type
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings.RoomEffect.Type
  nameWithType: RoomSettings.RoomEffect.Type
  fullName: RoomSettings.RoomEffect.Type
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect.Type
    name: Type
    isExternal: true
    href: RoomSettings.RoomEffect.Type.html
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect
    name: RoomEffect
    isExternal: true
    href: RoomSettings.RoomEffect.html
  - name: .
  - uid: Global.RoomSettings.RoomEffect.Type
    name: Type
    isExternal: true
    href: RoomSettings.RoomEffect.Type.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.RoomSettings.RoomEffect.#ctor*
  commentId: Overload:Global.RoomSettings.RoomEffect.#ctor
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect__ctor_RoomSettings_RoomEffect_Type_System_Single_System_Boolean_
  name: RoomEffect
  nameWithType: RoomSettings.RoomEffect.RoomEffect
  fullName: RoomSettings.RoomEffect.RoomEffect
  nameWithType.vb: RoomSettings.RoomEffect.New
  fullName.vb: RoomSettings.RoomEffect.New
  name.vb: New
- uid: Global.RoomSettings.RoomEffect.GetAmount*
  commentId: Overload:Global.RoomSettings.RoomEffect.GetAmount
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_GetAmount_System_Int32_
  name: GetAmount
  nameWithType: RoomSettings.RoomEffect.GetAmount
  fullName: RoomSettings.RoomEffect.GetAmount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.RoomSettings.RoomEffect.ToString*
  commentId: Overload:Global.RoomSettings.RoomEffect.ToString
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_ToString
  name: ToString
  nameWithType: RoomSettings.RoomEffect.ToString
  fullName: RoomSettings.RoomEffect.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.RoomSettings.RoomEffect.FromString*
  commentId: Overload:Global.RoomSettings.RoomEffect.FromString
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_FromString_System_String___
  name: FromString
  nameWithType: RoomSettings.RoomEffect.FromString
  fullName: RoomSettings.RoomEffect.FromString
- uid: Global.RoomSettings.RoomEffect.GetSliderCount*
  commentId: Overload:Global.RoomSettings.RoomEffect.GetSliderCount
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_GetSliderCount_RoomSettings_RoomEffect_Type_
  name: GetSliderCount
  nameWithType: RoomSettings.RoomEffect.GetSliderCount
  fullName: RoomSettings.RoomEffect.GetSliderCount
- uid: Global.RoomSettings.RoomEffect.GetSliderName*
  commentId: Overload:Global.RoomSettings.RoomEffect.GetSliderName
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_GetSliderName_RoomSettings_RoomEffect_Type_System_Int32_
  name: GetSliderName
  nameWithType: RoomSettings.RoomEffect.GetSliderName
  fullName: RoomSettings.RoomEffect.GetSliderName
- uid: Global.RoomSettings.RoomEffect.GetSliderDefault*
  commentId: Overload:Global.RoomSettings.RoomEffect.GetSliderDefault
  isExternal: true
  href: Global.RoomSettings.RoomEffect.html#RoomSettings_RoomEffect_GetSliderDefault_RoomSettings_RoomEffect_Type_System_Int32_
  name: GetSliderDefault
  nameWithType: RoomSettings.RoomEffect.GetSliderDefault
  fullName: RoomSettings.RoomEffect.GetSliderDefault
