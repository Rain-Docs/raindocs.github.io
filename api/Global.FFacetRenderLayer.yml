### YamlMime:ManagedReference
items:
- uid: Global.FFacetRenderLayer
  commentId: T:Global.FFacetRenderLayer
  id: FFacetRenderLayer
  parent: Global
  children:
  - Global.FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)
  - Global.FFacetRenderLayer.AddToWorld
  - Global.FFacetRenderLayer.Close
  - Global.FFacetRenderLayer.Destroy
  - Global.FFacetRenderLayer.ExpandMaxFacetLimit(System.Int32)
  - Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes
  - Global.FFacetRenderLayer.GetNextFacetIndex(System.Int32)
  - Global.FFacetRenderLayer.HandleVertsChange
  - Global.FFacetRenderLayer.Open
  - Global.FFacetRenderLayer.RemoveFromWorld
  - Global.FFacetRenderLayer.ShrinkMaxFacetLimit(System.Int32)
  - Global.FFacetRenderLayer.Update(System.Int32)
  - Global.FFacetRenderLayer.UpdateMeshProperties
  - Global.FFacetRenderLayer.UpdateTransform
  - Global.FFacetRenderLayer._atlas
  - Global.FFacetRenderLayer._colors
  - Global.FFacetRenderLayer._depth
  - Global.FFacetRenderLayer._didColorsChange
  - Global.FFacetRenderLayer._didUVsChange
  - Global.FFacetRenderLayer._didVertCountChange
  - Global.FFacetRenderLayer._didVertsChange
  - Global.FFacetRenderLayer._doesMeshNeedClear
  - Global.FFacetRenderLayer._expansionAmount
  - Global.FFacetRenderLayer._facetType
  - Global.FFacetRenderLayer._gameObject
  - Global.FFacetRenderLayer._isMeshDirty
  - Global.FFacetRenderLayer._lowestZeroIndex
  - Global.FFacetRenderLayer._material
  - Global.FFacetRenderLayer._maxEmptyFacets
  - Global.FFacetRenderLayer._maxFacetCount
  - Global.FFacetRenderLayer._mesh
  - Global.FFacetRenderLayer._meshFilter
  - Global.FFacetRenderLayer._meshRenderer
  - Global.FFacetRenderLayer._nextAvailableFacetIndex
  - Global.FFacetRenderLayer._shader
  - Global.FFacetRenderLayer._stage
  - Global.FFacetRenderLayer._transform
  - Global.FFacetRenderLayer._triangles
  - Global.FFacetRenderLayer._uvs
  - Global.FFacetRenderLayer._vertices
  - Global.FFacetRenderLayer.atlas
  - Global.FFacetRenderLayer.batchIndex
  - Global.FFacetRenderLayer.colors
  - Global.FFacetRenderLayer.expansionAmount
  - Global.FFacetRenderLayer.uvs
  - Global.FFacetRenderLayer.vertices
  langs:
  - csharp
  - vb
  name: FFacetRenderLayer
  nameWithType: FFacetRenderLayer
  fullName: FFacetRenderLayer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FFacetRenderLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FFacetRenderLayer : FRenderableLayerInterface'
    content.vb: Public Class FFacetRenderLayer Implements FRenderableLayerInterface
  inheritance:
  - System.Object
  derivedClasses:
  - Global.FQuadRenderLayer
  - Global.FTriangleRenderLayer
  implements:
  - Global.FRenderableLayerInterface
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FFacetRenderLayer.batchIndex
  commentId: F:Global.FFacetRenderLayer.batchIndex
  id: batchIndex
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: batchIndex
  nameWithType: FFacetRenderLayer.batchIndex
  fullName: FFacetRenderLayer.batchIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer.batchIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int batchIndex
    return:
      type: System.Int32
    content.vb: Public batchIndex As Integer
- uid: Global.FFacetRenderLayer._stage
  commentId: F:Global.FFacetRenderLayer._stage
  id: _stage
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _stage
  nameWithType: FFacetRenderLayer._stage
  fullName: FFacetRenderLayer._stage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._stage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FStage _stage
    return:
      type: Global.FStage
    content.vb: Protected _stage As FStage
- uid: Global.FFacetRenderLayer._facetType
  commentId: F:Global.FFacetRenderLayer._facetType
  id: _facetType
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _facetType
  nameWithType: FFacetRenderLayer._facetType
  fullName: FFacetRenderLayer._facetType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._facetType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FFacetType _facetType
    return:
      type: Global.FFacetType
    content.vb: Protected _facetType As FFacetType
- uid: Global.FFacetRenderLayer._atlas
  commentId: F:Global.FFacetRenderLayer._atlas
  id: _atlas
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _atlas
  nameWithType: FFacetRenderLayer._atlas
  fullName: FFacetRenderLayer._atlas
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._atlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FAtlas _atlas
    return:
      type: Global.FAtlas
    content.vb: Protected _atlas As FAtlas
- uid: Global.FFacetRenderLayer._shader
  commentId: F:Global.FFacetRenderLayer._shader
  id: _shader
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _shader
  nameWithType: FFacetRenderLayer._shader
  fullName: FFacetRenderLayer._shader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._shader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FShader _shader
    return:
      type: Global.FShader
    content.vb: Protected _shader As FShader
- uid: Global.FFacetRenderLayer._gameObject
  commentId: F:Global.FFacetRenderLayer._gameObject
  id: _gameObject
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _gameObject
  nameWithType: FFacetRenderLayer._gameObject
  fullName: FFacetRenderLayer._gameObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._gameObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected GameObject _gameObject
    return:
      type: UnityEngine.GameObject
    content.vb: Protected _gameObject As GameObject
- uid: Global.FFacetRenderLayer._transform
  commentId: F:Global.FFacetRenderLayer._transform
  id: _transform
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _transform
  nameWithType: FFacetRenderLayer._transform
  fullName: FFacetRenderLayer._transform
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._transform</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Transform _transform
    return:
      type: UnityEngine.Transform
    content.vb: Protected _transform As Transform
- uid: Global.FFacetRenderLayer._material
  commentId: F:Global.FFacetRenderLayer._material
  id: _material
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _material
  nameWithType: FFacetRenderLayer._material
  fullName: FFacetRenderLayer._material
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._material</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Material _material
    return:
      type: UnityEngine.Material
    content.vb: Protected _material As Material
- uid: Global.FFacetRenderLayer._meshFilter
  commentId: F:Global.FFacetRenderLayer._meshFilter
  id: _meshFilter
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _meshFilter
  nameWithType: FFacetRenderLayer._meshFilter
  fullName: FFacetRenderLayer._meshFilter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._meshFilter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MeshFilter _meshFilter
    return:
      type: UnityEngine.MeshFilter
    content.vb: Protected _meshFilter As MeshFilter
- uid: Global.FFacetRenderLayer._meshRenderer
  commentId: F:Global.FFacetRenderLayer._meshRenderer
  id: _meshRenderer
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _meshRenderer
  nameWithType: FFacetRenderLayer._meshRenderer
  fullName: FFacetRenderLayer._meshRenderer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._meshRenderer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MeshRenderer _meshRenderer
    return:
      type: UnityEngine.MeshRenderer
    content.vb: Protected _meshRenderer As MeshRenderer
- uid: Global.FFacetRenderLayer._mesh
  commentId: F:Global.FFacetRenderLayer._mesh
  id: _mesh
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _mesh
  nameWithType: FFacetRenderLayer._mesh
  fullName: FFacetRenderLayer._mesh
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._mesh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Mesh _mesh
    return:
      type: UnityEngine.Mesh
    content.vb: Protected _mesh As Mesh
- uid: Global.FFacetRenderLayer._vertices
  commentId: F:Global.FFacetRenderLayer._vertices
  id: _vertices
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _vertices
  nameWithType: FFacetRenderLayer._vertices
  fullName: FFacetRenderLayer._vertices
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._vertices</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector3[] _vertices
    return:
      type: UnityEngine.Vector3[]
    content.vb: Protected _vertices As Vector3()
- uid: Global.FFacetRenderLayer._triangles
  commentId: F:Global.FFacetRenderLayer._triangles
  id: _triangles
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _triangles
  nameWithType: FFacetRenderLayer._triangles
  fullName: FFacetRenderLayer._triangles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._triangles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int[] _triangles
    return:
      type: System.Int32[]
    content.vb: Protected _triangles As Integer()
- uid: Global.FFacetRenderLayer._uvs
  commentId: F:Global.FFacetRenderLayer._uvs
  id: _uvs
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _uvs
  nameWithType: FFacetRenderLayer._uvs
  fullName: FFacetRenderLayer._uvs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._uvs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2[] _uvs
    return:
      type: UnityEngine.Vector2[]
    content.vb: Protected _uvs As Vector2()
- uid: Global.FFacetRenderLayer._colors
  commentId: F:Global.FFacetRenderLayer._colors
  id: _colors
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _colors
  nameWithType: FFacetRenderLayer._colors
  fullName: FFacetRenderLayer._colors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._colors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Color[] _colors
    return:
      type: UnityEngine.Color[]
    content.vb: Protected _colors As Color()
- uid: Global.FFacetRenderLayer._isMeshDirty
  commentId: F:Global.FFacetRenderLayer._isMeshDirty
  id: _isMeshDirty
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _isMeshDirty
  nameWithType: FFacetRenderLayer._isMeshDirty
  fullName: FFacetRenderLayer._isMeshDirty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._isMeshDirty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _isMeshDirty
    return:
      type: System.Boolean
    content.vb: Protected _isMeshDirty As Boolean
- uid: Global.FFacetRenderLayer._didVertsChange
  commentId: F:Global.FFacetRenderLayer._didVertsChange
  id: _didVertsChange
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _didVertsChange
  nameWithType: FFacetRenderLayer._didVertsChange
  fullName: FFacetRenderLayer._didVertsChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._didVertsChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _didVertsChange
    return:
      type: System.Boolean
    content.vb: Protected _didVertsChange As Boolean
- uid: Global.FFacetRenderLayer._didUVsChange
  commentId: F:Global.FFacetRenderLayer._didUVsChange
  id: _didUVsChange
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _didUVsChange
  nameWithType: FFacetRenderLayer._didUVsChange
  fullName: FFacetRenderLayer._didUVsChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._didUVsChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _didUVsChange
    return:
      type: System.Boolean
    content.vb: Protected _didUVsChange As Boolean
- uid: Global.FFacetRenderLayer._didColorsChange
  commentId: F:Global.FFacetRenderLayer._didColorsChange
  id: _didColorsChange
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _didColorsChange
  nameWithType: FFacetRenderLayer._didColorsChange
  fullName: FFacetRenderLayer._didColorsChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._didColorsChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _didColorsChange
    return:
      type: System.Boolean
    content.vb: Protected _didColorsChange As Boolean
- uid: Global.FFacetRenderLayer._didVertCountChange
  commentId: F:Global.FFacetRenderLayer._didVertCountChange
  id: _didVertCountChange
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _didVertCountChange
  nameWithType: FFacetRenderLayer._didVertCountChange
  fullName: FFacetRenderLayer._didVertCountChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._didVertCountChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _didVertCountChange
    return:
      type: System.Boolean
    content.vb: Protected _didVertCountChange As Boolean
- uid: Global.FFacetRenderLayer._doesMeshNeedClear
  commentId: F:Global.FFacetRenderLayer._doesMeshNeedClear
  id: _doesMeshNeedClear
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _doesMeshNeedClear
  nameWithType: FFacetRenderLayer._doesMeshNeedClear
  fullName: FFacetRenderLayer._doesMeshNeedClear
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._doesMeshNeedClear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool _doesMeshNeedClear
    return:
      type: System.Boolean
    content.vb: Protected _doesMeshNeedClear As Boolean
- uid: Global.FFacetRenderLayer._expansionAmount
  commentId: F:Global.FFacetRenderLayer._expansionAmount
  id: _expansionAmount
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _expansionAmount
  nameWithType: FFacetRenderLayer._expansionAmount
  fullName: FFacetRenderLayer._expansionAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._expansionAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _expansionAmount
    return:
      type: System.Int32
    content.vb: Protected _expansionAmount As Integer
- uid: Global.FFacetRenderLayer._maxEmptyFacets
  commentId: F:Global.FFacetRenderLayer._maxEmptyFacets
  id: _maxEmptyFacets
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _maxEmptyFacets
  nameWithType: FFacetRenderLayer._maxEmptyFacets
  fullName: FFacetRenderLayer._maxEmptyFacets
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._maxEmptyFacets</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _maxEmptyFacets
    return:
      type: System.Int32
    content.vb: Protected _maxEmptyFacets As Integer
- uid: Global.FFacetRenderLayer._maxFacetCount
  commentId: F:Global.FFacetRenderLayer._maxFacetCount
  id: _maxFacetCount
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _maxFacetCount
  nameWithType: FFacetRenderLayer._maxFacetCount
  fullName: FFacetRenderLayer._maxFacetCount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._maxFacetCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _maxFacetCount
    return:
      type: System.Int32
    content.vb: Protected _maxFacetCount As Integer
- uid: Global.FFacetRenderLayer._depth
  commentId: F:Global.FFacetRenderLayer._depth
  id: _depth
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _depth
  nameWithType: FFacetRenderLayer._depth
  fullName: FFacetRenderLayer._depth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._depth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _depth
    return:
      type: System.Int32
    content.vb: Protected _depth As Integer
- uid: Global.FFacetRenderLayer._nextAvailableFacetIndex
  commentId: F:Global.FFacetRenderLayer._nextAvailableFacetIndex
  id: _nextAvailableFacetIndex
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _nextAvailableFacetIndex
  nameWithType: FFacetRenderLayer._nextAvailableFacetIndex
  fullName: FFacetRenderLayer._nextAvailableFacetIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._nextAvailableFacetIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _nextAvailableFacetIndex
    return:
      type: System.Int32
    content.vb: Protected _nextAvailableFacetIndex As Integer
- uid: Global.FFacetRenderLayer._lowestZeroIndex
  commentId: F:Global.FFacetRenderLayer._lowestZeroIndex
  id: _lowestZeroIndex
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: _lowestZeroIndex
  nameWithType: FFacetRenderLayer._lowestZeroIndex
  fullName: FFacetRenderLayer._lowestZeroIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetRenderLayer._lowestZeroIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int _lowestZeroIndex
    return:
      type: System.Int32
    content.vb: Protected _lowestZeroIndex As Integer
- uid: Global.FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)
  commentId: M:Global.FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)
  id: '#ctor(FStage,FFacetType,FAtlas,FShader)'
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: FFacetRenderLayer(FStage, FFacetType, FAtlas, FShader)
  nameWithType: FFacetRenderLayer.FFacetRenderLayer(FStage, FFacetType, FAtlas, FShader)
  fullName: FFacetRenderLayer.FFacetRenderLayer(FStage, FFacetType, FAtlas, FShader)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FFacetRenderLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FFacetRenderLayer(FStage stage, FFacetType facetType, FAtlas atlas, FShader shader)
    parameters:
    - id: stage
      type: Global.FStage
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stage</parameter>
            <parameter>M:FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: facetType
      type: Global.FFacetType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>facetType</parameter>
            <parameter>M:FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: atlas
      type: Global.FAtlas
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlas</parameter>
            <parameter>M:FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: shader
      type: Global.FShader
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shader</parameter>
            <parameter>M:FFacetRenderLayer.#ctor(FStage,FFacetType,FAtlas,FShader)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(stage As FStage, facetType As FFacetType, atlas As FAtlas, shader As FShader)
  overload: Global.FFacetRenderLayer.#ctor*
  nameWithType.vb: FFacetRenderLayer.New(FStage, FFacetType, FAtlas, FShader)
  fullName.vb: FFacetRenderLayer.New(FStage, FFacetType, FAtlas, FShader)
  name.vb: New(FStage, FFacetType, FAtlas, FShader)
- uid: Global.FFacetRenderLayer.Destroy
  commentId: M:Global.FFacetRenderLayer.Destroy
  id: Destroy
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: FFacetRenderLayer.Destroy()
  fullName: FFacetRenderLayer.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: Global.FFacetRenderLayer.Destroy*
- uid: Global.FFacetRenderLayer.UpdateTransform
  commentId: M:Global.FFacetRenderLayer.UpdateTransform
  id: UpdateTransform
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: UpdateTransform()
  nameWithType: FFacetRenderLayer.UpdateTransform()
  fullName: FFacetRenderLayer.UpdateTransform()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.UpdateTransform</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateTransform()
    content.vb: Public Sub UpdateTransform()
  overload: Global.FFacetRenderLayer.UpdateTransform*
- uid: Global.FFacetRenderLayer.AddToWorld
  commentId: M:Global.FFacetRenderLayer.AddToWorld
  id: AddToWorld
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: AddToWorld()
  nameWithType: FFacetRenderLayer.AddToWorld()
  fullName: FFacetRenderLayer.AddToWorld()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.AddToWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToWorld()
    content.vb: Public Sub AddToWorld()
  overload: Global.FFacetRenderLayer.AddToWorld*
- uid: Global.FFacetRenderLayer.RemoveFromWorld
  commentId: M:Global.FFacetRenderLayer.RemoveFromWorld
  id: RemoveFromWorld
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: RemoveFromWorld()
  nameWithType: FFacetRenderLayer.RemoveFromWorld()
  fullName: FFacetRenderLayer.RemoveFromWorld()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.RemoveFromWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveFromWorld()
    content.vb: Public Sub RemoveFromWorld()
  overload: Global.FFacetRenderLayer.RemoveFromWorld*
- uid: Global.FFacetRenderLayer.Open
  commentId: M:Global.FFacetRenderLayer.Open
  id: Open
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: Open()
  nameWithType: FFacetRenderLayer.Open()
  fullName: FFacetRenderLayer.Open()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.Open</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Open()
    content.vb: Public Sub Open()
  overload: Global.FFacetRenderLayer.Open*
- uid: Global.FFacetRenderLayer.GetNextFacetIndex(System.Int32)
  commentId: M:Global.FFacetRenderLayer.GetNextFacetIndex(System.Int32)
  id: GetNextFacetIndex(System.Int32)
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: GetNextFacetIndex(int)
  nameWithType: FFacetRenderLayer.GetNextFacetIndex(int)
  fullName: FFacetRenderLayer.GetNextFacetIndex(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.GetNextFacetIndex(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetNextFacetIndex(int numberOfFacetsNeeded)
    parameters:
    - id: numberOfFacetsNeeded
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>numberOfFacetsNeeded</parameter>
            <parameter>M:FFacetRenderLayer.GetNextFacetIndex(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FFacetRenderLayer.GetNextFacetIndex(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetNextFacetIndex(numberOfFacetsNeeded As Integer) As Integer
  overload: Global.FFacetRenderLayer.GetNextFacetIndex*
  nameWithType.vb: FFacetRenderLayer.GetNextFacetIndex(Integer)
  fullName.vb: FFacetRenderLayer.GetNextFacetIndex(Integer)
  name.vb: GetNextFacetIndex(Integer)
- uid: Global.FFacetRenderLayer.Close
  commentId: M:Global.FFacetRenderLayer.Close
  id: Close
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: FFacetRenderLayer.Close()
  fullName: FFacetRenderLayer.Close()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.Close</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close()
  overload: Global.FFacetRenderLayer.Close*
- uid: Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes
  commentId: M:Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes
  id: FillUnusedFacetsWithZeroes
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: FillUnusedFacetsWithZeroes()
  nameWithType: FFacetRenderLayer.FillUnusedFacetsWithZeroes()
  fullName: FFacetRenderLayer.FillUnusedFacetsWithZeroes()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.FillUnusedFacetsWithZeroes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void FillUnusedFacetsWithZeroes()
    content.vb: Protected Overridable Sub FillUnusedFacetsWithZeroes()
  overload: Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes*
- uid: Global.FFacetRenderLayer.ShrinkMaxFacetLimit(System.Int32)
  commentId: M:Global.FFacetRenderLayer.ShrinkMaxFacetLimit(System.Int32)
  id: ShrinkMaxFacetLimit(System.Int32)
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: ShrinkMaxFacetLimit(int)
  nameWithType: FFacetRenderLayer.ShrinkMaxFacetLimit(int)
  fullName: FFacetRenderLayer.ShrinkMaxFacetLimit(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.ShrinkMaxFacetLimit(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void ShrinkMaxFacetLimit(int deltaDecrease)
    parameters:
    - id: deltaDecrease
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deltaDecrease</parameter>
            <parameter>M:FFacetRenderLayer.ShrinkMaxFacetLimit(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Sub ShrinkMaxFacetLimit(deltaDecrease As Integer)
  overload: Global.FFacetRenderLayer.ShrinkMaxFacetLimit*
  nameWithType.vb: FFacetRenderLayer.ShrinkMaxFacetLimit(Integer)
  fullName.vb: FFacetRenderLayer.ShrinkMaxFacetLimit(Integer)
  name.vb: ShrinkMaxFacetLimit(Integer)
- uid: Global.FFacetRenderLayer.ExpandMaxFacetLimit(System.Int32)
  commentId: M:Global.FFacetRenderLayer.ExpandMaxFacetLimit(System.Int32)
  id: ExpandMaxFacetLimit(System.Int32)
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: ExpandMaxFacetLimit(int)
  nameWithType: FFacetRenderLayer.ExpandMaxFacetLimit(int)
  fullName: FFacetRenderLayer.ExpandMaxFacetLimit(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.ExpandMaxFacetLimit(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void ExpandMaxFacetLimit(int deltaIncrease)
    parameters:
    - id: deltaIncrease
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deltaIncrease</parameter>
            <parameter>M:FFacetRenderLayer.ExpandMaxFacetLimit(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Sub ExpandMaxFacetLimit(deltaIncrease As Integer)
  overload: Global.FFacetRenderLayer.ExpandMaxFacetLimit*
  nameWithType.vb: FFacetRenderLayer.ExpandMaxFacetLimit(Integer)
  fullName.vb: FFacetRenderLayer.ExpandMaxFacetLimit(Integer)
  name.vb: ExpandMaxFacetLimit(Integer)
- uid: Global.FFacetRenderLayer.Update(System.Int32)
  commentId: M:Global.FFacetRenderLayer.Update(System.Int32)
  id: Update(System.Int32)
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: Update(int)
  nameWithType: FFacetRenderLayer.Update(int)
  fullName: FFacetRenderLayer.Update(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.Update(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update(int depth)
    parameters:
    - id: depth
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>depth</parameter>
            <parameter>M:FFacetRenderLayer.Update(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Update(depth As Integer)
  overload: Global.FFacetRenderLayer.Update*
  implements:
  - Global.FRenderableLayerInterface.Update(System.Int32)
  nameWithType.vb: FFacetRenderLayer.Update(Integer)
  fullName.vb: FFacetRenderLayer.Update(Integer)
  name.vb: Update(Integer)
- uid: Global.FFacetRenderLayer.UpdateMeshProperties
  commentId: M:Global.FFacetRenderLayer.UpdateMeshProperties
  id: UpdateMeshProperties
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: UpdateMeshProperties()
  nameWithType: FFacetRenderLayer.UpdateMeshProperties()
  fullName: FFacetRenderLayer.UpdateMeshProperties()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.UpdateMeshProperties</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void UpdateMeshProperties()
    content.vb: Protected Sub UpdateMeshProperties()
  overload: Global.FFacetRenderLayer.UpdateMeshProperties*
- uid: Global.FFacetRenderLayer.HandleVertsChange
  commentId: M:Global.FFacetRenderLayer.HandleVertsChange
  id: HandleVertsChange
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: HandleVertsChange()
  nameWithType: FFacetRenderLayer.HandleVertsChange()
  fullName: FFacetRenderLayer.HandleVertsChange()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetRenderLayer.HandleVertsChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HandleVertsChange()
    content.vb: Public Sub HandleVertsChange()
  overload: Global.FFacetRenderLayer.HandleVertsChange*
- uid: Global.FFacetRenderLayer.expansionAmount
  commentId: P:Global.FFacetRenderLayer.expansionAmount
  id: expansionAmount
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: expansionAmount
  nameWithType: FFacetRenderLayer.expansionAmount
  fullName: FFacetRenderLayer.expansionAmount
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFacetRenderLayer.expansionAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int expansionAmount { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property expansionAmount As Integer
  overload: Global.FFacetRenderLayer.expansionAmount*
- uid: Global.FFacetRenderLayer.vertices
  commentId: P:Global.FFacetRenderLayer.vertices
  id: vertices
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: vertices
  nameWithType: FFacetRenderLayer.vertices
  fullName: FFacetRenderLayer.vertices
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFacetRenderLayer.vertices</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector3[] vertices { get; }
    parameters: []
    return:
      type: UnityEngine.Vector3[]
    content.vb: Public ReadOnly Property vertices As Vector3()
  overload: Global.FFacetRenderLayer.vertices*
- uid: Global.FFacetRenderLayer.uvs
  commentId: P:Global.FFacetRenderLayer.uvs
  id: uvs
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: uvs
  nameWithType: FFacetRenderLayer.uvs
  fullName: FFacetRenderLayer.uvs
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFacetRenderLayer.uvs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] uvs { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public ReadOnly Property uvs As Vector2()
  overload: Global.FFacetRenderLayer.uvs*
- uid: Global.FFacetRenderLayer.colors
  commentId: P:Global.FFacetRenderLayer.colors
  id: colors
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: colors
  nameWithType: FFacetRenderLayer.colors
  fullName: FFacetRenderLayer.colors
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFacetRenderLayer.colors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color[] colors { get; }
    parameters: []
    return:
      type: UnityEngine.Color[]
    content.vb: Public ReadOnly Property colors As Color()
  overload: Global.FFacetRenderLayer.colors*
- uid: Global.FFacetRenderLayer.atlas
  commentId: P:Global.FFacetRenderLayer.atlas
  id: atlas
  parent: Global.FFacetRenderLayer
  langs:
  - csharp
  - vb
  name: atlas
  nameWithType: FFacetRenderLayer.atlas
  fullName: FFacetRenderLayer.atlas
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FFacetRenderLayer.atlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlas atlas { get; }
    parameters: []
    return:
      type: Global.FAtlas
    content.vb: Public ReadOnly Property atlas As FAtlas
  overload: Global.FFacetRenderLayer.atlas*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.FRenderableLayerInterface
  commentId: T:Global.FRenderableLayerInterface
  isExternal: true
  href: FRenderableLayerInterface.html
  name: FRenderableLayerInterface
  nameWithType: FRenderableLayerInterface
  fullName: FRenderableLayerInterface
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.FStage
  commentId: T:Global.FStage
  isExternal: true
  href: FStage.html
  name: FStage
  nameWithType: FStage
  fullName: FStage
- uid: Global.FFacetType
  commentId: T:Global.FFacetType
  isExternal: true
  href: FFacetType.html
  name: FFacetType
  nameWithType: FFacetType
  fullName: FFacetType
- uid: Global.FAtlas
  commentId: T:Global.FAtlas
  isExternal: true
  href: FAtlas.html
  name: FAtlas
  nameWithType: FAtlas
  fullName: FAtlas
- uid: Global.FShader
  commentId: T:Global.FShader
  isExternal: true
  href: FShader.html
  name: FShader
  nameWithType: FShader
  fullName: FShader
- uid: UnityEngine.GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: UnityEngine.GameObject
- uid: UnityEngine.Transform
  commentId: '!:UnityEngine.Transform'
  isExternal: true
  name: Transform
  nameWithType: Transform
  fullName: UnityEngine.Transform
- uid: UnityEngine.Material
  isExternal: true
  name: Material
  nameWithType: Material
  fullName: UnityEngine.Material
- uid: UnityEngine.MeshFilter
  isExternal: true
  name: MeshFilter
  nameWithType: MeshFilter
  fullName: UnityEngine.MeshFilter
- uid: UnityEngine.MeshRenderer
  isExternal: true
  name: MeshRenderer
  nameWithType: MeshRenderer
  fullName: UnityEngine.MeshRenderer
- uid: UnityEngine.Mesh
  isExternal: true
  name: Mesh
  nameWithType: Mesh
  fullName: UnityEngine.Mesh
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: UnityEngine.Color[]
  nameWithType.vb: Color()
  fullName.vb: UnityEngine.Color()
  name.vb: Color()
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FFacetRenderLayer.#ctor*
  commentId: Overload:Global.FFacetRenderLayer.#ctor
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer__ctor_FStage_FFacetType_FAtlas_FShader_
  name: FFacetRenderLayer
  nameWithType: FFacetRenderLayer.FFacetRenderLayer
  fullName: FFacetRenderLayer.FFacetRenderLayer
  nameWithType.vb: FFacetRenderLayer.New
  fullName.vb: FFacetRenderLayer.New
  name.vb: New
- uid: Global.FFacetRenderLayer.Destroy*
  commentId: Overload:Global.FFacetRenderLayer.Destroy
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_Destroy
  name: Destroy
  nameWithType: FFacetRenderLayer.Destroy
  fullName: FFacetRenderLayer.Destroy
- uid: Global.FFacetRenderLayer.UpdateTransform*
  commentId: Overload:Global.FFacetRenderLayer.UpdateTransform
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_UpdateTransform
  name: UpdateTransform
  nameWithType: FFacetRenderLayer.UpdateTransform
  fullName: FFacetRenderLayer.UpdateTransform
- uid: Global.FFacetRenderLayer.AddToWorld*
  commentId: Overload:Global.FFacetRenderLayer.AddToWorld
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_AddToWorld
  name: AddToWorld
  nameWithType: FFacetRenderLayer.AddToWorld
  fullName: FFacetRenderLayer.AddToWorld
- uid: Global.FFacetRenderLayer.RemoveFromWorld*
  commentId: Overload:Global.FFacetRenderLayer.RemoveFromWorld
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_RemoveFromWorld
  name: RemoveFromWorld
  nameWithType: FFacetRenderLayer.RemoveFromWorld
  fullName: FFacetRenderLayer.RemoveFromWorld
- uid: Global.FFacetRenderLayer.Open*
  commentId: Overload:Global.FFacetRenderLayer.Open
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_Open
  name: Open
  nameWithType: FFacetRenderLayer.Open
  fullName: FFacetRenderLayer.Open
- uid: Global.FFacetRenderLayer.GetNextFacetIndex*
  commentId: Overload:Global.FFacetRenderLayer.GetNextFacetIndex
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_GetNextFacetIndex_System_Int32_
  name: GetNextFacetIndex
  nameWithType: FFacetRenderLayer.GetNextFacetIndex
  fullName: FFacetRenderLayer.GetNextFacetIndex
- uid: Global.FFacetRenderLayer.Close*
  commentId: Overload:Global.FFacetRenderLayer.Close
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_Close
  name: Close
  nameWithType: FFacetRenderLayer.Close
  fullName: FFacetRenderLayer.Close
- uid: Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes*
  commentId: Overload:Global.FFacetRenderLayer.FillUnusedFacetsWithZeroes
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_FillUnusedFacetsWithZeroes
  name: FillUnusedFacetsWithZeroes
  nameWithType: FFacetRenderLayer.FillUnusedFacetsWithZeroes
  fullName: FFacetRenderLayer.FillUnusedFacetsWithZeroes
- uid: Global.FFacetRenderLayer.ShrinkMaxFacetLimit*
  commentId: Overload:Global.FFacetRenderLayer.ShrinkMaxFacetLimit
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_ShrinkMaxFacetLimit_System_Int32_
  name: ShrinkMaxFacetLimit
  nameWithType: FFacetRenderLayer.ShrinkMaxFacetLimit
  fullName: FFacetRenderLayer.ShrinkMaxFacetLimit
- uid: Global.FFacetRenderLayer.ExpandMaxFacetLimit*
  commentId: Overload:Global.FFacetRenderLayer.ExpandMaxFacetLimit
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_ExpandMaxFacetLimit_System_Int32_
  name: ExpandMaxFacetLimit
  nameWithType: FFacetRenderLayer.ExpandMaxFacetLimit
  fullName: FFacetRenderLayer.ExpandMaxFacetLimit
- uid: Global.FFacetRenderLayer.Update*
  commentId: Overload:Global.FFacetRenderLayer.Update
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_Update_System_Int32_
  name: Update
  nameWithType: FFacetRenderLayer.Update
  fullName: FFacetRenderLayer.Update
- uid: Global.FRenderableLayerInterface.Update(System.Int32)
  commentId: M:Global.FRenderableLayerInterface.Update(System.Int32)
  parent: Global.FRenderableLayerInterface
  isExternal: true
  href: Global.FRenderableLayerInterface.html#FRenderableLayerInterface_Update_System_Int32_
  name: Update(int)
  nameWithType: FRenderableLayerInterface.Update(int)
  fullName: FRenderableLayerInterface.Update(int)
  nameWithType.vb: FRenderableLayerInterface.Update(Integer)
  fullName.vb: FRenderableLayerInterface.Update(Integer)
  name.vb: Update(Integer)
  spec.csharp:
  - uid: Global.FRenderableLayerInterface.Update(System.Int32)
    name: Update
    isExternal: true
    href: Global.FRenderableLayerInterface.html#FRenderableLayerInterface_Update_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.FRenderableLayerInterface.Update(System.Int32)
    name: Update
    isExternal: true
    href: Global.FRenderableLayerInterface.html#FRenderableLayerInterface_Update_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.FFacetRenderLayer.UpdateMeshProperties*
  commentId: Overload:Global.FFacetRenderLayer.UpdateMeshProperties
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_UpdateMeshProperties
  name: UpdateMeshProperties
  nameWithType: FFacetRenderLayer.UpdateMeshProperties
  fullName: FFacetRenderLayer.UpdateMeshProperties
- uid: Global.FFacetRenderLayer.HandleVertsChange*
  commentId: Overload:Global.FFacetRenderLayer.HandleVertsChange
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_HandleVertsChange
  name: HandleVertsChange
  nameWithType: FFacetRenderLayer.HandleVertsChange
  fullName: FFacetRenderLayer.HandleVertsChange
- uid: Global.FFacetRenderLayer.expansionAmount*
  commentId: Overload:Global.FFacetRenderLayer.expansionAmount
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_expansionAmount
  name: expansionAmount
  nameWithType: FFacetRenderLayer.expansionAmount
  fullName: FFacetRenderLayer.expansionAmount
- uid: Global.FFacetRenderLayer.vertices*
  commentId: Overload:Global.FFacetRenderLayer.vertices
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_vertices
  name: vertices
  nameWithType: FFacetRenderLayer.vertices
  fullName: FFacetRenderLayer.vertices
- uid: Global.FFacetRenderLayer.uvs*
  commentId: Overload:Global.FFacetRenderLayer.uvs
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_uvs
  name: uvs
  nameWithType: FFacetRenderLayer.uvs
  fullName: FFacetRenderLayer.uvs
- uid: Global.FFacetRenderLayer.colors*
  commentId: Overload:Global.FFacetRenderLayer.colors
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_colors
  name: colors
  nameWithType: FFacetRenderLayer.colors
  fullName: FFacetRenderLayer.colors
- uid: Global.FFacetRenderLayer.atlas*
  commentId: Overload:Global.FFacetRenderLayer.atlas
  isExternal: true
  href: Global.FFacetRenderLayer.html#FFacetRenderLayer_atlas
  name: atlas
  nameWithType: FFacetRenderLayer.atlas
  fullName: FFacetRenderLayer.atlas
