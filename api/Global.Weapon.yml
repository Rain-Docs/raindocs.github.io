### YamlMime:ManagedReference
items:
- uid: Global.Weapon
  commentId: T:Global.Weapon
  id: Weapon
  parent: Global
  children:
  - Global.Weapon.#ctor(AbstractPhysicalObject,World)
  - Global.Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.Weapon.ChangeMode(Weapon.Mode)
  - Global.Weapon.ChangeOverlap(System.Boolean)
  - Global.Weapon.DefaultCollLayer
  - Global.Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.Weapon.Grabbed(Creature.Grasp)
  - Global.Weapon.HeavyWeapon
  - Global.Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)
  - Global.Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)
  - Global.Weapon.HitThisChunk(BodyChunk)
  - Global.Weapon.HitThisObject(PhysicalObject)
  - Global.Weapon.HitWall
  - Global.Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.Weapon.NewRoom(Room)
  - Global.Weapon.PlaceInRoom(Room)
  - Global.Weapon.SetRandomSpin
  - Global.Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  - Global.Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)
  - Global.Weapon.Update(System.Boolean)
  - Global.Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  - Global.Weapon.changeDirCounter
  - Global.Weapon.closestCritDist
  - Global.Weapon.doNotTumbleAtLowSpeed
  - Global.Weapon.exitThrownModeSpeed
  - Global.Weapon.firstFrameTraceFromPos
  - Global.Weapon.floorBounceFrames
  - Global.Weapon.lastMode
  - Global.Weapon.lastRotation
  - Global.Weapon.meleeHitChunk
  - Global.Weapon.mode
  - Global.Weapon.overrideExitThrownSpeed
  - Global.Weapon.rotation
  - Global.Weapon.rotationSpeed
  - Global.Weapon.setPosAndTail(UnityEngine.Vector2)
  - Global.Weapon.setRotation
  - Global.Weapon.soundLoop
  - Global.Weapon.tailPos
  - Global.Weapon.throwDir
  - Global.Weapon.throwModeFrames
  - Global.Weapon.thrownBy
  - Global.Weapon.thrownClosestToCreature
  - Global.Weapon.thrownPos
  - Global.Weapon.vibrate
  langs:
  - csharp
  - vb
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Weapon</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public abstract class Weapon : PlayerCarryableItem, IDrawable, SharedPhysics.IProjectileTracer'
    content.vb: Public MustInherit Class Weapon Inherits PlayerCarryableItem Implements IDrawable, SharedPhysics.IProjectileTracer
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  - Global.PhysicalObject
  - Global.PlayerCarryableItem
  derivedClasses:
  - Global.Boomerang
  - Global.FirecrackerPlant
  - Global.FlareBomb
  - Global.PuffBall
  - Global.Rock
  - Global.ScavengerBomb
  - Global.Spear
  - Global.SporePlant
  - MoreSlugcats.Bullet
  - MoreSlugcats.LillyPuck
  - MoreSlugcats.SingularityBomb
  implements:
  - Global.IDrawable
  - Global.SharedPhysics.IProjectileTracer
  inheritedMembers:
  - Global.PlayerCarryableItem.blink
  - Global.PlayerCarryableItem.color
  - Global.PlayerCarryableItem.lastOutsideTerrainPos
  - Global.PlayerCarryableItem.PickedUp(Creature)
  - Global.PlayerCarryableItem.Blink
  - Global.PlayerCarryableItem.Forbid
  - Global.PlayerCarryableItem.forbiddenToPlayer
  - Global.PlayerCarryableItem.ThrowPowerFactor
  - Global.PlayerCarryableItem.blinkColor
  - Global.PhysicalObject.bodyChunkConnections
  - Global.PhysicalObject.grabbedBy
  - Global.PhysicalObject.collisionRange
  - Global.PhysicalObject.collisionLayer
  - Global.PhysicalObject.abstractPhysicalObject
  - Global.PhysicalObject.surfaceFriction
  - Global.PhysicalObject.bounce
  - Global.PhysicalObject.impactTreshhold
  - Global.PhysicalObject.waterRetardationImmunity
  - Global.PhysicalObject.burrowFriction
  - Global.PhysicalObject.sticksRespawned
  - Global.PhysicalObject.appendages
  - Global.PhysicalObject.canBeHitByWeapons
  - Global.PhysicalObject.jollyBeingPointedCounter
  - Global.PhysicalObject.FirstChunk
  - Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  - Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  - Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  - Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  - Global.PhysicalObject.HitByWeapon(Weapon)
  - Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  - Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  - Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  - Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  - Global.PhysicalObject.InitiateGraphicsModule
  - Global.PhysicalObject.RemoveGraphicsModule
  - Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  - Global.PhysicalObject.RecreateSticksFromAbstract
  - Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  - Global.PhysicalObject.SetLocalGravity(System.Single)
  - Global.PhysicalObject.GetLocalGravity
  - Global.PhysicalObject.SetLocalAirFriction(System.Single)
  - Global.PhysicalObject.WeatherInertia
  - Global.PhysicalObject.DisposeGraphicsModule
  - Global.PhysicalObject.bodyChunks
  - Global.PhysicalObject.graphicsModule
  - Global.PhysicalObject.firstChunk
  - Global.PhysicalObject.TotalMass
  - Global.PhysicalObject.RandomChunk
  - Global.PhysicalObject.gravity
  - Global.PhysicalObject.airFriction
  - Global.PhysicalObject.waterFriction
  - Global.PhysicalObject.buoyancy
  - Global.PhysicalObject.windAffectiveness
  - Global.PhysicalObject.VisibilityBonus
  - Global.PhysicalObject.GoThroughFloors
  - Global.PhysicalObject.CollideWithTerrain
  - Global.PhysicalObject.CollideWithSlopes
  - Global.PhysicalObject.CollideWithObjects
  - Global.PhysicalObject.Buried
  - Global.PhysicalObject.WantsToBurrow
  - Global.PhysicalObject.Submersion
  - Global.PhysicalObject.SandstormImmune
  - Global.PhysicalObject.EffectiveRoomGravity
  - Global.PhysicalObject.LickedByPlayer
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Weapon.lastMode
  commentId: F:Global.Weapon.lastMode
  id: lastMode
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: lastMode
  nameWithType: Weapon.lastMode
  fullName: Weapon.lastMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.lastMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Weapon.Mode lastMode
    return:
      type: Global.Weapon.Mode
    content.vb: Public lastMode As Weapon.Mode
- uid: Global.Weapon.tailPos
  commentId: F:Global.Weapon.tailPos
  id: tailPos
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: tailPos
  nameWithType: Weapon.tailPos
  fullName: Weapon.tailPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.tailPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 tailPos
    return:
      type: UnityEngine.Vector2
    content.vb: Protected tailPos As Vector2
- uid: Global.Weapon.thrownBy
  commentId: F:Global.Weapon.thrownBy
  id: thrownBy
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: thrownBy
  nameWithType: Weapon.thrownBy
  fullName: Weapon.thrownBy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.thrownBy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature thrownBy
    return:
      type: Global.Creature
    content.vb: Public thrownBy As Creature
- uid: Global.Weapon.throwDir
  commentId: F:Global.Weapon.throwDir
  id: throwDir
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: throwDir
  nameWithType: Weapon.throwDir
  fullName: Weapon.throwDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.throwDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected IntVector2 throwDir
    return:
      type: RWCustom.IntVector2
    content.vb: Protected throwDir As IntVector2
- uid: Global.Weapon.changeDirCounter
  commentId: F:Global.Weapon.changeDirCounter
  id: changeDirCounter
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: changeDirCounter
  nameWithType: Weapon.changeDirCounter
  fullName: Weapon.changeDirCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.changeDirCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int changeDirCounter
    return:
      type: System.Int32
    content.vb: Public changeDirCounter As Integer
- uid: Global.Weapon.vibrate
  commentId: F:Global.Weapon.vibrate
  id: vibrate
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: vibrate
  nameWithType: Weapon.vibrate
  fullName: Weapon.vibrate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.vibrate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int vibrate
    return:
      type: System.Int32
    content.vb: Protected vibrate As Integer
- uid: Global.Weapon.lastRotation
  commentId: F:Global.Weapon.lastRotation
  id: lastRotation
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: lastRotation
  nameWithType: Weapon.lastRotation
  fullName: Weapon.lastRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.lastRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 lastRotation
    return:
      type: UnityEngine.Vector2
    content.vb: Protected lastRotation As Vector2
- uid: Global.Weapon.rotation
  commentId: F:Global.Weapon.rotation
  id: rotation
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: Weapon.rotation
  fullName: Weapon.rotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 rotation
    return:
      type: UnityEngine.Vector2
    content.vb: Public rotation As Vector2
- uid: Global.Weapon.rotationSpeed
  commentId: F:Global.Weapon.rotationSpeed
  id: rotationSpeed
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: rotationSpeed
  nameWithType: Weapon.rotationSpeed
  fullName: Weapon.rotationSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.rotationSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rotationSpeed
    return:
      type: System.Single
    content.vb: Public rotationSpeed As Single
- uid: Global.Weapon.setRotation
  commentId: F:Global.Weapon.setRotation
  id: setRotation
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: setRotation
  nameWithType: Weapon.setRotation
  fullName: Weapon.setRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.setRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? setRotation
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public setRotation As Vector2?
- uid: Global.Weapon.thrownPos
  commentId: F:Global.Weapon.thrownPos
  id: thrownPos
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: thrownPos
  nameWithType: Weapon.thrownPos
  fullName: Weapon.thrownPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.thrownPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 thrownPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public thrownPos As Vector2
- uid: Global.Weapon.firstFrameTraceFromPos
  commentId: F:Global.Weapon.firstFrameTraceFromPos
  id: firstFrameTraceFromPos
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: firstFrameTraceFromPos
  nameWithType: Weapon.firstFrameTraceFromPos
  fullName: Weapon.firstFrameTraceFromPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.firstFrameTraceFromPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? firstFrameTraceFromPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public firstFrameTraceFromPos As Vector2?
- uid: Global.Weapon.thrownClosestToCreature
  commentId: F:Global.Weapon.thrownClosestToCreature
  id: thrownClosestToCreature
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: thrownClosestToCreature
  nameWithType: Weapon.thrownClosestToCreature
  fullName: Weapon.thrownClosestToCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.thrownClosestToCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature thrownClosestToCreature
    return:
      type: Global.Creature
    content.vb: Public thrownClosestToCreature As Creature
- uid: Global.Weapon.closestCritDist
  commentId: F:Global.Weapon.closestCritDist
  id: closestCritDist
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: closestCritDist
  nameWithType: Weapon.closestCritDist
  fullName: Weapon.closestCritDist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.closestCritDist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float closestCritDist
    return:
      type: System.Single
    content.vb: Public closestCritDist As Single
- uid: Global.Weapon.meleeHitChunk
  commentId: F:Global.Weapon.meleeHitChunk
  id: meleeHitChunk
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: meleeHitChunk
  nameWithType: Weapon.meleeHitChunk
  fullName: Weapon.meleeHitChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.meleeHitChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk meleeHitChunk
    return:
      type: Global.BodyChunk
    content.vb: Public meleeHitChunk As BodyChunk
- uid: Global.Weapon.exitThrownModeSpeed
  commentId: F:Global.Weapon.exitThrownModeSpeed
  id: exitThrownModeSpeed
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: exitThrownModeSpeed
  nameWithType: Weapon.exitThrownModeSpeed
  fullName: Weapon.exitThrownModeSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.exitThrownModeSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float exitThrownModeSpeed
    return:
      type: System.Single
    content.vb: Public exitThrownModeSpeed As Single
- uid: Global.Weapon.throwModeFrames
  commentId: F:Global.Weapon.throwModeFrames
  id: throwModeFrames
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: throwModeFrames
  nameWithType: Weapon.throwModeFrames
  fullName: Weapon.throwModeFrames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.throwModeFrames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int throwModeFrames
    return:
      type: System.Int32
    content.vb: Public throwModeFrames As Integer
- uid: Global.Weapon.floorBounceFrames
  commentId: F:Global.Weapon.floorBounceFrames
  id: floorBounceFrames
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: floorBounceFrames
  nameWithType: Weapon.floorBounceFrames
  fullName: Weapon.floorBounceFrames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.floorBounceFrames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int floorBounceFrames
    return:
      type: System.Int32
    content.vb: Public floorBounceFrames As Integer
- uid: Global.Weapon.soundLoop
  commentId: F:Global.Weapon.soundLoop
  id: soundLoop
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: Weapon.soundLoop
  fullName: Weapon.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected DynamicSoundLoop soundLoop
    return:
      type: Global.DynamicSoundLoop
    content.vb: Protected soundLoop As DynamicSoundLoop
- uid: Global.Weapon.overrideExitThrownSpeed
  commentId: F:Global.Weapon.overrideExitThrownSpeed
  id: overrideExitThrownSpeed
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: overrideExitThrownSpeed
  nameWithType: Weapon.overrideExitThrownSpeed
  fullName: Weapon.overrideExitThrownSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.overrideExitThrownSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float overrideExitThrownSpeed
    return:
      type: System.Single
    content.vb: Public overrideExitThrownSpeed As Single
- uid: Global.Weapon.doNotTumbleAtLowSpeed
  commentId: F:Global.Weapon.doNotTumbleAtLowSpeed
  id: doNotTumbleAtLowSpeed
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: doNotTumbleAtLowSpeed
  nameWithType: Weapon.doNotTumbleAtLowSpeed
  fullName: Weapon.doNotTumbleAtLowSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Weapon.doNotTumbleAtLowSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool doNotTumbleAtLowSpeed
    return:
      type: System.Boolean
    content.vb: Public doNotTumbleAtLowSpeed As Boolean
- uid: Global.Weapon.#ctor(AbstractPhysicalObject,World)
  commentId: M:Global.Weapon.#ctor(AbstractPhysicalObject,World)
  id: '#ctor(AbstractPhysicalObject,World)'
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: Weapon(AbstractPhysicalObject, World)
  nameWithType: Weapon.Weapon(AbstractPhysicalObject, World)
  fullName: Weapon.Weapon(AbstractPhysicalObject, World)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Weapon</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Weapon(AbstractPhysicalObject abstractPhysicalObject, World world)
    parameters:
    - id: abstractPhysicalObject
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractPhysicalObject</parameter>
            <parameter>M:Weapon.#ctor(AbstractPhysicalObject,World)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:Weapon.#ctor(AbstractPhysicalObject,World)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(abstractPhysicalObject As AbstractPhysicalObject, world As World)
  overload: Global.Weapon.#ctor*
  nameWithType.vb: Weapon.New(AbstractPhysicalObject, World)
  fullName.vb: Weapon.New(AbstractPhysicalObject, World)
  name.vb: New(AbstractPhysicalObject, World)
- uid: Global.Weapon.PlaceInRoom(Room)
  commentId: M:Global.Weapon.PlaceInRoom(Room)
  id: PlaceInRoom(Room)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: PlaceInRoom(Room)
  nameWithType: Weapon.PlaceInRoom(Room)
  fullName: Weapon.PlaceInRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.PlaceInRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void PlaceInRoom(Room placeRoom)
    parameters:
    - id: placeRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placeRoom</parameter>
            <parameter>M:Weapon.PlaceInRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub PlaceInRoom(placeRoom As Room)
  overridden: Global.PhysicalObject.PlaceInRoom(Room)
  overload: Global.Weapon.PlaceInRoom*
- uid: Global.Weapon.NewRoom(Room)
  commentId: M:Global.Weapon.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: Weapon.NewRoom(Room)
  fullName: Weapon.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Weapon.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(newRoom As Room)
  overridden: Global.PlayerCarryableItem.NewRoom(Room)
  overload: Global.Weapon.NewRoom*
- uid: Global.Weapon.ChangeOverlap(System.Boolean)
  commentId: M:Global.Weapon.ChangeOverlap(System.Boolean)
  id: ChangeOverlap(System.Boolean)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: ChangeOverlap(bool)
  nameWithType: Weapon.ChangeOverlap(bool)
  fullName: Weapon.ChangeOverlap(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.ChangeOverlap(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ChangeOverlap(bool newOverlap)
    parameters:
    - id: newOverlap
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newOverlap</parameter>
            <parameter>M:Weapon.ChangeOverlap(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ChangeOverlap(newOverlap As Boolean)
  overload: Global.Weapon.ChangeOverlap*
  nameWithType.vb: Weapon.ChangeOverlap(Boolean)
  fullName.vb: Weapon.ChangeOverlap(Boolean)
  name.vb: ChangeOverlap(Boolean)
- uid: Global.Weapon.ChangeMode(Weapon.Mode)
  commentId: M:Global.Weapon.ChangeMode(Weapon.Mode)
  id: ChangeMode(Weapon.Mode)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: ChangeMode(Mode)
  nameWithType: Weapon.ChangeMode(Weapon.Mode)
  fullName: Weapon.ChangeMode(Weapon.Mode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.ChangeMode(Weapon.Mode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ChangeMode(Weapon.Mode newMode)
    parameters:
    - id: newMode
      type: Global.Weapon.Mode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newMode</parameter>
            <parameter>M:Weapon.ChangeMode(Weapon.Mode)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ChangeMode(newMode As Weapon.Mode)
  overload: Global.Weapon.ChangeMode*
- uid: Global.Weapon.Update(System.Boolean)
  commentId: M:Global.Weapon.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Weapon.Update(bool)
  fullName: Weapon.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Weapon.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.PlayerCarryableItem.Update(System.Boolean)
  overload: Global.Weapon.Update*
  nameWithType.vb: Weapon.Update(Boolean)
  fullName.vb: Weapon.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)
  id: Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: Thrown(Creature, Vector2, Vector2?, IntVector2, float, bool)
  nameWithType: Weapon.Thrown(Creature, Vector2, Vector2?, IntVector2, float, bool)
  fullName: Weapon.Thrown(Creature, UnityEngine.Vector2, UnityEngine.Vector2?, RWCustom.IntVector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Thrown(Creature thrownBy, Vector2 thrownPos, Vector2? firstFrameTraceFromPos, IntVector2 throwDir, float frc, bool eu)
    parameters:
    - id: thrownBy
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thrownBy</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: thrownPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thrownPos</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: firstFrameTraceFromPos
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstFrameTraceFromPos</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: throwDir
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>throwDir</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: frc
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>frc</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Weapon.Thrown(Creature,UnityEngine.Vector2,System.Nullable{UnityEngine.Vector2},RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Thrown(thrownBy As Creature, thrownPos As Vector2, firstFrameTraceFromPos As Vector2?, throwDir As IntVector2, frc As Single, eu As Boolean)
  overload: Global.Weapon.Thrown*
  nameWithType.vb: Weapon.Thrown(Creature, Vector2, Vector2?, IntVector2, Single, Boolean)
  fullName.vb: Weapon.Thrown(Creature, UnityEngine.Vector2, UnityEngine.Vector2?, RWCustom.IntVector2, Single, Boolean)
  name.vb: Thrown(Creature, Vector2, Vector2?, IntVector2, Single, Boolean)
- uid: Global.Weapon.Grabbed(Creature.Grasp)
  commentId: M:Global.Weapon.Grabbed(Creature.Grasp)
  id: Grabbed(Creature.Grasp)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: Grabbed(Grasp)
  nameWithType: Weapon.Grabbed(Creature.Grasp)
  fullName: Weapon.Grabbed(Creature.Grasp)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.Grabbed(Creature.Grasp)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Grabbed(Creature.Grasp grasp)
    parameters:
    - id: grasp
      type: Global.Creature.Grasp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Weapon.Grabbed(Creature.Grasp)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Grabbed(grasp As Creature.Grasp)
  overridden: Global.PhysicalObject.Grabbed(Creature.Grasp)
  overload: Global.Weapon.Grabbed*
- uid: Global.Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)
  commentId: M:Global.Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)
  id: HitSomething(SharedPhysics.CollisionResult,System.Boolean)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HitSomething(CollisionResult, bool)
  nameWithType: Weapon.HitSomething(SharedPhysics.CollisionResult, bool)
  fullName: Weapon.HitSomething(SharedPhysics.CollisionResult, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool HitSomething(SharedPhysics.CollisionResult result, bool eu)
    parameters:
    - id: result
      type: Global.SharedPhysics.CollisionResult
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Weapon.HitSomething(SharedPhysics.CollisionResult,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function HitSomething(result As SharedPhysics.CollisionResult, eu As Boolean) As Boolean
  overload: Global.Weapon.HitSomething*
  nameWithType.vb: Weapon.HitSomething(SharedPhysics.CollisionResult, Boolean)
  fullName.vb: Weapon.HitSomething(SharedPhysics.CollisionResult, Boolean)
  name.vb: HitSomething(CollisionResult, Boolean)
- uid: Global.Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  commentId: M:Global.Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  id: WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: WeaponDeflect(Vector2, Vector2, float)
  nameWithType: Weapon.WeaponDeflect(Vector2, Vector2, float)
  fullName: Weapon.WeaponDeflect(UnityEngine.Vector2, UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void WeaponDeflect(Vector2 inbetweenPos, Vector2 deflectDir, float bounceSpeed)
    parameters:
    - id: inbetweenPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inbetweenPos</parameter>
            <parameter>M:Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: deflectDir
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deflectDir</parameter>
            <parameter>M:Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: bounceSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bounceSpeed</parameter>
            <parameter>M:Weapon.WeaponDeflect(UnityEngine.Vector2,UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub WeaponDeflect(inbetweenPos As Vector2, deflectDir As Vector2, bounceSpeed As Single)
  overload: Global.Weapon.WeaponDeflect*
  nameWithType.vb: Weapon.WeaponDeflect(Vector2, Vector2, Single)
  fullName.vb: Weapon.WeaponDeflect(UnityEngine.Vector2, UnityEngine.Vector2, Single)
  name.vb: WeaponDeflect(Vector2, Vector2, Single)
- uid: Global.Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)
  commentId: M:Global.Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)
  id: HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HitSomethingWithoutStopping(PhysicalObject, BodyChunk, Appendage)
  nameWithType: Weapon.HitSomethingWithoutStopping(PhysicalObject, BodyChunk, PhysicalObject.Appendage)
  fullName: Weapon.HitSomethingWithoutStopping(PhysicalObject, BodyChunk, PhysicalObject.Appendage)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void HitSomethingWithoutStopping(PhysicalObject obj, BodyChunk chunk, PhysicalObject.Appendage appendage)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)</parameter>
          </include>
        </markup>
    - id: appendage
      type: Global.PhysicalObject.Appendage
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>appendage</parameter>
            <parameter>M:Weapon.HitSomethingWithoutStopping(PhysicalObject,BodyChunk,PhysicalObject.Appendage)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub HitSomethingWithoutStopping(obj As PhysicalObject, chunk As BodyChunk, appendage As PhysicalObject.Appendage)
  overload: Global.Weapon.HitSomethingWithoutStopping*
- uid: Global.Weapon.HitWall
  commentId: M:Global.Weapon.HitWall
  id: HitWall
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HitWall()
  nameWithType: Weapon.HitWall()
  fullName: Weapon.HitWall()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.HitWall</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void HitWall()
    content.vb: Public Overridable Sub HitWall()
  overload: Global.Weapon.HitWall*
- uid: Global.Weapon.SetRandomSpin
  commentId: M:Global.Weapon.SetRandomSpin
  id: SetRandomSpin
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: SetRandomSpin()
  nameWithType: Weapon.SetRandomSpin()
  fullName: Weapon.SetRandomSpin()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.SetRandomSpin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SetRandomSpin()
    content.vb: Public Overridable Sub SetRandomSpin()
  overload: Global.Weapon.SetRandomSpin*
- uid: Global.Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: Weapon.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Weapon.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Weapon.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.Weapon.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Weapon.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Weapon.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Weapon.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.Weapon.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: Weapon.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Weapon.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: Weapon.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: Weapon.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Weapon.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.Weapon.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: Weapon.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: Weapon.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:Weapon.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.Weapon.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.Weapon.HitThisObject(PhysicalObject)
  commentId: M:Global.Weapon.HitThisObject(PhysicalObject)
  id: HitThisObject(PhysicalObject)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HitThisObject(PhysicalObject)
  nameWithType: Weapon.HitThisObject(PhysicalObject)
  fullName: Weapon.HitThisObject(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.HitThisObject(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HitThisObject(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Weapon.HitThisObject(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Weapon.HitThisObject(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function HitThisObject(obj As PhysicalObject) As Boolean
  overload: Global.Weapon.HitThisObject*
  implements:
  - Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
- uid: Global.Weapon.HitThisChunk(BodyChunk)
  commentId: M:Global.Weapon.HitThisChunk(BodyChunk)
  id: HitThisChunk(BodyChunk)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HitThisChunk(BodyChunk)
  nameWithType: Weapon.HitThisChunk(BodyChunk)
  fullName: Weapon.HitThisChunk(BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.HitThisChunk(BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HitThisChunk(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Weapon.HitThisChunk(BodyChunk)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Weapon.HitThisChunk(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Function HitThisChunk(chunk As BodyChunk) As Boolean
  overload: Global.Weapon.HitThisChunk*
  implements:
  - Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
- uid: Global.Weapon.setPosAndTail(UnityEngine.Vector2)
  commentId: M:Global.Weapon.setPosAndTail(UnityEngine.Vector2)
  id: setPosAndTail(UnityEngine.Vector2)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: setPosAndTail(Vector2)
  nameWithType: Weapon.setPosAndTail(Vector2)
  fullName: Weapon.setPosAndTail(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.setPosAndTail(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void setPosAndTail(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Weapon.setPosAndTail(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub setPosAndTail(pos As Vector2)
  overload: Global.Weapon.setPosAndTail*
- uid: Global.Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  commentId: M:Global.Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  id: Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: Shoot(Creature, Vector2, Vector2, float, bool)
  nameWithType: Weapon.Shoot(Creature, Vector2, Vector2, float, bool)
  fullName: Weapon.Shoot(Creature, UnityEngine.Vector2, UnityEngine.Vector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Shoot(Creature shotBy, Vector2 thrownPos, Vector2 throwDir, float force, bool eu)
    parameters:
    - id: shotBy
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shotBy</parameter>
            <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: thrownPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>thrownPos</parameter>
            <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: throwDir
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>throwDir</parameter>
            <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: force
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>force</parameter>
            <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Weapon.Shoot(Creature,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Shoot(shotBy As Creature, thrownPos As Vector2, throwDir As Vector2, force As Single, eu As Boolean)
  overload: Global.Weapon.Shoot*
  nameWithType.vb: Weapon.Shoot(Creature, Vector2, Vector2, Single, Boolean)
  fullName.vb: Weapon.Shoot(Creature, UnityEngine.Vector2, UnityEngine.Vector2, Single, Boolean)
  name.vb: Shoot(Creature, Vector2, Vector2, Single, Boolean)
- uid: Global.Weapon.DefaultCollLayer
  commentId: P:Global.Weapon.DefaultCollLayer
  id: DefaultCollLayer
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: DefaultCollLayer
  nameWithType: Weapon.DefaultCollLayer
  fullName: Weapon.DefaultCollLayer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Weapon.DefaultCollLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual int DefaultCollLayer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property DefaultCollLayer As Integer
  overload: Global.Weapon.DefaultCollLayer*
- uid: Global.Weapon.mode
  commentId: P:Global.Weapon.mode
  id: mode
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: Weapon.mode
  fullName: Weapon.mode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Weapon.mode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Weapon.Mode mode { get; set; }
    parameters: []
    return:
      type: Global.Weapon.Mode
    content.vb: Public Property mode As Weapon.Mode
  overload: Global.Weapon.mode*
- uid: Global.Weapon.HeavyWeapon
  commentId: P:Global.Weapon.HeavyWeapon
  id: HeavyWeapon
  parent: Global.Weapon
  langs:
  - csharp
  - vb
  name: HeavyWeapon
  nameWithType: Weapon.HeavyWeapon
  fullName: Weapon.HeavyWeapon
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Weapon.HeavyWeapon</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool HeavyWeapon { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property HeavyWeapon As Boolean
  overload: Global.Weapon.HeavyWeapon*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.PlayerCarryableItem
  commentId: T:Global.PlayerCarryableItem
  isExternal: true
  href: PlayerCarryableItem.html
  name: PlayerCarryableItem
  nameWithType: PlayerCarryableItem
  fullName: PlayerCarryableItem
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.SharedPhysics.IProjectileTracer
  commentId: T:Global.SharedPhysics.IProjectileTracer
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.IProjectileTracer
  nameWithType: SharedPhysics.IProjectileTracer
  fullName: SharedPhysics.IProjectileTracer
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.IProjectileTracer
    name: IProjectileTracer
    isExternal: true
    href: SharedPhysics.IProjectileTracer.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.IProjectileTracer
    name: IProjectileTracer
    isExternal: true
    href: SharedPhysics.IProjectileTracer.html
- uid: Global.PlayerCarryableItem.blink
  commentId: F:Global.PlayerCarryableItem.blink
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_blink
  name: blink
  nameWithType: PlayerCarryableItem.blink
  fullName: PlayerCarryableItem.blink
- uid: Global.PlayerCarryableItem.color
  commentId: F:Global.PlayerCarryableItem.color
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_color
  name: color
  nameWithType: PlayerCarryableItem.color
  fullName: PlayerCarryableItem.color
- uid: Global.PlayerCarryableItem.lastOutsideTerrainPos
  commentId: F:Global.PlayerCarryableItem.lastOutsideTerrainPos
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_lastOutsideTerrainPos
  name: lastOutsideTerrainPos
  nameWithType: PlayerCarryableItem.lastOutsideTerrainPos
  fullName: PlayerCarryableItem.lastOutsideTerrainPos
- uid: Global.PlayerCarryableItem.PickedUp(Creature)
  commentId: M:Global.PlayerCarryableItem.PickedUp(Creature)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  name: PickedUp(Creature)
  nameWithType: PlayerCarryableItem.PickedUp(Creature)
  fullName: PlayerCarryableItem.PickedUp(Creature)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.PickedUp(Creature)
    name: PickedUp
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.PickedUp(Creature)
    name: PickedUp
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.PlayerCarryableItem.Blink
  commentId: M:Global.PlayerCarryableItem.Blink
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  name: Blink()
  nameWithType: PlayerCarryableItem.Blink()
  fullName: PlayerCarryableItem.Blink()
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Blink
    name: Blink
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Blink
    name: Blink
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  - name: (
  - name: )
- uid: Global.PlayerCarryableItem.Forbid
  commentId: M:Global.PlayerCarryableItem.Forbid
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  name: Forbid()
  nameWithType: PlayerCarryableItem.Forbid()
  fullName: PlayerCarryableItem.Forbid()
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Forbid
    name: Forbid
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Forbid
    name: Forbid
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  - name: (
  - name: )
- uid: Global.PlayerCarryableItem.forbiddenToPlayer
  commentId: P:Global.PlayerCarryableItem.forbiddenToPlayer
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_forbiddenToPlayer
  name: forbiddenToPlayer
  nameWithType: PlayerCarryableItem.forbiddenToPlayer
  fullName: PlayerCarryableItem.forbiddenToPlayer
- uid: Global.PlayerCarryableItem.ThrowPowerFactor
  commentId: P:Global.PlayerCarryableItem.ThrowPowerFactor
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_ThrowPowerFactor
  name: ThrowPowerFactor
  nameWithType: PlayerCarryableItem.ThrowPowerFactor
  fullName: PlayerCarryableItem.ThrowPowerFactor
- uid: Global.PlayerCarryableItem.blinkColor
  commentId: P:Global.PlayerCarryableItem.blinkColor
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_blinkColor
  name: blinkColor
  nameWithType: PlayerCarryableItem.blinkColor
  fullName: PlayerCarryableItem.blinkColor
- uid: Global.PhysicalObject.bodyChunkConnections
  commentId: F:Global.PhysicalObject.bodyChunkConnections
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunkConnections
  name: bodyChunkConnections
  nameWithType: PhysicalObject.bodyChunkConnections
  fullName: PhysicalObject.bodyChunkConnections
- uid: Global.PhysicalObject.grabbedBy
  commentId: F:Global.PhysicalObject.grabbedBy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_grabbedBy
  name: grabbedBy
  nameWithType: PhysicalObject.grabbedBy
  fullName: PhysicalObject.grabbedBy
- uid: Global.PhysicalObject.collisionRange
  commentId: F:Global.PhysicalObject.collisionRange
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionRange
  name: collisionRange
  nameWithType: PhysicalObject.collisionRange
  fullName: PhysicalObject.collisionRange
- uid: Global.PhysicalObject.collisionLayer
  commentId: F:Global.PhysicalObject.collisionLayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionLayer
  name: collisionLayer
  nameWithType: PhysicalObject.collisionLayer
  fullName: PhysicalObject.collisionLayer
- uid: Global.PhysicalObject.abstractPhysicalObject
  commentId: F:Global.PhysicalObject.abstractPhysicalObject
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_abstractPhysicalObject
  name: abstractPhysicalObject
  nameWithType: PhysicalObject.abstractPhysicalObject
  fullName: PhysicalObject.abstractPhysicalObject
- uid: Global.PhysicalObject.surfaceFriction
  commentId: F:Global.PhysicalObject.surfaceFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_surfaceFriction
  name: surfaceFriction
  nameWithType: PhysicalObject.surfaceFriction
  fullName: PhysicalObject.surfaceFriction
- uid: Global.PhysicalObject.bounce
  commentId: F:Global.PhysicalObject.bounce
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bounce
  name: bounce
  nameWithType: PhysicalObject.bounce
  fullName: PhysicalObject.bounce
- uid: Global.PhysicalObject.impactTreshhold
  commentId: F:Global.PhysicalObject.impactTreshhold
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_impactTreshhold
  name: impactTreshhold
  nameWithType: PhysicalObject.impactTreshhold
  fullName: PhysicalObject.impactTreshhold
- uid: Global.PhysicalObject.waterRetardationImmunity
  commentId: F:Global.PhysicalObject.waterRetardationImmunity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterRetardationImmunity
  name: waterRetardationImmunity
  nameWithType: PhysicalObject.waterRetardationImmunity
  fullName: PhysicalObject.waterRetardationImmunity
- uid: Global.PhysicalObject.burrowFriction
  commentId: F:Global.PhysicalObject.burrowFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_burrowFriction
  name: burrowFriction
  nameWithType: PhysicalObject.burrowFriction
  fullName: PhysicalObject.burrowFriction
- uid: Global.PhysicalObject.sticksRespawned
  commentId: F:Global.PhysicalObject.sticksRespawned
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_sticksRespawned
  name: sticksRespawned
  nameWithType: PhysicalObject.sticksRespawned
  fullName: PhysicalObject.sticksRespawned
- uid: Global.PhysicalObject.appendages
  commentId: F:Global.PhysicalObject.appendages
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_appendages
  name: appendages
  nameWithType: PhysicalObject.appendages
  fullName: PhysicalObject.appendages
- uid: Global.PhysicalObject.canBeHitByWeapons
  commentId: F:Global.PhysicalObject.canBeHitByWeapons
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_canBeHitByWeapons
  name: canBeHitByWeapons
  nameWithType: PhysicalObject.canBeHitByWeapons
  fullName: PhysicalObject.canBeHitByWeapons
- uid: Global.PhysicalObject.jollyBeingPointedCounter
  commentId: F:Global.PhysicalObject.jollyBeingPointedCounter
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_jollyBeingPointedCounter
  name: jollyBeingPointedCounter
  nameWithType: PhysicalObject.jollyBeingPointedCounter
  fullName: PhysicalObject.jollyBeingPointedCounter
- uid: Global.PhysicalObject.FirstChunk
  commentId: M:Global.PhysicalObject.FirstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  name: FirstChunk()
  nameWithType: PhysicalObject.FirstChunk()
  fullName: PhysicalObject.FirstChunk()
  spec.csharp:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
- uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  name: PushOutOf(Vector2, float, int)
  nameWithType: PhysicalObject.PushOutOf(Vector2, float, int)
  fullName: PhysicalObject.PushOutOf(UnityEngine.Vector2, float, int)
  nameWithType.vb: PhysicalObject.PushOutOf(Vector2, Single, Integer)
  fullName.vb: PhysicalObject.PushOutOf(UnityEngine.Vector2, Single, Integer)
  name.vb: PushOutOf(Vector2, Single, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  name: ChangeCollisionLayer(int)
  nameWithType: PhysicalObject.ChangeCollisionLayer(int)
  fullName: PhysicalObject.ChangeCollisionLayer(int)
  nameWithType.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  fullName.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  name.vb: ChangeCollisionLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide(PhysicalObject, int, int)
  nameWithType: PhysicalObject.Collide(PhysicalObject, int, int)
  fullName: PhysicalObject.Collide(PhysicalObject, int, int)
  nameWithType.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  name: ChangeRippleLayer(int)
  nameWithType: PhysicalObject.ChangeRippleLayer(int)
  fullName: PhysicalObject.ChangeRippleLayer(int)
  nameWithType.vb: PhysicalObject.ChangeRippleLayer(Integer)
  fullName.vb: PhysicalObject.ChangeRippleLayer(Integer)
  name.vb: ChangeRippleLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.HitByWeapon(Weapon)
  commentId: M:Global.PhysicalObject.HitByWeapon(Weapon)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  name: HitByWeapon(Weapon)
  nameWithType: PhysicalObject.HitByWeapon(Weapon)
  fullName: PhysicalObject.HitByWeapon(Weapon)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
- uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  name: IsTileSolid(int, int, int)
  nameWithType: PhysicalObject.IsTileSolid(int, int, int)
  fullName: PhysicalObject.IsTileSolid(int, int, int)
  nameWithType.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  fullName.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  name.vb: IsTileSolid(Integer, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  commentId: M:Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  name: AllGraspsLetGoOfThisObject(bool)
  nameWithType: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  fullName: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  nameWithType.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  fullName.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  name.vb: AllGraspsLetGoOfThisObject(Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: PhysicalObject.TerrainImpact(int, IntVector2, float, bool)
  fullName: PhysicalObject.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  nameWithType.vb: PhysicalObject.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: PhysicalObject.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  fullName: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  nameWithType.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.InitiateGraphicsModule
  commentId: M:Global.PhysicalObject.InitiateGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  name: InitiateGraphicsModule()
  nameWithType: PhysicalObject.InitiateGraphicsModule()
  fullName: PhysicalObject.InitiateGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.RemoveGraphicsModule
  commentId: M:Global.PhysicalObject.RemoveGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  name: RemoveGraphicsModule()
  nameWithType: PhysicalObject.RemoveGraphicsModule()
  fullName: PhysicalObject.RemoveGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  commentId: M:Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  name: WeightedPush(int, int, Vector2, float)
  nameWithType: PhysicalObject.WeightedPush(int, int, Vector2, float)
  fullName: PhysicalObject.WeightedPush(int, int, UnityEngine.Vector2, float)
  nameWithType.vb: PhysicalObject.WeightedPush(Integer, Integer, Vector2, Single)
  fullName.vb: PhysicalObject.WeightedPush(Integer, Integer, UnityEngine.Vector2, Single)
  name.vb: WeightedPush(Integer, Integer, Vector2, Single)
  spec.csharp:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.RecreateSticksFromAbstract
  commentId: M:Global.PhysicalObject.RecreateSticksFromAbstract
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  name: RecreateSticksFromAbstract()
  nameWithType: PhysicalObject.RecreateSticksFromAbstract()
  fullName: PhysicalObject.RecreateSticksFromAbstract()
  spec.csharp:
  - uid: Global.PhysicalObject.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  - name: (
  - name: )
- uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  commentId: M:Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  name: HitByExplosion(float, Explosion, int)
  nameWithType: PhysicalObject.HitByExplosion(float, Explosion, int)
  fullName: PhysicalObject.HitByExplosion(float, Explosion, int)
  nameWithType.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  fullName.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  name.vb: HitByExplosion(Single, Explosion, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.SetLocalGravity(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalGravity(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  name: SetLocalGravity(float)
  nameWithType: PhysicalObject.SetLocalGravity(float)
  fullName: PhysicalObject.SetLocalGravity(float)
  nameWithType.vb: PhysicalObject.SetLocalGravity(Single)
  fullName.vb: PhysicalObject.SetLocalGravity(Single)
  name.vb: SetLocalGravity(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.GetLocalGravity
  commentId: M:Global.PhysicalObject.GetLocalGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  name: GetLocalGravity()
  nameWithType: PhysicalObject.GetLocalGravity()
  fullName: PhysicalObject.GetLocalGravity()
  spec.csharp:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
- uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalAirFriction(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  name: SetLocalAirFriction(float)
  nameWithType: PhysicalObject.SetLocalAirFriction(float)
  fullName: PhysicalObject.SetLocalAirFriction(float)
  nameWithType.vb: PhysicalObject.SetLocalAirFriction(Single)
  fullName.vb: PhysicalObject.SetLocalAirFriction(Single)
  name.vb: SetLocalAirFriction(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.WeatherInertia
  commentId: M:Global.PhysicalObject.WeatherInertia
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  name: WeatherInertia()
  nameWithType: PhysicalObject.WeatherInertia()
  fullName: PhysicalObject.WeatherInertia()
  spec.csharp:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
- uid: Global.PhysicalObject.DisposeGraphicsModule
  commentId: M:Global.PhysicalObject.DisposeGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  name: DisposeGraphicsModule()
  nameWithType: PhysicalObject.DisposeGraphicsModule()
  fullName: PhysicalObject.DisposeGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.bodyChunks
  commentId: P:Global.PhysicalObject.bodyChunks
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunks
  name: bodyChunks
  nameWithType: PhysicalObject.bodyChunks
  fullName: PhysicalObject.bodyChunks
- uid: Global.PhysicalObject.graphicsModule
  commentId: P:Global.PhysicalObject.graphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_graphicsModule
  name: graphicsModule
  nameWithType: PhysicalObject.graphicsModule
  fullName: PhysicalObject.graphicsModule
- uid: Global.PhysicalObject.firstChunk
  commentId: P:Global.PhysicalObject.firstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_firstChunk
  name: firstChunk
  nameWithType: PhysicalObject.firstChunk
  fullName: PhysicalObject.firstChunk
- uid: Global.PhysicalObject.TotalMass
  commentId: P:Global.PhysicalObject.TotalMass
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TotalMass
  name: TotalMass
  nameWithType: PhysicalObject.TotalMass
  fullName: PhysicalObject.TotalMass
- uid: Global.PhysicalObject.RandomChunk
  commentId: P:Global.PhysicalObject.RandomChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RandomChunk
  name: RandomChunk
  nameWithType: PhysicalObject.RandomChunk
  fullName: PhysicalObject.RandomChunk
- uid: Global.PhysicalObject.gravity
  commentId: P:Global.PhysicalObject.gravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_gravity
  name: gravity
  nameWithType: PhysicalObject.gravity
  fullName: PhysicalObject.gravity
- uid: Global.PhysicalObject.airFriction
  commentId: P:Global.PhysicalObject.airFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_airFriction
  name: airFriction
  nameWithType: PhysicalObject.airFriction
  fullName: PhysicalObject.airFriction
- uid: Global.PhysicalObject.waterFriction
  commentId: P:Global.PhysicalObject.waterFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterFriction
  name: waterFriction
  nameWithType: PhysicalObject.waterFriction
  fullName: PhysicalObject.waterFriction
- uid: Global.PhysicalObject.buoyancy
  commentId: P:Global.PhysicalObject.buoyancy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_buoyancy
  name: buoyancy
  nameWithType: PhysicalObject.buoyancy
  fullName: PhysicalObject.buoyancy
- uid: Global.PhysicalObject.windAffectiveness
  commentId: P:Global.PhysicalObject.windAffectiveness
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_windAffectiveness
  name: windAffectiveness
  nameWithType: PhysicalObject.windAffectiveness
  fullName: PhysicalObject.windAffectiveness
- uid: Global.PhysicalObject.VisibilityBonus
  commentId: P:Global.PhysicalObject.VisibilityBonus
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_VisibilityBonus
  name: VisibilityBonus
  nameWithType: PhysicalObject.VisibilityBonus
  fullName: PhysicalObject.VisibilityBonus
- uid: Global.PhysicalObject.GoThroughFloors
  commentId: P:Global.PhysicalObject.GoThroughFloors
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GoThroughFloors
  name: GoThroughFloors
  nameWithType: PhysicalObject.GoThroughFloors
  fullName: PhysicalObject.GoThroughFloors
- uid: Global.PhysicalObject.CollideWithTerrain
  commentId: P:Global.PhysicalObject.CollideWithTerrain
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithTerrain
  name: CollideWithTerrain
  nameWithType: PhysicalObject.CollideWithTerrain
  fullName: PhysicalObject.CollideWithTerrain
- uid: Global.PhysicalObject.CollideWithSlopes
  commentId: P:Global.PhysicalObject.CollideWithSlopes
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithSlopes
  name: CollideWithSlopes
  nameWithType: PhysicalObject.CollideWithSlopes
  fullName: PhysicalObject.CollideWithSlopes
- uid: Global.PhysicalObject.CollideWithObjects
  commentId: P:Global.PhysicalObject.CollideWithObjects
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithObjects
  name: CollideWithObjects
  nameWithType: PhysicalObject.CollideWithObjects
  fullName: PhysicalObject.CollideWithObjects
- uid: Global.PhysicalObject.Buried
  commentId: P:Global.PhysicalObject.Buried
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Buried
  name: Buried
  nameWithType: PhysicalObject.Buried
  fullName: PhysicalObject.Buried
- uid: Global.PhysicalObject.WantsToBurrow
  commentId: P:Global.PhysicalObject.WantsToBurrow
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WantsToBurrow
  name: WantsToBurrow
  nameWithType: PhysicalObject.WantsToBurrow
  fullName: PhysicalObject.WantsToBurrow
- uid: Global.PhysicalObject.Submersion
  commentId: P:Global.PhysicalObject.Submersion
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Submersion
  name: Submersion
  nameWithType: PhysicalObject.Submersion
  fullName: PhysicalObject.Submersion
- uid: Global.PhysicalObject.SandstormImmune
  commentId: P:Global.PhysicalObject.SandstormImmune
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SandstormImmune
  name: SandstormImmune
  nameWithType: PhysicalObject.SandstormImmune
  fullName: PhysicalObject.SandstormImmune
- uid: Global.PhysicalObject.EffectiveRoomGravity
  commentId: P:Global.PhysicalObject.EffectiveRoomGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_EffectiveRoomGravity
  name: EffectiveRoomGravity
  nameWithType: PhysicalObject.EffectiveRoomGravity
  fullName: PhysicalObject.EffectiveRoomGravity
- uid: Global.PhysicalObject.LickedByPlayer
  commentId: P:Global.PhysicalObject.LickedByPlayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_LickedByPlayer
  name: LickedByPlayer
  nameWithType: PhysicalObject.LickedByPlayer
  fullName: PhysicalObject.LickedByPlayer
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Weapon.Mode
  commentId: T:Global.Weapon.Mode
  isExternal: true
  href: Weapon.html
  name: Weapon.Mode
  nameWithType: Weapon.Mode
  fullName: Weapon.Mode
  spec.csharp:
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: .
  - uid: Global.Weapon.Mode
    name: Mode
    isExternal: true
    href: Weapon.Mode.html
  spec.vb:
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: .
  - uid: Global.Weapon.Mode
    name: Mode
    isExternal: true
    href: Weapon.Mode.html
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.DynamicSoundLoop
  commentId: T:Global.DynamicSoundLoop
  isExternal: true
  href: DynamicSoundLoop.html
  name: DynamicSoundLoop
  nameWithType: DynamicSoundLoop
  fullName: DynamicSoundLoop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Weapon.#ctor*
  commentId: Overload:Global.Weapon.#ctor
  isExternal: true
  href: Global.Weapon.html#Weapon__ctor_AbstractPhysicalObject_World_
  name: Weapon
  nameWithType: Weapon.Weapon
  fullName: Weapon.Weapon
  nameWithType.vb: Weapon.New
  fullName.vb: Weapon.New
  name.vb: New
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.PhysicalObject.PlaceInRoom(Room)
  commentId: M:Global.PhysicalObject.PlaceInRoom(Room)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  name: PlaceInRoom(Room)
  nameWithType: PhysicalObject.PlaceInRoom(Room)
  fullName: PhysicalObject.PlaceInRoom(Room)
  spec.csharp:
  - uid: Global.PhysicalObject.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Weapon.PlaceInRoom*
  commentId: Overload:Global.Weapon.PlaceInRoom
  isExternal: true
  href: Global.Weapon.html#Weapon_PlaceInRoom_Room_
  name: PlaceInRoom
  nameWithType: Weapon.PlaceInRoom
  fullName: Weapon.PlaceInRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.PlayerCarryableItem.NewRoom(Room)
  commentId: M:Global.PlayerCarryableItem.NewRoom(Room)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: PlayerCarryableItem.NewRoom(Room)
  fullName: PlayerCarryableItem.NewRoom(Room)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Weapon.NewRoom*
  commentId: Overload:Global.Weapon.NewRoom
  isExternal: true
  href: Global.Weapon.html#Weapon_NewRoom_Room_
  name: NewRoom
  nameWithType: Weapon.NewRoom
  fullName: Weapon.NewRoom
- uid: Global.Weapon.ChangeOverlap*
  commentId: Overload:Global.Weapon.ChangeOverlap
  isExternal: true
  href: Global.Weapon.html#Weapon_ChangeOverlap_System_Boolean_
  name: ChangeOverlap
  nameWithType: Weapon.ChangeOverlap
  fullName: Weapon.ChangeOverlap
- uid: Global.Weapon.ChangeMode*
  commentId: Overload:Global.Weapon.ChangeMode
  isExternal: true
  href: Global.Weapon.html#Weapon_ChangeMode_Weapon_Mode_
  name: ChangeMode
  nameWithType: Weapon.ChangeMode
  fullName: Weapon.ChangeMode
- uid: Global.PlayerCarryableItem.Update(System.Boolean)
  commentId: M:Global.PlayerCarryableItem.Update(System.Boolean)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  name: Update(bool)
  nameWithType: PlayerCarryableItem.Update(bool)
  fullName: PlayerCarryableItem.Update(bool)
  nameWithType.vb: PlayerCarryableItem.Update(Boolean)
  fullName.vb: PlayerCarryableItem.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Weapon.Update*
  commentId: Overload:Global.Weapon.Update
  isExternal: true
  href: Global.Weapon.html#Weapon_Update_System_Boolean_
  name: Update
  nameWithType: Weapon.Update
  fullName: Weapon.Update
- uid: Global.Weapon.Thrown*
  commentId: Overload:Global.Weapon.Thrown
  isExternal: true
  href: Global.Weapon.html#Weapon_Thrown_Creature_UnityEngine_Vector2_System_Nullable_UnityEngine_Vector2__RWCustom_IntVector2_System_Single_System_Boolean_
  name: Thrown
  nameWithType: Weapon.Thrown
  fullName: Weapon.Thrown
- uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
  commentId: M:Global.PhysicalObject.Grabbed(Creature.Grasp)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  name: Grabbed(Grasp)
  nameWithType: PhysicalObject.Grabbed(Creature.Grasp)
  fullName: PhysicalObject.Grabbed(Creature.Grasp)
  spec.csharp:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
- uid: Global.Weapon.Grabbed*
  commentId: Overload:Global.Weapon.Grabbed
  isExternal: true
  href: Global.Weapon.html#Weapon_Grabbed_Creature_Grasp_
  name: Grabbed
  nameWithType: Weapon.Grabbed
  fullName: Weapon.Grabbed
- uid: Global.Creature.Grasp
  commentId: T:Global.Creature.Grasp
  isExternal: true
  href: Creature.html
  name: Creature.Grasp
  nameWithType: Creature.Grasp
  fullName: Creature.Grasp
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
- uid: Global.Weapon.HitSomething*
  commentId: Overload:Global.Weapon.HitSomething
  isExternal: true
  href: Global.Weapon.html#Weapon_HitSomething_SharedPhysics_CollisionResult_System_Boolean_
  name: HitSomething
  nameWithType: Weapon.HitSomething
  fullName: Weapon.HitSomething
- uid: Global.SharedPhysics.CollisionResult
  commentId: T:Global.SharedPhysics.CollisionResult
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.CollisionResult
  nameWithType: SharedPhysics.CollisionResult
  fullName: SharedPhysics.CollisionResult
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.CollisionResult
    name: CollisionResult
    isExternal: true
    href: SharedPhysics.CollisionResult.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.CollisionResult
    name: CollisionResult
    isExternal: true
    href: SharedPhysics.CollisionResult.html
- uid: Global.Weapon.WeaponDeflect*
  commentId: Overload:Global.Weapon.WeaponDeflect
  isExternal: true
  href: Global.Weapon.html#Weapon_WeaponDeflect_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_
  name: WeaponDeflect
  nameWithType: Weapon.WeaponDeflect
  fullName: Weapon.WeaponDeflect
- uid: Global.Weapon.HitSomethingWithoutStopping*
  commentId: Overload:Global.Weapon.HitSomethingWithoutStopping
  isExternal: true
  href: Global.Weapon.html#Weapon_HitSomethingWithoutStopping_PhysicalObject_BodyChunk_PhysicalObject_Appendage_
  name: HitSomethingWithoutStopping
  nameWithType: Weapon.HitSomethingWithoutStopping
  fullName: Weapon.HitSomethingWithoutStopping
- uid: Global.PhysicalObject.Appendage
  commentId: T:Global.PhysicalObject.Appendage
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage
  nameWithType: PhysicalObject.Appendage
  fullName: PhysicalObject.Appendage
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
- uid: Global.Weapon.HitWall*
  commentId: Overload:Global.Weapon.HitWall
  isExternal: true
  href: Global.Weapon.html#Weapon_HitWall
  name: HitWall
  nameWithType: Weapon.HitWall
  fullName: Weapon.HitWall
- uid: Global.Weapon.SetRandomSpin*
  commentId: Overload:Global.Weapon.SetRandomSpin
  isExternal: true
  href: Global.Weapon.html#Weapon_SetRandomSpin
  name: SetRandomSpin
  nameWithType: Weapon.SetRandomSpin
  fullName: Weapon.SetRandomSpin
- uid: Global.Weapon.InitiateSprites*
  commentId: Overload:Global.Weapon.InitiateSprites
  isExternal: true
  href: Global.Weapon.html#Weapon_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: Weapon.InitiateSprites
  fullName: Weapon.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Weapon.DrawSprites*
  commentId: Overload:Global.Weapon.DrawSprites
  isExternal: true
  href: Global.Weapon.html#Weapon_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: Weapon.DrawSprites
  fullName: Weapon.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Weapon.ApplyPalette*
  commentId: Overload:Global.Weapon.ApplyPalette
  isExternal: true
  href: Global.Weapon.html#Weapon_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: Weapon.ApplyPalette
  fullName: Weapon.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.Weapon.AddToContainer*
  commentId: Overload:Global.Weapon.AddToContainer
  isExternal: true
  href: Global.Weapon.html#Weapon_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: Weapon.AddToContainer
  fullName: Weapon.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.Weapon.HitThisObject*
  commentId: Overload:Global.Weapon.HitThisObject
  isExternal: true
  href: Global.Weapon.html#Weapon_HitThisObject_PhysicalObject_
  name: HitThisObject
  nameWithType: Weapon.HitThisObject
  fullName: Weapon.HitThisObject
- uid: Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  commentId: M:Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  parent: Global.SharedPhysics.IProjectileTracer
  isExternal: true
  href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisObject_PhysicalObject_
  name: HitThisObject(PhysicalObject)
  nameWithType: SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  fullName: SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  spec.csharp:
  - uid: Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
    name: HitThisObject
    isExternal: true
    href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisObject_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
  spec.vb:
  - uid: Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
    name: HitThisObject
    isExternal: true
    href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisObject_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
- uid: Global.Weapon.HitThisChunk*
  commentId: Overload:Global.Weapon.HitThisChunk
  isExternal: true
  href: Global.Weapon.html#Weapon_HitThisChunk_BodyChunk_
  name: HitThisChunk
  nameWithType: Weapon.HitThisChunk
  fullName: Weapon.HitThisChunk
- uid: Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  commentId: M:Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  parent: Global.SharedPhysics.IProjectileTracer
  isExternal: true
  href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisChunk_BodyChunk_
  name: HitThisChunk(BodyChunk)
  nameWithType: SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  fullName: SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  spec.csharp:
  - uid: Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
    name: HitThisChunk
    isExternal: true
    href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisChunk_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
  spec.vb:
  - uid: Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
    name: HitThisChunk
    isExternal: true
    href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisChunk_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
- uid: Global.Weapon.setPosAndTail*
  commentId: Overload:Global.Weapon.setPosAndTail
  isExternal: true
  href: Global.Weapon.html#Weapon_setPosAndTail_UnityEngine_Vector2_
  name: setPosAndTail
  nameWithType: Weapon.setPosAndTail
  fullName: Weapon.setPosAndTail
- uid: Global.Weapon.Shoot*
  commentId: Overload:Global.Weapon.Shoot
  isExternal: true
  href: Global.Weapon.html#Weapon_Shoot_Creature_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_System_Boolean_
  name: Shoot
  nameWithType: Weapon.Shoot
  fullName: Weapon.Shoot
- uid: Global.Weapon.DefaultCollLayer*
  commentId: Overload:Global.Weapon.DefaultCollLayer
  isExternal: true
  href: Global.Weapon.html#Weapon_DefaultCollLayer
  name: DefaultCollLayer
  nameWithType: Weapon.DefaultCollLayer
  fullName: Weapon.DefaultCollLayer
- uid: Global.Weapon.mode*
  commentId: Overload:Global.Weapon.mode
  isExternal: true
  href: Global.Weapon.html#Weapon_mode
  name: mode
  nameWithType: Weapon.mode
  fullName: Weapon.mode
- uid: Global.Weapon.HeavyWeapon*
  commentId: Overload:Global.Weapon.HeavyWeapon
  isExternal: true
  href: Global.Weapon.html#Weapon_HeavyWeapon
  name: HeavyWeapon
  nameWithType: Weapon.HeavyWeapon
  fullName: Weapon.HeavyWeapon
