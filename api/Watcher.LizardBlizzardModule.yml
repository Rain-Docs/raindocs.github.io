### YamlMime:ManagedReference
items:
- uid: Watcher.LizardBlizzardModule
  commentId: T:Watcher.LizardBlizzardModule
  id: LizardBlizzardModule
  parent: Watcher
  children:
  - Watcher.LizardBlizzardModule.#ctor(Lizard)
  - Watcher.LizardBlizzardModule.HasBeam
  - Watcher.LizardBlizzardModule.NewRoom(Room)
  - Watcher.LizardBlizzardModule.RayTraceBeamHitPos
  - Watcher.LizardBlizzardModule.Update
  - Watcher.LizardBlizzardModule.beamHitSound
  - Watcher.LizardBlizzardModule.beamSound
  - Watcher.LizardBlizzardModule.beamTimer
  - Watcher.LizardBlizzardModule.beamUpBobTime
  - Watcher.LizardBlizzardModule.breathSmoke
  - Watcher.LizardBlizzardModule.lizard
  - Watcher.LizardBlizzardModule.openShield
  - Watcher.LizardBlizzardModule.shieldSmoke
  - Watcher.LizardBlizzardModule.shieldSpinSpeed
  - Watcher.LizardBlizzardModule.targetInViewTime
  langs:
  - csharp
  - vb
  name: LizardBlizzardModule
  nameWithType: LizardBlizzardModule
  fullName: Watcher.LizardBlizzardModule
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.LizardBlizzardModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class LizardBlizzardModule
    content.vb: Public Class LizardBlizzardModule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.LizardBlizzardModule.lizard
  commentId: F:Watcher.LizardBlizzardModule.lizard
  id: lizard
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: lizard
  nameWithType: LizardBlizzardModule.lizard
  fullName: Watcher.LizardBlizzardModule.lizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.lizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lizard lizard
    return:
      type: Global.Lizard
    content.vb: Public lizard As Lizard
- uid: Watcher.LizardBlizzardModule.breathSmoke
  commentId: F:Watcher.LizardBlizzardModule.breathSmoke
  id: breathSmoke
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: breathSmoke
  nameWithType: LizardBlizzardModule.breathSmoke
  fullName: Watcher.LizardBlizzardModule.breathSmoke
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.breathSmoke</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BlizzardBeamSmoke breathSmoke
    return:
      type: Watcher.BlizzardBeamSmoke
    content.vb: Public breathSmoke As BlizzardBeamSmoke
- uid: Watcher.LizardBlizzardModule.shieldSmoke
  commentId: F:Watcher.LizardBlizzardModule.shieldSmoke
  id: shieldSmoke
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: shieldSmoke
  nameWithType: LizardBlizzardModule.shieldSmoke
  fullName: Watcher.LizardBlizzardModule.shieldSmoke
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.shieldSmoke</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BlizzardShieldSmoke shieldSmoke
    return:
      type: Watcher.BlizzardShieldSmoke
    content.vb: Public shieldSmoke As BlizzardShieldSmoke
- uid: Watcher.LizardBlizzardModule.shieldSpinSpeed
  commentId: F:Watcher.LizardBlizzardModule.shieldSpinSpeed
  id: shieldSpinSpeed
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: shieldSpinSpeed
  nameWithType: LizardBlizzardModule.shieldSpinSpeed
  fullName: Watcher.LizardBlizzardModule.shieldSpinSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.shieldSpinSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float shieldSpinSpeed
    return:
      type: System.Single
    content.vb: Public shieldSpinSpeed As Single
- uid: Watcher.LizardBlizzardModule.openShield
  commentId: F:Watcher.LizardBlizzardModule.openShield
  id: openShield
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: openShield
  nameWithType: LizardBlizzardModule.openShield
  fullName: Watcher.LizardBlizzardModule.openShield
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.openShield</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool openShield
    return:
      type: System.Boolean
    content.vb: Public openShield As Boolean
- uid: Watcher.LizardBlizzardModule.beamTimer
  commentId: F:Watcher.LizardBlizzardModule.beamTimer
  id: beamTimer
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: beamTimer
  nameWithType: LizardBlizzardModule.beamTimer
  fullName: Watcher.LizardBlizzardModule.beamTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.beamTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int beamTimer
    return:
      type: System.Int32
    content.vb: Public beamTimer As Integer
- uid: Watcher.LizardBlizzardModule.beamUpBobTime
  commentId: F:Watcher.LizardBlizzardModule.beamUpBobTime
  id: beamUpBobTime
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: beamUpBobTime
  nameWithType: LizardBlizzardModule.beamUpBobTime
  fullName: Watcher.LizardBlizzardModule.beamUpBobTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.beamUpBobTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int beamUpBobTime
    return:
      type: System.Int32
    content.vb: Public beamUpBobTime As Integer
- uid: Watcher.LizardBlizzardModule.targetInViewTime
  commentId: F:Watcher.LizardBlizzardModule.targetInViewTime
  id: targetInViewTime
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: targetInViewTime
  nameWithType: LizardBlizzardModule.targetInViewTime
  fullName: Watcher.LizardBlizzardModule.targetInViewTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.targetInViewTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int targetInViewTime
    return:
      type: System.Int32
    content.vb: Public targetInViewTime As Integer
- uid: Watcher.LizardBlizzardModule.beamSound
  commentId: F:Watcher.LizardBlizzardModule.beamSound
  id: beamSound
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: beamSound
  nameWithType: LizardBlizzardModule.beamSound
  fullName: Watcher.LizardBlizzardModule.beamSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.beamSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public StaticSoundLoop beamSound
    return:
      type: Global.StaticSoundLoop
    content.vb: Public beamSound As StaticSoundLoop
- uid: Watcher.LizardBlizzardModule.beamHitSound
  commentId: F:Watcher.LizardBlizzardModule.beamHitSound
  id: beamHitSound
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: beamHitSound
  nameWithType: LizardBlizzardModule.beamHitSound
  fullName: Watcher.LizardBlizzardModule.beamHitSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardBlizzardModule.beamHitSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public StaticSoundLoop beamHitSound
    return:
      type: Global.StaticSoundLoop
    content.vb: Public beamHitSound As StaticSoundLoop
- uid: Watcher.LizardBlizzardModule.#ctor(Lizard)
  commentId: M:Watcher.LizardBlizzardModule.#ctor(Lizard)
  id: '#ctor(Lizard)'
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: LizardBlizzardModule(Lizard)
  nameWithType: LizardBlizzardModule.LizardBlizzardModule(Lizard)
  fullName: Watcher.LizardBlizzardModule.LizardBlizzardModule(Lizard)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.LizardBlizzardModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardBlizzardModule(Lizard lizard)
    parameters:
    - id: lizard
      type: Global.Lizard
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizard</parameter>
            <parameter>M:Watcher.LizardBlizzardModule.#ctor(Lizard)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(lizard As Lizard)
  overload: Watcher.LizardBlizzardModule.#ctor*
  nameWithType.vb: LizardBlizzardModule.New(Lizard)
  fullName.vb: Watcher.LizardBlizzardModule.New(Lizard)
  name.vb: New(Lizard)
- uid: Watcher.LizardBlizzardModule.NewRoom(Room)
  commentId: M:Watcher.LizardBlizzardModule.NewRoom(Room)
  id: NewRoom(Room)
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: LizardBlizzardModule.NewRoom(Room)
  fullName: Watcher.LizardBlizzardModule.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardBlizzardModule.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Watcher.LizardBlizzardModule.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewRoom(newRoom As Room)
  overload: Watcher.LizardBlizzardModule.NewRoom*
- uid: Watcher.LizardBlizzardModule.Update
  commentId: M:Watcher.LizardBlizzardModule.Update
  id: Update
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardBlizzardModule.Update()
  fullName: Watcher.LizardBlizzardModule.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardBlizzardModule.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.LizardBlizzardModule.Update*
- uid: Watcher.LizardBlizzardModule.RayTraceBeamHitPos
  commentId: M:Watcher.LizardBlizzardModule.RayTraceBeamHitPos
  id: RayTraceBeamHitPos
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: RayTraceBeamHitPos()
  nameWithType: LizardBlizzardModule.RayTraceBeamHitPos()
  fullName: Watcher.LizardBlizzardModule.RayTraceBeamHitPos()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardBlizzardModule.RayTraceBeamHitPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RayTraceBeamHitPos()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.LizardBlizzardModule.RayTraceBeamHitPos</parameter>
          </include>
        </markup>
    content.vb: Public Function RayTraceBeamHitPos() As Vector2
  overload: Watcher.LizardBlizzardModule.RayTraceBeamHitPos*
- uid: Watcher.LizardBlizzardModule.HasBeam
  commentId: P:Watcher.LizardBlizzardModule.HasBeam
  id: HasBeam
  parent: Watcher.LizardBlizzardModule
  langs:
  - csharp
  - vb
  name: HasBeam
  nameWithType: LizardBlizzardModule.HasBeam
  fullName: Watcher.LizardBlizzardModule.HasBeam
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardBlizzardModule.HasBeam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HasBeam { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasBeam As Boolean
  overload: Watcher.LizardBlizzardModule.HasBeam*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: Watcher.BlizzardBeamSmoke
  commentId: T:Watcher.BlizzardBeamSmoke
  parent: Watcher
  isExternal: true
  href: Watcher.BlizzardBeamSmoke.html
  name: BlizzardBeamSmoke
  nameWithType: BlizzardBeamSmoke
  fullName: Watcher.BlizzardBeamSmoke
- uid: Watcher.BlizzardShieldSmoke
  commentId: T:Watcher.BlizzardShieldSmoke
  parent: Watcher
  isExternal: true
  href: Watcher.BlizzardShieldSmoke.html
  name: BlizzardShieldSmoke
  nameWithType: BlizzardShieldSmoke
  fullName: Watcher.BlizzardShieldSmoke
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.StaticSoundLoop
  commentId: T:Global.StaticSoundLoop
  isExternal: true
  href: StaticSoundLoop.html
  name: StaticSoundLoop
  nameWithType: StaticSoundLoop
  fullName: StaticSoundLoop
- uid: Watcher.LizardBlizzardModule.#ctor*
  commentId: Overload:Watcher.LizardBlizzardModule.#ctor
  isExternal: true
  href: Watcher.LizardBlizzardModule.html#Watcher_LizardBlizzardModule__ctor_Lizard_
  name: LizardBlizzardModule
  nameWithType: LizardBlizzardModule.LizardBlizzardModule
  fullName: Watcher.LizardBlizzardModule.LizardBlizzardModule
  nameWithType.vb: LizardBlizzardModule.New
  fullName.vb: Watcher.LizardBlizzardModule.New
  name.vb: New
- uid: Watcher.LizardBlizzardModule.NewRoom*
  commentId: Overload:Watcher.LizardBlizzardModule.NewRoom
  isExternal: true
  href: Watcher.LizardBlizzardModule.html#Watcher_LizardBlizzardModule_NewRoom_Room_
  name: NewRoom
  nameWithType: LizardBlizzardModule.NewRoom
  fullName: Watcher.LizardBlizzardModule.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Watcher.LizardBlizzardModule.Update*
  commentId: Overload:Watcher.LizardBlizzardModule.Update
  isExternal: true
  href: Watcher.LizardBlizzardModule.html#Watcher_LizardBlizzardModule_Update
  name: Update
  nameWithType: LizardBlizzardModule.Update
  fullName: Watcher.LizardBlizzardModule.Update
- uid: Watcher.LizardBlizzardModule.RayTraceBeamHitPos*
  commentId: Overload:Watcher.LizardBlizzardModule.RayTraceBeamHitPos
  isExternal: true
  href: Watcher.LizardBlizzardModule.html#Watcher_LizardBlizzardModule_RayTraceBeamHitPos
  name: RayTraceBeamHitPos
  nameWithType: LizardBlizzardModule.RayTraceBeamHitPos
  fullName: Watcher.LizardBlizzardModule.RayTraceBeamHitPos
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Watcher.LizardBlizzardModule.HasBeam*
  commentId: Overload:Watcher.LizardBlizzardModule.HasBeam
  isExternal: true
  href: Watcher.LizardBlizzardModule.html#Watcher_LizardBlizzardModule_HasBeam
  name: HasBeam
  nameWithType: LizardBlizzardModule.HasBeam
  fullName: Watcher.LizardBlizzardModule.HasBeam
