### YamlMime:ManagedReference
items:
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  id: PhysicalObject.Appendage.Pos
  parent: Global
  children:
  - Global.PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)
  - Global.PhysicalObject.Appendage.Pos.appendage
  - Global.PhysicalObject.Appendage.Pos.distanceToNext
  - Global.PhysicalObject.Appendage.Pos.prevSegment
  langs:
  - csharp
  - vb
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PhysicalObject.Appendage.Pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PhysicalObject.Appendage.Pos
    content.vb: Public Class PhysicalObject.Appendage.Pos
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PhysicalObject.Appendage.Pos.appendage
  commentId: F:Global.PhysicalObject.Appendage.Pos.appendage
  id: appendage
  parent: Global.PhysicalObject.Appendage.Pos
  langs:
  - csharp
  - vb
  name: appendage
  nameWithType: PhysicalObject.Appendage.Pos.appendage
  fullName: PhysicalObject.Appendage.Pos.appendage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.Appendage.Pos.appendage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject.Appendage appendage
    return:
      type: Global.PhysicalObject.Appendage
    content.vb: Public appendage As PhysicalObject.Appendage
- uid: Global.PhysicalObject.Appendage.Pos.prevSegment
  commentId: F:Global.PhysicalObject.Appendage.Pos.prevSegment
  id: prevSegment
  parent: Global.PhysicalObject.Appendage.Pos
  langs:
  - csharp
  - vb
  name: prevSegment
  nameWithType: PhysicalObject.Appendage.Pos.prevSegment
  fullName: PhysicalObject.Appendage.Pos.prevSegment
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.Appendage.Pos.prevSegment</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int prevSegment
    return:
      type: System.Int32
    content.vb: Public prevSegment As Integer
- uid: Global.PhysicalObject.Appendage.Pos.distanceToNext
  commentId: F:Global.PhysicalObject.Appendage.Pos.distanceToNext
  id: distanceToNext
  parent: Global.PhysicalObject.Appendage.Pos
  langs:
  - csharp
  - vb
  name: distanceToNext
  nameWithType: PhysicalObject.Appendage.Pos.distanceToNext
  fullName: PhysicalObject.Appendage.Pos.distanceToNext
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.Appendage.Pos.distanceToNext</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float distanceToNext
    return:
      type: System.Single
    content.vb: Public distanceToNext As Single
- uid: Global.PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)
  commentId: M:Global.PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)
  id: '#ctor(PhysicalObject.Appendage,System.Int32,System.Single)'
  parent: Global.PhysicalObject.Appendage.Pos
  langs:
  - csharp
  - vb
  name: Pos(Appendage, int, float)
  nameWithType: PhysicalObject.Appendage.Pos.Pos(PhysicalObject.Appendage, int, float)
  fullName: PhysicalObject.Appendage.Pos.Pos(PhysicalObject.Appendage, int, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PhysicalObject.Appendage.Pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Pos(PhysicalObject.Appendage appendage, int prevSegment, float distanceToNext)
    parameters:
    - id: appendage
      type: Global.PhysicalObject.Appendage
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>appendage</parameter>
            <parameter>M:PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: prevSegment
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>prevSegment</parameter>
            <parameter>M:PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: distanceToNext
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>distanceToNext</parameter>
            <parameter>M:PhysicalObject.Appendage.Pos.#ctor(PhysicalObject.Appendage,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(appendage As PhysicalObject.Appendage, prevSegment As Integer, distanceToNext As Single)
  overload: Global.PhysicalObject.Appendage.Pos.#ctor*
  nameWithType.vb: PhysicalObject.Appendage.Pos.New(PhysicalObject.Appendage, Integer, Single)
  fullName.vb: PhysicalObject.Appendage.Pos.New(PhysicalObject.Appendage, Integer, Single)
  name.vb: New(Appendage, Integer, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PhysicalObject.Appendage
  commentId: T:Global.PhysicalObject.Appendage
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage
  nameWithType: PhysicalObject.Appendage
  fullName: PhysicalObject.Appendage
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PhysicalObject.Appendage.Pos.#ctor*
  commentId: Overload:Global.PhysicalObject.Appendage.Pos.#ctor
  isExternal: true
  href: Global.PhysicalObject.Appendage.Pos.html#PhysicalObject_Appendage_Pos__ctor_PhysicalObject_Appendage_System_Int32_System_Single_
  name: Pos
  nameWithType: PhysicalObject.Appendage.Pos.Pos
  fullName: PhysicalObject.Appendage.Pos.Pos
  nameWithType.vb: PhysicalObject.Appendage.Pos.New
  fullName.vb: PhysicalObject.Appendage.Pos.New
  name.vb: New
