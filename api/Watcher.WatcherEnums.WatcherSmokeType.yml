### YamlMime:ManagedReference
items:
- uid: Watcher.WatcherEnums.WatcherSmokeType
  commentId: T:Watcher.WatcherEnums.WatcherSmokeType
  id: WatcherEnums.WatcherSmokeType
  parent: Watcher
  children:
  - Watcher.WatcherEnums.WatcherSmokeType.#ctor
  - Watcher.WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke
  - Watcher.WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke
  - Watcher.WatcherEnums.WatcherSmokeType.RegisterValues
  - Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues
  langs:
  - csharp
  - vb
  name: WatcherEnums.WatcherSmokeType
  nameWithType: WatcherEnums.WatcherSmokeType
  fullName: Watcher.WatcherEnums.WatcherSmokeType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.WatcherEnums.WatcherSmokeType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class WatcherEnums.WatcherSmokeType
    content.vb: Public Class WatcherEnums.WatcherSmokeType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke
  commentId: F:Watcher.WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke
  id: BlizzardBeamSmoke
  parent: Watcher.WatcherEnums.WatcherSmokeType
  langs:
  - csharp
  - vb
  name: BlizzardBeamSmoke
  nameWithType: WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke
  fullName: Watcher.WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.WatcherSmokeType.BlizzardBeamSmoke</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SmokeSystem.SmokeType BlizzardBeamSmoke
    return:
      type: Smoke.SmokeSystem.SmokeType
    content.vb: Public Shared BlizzardBeamSmoke As SmokeSystem.SmokeType
- uid: Watcher.WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke
  commentId: F:Watcher.WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke
  id: BlizzardShieldSmoke
  parent: Watcher.WatcherEnums.WatcherSmokeType
  langs:
  - csharp
  - vb
  name: BlizzardShieldSmoke
  nameWithType: WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke
  fullName: Watcher.WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.WatcherSmokeType.BlizzardShieldSmoke</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SmokeSystem.SmokeType BlizzardShieldSmoke
    return:
      type: Smoke.SmokeSystem.SmokeType
    content.vb: Public Shared BlizzardShieldSmoke As SmokeSystem.SmokeType
- uid: Watcher.WatcherEnums.WatcherSmokeType.RegisterValues
  commentId: M:Watcher.WatcherEnums.WatcherSmokeType.RegisterValues
  id: RegisterValues
  parent: Watcher.WatcherEnums.WatcherSmokeType
  langs:
  - csharp
  - vb
  name: RegisterValues()
  nameWithType: WatcherEnums.WatcherSmokeType.RegisterValues()
  fullName: Watcher.WatcherEnums.WatcherSmokeType.RegisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.WatcherSmokeType.RegisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void RegisterValues()
    content.vb: Public Shared Sub RegisterValues()
  overload: Watcher.WatcherEnums.WatcherSmokeType.RegisterValues*
- uid: Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues
  commentId: M:Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues
  id: UnregisterValues
  parent: Watcher.WatcherEnums.WatcherSmokeType
  langs:
  - csharp
  - vb
  name: UnregisterValues()
  nameWithType: WatcherEnums.WatcherSmokeType.UnregisterValues()
  fullName: Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void UnregisterValues()
    content.vb: Public Shared Sub UnregisterValues()
  overload: Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues*
- uid: Watcher.WatcherEnums.WatcherSmokeType.#ctor
  commentId: M:Watcher.WatcherEnums.WatcherSmokeType.#ctor
  id: '#ctor'
  parent: Watcher.WatcherEnums.WatcherSmokeType
  langs:
  - csharp
  - vb
  name: WatcherSmokeType()
  nameWithType: WatcherEnums.WatcherSmokeType.WatcherSmokeType()
  fullName: Watcher.WatcherEnums.WatcherSmokeType.WatcherSmokeType()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.WatcherEnums.WatcherSmokeType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WatcherSmokeType()
    content.vb: Public Sub New()
  overload: Watcher.WatcherEnums.WatcherSmokeType.#ctor*
  nameWithType.vb: WatcherEnums.WatcherSmokeType.New()
  fullName.vb: Watcher.WatcherEnums.WatcherSmokeType.New()
  name.vb: New()
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Smoke.SmokeSystem.SmokeType
  commentId: T:Smoke.SmokeSystem.SmokeType
  parent: Smoke
  isExternal: true
  href: Smoke.SmokeSystem.html
  name: SmokeSystem.SmokeType
  nameWithType: SmokeSystem.SmokeType
  fullName: Smoke.SmokeSystem.SmokeType
  spec.csharp:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeType
    name: SmokeType
    isExternal: true
    href: Smoke.SmokeSystem.SmokeType.html
  spec.vb:
  - uid: Smoke.SmokeSystem
    name: SmokeSystem
    isExternal: true
    href: Smoke.SmokeSystem.html
  - name: .
  - uid: Smoke.SmokeSystem.SmokeType
    name: SmokeType
    isExternal: true
    href: Smoke.SmokeSystem.SmokeType.html
- uid: Smoke
  commentId: N:Smoke
  isExternal: true
  href: Smoke.html
  name: Smoke
  nameWithType: Smoke
  fullName: Smoke
- uid: Watcher.WatcherEnums.WatcherSmokeType.RegisterValues*
  commentId: Overload:Watcher.WatcherEnums.WatcherSmokeType.RegisterValues
  isExternal: true
  href: Watcher.WatcherEnums.WatcherSmokeType.html#Watcher_WatcherEnums_WatcherSmokeType_RegisterValues
  name: RegisterValues
  nameWithType: WatcherEnums.WatcherSmokeType.RegisterValues
  fullName: Watcher.WatcherEnums.WatcherSmokeType.RegisterValues
- uid: Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues*
  commentId: Overload:Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues
  isExternal: true
  href: Watcher.WatcherEnums.WatcherSmokeType.html#Watcher_WatcherEnums_WatcherSmokeType_UnregisterValues
  name: UnregisterValues
  nameWithType: WatcherEnums.WatcherSmokeType.UnregisterValues
  fullName: Watcher.WatcherEnums.WatcherSmokeType.UnregisterValues
- uid: Watcher.WatcherEnums.WatcherSmokeType.#ctor*
  commentId: Overload:Watcher.WatcherEnums.WatcherSmokeType.#ctor
  isExternal: true
  href: Watcher.WatcherEnums.WatcherSmokeType.html#Watcher_WatcherEnums_WatcherSmokeType__ctor
  name: WatcherSmokeType
  nameWithType: WatcherEnums.WatcherSmokeType.WatcherSmokeType
  fullName: Watcher.WatcherEnums.WatcherSmokeType.WatcherSmokeType
  nameWithType.vb: WatcherEnums.WatcherSmokeType.New
  fullName.vb: Watcher.WatcherEnums.WatcherSmokeType.New
  name.vb: New
