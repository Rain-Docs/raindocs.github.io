### YamlMime:ManagedReference
items:
- uid: Global.OverWorld
  commentId: T:Global.OverWorld
  id: OverWorld
  parent: Global
  children:
  - Global.OverWorld.#ctor(RainWorldGame)
  - Global.OverWorld.FIRSTROOM
  - Global.OverWorld.GateRequestsSwitchInitiation(RegionGate)
  - Global.OverWorld.GetRegion(AbstractRoom)
  - Global.OverWorld.GetRegion(System.String)
  - Global.OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)
  - Global.OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)
  - Global.OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)
  - Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)
  - Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)
  - Global.OverWorld.PlayerCharacterNumber
  - Global.OverWorld.PlayerTimelinePosition
  - Global.OverWorld.SwitchWorlds(AbstractRoom)
  - Global.OverWorld.Update
  - Global.OverWorld.WarpUpdate
  - Global.OverWorld.activeWorld
  - Global.OverWorld.currentSpecialWarp
  - Global.OverWorld.game
  - Global.OverWorld.readyForWarp
  - Global.OverWorld.regions
  - Global.OverWorld.specialWarpCallback
  - Global.OverWorld.warpWorldLoader
  langs:
  - csharp
  - vb
  name: OverWorld
  nameWithType: OverWorld
  fullName: OverWorld
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:OverWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class OverWorld
    content.vb: Public Class OverWorld
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.OverWorld.FIRSTROOM
  commentId: F:Global.OverWorld.FIRSTROOM
  id: FIRSTROOM
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: FIRSTROOM
  nameWithType: OverWorld.FIRSTROOM
  fullName: OverWorld.FIRSTROOM
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.FIRSTROOM</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string FIRSTROOM
    return:
      type: System.String
    content.vb: Public FIRSTROOM As String
- uid: Global.OverWorld.game
  commentId: F:Global.OverWorld.game
  id: game
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: game
  nameWithType: OverWorld.game
  fullName: OverWorld.game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainWorldGame game
    return:
      type: Global.RainWorldGame
    content.vb: Public game As RainWorldGame
- uid: Global.OverWorld.activeWorld
  commentId: F:Global.OverWorld.activeWorld
  id: activeWorld
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: activeWorld
  nameWithType: OverWorld.activeWorld
  fullName: OverWorld.activeWorld
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.activeWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World activeWorld
    return:
      type: Global.World
    content.vb: Public activeWorld As World
- uid: Global.OverWorld.warpWorldLoader
  commentId: F:Global.OverWorld.warpWorldLoader
  id: warpWorldLoader
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: warpWorldLoader
  nameWithType: OverWorld.warpWorldLoader
  fullName: OverWorld.warpWorldLoader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.warpWorldLoader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldLoader warpWorldLoader
    return:
      type: Global.WorldLoader
    content.vb: Public warpWorldLoader As WorldLoader
- uid: Global.OverWorld.readyForWarp
  commentId: F:Global.OverWorld.readyForWarp
  id: readyForWarp
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: readyForWarp
  nameWithType: OverWorld.readyForWarp
  fullName: OverWorld.readyForWarp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.readyForWarp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyForWarp
    return:
      type: System.Boolean
    content.vb: Public readyForWarp As Boolean
- uid: Global.OverWorld.regions
  commentId: F:Global.OverWorld.regions
  id: regions
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: regions
  nameWithType: OverWorld.regions
  fullName: OverWorld.regions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.regions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region[] regions
    return:
      type: Global.Region[]
    content.vb: Public regions As Region()
- uid: Global.OverWorld.currentSpecialWarp
  commentId: F:Global.OverWorld.currentSpecialWarp
  id: currentSpecialWarp
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: currentSpecialWarp
  nameWithType: OverWorld.currentSpecialWarp
  fullName: OverWorld.currentSpecialWarp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.currentSpecialWarp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public OverWorld.SpecialWarpType currentSpecialWarp
    return:
      type: Global.OverWorld.SpecialWarpType
    content.vb: Public currentSpecialWarp As OverWorld.SpecialWarpType
- uid: Global.OverWorld.specialWarpCallback
  commentId: F:Global.OverWorld.specialWarpCallback
  id: specialWarpCallback
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: specialWarpCallback
  nameWithType: OverWorld.specialWarpCallback
  fullName: OverWorld.specialWarpCallback
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OverWorld.specialWarpCallback</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ISpecialWarp specialWarpCallback
    return:
      type: MoreSlugcats.ISpecialWarp
    content.vb: Public specialWarpCallback As ISpecialWarp
- uid: Global.OverWorld.WarpUpdate
  commentId: M:Global.OverWorld.WarpUpdate
  id: WarpUpdate
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: WarpUpdate()
  nameWithType: OverWorld.WarpUpdate()
  fullName: OverWorld.WarpUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.WarpUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WarpUpdate()
    content.vb: Public Sub WarpUpdate()
  overload: Global.OverWorld.WarpUpdate*
- uid: Global.OverWorld.#ctor(RainWorldGame)
  commentId: M:Global.OverWorld.#ctor(RainWorldGame)
  id: '#ctor(RainWorldGame)'
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: OverWorld(RainWorldGame)
  nameWithType: OverWorld.OverWorld(RainWorldGame)
  fullName: OverWorld.OverWorld(RainWorldGame)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>OverWorld</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public OverWorld(RainWorldGame game)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:OverWorld.#ctor(RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(game As RainWorldGame)
  overload: Global.OverWorld.#ctor*
  nameWithType.vb: OverWorld.New(RainWorldGame)
  fullName.vb: OverWorld.New(RainWorldGame)
  name.vb: New(RainWorldGame)
- uid: Global.OverWorld.Update
  commentId: M:Global.OverWorld.Update
  id: Update
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: OverWorld.Update()
  fullName: OverWorld.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.OverWorld.Update*
- uid: Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)
  commentId: M:Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)
  id: LoadWorld(System.String,SlugcatStats.Name,System.Boolean)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: LoadWorld(string, Name, bool)
  nameWithType: OverWorld.LoadWorld(string, SlugcatStats.Name, bool)
  fullName: OverWorld.LoadWorld(string, SlugcatStats.Name, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public void LoadWorld(string worldName, SlugcatStats.Name playerCharacterNumber, bool singleRoomWorld)
    parameters:
    - id: worldName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>worldName</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    - id: playerCharacterNumber
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerCharacterNumber</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    - id: singleRoomWorld
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>singleRoomWorld</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Sub LoadWorld(worldName As String, playerCharacterNumber As SlugcatStats.Name, singleRoomWorld As Boolean)
  overload: Global.OverWorld.LoadWorld*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
  nameWithType.vb: OverWorld.LoadWorld(String, SlugcatStats.Name, Boolean)
  fullName.vb: OverWorld.LoadWorld(String, SlugcatStats.Name, Boolean)
  name.vb: LoadWorld(String, Name, Boolean)
- uid: Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)
  commentId: M:Global.OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)
  id: LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: LoadWorld(string, Name, Timeline, bool)
  nameWithType: OverWorld.LoadWorld(string, SlugcatStats.Name, SlugcatStats.Timeline, bool)
  fullName: OverWorld.LoadWorld(string, SlugcatStats.Name, SlugcatStats.Timeline, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadWorld(string worldName, SlugcatStats.Name playerCharacterNumber, SlugcatStats.Timeline time, bool singleRoomWorld)
    parameters:
    - id: worldName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>worldName</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)</parameter>
          </include>
        </markup>
    - id: playerCharacterNumber
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerCharacterNumber</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)</parameter>
          </include>
        </markup>
    - id: time
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)</parameter>
          </include>
        </markup>
    - id: singleRoomWorld
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>singleRoomWorld</parameter>
            <parameter>M:OverWorld.LoadWorld(System.String,SlugcatStats.Name,SlugcatStats.Timeline,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub LoadWorld(worldName As String, playerCharacterNumber As SlugcatStats.Name, time As SlugcatStats.Timeline, singleRoomWorld As Boolean)
  overload: Global.OverWorld.LoadWorld*
  nameWithType.vb: OverWorld.LoadWorld(String, SlugcatStats.Name, SlugcatStats.Timeline, Boolean)
  fullName.vb: OverWorld.LoadWorld(String, SlugcatStats.Name, SlugcatStats.Timeline, Boolean)
  name.vb: LoadWorld(String, Name, Timeline, Boolean)
- uid: Global.OverWorld.SwitchWorlds(AbstractRoom)
  commentId: M:Global.OverWorld.SwitchWorlds(AbstractRoom)
  id: SwitchWorlds(AbstractRoom)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: SwitchWorlds(AbstractRoom)
  nameWithType: OverWorld.SwitchWorlds(AbstractRoom)
  fullName: OverWorld.SwitchWorlds(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.SwitchWorlds(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SwitchWorlds(AbstractRoom gateRoom)
    parameters:
    - id: gateRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gateRoom</parameter>
            <parameter>M:OverWorld.SwitchWorlds(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SwitchWorlds(gateRoom As AbstractRoom)
  overload: Global.OverWorld.SwitchWorlds*
- uid: Global.OverWorld.GateRequestsSwitchInitiation(RegionGate)
  commentId: M:Global.OverWorld.GateRequestsSwitchInitiation(RegionGate)
  id: GateRequestsSwitchInitiation(RegionGate)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: GateRequestsSwitchInitiation(RegionGate)
  nameWithType: OverWorld.GateRequestsSwitchInitiation(RegionGate)
  fullName: OverWorld.GateRequestsSwitchInitiation(RegionGate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.GateRequestsSwitchInitiation(RegionGate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GateRequestsSwitchInitiation(RegionGate reportBackToGate)
    parameters:
    - id: reportBackToGate
      type: Global.RegionGate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reportBackToGate</parameter>
            <parameter>M:OverWorld.GateRequestsSwitchInitiation(RegionGate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GateRequestsSwitchInitiation(reportBackToGate As RegionGate)
  overload: Global.OverWorld.GateRequestsSwitchInitiation*
- uid: Global.OverWorld.GetRegion(AbstractRoom)
  commentId: M:Global.OverWorld.GetRegion(AbstractRoom)
  id: GetRegion(AbstractRoom)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: GetRegion(AbstractRoom)
  nameWithType: OverWorld.GetRegion(AbstractRoom)
  fullName: OverWorld.GetRegion(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.GetRegion(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region GetRegion(AbstractRoom room)
    parameters:
    - id: room
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:OverWorld.GetRegion(AbstractRoom)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OverWorld.GetRegion(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetRegion(room As AbstractRoom) As Region
  overload: Global.OverWorld.GetRegion*
- uid: Global.OverWorld.GetRegion(System.String)
  commentId: M:Global.OverWorld.GetRegion(System.String)
  id: GetRegion(System.String)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: GetRegion(string)
  nameWithType: OverWorld.GetRegion(string)
  fullName: OverWorld.GetRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.GetRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region GetRegion(string rName)
    parameters:
    - id: rName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rName</parameter>
            <parameter>M:OverWorld.GetRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OverWorld.GetRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetRegion(rName As String) As Region
  overload: Global.OverWorld.GetRegion*
  nameWithType.vb: OverWorld.GetRegion(String)
  fullName.vb: OverWorld.GetRegion(String)
  name.vb: GetRegion(String)
- uid: Global.OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)
  commentId: M:Global.OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)
  id: InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: InitiateSpecialWarp(SpecialWarpType, ISpecialWarp)
  nameWithType: OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType, ISpecialWarp)
  fullName: OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType, MoreSlugcats.ISpecialWarp)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSpecialWarp(OverWorld.SpecialWarpType warp, ISpecialWarp callback)
    parameters:
    - id: warp
      type: Global.OverWorld.SpecialWarpType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>warp</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)</parameter>
          </include>
        </markup>
    - id: callback
      type: MoreSlugcats.ISpecialWarp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>callback</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp(OverWorld.SpecialWarpType,MoreSlugcats.ISpecialWarp)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSpecialWarp(warp As OverWorld.SpecialWarpType, callback As ISpecialWarp)
  overload: Global.OverWorld.InitiateSpecialWarp*
- uid: Global.OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)
  commentId: M:Global.OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)
  id: InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: InitiateSpecialWarp_SingleRoom(ISpecialWarp, string)
  nameWithType: OverWorld.InitiateSpecialWarp_SingleRoom(ISpecialWarp, string)
  fullName: OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSpecialWarp_SingleRoom(ISpecialWarp callback, string roomName)
    parameters:
    - id: callback
      type: MoreSlugcats.ISpecialWarp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>callback</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)</parameter>
          </include>
        </markup>
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSpecialWarp_SingleRoom(callback As ISpecialWarp, roomName As String)
  overload: Global.OverWorld.InitiateSpecialWarp_SingleRoom*
  nameWithType.vb: OverWorld.InitiateSpecialWarp_SingleRoom(ISpecialWarp, String)
  fullName.vb: OverWorld.InitiateSpecialWarp_SingleRoom(MoreSlugcats.ISpecialWarp, String)
  name.vb: InitiateSpecialWarp_SingleRoom(ISpecialWarp, String)
- uid: Global.OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)
  commentId: M:Global.OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)
  id: InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: InitiateSpecialWarp_WarpPoint(ISpecialWarp, WarpPointData, bool)
  nameWithType: OverWorld.InitiateSpecialWarp_WarpPoint(ISpecialWarp, WarpPoint.WarpPointData, bool)
  fullName: OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp, Watcher.WarpPoint.WarpPointData, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSpecialWarp_WarpPoint(ISpecialWarp callback, WarpPoint.WarpPointData warpData, bool useNormalWarpLoader)
    parameters:
    - id: callback
      type: MoreSlugcats.ISpecialWarp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>callback</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)</parameter>
          </include>
        </markup>
    - id: warpData
      type: Watcher.WarpPoint.WarpPointData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>warpData</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)</parameter>
          </include>
        </markup>
    - id: useNormalWarpLoader
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>useNormalWarpLoader</parameter>
            <parameter>M:OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp,Watcher.WarpPoint.WarpPointData,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSpecialWarp_WarpPoint(callback As ISpecialWarp, warpData As WarpPoint.WarpPointData, useNormalWarpLoader As Boolean)
  overload: Global.OverWorld.InitiateSpecialWarp_WarpPoint*
  nameWithType.vb: OverWorld.InitiateSpecialWarp_WarpPoint(ISpecialWarp, WarpPoint.WarpPointData, Boolean)
  fullName.vb: OverWorld.InitiateSpecialWarp_WarpPoint(MoreSlugcats.ISpecialWarp, Watcher.WarpPoint.WarpPointData, Boolean)
  name.vb: InitiateSpecialWarp_WarpPoint(ISpecialWarp, WarpPointData, Boolean)
- uid: Global.OverWorld.PlayerTimelinePosition
  commentId: P:Global.OverWorld.PlayerTimelinePosition
  id: PlayerTimelinePosition
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: PlayerTimelinePosition
  nameWithType: OverWorld.PlayerTimelinePosition
  fullName: OverWorld.PlayerTimelinePosition
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:OverWorld.PlayerTimelinePosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Timeline PlayerTimelinePosition { get; }
    parameters: []
    return:
      type: Global.SlugcatStats.Timeline
    content.vb: Public ReadOnly Property PlayerTimelinePosition As SlugcatStats.Timeline
  overload: Global.OverWorld.PlayerTimelinePosition*
- uid: Global.OverWorld.PlayerCharacterNumber
  commentId: P:Global.OverWorld.PlayerCharacterNumber
  id: PlayerCharacterNumber
  parent: Global.OverWorld
  langs:
  - csharp
  - vb
  name: PlayerCharacterNumber
  nameWithType: OverWorld.PlayerCharacterNumber
  fullName: OverWorld.PlayerCharacterNumber
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:OverWorld.PlayerCharacterNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Name PlayerCharacterNumber { get; }
    parameters: []
    return:
      type: Global.SlugcatStats.Name
    content.vb: Public ReadOnly Property PlayerCharacterNumber As SlugcatStats.Name
  overload: Global.OverWorld.PlayerCharacterNumber*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.WorldLoader
  commentId: T:Global.WorldLoader
  isExternal: true
  href: WorldLoader.html
  name: WorldLoader
  nameWithType: WorldLoader
  fullName: WorldLoader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Region[]
  isExternal: true
  href: Region.html
  name: Region[]
  nameWithType: Region[]
  fullName: Region[]
  nameWithType.vb: Region()
  fullName.vb: Region()
  name.vb: Region()
  spec.csharp:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: (
  - name: )
- uid: Global.OverWorld.SpecialWarpType
  commentId: T:Global.OverWorld.SpecialWarpType
  isExternal: true
  href: OverWorld.html
  name: OverWorld.SpecialWarpType
  nameWithType: OverWorld.SpecialWarpType
  fullName: OverWorld.SpecialWarpType
  spec.csharp:
  - uid: Global.OverWorld
    name: OverWorld
    isExternal: true
    href: OverWorld.html
  - name: .
  - uid: Global.OverWorld.SpecialWarpType
    name: SpecialWarpType
    isExternal: true
    href: OverWorld.SpecialWarpType.html
  spec.vb:
  - uid: Global.OverWorld
    name: OverWorld
    isExternal: true
    href: OverWorld.html
  - name: .
  - uid: Global.OverWorld.SpecialWarpType
    name: SpecialWarpType
    isExternal: true
    href: OverWorld.SpecialWarpType.html
- uid: MoreSlugcats.ISpecialWarp
  commentId: T:MoreSlugcats.ISpecialWarp
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.ISpecialWarp.html
  name: ISpecialWarp
  nameWithType: ISpecialWarp
  fullName: MoreSlugcats.ISpecialWarp
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: Global.OverWorld.WarpUpdate*
  commentId: Overload:Global.OverWorld.WarpUpdate
  isExternal: true
  href: Global.OverWorld.html#OverWorld_WarpUpdate
  name: WarpUpdate
  nameWithType: OverWorld.WarpUpdate
  fullName: OverWorld.WarpUpdate
- uid: Global.OverWorld.#ctor*
  commentId: Overload:Global.OverWorld.#ctor
  isExternal: true
  href: Global.OverWorld.html#OverWorld__ctor_RainWorldGame_
  name: OverWorld
  nameWithType: OverWorld.OverWorld
  fullName: OverWorld.OverWorld
  nameWithType.vb: OverWorld.New
  fullName.vb: OverWorld.New
  name.vb: New
- uid: Global.OverWorld.Update*
  commentId: Overload:Global.OverWorld.Update
  isExternal: true
  href: Global.OverWorld.html#OverWorld_Update
  name: Update
  nameWithType: OverWorld.Update
  fullName: OverWorld.Update
- uid: Global.OverWorld.LoadWorld*
  commentId: Overload:Global.OverWorld.LoadWorld
  isExternal: true
  href: Global.OverWorld.html#OverWorld_LoadWorld_System_String_SlugcatStats_Name_System_Boolean_
  name: LoadWorld
  nameWithType: OverWorld.LoadWorld
  fullName: OverWorld.LoadWorld
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.SlugcatStats.Timeline
  commentId: T:Global.SlugcatStats.Timeline
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Timeline
  nameWithType: SlugcatStats.Timeline
  fullName: SlugcatStats.Timeline
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
- uid: Global.OverWorld.SwitchWorlds*
  commentId: Overload:Global.OverWorld.SwitchWorlds
  isExternal: true
  href: Global.OverWorld.html#OverWorld_SwitchWorlds_AbstractRoom_
  name: SwitchWorlds
  nameWithType: OverWorld.SwitchWorlds
  fullName: OverWorld.SwitchWorlds
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
- uid: Global.OverWorld.GateRequestsSwitchInitiation*
  commentId: Overload:Global.OverWorld.GateRequestsSwitchInitiation
  isExternal: true
  href: Global.OverWorld.html#OverWorld_GateRequestsSwitchInitiation_RegionGate_
  name: GateRequestsSwitchInitiation
  nameWithType: OverWorld.GateRequestsSwitchInitiation
  fullName: OverWorld.GateRequestsSwitchInitiation
- uid: Global.RegionGate
  commentId: T:Global.RegionGate
  isExternal: true
  href: RegionGate.html
  name: RegionGate
  nameWithType: RegionGate
  fullName: RegionGate
- uid: Global.OverWorld.GetRegion*
  commentId: Overload:Global.OverWorld.GetRegion
  isExternal: true
  href: Global.OverWorld.html#OverWorld_GetRegion_AbstractRoom_
  name: GetRegion
  nameWithType: OverWorld.GetRegion
  fullName: OverWorld.GetRegion
- uid: Global.Region
  commentId: T:Global.Region
  isExternal: true
  href: Region.html
  name: Region
  nameWithType: Region
  fullName: Region
- uid: Global.OverWorld.InitiateSpecialWarp*
  commentId: Overload:Global.OverWorld.InitiateSpecialWarp
  isExternal: true
  href: Global.OverWorld.html#OverWorld_InitiateSpecialWarp_OverWorld_SpecialWarpType_MoreSlugcats_ISpecialWarp_
  name: InitiateSpecialWarp
  nameWithType: OverWorld.InitiateSpecialWarp
  fullName: OverWorld.InitiateSpecialWarp
- uid: Global.OverWorld.InitiateSpecialWarp_SingleRoom*
  commentId: Overload:Global.OverWorld.InitiateSpecialWarp_SingleRoom
  isExternal: true
  href: Global.OverWorld.html#OverWorld_InitiateSpecialWarp_SingleRoom_MoreSlugcats_ISpecialWarp_System_String_
  name: InitiateSpecialWarp_SingleRoom
  nameWithType: OverWorld.InitiateSpecialWarp_SingleRoom
  fullName: OverWorld.InitiateSpecialWarp_SingleRoom
- uid: Global.OverWorld.InitiateSpecialWarp_WarpPoint*
  commentId: Overload:Global.OverWorld.InitiateSpecialWarp_WarpPoint
  isExternal: true
  href: Global.OverWorld.html#OverWorld_InitiateSpecialWarp_WarpPoint_MoreSlugcats_ISpecialWarp_Watcher_WarpPoint_WarpPointData_System_Boolean_
  name: InitiateSpecialWarp_WarpPoint
  nameWithType: OverWorld.InitiateSpecialWarp_WarpPoint
  fullName: OverWorld.InitiateSpecialWarp_WarpPoint
- uid: Watcher.WarpPoint.WarpPointData
  commentId: T:Watcher.WarpPoint.WarpPointData
  parent: Watcher
  isExternal: true
  href: Watcher.WarpPoint.html
  name: WarpPoint.WarpPointData
  nameWithType: WarpPoint.WarpPointData
  fullName: Watcher.WarpPoint.WarpPointData
  spec.csharp:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
  spec.vb:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: Global.OverWorld.PlayerTimelinePosition*
  commentId: Overload:Global.OverWorld.PlayerTimelinePosition
  isExternal: true
  href: Global.OverWorld.html#OverWorld_PlayerTimelinePosition
  name: PlayerTimelinePosition
  nameWithType: OverWorld.PlayerTimelinePosition
  fullName: OverWorld.PlayerTimelinePosition
- uid: Global.OverWorld.PlayerCharacterNumber*
  commentId: Overload:Global.OverWorld.PlayerCharacterNumber
  isExternal: true
  href: Global.OverWorld.html#OverWorld_PlayerCharacterNumber
  name: PlayerCharacterNumber
  nameWithType: OverWorld.PlayerCharacterNumber
  fullName: OverWorld.PlayerCharacterNumber
