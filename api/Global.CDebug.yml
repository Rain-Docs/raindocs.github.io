### YamlMime:ManagedReference
items:
- uid: Global.CDebug
  commentId: T:Global.CDebug
  id: CDebug
  parent: Global
  children:
  - Global.CDebug.Log(MovementConnection)
  - Global.CDebug.Log(RWCustom.IntVector2)
  - Global.CDebug.Log(System.String,MovementConnection)
  - Global.CDebug.Log(System.String,RWCustom.IntVector2)
  - Global.CDebug.Log(System.String,UnityEngine.Vector2)
  - Global.CDebug.Log(System.String,WorldCoordinate)
  - Global.CDebug.Log(UnityEngine.Vector2)
  - Global.CDebug.Log(WorldCoordinate)
  langs:
  - csharp
  - vb
  name: CDebug
  nameWithType: CDebug
  fullName: CDebug
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CDebug</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class CDebug
    content.vb: Public Module CDebug
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CDebug.Log(RWCustom.IntVector2)
  commentId: M:Global.CDebug.Log(RWCustom.IntVector2)
  id: Log(RWCustom.IntVector2)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(IntVector2)
  nameWithType: CDebug.Log(IntVector2)
  fullName: CDebug.Log(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(IntVector2 iv)
    parameters:
    - id: iv
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iv</parameter>
            <parameter>M:CDebug.Log(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(iv As IntVector2)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
- uid: Global.CDebug.Log(System.String,RWCustom.IntVector2)
  commentId: M:Global.CDebug.Log(System.String,RWCustom.IntVector2)
  id: Log(System.String,RWCustom.IntVector2)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(string, IntVector2)
  nameWithType: CDebug.Log(string, IntVector2)
  fullName: CDebug.Log(string, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(System.String,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(string str, IntVector2 iv)
    parameters:
    - id: str
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:CDebug.Log(System.String,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: iv
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iv</parameter>
            <parameter>M:CDebug.Log(System.String,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(str As String, iv As IntVector2)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
  nameWithType.vb: CDebug.Log(String, IntVector2)
  fullName.vb: CDebug.Log(String, RWCustom.IntVector2)
  name.vb: Log(String, IntVector2)
- uid: Global.CDebug.Log(UnityEngine.Vector2)
  commentId: M:Global.CDebug.Log(UnityEngine.Vector2)
  id: Log(UnityEngine.Vector2)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(Vector2)
  nameWithType: CDebug.Log(Vector2)
  fullName: CDebug.Log(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(Vector2 iv)
    parameters:
    - id: iv
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iv</parameter>
            <parameter>M:CDebug.Log(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(iv As Vector2)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
- uid: Global.CDebug.Log(System.String,UnityEngine.Vector2)
  commentId: M:Global.CDebug.Log(System.String,UnityEngine.Vector2)
  id: Log(System.String,UnityEngine.Vector2)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(string, Vector2)
  nameWithType: CDebug.Log(string, Vector2)
  fullName: CDebug.Log(string, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(System.String,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(string str, Vector2 iv)
    parameters:
    - id: str
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:CDebug.Log(System.String,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: iv
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iv</parameter>
            <parameter>M:CDebug.Log(System.String,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(str As String, iv As Vector2)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
  nameWithType.vb: CDebug.Log(String, Vector2)
  fullName.vb: CDebug.Log(String, UnityEngine.Vector2)
  name.vb: Log(String, Vector2)
- uid: Global.CDebug.Log(WorldCoordinate)
  commentId: M:Global.CDebug.Log(WorldCoordinate)
  id: Log(WorldCoordinate)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(WorldCoordinate)
  nameWithType: CDebug.Log(WorldCoordinate)
  fullName: CDebug.Log(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(WorldCoordinate wc)
    parameters:
    - id: wc
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wc</parameter>
            <parameter>M:CDebug.Log(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(wc As WorldCoordinate)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
- uid: Global.CDebug.Log(System.String,WorldCoordinate)
  commentId: M:Global.CDebug.Log(System.String,WorldCoordinate)
  id: Log(System.String,WorldCoordinate)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(string, WorldCoordinate)
  nameWithType: CDebug.Log(string, WorldCoordinate)
  fullName: CDebug.Log(string, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(System.String,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(string str, WorldCoordinate wc)
    parameters:
    - id: str
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:CDebug.Log(System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: wc
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wc</parameter>
            <parameter>M:CDebug.Log(System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(str As String, wc As WorldCoordinate)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
  nameWithType.vb: CDebug.Log(String, WorldCoordinate)
  fullName.vb: CDebug.Log(String, WorldCoordinate)
  name.vb: Log(String, WorldCoordinate)
- uid: Global.CDebug.Log(MovementConnection)
  commentId: M:Global.CDebug.Log(MovementConnection)
  id: Log(MovementConnection)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(MovementConnection)
  nameWithType: CDebug.Log(MovementConnection)
  fullName: CDebug.Log(MovementConnection)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(MovementConnection mc)
    parameters:
    - id: mc
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mc</parameter>
            <parameter>M:CDebug.Log(MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(mc As MovementConnection)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
- uid: Global.CDebug.Log(System.String,MovementConnection)
  commentId: M:Global.CDebug.Log(System.String,MovementConnection)
  id: Log(System.String,MovementConnection)
  parent: Global.CDebug
  langs:
  - csharp
  - vb
  name: Log(string, MovementConnection)
  nameWithType: CDebug.Log(string, MovementConnection)
  fullName: CDebug.Log(string, MovementConnection)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CDebug.Log(System.String,MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Conditional("UNITY_EDITOR")]

      [Conditional("DEVELOPMENT_BUILD")]

      public static void Log(string str, MovementConnection mc)
    parameters:
    - id: str
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>str</parameter>
            <parameter>M:CDebug.Log(System.String,MovementConnection)</parameter>
          </include>
        </markup>
    - id: mc
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mc</parameter>
            <parameter>M:CDebug.Log(System.String,MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Conditional("UNITY_EDITOR")>

      <Conditional("DEVELOPMENT_BUILD")>

      Public Shared Sub Log(str As String, mc As MovementConnection)
  overload: Global.CDebug.Log*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: UNITY_EDITOR
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEVELOPMENT_BUILD
  nameWithType.vb: CDebug.Log(String, MovementConnection)
  fullName.vb: CDebug.Log(String, MovementConnection)
  name.vb: Log(String, MovementConnection)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CDebug.Log*
  commentId: Overload:Global.CDebug.Log
  isExternal: true
  href: Global.CDebug.html#CDebug_Log_RWCustom_IntVector2_
  name: Log
  nameWithType: CDebug.Log
  fullName: CDebug.Log
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
