### YamlMime:ManagedReference
items:
- uid: Global.Tracker.Ghost
  commentId: T:Global.Tracker.Ghost
  id: Tracker.Ghost
  parent: Global
  children:
  - Global.Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.Tracker.Ghost.Clone(WorldCoordinate,System.Int32)
  - Global.Tracker.Ghost.ConnectionLegal(MovementConnection)
  - Global.Tracker.Ghost.DeleteMeNextFrame
  - Global.Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)
  - Global.Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)
  - Global.Tracker.Ghost.Push
  - Global.Tracker.Ghost.Reset
  - Global.Tracker.Ghost.Update
  - Global.Tracker.Ghost.allowedToMoveInVisibleAreas
  - Global.Tracker.Ghost.connectionsFollowed
  - Global.Tracker.Ghost.coord
  - Global.Tracker.Ghost.forbiddenRoomExit
  - Global.Tracker.Ghost.generation
  - Global.Tracker.Ghost.lastCoord
  - Global.Tracker.Ghost.moveBuffer
  - Global.Tracker.Ghost.parent
  - Global.Tracker.Ghost.pos
  - Global.Tracker.Ghost.pushForward
  - Global.Tracker.Ghost.stopped
  - Global.Tracker.Ghost.vel
  langs:
  - csharp
  - vb
  name: Tracker.Ghost
  nameWithType: Tracker.Ghost
  fullName: Tracker.Ghost
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Tracker.Ghost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Tracker.Ghost
    content.vb: Public Class Tracker.Ghost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Tracker.Ghost.parent
  commentId: F:Global.Tracker.Ghost.parent
  id: parent
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: parent
  nameWithType: Tracker.Ghost.parent
  fullName: Tracker.Ghost.parent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.parent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.ElaborateCreatureRepresentation parent
    return:
      type: Global.Tracker.ElaborateCreatureRepresentation
    content.vb: Public parent As Tracker.ElaborateCreatureRepresentation
- uid: Global.Tracker.Ghost.pos
  commentId: F:Global.Tracker.Ghost.pos
  id: pos
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: Tracker.Ghost.pos
  fullName: Tracker.Ghost.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.Tracker.Ghost.vel
  commentId: F:Global.Tracker.Ghost.vel
  id: vel
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: Tracker.Ghost.vel
  fullName: Tracker.Ghost.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.Tracker.Ghost.coord
  commentId: F:Global.Tracker.Ghost.coord
  id: coord
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: coord
  nameWithType: Tracker.Ghost.coord
  fullName: Tracker.Ghost.coord
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.coord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate coord
    return:
      type: Global.WorldCoordinate
    content.vb: Public coord As WorldCoordinate
- uid: Global.Tracker.Ghost.lastCoord
  commentId: F:Global.Tracker.Ghost.lastCoord
  id: lastCoord
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: lastCoord
  nameWithType: Tracker.Ghost.lastCoord
  fullName: Tracker.Ghost.lastCoord
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.lastCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate lastCoord
    return:
      type: Global.WorldCoordinate
    content.vb: Public lastCoord As WorldCoordinate
- uid: Global.Tracker.Ghost.forbiddenRoomExit
  commentId: F:Global.Tracker.Ghost.forbiddenRoomExit
  id: forbiddenRoomExit
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: forbiddenRoomExit
  nameWithType: Tracker.Ghost.forbiddenRoomExit
  fullName: Tracker.Ghost.forbiddenRoomExit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.forbiddenRoomExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate forbiddenRoomExit
    return:
      type: Global.WorldCoordinate
    content.vb: Public forbiddenRoomExit As WorldCoordinate
- uid: Global.Tracker.Ghost.moveBuffer
  commentId: F:Global.Tracker.Ghost.moveBuffer
  id: moveBuffer
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: moveBuffer
  nameWithType: Tracker.Ghost.moveBuffer
  fullName: Tracker.Ghost.moveBuffer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.moveBuffer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float moveBuffer
    return:
      type: System.Single
    content.vb: Public moveBuffer As Single
- uid: Global.Tracker.Ghost.pushForward
  commentId: F:Global.Tracker.Ghost.pushForward
  id: pushForward
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: pushForward
  nameWithType: Tracker.Ghost.pushForward
  fullName: Tracker.Ghost.pushForward
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.pushForward</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pushForward
    return:
      type: System.Int32
    content.vb: Public pushForward As Integer
- uid: Global.Tracker.Ghost.generation
  commentId: F:Global.Tracker.Ghost.generation
  id: generation
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: generation
  nameWithType: Tracker.Ghost.generation
  fullName: Tracker.Ghost.generation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.generation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int generation
    return:
      type: System.Int32
    content.vb: Public generation As Integer
- uid: Global.Tracker.Ghost.connectionsFollowed
  commentId: F:Global.Tracker.Ghost.connectionsFollowed
  id: connectionsFollowed
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: connectionsFollowed
  nameWithType: Tracker.Ghost.connectionsFollowed
  fullName: Tracker.Ghost.connectionsFollowed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.connectionsFollowed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int connectionsFollowed
    return:
      type: System.Int32
    content.vb: Public connectionsFollowed As Integer
- uid: Global.Tracker.Ghost.DeleteMeNextFrame
  commentId: F:Global.Tracker.Ghost.DeleteMeNextFrame
  id: DeleteMeNextFrame
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: DeleteMeNextFrame
  nameWithType: Tracker.Ghost.DeleteMeNextFrame
  fullName: Tracker.Ghost.DeleteMeNextFrame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.DeleteMeNextFrame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DeleteMeNextFrame
    return:
      type: System.Boolean
    content.vb: Public DeleteMeNextFrame As Boolean
- uid: Global.Tracker.Ghost.stopped
  commentId: F:Global.Tracker.Ghost.stopped
  id: stopped
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: stopped
  nameWithType: Tracker.Ghost.stopped
  fullName: Tracker.Ghost.stopped
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.stopped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stopped
    return:
      type: System.Boolean
    content.vb: Public stopped As Boolean
- uid: Global.Tracker.Ghost.allowedToMoveInVisibleAreas
  commentId: F:Global.Tracker.Ghost.allowedToMoveInVisibleAreas
  id: allowedToMoveInVisibleAreas
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: allowedToMoveInVisibleAreas
  nameWithType: Tracker.Ghost.allowedToMoveInVisibleAreas
  fullName: Tracker.Ghost.allowedToMoveInVisibleAreas
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Tracker.Ghost.allowedToMoveInVisibleAreas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool allowedToMoveInVisibleAreas
    return:
      type: System.Boolean
    content.vb: Public allowedToMoveInVisibleAreas As Boolean
- uid: Global.Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)
  id: '#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)'
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Ghost(ElaborateCreatureRepresentation, Vector2, Vector2)
  nameWithType: Tracker.Ghost.Ghost(Tracker.ElaborateCreatureRepresentation, Vector2, Vector2)
  fullName: Tracker.Ghost.Ghost(Tracker.ElaborateCreatureRepresentation, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Tracker.Ghost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Ghost(Tracker.ElaborateCreatureRepresentation parent, Vector2 pos, Vector2 vel)
    parameters:
    - id: parent
      type: Global.Tracker.ElaborateCreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parent</parameter>
            <parameter>M:Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: vel
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vel</parameter>
            <parameter>M:Tracker.Ghost.#ctor(Tracker.ElaborateCreatureRepresentation,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(parent As Tracker.ElaborateCreatureRepresentation, pos As Vector2, vel As Vector2)
  overload: Global.Tracker.Ghost.#ctor*
  nameWithType.vb: Tracker.Ghost.New(Tracker.ElaborateCreatureRepresentation, Vector2, Vector2)
  fullName.vb: Tracker.Ghost.New(Tracker.ElaborateCreatureRepresentation, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: New(ElaborateCreatureRepresentation, Vector2, Vector2)
- uid: Global.Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)
  commentId: M:Global.Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)
  id: Move(WorldCoordinate,UnityEngine.Vector2)
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Move(WorldCoordinate, Vector2)
  nameWithType: Tracker.Ghost.Move(WorldCoordinate, Vector2)
  fullName: Tracker.Ghost.Move(WorldCoordinate, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Move(WorldCoordinate newCoord, Vector2 newPos)
    parameters:
    - id: newCoord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newCoord</parameter>
            <parameter>M:Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: newPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newPos</parameter>
            <parameter>M:Tracker.Ghost.Move(WorldCoordinate,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Move(newCoord As WorldCoordinate, newPos As Vector2)
  overload: Global.Tracker.Ghost.Move*
- uid: Global.Tracker.Ghost.Update
  commentId: M:Global.Tracker.Ghost.Update
  id: Update
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Tracker.Ghost.Update()
  fullName: Tracker.Ghost.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Tracker.Ghost.Update*
- uid: Global.Tracker.Ghost.ConnectionLegal(MovementConnection)
  commentId: M:Global.Tracker.Ghost.ConnectionLegal(MovementConnection)
  id: ConnectionLegal(MovementConnection)
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: ConnectionLegal(MovementConnection)
  nameWithType: Tracker.Ghost.ConnectionLegal(MovementConnection)
  fullName: Tracker.Ghost.ConnectionLegal(MovementConnection)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.ConnectionLegal(MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ConnectionLegal(MovementConnection connection)
    parameters:
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:Tracker.Ghost.ConnectionLegal(MovementConnection)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.Ghost.ConnectionLegal(MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionLegal(connection As MovementConnection) As Boolean
  overload: Global.Tracker.Ghost.ConnectionLegal*
- uid: Global.Tracker.Ghost.Reset
  commentId: M:Global.Tracker.Ghost.Reset
  id: Reset
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Tracker.Ghost.Reset()
  fullName: Tracker.Ghost.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.Tracker.Ghost.Reset*
- uid: Global.Tracker.Ghost.Push
  commentId: M:Global.Tracker.Ghost.Push
  id: Push
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Push()
  nameWithType: Tracker.Ghost.Push()
  fullName: Tracker.Ghost.Push()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.Push</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Push()
    content.vb: Public Sub Push()
  overload: Global.Tracker.Ghost.Push*
- uid: Global.Tracker.Ghost.Clone(WorldCoordinate,System.Int32)
  commentId: M:Global.Tracker.Ghost.Clone(WorldCoordinate,System.Int32)
  id: Clone(WorldCoordinate,System.Int32)
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: Clone(WorldCoordinate, int)
  nameWithType: Tracker.Ghost.Clone(WorldCoordinate, int)
  fullName: Tracker.Ghost.Clone(WorldCoordinate, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.Clone(WorldCoordinate,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.Ghost Clone(WorldCoordinate dest, int generationAdd)
    parameters:
    - id: dest
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:Tracker.Ghost.Clone(WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: generationAdd
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>generationAdd</parameter>
            <parameter>M:Tracker.Ghost.Clone(WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.Tracker.Ghost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.Ghost.Clone(WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Clone(dest As WorldCoordinate, generationAdd As Integer) As Tracker.Ghost
  overload: Global.Tracker.Ghost.Clone*
  nameWithType.vb: Tracker.Ghost.Clone(WorldCoordinate, Integer)
  fullName.vb: Tracker.Ghost.Clone(WorldCoordinate, Integer)
  name.vb: Clone(WorldCoordinate, Integer)
- uid: Global.Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)
  commentId: M:Global.Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)
  id: NeighbourLegal(RWCustom.IntVector2)
  parent: Global.Tracker.Ghost
  langs:
  - csharp
  - vb
  name: NeighbourLegal(IntVector2)
  nameWithType: Tracker.Ghost.NeighbourLegal(IntVector2)
  fullName: Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool NeighbourLegal(IntVector2 nb)
    parameters:
    - id: nb
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nb</parameter>
            <parameter>M:Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Tracker.Ghost.NeighbourLegal(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function NeighbourLegal(nb As IntVector2) As Boolean
  overload: Global.Tracker.Ghost.NeighbourLegal*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Tracker.ElaborateCreatureRepresentation
  commentId: T:Global.Tracker.ElaborateCreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.ElaborateCreatureRepresentation
  nameWithType: Tracker.ElaborateCreatureRepresentation
  fullName: Tracker.ElaborateCreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.ElaborateCreatureRepresentation
    name: ElaborateCreatureRepresentation
    isExternal: true
    href: Tracker.ElaborateCreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.ElaborateCreatureRepresentation
    name: ElaborateCreatureRepresentation
    isExternal: true
    href: Tracker.ElaborateCreatureRepresentation.html
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Tracker.Ghost.#ctor*
  commentId: Overload:Global.Tracker.Ghost.#ctor
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost__ctor_Tracker_ElaborateCreatureRepresentation_UnityEngine_Vector2_UnityEngine_Vector2_
  name: Ghost
  nameWithType: Tracker.Ghost.Ghost
  fullName: Tracker.Ghost.Ghost
  nameWithType.vb: Tracker.Ghost.New
  fullName.vb: Tracker.Ghost.New
  name.vb: New
- uid: Global.Tracker.Ghost.Move*
  commentId: Overload:Global.Tracker.Ghost.Move
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_Move_WorldCoordinate_UnityEngine_Vector2_
  name: Move
  nameWithType: Tracker.Ghost.Move
  fullName: Tracker.Ghost.Move
- uid: Global.Tracker.Ghost.Update*
  commentId: Overload:Global.Tracker.Ghost.Update
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_Update
  name: Update
  nameWithType: Tracker.Ghost.Update
  fullName: Tracker.Ghost.Update
- uid: Global.Tracker.Ghost.ConnectionLegal*
  commentId: Overload:Global.Tracker.Ghost.ConnectionLegal
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_ConnectionLegal_MovementConnection_
  name: ConnectionLegal
  nameWithType: Tracker.Ghost.ConnectionLegal
  fullName: Tracker.Ghost.ConnectionLegal
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Global.Tracker.Ghost.Reset*
  commentId: Overload:Global.Tracker.Ghost.Reset
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_Reset
  name: Reset
  nameWithType: Tracker.Ghost.Reset
  fullName: Tracker.Ghost.Reset
- uid: Global.Tracker.Ghost.Push*
  commentId: Overload:Global.Tracker.Ghost.Push
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_Push
  name: Push
  nameWithType: Tracker.Ghost.Push
  fullName: Tracker.Ghost.Push
- uid: Global.Tracker.Ghost.Clone*
  commentId: Overload:Global.Tracker.Ghost.Clone
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_Clone_WorldCoordinate_System_Int32_
  name: Clone
  nameWithType: Tracker.Ghost.Clone
  fullName: Tracker.Ghost.Clone
- uid: Global.Tracker.Ghost
  commentId: T:Global.Tracker.Ghost
  isExternal: true
  href: Tracker.html
  name: Tracker.Ghost
  nameWithType: Tracker.Ghost
  fullName: Tracker.Ghost
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.Ghost
    name: Ghost
    isExternal: true
    href: Tracker.Ghost.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.Ghost
    name: Ghost
    isExternal: true
    href: Tracker.Ghost.html
- uid: Global.Tracker.Ghost.NeighbourLegal*
  commentId: Overload:Global.Tracker.Ghost.NeighbourLegal
  isExternal: true
  href: Global.Tracker.Ghost.html#Tracker_Ghost_NeighbourLegal_RWCustom_IntVector2_
  name: NeighbourLegal
  nameWithType: Tracker.Ghost.NeighbourLegal
  fullName: Tracker.Ghost.NeighbourLegal
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
