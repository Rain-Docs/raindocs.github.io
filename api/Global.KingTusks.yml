### YamlMime:ManagedReference
items:
- uid: Global.KingTusks
  commentId: T:Global.KingTusks
  id: KingTusks
  parent: Global
  children:
  - Global.KingTusks.#ctor(Vulture)
  - Global.KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.KingTusks.AnyCreatureImpaled
  - Global.KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)
  - Global.KingTusks.CloseQuarters
  - Global.KingTusks.DoIWantToHoldCreature(Creature)
  - Global.KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.KingTusks.GoodShootAngle(System.Int32,System.Boolean)
  - Global.KingTusks.HitBySpear(UnityEngine.Vector2)
  - Global.KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)
  - Global.KingTusks.NewRoom(Room)
  - Global.KingTusks.ReadyToShoot
  - Global.KingTusks.ThisCreatureImpaled(AbstractCreature)
  - Global.KingTusks.TryToShoot
  - Global.KingTusks.Update
  - Global.KingTusks.VisualOnAnyTargetChunk
  - Global.KingTusks.WantToShoot(System.Boolean,System.Boolean)
  - Global.KingTusks.eyesHomeIn
  - Global.KingTusks.eyesOut
  - Global.KingTusks.eyesOutCycle
  - Global.KingTusks.lastEyesHome
  - Global.KingTusks.lastEyesOut
  - Global.KingTusks.noShootDelay
  - Global.KingTusks.patternDisplace
  - Global.KingTusks.targetRep
  - Global.KingTusks.targetTrail
  - Global.KingTusks.tusks
  langs:
  - csharp
  - vb
  name: KingTusks
  nameWithType: KingTusks
  fullName: KingTusks
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:KingTusks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class KingTusks
    content.vb: Public Class KingTusks
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.KingTusks.tusks
  commentId: F:Global.KingTusks.tusks
  id: tusks
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: tusks
  nameWithType: KingTusks.tusks
  fullName: KingTusks.tusks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.tusks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KingTusks.Tusk[] tusks
    return:
      type: Global.KingTusks.Tusk[]
    content.vb: Public tusks As KingTusks.Tusk()
- uid: Global.KingTusks.eyesOut
  commentId: F:Global.KingTusks.eyesOut
  id: eyesOut
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: eyesOut
  nameWithType: KingTusks.eyesOut
  fullName: KingTusks.eyesOut
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.eyesOut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float eyesOut
    return:
      type: System.Single
    content.vb: Public eyesOut As Single
- uid: Global.KingTusks.lastEyesOut
  commentId: F:Global.KingTusks.lastEyesOut
  id: lastEyesOut
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: lastEyesOut
  nameWithType: KingTusks.lastEyesOut
  fullName: KingTusks.lastEyesOut
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.lastEyesOut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastEyesOut
    return:
      type: System.Single
    content.vb: Public lastEyesOut As Single
- uid: Global.KingTusks.eyesOutCycle
  commentId: F:Global.KingTusks.eyesOutCycle
  id: eyesOutCycle
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: eyesOutCycle
  nameWithType: KingTusks.eyesOutCycle
  fullName: KingTusks.eyesOutCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.eyesOutCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float eyesOutCycle
    return:
      type: System.Single
    content.vb: Public eyesOutCycle As Single
- uid: Global.KingTusks.eyesHomeIn
  commentId: F:Global.KingTusks.eyesHomeIn
  id: eyesHomeIn
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: eyesHomeIn
  nameWithType: KingTusks.eyesHomeIn
  fullName: KingTusks.eyesHomeIn
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.eyesHomeIn</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float eyesHomeIn
    return:
      type: System.Single
    content.vb: Public eyesHomeIn As Single
- uid: Global.KingTusks.lastEyesHome
  commentId: F:Global.KingTusks.lastEyesHome
  id: lastEyesHome
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: lastEyesHome
  nameWithType: KingTusks.lastEyesHome
  fullName: KingTusks.lastEyesHome
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.lastEyesHome</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastEyesHome
    return:
      type: System.Single
    content.vb: Public lastEyesHome As Single
- uid: Global.KingTusks.noShootDelay
  commentId: F:Global.KingTusks.noShootDelay
  id: noShootDelay
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: noShootDelay
  nameWithType: KingTusks.noShootDelay
  fullName: KingTusks.noShootDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.noShootDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int noShootDelay
    return:
      type: System.Int32
    content.vb: Public noShootDelay As Integer
- uid: Global.KingTusks.patternDisplace
  commentId: F:Global.KingTusks.patternDisplace
  id: patternDisplace
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: patternDisplace
  nameWithType: KingTusks.patternDisplace
  fullName: KingTusks.patternDisplace
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.patternDisplace</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float patternDisplace
    return:
      type: System.Single
    content.vb: Public patternDisplace As Single
- uid: Global.KingTusks.targetTrail
  commentId: F:Global.KingTusks.targetTrail
  id: targetTrail
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: targetTrail
  nameWithType: KingTusks.targetTrail
  fullName: KingTusks.targetTrail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.targetTrail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] targetTrail
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public targetTrail As Vector2()
- uid: Global.KingTusks.targetRep
  commentId: F:Global.KingTusks.targetRep
  id: targetRep
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: targetRep
  nameWithType: KingTusks.targetRep
  fullName: KingTusks.targetRep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:KingTusks.targetRep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation targetRep
    return:
      type: Global.Tracker.CreatureRepresentation
    content.vb: Public targetRep As Tracker.CreatureRepresentation
- uid: Global.KingTusks.ThisCreatureImpaled(AbstractCreature)
  commentId: M:Global.KingTusks.ThisCreatureImpaled(AbstractCreature)
  id: ThisCreatureImpaled(AbstractCreature)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: ThisCreatureImpaled(AbstractCreature)
  nameWithType: KingTusks.ThisCreatureImpaled(AbstractCreature)
  fullName: KingTusks.ThisCreatureImpaled(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.ThisCreatureImpaled(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ThisCreatureImpaled(AbstractCreature crit)
    parameters:
    - id: crit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:KingTusks.ThisCreatureImpaled(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.ThisCreatureImpaled(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Function ThisCreatureImpaled(crit As AbstractCreature) As Boolean
  overload: Global.KingTusks.ThisCreatureImpaled*
- uid: Global.KingTusks.#ctor(Vulture)
  commentId: M:Global.KingTusks.#ctor(Vulture)
  id: '#ctor(Vulture)'
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: KingTusks(Vulture)
  nameWithType: KingTusks.KingTusks(Vulture)
  fullName: KingTusks.KingTusks(Vulture)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>KingTusks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KingTusks(Vulture vulture)
    parameters:
    - id: vulture
      type: Global.Vulture
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vulture</parameter>
            <parameter>M:KingTusks.#ctor(Vulture)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(vulture As Vulture)
  overload: Global.KingTusks.#ctor*
  nameWithType.vb: KingTusks.New(Vulture)
  fullName.vb: KingTusks.New(Vulture)
  name.vb: New(Vulture)
- uid: Global.KingTusks.NewRoom(Room)
  commentId: M:Global.KingTusks.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: KingTusks.NewRoom(Room)
  fullName: KingTusks.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:KingTusks.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewRoom(newRoom As Room)
  overload: Global.KingTusks.NewRoom*
- uid: Global.KingTusks.Update
  commentId: M:Global.KingTusks.Update
  id: Update
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: KingTusks.Update()
  fullName: KingTusks.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.KingTusks.Update*
- uid: Global.KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: InitiateSprites(VultureGraphics, SpriteLeaser, RoomCamera)
  nameWithType: KingTusks.InitiateSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera)
  fullName: KingTusks.InitiateSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(VultureGraphics vGraphics, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: vGraphics
      type: Global.VultureGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vGraphics</parameter>
            <parameter>M:KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:KingTusks.InitiateSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(vGraphics As VultureGraphics, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.KingTusks.InitiateSprites*
- uid: Global.KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: DrawSprites(VultureGraphics, SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: KingTusks.DrawSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: KingTusks.DrawSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(VultureGraphics vGraphics, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: vGraphics
      type: Global.VultureGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vGraphics</parameter>
            <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:KingTusks.DrawSprites(VultureGraphics,RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(vGraphics As VultureGraphics, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.KingTusks.DrawSprites*
  nameWithType.vb: KingTusks.DrawSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: KingTusks.DrawSprites(VultureGraphics, RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(VultureGraphics, SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)
  id: ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: ApplyPalette(VultureGraphics, RoomPalette, Color, SpriteLeaser, RoomCamera)
  nameWithType: KingTusks.ApplyPalette(VultureGraphics, RoomPalette, Color, RoomCamera.SpriteLeaser, RoomCamera)
  fullName: KingTusks.ApplyPalette(VultureGraphics, RoomPalette, UnityEngine.Color, RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(VultureGraphics vGraphics, RoomPalette palette, Color armorColor, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: vGraphics
      type: Global.VultureGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vGraphics</parameter>
            <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: armorColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>armorColor</parameter>
            <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:KingTusks.ApplyPalette(VultureGraphics,RoomPalette,UnityEngine.Color,RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(vGraphics As VultureGraphics, palette As RoomPalette, armorColor As Color, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.KingTusks.ApplyPalette*
- uid: Global.KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: AddToContainer(VultureGraphics, int, SpriteLeaser, RoomCamera, FContainer)
  nameWithType: KingTusks.AddToContainer(VultureGraphics, int, RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: KingTusks.AddToContainer(VultureGraphics, int, RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(VultureGraphics vGraphics, int sprite, RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: vGraphics
      type: Global.VultureGraphics
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vGraphics</parameter>
            <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: sprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sprite</parameter>
            <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:KingTusks.AddToContainer(VultureGraphics,System.Int32,RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(vGraphics As VultureGraphics, sprite As Integer, sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.KingTusks.AddToContainer*
  nameWithType.vb: KingTusks.AddToContainer(VultureGraphics, Integer, RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName.vb: KingTusks.AddToContainer(VultureGraphics, Integer, RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  name.vb: AddToContainer(VultureGraphics, Integer, SpriteLeaser, RoomCamera, FContainer)
- uid: Global.KingTusks.DoIWantToHoldCreature(Creature)
  commentId: M:Global.KingTusks.DoIWantToHoldCreature(Creature)
  id: DoIWantToHoldCreature(Creature)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: DoIWantToHoldCreature(Creature)
  nameWithType: KingTusks.DoIWantToHoldCreature(Creature)
  fullName: KingTusks.DoIWantToHoldCreature(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.DoIWantToHoldCreature(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DoIWantToHoldCreature(Creature creature)
    parameters:
    - id: creature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:KingTusks.DoIWantToHoldCreature(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.DoIWantToHoldCreature(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function DoIWantToHoldCreature(creature As Creature) As Boolean
  overload: Global.KingTusks.DoIWantToHoldCreature*
- uid: Global.KingTusks.VisualOnAnyTargetChunk
  commentId: M:Global.KingTusks.VisualOnAnyTargetChunk
  id: VisualOnAnyTargetChunk
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: VisualOnAnyTargetChunk()
  nameWithType: KingTusks.VisualOnAnyTargetChunk()
  fullName: KingTusks.VisualOnAnyTargetChunk()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.VisualOnAnyTargetChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool VisualOnAnyTargetChunk()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.VisualOnAnyTargetChunk</parameter>
          </include>
        </markup>
    content.vb: Public Function VisualOnAnyTargetChunk() As Boolean
  overload: Global.KingTusks.VisualOnAnyTargetChunk*
- uid: Global.KingTusks.HitBySpear(UnityEngine.Vector2)
  commentId: M:Global.KingTusks.HitBySpear(UnityEngine.Vector2)
  id: HitBySpear(UnityEngine.Vector2)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: HitBySpear(Vector2)
  nameWithType: KingTusks.HitBySpear(Vector2)
  fullName: KingTusks.HitBySpear(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.HitBySpear(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HitBySpear(Vector2 directionAndMomentum)
    parameters:
    - id: directionAndMomentum
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directionAndMomentum</parameter>
            <parameter>M:KingTusks.HitBySpear(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.HitBySpear(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function HitBySpear(directionAndMomentum As Vector2) As Boolean
  overload: Global.KingTusks.HitBySpear*
- uid: Global.KingTusks.WantToShoot(System.Boolean,System.Boolean)
  commentId: M:Global.KingTusks.WantToShoot(System.Boolean,System.Boolean)
  id: WantToShoot(System.Boolean,System.Boolean)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: WantToShoot(bool, bool)
  nameWithType: KingTusks.WantToShoot(bool, bool)
  fullName: KingTusks.WantToShoot(bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.WantToShoot(System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WantToShoot(bool checkVisualOnAnyTargetChunk, bool checkMinDistance)
    parameters:
    - id: checkVisualOnAnyTargetChunk
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkVisualOnAnyTargetChunk</parameter>
            <parameter>M:KingTusks.WantToShoot(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: checkMinDistance
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkMinDistance</parameter>
            <parameter>M:KingTusks.WantToShoot(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.WantToShoot(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function WantToShoot(checkVisualOnAnyTargetChunk As Boolean, checkMinDistance As Boolean) As Boolean
  overload: Global.KingTusks.WantToShoot*
  nameWithType.vb: KingTusks.WantToShoot(Boolean, Boolean)
  fullName.vb: KingTusks.WantToShoot(Boolean, Boolean)
  name.vb: WantToShoot(Boolean, Boolean)
- uid: Global.KingTusks.TryToShoot
  commentId: M:Global.KingTusks.TryToShoot
  id: TryToShoot
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: TryToShoot()
  nameWithType: KingTusks.TryToShoot()
  fullName: KingTusks.TryToShoot()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.TryToShoot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TryToShoot()
    content.vb: Public Sub TryToShoot()
  overload: Global.KingTusks.TryToShoot*
- uid: Global.KingTusks.GoodShootAngle(System.Int32,System.Boolean)
  commentId: M:Global.KingTusks.GoodShootAngle(System.Int32,System.Boolean)
  id: GoodShootAngle(System.Int32,System.Boolean)
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: GoodShootAngle(int, bool)
  nameWithType: KingTusks.GoodShootAngle(int, bool)
  fullName: KingTusks.GoodShootAngle(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:KingTusks.GoodShootAngle(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GoodShootAngle(int tusk, bool checkMinDistance)
    parameters:
    - id: tusk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tusk</parameter>
            <parameter>M:KingTusks.GoodShootAngle(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: checkMinDistance
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkMinDistance</parameter>
            <parameter>M:KingTusks.GoodShootAngle(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:KingTusks.GoodShootAngle(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function GoodShootAngle(tusk As Integer, checkMinDistance As Boolean) As Single
  overload: Global.KingTusks.GoodShootAngle*
  nameWithType.vb: KingTusks.GoodShootAngle(Integer, Boolean)
  fullName.vb: KingTusks.GoodShootAngle(Integer, Boolean)
  name.vb: GoodShootAngle(Integer, Boolean)
- uid: Global.KingTusks.ReadyToShoot
  commentId: P:Global.KingTusks.ReadyToShoot
  id: ReadyToShoot
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: ReadyToShoot
  nameWithType: KingTusks.ReadyToShoot
  fullName: KingTusks.ReadyToShoot
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:KingTusks.ReadyToShoot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReadyToShoot { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadyToShoot As Boolean
  overload: Global.KingTusks.ReadyToShoot*
- uid: Global.KingTusks.AnyCreatureImpaled
  commentId: P:Global.KingTusks.AnyCreatureImpaled
  id: AnyCreatureImpaled
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: AnyCreatureImpaled
  nameWithType: KingTusks.AnyCreatureImpaled
  fullName: KingTusks.AnyCreatureImpaled
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:KingTusks.AnyCreatureImpaled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AnyCreatureImpaled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyCreatureImpaled As Boolean
  overload: Global.KingTusks.AnyCreatureImpaled*
- uid: Global.KingTusks.CloseQuarters
  commentId: P:Global.KingTusks.CloseQuarters
  id: CloseQuarters
  parent: Global.KingTusks
  langs:
  - csharp
  - vb
  name: CloseQuarters
  nameWithType: KingTusks.CloseQuarters
  fullName: KingTusks.CloseQuarters
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:KingTusks.CloseQuarters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CloseQuarters { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CloseQuarters As Boolean
  overload: Global.KingTusks.CloseQuarters*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.KingTusks.Tusk[]
  isExternal: true
  href: KingTusks.Tusk.html
  name: Tusk[]
  nameWithType: KingTusks.Tusk[]
  fullName: KingTusks.Tusk[]
  nameWithType.vb: KingTusks.Tusk()
  fullName.vb: KingTusks.Tusk()
  name.vb: Tusk()
  spec.csharp:
  - uid: Global.KingTusks.Tusk
    name: Tusk
    isExternal: true
    href: KingTusks.Tusk.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.KingTusks.Tusk
    name: Tusk
    isExternal: true
    href: KingTusks.Tusk.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Global.KingTusks.ThisCreatureImpaled*
  commentId: Overload:Global.KingTusks.ThisCreatureImpaled
  isExternal: true
  href: Global.KingTusks.html#KingTusks_ThisCreatureImpaled_AbstractCreature_
  name: ThisCreatureImpaled
  nameWithType: KingTusks.ThisCreatureImpaled
  fullName: KingTusks.ThisCreatureImpaled
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.KingTusks.#ctor*
  commentId: Overload:Global.KingTusks.#ctor
  isExternal: true
  href: Global.KingTusks.html#KingTusks__ctor_Vulture_
  name: KingTusks
  nameWithType: KingTusks.KingTusks
  fullName: KingTusks.KingTusks
  nameWithType.vb: KingTusks.New
  fullName.vb: KingTusks.New
  name.vb: New
- uid: Global.Vulture
  commentId: T:Global.Vulture
  isExternal: true
  href: Vulture.html
  name: Vulture
  nameWithType: Vulture
  fullName: Vulture
- uid: Global.KingTusks.NewRoom*
  commentId: Overload:Global.KingTusks.NewRoom
  isExternal: true
  href: Global.KingTusks.html#KingTusks_NewRoom_Room_
  name: NewRoom
  nameWithType: KingTusks.NewRoom
  fullName: KingTusks.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.KingTusks.Update*
  commentId: Overload:Global.KingTusks.Update
  isExternal: true
  href: Global.KingTusks.html#KingTusks_Update
  name: Update
  nameWithType: KingTusks.Update
  fullName: KingTusks.Update
- uid: Global.KingTusks.InitiateSprites*
  commentId: Overload:Global.KingTusks.InitiateSprites
  isExternal: true
  href: Global.KingTusks.html#KingTusks_InitiateSprites_VultureGraphics_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: KingTusks.InitiateSprites
  fullName: KingTusks.InitiateSprites
- uid: Global.VultureGraphics
  commentId: T:Global.VultureGraphics
  isExternal: true
  href: VultureGraphics.html
  name: VultureGraphics
  nameWithType: VultureGraphics
  fullName: VultureGraphics
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.KingTusks.DrawSprites*
  commentId: Overload:Global.KingTusks.DrawSprites
  isExternal: true
  href: Global.KingTusks.html#KingTusks_DrawSprites_VultureGraphics_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: KingTusks.DrawSprites
  fullName: KingTusks.DrawSprites
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.KingTusks.ApplyPalette*
  commentId: Overload:Global.KingTusks.ApplyPalette
  isExternal: true
  href: Global.KingTusks.html#KingTusks_ApplyPalette_VultureGraphics_RoomPalette_UnityEngine_Color_RoomCamera_SpriteLeaser_RoomCamera_
  name: ApplyPalette
  nameWithType: KingTusks.ApplyPalette
  fullName: KingTusks.ApplyPalette
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.KingTusks.AddToContainer*
  commentId: Overload:Global.KingTusks.AddToContainer
  isExternal: true
  href: Global.KingTusks.html#KingTusks_AddToContainer_VultureGraphics_System_Int32_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: KingTusks.AddToContainer
  fullName: KingTusks.AddToContainer
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.KingTusks.DoIWantToHoldCreature*
  commentId: Overload:Global.KingTusks.DoIWantToHoldCreature
  isExternal: true
  href: Global.KingTusks.html#KingTusks_DoIWantToHoldCreature_Creature_
  name: DoIWantToHoldCreature
  nameWithType: KingTusks.DoIWantToHoldCreature
  fullName: KingTusks.DoIWantToHoldCreature
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.KingTusks.VisualOnAnyTargetChunk*
  commentId: Overload:Global.KingTusks.VisualOnAnyTargetChunk
  isExternal: true
  href: Global.KingTusks.html#KingTusks_VisualOnAnyTargetChunk
  name: VisualOnAnyTargetChunk
  nameWithType: KingTusks.VisualOnAnyTargetChunk
  fullName: KingTusks.VisualOnAnyTargetChunk
- uid: Global.KingTusks.HitBySpear*
  commentId: Overload:Global.KingTusks.HitBySpear
  isExternal: true
  href: Global.KingTusks.html#KingTusks_HitBySpear_UnityEngine_Vector2_
  name: HitBySpear
  nameWithType: KingTusks.HitBySpear
  fullName: KingTusks.HitBySpear
- uid: Global.KingTusks.WantToShoot*
  commentId: Overload:Global.KingTusks.WantToShoot
  isExternal: true
  href: Global.KingTusks.html#KingTusks_WantToShoot_System_Boolean_System_Boolean_
  name: WantToShoot
  nameWithType: KingTusks.WantToShoot
  fullName: KingTusks.WantToShoot
- uid: Global.KingTusks.TryToShoot*
  commentId: Overload:Global.KingTusks.TryToShoot
  isExternal: true
  href: Global.KingTusks.html#KingTusks_TryToShoot
  name: TryToShoot
  nameWithType: KingTusks.TryToShoot
  fullName: KingTusks.TryToShoot
- uid: Global.KingTusks.GoodShootAngle*
  commentId: Overload:Global.KingTusks.GoodShootAngle
  isExternal: true
  href: Global.KingTusks.html#KingTusks_GoodShootAngle_System_Int32_System_Boolean_
  name: GoodShootAngle
  nameWithType: KingTusks.GoodShootAngle
  fullName: KingTusks.GoodShootAngle
- uid: Global.KingTusks.ReadyToShoot*
  commentId: Overload:Global.KingTusks.ReadyToShoot
  isExternal: true
  href: Global.KingTusks.html#KingTusks_ReadyToShoot
  name: ReadyToShoot
  nameWithType: KingTusks.ReadyToShoot
  fullName: KingTusks.ReadyToShoot
- uid: Global.KingTusks.AnyCreatureImpaled*
  commentId: Overload:Global.KingTusks.AnyCreatureImpaled
  isExternal: true
  href: Global.KingTusks.html#KingTusks_AnyCreatureImpaled
  name: AnyCreatureImpaled
  nameWithType: KingTusks.AnyCreatureImpaled
  fullName: KingTusks.AnyCreatureImpaled
- uid: Global.KingTusks.CloseQuarters*
  commentId: Overload:Global.KingTusks.CloseQuarters
  isExternal: true
  href: Global.KingTusks.html#KingTusks_CloseQuarters
  name: CloseQuarters
  nameWithType: KingTusks.CloseQuarters
  fullName: KingTusks.CloseQuarters
