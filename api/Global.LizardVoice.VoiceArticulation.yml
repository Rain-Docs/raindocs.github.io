### YamlMime:ManagedReference
items:
- uid: Global.LizardVoice.VoiceArticulation
  commentId: T:Global.LizardVoice.VoiceArticulation
  id: LizardVoice.VoiceArticulation
  parent: Global
  children:
  - Global.LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)
  - Global.LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)
  - Global.LizardVoice.VoiceArticulation.length
  - Global.LizardVoice.VoiceArticulation.maxVolume
  - Global.LizardVoice.VoiceArticulation.modifier
  - Global.LizardVoice.VoiceArticulation.voice
  langs:
  - csharp
  - vb
  name: LizardVoice.VoiceArticulation
  nameWithType: LizardVoice.VoiceArticulation
  fullName: LizardVoice.VoiceArticulation
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardVoice.VoiceArticulation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class LizardVoice.VoiceArticulation
    content.vb: Public Class LizardVoice.VoiceArticulation
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardVoice.VoiceArticulation.voice
  commentId: F:Global.LizardVoice.VoiceArticulation.voice
  id: voice
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: voice
  nameWithType: LizardVoice.VoiceArticulation.voice
  fullName: LizardVoice.VoiceArticulation.voice
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.VoiceArticulation.voice</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardVoice voice
    return:
      type: Global.LizardVoice
    content.vb: Public voice As LizardVoice
- uid: Global.LizardVoice.VoiceArticulation.length
  commentId: F:Global.LizardVoice.VoiceArticulation.length
  id: length
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: length
  nameWithType: LizardVoice.VoiceArticulation.length
  fullName: LizardVoice.VoiceArticulation.length
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.VoiceArticulation.length</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float length
    return:
      type: System.Single
    content.vb: Public length As Single
- uid: Global.LizardVoice.VoiceArticulation.maxVolume
  commentId: F:Global.LizardVoice.VoiceArticulation.maxVolume
  id: maxVolume
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: maxVolume
  nameWithType: LizardVoice.VoiceArticulation.maxVolume
  fullName: LizardVoice.VoiceArticulation.maxVolume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.VoiceArticulation.maxVolume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxVolume
    return:
      type: System.Single
    content.vb: Public maxVolume As Single
- uid: Global.LizardVoice.VoiceArticulation.modifier
  commentId: F:Global.LizardVoice.VoiceArticulation.modifier
  id: modifier
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: modifier
  nameWithType: LizardVoice.VoiceArticulation.modifier
  fullName: LizardVoice.VoiceArticulation.modifier
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.VoiceArticulation.modifier</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] modifier
    return:
      type: System.Single[,]
    content.vb: Public modifier As Single(,)
- uid: Global.LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)
  commentId: M:Global.LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)
  id: '#ctor(LizardVoice,System.Single,System.Single)'
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: VoiceArticulation(LizardVoice, float, float)
  nameWithType: LizardVoice.VoiceArticulation.VoiceArticulation(LizardVoice, float, float)
  fullName: LizardVoice.VoiceArticulation.VoiceArticulation(LizardVoice, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardVoice.VoiceArticulation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VoiceArticulation(LizardVoice voice, float length, float maxVolume)
    parameters:
    - id: voice
      type: Global.LizardVoice
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>voice</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: length
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: maxVolume
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxVolume</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.#ctor(LizardVoice,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(voice As LizardVoice, length As Single, maxVolume As Single)
  overload: Global.LizardVoice.VoiceArticulation.#ctor*
  nameWithType.vb: LizardVoice.VoiceArticulation.New(LizardVoice, Single, Single)
  fullName.vb: LizardVoice.VoiceArticulation.New(LizardVoice, Single, Single)
  name.vb: New(LizardVoice, Single, Single)
- uid: Global.LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)
  commentId: M:Global.LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)
  id: ReturnMod(System.Single,System.Int32)
  parent: Global.LizardVoice.VoiceArticulation
  langs:
  - csharp
  - vb
  name: ReturnMod(float, int)
  nameWithType: LizardVoice.VoiceArticulation.ReturnMod(float, int)
  fullName: LizardVoice.VoiceArticulation.ReturnMod(float, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ReturnMod(float f, int m)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: m
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>m</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardVoice.VoiceArticulation.ReturnMod(System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ReturnMod(f As Single, m As Integer) As Single
  overload: Global.LizardVoice.VoiceArticulation.ReturnMod*
  nameWithType.vb: LizardVoice.VoiceArticulation.ReturnMod(Single, Integer)
  fullName.vb: LizardVoice.VoiceArticulation.ReturnMod(Single, Integer)
  name.vb: ReturnMod(Single, Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.LizardVoice
  commentId: T:Global.LizardVoice
  isExternal: true
  href: LizardVoice.html
  name: LizardVoice
  nameWithType: LizardVoice
  fullName: LizardVoice
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: Global.LizardVoice.VoiceArticulation.#ctor*
  commentId: Overload:Global.LizardVoice.VoiceArticulation.#ctor
  isExternal: true
  href: Global.LizardVoice.VoiceArticulation.html#LizardVoice_VoiceArticulation__ctor_LizardVoice_System_Single_System_Single_
  name: VoiceArticulation
  nameWithType: LizardVoice.VoiceArticulation.VoiceArticulation
  fullName: LizardVoice.VoiceArticulation.VoiceArticulation
  nameWithType.vb: LizardVoice.VoiceArticulation.New
  fullName.vb: LizardVoice.VoiceArticulation.New
  name.vb: New
- uid: Global.LizardVoice.VoiceArticulation.ReturnMod*
  commentId: Overload:Global.LizardVoice.VoiceArticulation.ReturnMod
  isExternal: true
  href: Global.LizardVoice.VoiceArticulation.html#LizardVoice_VoiceArticulation_ReturnMod_System_Single_System_Int32_
  name: ReturnMod
  nameWithType: LizardVoice.VoiceArticulation.ReturnMod
  fullName: LizardVoice.VoiceArticulation.ReturnMod
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
