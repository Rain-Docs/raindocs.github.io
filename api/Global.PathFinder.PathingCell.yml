### YamlMime:ManagedReference
items:
- uid: Global.PathFinder.PathingCell
  commentId: T:Global.PathFinder.PathingCell
  id: PathFinder.PathingCell
  parent: Global
  children:
  - Global.PathFinder.PathingCell.#ctor(WorldCoordinate)
  - Global.PathFinder.PathingCell.costToGoal
  - Global.PathFinder.PathingCell.generation
  - Global.PathFinder.PathingCell.heuristicValue
  - Global.PathFinder.PathingCell.inCheckNextList
  - Global.PathFinder.PathingCell.possibleToGetBackFrom
  - Global.PathFinder.PathingCell.reachable
  - Global.PathFinder.PathingCell.worldCoordinate
  langs:
  - csharp
  - vb
  name: PathFinder.PathingCell
  nameWithType: PathFinder.PathingCell
  fullName: PathFinder.PathingCell
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PathFinder.PathingCell</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PathFinder.PathingCell
    content.vb: Public Class PathFinder.PathingCell
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PathFinder.PathingCell.generation
  commentId: F:Global.PathFinder.PathingCell.generation
  id: generation
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: generation
  nameWithType: PathFinder.PathingCell.generation
  fullName: PathFinder.PathingCell.generation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.generation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int generation
    return:
      type: System.Int32
    content.vb: Public generation As Integer
- uid: Global.PathFinder.PathingCell.heuristicValue
  commentId: F:Global.PathFinder.PathingCell.heuristicValue
  id: heuristicValue
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: heuristicValue
  nameWithType: PathFinder.PathingCell.heuristicValue
  fullName: PathFinder.PathingCell.heuristicValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.heuristicValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost heuristicValue
    return:
      type: Global.PathCost
    content.vb: Public heuristicValue As PathCost
- uid: Global.PathFinder.PathingCell.costToGoal
  commentId: F:Global.PathFinder.PathingCell.costToGoal
  id: costToGoal
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: costToGoal
  nameWithType: PathFinder.PathingCell.costToGoal
  fullName: PathFinder.PathingCell.costToGoal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.costToGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost costToGoal
    return:
      type: Global.PathCost
    content.vb: Public costToGoal As PathCost
- uid: Global.PathFinder.PathingCell.inCheckNextList
  commentId: F:Global.PathFinder.PathingCell.inCheckNextList
  id: inCheckNextList
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: inCheckNextList
  nameWithType: PathFinder.PathingCell.inCheckNextList
  fullName: PathFinder.PathingCell.inCheckNextList
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.inCheckNextList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inCheckNextList
    return:
      type: System.Boolean
    content.vb: Public inCheckNextList As Boolean
- uid: Global.PathFinder.PathingCell.reachable
  commentId: F:Global.PathFinder.PathingCell.reachable
  id: reachable
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: reachable
  nameWithType: PathFinder.PathingCell.reachable
  fullName: PathFinder.PathingCell.reachable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.reachable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool reachable
    return:
      type: System.Boolean
    content.vb: Public reachable As Boolean
- uid: Global.PathFinder.PathingCell.possibleToGetBackFrom
  commentId: F:Global.PathFinder.PathingCell.possibleToGetBackFrom
  id: possibleToGetBackFrom
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: possibleToGetBackFrom
  nameWithType: PathFinder.PathingCell.possibleToGetBackFrom
  fullName: PathFinder.PathingCell.possibleToGetBackFrom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.possibleToGetBackFrom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool possibleToGetBackFrom
    return:
      type: System.Boolean
    content.vb: Public possibleToGetBackFrom As Boolean
- uid: Global.PathFinder.PathingCell.worldCoordinate
  commentId: F:Global.PathFinder.PathingCell.worldCoordinate
  id: worldCoordinate
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: worldCoordinate
  nameWithType: PathFinder.PathingCell.worldCoordinate
  fullName: PathFinder.PathingCell.worldCoordinate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.PathingCell.worldCoordinate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate worldCoordinate
    return:
      type: Global.WorldCoordinate
    content.vb: Public worldCoordinate As WorldCoordinate
- uid: Global.PathFinder.PathingCell.#ctor(WorldCoordinate)
  commentId: M:Global.PathFinder.PathingCell.#ctor(WorldCoordinate)
  id: '#ctor(WorldCoordinate)'
  parent: Global.PathFinder.PathingCell
  langs:
  - csharp
  - vb
  name: PathingCell(WorldCoordinate)
  nameWithType: PathFinder.PathingCell.PathingCell(WorldCoordinate)
  fullName: PathFinder.PathingCell.PathingCell(WorldCoordinate)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PathFinder.PathingCell</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathingCell(WorldCoordinate worldCoordinate)
    parameters:
    - id: worldCoordinate
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>worldCoordinate</parameter>
            <parameter>M:PathFinder.PathingCell.#ctor(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(worldCoordinate As WorldCoordinate)
  overload: Global.PathFinder.PathingCell.#ctor*
  nameWithType.vb: PathFinder.PathingCell.New(WorldCoordinate)
  fullName.vb: PathFinder.PathingCell.New(WorldCoordinate)
  name.vb: New(WorldCoordinate)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.PathFinder.PathingCell.#ctor*
  commentId: Overload:Global.PathFinder.PathingCell.#ctor
  isExternal: true
  href: Global.PathFinder.PathingCell.html#PathFinder_PathingCell__ctor_WorldCoordinate_
  name: PathingCell
  nameWithType: PathFinder.PathingCell.PathingCell
  fullName: PathFinder.PathingCell.PathingCell
  nameWithType.vb: PathFinder.PathingCell.New
  fullName.vb: PathFinder.PathingCell.New
  name.vb: New
