### YamlMime:ManagedReference
items:
- uid: Global.FPPolygonalCollider
  commentId: T:Global.FPPolygonalCollider
  id: FPPolygonalCollider
  parent: Global
  children:
  - Global.FPPolygonalCollider.#ctor
  - Global.FPPolygonalCollider.Init(FPPolygonalData)
  - Global.FPPolygonalCollider.OnDestroy
  - Global.FPPolygonalCollider.colliders
  - Global.FPPolygonalCollider.polygonalData
  langs:
  - csharp
  - vb
  name: FPPolygonalCollider
  nameWithType: FPPolygonalCollider
  fullName: FPPolygonalCollider
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FPPolygonalCollider</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FPPolygonalCollider : MonoBehaviour'
    content.vb: Public Class FPPolygonalCollider Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Global.FPPolygonalCollider.Init(FPPolygonalData)
  commentId: M:Global.FPPolygonalCollider.Init(FPPolygonalData)
  id: Init(FPPolygonalData)
  parent: Global.FPPolygonalCollider
  langs:
  - csharp
  - vb
  name: Init(FPPolygonalData)
  nameWithType: FPPolygonalCollider.Init(FPPolygonalData)
  fullName: FPPolygonalCollider.Init(FPPolygonalData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPPolygonalCollider.Init(FPPolygonalData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Init(FPPolygonalData polygonalData)
    parameters:
    - id: polygonalData
      type: Global.FPPolygonalData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>polygonalData</parameter>
            <parameter>M:FPPolygonalCollider.Init(FPPolygonalData)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Init(polygonalData As FPPolygonalData)
  overload: Global.FPPolygonalCollider.Init*
- uid: Global.FPPolygonalCollider.OnDestroy
  commentId: M:Global.FPPolygonalCollider.OnDestroy
  id: OnDestroy
  parent: Global.FPPolygonalCollider
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: FPPolygonalCollider.OnDestroy()
  fullName: FPPolygonalCollider.OnDestroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPPolygonalCollider.OnDestroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void OnDestroy()
    content.vb: Public Sub OnDestroy()
  overload: Global.FPPolygonalCollider.OnDestroy*
- uid: Global.FPPolygonalCollider.#ctor
  commentId: M:Global.FPPolygonalCollider.#ctor
  id: '#ctor'
  parent: Global.FPPolygonalCollider
  langs:
  - csharp
  - vb
  name: FPPolygonalCollider()
  nameWithType: FPPolygonalCollider.FPPolygonalCollider()
  fullName: FPPolygonalCollider.FPPolygonalCollider()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FPPolygonalCollider</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FPPolygonalCollider()
    content.vb: Public Sub New()
  overload: Global.FPPolygonalCollider.#ctor*
  nameWithType.vb: FPPolygonalCollider.New()
  fullName.vb: FPPolygonalCollider.New()
  name.vb: New()
- uid: Global.FPPolygonalCollider.polygonalData
  commentId: P:Global.FPPolygonalCollider.polygonalData
  id: polygonalData
  parent: Global.FPPolygonalCollider
  langs:
  - csharp
  - vb
  name: polygonalData
  nameWithType: FPPolygonalCollider.polygonalData
  fullName: FPPolygonalCollider.polygonalData
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FPPolygonalCollider.polygonalData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FPPolygonalData polygonalData { get; }
    parameters: []
    return:
      type: Global.FPPolygonalData
    content.vb: Public ReadOnly Property polygonalData As FPPolygonalData
  overload: Global.FPPolygonalCollider.polygonalData*
- uid: Global.FPPolygonalCollider.colliders
  commentId: P:Global.FPPolygonalCollider.colliders
  id: colliders
  parent: Global.FPPolygonalCollider
  langs:
  - csharp
  - vb
  name: colliders
  nameWithType: FPPolygonalCollider.colliders
  fullName: FPPolygonalCollider.colliders
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FPPolygonalCollider.colliders</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MeshCollider[] colliders { get; }
    parameters: []
    return:
      type: UnityEngine.MeshCollider[]
    content.vb: Public ReadOnly Property colliders As MeshCollider()
  overload: Global.FPPolygonalCollider.colliders*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FPPolygonalCollider.Init*
  commentId: Overload:Global.FPPolygonalCollider.Init
  isExternal: true
  href: Global.FPPolygonalCollider.html#FPPolygonalCollider_Init_FPPolygonalData_
  name: Init
  nameWithType: FPPolygonalCollider.Init
  fullName: FPPolygonalCollider.Init
- uid: Global.FPPolygonalData
  commentId: T:Global.FPPolygonalData
  isExternal: true
  href: FPPolygonalData.html
  name: FPPolygonalData
  nameWithType: FPPolygonalData
  fullName: FPPolygonalData
- uid: Global.FPPolygonalCollider.OnDestroy*
  commentId: Overload:Global.FPPolygonalCollider.OnDestroy
  isExternal: true
  href: Global.FPPolygonalCollider.html#FPPolygonalCollider_OnDestroy
  name: OnDestroy
  nameWithType: FPPolygonalCollider.OnDestroy
  fullName: FPPolygonalCollider.OnDestroy
- uid: Global.FPPolygonalCollider.#ctor*
  commentId: Overload:Global.FPPolygonalCollider.#ctor
  isExternal: true
  href: Global.FPPolygonalCollider.html#FPPolygonalCollider__ctor
  name: FPPolygonalCollider
  nameWithType: FPPolygonalCollider.FPPolygonalCollider
  fullName: FPPolygonalCollider.FPPolygonalCollider
  nameWithType.vb: FPPolygonalCollider.New
  fullName.vb: FPPolygonalCollider.New
  name.vb: New
- uid: Global.FPPolygonalCollider.polygonalData*
  commentId: Overload:Global.FPPolygonalCollider.polygonalData
  isExternal: true
  href: Global.FPPolygonalCollider.html#FPPolygonalCollider_polygonalData
  name: polygonalData
  nameWithType: FPPolygonalCollider.polygonalData
  fullName: FPPolygonalCollider.polygonalData
- uid: Global.FPPolygonalCollider.colliders*
  commentId: Overload:Global.FPPolygonalCollider.colliders
  isExternal: true
  href: Global.FPPolygonalCollider.html#FPPolygonalCollider_colliders
  name: colliders
  nameWithType: FPPolygonalCollider.colliders
  fullName: FPPolygonalCollider.colliders
- uid: UnityEngine.MeshCollider[]
  isExternal: true
  name: MeshCollider[]
  nameWithType: MeshCollider[]
  fullName: UnityEngine.MeshCollider[]
  nameWithType.vb: MeshCollider()
  fullName.vb: UnityEngine.MeshCollider()
  name.vb: MeshCollider()
  spec.csharp:
  - uid: UnityEngine.MeshCollider
    name: MeshCollider
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.MeshCollider
    name: MeshCollider
    isExternal: true
  - name: (
  - name: )
