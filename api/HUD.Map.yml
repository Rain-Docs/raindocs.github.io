### YamlMime:ManagedReference
items:
- uid: HUD.Map
  commentId: T:HUD.Map
  id: Map
  parent: HUD
  children:
  - HUD.Map.#ctor(HUD.HUD,HUD.Map.MapData)
  - HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)
  - HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)
  - HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)
  - HUD.Map.ClearSprites
  - HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)
  - HUD.Map.DestroyTextures
  - HUD.Map.DiscoverResolution
  - HUD.Map.Draw(System.Single)
  - HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)
  - HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)
  - HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)
  - HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)
  - HUD.Map.FindRegion(System.String)
  - HUD.Map.GetItemInShelter(System.Int32,System.Int32)
  - HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)
  - HUD.Map.GetSaveState
  - HUD.Map.MapScale
  - HUD.Map.OutOfFocus(System.Int32,System.Single)
  - HUD.Map.RefreshWarpMarkers
  - HUD.Map.RegionName
  - HUD.Map.RemoveKarmaFlower
  - HUD.Map.ResetNotRevealedMarkers
  - HUD.Map.RevealAllDiscovered
  - HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)
  - HUD.Map.STANDARDELEMENTLIST
  - HUD.Map.Update
  - HUD.Map.UpdateSpinningTopMarkers
  - HUD.Map.UseMapName
  - HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)
  - HUD.Map.backgroundBlack
  - HUD.Map.container
  - HUD.Map.counter
  - HUD.Map.cycleLabel
  - HUD.Map.depth
  - HUD.Map.discLoaded
  - HUD.Map.discoverTexture
  - HUD.Map.fade
  - HUD.Map.fadeCounter
  - HUD.Map.inFrontContainer
  - HUD.Map.itemMarkers
  - HUD.Map.lastDepth
  - HUD.Map.lastFade
  - HUD.Map.lastOnTexturePos
  - HUD.Map.lastPanPos
  - HUD.Map.layer
  - HUD.Map.mapData
  - HUD.Map.mapLoaded
  - HUD.Map.mapObjects
  - HUD.Map.mapSize
  - HUD.Map.mapSprites
  - HUD.Map.mapTexture
  - HUD.Map.notRevealedFadeMarkers
  - HUD.Map.panPos
  - HUD.Map.panVel
  - HUD.Map.playerMarker
  - HUD.Map.playerMarkerFade
  - HUD.Map.playerStandPos
  - HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)
  - HUD.Map.resetRevealCounter
  - HUD.Map.revealAllDiscovered
  - HUD.Map.revealFadePixels
  - HUD.Map.revealPixelsList
  - HUD.Map.revealTexture
  - HUD.Map.shatteredTerraceHintMarker
  - HUD.Map.speedUp
  - HUD.Map.swarmCircles
  - HUD.Map.warpConnections
  - HUD.Map.warpMapDiameter
  - HUD.Map.warpMarkers
  - HUD.Map.warpRegionIcons
  langs:
  - csharp
  - vb
  name: Map
  nameWithType: Map
  fullName: HUD.Map
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.Map</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Map : HudPart'
    content.vb: Public Class Map Inherits HudPart
  inheritance:
  - System.Object
  - HUD.HudPart
  inheritedMembers:
  - HUD.HudPart.hud
  - HUD.HudPart.slatedForDeletion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.Map.mapTexture
  commentId: F:HUD.Map.mapTexture
  id: mapTexture
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapTexture
  nameWithType: Map.mapTexture
  fullName: HUD.Map.mapTexture
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapTexture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Texture2D mapTexture
    return:
      type: UnityEngine.Texture2D
    content.vb: Public mapTexture As Texture2D
- uid: HUD.Map.revealTexture
  commentId: F:HUD.Map.revealTexture
  id: revealTexture
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: revealTexture
  nameWithType: Map.revealTexture
  fullName: HUD.Map.revealTexture
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.revealTexture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Texture2D revealTexture
    return:
      type: UnityEngine.Texture2D
    content.vb: Public revealTexture As Texture2D
- uid: HUD.Map.mapData
  commentId: F:HUD.Map.mapData
  id: mapData
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapData
  nameWithType: Map.mapData
  fullName: HUD.Map.mapData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.MapData mapData
    return:
      type: HUD.Map.MapData
    content.vb: Public mapData As Map.MapData
- uid: HUD.Map.revealPixelsList
  commentId: F:HUD.Map.revealPixelsList
  id: revealPixelsList
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: revealPixelsList
  nameWithType: Map.revealPixelsList
  fullName: HUD.Map.revealPixelsList
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.revealPixelsList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> revealPixelsList
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public revealPixelsList As List(Of IntVector2)
- uid: HUD.Map.revealFadePixels
  commentId: F:HUD.Map.revealFadePixels
  id: revealFadePixels
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: revealFadePixels
  nameWithType: Map.revealFadePixels
  fullName: HUD.Map.revealFadePixels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.revealFadePixels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> revealFadePixels
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public revealFadePixels As List(Of IntVector2)
- uid: HUD.Map.mapSize
  commentId: F:HUD.Map.mapSize
  id: mapSize
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapSize
  nameWithType: Map.mapSize
  fullName: HUD.Map.mapSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 mapSize
    return:
      type: UnityEngine.Vector2
    content.vb: Public mapSize As Vector2
- uid: HUD.Map.backgroundBlack
  commentId: F:HUD.Map.backgroundBlack
  id: backgroundBlack
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: backgroundBlack
  nameWithType: Map.backgroundBlack
  fullName: HUD.Map.backgroundBlack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.backgroundBlack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite backgroundBlack
    return:
      type: Global.FSprite
    content.vb: Public backgroundBlack As FSprite
- uid: HUD.Map.playerMarkerFade
  commentId: F:HUD.Map.playerMarkerFade
  id: playerMarkerFade
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: playerMarkerFade
  nameWithType: Map.playerMarkerFade
  fullName: HUD.Map.playerMarkerFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.playerMarkerFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite playerMarkerFade
    return:
      type: Global.FSprite
    content.vb: Public playerMarkerFade As FSprite
- uid: HUD.Map.playerMarker
  commentId: F:HUD.Map.playerMarker
  id: playerMarker
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: playerMarker
  nameWithType: Map.playerMarker
  fullName: HUD.Map.playerMarker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.playerMarker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle playerMarker
    return:
      type: HUD.HUDCircle
    content.vb: Public playerMarker As HUDCircle
- uid: HUD.Map.mapSprites
  commentId: F:HUD.Map.mapSprites
  id: mapSprites
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapSprites
  nameWithType: Map.mapSprites
  fullName: HUD.Map.mapSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite[] mapSprites
    return:
      type: Global.FSprite[]
    content.vb: Public mapSprites As FSprite()
- uid: HUD.Map.mapObjects
  commentId: F:HUD.Map.mapObjects
  id: mapObjects
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapObjects
  nameWithType: Map.mapObjects
  fullName: HUD.Map.mapObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.MapObject> mapObjects
    return:
      type: System.Collections.Generic.List{HUD.Map.MapObject}
    content.vb: Public mapObjects As List(Of Map.MapObject)
- uid: HUD.Map.notRevealedFadeMarkers
  commentId: F:HUD.Map.notRevealedFadeMarkers
  id: notRevealedFadeMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: notRevealedFadeMarkers
  nameWithType: Map.notRevealedFadeMarkers
  fullName: HUD.Map.notRevealedFadeMarkers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.notRevealedFadeMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.FadeInMarker> notRevealedFadeMarkers
    return:
      type: System.Collections.Generic.List{HUD.Map.FadeInMarker}
    content.vb: Public notRevealedFadeMarkers As List(Of Map.FadeInMarker)
- uid: HUD.Map.lastPanPos
  commentId: F:HUD.Map.lastPanPos
  id: lastPanPos
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: lastPanPos
  nameWithType: Map.lastPanPos
  fullName: HUD.Map.lastPanPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.lastPanPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPanPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPanPos As Vector2
- uid: HUD.Map.panPos
  commentId: F:HUD.Map.panPos
  id: panPos
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: panPos
  nameWithType: Map.panPos
  fullName: HUD.Map.panPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.panPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public panPos As Vector2
- uid: HUD.Map.panVel
  commentId: F:HUD.Map.panVel
  id: panVel
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: panVel
  nameWithType: Map.panVel
  fullName: HUD.Map.panVel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.panVel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panVel
    return:
      type: UnityEngine.Vector2
    content.vb: Public panVel As Vector2
- uid: HUD.Map.fade
  commentId: F:HUD.Map.fade
  id: fade
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: fade
  nameWithType: Map.fade
  fullName: HUD.Map.fade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.fade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fade
    return:
      type: System.Single
    content.vb: Public fade As Single
- uid: HUD.Map.lastFade
  commentId: F:HUD.Map.lastFade
  id: lastFade
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: lastFade
  nameWithType: Map.lastFade
  fullName: HUD.Map.lastFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.lastFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFade
    return:
      type: System.Single
    content.vb: Public lastFade As Single
- uid: HUD.Map.fadeCounter
  commentId: F:HUD.Map.fadeCounter
  id: fadeCounter
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: fadeCounter
  nameWithType: Map.fadeCounter
  fullName: HUD.Map.fadeCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.fadeCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int fadeCounter
    return:
      type: System.Int32
    content.vb: Public fadeCounter As Integer
- uid: HUD.Map.MapScale
  commentId: F:HUD.Map.MapScale
  id: MapScale
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: MapScale
  nameWithType: Map.MapScale
  fullName: HUD.Map.MapScale
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapScale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float MapScale
    return:
      type: System.Single
    content.vb: Public MapScale As Single
- uid: HUD.Map.DiscoverResolution
  commentId: F:HUD.Map.DiscoverResolution
  id: DiscoverResolution
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: DiscoverResolution
  nameWithType: Map.DiscoverResolution
  fullName: HUD.Map.DiscoverResolution
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.DiscoverResolution</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DiscoverResolution
    return:
      type: System.Single
    content.vb: Public DiscoverResolution As Single
- uid: HUD.Map.mapLoaded
  commentId: F:HUD.Map.mapLoaded
  id: mapLoaded
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: mapLoaded
  nameWithType: Map.mapLoaded
  fullName: HUD.Map.mapLoaded
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.mapLoaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool mapLoaded
    return:
      type: System.Boolean
    content.vb: Public mapLoaded As Boolean
- uid: HUD.Map.discLoaded
  commentId: F:HUD.Map.discLoaded
  id: discLoaded
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: discLoaded
  nameWithType: Map.discLoaded
  fullName: HUD.Map.discLoaded
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.discLoaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool discLoaded
    return:
      type: System.Boolean
    content.vb: Public discLoaded As Boolean
- uid: HUD.Map.revealAllDiscovered
  commentId: F:HUD.Map.revealAllDiscovered
  id: revealAllDiscovered
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: revealAllDiscovered
  nameWithType: Map.revealAllDiscovered
  fullName: HUD.Map.revealAllDiscovered
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.revealAllDiscovered</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool revealAllDiscovered
    return:
      type: System.Boolean
    content.vb: Public revealAllDiscovered As Boolean
- uid: HUD.Map.layer
  commentId: F:HUD.Map.layer
  id: layer
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: layer
  nameWithType: Map.layer
  fullName: HUD.Map.layer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.layer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int layer
    return:
      type: System.Int32
    content.vb: Public layer As Integer
- uid: HUD.Map.depth
  commentId: F:HUD.Map.depth
  id: depth
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: depth
  nameWithType: Map.depth
  fullName: HUD.Map.depth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.depth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float depth
    return:
      type: System.Single
    content.vb: Public depth As Single
- uid: HUD.Map.lastDepth
  commentId: F:HUD.Map.lastDepth
  id: lastDepth
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: lastDepth
  nameWithType: Map.lastDepth
  fullName: HUD.Map.lastDepth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.lastDepth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastDepth
    return:
      type: System.Single
    content.vb: Public lastDepth As Single
- uid: HUD.Map.resetRevealCounter
  commentId: F:HUD.Map.resetRevealCounter
  id: resetRevealCounter
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: resetRevealCounter
  nameWithType: Map.resetRevealCounter
  fullName: HUD.Map.resetRevealCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.resetRevealCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int resetRevealCounter
    return:
      type: System.Int32
    content.vb: Public resetRevealCounter As Integer
- uid: HUD.Map.counter
  commentId: F:HUD.Map.counter
  id: counter
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: counter
  nameWithType: Map.counter
  fullName: HUD.Map.counter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.counter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int counter
    return:
      type: System.Int32
    content.vb: Public counter As Integer
- uid: HUD.Map.playerStandPos
  commentId: F:HUD.Map.playerStandPos
  id: playerStandPos
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: playerStandPos
  nameWithType: Map.playerStandPos
  fullName: HUD.Map.playerStandPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.playerStandPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 playerStandPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public playerStandPos As Vector2
- uid: HUD.Map.lastOnTexturePos
  commentId: F:HUD.Map.lastOnTexturePos
  id: lastOnTexturePos
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: lastOnTexturePos
  nameWithType: Map.lastOnTexturePos
  fullName: HUD.Map.lastOnTexturePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.lastOnTexturePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 lastOnTexturePos
    return:
      type: RWCustom.IntVector2
    content.vb: Public lastOnTexturePos As IntVector2
- uid: HUD.Map.STANDARDELEMENTLIST
  commentId: F:HUD.Map.STANDARDELEMENTLIST
  id: STANDARDELEMENTLIST
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: STANDARDELEMENTLIST
  nameWithType: Map.STANDARDELEMENTLIST
  fullName: HUD.Map.STANDARDELEMENTLIST
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.STANDARDELEMENTLIST</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] STANDARDELEMENTLIST
    return:
      type: System.Boolean[]
    content.vb: Public STANDARDELEMENTLIST As Boolean()
- uid: HUD.Map.inFrontContainer
  commentId: F:HUD.Map.inFrontContainer
  id: inFrontContainer
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: inFrontContainer
  nameWithType: Map.inFrontContainer
  fullName: HUD.Map.inFrontContainer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.inFrontContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FContainer inFrontContainer
    return:
      type: Global.FContainer
    content.vb: Public inFrontContainer As FContainer
- uid: HUD.Map.swarmCircles
  commentId: F:HUD.Map.swarmCircles
  id: swarmCircles
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: swarmCircles
  nameWithType: Map.swarmCircles
  fullName: HUD.Map.swarmCircles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.swarmCircles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.SwarmCircle> swarmCircles
    return:
      type: System.Collections.Generic.List{HUD.Map.SwarmCircle}
    content.vb: Public swarmCircles As List(Of Map.SwarmCircle)
- uid: HUD.Map.speedUp
  commentId: F:HUD.Map.speedUp
  id: speedUp
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: speedUp
  nameWithType: Map.speedUp
  fullName: HUD.Map.speedUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.speedUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float speedUp
    return:
      type: System.Single
    content.vb: Public speedUp As Single
- uid: HUD.Map.cycleLabel
  commentId: F:HUD.Map.cycleLabel
  id: cycleLabel
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: cycleLabel
  nameWithType: Map.cycleLabel
  fullName: HUD.Map.cycleLabel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.cycleLabel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.CycleLabel cycleLabel
    return:
      type: HUD.Map.CycleLabel
    content.vb: Public cycleLabel As Map.CycleLabel
- uid: HUD.Map.warpMapDiameter
  commentId: F:HUD.Map.warpMapDiameter
  id: warpMapDiameter
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: warpMapDiameter
  nameWithType: Map.warpMapDiameter
  fullName: HUD.Map.warpMapDiameter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.warpMapDiameter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly float warpMapDiameter
    return:
      type: System.Single
    content.vb: Public ReadOnly warpMapDiameter As Single
- uid: HUD.Map.itemMarkers
  commentId: F:HUD.Map.itemMarkers
  id: itemMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: itemMarkers
  nameWithType: Map.itemMarkers
  fullName: HUD.Map.itemMarkers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.itemMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.ItemMarker> itemMarkers
    return:
      type: System.Collections.Generic.List{HUD.Map.ItemMarker}
    content.vb: Public itemMarkers As List(Of Map.ItemMarker)
- uid: HUD.Map.warpRegionIcons
  commentId: F:HUD.Map.warpRegionIcons
  id: warpRegionIcons
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: warpRegionIcons
  nameWithType: Map.warpRegionIcons
  fullName: HUD.Map.warpRegionIcons
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.warpRegionIcons</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.WarpRegionIcon> warpRegionIcons
    return:
      type: System.Collections.Generic.List{HUD.Map.WarpRegionIcon}
    content.vb: Public warpRegionIcons As List(Of Map.WarpRegionIcon)
- uid: HUD.Map.warpConnections
  commentId: F:HUD.Map.warpConnections
  id: warpConnections
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: warpConnections
  nameWithType: Map.warpConnections
  fullName: HUD.Map.warpConnections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.warpConnections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.WarpRegionConnection> warpConnections
    return:
      type: System.Collections.Generic.List{HUD.Map.WarpRegionConnection}
    content.vb: Public warpConnections As List(Of Map.WarpRegionConnection)
- uid: HUD.Map.warpMarkers
  commentId: F:HUD.Map.warpMarkers
  id: warpMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: warpMarkers
  nameWithType: Map.warpMarkers
  fullName: HUD.Map.warpMarkers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.warpMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Map.WarpMarker> warpMarkers
    return:
      type: System.Collections.Generic.List{HUD.Map.WarpMarker}
    content.vb: Public warpMarkers As List(Of Map.WarpMarker)
- uid: HUD.Map.shatteredTerraceHintMarker
  commentId: F:HUD.Map.shatteredTerraceHintMarker
  id: shatteredTerraceHintMarker
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: shatteredTerraceHintMarker
  nameWithType: Map.shatteredTerraceHintMarker
  fullName: HUD.Map.shatteredTerraceHintMarker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.shatteredTerraceHintMarker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.ShatteredTerraceSpinningTopMarker shatteredTerraceHintMarker
    return:
      type: HUD.Map.ShatteredTerraceSpinningTopMarker
    content.vb: Public shatteredTerraceHintMarker As Map.ShatteredTerraceSpinningTopMarker
- uid: HUD.Map.ResetNotRevealedMarkers
  commentId: M:HUD.Map.ResetNotRevealedMarkers
  id: ResetNotRevealedMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ResetNotRevealedMarkers()
  nameWithType: Map.ResetNotRevealedMarkers()
  fullName: HUD.Map.ResetNotRevealedMarkers()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ResetNotRevealedMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetNotRevealedMarkers()
    content.vb: Public Sub ResetNotRevealedMarkers()
  overload: HUD.Map.ResetNotRevealedMarkers*
- uid: HUD.Map.#ctor(HUD.HUD,HUD.Map.MapData)
  commentId: M:HUD.Map.#ctor(HUD.HUD,HUD.Map.MapData)
  id: '#ctor(HUD.HUD,HUD.Map.MapData)'
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: Map(HUD, MapData)
  nameWithType: Map.Map(HUD, Map.MapData)
  fullName: HUD.Map.Map(HUD.HUD, HUD.Map.MapData)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.Map</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map(HUD hud, Map.MapData mapData)
    parameters:
    - id: hud
      type: HUD.HUD
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hud</parameter>
            <parameter>M:HUD.Map.#ctor(HUD.HUD,HUD.Map.MapData)</parameter>
          </include>
        </markup>
    - id: mapData
      type: HUD.Map.MapData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mapData</parameter>
            <parameter>M:HUD.Map.#ctor(HUD.HUD,HUD.Map.MapData)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(hud As HUD, mapData As Map.MapData)
  overload: HUD.Map.#ctor*
  nameWithType.vb: Map.New(HUD, Map.MapData)
  fullName.vb: HUD.Map.New(HUD.HUD, HUD.Map.MapData)
  name.vb: New(HUD, MapData)
- uid: HUD.Map.GetSaveState
  commentId: M:HUD.Map.GetSaveState
  id: GetSaveState
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: GetSaveState()
  nameWithType: Map.GetSaveState()
  fullName: HUD.Map.GetSaveState()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.GetSaveState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SaveState GetSaveState()
    return:
      type: Global.SaveState
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.GetSaveState</parameter>
          </include>
        </markup>
    content.vb: Public Function GetSaveState() As SaveState
  overload: HUD.Map.GetSaveState*
- uid: HUD.Map.FindRegion(System.String)
  commentId: M:HUD.Map.FindRegion(System.String)
  id: FindRegion(System.String)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: FindRegion(string)
  nameWithType: Map.FindRegion(string)
  fullName: HUD.Map.FindRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.FindRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region FindRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:HUD.Map.FindRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.FindRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function FindRegion(name As String) As Region
  overload: HUD.Map.FindRegion*
  nameWithType.vb: Map.FindRegion(String)
  fullName.vb: HUD.Map.FindRegion(String)
  name.vb: FindRegion(String)
- uid: HUD.Map.UseMapName
  commentId: M:HUD.Map.UseMapName
  id: UseMapName
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: UseMapName()
  nameWithType: Map.UseMapName()
  fullName: HUD.Map.UseMapName()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.UseMapName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string UseMapName()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.UseMapName</parameter>
          </include>
        </markup>
    content.vb: Public Function UseMapName() As String
  overload: HUD.Map.UseMapName*
- uid: HUD.Map.Update
  commentId: M:HUD.Map.Update
  id: Update
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Map.Update()
  fullName: HUD.Map.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: HUD.HudPart.Update
  overload: HUD.Map.Update*
- uid: HUD.Map.RemoveKarmaFlower
  commentId: M:HUD.Map.RemoveKarmaFlower
  id: RemoveKarmaFlower
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: RemoveKarmaFlower()
  nameWithType: Map.RemoveKarmaFlower()
  fullName: HUD.Map.RemoveKarmaFlower()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.RemoveKarmaFlower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveKarmaFlower()
    content.vb: Public Sub RemoveKarmaFlower()
  overload: HUD.Map.RemoveKarmaFlower*
- uid: HUD.Map.RevealAllDiscovered
  commentId: M:HUD.Map.RevealAllDiscovered
  id: RevealAllDiscovered
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: RevealAllDiscovered()
  nameWithType: Map.RevealAllDiscovered()
  fullName: HUD.Map.RevealAllDiscovered()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.RevealAllDiscovered</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RevealAllDiscovered()
    content.vb: Public Sub RevealAllDiscovered()
  overload: HUD.Map.RevealAllDiscovered*
- uid: HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)
  commentId: M:HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)
  id: ExternalDiscover(UnityEngine.Vector2,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ExternalDiscover(Vector2, int)
  nameWithType: Map.ExternalDiscover(Vector2, int)
  fullName: HUD.Map.ExternalDiscover(UnityEngine.Vector2, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ExternalDiscover(Vector2 pos, int room)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.ExternalDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ExternalDiscover(pos As Vector2, room As Integer)
  overload: HUD.Map.ExternalDiscover*
  nameWithType.vb: Map.ExternalDiscover(Vector2, Integer)
  fullName.vb: HUD.Map.ExternalDiscover(UnityEngine.Vector2, Integer)
  name.vb: ExternalDiscover(Vector2, Integer)
- uid: HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)
  commentId: M:HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)
  id: ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ExternalSmallDiscover(Vector2, int)
  nameWithType: Map.ExternalSmallDiscover(Vector2, int)
  fullName: HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ExternalSmallDiscover(Vector2 pos, int room)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ExternalSmallDiscover(pos As Vector2, room As Integer)
  overload: HUD.Map.ExternalSmallDiscover*
  nameWithType.vb: Map.ExternalSmallDiscover(Vector2, Integer)
  fullName.vb: HUD.Map.ExternalSmallDiscover(UnityEngine.Vector2, Integer)
  name.vb: ExternalSmallDiscover(Vector2, Integer)
- uid: HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)
  commentId: M:HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)
  id: ExternalExitDiscover(UnityEngine.Vector2,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ExternalExitDiscover(Vector2, int)
  nameWithType: Map.ExternalExitDiscover(Vector2, int)
  fullName: HUD.Map.ExternalExitDiscover(UnityEngine.Vector2, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ExternalExitDiscover(Vector2 pos, int room)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.ExternalExitDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ExternalExitDiscover(pos As Vector2, room As Integer)
  overload: HUD.Map.ExternalExitDiscover*
  nameWithType.vb: Map.ExternalExitDiscover(Vector2, Integer)
  fullName.vb: HUD.Map.ExternalExitDiscover(UnityEngine.Vector2, Integer)
  name.vb: ExternalExitDiscover(Vector2, Integer)
- uid: HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)
  commentId: M:HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)
  id: ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ExternalOnePixelDiscover(Vector2, int)
  nameWithType: Map.ExternalOnePixelDiscover(Vector2, int)
  fullName: HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ExternalOnePixelDiscover(Vector2 pos, int room)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ExternalOnePixelDiscover(pos As Vector2, room As Integer)
  overload: HUD.Map.ExternalOnePixelDiscover*
  nameWithType.vb: Map.ExternalOnePixelDiscover(Vector2, Integer)
  fullName.vb: HUD.Map.ExternalOnePixelDiscover(UnityEngine.Vector2, Integer)
  name.vb: ExternalOnePixelDiscover(Vector2, Integer)
- uid: HUD.Map.GetItemInShelter(System.Int32,System.Int32)
  commentId: M:HUD.Map.GetItemInShelter(System.Int32,System.Int32)
  id: GetItemInShelter(System.Int32,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: GetItemInShelter(int, int)
  nameWithType: Map.GetItemInShelter(int, int)
  fullName: HUD.Map.GetItemInShelter(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.GetItemInShelter(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData? GetItemInShelter(int room, int index)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.GetItemInShelter(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:HUD.Map.GetItemInShelter(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.GetItemInShelter(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function GetItemInShelter(room As Integer, index As Integer) As Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData?
  overload: HUD.Map.GetItemInShelter*
  nameWithType.vb: Map.GetItemInShelter(Integer, Integer)
  fullName.vb: HUD.Map.GetItemInShelter(Integer, Integer)
  name.vb: GetItemInShelter(Integer, Integer)
- uid: HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)
  commentId: M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)
  id: GetItemInShelterFromWorld(World,System.Int32,System.Int32)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: GetItemInShelterFromWorld(World, int, int)
  nameWithType: Map.GetItemInShelterFromWorld(World, int, int)
  fullName: HUD.Map.GetItemInShelterFromWorld(World, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData? GetItemInShelterFromWorld(World world, int room, int index)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.GetItemInShelterFromWorld(World,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Shared Function GetItemInShelterFromWorld(world As World, room As Integer, index As Integer) As Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData?
  overload: HUD.Map.GetItemInShelterFromWorld*
  nameWithType.vb: Map.GetItemInShelterFromWorld(World, Integer, Integer)
  fullName.vb: HUD.Map.GetItemInShelterFromWorld(World, Integer, Integer)
  name.vb: GetItemInShelterFromWorld(World, Integer, Integer)
- uid: HUD.Map.Draw(System.Single)
  commentId: M:HUD.Map.Draw(System.Single)
  id: Draw(System.Single)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: Draw(float)
  nameWithType: Map.Draw(float)
  fullName: HUD.Map.Draw(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.Draw(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Draw(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.Map.Draw(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Draw(timeStacker As Single)
  overridden: HUD.HudPart.Draw(System.Single)
  overload: HUD.Map.Draw*
  nameWithType.vb: Map.Draw(Single)
  fullName.vb: HUD.Map.Draw(Single)
  name.vb: Draw(Single)
- uid: HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)
  commentId: M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)
  id: Alpha(System.Int32,System.Single,System.Boolean)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: Alpha(int, float, bool)
  nameWithType: Map.Alpha(int, float, bool)
  fullName: HUD.Map.Alpha(int, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Alpha(int layer, float timeStacker, bool compensateForLayersInFront)
    parameters:
    - id: layer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>layer</parameter>
            <parameter>M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: compensateForLayersInFront
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>compensateForLayersInFront</parameter>
            <parameter>M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.Alpha(System.Int32,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function Alpha(layer As Integer, timeStacker As Single, compensateForLayersInFront As Boolean) As Single
  overload: HUD.Map.Alpha*
  nameWithType.vb: Map.Alpha(Integer, Single, Boolean)
  fullName.vb: HUD.Map.Alpha(Integer, Single, Boolean)
  name.vb: Alpha(Integer, Single, Boolean)
- uid: HUD.Map.OutOfFocus(System.Int32,System.Single)
  commentId: M:HUD.Map.OutOfFocus(System.Int32,System.Single)
  id: OutOfFocus(System.Int32,System.Single)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: OutOfFocus(int, float)
  nameWithType: Map.OutOfFocus(int, float)
  fullName: HUD.Map.OutOfFocus(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.OutOfFocus(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float OutOfFocus(int layer, float timeStacker)
    parameters:
    - id: layer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>layer</parameter>
            <parameter>M:HUD.Map.OutOfFocus(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.Map.OutOfFocus(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.OutOfFocus(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function OutOfFocus(layer As Integer, timeStacker As Single) As Single
  overload: HUD.Map.OutOfFocus*
  nameWithType.vb: Map.OutOfFocus(Integer, Single)
  fullName.vb: HUD.Map.OutOfFocus(Integer, Single)
  name.vb: OutOfFocus(Integer, Single)
- uid: HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)
  commentId: M:HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)
  id: AlphaOfDefaultMaterial(System.Int32,System.Single)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: AlphaOfDefaultMaterial(int, float)
  nameWithType: Map.AlphaOfDefaultMaterial(int, float)
  fullName: HUD.Map.AlphaOfDefaultMaterial(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float AlphaOfDefaultMaterial(int layer, float timeStacker)
    parameters:
    - id: layer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>layer</parameter>
            <parameter>M:HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.AlphaOfDefaultMaterial(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function AlphaOfDefaultMaterial(layer As Integer, timeStacker As Single) As Single
  overload: HUD.Map.AlphaOfDefaultMaterial*
  nameWithType.vb: Map.AlphaOfDefaultMaterial(Integer, Single)
  fullName.vb: HUD.Map.AlphaOfDefaultMaterial(Integer, Single)
  name.vb: AlphaOfDefaultMaterial(Integer, Single)
- uid: HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)
  commentId: M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)
  id: RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: RoomToMapPos(Vector2, int, float)
  nameWithType: Map.RoomToMapPos(Vector2, int, float)
  fullName: HUD.Map.RoomToMapPos(UnityEngine.Vector2, int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RoomToMapPos(Vector2 pos, int room, float timeStacker)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.RoomToMapPos(UnityEngine.Vector2,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function RoomToMapPos(pos As Vector2, room As Integer, timeStacker As Single) As Vector2
  overload: HUD.Map.RoomToMapPos*
  nameWithType.vb: Map.RoomToMapPos(Vector2, Integer, Single)
  fullName.vb: HUD.Map.RoomToMapPos(UnityEngine.Vector2, Integer, Single)
  name.vb: RoomToMapPos(Vector2, Integer, Single)
- uid: HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)
  commentId: M:HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)
  id: DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: DestroyMapTexture(Dictionary<string, Texture2D>, string, Texture2D)
  nameWithType: Map.DestroyMapTexture(Dictionary<string, Texture2D>, string, Texture2D)
  fullName: HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary<string, UnityEngine.Texture2D>, string, UnityEngine.Texture2D)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void DestroyMapTexture(Dictionary<string, Texture2D> dict, string regionName, Texture2D oldTexture = null)
    parameters:
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dict</parameter>
            <parameter>M:HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    - id: regionName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionName</parameter>
            <parameter>M:HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    - id: oldTexture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldTexture</parameter>
            <parameter>M:HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D},System.String,UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub DestroyMapTexture(dict As Dictionary(Of String, Texture2D), regionName As String, oldTexture As Texture2D = Nothing)
  overload: HUD.Map.DestroyMapTexture*
  nameWithType.vb: Map.DestroyMapTexture(Dictionary(Of String, Texture2D), String, Texture2D)
  fullName.vb: HUD.Map.DestroyMapTexture(System.Collections.Generic.Dictionary(Of String, UnityEngine.Texture2D), String, UnityEngine.Texture2D)
  name.vb: DestroyMapTexture(Dictionary(Of String, Texture2D), String, Texture2D)
- uid: HUD.Map.ClearSprites
  commentId: M:HUD.Map.ClearSprites
  id: ClearSprites
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: ClearSprites()
  nameWithType: Map.ClearSprites()
  fullName: HUD.Map.ClearSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.ClearSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ClearSprites()
    content.vb: Public Overrides Sub ClearSprites()
  overridden: HUD.HudPart.ClearSprites
  overload: HUD.Map.ClearSprites*
- uid: HUD.Map.DestroyTextures
  commentId: M:HUD.Map.DestroyTextures
  id: DestroyTextures
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: DestroyTextures()
  nameWithType: Map.DestroyTextures()
  fullName: HUD.Map.DestroyTextures()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.DestroyTextures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DestroyTextures()
    content.vb: Public Sub DestroyTextures()
  overload: HUD.Map.DestroyTextures*
- uid: HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)
  commentId: M:HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)
  id: AddDiscoveryTexture(UnityEngine.Texture2D)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: AddDiscoveryTexture(Texture2D)
  nameWithType: Map.AddDiscoveryTexture(Texture2D)
  fullName: HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddDiscoveryTexture(Texture2D t2D)
    parameters:
    - id: t2D
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>t2D</parameter>
            <parameter>M:HUD.Map.AddDiscoveryTexture(UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddDiscoveryTexture(t2D As Texture2D)
  overload: HUD.Map.AddDiscoveryTexture*
- uid: HUD.Map.RefreshWarpMarkers
  commentId: M:HUD.Map.RefreshWarpMarkers
  id: RefreshWarpMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: RefreshWarpMarkers()
  nameWithType: Map.RefreshWarpMarkers()
  fullName: HUD.Map.RefreshWarpMarkers()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.RefreshWarpMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RefreshWarpMarkers()
    content.vb: Public Sub RefreshWarpMarkers()
  overload: HUD.Map.RefreshWarpMarkers*
- uid: HUD.Map.UpdateSpinningTopMarkers
  commentId: M:HUD.Map.UpdateSpinningTopMarkers
  id: UpdateSpinningTopMarkers
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: UpdateSpinningTopMarkers()
  nameWithType: Map.UpdateSpinningTopMarkers()
  fullName: HUD.Map.UpdateSpinningTopMarkers()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.UpdateSpinningTopMarkers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateSpinningTopMarkers()
    content.vb: Public Sub UpdateSpinningTopMarkers()
  overload: HUD.Map.UpdateSpinningTopMarkers*
- uid: HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)
  commentId: M:HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)
  id: addTracker(MoreSlugcats.PersistentObjectTracker)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: addTracker(PersistentObjectTracker)
  nameWithType: Map.addTracker(PersistentObjectTracker)
  fullName: HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void addTracker(PersistentObjectTracker tracker)
    parameters:
    - id: tracker
      type: MoreSlugcats.PersistentObjectTracker
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tracker</parameter>
            <parameter>M:HUD.Map.addTracker(MoreSlugcats.PersistentObjectTracker)</parameter>
          </include>
        </markup>
    content.vb: Public Sub addTracker(tracker As PersistentObjectTracker)
  overload: HUD.Map.addTracker*
- uid: HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)
  commentId: M:HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)
  id: removeTracker(MoreSlugcats.PersistentObjectTracker)
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: removeTracker(PersistentObjectTracker)
  nameWithType: Map.removeTracker(PersistentObjectTracker)
  fullName: HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void removeTracker(PersistentObjectTracker tracker)
    parameters:
    - id: tracker
      type: MoreSlugcats.PersistentObjectTracker
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tracker</parameter>
            <parameter>M:HUD.Map.removeTracker(MoreSlugcats.PersistentObjectTracker)</parameter>
          </include>
        </markup>
    content.vb: Public Sub removeTracker(tracker As PersistentObjectTracker)
  overload: HUD.Map.removeTracker*
- uid: HUD.Map.discoverTexture
  commentId: P:HUD.Map.discoverTexture
  id: discoverTexture
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: discoverTexture
  nameWithType: Map.discoverTexture
  fullName: HUD.Map.discoverTexture
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.Map.discoverTexture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Texture2D discoverTexture { get; set; }
    parameters: []
    return:
      type: UnityEngine.Texture2D
    content.vb: Public Property discoverTexture As Texture2D
  overload: HUD.Map.discoverTexture*
- uid: HUD.Map.RegionName
  commentId: P:HUD.Map.RegionName
  id: RegionName
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: RegionName
  nameWithType: Map.RegionName
  fullName: HUD.Map.RegionName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.Map.RegionName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string RegionName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RegionName As String
  overload: HUD.Map.RegionName*
- uid: HUD.Map.container
  commentId: P:HUD.Map.container
  id: container
  parent: HUD.Map
  langs:
  - csharp
  - vb
  name: container
  nameWithType: Map.container
  fullName: HUD.Map.container
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.Map.container</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FContainer container { get; }
    parameters: []
    return:
      type: Global.FContainer
    content.vb: Public ReadOnly Property container As FContainer
  overload: HUD.Map.container*
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: HUD.HudPart
  commentId: T:HUD.HudPart
  parent: HUD
  isExternal: true
  href: HUD.HudPart.html
  name: HudPart
  nameWithType: HudPart
  fullName: HUD.HudPart
- uid: HUD.HudPart.hud
  commentId: F:HUD.HudPart.hud
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_hud
  name: hud
  nameWithType: HudPart.hud
  fullName: HUD.HudPart.hud
- uid: HUD.HudPart.slatedForDeletion
  commentId: F:HUD.HudPart.slatedForDeletion
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_slatedForDeletion
  name: slatedForDeletion
  nameWithType: HudPart.slatedForDeletion
  fullName: HUD.HudPart.slatedForDeletion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: HUD.Map.MapData
  commentId: T:HUD.Map.MapData
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map.MapData
  nameWithType: Map.MapData
  fullName: HUD.Map.MapData
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapData
    name: MapData
    isExternal: true
    href: HUD.Map.MapData.html
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapData
    name: MapData
    isExternal: true
    href: HUD.Map.MapData.html
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: HUD.HUDCircle
  commentId: T:HUD.HUDCircle
  parent: HUD
  isExternal: true
  href: HUD.HUDCircle.html
  name: HUDCircle
  nameWithType: HUDCircle
  fullName: HUD.HUDCircle
- uid: Global.FSprite[]
  isExternal: true
  href: FSprite.html
  name: FSprite[]
  nameWithType: FSprite[]
  fullName: FSprite[]
  nameWithType.vb: FSprite()
  fullName.vb: FSprite()
  name.vb: FSprite()
  spec.csharp:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{HUD.Map.MapObject}
  commentId: T:System.Collections.Generic.List{HUD.Map.MapObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.MapObject>
  nameWithType: List<Map.MapObject>
  fullName: System.Collections.Generic.List<HUD.Map.MapObject>
  nameWithType.vb: List(Of Map.MapObject)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.MapObject)
  name.vb: List(Of Map.MapObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapObject
    name: MapObject
    isExternal: true
    href: HUD.Map.MapObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapObject
    name: MapObject
    isExternal: true
    href: HUD.Map.MapObject.html
  - name: )
- uid: System.Collections.Generic.List{HUD.Map.FadeInMarker}
  commentId: T:System.Collections.Generic.List{HUD.Map.FadeInMarker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.FadeInMarker>
  nameWithType: List<Map.FadeInMarker>
  fullName: System.Collections.Generic.List<HUD.Map.FadeInMarker>
  nameWithType.vb: List(Of Map.FadeInMarker)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.FadeInMarker)
  name.vb: List(Of Map.FadeInMarker)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.FadeInMarker
    name: FadeInMarker
    isExternal: true
    href: HUD.Map.FadeInMarker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.FadeInMarker
    name: FadeInMarker
    isExternal: true
    href: HUD.Map.FadeInMarker.html
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: System.Collections.Generic.List{HUD.Map.SwarmCircle}
  commentId: T:System.Collections.Generic.List{HUD.Map.SwarmCircle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.SwarmCircle>
  nameWithType: List<Map.SwarmCircle>
  fullName: System.Collections.Generic.List<HUD.Map.SwarmCircle>
  nameWithType.vb: List(Of Map.SwarmCircle)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.SwarmCircle)
  name.vb: List(Of Map.SwarmCircle)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.SwarmCircle
    name: SwarmCircle
    isExternal: true
    href: HUD.Map.SwarmCircle.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.SwarmCircle
    name: SwarmCircle
    isExternal: true
    href: HUD.Map.SwarmCircle.html
  - name: )
- uid: HUD.Map.CycleLabel
  commentId: T:HUD.Map.CycleLabel
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map.CycleLabel
  nameWithType: Map.CycleLabel
  fullName: HUD.Map.CycleLabel
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.CycleLabel
    name: CycleLabel
    isExternal: true
    href: HUD.Map.CycleLabel.html
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.CycleLabel
    name: CycleLabel
    isExternal: true
    href: HUD.Map.CycleLabel.html
- uid: System.Collections.Generic.List{HUD.Map.ItemMarker}
  commentId: T:System.Collections.Generic.List{HUD.Map.ItemMarker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.ItemMarker>
  nameWithType: List<Map.ItemMarker>
  fullName: System.Collections.Generic.List<HUD.Map.ItemMarker>
  nameWithType.vb: List(Of Map.ItemMarker)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.ItemMarker)
  name.vb: List(Of Map.ItemMarker)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ItemMarker
    name: ItemMarker
    isExternal: true
    href: HUD.Map.ItemMarker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ItemMarker
    name: ItemMarker
    isExternal: true
    href: HUD.Map.ItemMarker.html
  - name: )
- uid: System.Collections.Generic.List{HUD.Map.WarpRegionIcon}
  commentId: T:System.Collections.Generic.List{HUD.Map.WarpRegionIcon}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.WarpRegionIcon>
  nameWithType: List<Map.WarpRegionIcon>
  fullName: System.Collections.Generic.List<HUD.Map.WarpRegionIcon>
  nameWithType.vb: List(Of Map.WarpRegionIcon)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.WarpRegionIcon)
  name.vb: List(Of Map.WarpRegionIcon)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpRegionIcon
    name: WarpRegionIcon
    isExternal: true
    href: HUD.Map.WarpRegionIcon.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpRegionIcon
    name: WarpRegionIcon
    isExternal: true
    href: HUD.Map.WarpRegionIcon.html
  - name: )
- uid: System.Collections.Generic.List{HUD.Map.WarpRegionConnection}
  commentId: T:System.Collections.Generic.List{HUD.Map.WarpRegionConnection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.WarpRegionConnection>
  nameWithType: List<Map.WarpRegionConnection>
  fullName: System.Collections.Generic.List<HUD.Map.WarpRegionConnection>
  nameWithType.vb: List(Of Map.WarpRegionConnection)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.WarpRegionConnection)
  name.vb: List(Of Map.WarpRegionConnection)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpRegionConnection
    name: WarpRegionConnection
    isExternal: true
    href: HUD.Map.WarpRegionConnection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpRegionConnection
    name: WarpRegionConnection
    isExternal: true
    href: HUD.Map.WarpRegionConnection.html
  - name: )
- uid: System.Collections.Generic.List{HUD.Map.WarpMarker}
  commentId: T:System.Collections.Generic.List{HUD.Map.WarpMarker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Map.WarpMarker>
  nameWithType: List<Map.WarpMarker>
  fullName: System.Collections.Generic.List<HUD.Map.WarpMarker>
  nameWithType.vb: List(Of Map.WarpMarker)
  fullName.vb: System.Collections.Generic.List(Of HUD.Map.WarpMarker)
  name.vb: List(Of Map.WarpMarker)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpMarker
    name: WarpMarker
    isExternal: true
    href: HUD.Map.WarpMarker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.WarpMarker
    name: WarpMarker
    isExternal: true
    href: HUD.Map.WarpMarker.html
  - name: )
- uid: HUD.Map.ShatteredTerraceSpinningTopMarker
  commentId: T:HUD.Map.ShatteredTerraceSpinningTopMarker
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map.ShatteredTerraceSpinningTopMarker
  nameWithType: Map.ShatteredTerraceSpinningTopMarker
  fullName: HUD.Map.ShatteredTerraceSpinningTopMarker
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ShatteredTerraceSpinningTopMarker
    name: ShatteredTerraceSpinningTopMarker
    isExternal: true
    href: HUD.Map.ShatteredTerraceSpinningTopMarker.html
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ShatteredTerraceSpinningTopMarker
    name: ShatteredTerraceSpinningTopMarker
    isExternal: true
    href: HUD.Map.ShatteredTerraceSpinningTopMarker.html
- uid: HUD.Map.ResetNotRevealedMarkers*
  commentId: Overload:HUD.Map.ResetNotRevealedMarkers
  isExternal: true
  href: HUD.Map.html#HUD_Map_ResetNotRevealedMarkers
  name: ResetNotRevealedMarkers
  nameWithType: Map.ResetNotRevealedMarkers
  fullName: HUD.Map.ResetNotRevealedMarkers
- uid: HUD.Map.#ctor*
  commentId: Overload:HUD.Map.#ctor
  isExternal: true
  href: HUD.Map.html#HUD_Map__ctor_HUD_HUD_HUD_Map_MapData_
  name: Map
  nameWithType: Map.Map
  fullName: HUD.Map.Map
  nameWithType.vb: Map.New
  fullName.vb: HUD.Map.New
  name.vb: New
- uid: HUD.HUD
  commentId: T:HUD.HUD
  parent: HUD
  isExternal: true
  href: HUD.HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD.HUD
- uid: HUD.Map.GetSaveState*
  commentId: Overload:HUD.Map.GetSaveState
  isExternal: true
  href: HUD.Map.html#HUD_Map_GetSaveState
  name: GetSaveState
  nameWithType: Map.GetSaveState
  fullName: HUD.Map.GetSaveState
- uid: Global.SaveState
  commentId: T:Global.SaveState
  isExternal: true
  href: SaveState.html
  name: SaveState
  nameWithType: SaveState
  fullName: SaveState
- uid: HUD.Map.FindRegion*
  commentId: Overload:HUD.Map.FindRegion
  isExternal: true
  href: HUD.Map.html#HUD_Map_FindRegion_System_String_
  name: FindRegion
  nameWithType: Map.FindRegion
  fullName: HUD.Map.FindRegion
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Region
  commentId: T:Global.Region
  isExternal: true
  href: Region.html
  name: Region
  nameWithType: Region
  fullName: Region
- uid: HUD.Map.UseMapName*
  commentId: Overload:HUD.Map.UseMapName
  isExternal: true
  href: HUD.Map.html#HUD_Map_UseMapName
  name: UseMapName
  nameWithType: Map.UseMapName
  fullName: HUD.Map.UseMapName
- uid: HUD.HudPart.Update
  commentId: M:HUD.HudPart.Update
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_Update
  name: Update()
  nameWithType: HudPart.Update()
  fullName: HUD.HudPart.Update()
  spec.csharp:
  - uid: HUD.HudPart.Update
    name: Update
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Update
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.HudPart.Update
    name: Update
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Update
  - name: (
  - name: )
- uid: HUD.Map.Update*
  commentId: Overload:HUD.Map.Update
  isExternal: true
  href: HUD.Map.html#HUD_Map_Update
  name: Update
  nameWithType: Map.Update
  fullName: HUD.Map.Update
- uid: HUD.Map.RemoveKarmaFlower*
  commentId: Overload:HUD.Map.RemoveKarmaFlower
  isExternal: true
  href: HUD.Map.html#HUD_Map_RemoveKarmaFlower
  name: RemoveKarmaFlower
  nameWithType: Map.RemoveKarmaFlower
  fullName: HUD.Map.RemoveKarmaFlower
- uid: HUD.Map.RevealAllDiscovered*
  commentId: Overload:HUD.Map.RevealAllDiscovered
  isExternal: true
  href: HUD.Map.html#HUD_Map_RevealAllDiscovered
  name: RevealAllDiscovered
  nameWithType: Map.RevealAllDiscovered
  fullName: HUD.Map.RevealAllDiscovered
- uid: HUD.Map.ExternalDiscover*
  commentId: Overload:HUD.Map.ExternalDiscover
  isExternal: true
  href: HUD.Map.html#HUD_Map_ExternalDiscover_UnityEngine_Vector2_System_Int32_
  name: ExternalDiscover
  nameWithType: Map.ExternalDiscover
  fullName: HUD.Map.ExternalDiscover
- uid: HUD.Map.ExternalSmallDiscover*
  commentId: Overload:HUD.Map.ExternalSmallDiscover
  isExternal: true
  href: HUD.Map.html#HUD_Map_ExternalSmallDiscover_UnityEngine_Vector2_System_Int32_
  name: ExternalSmallDiscover
  nameWithType: Map.ExternalSmallDiscover
  fullName: HUD.Map.ExternalSmallDiscover
- uid: HUD.Map.ExternalExitDiscover*
  commentId: Overload:HUD.Map.ExternalExitDiscover
  isExternal: true
  href: HUD.Map.html#HUD_Map_ExternalExitDiscover_UnityEngine_Vector2_System_Int32_
  name: ExternalExitDiscover
  nameWithType: Map.ExternalExitDiscover
  fullName: HUD.Map.ExternalExitDiscover
- uid: HUD.Map.ExternalOnePixelDiscover*
  commentId: Overload:HUD.Map.ExternalOnePixelDiscover
  isExternal: true
  href: HUD.Map.html#HUD_Map_ExternalOnePixelDiscover_UnityEngine_Vector2_System_Int32_
  name: ExternalOnePixelDiscover
  nameWithType: Map.ExternalOnePixelDiscover
  fullName: HUD.Map.ExternalOnePixelDiscover
- uid: HUD.Map.GetItemInShelter*
  commentId: Overload:HUD.Map.GetItemInShelter
  isExternal: true
  href: HUD.Map.html#HUD_Map_GetItemInShelter_System_Int32_System_Int32_
  name: GetItemInShelter
  nameWithType: Map.GetItemInShelter
  fullName: HUD.Map.GetItemInShelter
- uid: System.Nullable{HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData}
  commentId: T:System.Nullable{HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData}
  parent: System
  definition: System.Nullable`1
  href: HUD.Map.html
  name: Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData?
  nameWithType: Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData?
  fullName: HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData?
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ShelterMarker
    name: ShelterMarker
    isExternal: true
    href: HUD.Map.ShelterMarker.html
  - name: .
  - uid: HUD.Map.ShelterMarker.ItemInShelterMarker
    name: ItemInShelterMarker
    isExternal: true
    href: HUD.Map.ShelterMarker.ItemInShelterMarker.html
  - name: .
  - uid: HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData
    name: ItemInShelterData
    isExternal: true
    href: HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData.html
  - name: '?'
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.ShelterMarker
    name: ShelterMarker
    isExternal: true
    href: HUD.Map.ShelterMarker.html
  - name: .
  - uid: HUD.Map.ShelterMarker.ItemInShelterMarker
    name: ItemInShelterMarker
    isExternal: true
    href: HUD.Map.ShelterMarker.ItemInShelterMarker.html
  - name: .
  - uid: HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData
    name: ItemInShelterData
    isExternal: true
    href: HUD.Map.ShelterMarker.ItemInShelterMarker.ItemInShelterData.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: HUD.Map.GetItemInShelterFromWorld*
  commentId: Overload:HUD.Map.GetItemInShelterFromWorld
  isExternal: true
  href: HUD.Map.html#HUD_Map_GetItemInShelterFromWorld_World_System_Int32_System_Int32_
  name: GetItemInShelterFromWorld
  nameWithType: Map.GetItemInShelterFromWorld
  fullName: HUD.Map.GetItemInShelterFromWorld
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: HUD.HudPart.Draw(System.Single)
  commentId: M:HUD.HudPart.Draw(System.Single)
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  name: Draw(float)
  nameWithType: HudPart.Draw(float)
  fullName: HUD.HudPart.Draw(float)
  nameWithType.vb: HudPart.Draw(Single)
  fullName.vb: HUD.HudPart.Draw(Single)
  name.vb: Draw(Single)
  spec.csharp:
  - uid: HUD.HudPart.Draw(System.Single)
    name: Draw
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: HUD.HudPart.Draw(System.Single)
    name: Draw
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_Draw_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: HUD.Map.Draw*
  commentId: Overload:HUD.Map.Draw
  isExternal: true
  href: HUD.Map.html#HUD_Map_Draw_System_Single_
  name: Draw
  nameWithType: Map.Draw
  fullName: HUD.Map.Draw
- uid: HUD.Map.Alpha*
  commentId: Overload:HUD.Map.Alpha
  isExternal: true
  href: HUD.Map.html#HUD_Map_Alpha_System_Int32_System_Single_System_Boolean_
  name: Alpha
  nameWithType: Map.Alpha
  fullName: HUD.Map.Alpha
- uid: HUD.Map.OutOfFocus*
  commentId: Overload:HUD.Map.OutOfFocus
  isExternal: true
  href: HUD.Map.html#HUD_Map_OutOfFocus_System_Int32_System_Single_
  name: OutOfFocus
  nameWithType: Map.OutOfFocus
  fullName: HUD.Map.OutOfFocus
- uid: HUD.Map.AlphaOfDefaultMaterial*
  commentId: Overload:HUD.Map.AlphaOfDefaultMaterial
  isExternal: true
  href: HUD.Map.html#HUD_Map_AlphaOfDefaultMaterial_System_Int32_System_Single_
  name: AlphaOfDefaultMaterial
  nameWithType: Map.AlphaOfDefaultMaterial
  fullName: HUD.Map.AlphaOfDefaultMaterial
- uid: HUD.Map.RoomToMapPos*
  commentId: Overload:HUD.Map.RoomToMapPos
  isExternal: true
  href: HUD.Map.html#HUD_Map_RoomToMapPos_UnityEngine_Vector2_System_Int32_System_Single_
  name: RoomToMapPos
  nameWithType: Map.RoomToMapPos
  fullName: HUD.Map.RoomToMapPos
- uid: HUD.Map.DestroyMapTexture*
  commentId: Overload:HUD.Map.DestroyMapTexture
  isExternal: true
  href: HUD.Map.html#HUD_Map_DestroyMapTexture_System_Collections_Generic_Dictionary_System_String_UnityEngine_Texture2D__System_String_UnityEngine_Texture2D_
  name: DestroyMapTexture
  nameWithType: Map.DestroyMapTexture
  fullName: HUD.Map.DestroyMapTexture
- uid: System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D}
  commentId: T:System.Collections.Generic.Dictionary{System.String,UnityEngine.Texture2D}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Texture2D>
  nameWithType: Dictionary<string, Texture2D>
  fullName: System.Collections.Generic.Dictionary<string, UnityEngine.Texture2D>
  nameWithType.vb: Dictionary(Of String, Texture2D)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, UnityEngine.Texture2D)
  name.vb: Dictionary(Of String, Texture2D)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Texture2D
    name: Texture2D
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Texture2D
    name: Texture2D
    isExternal: true
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: HUD.HudPart.ClearSprites
  commentId: M:HUD.HudPart.ClearSprites
  parent: HUD.HudPart
  isExternal: true
  href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  name: ClearSprites()
  nameWithType: HudPart.ClearSprites()
  fullName: HUD.HudPart.ClearSprites()
  spec.csharp:
  - uid: HUD.HudPart.ClearSprites
    name: ClearSprites
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.HudPart.ClearSprites
    name: ClearSprites
    isExternal: true
    href: HUD.HudPart.html#HUD_HudPart_ClearSprites
  - name: (
  - name: )
- uid: HUD.Map.ClearSprites*
  commentId: Overload:HUD.Map.ClearSprites
  isExternal: true
  href: HUD.Map.html#HUD_Map_ClearSprites
  name: ClearSprites
  nameWithType: Map.ClearSprites
  fullName: HUD.Map.ClearSprites
- uid: HUD.Map.DestroyTextures*
  commentId: Overload:HUD.Map.DestroyTextures
  isExternal: true
  href: HUD.Map.html#HUD_Map_DestroyTextures
  name: DestroyTextures
  nameWithType: Map.DestroyTextures
  fullName: HUD.Map.DestroyTextures
- uid: HUD.Map.AddDiscoveryTexture*
  commentId: Overload:HUD.Map.AddDiscoveryTexture
  isExternal: true
  href: HUD.Map.html#HUD_Map_AddDiscoveryTexture_UnityEngine_Texture2D_
  name: AddDiscoveryTexture
  nameWithType: Map.AddDiscoveryTexture
  fullName: HUD.Map.AddDiscoveryTexture
- uid: HUD.Map.RefreshWarpMarkers*
  commentId: Overload:HUD.Map.RefreshWarpMarkers
  isExternal: true
  href: HUD.Map.html#HUD_Map_RefreshWarpMarkers
  name: RefreshWarpMarkers
  nameWithType: Map.RefreshWarpMarkers
  fullName: HUD.Map.RefreshWarpMarkers
- uid: HUD.Map.UpdateSpinningTopMarkers*
  commentId: Overload:HUD.Map.UpdateSpinningTopMarkers
  isExternal: true
  href: HUD.Map.html#HUD_Map_UpdateSpinningTopMarkers
  name: UpdateSpinningTopMarkers
  nameWithType: Map.UpdateSpinningTopMarkers
  fullName: HUD.Map.UpdateSpinningTopMarkers
- uid: HUD.Map.addTracker*
  commentId: Overload:HUD.Map.addTracker
  isExternal: true
  href: HUD.Map.html#HUD_Map_addTracker_MoreSlugcats_PersistentObjectTracker_
  name: addTracker
  nameWithType: Map.addTracker
  fullName: HUD.Map.addTracker
- uid: MoreSlugcats.PersistentObjectTracker
  commentId: T:MoreSlugcats.PersistentObjectTracker
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.PersistentObjectTracker.html
  name: PersistentObjectTracker
  nameWithType: PersistentObjectTracker
  fullName: MoreSlugcats.PersistentObjectTracker
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: HUD.Map.removeTracker*
  commentId: Overload:HUD.Map.removeTracker
  isExternal: true
  href: HUD.Map.html#HUD_Map_removeTracker_MoreSlugcats_PersistentObjectTracker_
  name: removeTracker
  nameWithType: Map.removeTracker
  fullName: HUD.Map.removeTracker
- uid: HUD.Map.discoverTexture*
  commentId: Overload:HUD.Map.discoverTexture
  isExternal: true
  href: HUD.Map.html#HUD_Map_discoverTexture
  name: discoverTexture
  nameWithType: Map.discoverTexture
  fullName: HUD.Map.discoverTexture
- uid: HUD.Map.RegionName*
  commentId: Overload:HUD.Map.RegionName
  isExternal: true
  href: HUD.Map.html#HUD_Map_RegionName
  name: RegionName
  nameWithType: Map.RegionName
  fullName: HUD.Map.RegionName
- uid: HUD.Map.container*
  commentId: Overload:HUD.Map.container
  isExternal: true
  href: HUD.Map.html#HUD_Map_container
  name: container
  nameWithType: Map.container
  fullName: HUD.Map.container
