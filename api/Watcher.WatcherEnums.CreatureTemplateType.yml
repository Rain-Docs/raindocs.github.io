### YamlMime:ManagedReference
items:
- uid: Watcher.WatcherEnums.CreatureTemplateType
  commentId: T:Watcher.WatcherEnums.CreatureTemplateType
  id: WatcherEnums.CreatureTemplateType
  parent: Watcher
  children:
  - Watcher.WatcherEnums.CreatureTemplateType.#ctor
  - Watcher.WatcherEnums.CreatureTemplateType.Barnacle
  - Watcher.WatcherEnums.CreatureTemplateType.BasiliskLizard
  - Watcher.WatcherEnums.CreatureTemplateType.BigMoth
  - Watcher.WatcherEnums.CreatureTemplateType.BigSandGrub
  - Watcher.WatcherEnums.CreatureTemplateType.BlizzardLizard
  - Watcher.WatcherEnums.CreatureTemplateType.BoxWorm
  - Watcher.WatcherEnums.CreatureTemplateType.DrillCrab
  - Watcher.WatcherEnums.CreatureTemplateType.FireSprite
  - Watcher.WatcherEnums.CreatureTemplateType.Frog
  - Watcher.WatcherEnums.CreatureTemplateType.IndigoLizard
  - Watcher.WatcherEnums.CreatureTemplateType.Loach
  - Watcher.WatcherEnums.CreatureTemplateType.Rat
  - Watcher.WatcherEnums.CreatureTemplateType.Rattler
  - Watcher.WatcherEnums.CreatureTemplateType.RegisterValues
  - Watcher.WatcherEnums.CreatureTemplateType.RotLoach
  - Watcher.WatcherEnums.CreatureTemplateType.SandGrub
  - Watcher.WatcherEnums.CreatureTemplateType.ScavengerDisciple
  - Watcher.WatcherEnums.CreatureTemplateType.ScavengerTemplar
  - Watcher.WatcherEnums.CreatureTemplateType.SkyWhale
  - Watcher.WatcherEnums.CreatureTemplateType.SmallMoth
  - Watcher.WatcherEnums.CreatureTemplateType.Tardigrade
  - Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues
  langs:
  - csharp
  - vb
  name: WatcherEnums.CreatureTemplateType
  nameWithType: WatcherEnums.CreatureTemplateType
  fullName: Watcher.WatcherEnums.CreatureTemplateType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.WatcherEnums.CreatureTemplateType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class WatcherEnums.CreatureTemplateType
    content.vb: Public Class WatcherEnums.CreatureTemplateType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.WatcherEnums.CreatureTemplateType.DrillCrab
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.DrillCrab
  id: DrillCrab
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: DrillCrab
  nameWithType: WatcherEnums.CreatureTemplateType.DrillCrab
  fullName: Watcher.WatcherEnums.CreatureTemplateType.DrillCrab
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.DrillCrab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type DrillCrab
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared DrillCrab As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Barnacle
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Barnacle
  id: Barnacle
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Barnacle
  nameWithType: WatcherEnums.CreatureTemplateType.Barnacle
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Barnacle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Barnacle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Barnacle
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Barnacle As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.SandGrub
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.SandGrub
  id: SandGrub
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: SandGrub
  nameWithType: WatcherEnums.CreatureTemplateType.SandGrub
  fullName: Watcher.WatcherEnums.CreatureTemplateType.SandGrub
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.SandGrub</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type SandGrub
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared SandGrub As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.BigSandGrub
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.BigSandGrub
  id: BigSandGrub
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: BigSandGrub
  nameWithType: WatcherEnums.CreatureTemplateType.BigSandGrub
  fullName: Watcher.WatcherEnums.CreatureTemplateType.BigSandGrub
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.BigSandGrub</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type BigSandGrub
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared BigSandGrub As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.BigMoth
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.BigMoth
  id: BigMoth
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: BigMoth
  nameWithType: WatcherEnums.CreatureTemplateType.BigMoth
  fullName: Watcher.WatcherEnums.CreatureTemplateType.BigMoth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.BigMoth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type BigMoth
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared BigMoth As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.SmallMoth
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.SmallMoth
  id: SmallMoth
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: SmallMoth
  nameWithType: WatcherEnums.CreatureTemplateType.SmallMoth
  fullName: Watcher.WatcherEnums.CreatureTemplateType.SmallMoth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.SmallMoth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type SmallMoth
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared SmallMoth As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.BoxWorm
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.BoxWorm
  id: BoxWorm
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: BoxWorm
  nameWithType: WatcherEnums.CreatureTemplateType.BoxWorm
  fullName: Watcher.WatcherEnums.CreatureTemplateType.BoxWorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.BoxWorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type BoxWorm
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared BoxWorm As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.FireSprite
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.FireSprite
  id: FireSprite
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: FireSprite
  nameWithType: WatcherEnums.CreatureTemplateType.FireSprite
  fullName: Watcher.WatcherEnums.CreatureTemplateType.FireSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.FireSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type FireSprite
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared FireSprite As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Rattler
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Rattler
  id: Rattler
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Rattler
  nameWithType: WatcherEnums.CreatureTemplateType.Rattler
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Rattler
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Rattler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Rattler
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Rattler As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.SkyWhale
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.SkyWhale
  id: SkyWhale
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: SkyWhale
  nameWithType: WatcherEnums.CreatureTemplateType.SkyWhale
  fullName: Watcher.WatcherEnums.CreatureTemplateType.SkyWhale
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.SkyWhale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type SkyWhale
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared SkyWhale As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.ScavengerTemplar
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.ScavengerTemplar
  id: ScavengerTemplar
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: ScavengerTemplar
  nameWithType: WatcherEnums.CreatureTemplateType.ScavengerTemplar
  fullName: Watcher.WatcherEnums.CreatureTemplateType.ScavengerTemplar
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.ScavengerTemplar</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type ScavengerTemplar
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared ScavengerTemplar As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.ScavengerDisciple
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.ScavengerDisciple
  id: ScavengerDisciple
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: ScavengerDisciple
  nameWithType: WatcherEnums.CreatureTemplateType.ScavengerDisciple
  fullName: Watcher.WatcherEnums.CreatureTemplateType.ScavengerDisciple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.ScavengerDisciple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type ScavengerDisciple
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared ScavengerDisciple As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Loach
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Loach
  id: Loach
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Loach
  nameWithType: WatcherEnums.CreatureTemplateType.Loach
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Loach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Loach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Loach
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Loach As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.RotLoach
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.RotLoach
  id: RotLoach
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: RotLoach
  nameWithType: WatcherEnums.CreatureTemplateType.RotLoach
  fullName: Watcher.WatcherEnums.CreatureTemplateType.RotLoach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.RotLoach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type RotLoach
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared RotLoach As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.BlizzardLizard
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.BlizzardLizard
  id: BlizzardLizard
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: BlizzardLizard
  nameWithType: WatcherEnums.CreatureTemplateType.BlizzardLizard
  fullName: Watcher.WatcherEnums.CreatureTemplateType.BlizzardLizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.BlizzardLizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type BlizzardLizard
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared BlizzardLizard As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.BasiliskLizard
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.BasiliskLizard
  id: BasiliskLizard
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: BasiliskLizard
  nameWithType: WatcherEnums.CreatureTemplateType.BasiliskLizard
  fullName: Watcher.WatcherEnums.CreatureTemplateType.BasiliskLizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.BasiliskLizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type BasiliskLizard
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared BasiliskLizard As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.IndigoLizard
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.IndigoLizard
  id: IndigoLizard
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: IndigoLizard
  nameWithType: WatcherEnums.CreatureTemplateType.IndigoLizard
  fullName: Watcher.WatcherEnums.CreatureTemplateType.IndigoLizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.IndigoLizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type IndigoLizard
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared IndigoLizard As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Rat
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Rat
  id: Rat
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Rat
  nameWithType: WatcherEnums.CreatureTemplateType.Rat
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Rat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Rat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Rat
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Rat As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Frog
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Frog
  id: Frog
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Frog
  nameWithType: WatcherEnums.CreatureTemplateType.Frog
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Frog
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Frog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Frog
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Frog As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.Tardigrade
  commentId: F:Watcher.WatcherEnums.CreatureTemplateType.Tardigrade
  id: Tardigrade
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: Tardigrade
  nameWithType: WatcherEnums.CreatureTemplateType.Tardigrade
  fullName: Watcher.WatcherEnums.CreatureTemplateType.Tardigrade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.CreatureTemplateType.Tardigrade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CreatureTemplate.Type Tardigrade
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public Shared Tardigrade As CreatureTemplate.Type
- uid: Watcher.WatcherEnums.CreatureTemplateType.RegisterValues
  commentId: M:Watcher.WatcherEnums.CreatureTemplateType.RegisterValues
  id: RegisterValues
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: RegisterValues()
  nameWithType: WatcherEnums.CreatureTemplateType.RegisterValues()
  fullName: Watcher.WatcherEnums.CreatureTemplateType.RegisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.CreatureTemplateType.RegisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void RegisterValues()
    content.vb: Public Shared Sub RegisterValues()
  overload: Watcher.WatcherEnums.CreatureTemplateType.RegisterValues*
- uid: Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues
  commentId: M:Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues
  id: UnregisterValues
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: UnregisterValues()
  nameWithType: WatcherEnums.CreatureTemplateType.UnregisterValues()
  fullName: Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void UnregisterValues()
    content.vb: Public Shared Sub UnregisterValues()
  overload: Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues*
- uid: Watcher.WatcherEnums.CreatureTemplateType.#ctor
  commentId: M:Watcher.WatcherEnums.CreatureTemplateType.#ctor
  id: '#ctor'
  parent: Watcher.WatcherEnums.CreatureTemplateType
  langs:
  - csharp
  - vb
  name: CreatureTemplateType()
  nameWithType: WatcherEnums.CreatureTemplateType.CreatureTemplateType()
  fullName: Watcher.WatcherEnums.CreatureTemplateType.CreatureTemplateType()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.WatcherEnums.CreatureTemplateType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplateType()
    content.vb: Public Sub New()
  overload: Watcher.WatcherEnums.CreatureTemplateType.#ctor*
  nameWithType.vb: WatcherEnums.CreatureTemplateType.New()
  fullName.vb: Watcher.WatcherEnums.CreatureTemplateType.New()
  name.vb: New()
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: Watcher.WatcherEnums.CreatureTemplateType.RegisterValues*
  commentId: Overload:Watcher.WatcherEnums.CreatureTemplateType.RegisterValues
  isExternal: true
  href: Watcher.WatcherEnums.CreatureTemplateType.html#Watcher_WatcherEnums_CreatureTemplateType_RegisterValues
  name: RegisterValues
  nameWithType: WatcherEnums.CreatureTemplateType.RegisterValues
  fullName: Watcher.WatcherEnums.CreatureTemplateType.RegisterValues
- uid: Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues*
  commentId: Overload:Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues
  isExternal: true
  href: Watcher.WatcherEnums.CreatureTemplateType.html#Watcher_WatcherEnums_CreatureTemplateType_UnregisterValues
  name: UnregisterValues
  nameWithType: WatcherEnums.CreatureTemplateType.UnregisterValues
  fullName: Watcher.WatcherEnums.CreatureTemplateType.UnregisterValues
- uid: Watcher.WatcherEnums.CreatureTemplateType.#ctor*
  commentId: Overload:Watcher.WatcherEnums.CreatureTemplateType.#ctor
  isExternal: true
  href: Watcher.WatcherEnums.CreatureTemplateType.html#Watcher_WatcherEnums_CreatureTemplateType__ctor
  name: CreatureTemplateType
  nameWithType: WatcherEnums.CreatureTemplateType.CreatureTemplateType
  fullName: Watcher.WatcherEnums.CreatureTemplateType.CreatureTemplateType
  nameWithType.vb: WatcherEnums.CreatureTemplateType.New
  fullName.vb: Watcher.WatcherEnums.CreatureTemplateType.New
  name.vb: New
