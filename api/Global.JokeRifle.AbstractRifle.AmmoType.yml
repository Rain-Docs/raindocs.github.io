### YamlMime:ManagedReference
items:
- uid: Global.JokeRifle.AbstractRifle.AmmoType
  commentId: T:Global.JokeRifle.AbstractRifle.AmmoType
  id: JokeRifle.AbstractRifle.AmmoType
  parent: Global
  children:
  - Global.JokeRifle.AbstractRifle.AmmoType.#ctor(System.String,System.Boolean)
  - Global.JokeRifle.AbstractRifle.AmmoType.Ash
  - Global.JokeRifle.AbstractRifle.AmmoType.Bees
  - Global.JokeRifle.AbstractRifle.AmmoType.FireEgg
  - Global.JokeRifle.AbstractRifle.AmmoType.Firecracker
  - Global.JokeRifle.AbstractRifle.AmmoType.Fruit
  - Global.JokeRifle.AbstractRifle.AmmoType.Grenade
  - Global.JokeRifle.AbstractRifle.AmmoType.Light
  - Global.JokeRifle.AbstractRifle.AmmoType.Noodle
  - Global.JokeRifle.AbstractRifle.AmmoType.Pearl
  - Global.JokeRifle.AbstractRifle.AmmoType.Rock
  - Global.JokeRifle.AbstractRifle.AmmoType.Singularity
  - Global.JokeRifle.AbstractRifle.AmmoType.Void
  langs:
  - csharp
  - vb
  name: JokeRifle.AbstractRifle.AmmoType
  nameWithType: JokeRifle.AbstractRifle.AmmoType
  fullName: JokeRifle.AbstractRifle.AmmoType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:JokeRifle.AbstractRifle.AmmoType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class JokeRifle.AbstractRifle.AmmoType : ExtEnum<JokeRifle.AbstractRifle.AmmoType>, IComparable, IEquatable<JokeRifle.AbstractRifle.AmmoType>'
    content.vb: Public Class JokeRifle.AbstractRifle.AmmoType Inherits ExtEnum(Of JokeRifle.AbstractRifle.AmmoType) Implements IComparable, IEquatable(Of JokeRifle.AbstractRifle.AmmoType)
  inheritance:
  - System.Object
  - Global.ExtEnumBase
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  implements:
  - System.IComparable
  - System.IEquatable{JokeRifle.AbstractRifle.AmmoType}
  inheritedMembers:
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.values
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(System.Object)
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(ExtEnum{JokeRifle.AbstractRifle.AmmoType})
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(JokeRifle.AbstractRifle.AmmoType)
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.GetHashCode
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Unregister
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.valuesVersion
  - Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Index
  - Global.ExtEnumBase.value
  - Global.ExtEnumBase.valueHash
  - Global.ExtEnumBase.index
  - Global.ExtEnumBase.localVersion
  - Global.ExtEnumBase.enumType
  - Global.ExtEnumBase.valueDictionary
  - Global.ExtEnumBase.ToString
  - Global.ExtEnumBase.CompareTo(System.Object)
  - Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  - Global.ExtEnumBase.GetExtEnumType(System.Type)
  - Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  - Global.ExtEnumBase.GetNames(System.Type)
  - Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Rock
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Rock
  id: Rock
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Rock
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Rock
  fullName: JokeRifle.AbstractRifle.AmmoType.Rock
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Rock</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Rock
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Rock As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Grenade
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Grenade
  id: Grenade
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Grenade
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Grenade
  fullName: JokeRifle.AbstractRifle.AmmoType.Grenade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Grenade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Grenade
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Grenade As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Firecracker
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Firecracker
  id: Firecracker
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Firecracker
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Firecracker
  fullName: JokeRifle.AbstractRifle.AmmoType.Firecracker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Firecracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Firecracker
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Firecracker As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Pearl
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Pearl
  id: Pearl
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Pearl
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Pearl
  fullName: JokeRifle.AbstractRifle.AmmoType.Pearl
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Pearl</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Pearl
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Pearl As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Light
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Light
  id: Light
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Light
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Light
  fullName: JokeRifle.AbstractRifle.AmmoType.Light
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Light</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Light
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Light As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Ash
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Ash
  id: Ash
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Ash
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Ash
  fullName: JokeRifle.AbstractRifle.AmmoType.Ash
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Ash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Ash
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Ash As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Bees
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Bees
  id: Bees
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Bees
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Bees
  fullName: JokeRifle.AbstractRifle.AmmoType.Bees
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Bees</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Bees
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Bees As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Void
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Void
  id: Void
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Void
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Void
  fullName: JokeRifle.AbstractRifle.AmmoType.Void
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Void</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Void
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Void As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Fruit
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Fruit
  id: Fruit
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Fruit
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Fruit
  fullName: JokeRifle.AbstractRifle.AmmoType.Fruit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Fruit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Fruit
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Fruit As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Noodle
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Noodle
  id: Noodle
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Noodle
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Noodle
  fullName: JokeRifle.AbstractRifle.AmmoType.Noodle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Noodle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Noodle
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Noodle As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.FireEgg
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.FireEgg
  id: FireEgg
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: FireEgg
  nameWithType: JokeRifle.AbstractRifle.AmmoType.FireEgg
  fullName: JokeRifle.AbstractRifle.AmmoType.FireEgg
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.FireEgg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType FireEgg
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly FireEgg As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.Singularity
  commentId: F:Global.JokeRifle.AbstractRifle.AmmoType.Singularity
  id: Singularity
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: Singularity
  nameWithType: JokeRifle.AbstractRifle.AmmoType.Singularity
  fullName: JokeRifle.AbstractRifle.AmmoType.Singularity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:JokeRifle.AbstractRifle.AmmoType.Singularity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly JokeRifle.AbstractRifle.AmmoType Singularity
    return:
      type: Global.JokeRifle.AbstractRifle.AmmoType
    content.vb: Public Shared ReadOnly Singularity As JokeRifle.AbstractRifle.AmmoType
- uid: Global.JokeRifle.AbstractRifle.AmmoType.#ctor(System.String,System.Boolean)
  commentId: M:Global.JokeRifle.AbstractRifle.AmmoType.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Global.JokeRifle.AbstractRifle.AmmoType
  langs:
  - csharp
  - vb
  name: AmmoType(string, bool)
  nameWithType: JokeRifle.AbstractRifle.AmmoType.AmmoType(string, bool)
  fullName: JokeRifle.AbstractRifle.AmmoType.AmmoType(string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>JokeRifle.AbstractRifle.AmmoType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AmmoType(string value, bool register = false)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:JokeRifle.AbstractRifle.AmmoType.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: register
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>register</parameter>
            <parameter>M:JokeRifle.AbstractRifle.AmmoType.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(value As String, register As Boolean = False)
  overload: Global.JokeRifle.AbstractRifle.AmmoType.#ctor*
  nameWithType.vb: JokeRifle.AbstractRifle.AmmoType.New(String, Boolean)
  fullName.vb: JokeRifle.AbstractRifle.AmmoType.New(String, Boolean)
  name.vb: New(String, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ExtEnumBase
  commentId: T:Global.ExtEnumBase
  isExternal: true
  href: ExtEnumBase.html
  name: ExtEnumBase
  nameWithType: ExtEnumBase
  fullName: ExtEnumBase
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  commentId: T:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1
  href: ExtEnum-1.html
  name: ExtEnum<JokeRifle.AbstractRifle.AmmoType>
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType)
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType)
  name.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: )
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IEquatable{JokeRifle.AbstractRifle.AmmoType}
  commentId: T:System.IEquatable{JokeRifle.AbstractRifle.AmmoType}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<JokeRifle.AbstractRifle.AmmoType>
  nameWithType: IEquatable<JokeRifle.AbstractRifle.AmmoType>
  fullName: System.IEquatable<JokeRifle.AbstractRifle.AmmoType>
  nameWithType.vb: IEquatable(Of JokeRifle.AbstractRifle.AmmoType)
  fullName.vb: System.IEquatable(Of JokeRifle.AbstractRifle.AmmoType)
  name.vb: IEquatable(Of JokeRifle.AbstractRifle.AmmoType)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.values
  commentId: F:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.values
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.values
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.values
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.values
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).values
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).values
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(System.Object)
  commentId: M:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(System.Object)
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.Equals(System.Object)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(object)
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(object)
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(Object)
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(ExtEnum{JokeRifle.AbstractRifle.AmmoType})
  commentId: M:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(ExtEnum{JokeRifle.AbstractRifle.AmmoType})
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.Equals(ExtEnum{`0})
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<AmmoType>)
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(ExtEnum<JokeRifle.AbstractRifle.AmmoType>)
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(ExtEnum<JokeRifle.AbstractRifle.AmmoType>)
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(ExtEnum(Of JokeRifle.AbstractRifle.AmmoType))
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(ExtEnum(Of JokeRifle.AbstractRifle.AmmoType))
  name.vb: Equals(ExtEnum(Of AmmoType))
  spec.csharp:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(ExtEnum{JokeRifle.AbstractRifle.AmmoType})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(ExtEnum{JokeRifle.AbstractRifle.AmmoType})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: )
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(JokeRifle.AbstractRifle.AmmoType)
  commentId: M:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(JokeRifle.AbstractRifle.AmmoType)
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.Equals(`0)
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(AmmoType)
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(JokeRifle.AbstractRifle.AmmoType)
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Equals(JokeRifle.AbstractRifle.AmmoType)
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(JokeRifle.AbstractRifle.AmmoType)
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Equals(JokeRifle.AbstractRifle.AmmoType)
  spec.csharp:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(JokeRifle.AbstractRifle.AmmoType)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Equals(JokeRifle.AbstractRifle.AmmoType)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.GetHashCode
  commentId: M:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.GetHashCode
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.GetHashCode
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.GetHashCode()
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.GetHashCode()
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).GetHashCode()
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Unregister
  commentId: M:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Unregister
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.Unregister
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Unregister()
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Unregister()
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Unregister()
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.valuesVersion
  commentId: P:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.valuesVersion
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.valuesVersion
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.valuesVersion
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.valuesVersion
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).valuesVersion
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).valuesVersion
- uid: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Index
  commentId: P:Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}.Index
  parent: Global.ExtEnum{JokeRifle.AbstractRifle.AmmoType}
  definition: Global.ExtEnum`1.Index
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Index
  fullName: ExtEnum<JokeRifle.AbstractRifle.AmmoType>.Index
  nameWithType.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Index
  fullName.vb: ExtEnum(Of JokeRifle.AbstractRifle.AmmoType).Index
- uid: Global.ExtEnumBase.value
  commentId: F:Global.ExtEnumBase.value
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_value
  name: value
  nameWithType: ExtEnumBase.value
  fullName: ExtEnumBase.value
- uid: Global.ExtEnumBase.valueHash
  commentId: F:Global.ExtEnumBase.valueHash
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueHash
  name: valueHash
  nameWithType: ExtEnumBase.valueHash
  fullName: ExtEnumBase.valueHash
- uid: Global.ExtEnumBase.index
  commentId: F:Global.ExtEnumBase.index
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_index
  name: index
  nameWithType: ExtEnumBase.index
  fullName: ExtEnumBase.index
- uid: Global.ExtEnumBase.localVersion
  commentId: F:Global.ExtEnumBase.localVersion
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_localVersion
  name: localVersion
  nameWithType: ExtEnumBase.localVersion
  fullName: ExtEnumBase.localVersion
- uid: Global.ExtEnumBase.enumType
  commentId: F:Global.ExtEnumBase.enumType
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_enumType
  name: enumType
  nameWithType: ExtEnumBase.enumType
  fullName: ExtEnumBase.enumType
- uid: Global.ExtEnumBase.valueDictionary
  commentId: F:Global.ExtEnumBase.valueDictionary
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueDictionary
  name: valueDictionary
  nameWithType: ExtEnumBase.valueDictionary
  fullName: ExtEnumBase.valueDictionary
- uid: Global.ExtEnumBase.ToString
  commentId: M:Global.ExtEnumBase.ToString
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  name: ToString()
  nameWithType: ExtEnumBase.ToString()
  fullName: ExtEnumBase.ToString()
  spec.csharp:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
- uid: Global.ExtEnumBase.CompareTo(System.Object)
  commentId: M:Global.ExtEnumBase.CompareTo(System.Object)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: ExtEnumBase.CompareTo(object)
  fullName: ExtEnumBase.CompareTo(object)
  nameWithType.vb: ExtEnumBase.CompareTo(Object)
  fullName.vb: ExtEnumBase.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  name: Parse(Type, string, bool)
  nameWithType: ExtEnumBase.Parse(Type, string, bool)
  fullName: ExtEnumBase.Parse(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.Parse(Type, String, Boolean)
  fullName.vb: ExtEnumBase.Parse(System.Type, String, Boolean)
  name.vb: Parse(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  commentId: M:Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  name: TryParse(Type, string, bool, out ExtEnumBase)
  nameWithType: ExtEnumBase.TryParse(Type, string, bool, out ExtEnumBase)
  fullName: ExtEnumBase.TryParse(System.Type, string, bool, out ExtEnumBase)
  nameWithType.vb: ExtEnumBase.TryParse(Type, String, Boolean, ExtEnumBase)
  fullName.vb: ExtEnumBase.TryParse(System.Type, String, Boolean, ExtEnumBase)
  name.vb: TryParse(Type, String, Boolean, ExtEnumBase)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
- uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
  commentId: M:Global.ExtEnumBase.GetExtEnumType(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  name: GetExtEnumType(Type)
  nameWithType: ExtEnumBase.GetExtEnumType(Type)
  fullName: ExtEnumBase.GetExtEnumType(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  commentId: M:Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  name: TryGetExtEnumType(Type, out ExtEnumType)
  nameWithType: ExtEnumBase.TryGetExtEnumType(Type, out ExtEnumType)
  fullName: ExtEnumBase.TryGetExtEnumType(System.Type, out ExtEnumType)
  nameWithType.vb: ExtEnumBase.TryGetExtEnumType(Type, ExtEnumType)
  fullName.vb: ExtEnumBase.TryGetExtEnumType(System.Type, ExtEnumType)
  name.vb: TryGetExtEnumType(Type, ExtEnumType)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
- uid: Global.ExtEnumBase.GetNames(System.Type)
  commentId: M:Global.ExtEnumBase.GetNames(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  name: GetNames(Type)
  nameWithType: ExtEnumBase.GetNames(Type)
  fullName: ExtEnumBase.GetNames(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  name: IsDefined(Type, string, bool)
  nameWithType: ExtEnumBase.IsDefined(Type, string, bool)
  fullName: ExtEnumBase.IsDefined(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, String, Boolean)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, String, Boolean)
  name.vb: IsDefined(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  name: IsDefined(Type, int)
  nameWithType: ExtEnumBase.IsDefined(Type, int)
  fullName: ExtEnumBase.IsDefined(System.Type, int)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, Integer)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, Integer)
  name.vb: IsDefined(Type, Integer)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ExtEnum`1
  commentId: T:Global.ExtEnum`1
  isExternal: true
  href: ExtEnum-1.html
  name: ExtEnum<T>
  nameWithType: ExtEnum<T>
  fullName: ExtEnum<T>
  nameWithType.vb: ExtEnum(Of T)
  fullName.vb: ExtEnum(Of T)
  name.vb: ExtEnum(Of T)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ExtEnum`1.values
  commentId: F:Global.ExtEnum`1.values
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_values
  name: values
  nameWithType: ExtEnum<T>.values
  fullName: ExtEnum<T>.values
  nameWithType.vb: ExtEnum(Of T).values
  fullName.vb: ExtEnum(Of T).values
- uid: Global.ExtEnum`1.Equals(System.Object)
  commentId: M:Global.ExtEnum`1.Equals(System.Object)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals(object)
  nameWithType: ExtEnum<T>.Equals(object)
  fullName: ExtEnum<T>.Equals(object)
  nameWithType.vb: ExtEnum(Of T).Equals(Object)
  fullName.vb: ExtEnum(Of T).Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(System.Object)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.Equals(ExtEnum{`0})
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  name: Equals(ExtEnum<T>)
  nameWithType: ExtEnum<T>.Equals(ExtEnum<T>)
  fullName: ExtEnum<T>.Equals(ExtEnum<T>)
  nameWithType.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  name.vb: Equals(ExtEnum(Of T))
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals_ExtEnum__0__
  - name: (
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Global.ExtEnum`1.Equals(`0)
  commentId: M:Global.ExtEnum`1.Equals(`0)
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  name: Equals(T)
  nameWithType: ExtEnum<T>.Equals(T)
  fullName: ExtEnum<T>.Equals(T)
  nameWithType.vb: ExtEnum(Of T).Equals(T)
  fullName.vb: ExtEnum(Of T).Equals(T)
  spec.csharp:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Equals(`0)
    name: Equals
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Equals__0_
  - name: (
  - name: T
  - name: )
- uid: Global.ExtEnum`1.GetHashCode
  commentId: M:Global.ExtEnum`1.GetHashCode
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode()
  nameWithType: ExtEnum<T>.GetHashCode()
  fullName: ExtEnum<T>.GetHashCode()
  nameWithType.vb: ExtEnum(Of T).GetHashCode()
  fullName.vb: ExtEnum(Of T).GetHashCode()
  spec.csharp:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.GetHashCode
    name: GetHashCode
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  - name: (
  - name: )
- uid: Global.ExtEnum`1.Unregister
  commentId: M:Global.ExtEnum`1.Unregister
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister()
  nameWithType: ExtEnum<T>.Unregister()
  fullName: ExtEnum<T>.Unregister()
  nameWithType.vb: ExtEnum(Of T).Unregister()
  fullName.vb: ExtEnum(Of T).Unregister()
  spec.csharp:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnum`1.Unregister
    name: Unregister
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  - name: (
  - name: )
- uid: Global.ExtEnum`1.valuesVersion
  commentId: P:Global.ExtEnum`1.valuesVersion
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<T>.valuesVersion
  fullName: ExtEnum<T>.valuesVersion
  nameWithType.vb: ExtEnum(Of T).valuesVersion
  fullName.vb: ExtEnum(Of T).valuesVersion
- uid: Global.ExtEnum`1.Index
  commentId: P:Global.ExtEnum`1.Index
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<T>.Index
  fullName: ExtEnum<T>.Index
  nameWithType.vb: ExtEnum(Of T).Index
  fullName.vb: ExtEnum(Of T).Index
- uid: Global.JokeRifle.AbstractRifle.AmmoType
  commentId: T:Global.JokeRifle.AbstractRifle.AmmoType
  isExternal: true
  href: JokeRifle.html
  name: JokeRifle.AbstractRifle.AmmoType
  nameWithType: JokeRifle.AbstractRifle.AmmoType
  fullName: JokeRifle.AbstractRifle.AmmoType
  spec.csharp:
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
  spec.vb:
  - uid: Global.JokeRifle
    name: JokeRifle
    isExternal: true
    href: JokeRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle
    name: AbstractRifle
    isExternal: true
    href: JokeRifle.AbstractRifle.html
  - name: .
  - uid: Global.JokeRifle.AbstractRifle.AmmoType
    name: AmmoType
    isExternal: true
    href: JokeRifle.AbstractRifle.AmmoType.html
- uid: Global.JokeRifle.AbstractRifle.AmmoType.#ctor*
  commentId: Overload:Global.JokeRifle.AbstractRifle.AmmoType.#ctor
  isExternal: true
  href: Global.JokeRifle.AbstractRifle.AmmoType.html#JokeRifle_AbstractRifle_AmmoType__ctor_System_String_System_Boolean_
  name: AmmoType
  nameWithType: JokeRifle.AbstractRifle.AmmoType.AmmoType
  fullName: JokeRifle.AbstractRifle.AmmoType.AmmoType
  nameWithType.vb: JokeRifle.AbstractRifle.AmmoType.New
  fullName.vb: JokeRifle.AbstractRifle.AmmoType.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
