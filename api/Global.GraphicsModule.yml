### YamlMime:ManagedReference
items:
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  id: GraphicsModule
  parent: Global
  children:
  - Global.GraphicsModule.#ctor(PhysicalObject,System.Boolean)
  - Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  - Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  - Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.GraphicsModule.BringSpritesToFront
  - Global.GraphicsModule.DEBUGLABELS
  - Global.GraphicsModule.DeactivateRippleHybrid
  - Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  - Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  - Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  - Global.GraphicsModule.Reset
  - Global.GraphicsModule.ShouldBeCulled
  - Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  - Global.GraphicsModule.Update
  - Global.GraphicsModule.bodyParts
  - Global.GraphicsModule.cullRange
  - Global.GraphicsModule.culled
  - Global.GraphicsModule.dispose
  - Global.GraphicsModule.internalContainerObjects
  - Global.GraphicsModule.lastCulled
  - Global.GraphicsModule.owner
  - Global.GraphicsModule.rippleHybridState
  langs:
  - csharp
  - vb
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:GraphicsModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public abstract class GraphicsModule : IDrawable'
    content.vb: Public MustInherit Class GraphicsModule Implements IDrawable
  inheritance:
  - System.Object
  derivedClasses:
  - Global.BigEelGraphics
  - Global.BigSpiderGraphics
  - Global.CentipedeGraphics
  - Global.CicadaGraphics
  - Global.ComplexGraphicsModule
  - Global.DaddyGraphics
  - Global.DebugGraphicsModule
  - Global.DeerGraphics
  - Global.DropBugGraphics
  - Global.EggBugGraphics
  - Global.FlyGraphics
  - Global.GarbageWormGraphics
  - Global.HazerGraphics
  - Global.JetFishGraphics
  - Global.LeechGraphics
  - Global.LizardGraphics
  - Global.LizardGraphicsDebug
  - Global.MirosBirdGraphics
  - Global.MouseGraphics
  - Global.NeedleWormGraphics
  - Global.OracleGraphics
  - Global.PlayerGraphics
  - Global.PoleMimicGraphics
  - Global.SkyWhaleGraphics
  - Global.SnailGraphics
  - Global.SpiderGraphics
  - Global.TempleGuardGraphics
  - Global.TentaclePlantGraphics
  - Global.TubeWormGraphics
  - Global.VultureGraphics
  - Global.VultureGrubGraphics
  - MoreSlugcats.InspectorGraphics
  - MoreSlugcats.StowawayBugGraphics
  - MoreSlugcats.YeekGraphics
  - Watcher.BarnacleGraphics
  - Watcher.BigMothGraphics
  - Watcher.BigSandGrubGraphics
  - Watcher.BoxWormGraphics
  - Watcher.DrillCrabGraphics
  - Watcher.FireSpriteGraphics
  - Watcher.FrogGraphics
  - Watcher.LoachGraphics
  - Watcher.RatGraphics
  - Watcher.RattlerGraphics
  - Watcher.SandGrubGraphics
  - Watcher.TardigradeGraphics
  implements:
  - Global.IDrawable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.GraphicsModule.internalContainerObjects
  commentId: F:Global.GraphicsModule.internalContainerObjects
  id: internalContainerObjects
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: internalContainerObjects
  nameWithType: GraphicsModule.internalContainerObjects
  fullName: GraphicsModule.internalContainerObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.internalContainerObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<GraphicsModule.ObjectHeldInInternalContainer> internalContainerObjects
    return:
      type: System.Collections.Generic.List{GraphicsModule.ObjectHeldInInternalContainer}
    content.vb: Public internalContainerObjects As List(Of GraphicsModule.ObjectHeldInInternalContainer)
- uid: Global.GraphicsModule.bodyParts
  commentId: F:Global.GraphicsModule.bodyParts
  id: bodyParts
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: bodyParts
  nameWithType: GraphicsModule.bodyParts
  fullName: GraphicsModule.bodyParts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.bodyParts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyPart[] bodyParts
    return:
      type: Global.BodyPart[]
    content.vb: Public bodyParts As BodyPart()
- uid: Global.GraphicsModule.DEBUGLABELS
  commentId: F:Global.GraphicsModule.DEBUGLABELS
  id: DEBUGLABELS
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: DEBUGLABELS
  nameWithType: GraphicsModule.DEBUGLABELS
  fullName: GraphicsModule.DEBUGLABELS
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.DEBUGLABELS</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugLabel[] DEBUGLABELS
    return:
      type: Global.DebugLabel[]
    content.vb: Public DEBUGLABELS As DebugLabel()
- uid: Global.GraphicsModule.culled
  commentId: F:Global.GraphicsModule.culled
  id: culled
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: culled
  nameWithType: GraphicsModule.culled
  fullName: GraphicsModule.culled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.culled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool culled
    return:
      type: System.Boolean
    content.vb: Public culled As Boolean
- uid: Global.GraphicsModule.lastCulled
  commentId: F:Global.GraphicsModule.lastCulled
  id: lastCulled
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: lastCulled
  nameWithType: GraphicsModule.lastCulled
  fullName: GraphicsModule.lastCulled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.lastCulled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastCulled
    return:
      type: System.Boolean
    content.vb: Public lastCulled As Boolean
- uid: Global.GraphicsModule.dispose
  commentId: F:Global.GraphicsModule.dispose
  id: dispose
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: dispose
  nameWithType: GraphicsModule.dispose
  fullName: GraphicsModule.dispose
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.dispose</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dispose
    return:
      type: System.Boolean
    content.vb: Public dispose As Boolean
- uid: Global.GraphicsModule.cullRange
  commentId: F:Global.GraphicsModule.cullRange
  id: cullRange
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: cullRange
  nameWithType: GraphicsModule.cullRange
  fullName: GraphicsModule.cullRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GraphicsModule.cullRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float cullRange
    return:
      type: System.Single
    content.vb: Public cullRange As Single
- uid: Global.GraphicsModule.#ctor(PhysicalObject,System.Boolean)
  commentId: M:Global.GraphicsModule.#ctor(PhysicalObject,System.Boolean)
  id: '#ctor(PhysicalObject,System.Boolean)'
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: GraphicsModule(PhysicalObject, bool)
  nameWithType: GraphicsModule.GraphicsModule(PhysicalObject, bool)
  fullName: GraphicsModule.GraphicsModule(PhysicalObject, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>GraphicsModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GraphicsModule(PhysicalObject ow, bool internalContainers)
    parameters:
    - id: ow
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ow</parameter>
            <parameter>M:GraphicsModule.#ctor(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: internalContainers
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>internalContainers</parameter>
            <parameter>M:GraphicsModule.#ctor(PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ow As PhysicalObject, internalContainers As Boolean)
  overload: Global.GraphicsModule.#ctor*
  nameWithType.vb: GraphicsModule.New(PhysicalObject, Boolean)
  fullName.vb: GraphicsModule.New(PhysicalObject, Boolean)
  name.vb: New(PhysicalObject, Boolean)
- uid: Global.GraphicsModule.Update
  commentId: M:Global.GraphicsModule.Update
  id: Update
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: GraphicsModule.Update()
  fullName: GraphicsModule.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Global.GraphicsModule.Update*
- uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  id: SuckedIntoShortCut(UnityEngine.Vector2)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: SuckedIntoShortCut(Vector2)
  nameWithType: GraphicsModule.SuckedIntoShortCut(Vector2)
  fullName: GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SuckedIntoShortCut(Vector2 shortCutPosition)
    parameters:
    - id: shortCutPosition
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortCutPosition</parameter>
            <parameter>M:GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub SuckedIntoShortCut(shortCutPosition As Vector2)
  overload: Global.GraphicsModule.SuckedIntoShortCut*
- uid: Global.GraphicsModule.Reset
  commentId: M:Global.GraphicsModule.Reset
  id: Reset
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: GraphicsModule.Reset()
  fullName: GraphicsModule.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset()
  overload: Global.GraphicsModule.Reset*
- uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  commentId: M:Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  id: PushOutOf(UnityEngine.Vector2,System.Single)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: PushOutOf(Vector2, float)
  nameWithType: GraphicsModule.PushOutOf(Vector2, float)
  fullName: GraphicsModule.PushOutOf(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void PushOutOf(Vector2 pos, float rad)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub PushOutOf(pos As Vector2, rad As Single)
  overload: Global.GraphicsModule.PushOutOf*
  nameWithType.vb: GraphicsModule.PushOutOf(Vector2, Single)
  fullName.vb: GraphicsModule.PushOutOf(UnityEngine.Vector2, Single)
  name.vb: PushOutOf(Vector2, Single)
- uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.GraphicsModule.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.GraphicsModule.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.GraphicsModule.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.GraphicsModule.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  commentId: M:Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  id: AddObjectToInternalContainer(IDrawable,System.Int32)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: AddObjectToInternalContainer(IDrawable, int)
  nameWithType: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  fullName: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddObjectToInternalContainer(IDrawable obj, int container)
    parameters:
    - id: obj
      type: Global.IDrawable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)</parameter>
          </include>
        </markup>
    - id: container
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddObjectToInternalContainer(obj As IDrawable, container As Integer)
  overload: Global.GraphicsModule.AddObjectToInternalContainer*
  nameWithType.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  fullName.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  name.vb: AddObjectToInternalContainer(IDrawable, Integer)
- uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  commentId: M:Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  id: ReleaseAllInternallyContainedSprites
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ReleaseAllInternallyContainedSprites()
  nameWithType: GraphicsModule.ReleaseAllInternallyContainedSprites()
  fullName: GraphicsModule.ReleaseAllInternallyContainedSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ReleaseAllInternallyContainedSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseAllInternallyContainedSprites()
    content.vb: Public Sub ReleaseAllInternallyContainedSprites()
  overload: Global.GraphicsModule.ReleaseAllInternallyContainedSprites*
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  id: ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReleaseSpecificInternallyContainedObjectSprites(obj As PhysicalObject)
  overload: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites*
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  id: ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseSpecificInternallyContainedObjectSprites(IDrawable obj)
    parameters:
    - id: obj
      type: Global.IDrawable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReleaseSpecificInternallyContainedObjectSprites(obj As IDrawable)
  overload: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites*
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  id: ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ReleaseSpecificInternallyContainedObjectSprites(int)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReleaseSpecificInternallyContainedObjectSprites(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReleaseSpecificInternallyContainedObjectSprites(index As Integer)
  overload: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites*
  nameWithType.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  fullName.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  name.vb: ReleaseSpecificInternallyContainedObjectSprites(Integer)
- uid: Global.GraphicsModule.BringSpritesToFront
  commentId: M:Global.GraphicsModule.BringSpritesToFront
  id: BringSpritesToFront
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: BringSpritesToFront()
  nameWithType: GraphicsModule.BringSpritesToFront()
  fullName: GraphicsModule.BringSpritesToFront()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.BringSpritesToFront</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BringSpritesToFront()
    content.vb: Public Sub BringSpritesToFront()
  overload: Global.GraphicsModule.BringSpritesToFront*
- uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  commentId: M:Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  id: HypothermiaColorBlend(UnityEngine.Color)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: HypothermiaColorBlend(Color)
  nameWithType: GraphicsModule.HypothermiaColorBlend(Color)
  fullName: GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color HypothermiaColorBlend(Color oldCol)
    parameters:
    - id: oldCol
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldCol</parameter>
            <parameter>M:GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Function HypothermiaColorBlend(oldCol As Color) As Color
  overload: Global.GraphicsModule.HypothermiaColorBlend*
- uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  commentId: M:Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  id: ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ActivateRippleHybrid(float, RippleSide)
  nameWithType: GraphicsModule.ActivateRippleHybrid(float, RippleHybridVFX.RippleSide)
  fullName: GraphicsModule.ActivateRippleHybrid(float, Watcher.RippleHybridVFX.RippleSide)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ActivateRippleHybrid(float activationTime, RippleHybridVFX.RippleSide rippleMaskSide)
    parameters:
    - id: activationTime
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>activationTime</parameter>
            <parameter>M:GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    - id: rippleMaskSide
      type: Watcher.RippleHybridVFX.RippleSide
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rippleMaskSide</parameter>
            <parameter>M:GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ActivateRippleHybrid(activationTime As Single, rippleMaskSide As RippleHybridVFX.RippleSide)
  overload: Global.GraphicsModule.ActivateRippleHybrid*
  nameWithType.vb: GraphicsModule.ActivateRippleHybrid(Single, RippleHybridVFX.RippleSide)
  fullName.vb: GraphicsModule.ActivateRippleHybrid(Single, Watcher.RippleHybridVFX.RippleSide)
  name.vb: ActivateRippleHybrid(Single, RippleSide)
- uid: Global.GraphicsModule.DeactivateRippleHybrid
  commentId: M:Global.GraphicsModule.DeactivateRippleHybrid
  id: DeactivateRippleHybrid
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: DeactivateRippleHybrid()
  nameWithType: GraphicsModule.DeactivateRippleHybrid()
  fullName: GraphicsModule.DeactivateRippleHybrid()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GraphicsModule.DeactivateRippleHybrid</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DeactivateRippleHybrid()
    content.vb: Public Sub DeactivateRippleHybrid()
  overload: Global.GraphicsModule.DeactivateRippleHybrid*
- uid: Global.GraphicsModule.owner
  commentId: P:Global.GraphicsModule.owner
  id: owner
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: GraphicsModule.owner
  fullName: GraphicsModule.owner
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:GraphicsModule.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject owner { get; }
    parameters: []
    return:
      type: Global.PhysicalObject
    content.vb: Public ReadOnly Property owner As PhysicalObject
  overload: Global.GraphicsModule.owner*
- uid: Global.GraphicsModule.ShouldBeCulled
  commentId: P:Global.GraphicsModule.ShouldBeCulled
  id: ShouldBeCulled
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: ShouldBeCulled
  nameWithType: GraphicsModule.ShouldBeCulled
  fullName: GraphicsModule.ShouldBeCulled
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:GraphicsModule.ShouldBeCulled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool ShouldBeCulled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property ShouldBeCulled As Boolean
  overload: Global.GraphicsModule.ShouldBeCulled*
- uid: Global.GraphicsModule.rippleHybridState
  commentId: P:Global.GraphicsModule.rippleHybridState
  id: rippleHybridState
  parent: Global.GraphicsModule
  langs:
  - csharp
  - vb
  name: rippleHybridState
  nameWithType: GraphicsModule.rippleHybridState
  fullName: GraphicsModule.rippleHybridState
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:GraphicsModule.rippleHybridState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RippleHybridVFX.HybridState rippleHybridState { get; }
    parameters: []
    return:
      type: Watcher.RippleHybridVFX.HybridState
    content.vb: Public ReadOnly Property rippleHybridState As RippleHybridVFX.HybridState
  overload: Global.GraphicsModule.rippleHybridState*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{GraphicsModule.ObjectHeldInInternalContainer}
  commentId: T:System.Collections.Generic.List{GraphicsModule.ObjectHeldInInternalContainer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GraphicsModule.ObjectHeldInInternalContainer>
  nameWithType: List<GraphicsModule.ObjectHeldInInternalContainer>
  fullName: System.Collections.Generic.List<GraphicsModule.ObjectHeldInInternalContainer>
  nameWithType.vb: List(Of GraphicsModule.ObjectHeldInInternalContainer)
  fullName.vb: System.Collections.Generic.List(Of GraphicsModule.ObjectHeldInInternalContainer)
  name.vb: List(Of GraphicsModule.ObjectHeldInInternalContainer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.GraphicsModule
    name: GraphicsModule
    isExternal: true
    href: GraphicsModule.html
  - name: .
  - uid: Global.GraphicsModule.ObjectHeldInInternalContainer
    name: ObjectHeldInInternalContainer
    isExternal: true
    href: GraphicsModule.ObjectHeldInInternalContainer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.GraphicsModule
    name: GraphicsModule
    isExternal: true
    href: GraphicsModule.html
  - name: .
  - uid: Global.GraphicsModule.ObjectHeldInInternalContainer
    name: ObjectHeldInInternalContainer
    isExternal: true
    href: GraphicsModule.ObjectHeldInInternalContainer.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.BodyPart[]
  isExternal: true
  href: BodyPart.html
  name: BodyPart[]
  nameWithType: BodyPart[]
  fullName: BodyPart[]
  nameWithType.vb: BodyPart()
  fullName.vb: BodyPart()
  name.vb: BodyPart()
  spec.csharp:
  - uid: Global.BodyPart
    name: BodyPart
    isExternal: true
    href: BodyPart.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.BodyPart
    name: BodyPart
    isExternal: true
    href: BodyPart.html
  - name: (
  - name: )
- uid: Global.DebugLabel[]
  isExternal: true
  href: DebugLabel.html
  name: DebugLabel[]
  nameWithType: DebugLabel[]
  fullName: DebugLabel[]
  nameWithType.vb: DebugLabel()
  fullName.vb: DebugLabel()
  name.vb: DebugLabel()
  spec.csharp:
  - uid: Global.DebugLabel
    name: DebugLabel
    isExternal: true
    href: DebugLabel.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.DebugLabel
    name: DebugLabel
    isExternal: true
    href: DebugLabel.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.GraphicsModule.#ctor*
  commentId: Overload:Global.GraphicsModule.#ctor
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule__ctor_PhysicalObject_System_Boolean_
  name: GraphicsModule
  nameWithType: GraphicsModule.GraphicsModule
  fullName: GraphicsModule.GraphicsModule
  nameWithType.vb: GraphicsModule.New
  fullName.vb: GraphicsModule.New
  name.vb: New
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.GraphicsModule.Update*
  commentId: Overload:Global.GraphicsModule.Update
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Update
  name: Update
  nameWithType: GraphicsModule.Update
  fullName: GraphicsModule.Update
- uid: Global.GraphicsModule.SuckedIntoShortCut*
  commentId: Overload:Global.GraphicsModule.SuckedIntoShortCut
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  name: SuckedIntoShortCut
  nameWithType: GraphicsModule.SuckedIntoShortCut
  fullName: GraphicsModule.SuckedIntoShortCut
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.GraphicsModule.Reset*
  commentId: Overload:Global.GraphicsModule.Reset
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Reset
  name: Reset
  nameWithType: GraphicsModule.Reset
  fullName: GraphicsModule.Reset
- uid: Global.GraphicsModule.PushOutOf*
  commentId: Overload:Global.GraphicsModule.PushOutOf
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  name: PushOutOf
  nameWithType: GraphicsModule.PushOutOf
  fullName: GraphicsModule.PushOutOf
- uid: Global.GraphicsModule.InitiateSprites*
  commentId: Overload:Global.GraphicsModule.InitiateSprites
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: GraphicsModule.InitiateSprites
  fullName: GraphicsModule.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.GraphicsModule.DrawSprites*
  commentId: Overload:Global.GraphicsModule.DrawSprites
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: GraphicsModule.DrawSprites
  fullName: GraphicsModule.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.GraphicsModule.ApplyPalette*
  commentId: Overload:Global.GraphicsModule.ApplyPalette
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: GraphicsModule.ApplyPalette
  fullName: GraphicsModule.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.GraphicsModule.AddToContainer*
  commentId: Overload:Global.GraphicsModule.AddToContainer
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: GraphicsModule.AddToContainer
  fullName: GraphicsModule.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.GraphicsModule.AddObjectToInternalContainer*
  commentId: Overload:Global.GraphicsModule.AddObjectToInternalContainer
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  name: AddObjectToInternalContainer
  nameWithType: GraphicsModule.AddObjectToInternalContainer
  fullName: GraphicsModule.AddObjectToInternalContainer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites*
  commentId: Overload:Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  name: ReleaseAllInternallyContainedSprites
  nameWithType: GraphicsModule.ReleaseAllInternallyContainedSprites
  fullName: GraphicsModule.ReleaseAllInternallyContainedSprites
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites*
  commentId: Overload:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  name: ReleaseSpecificInternallyContainedObjectSprites
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites
- uid: Global.GraphicsModule.BringSpritesToFront*
  commentId: Overload:Global.GraphicsModule.BringSpritesToFront
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  name: BringSpritesToFront
  nameWithType: GraphicsModule.BringSpritesToFront
  fullName: GraphicsModule.BringSpritesToFront
- uid: Global.GraphicsModule.HypothermiaColorBlend*
  commentId: Overload:Global.GraphicsModule.HypothermiaColorBlend
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  name: HypothermiaColorBlend
  nameWithType: GraphicsModule.HypothermiaColorBlend
  fullName: GraphicsModule.HypothermiaColorBlend
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.GraphicsModule.ActivateRippleHybrid*
  commentId: Overload:Global.GraphicsModule.ActivateRippleHybrid
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  name: ActivateRippleHybrid
  nameWithType: GraphicsModule.ActivateRippleHybrid
  fullName: GraphicsModule.ActivateRippleHybrid
- uid: Watcher.RippleHybridVFX.RippleSide
  commentId: T:Watcher.RippleHybridVFX.RippleSide
  parent: Watcher
  isExternal: true
  href: Watcher.RippleHybridVFX.html
  name: RippleHybridVFX.RippleSide
  nameWithType: RippleHybridVFX.RippleSide
  fullName: Watcher.RippleHybridVFX.RippleSide
  spec.csharp:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  spec.vb:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: Global.GraphicsModule.DeactivateRippleHybrid*
  commentId: Overload:Global.GraphicsModule.DeactivateRippleHybrid
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  name: DeactivateRippleHybrid
  nameWithType: GraphicsModule.DeactivateRippleHybrid
  fullName: GraphicsModule.DeactivateRippleHybrid
- uid: Global.GraphicsModule.owner*
  commentId: Overload:Global.GraphicsModule.owner
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_owner
  name: owner
  nameWithType: GraphicsModule.owner
  fullName: GraphicsModule.owner
- uid: Global.GraphicsModule.ShouldBeCulled*
  commentId: Overload:Global.GraphicsModule.ShouldBeCulled
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ShouldBeCulled
  name: ShouldBeCulled
  nameWithType: GraphicsModule.ShouldBeCulled
  fullName: GraphicsModule.ShouldBeCulled
- uid: Global.GraphicsModule.rippleHybridState*
  commentId: Overload:Global.GraphicsModule.rippleHybridState
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_rippleHybridState
  name: rippleHybridState
  nameWithType: GraphicsModule.rippleHybridState
  fullName: GraphicsModule.rippleHybridState
- uid: Watcher.RippleHybridVFX.HybridState
  commentId: T:Watcher.RippleHybridVFX.HybridState
  parent: Watcher
  isExternal: true
  href: Watcher.RippleHybridVFX.html
  name: RippleHybridVFX.HybridState
  nameWithType: RippleHybridVFX.HybridState
  fullName: Watcher.RippleHybridVFX.HybridState
  spec.csharp:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.HybridState
    name: HybridState
    isExternal: true
    href: Watcher.RippleHybridVFX.HybridState.html
  spec.vb:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.HybridState
    name: HybridState
    isExternal: true
    href: Watcher.RippleHybridVFX.HybridState.html
