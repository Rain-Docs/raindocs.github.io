### YamlMime:ManagedReference
items:
- uid: Global.TerrainCurve
  commentId: T:Global.TerrainCurve
  id: TerrainCurve
  parent: Global
  children:
  - Global.TerrainCurve.#ctor(Room)
  - Global.TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)
  - Global.TerrainCurve.Contains(UnityEngine.Vector2)
  - Global.TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.TerrainCurve.GetCoverage(System.Int32,System.Int32)
  - Global.TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.TerrainCurve.ObstructsTile(RWCustom.IntVector2)
  - Global.TerrainCurve.ObstructsTile(System.Int32,System.Int32)
  - Global.TerrainCurve.SnapToTerrain(System.Single)
  - Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2)
  - Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)
  - Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)
  - Global.TerrainCurve.SurfaceTileLevel(System.Int32)
  - Global.TerrainCurve.Update(System.Boolean)
  - Global.TerrainCurve.UpdateHandles
  - Global.TerrainCurve.UpdateRubble
  - Global.TerrainCurve.UpdateSurfaceTileLevels
  - Global.TerrainCurve.depthSliderMax
  - Global.TerrainCurve.depthSliderMin
  - Global.TerrainCurve.edgeRadiusSliderMax
  - Global.TerrainCurve.maxSlideNormalY
  langs:
  - csharp
  - vb
  name: TerrainCurve
  nameWithType: TerrainCurve
  fullName: TerrainCurve
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TerrainCurve</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class TerrainCurve : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class TerrainCurve Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.TerrainCurve.maxSlideNormalY
  commentId: F:Global.TerrainCurve.maxSlideNormalY
  id: maxSlideNormalY
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: maxSlideNormalY
  nameWithType: TerrainCurve.maxSlideNormalY
  fullName: TerrainCurve.maxSlideNormalY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TerrainCurve.maxSlideNormalY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float maxSlideNormalY
    return:
      type: System.Single
    content.vb: Public Shared maxSlideNormalY As Single
- uid: Global.TerrainCurve.depthSliderMin
  commentId: F:Global.TerrainCurve.depthSliderMin
  id: depthSliderMin
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: depthSliderMin
  nameWithType: TerrainCurve.depthSliderMin
  fullName: TerrainCurve.depthSliderMin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TerrainCurve.depthSliderMin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly float depthSliderMin
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly depthSliderMin As Single
- uid: Global.TerrainCurve.depthSliderMax
  commentId: F:Global.TerrainCurve.depthSliderMax
  id: depthSliderMax
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: depthSliderMax
  nameWithType: TerrainCurve.depthSliderMax
  fullName: TerrainCurve.depthSliderMax
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TerrainCurve.depthSliderMax</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly float depthSliderMax
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly depthSliderMax As Single
- uid: Global.TerrainCurve.edgeRadiusSliderMax
  commentId: F:Global.TerrainCurve.edgeRadiusSliderMax
  id: edgeRadiusSliderMax
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: edgeRadiusSliderMax
  nameWithType: TerrainCurve.edgeRadiusSliderMax
  fullName: TerrainCurve.edgeRadiusSliderMax
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TerrainCurve.edgeRadiusSliderMax</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly float edgeRadiusSliderMax
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly edgeRadiusSliderMax As Single
- uid: Global.TerrainCurve.#ctor(Room)
  commentId: M:Global.TerrainCurve.#ctor(Room)
  id: '#ctor(Room)'
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: TerrainCurve(Room)
  nameWithType: TerrainCurve.TerrainCurve(Room)
  fullName: TerrainCurve.TerrainCurve(Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TerrainCurve</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TerrainCurve(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:TerrainCurve.#ctor(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room)
  overload: Global.TerrainCurve.#ctor*
  nameWithType.vb: TerrainCurve.New(Room)
  fullName.vb: TerrainCurve.New(Room)
  name.vb: New(Room)
- uid: Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)
  commentId: M:Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)
  id: SnapToTerrain(UnityEngine.Vector2,System.Single)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: SnapToTerrain(Vector2, float)
  nameWithType: TerrainCurve.SnapToTerrain(Vector2, float)
  fullName: TerrainCurve.SnapToTerrain(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SnapToTerrain(Vector2 center, float radius)
    parameters:
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: radius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radius</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function SnapToTerrain(center As Vector2, radius As Single) As Vector2
  overload: Global.TerrainCurve.SnapToTerrain*
  nameWithType.vb: TerrainCurve.SnapToTerrain(Vector2, Single)
  fullName.vb: TerrainCurve.SnapToTerrain(UnityEngine.Vector2, Single)
  name.vb: SnapToTerrain(Vector2, Single)
- uid: Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)
  commentId: M:Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)
  id: SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: SnapToTerrain(Vector2, float, out Vector2)
  nameWithType: TerrainCurve.SnapToTerrain(Vector2, float, out Vector2)
  fullName: TerrainCurve.SnapToTerrain(UnityEngine.Vector2, float, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SnapToTerrain(Vector2 center, float radius, out Vector2 normal)
    parameters:
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: radius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radius</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: normal
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>normal</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Function SnapToTerrain(center As Vector2, radius As Single, normal As Vector2) As Vector2
  overload: Global.TerrainCurve.SnapToTerrain*
  nameWithType.vb: TerrainCurve.SnapToTerrain(Vector2, Single, Vector2)
  fullName.vb: TerrainCurve.SnapToTerrain(UnityEngine.Vector2, Single, UnityEngine.Vector2)
  name.vb: SnapToTerrain(Vector2, Single, Vector2)
- uid: Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2)
  commentId: M:Global.TerrainCurve.SnapToTerrain(UnityEngine.Vector2)
  id: SnapToTerrain(UnityEngine.Vector2)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: SnapToTerrain(Vector2)
  nameWithType: TerrainCurve.SnapToTerrain(Vector2)
  fullName: TerrainCurve.SnapToTerrain(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SnapToTerrain(Vector2 center)
    parameters:
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function SnapToTerrain(center As Vector2) As Vector2
  overload: Global.TerrainCurve.SnapToTerrain*
- uid: Global.TerrainCurve.SnapToTerrain(System.Single)
  commentId: M:Global.TerrainCurve.SnapToTerrain(System.Single)
  id: SnapToTerrain(System.Single)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: SnapToTerrain(float)
  nameWithType: TerrainCurve.SnapToTerrain(float)
  fullName: TerrainCurve.SnapToTerrain(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.SnapToTerrain(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SnapToTerrain(float x)
    parameters:
    - id: x
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.SnapToTerrain(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function SnapToTerrain(x As Single) As Vector2
  overload: Global.TerrainCurve.SnapToTerrain*
  nameWithType.vb: TerrainCurve.SnapToTerrain(Single)
  fullName.vb: TerrainCurve.SnapToTerrain(Single)
  name.vb: SnapToTerrain(Single)
- uid: Global.TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)
  commentId: M:Global.TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)
  id: Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: Cast(Vector2, float, float, out Vector2)
  nameWithType: TerrainCurve.Cast(Vector2, float, float, out Vector2)
  fullName: TerrainCurve.Cast(UnityEngine.Vector2, float, float, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Cast(Vector2 center, float radius, float endX, out Vector2 normal)
    parameters:
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: radius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>radius</parameter>
            <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: endX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>endX</parameter>
            <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: normal
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>normal</parameter>
            <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.Cast(UnityEngine.Vector2,System.Single,System.Single,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Function Cast(center As Vector2, radius As Single, endX As Single, normal As Vector2) As Vector2
  overload: Global.TerrainCurve.Cast*
  nameWithType.vb: TerrainCurve.Cast(Vector2, Single, Single, Vector2)
  fullName.vb: TerrainCurve.Cast(UnityEngine.Vector2, Single, Single, UnityEngine.Vector2)
  name.vb: Cast(Vector2, Single, Single, Vector2)
- uid: Global.TerrainCurve.ObstructsTile(RWCustom.IntVector2)
  commentId: M:Global.TerrainCurve.ObstructsTile(RWCustom.IntVector2)
  id: ObstructsTile(RWCustom.IntVector2)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: ObstructsTile(IntVector2)
  nameWithType: TerrainCurve.ObstructsTile(IntVector2)
  fullName: TerrainCurve.ObstructsTile(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.ObstructsTile(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ObstructsTile(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:TerrainCurve.ObstructsTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.ObstructsTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function ObstructsTile(pos As IntVector2) As Boolean
  overload: Global.TerrainCurve.ObstructsTile*
- uid: Global.TerrainCurve.ObstructsTile(System.Int32,System.Int32)
  commentId: M:Global.TerrainCurve.ObstructsTile(System.Int32,System.Int32)
  id: ObstructsTile(System.Int32,System.Int32)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: ObstructsTile(int, int)
  nameWithType: TerrainCurve.ObstructsTile(int, int)
  fullName: TerrainCurve.ObstructsTile(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.ObstructsTile(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ObstructsTile(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:TerrainCurve.ObstructsTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:TerrainCurve.ObstructsTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.ObstructsTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ObstructsTile(x As Integer, y As Integer) As Boolean
  overload: Global.TerrainCurve.ObstructsTile*
  nameWithType.vb: TerrainCurve.ObstructsTile(Integer, Integer)
  fullName.vb: TerrainCurve.ObstructsTile(Integer, Integer)
  name.vb: ObstructsTile(Integer, Integer)
- uid: Global.TerrainCurve.SurfaceTileLevel(System.Int32)
  commentId: M:Global.TerrainCurve.SurfaceTileLevel(System.Int32)
  id: SurfaceTileLevel(System.Int32)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: SurfaceTileLevel(int)
  nameWithType: TerrainCurve.SurfaceTileLevel(int)
  fullName: TerrainCurve.SurfaceTileLevel(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.SurfaceTileLevel(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SurfaceTileLevel(int x)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:TerrainCurve.SurfaceTileLevel(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.SurfaceTileLevel(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SurfaceTileLevel(x As Integer) As Integer
  overload: Global.TerrainCurve.SurfaceTileLevel*
  nameWithType.vb: TerrainCurve.SurfaceTileLevel(Integer)
  fullName.vb: TerrainCurve.SurfaceTileLevel(Integer)
  name.vb: SurfaceTileLevel(Integer)
- uid: Global.TerrainCurve.GetCoverage(System.Int32,System.Int32)
  commentId: M:Global.TerrainCurve.GetCoverage(System.Int32,System.Int32)
  id: GetCoverage(System.Int32,System.Int32)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: GetCoverage(int, int)
  nameWithType: TerrainCurve.GetCoverage(int, int)
  fullName: TerrainCurve.GetCoverage(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.GetCoverage(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetCoverage(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:TerrainCurve.GetCoverage(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:TerrainCurve.GetCoverage(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.GetCoverage(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetCoverage(x As Integer, y As Integer) As Single
  overload: Global.TerrainCurve.GetCoverage*
  nameWithType.vb: TerrainCurve.GetCoverage(Integer, Integer)
  fullName.vb: TerrainCurve.GetCoverage(Integer, Integer)
  name.vb: GetCoverage(Integer, Integer)
- uid: Global.TerrainCurve.Contains(UnityEngine.Vector2)
  commentId: M:Global.TerrainCurve.Contains(UnityEngine.Vector2)
  id: Contains(UnityEngine.Vector2)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: Contains(Vector2)
  nameWithType: TerrainCurve.Contains(Vector2)
  fullName: TerrainCurve.Contains(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.Contains(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Contains(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:TerrainCurve.Contains(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TerrainCurve.Contains(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function Contains(pos As Vector2) As Boolean
  overload: Global.TerrainCurve.Contains*
- uid: Global.TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TerrainCurve.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.TerrainCurve.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:TerrainCurve.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.TerrainCurve.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:TerrainCurve.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.TerrainCurve.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.TerrainCurve.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: TerrainCurve.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.TerrainCurve.UpdateRubble
  commentId: M:Global.TerrainCurve.UpdateRubble
  id: UpdateRubble
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: UpdateRubble()
  nameWithType: TerrainCurve.UpdateRubble()
  fullName: TerrainCurve.UpdateRubble()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.UpdateRubble</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateRubble()
    content.vb: Public Sub UpdateRubble()
  overload: Global.TerrainCurve.UpdateRubble*
- uid: Global.TerrainCurve.UpdateHandles
  commentId: M:Global.TerrainCurve.UpdateHandles
  id: UpdateHandles
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: UpdateHandles()
  nameWithType: TerrainCurve.UpdateHandles()
  fullName: TerrainCurve.UpdateHandles()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.UpdateHandles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateHandles()
    content.vb: Public Sub UpdateHandles()
  overload: Global.TerrainCurve.UpdateHandles*
- uid: Global.TerrainCurve.UpdateSurfaceTileLevels
  commentId: M:Global.TerrainCurve.UpdateSurfaceTileLevels
  id: UpdateSurfaceTileLevels
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: UpdateSurfaceTileLevels()
  nameWithType: TerrainCurve.UpdateSurfaceTileLevels()
  fullName: TerrainCurve.UpdateSurfaceTileLevels()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.UpdateSurfaceTileLevels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateSurfaceTileLevels()
    content.vb: Public Sub UpdateSurfaceTileLevels()
  overload: Global.TerrainCurve.UpdateSurfaceTileLevels*
- uid: Global.TerrainCurve.Update(System.Boolean)
  commentId: M:Global.TerrainCurve.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.TerrainCurve
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: TerrainCurve.Update(bool)
  fullName: TerrainCurve.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TerrainCurve.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:TerrainCurve.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.TerrainCurve.Update*
  nameWithType.vb: TerrainCurve.Update(Boolean)
  fullName.vb: TerrainCurve.Update(Boolean)
  name.vb: Update(Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.TerrainCurve.#ctor*
  commentId: Overload:Global.TerrainCurve.#ctor
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve__ctor_Room_
  name: TerrainCurve
  nameWithType: TerrainCurve.TerrainCurve
  fullName: TerrainCurve.TerrainCurve
  nameWithType.vb: TerrainCurve.New
  fullName.vb: TerrainCurve.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.TerrainCurve.SnapToTerrain*
  commentId: Overload:Global.TerrainCurve.SnapToTerrain
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_SnapToTerrain_UnityEngine_Vector2_System_Single_
  name: SnapToTerrain
  nameWithType: TerrainCurve.SnapToTerrain
  fullName: TerrainCurve.SnapToTerrain
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.TerrainCurve.Cast*
  commentId: Overload:Global.TerrainCurve.Cast
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_Cast_UnityEngine_Vector2_System_Single_System_Single_UnityEngine_Vector2__
  name: Cast
  nameWithType: TerrainCurve.Cast
  fullName: TerrainCurve.Cast
- uid: Global.TerrainCurve.ObstructsTile*
  commentId: Overload:Global.TerrainCurve.ObstructsTile
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_ObstructsTile_RWCustom_IntVector2_
  name: ObstructsTile
  nameWithType: TerrainCurve.ObstructsTile
  fullName: TerrainCurve.ObstructsTile
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.TerrainCurve.SurfaceTileLevel*
  commentId: Overload:Global.TerrainCurve.SurfaceTileLevel
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_SurfaceTileLevel_System_Int32_
  name: SurfaceTileLevel
  nameWithType: TerrainCurve.SurfaceTileLevel
  fullName: TerrainCurve.SurfaceTileLevel
- uid: Global.TerrainCurve.GetCoverage*
  commentId: Overload:Global.TerrainCurve.GetCoverage
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_GetCoverage_System_Int32_System_Int32_
  name: GetCoverage
  nameWithType: TerrainCurve.GetCoverage
  fullName: TerrainCurve.GetCoverage
- uid: Global.TerrainCurve.Contains*
  commentId: Overload:Global.TerrainCurve.Contains
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_Contains_UnityEngine_Vector2_
  name: Contains
  nameWithType: TerrainCurve.Contains
  fullName: TerrainCurve.Contains
- uid: Global.TerrainCurve.InitiateSprites*
  commentId: Overload:Global.TerrainCurve.InitiateSprites
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: TerrainCurve.InitiateSprites
  fullName: TerrainCurve.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.TerrainCurve.AddToContainer*
  commentId: Overload:Global.TerrainCurve.AddToContainer
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: TerrainCurve.AddToContainer
  fullName: TerrainCurve.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.TerrainCurve.ApplyPalette*
  commentId: Overload:Global.TerrainCurve.ApplyPalette
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: TerrainCurve.ApplyPalette
  fullName: TerrainCurve.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.TerrainCurve.DrawSprites*
  commentId: Overload:Global.TerrainCurve.DrawSprites
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: TerrainCurve.DrawSprites
  fullName: TerrainCurve.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.TerrainCurve.UpdateRubble*
  commentId: Overload:Global.TerrainCurve.UpdateRubble
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_UpdateRubble
  name: UpdateRubble
  nameWithType: TerrainCurve.UpdateRubble
  fullName: TerrainCurve.UpdateRubble
- uid: Global.TerrainCurve.UpdateHandles*
  commentId: Overload:Global.TerrainCurve.UpdateHandles
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_UpdateHandles
  name: UpdateHandles
  nameWithType: TerrainCurve.UpdateHandles
  fullName: TerrainCurve.UpdateHandles
- uid: Global.TerrainCurve.UpdateSurfaceTileLevels*
  commentId: Overload:Global.TerrainCurve.UpdateSurfaceTileLevels
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_UpdateSurfaceTileLevels
  name: UpdateSurfaceTileLevels
  nameWithType: TerrainCurve.UpdateSurfaceTileLevels
  fullName: TerrainCurve.UpdateSurfaceTileLevels
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.TerrainCurve.Update*
  commentId: Overload:Global.TerrainCurve.Update
  isExternal: true
  href: Global.TerrainCurve.html#TerrainCurve_Update_System_Boolean_
  name: Update
  nameWithType: TerrainCurve.Update
  fullName: TerrainCurve.Update
