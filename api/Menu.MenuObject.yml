### YamlMime:ManagedReference
items:
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  id: MenuObject
  parent: Menu
  children:
  - Menu.MenuObject.#ctor(Menu.Menu,Menu.MenuObject)
  - Menu.MenuObject.Container
  - Menu.MenuObject.GrafUpdate(System.Single)
  - Menu.MenuObject.RemoveSprites
  - Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  - Menu.MenuObject.Selected
  - Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  - Menu.MenuObject.Update
  - Menu.MenuObject.inactive
  - Menu.MenuObject.menu
  - Menu.MenuObject.myContainer
  - Menu.MenuObject.nextSelectable
  - Menu.MenuObject.owner
  - Menu.MenuObject.page
  - Menu.MenuObject.subObjects
  - Menu.MenuObject.toggled
  langs:
  - csharp
  - vb
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.MenuObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class MenuObject
    content.vb: Public MustInherit Class MenuObject
  inheritance:
  - System.Object
  derivedClasses:
  - Menu.InputTesterHolder
  - Menu.InputTesterHolder.Back
  - Menu.MenuScene
  - Menu.PositionedMenuObject
  - Menu.RainEffect
  - Menu.SandboxOverlay.MouseDragger
  - Menu.SlugcatSelectMenu.CustomColorInterface
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.MenuObject.menu
  commentId: F:Menu.MenuObject.menu
  id: menu
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: menu
  nameWithType: MenuObject.menu
  fullName: Menu.MenuObject.menu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.menu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Menu menu
    return:
      type: Menu.Menu
    content.vb: Public menu As Menu
- uid: Menu.MenuObject.subObjects
  commentId: F:Menu.MenuObject.subObjects
  id: subObjects
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: subObjects
  nameWithType: MenuObject.subObjects
  fullName: Menu.MenuObject.subObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.subObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<MenuObject> subObjects
    return:
      type: System.Collections.Generic.List{Menu.MenuObject}
    content.vb: Public subObjects As List(Of MenuObject)
- uid: Menu.MenuObject.owner
  commentId: F:Menu.MenuObject.owner
  id: owner
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: MenuObject.owner
  fullName: Menu.MenuObject.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuObject owner
    return:
      type: Menu.MenuObject
    content.vb: Public owner As MenuObject
- uid: Menu.MenuObject.nextSelectable
  commentId: F:Menu.MenuObject.nextSelectable
  id: nextSelectable
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: nextSelectable
  nameWithType: MenuObject.nextSelectable
  fullName: Menu.MenuObject.nextSelectable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.nextSelectable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuObject[] nextSelectable
    return:
      type: Menu.MenuObject[]
    content.vb: Public nextSelectable As MenuObject()
- uid: Menu.MenuObject.toggled
  commentId: F:Menu.MenuObject.toggled
  id: toggled
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: toggled
  nameWithType: MenuObject.toggled
  fullName: Menu.MenuObject.toggled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.toggled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool toggled
    return:
      type: System.Boolean
    content.vb: Public toggled As Boolean
- uid: Menu.MenuObject.inactive
  commentId: F:Menu.MenuObject.inactive
  id: inactive
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: inactive
  nameWithType: MenuObject.inactive
  fullName: Menu.MenuObject.inactive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.inactive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inactive
    return:
      type: System.Boolean
    content.vb: Public inactive As Boolean
- uid: Menu.MenuObject.myContainer
  commentId: F:Menu.MenuObject.myContainer
  id: myContainer
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: myContainer
  nameWithType: MenuObject.myContainer
  fullName: Menu.MenuObject.myContainer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuObject.myContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FContainer myContainer
    return:
      type: Global.FContainer
    content.vb: Protected myContainer As FContainer
- uid: Menu.MenuObject.#ctor(Menu.Menu,Menu.MenuObject)
  commentId: M:Menu.MenuObject.#ctor(Menu.Menu,Menu.MenuObject)
  id: '#ctor(Menu.Menu,Menu.MenuObject)'
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: MenuObject(Menu, MenuObject)
  nameWithType: MenuObject.MenuObject(Menu, MenuObject)
  fullName: Menu.MenuObject.MenuObject(Menu.Menu, Menu.MenuObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.MenuObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuObject(Menu menu, MenuObject owner)
    parameters:
    - id: menu
      type: Menu.Menu
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>menu</parameter>
            <parameter>M:Menu.MenuObject.#ctor(Menu.Menu,Menu.MenuObject)</parameter>
          </include>
        </markup>
    - id: owner
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.MenuObject.#ctor(Menu.Menu,Menu.MenuObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(menu As Menu, owner As MenuObject)
  overload: Menu.MenuObject.#ctor*
  nameWithType.vb: MenuObject.New(Menu, MenuObject)
  fullName.vb: Menu.MenuObject.New(Menu.Menu, Menu.MenuObject)
  name.vb: New(Menu, MenuObject)
- uid: Menu.MenuObject.Update
  commentId: M:Menu.MenuObject.Update
  id: Update
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: MenuObject.Update()
  fullName: Menu.MenuObject.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuObject.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Menu.MenuObject.Update*
- uid: Menu.MenuObject.GrafUpdate(System.Single)
  commentId: M:Menu.MenuObject.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: MenuObject.GrafUpdate(float)
  fullName: Menu.MenuObject.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuObject.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.MenuObject.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub GrafUpdate(timeStacker As Single)
  overload: Menu.MenuObject.GrafUpdate*
  nameWithType.vb: MenuObject.GrafUpdate(Single)
  fullName.vb: Menu.MenuObject.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  id: Singal(Menu.MenuObject,System.String)
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: Singal(MenuObject, string)
  nameWithType: MenuObject.Singal(MenuObject, string)
  fullName: Menu.MenuObject.Singal(Menu.MenuObject, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Singal(MenuObject sender, string message)
    parameters:
    - id: sender
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    - id: message
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Singal(sender As MenuObject, message As String)
  overload: Menu.MenuObject.Singal*
  nameWithType.vb: MenuObject.Singal(MenuObject, String)
  fullName.vb: Menu.MenuObject.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
- uid: Menu.MenuObject.RemoveSprites
  commentId: M:Menu.MenuObject.RemoveSprites
  id: RemoveSprites
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: RemoveSprites()
  nameWithType: MenuObject.RemoveSprites()
  fullName: Menu.MenuObject.RemoveSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuObject.RemoveSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void RemoveSprites()
    content.vb: Public Overridable Sub RemoveSprites()
  overload: Menu.MenuObject.RemoveSprites*
- uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  commentId: M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  id: RemoveSubObject(Menu.MenuObject)
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: RemoveSubObject(MenuObject)
  nameWithType: MenuObject.RemoveSubObject(MenuObject)
  fullName: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveSubObject(MenuObject obj)
    parameters:
    - id: obj
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveSubObject(obj As MenuObject)
  overload: Menu.MenuObject.RemoveSubObject*
- uid: Menu.MenuObject.Container
  commentId: P:Menu.MenuObject.Container
  id: Container
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: Container
  nameWithType: MenuObject.Container
  fullName: Menu.MenuObject.Container
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.MenuObject.Container</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual FContainer Container { get; set; }
    parameters: []
    return:
      type: Global.FContainer
    content.vb: Public Overridable Property Container As FContainer
  overload: Menu.MenuObject.Container*
- uid: Menu.MenuObject.Selected
  commentId: P:Menu.MenuObject.Selected
  id: Selected
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: Selected
  nameWithType: MenuObject.Selected
  fullName: Menu.MenuObject.Selected
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.MenuObject.Selected</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool Selected { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property Selected As Boolean
  overload: Menu.MenuObject.Selected*
- uid: Menu.MenuObject.page
  commentId: P:Menu.MenuObject.page
  id: page
  parent: Menu.MenuObject
  langs:
  - csharp
  - vb
  name: page
  nameWithType: MenuObject.page
  fullName: Menu.MenuObject.page
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.MenuObject.page</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Page page { get; }
    parameters: []
    return:
      type: Menu.Page
    content.vb: Public ReadOnly Property page As Page
  overload: Menu.MenuObject.page*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: System.Collections.Generic.List{Menu.MenuObject}
  commentId: T:System.Collections.Generic.List{Menu.MenuObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MenuObject>
  nameWithType: List<MenuObject>
  fullName: System.Collections.Generic.List<Menu.MenuObject>
  nameWithType.vb: List(Of MenuObject)
  fullName.vb: System.Collections.Generic.List(Of Menu.MenuObject)
  name.vb: List(Of MenuObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Menu.MenuObject[]
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject[]
  nameWithType: MenuObject[]
  fullName: Menu.MenuObject[]
  nameWithType.vb: MenuObject()
  fullName.vb: Menu.MenuObject()
  name.vb: MenuObject()
  spec.csharp:
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Menu.MenuObject.#ctor*
  commentId: Overload:Menu.MenuObject.#ctor
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject__ctor_Menu_Menu_Menu_MenuObject_
  name: MenuObject
  nameWithType: MenuObject.MenuObject
  fullName: Menu.MenuObject.MenuObject
  nameWithType.vb: MenuObject.New
  fullName.vb: Menu.MenuObject.New
  name.vb: New
- uid: Menu.MenuObject.Update*
  commentId: Overload:Menu.MenuObject.Update
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Update
  name: Update
  nameWithType: MenuObject.Update
  fullName: Menu.MenuObject.Update
- uid: Menu.MenuObject.GrafUpdate*
  commentId: Overload:Menu.MenuObject.GrafUpdate
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: MenuObject.GrafUpdate
  fullName: Menu.MenuObject.GrafUpdate
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Menu.MenuObject.Singal*
  commentId: Overload:Menu.MenuObject.Singal
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  name: Singal
  nameWithType: MenuObject.Singal
  fullName: Menu.MenuObject.Singal
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Menu.MenuObject.RemoveSprites*
  commentId: Overload:Menu.MenuObject.RemoveSprites
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  name: RemoveSprites
  nameWithType: MenuObject.RemoveSprites
  fullName: Menu.MenuObject.RemoveSprites
- uid: Menu.MenuObject.RemoveSubObject*
  commentId: Overload:Menu.MenuObject.RemoveSubObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  name: RemoveSubObject
  nameWithType: MenuObject.RemoveSubObject
  fullName: Menu.MenuObject.RemoveSubObject
- uid: Menu.MenuObject.Container*
  commentId: Overload:Menu.MenuObject.Container
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Container
  name: Container
  nameWithType: MenuObject.Container
  fullName: Menu.MenuObject.Container
- uid: Menu.MenuObject.Selected*
  commentId: Overload:Menu.MenuObject.Selected
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Selected
  name: Selected
  nameWithType: MenuObject.Selected
  fullName: Menu.MenuObject.Selected
- uid: Menu.MenuObject.page*
  commentId: Overload:Menu.MenuObject.page
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_page
  name: page
  nameWithType: MenuObject.page
  fullName: Menu.MenuObject.page
- uid: Menu.Page
  commentId: T:Menu.Page
  parent: Menu
  isExternal: true
  href: Menu.Page.html
  name: Page
  nameWithType: Page
  fullName: Menu.Page
