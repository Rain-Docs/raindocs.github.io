### YamlMime:ManagedReference
items:
- uid: VoidSea.PlayerGhosts
  commentId: T:VoidSea.PlayerGhosts
  id: PlayerGhosts
  parent: VoidSea
  children:
  - VoidSea.PlayerGhosts.#ctor(Player,VoidSea.VoidSeaScene)
  - VoidSea.PlayerGhosts.AddGhost
  - VoidSea.PlayerGhosts.IdealGhostCount
  - VoidSea.PlayerGhosts.Update
  - VoidSea.PlayerGhosts.ghosts
  - VoidSea.PlayerGhosts.originalPlayer
  - VoidSea.PlayerGhosts.voidSea
  langs:
  - csharp
  - vb
  name: PlayerGhosts
  nameWithType: PlayerGhosts
  fullName: VoidSea.PlayerGhosts
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: Controls the numerous copies of the player you see at the bottom of the void sea.
  example: []
  syntax:
    content: public class PlayerGhosts
    content.vb: Public Class PlayerGhosts
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: VoidSea.PlayerGhosts.voidSea
  commentId: F:VoidSea.PlayerGhosts.voidSea
  id: voidSea
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: voidSea
  nameWithType: PlayerGhosts.voidSea
  fullName: VoidSea.PlayerGhosts.voidSea
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.voidSea</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VoidSeaScene voidSea
    return:
      type: VoidSea.VoidSeaScene
    content.vb: Public voidSea As VoidSeaScene
- uid: VoidSea.PlayerGhosts.originalPlayer
  commentId: F:VoidSea.PlayerGhosts.originalPlayer
  id: originalPlayer
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: originalPlayer
  nameWithType: PlayerGhosts.originalPlayer
  fullName: VoidSea.PlayerGhosts.originalPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.originalPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player originalPlayer
    return:
      type: Global.Player
    content.vb: Public originalPlayer As Player
- uid: VoidSea.PlayerGhosts.ghosts
  commentId: F:VoidSea.PlayerGhosts.ghosts
  id: ghosts
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: ghosts
  nameWithType: PlayerGhosts.ghosts
  fullName: VoidSea.PlayerGhosts.ghosts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSea.PlayerGhosts.ghosts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlayerGhosts.Ghost> ghosts
    return:
      type: System.Collections.Generic.List{VoidSea.PlayerGhosts.Ghost}
    content.vb: Public ghosts As List(Of PlayerGhosts.Ghost)
- uid: VoidSea.PlayerGhosts.#ctor(Player,VoidSea.VoidSeaScene)
  commentId: M:VoidSea.PlayerGhosts.#ctor(Player,VoidSea.VoidSeaScene)
  id: '#ctor(Player,VoidSea.VoidSeaScene)'
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: PlayerGhosts(Player, VoidSeaScene)
  nameWithType: PlayerGhosts.PlayerGhosts(Player, VoidSeaScene)
  fullName: VoidSea.PlayerGhosts.PlayerGhosts(Player, VoidSea.VoidSeaScene)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>VoidSea.PlayerGhosts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerGhosts(Player originalPlayer, VoidSeaScene voidSea)
    parameters:
    - id: originalPlayer
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originalPlayer</parameter>
            <parameter>M:VoidSea.PlayerGhosts.#ctor(Player,VoidSea.VoidSeaScene)</parameter>
          </include>
        </markup>
    - id: voidSea
      type: VoidSea.VoidSeaScene
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>voidSea</parameter>
            <parameter>M:VoidSea.PlayerGhosts.#ctor(Player,VoidSea.VoidSeaScene)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(originalPlayer As Player, voidSea As VoidSeaScene)
  overload: VoidSea.PlayerGhosts.#ctor*
  nameWithType.vb: PlayerGhosts.New(Player, VoidSeaScene)
  fullName.vb: VoidSea.PlayerGhosts.New(Player, VoidSea.VoidSeaScene)
  name.vb: New(Player, VoidSeaScene)
- uid: VoidSea.PlayerGhosts.Update
  commentId: M:VoidSea.PlayerGhosts.Update
  id: Update
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: PlayerGhosts.Update()
  fullName: VoidSea.PlayerGhosts.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSea.PlayerGhosts.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: VoidSea.PlayerGhosts.Update*
- uid: VoidSea.PlayerGhosts.AddGhost
  commentId: M:VoidSea.PlayerGhosts.AddGhost
  id: AddGhost
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: AddGhost()
  nameWithType: PlayerGhosts.AddGhost()
  fullName: VoidSea.PlayerGhosts.AddGhost()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSea.PlayerGhosts.AddGhost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddGhost()
    content.vb: Public Sub AddGhost()
  overload: VoidSea.PlayerGhosts.AddGhost*
- uid: VoidSea.PlayerGhosts.IdealGhostCount
  commentId: P:VoidSea.PlayerGhosts.IdealGhostCount
  id: IdealGhostCount
  parent: VoidSea.PlayerGhosts
  langs:
  - csharp
  - vb
  name: IdealGhostCount
  nameWithType: PlayerGhosts.IdealGhostCount
  fullName: VoidSea.PlayerGhosts.IdealGhostCount
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: VoidSea
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VoidSea.PlayerGhosts.IdealGhostCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int IdealGhostCount { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property IdealGhostCount As Integer
  overload: VoidSea.PlayerGhosts.IdealGhostCount*
references:
- uid: VoidSea
  commentId: N:VoidSea
  isExternal: true
  href: VoidSea.html
  name: VoidSea
  nameWithType: VoidSea
  fullName: VoidSea
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: VoidSea.VoidSeaScene
  commentId: T:VoidSea.VoidSeaScene
  parent: VoidSea
  isExternal: true
  href: VoidSea.VoidSeaScene.html
  name: VoidSeaScene
  nameWithType: VoidSeaScene
  fullName: VoidSea.VoidSeaScene
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: System.Collections.Generic.List{VoidSea.PlayerGhosts.Ghost}
  commentId: T:System.Collections.Generic.List{VoidSea.PlayerGhosts.Ghost}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlayerGhosts.Ghost>
  nameWithType: List<PlayerGhosts.Ghost>
  fullName: System.Collections.Generic.List<VoidSea.PlayerGhosts.Ghost>
  nameWithType.vb: List(Of PlayerGhosts.Ghost)
  fullName.vb: System.Collections.Generic.List(Of VoidSea.PlayerGhosts.Ghost)
  name.vb: List(Of PlayerGhosts.Ghost)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: VoidSea.PlayerGhosts
    name: PlayerGhosts
    isExternal: true
    href: VoidSea.PlayerGhosts.html
  - name: .
  - uid: VoidSea.PlayerGhosts.Ghost
    name: Ghost
    isExternal: true
    href: VoidSea.PlayerGhosts.Ghost.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: VoidSea.PlayerGhosts
    name: PlayerGhosts
    isExternal: true
    href: VoidSea.PlayerGhosts.html
  - name: .
  - uid: VoidSea.PlayerGhosts.Ghost
    name: Ghost
    isExternal: true
    href: VoidSea.PlayerGhosts.Ghost.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: VoidSea.PlayerGhosts.#ctor*
  commentId: Overload:VoidSea.PlayerGhosts.#ctor
  isExternal: true
  href: VoidSea.PlayerGhosts.html#VoidSea_PlayerGhosts__ctor_Player_VoidSea_VoidSeaScene_
  name: PlayerGhosts
  nameWithType: PlayerGhosts.PlayerGhosts
  fullName: VoidSea.PlayerGhosts.PlayerGhosts
  nameWithType.vb: PlayerGhosts.New
  fullName.vb: VoidSea.PlayerGhosts.New
  name.vb: New
- uid: VoidSea.PlayerGhosts.Update*
  commentId: Overload:VoidSea.PlayerGhosts.Update
  isExternal: true
  href: VoidSea.PlayerGhosts.html#VoidSea_PlayerGhosts_Update
  name: Update
  nameWithType: PlayerGhosts.Update
  fullName: VoidSea.PlayerGhosts.Update
- uid: VoidSea.PlayerGhosts.AddGhost*
  commentId: Overload:VoidSea.PlayerGhosts.AddGhost
  isExternal: true
  href: VoidSea.PlayerGhosts.html#VoidSea_PlayerGhosts_AddGhost
  name: AddGhost
  nameWithType: PlayerGhosts.AddGhost
  fullName: VoidSea.PlayerGhosts.AddGhost
- uid: VoidSea.PlayerGhosts.IdealGhostCount*
  commentId: Overload:VoidSea.PlayerGhosts.IdealGhostCount
  isExternal: true
  href: VoidSea.PlayerGhosts.html#VoidSea_PlayerGhosts_IdealGhostCount
  name: IdealGhostCount
  nameWithType: PlayerGhosts.IdealGhostCount
  fullName: VoidSea.PlayerGhosts.IdealGhostCount
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
