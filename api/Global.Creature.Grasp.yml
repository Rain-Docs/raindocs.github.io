### YamlMime:ManagedReference
items:
- uid: Global.Creature.Grasp
  commentId: T:Global.Creature.Grasp
  id: Creature.Grasp
  parent: Global
  children:
  - Global.Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)
  - Global.Creature.Grasp.Release
  - Global.Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)
  - Global.Creature.Grasp.chunkGrabbed
  - Global.Creature.Grasp.discontinued
  - Global.Creature.Grasp.dominance
  - Global.Creature.Grasp.grabbed
  - Global.Creature.Grasp.grabbedChunk
  - Global.Creature.Grasp.grabber
  - Global.Creature.Grasp.graspUsed
  - Global.Creature.Grasp.pacifying
  - Global.Creature.Grasp.shareability
  langs:
  - csharp
  - vb
  name: Creature.Grasp
  nameWithType: Creature.Grasp
  fullName: Creature.Grasp
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Creature.Grasp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Creature.Grasp
    content.vb: Public Class Creature.Grasp
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Creature.Grasp.grabber
  commentId: F:Global.Creature.Grasp.grabber
  id: grabber
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: grabber
  nameWithType: Creature.Grasp.grabber
  fullName: Creature.Grasp.grabber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.grabber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature grabber
    return:
      type: Global.Creature
    content.vb: Public grabber As Creature
- uid: Global.Creature.Grasp.grabbed
  commentId: F:Global.Creature.Grasp.grabbed
  id: grabbed
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: grabbed
  nameWithType: Creature.Grasp.grabbed
  fullName: Creature.Grasp.grabbed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.grabbed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject grabbed
    return:
      type: Global.PhysicalObject
    content.vb: Public grabbed As PhysicalObject
- uid: Global.Creature.Grasp.graspUsed
  commentId: F:Global.Creature.Grasp.graspUsed
  id: graspUsed
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: graspUsed
  nameWithType: Creature.Grasp.graspUsed
  fullName: Creature.Grasp.graspUsed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.graspUsed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int graspUsed
    return:
      type: System.Int32
    content.vb: Public graspUsed As Integer
- uid: Global.Creature.Grasp.chunkGrabbed
  commentId: F:Global.Creature.Grasp.chunkGrabbed
  id: chunkGrabbed
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: chunkGrabbed
  nameWithType: Creature.Grasp.chunkGrabbed
  fullName: Creature.Grasp.chunkGrabbed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.chunkGrabbed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int chunkGrabbed
    return:
      type: System.Int32
    content.vb: Public chunkGrabbed As Integer
- uid: Global.Creature.Grasp.discontinued
  commentId: F:Global.Creature.Grasp.discontinued
  id: discontinued
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: discontinued
  nameWithType: Creature.Grasp.discontinued
  fullName: Creature.Grasp.discontinued
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.discontinued</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool discontinued
    return:
      type: System.Boolean
    content.vb: Public discontinued As Boolean
- uid: Global.Creature.Grasp.dominance
  commentId: F:Global.Creature.Grasp.dominance
  id: dominance
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: dominance
  nameWithType: Creature.Grasp.dominance
  fullName: Creature.Grasp.dominance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.dominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dominance
    return:
      type: System.Single
    content.vb: Public dominance As Single
- uid: Global.Creature.Grasp.pacifying
  commentId: F:Global.Creature.Grasp.pacifying
  id: pacifying
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: pacifying
  nameWithType: Creature.Grasp.pacifying
  fullName: Creature.Grasp.pacifying
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.pacifying</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool pacifying
    return:
      type: System.Boolean
    content.vb: Public pacifying As Boolean
- uid: Global.Creature.Grasp.shareability
  commentId: F:Global.Creature.Grasp.shareability
  id: shareability
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: shareability
  nameWithType: Creature.Grasp.shareability
  fullName: Creature.Grasp.shareability
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Creature.Grasp.shareability</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature.Grasp.Shareability shareability
    return:
      type: Global.Creature.Grasp.Shareability
    content.vb: Public shareability As Creature.Grasp.Shareability
- uid: Global.Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)
  commentId: M:Global.Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)
  id: '#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)'
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: Grasp(Creature, PhysicalObject, int, int, Shareability, float, bool)
  nameWithType: Creature.Grasp.Grasp(Creature, PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool)
  fullName: Creature.Grasp.Grasp(Creature, PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Creature.Grasp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Grasp(Creature grabber, PhysicalObject grabbed, int graspUsed, int chunkGrabbed, Creature.Grasp.Shareability shareability, float dominance, bool pacifying)
    parameters:
    - id: grabber
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabber</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: grabbed
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabbed</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: graspUsed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>graspUsed</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: chunkGrabbed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunkGrabbed</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: shareability
      type: Global.Creature.Grasp.Shareability
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shareability</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: dominance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dominance</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pacifying
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pacifying</parameter>
            <parameter>M:Creature.Grasp.#ctor(Creature,PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(grabber As Creature, grabbed As PhysicalObject, graspUsed As Integer, chunkGrabbed As Integer, shareability As Creature.Grasp.Shareability, dominance As Single, pacifying As Boolean)
  overload: Global.Creature.Grasp.#ctor*
  nameWithType.vb: Creature.Grasp.New(Creature, PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean)
  fullName.vb: Creature.Grasp.New(Creature, PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean)
  name.vb: New(Creature, PhysicalObject, Integer, Integer, Shareability, Single, Boolean)
- uid: Global.Creature.Grasp.Release
  commentId: M:Global.Creature.Grasp.Release
  id: Release
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: Release()
  nameWithType: Creature.Grasp.Release()
  fullName: Creature.Grasp.Release()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Creature.Grasp.Release</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Release()
    content.vb: Public Sub Release()
  overload: Global.Creature.Grasp.Release*
- uid: Global.Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)
  commentId: M:Global.Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)
  id: ShareabilityConflict(Creature.Grasp.Shareability)
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: ShareabilityConflict(Shareability)
  nameWithType: Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)
  fullName: Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ShareabilityConflict(Creature.Grasp.Shareability other)
    parameters:
    - id: other
      type: Global.Creature.Grasp.Shareability
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Creature.Grasp.ShareabilityConflict(Creature.Grasp.Shareability)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShareabilityConflict(other As Creature.Grasp.Shareability) As Boolean
  overload: Global.Creature.Grasp.ShareabilityConflict*
- uid: Global.Creature.Grasp.grabbedChunk
  commentId: P:Global.Creature.Grasp.grabbedChunk
  id: grabbedChunk
  parent: Global.Creature.Grasp
  langs:
  - csharp
  - vb
  name: grabbedChunk
  nameWithType: Creature.Grasp.grabbedChunk
  fullName: Creature.Grasp.grabbedChunk
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Creature.Grasp.grabbedChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk grabbedChunk { get; }
    parameters: []
    return:
      type: Global.BodyChunk
    content.vb: Public ReadOnly Property grabbedChunk As BodyChunk
  overload: Global.Creature.Grasp.grabbedChunk*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Creature.Grasp.Shareability
  commentId: T:Global.Creature.Grasp.Shareability
  isExternal: true
  href: Creature.html
  name: Creature.Grasp.Shareability
  nameWithType: Creature.Grasp.Shareability
  fullName: Creature.Grasp.Shareability
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: .
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: .
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
- uid: Global.Creature.Grasp.#ctor*
  commentId: Overload:Global.Creature.Grasp.#ctor
  isExternal: true
  href: Global.Creature.Grasp.html#Creature_Grasp__ctor_Creature_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_
  name: Grasp
  nameWithType: Creature.Grasp.Grasp
  fullName: Creature.Grasp.Grasp
  nameWithType.vb: Creature.Grasp.New
  fullName.vb: Creature.Grasp.New
  name.vb: New
- uid: Global.Creature.Grasp.Release*
  commentId: Overload:Global.Creature.Grasp.Release
  isExternal: true
  href: Global.Creature.Grasp.html#Creature_Grasp_Release
  name: Release
  nameWithType: Creature.Grasp.Release
  fullName: Creature.Grasp.Release
- uid: Global.Creature.Grasp.ShareabilityConflict*
  commentId: Overload:Global.Creature.Grasp.ShareabilityConflict
  isExternal: true
  href: Global.Creature.Grasp.html#Creature_Grasp_ShareabilityConflict_Creature_Grasp_Shareability_
  name: ShareabilityConflict
  nameWithType: Creature.Grasp.ShareabilityConflict
  fullName: Creature.Grasp.ShareabilityConflict
- uid: Global.Creature.Grasp.grabbedChunk*
  commentId: Overload:Global.Creature.Grasp.grabbedChunk
  isExternal: true
  href: Global.Creature.Grasp.html#Creature_Grasp_grabbedChunk
  name: grabbedChunk
  nameWithType: Creature.Grasp.grabbedChunk
  fullName: Creature.Grasp.grabbedChunk
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
