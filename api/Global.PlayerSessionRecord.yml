### YamlMime:ManagedReference
items:
- uid: Global.PlayerSessionRecord
  commentId: T:Global.PlayerSessionRecord
  id: PlayerSessionRecord
  parent: Global
  children:
  - Global.PlayerSessionRecord.#ctor(System.Int32)
  - Global.PlayerSessionRecord.AddEat(PhysicalObject)
  - Global.PlayerSessionRecord.AddKill(Creature)
  - Global.PlayerSessionRecord.BreakPeaceful(Creature)
  - Global.PlayerSessionRecord.ateAnything
  - Global.PlayerSessionRecord.carnivorous
  - Global.PlayerSessionRecord.eats
  - Global.PlayerSessionRecord.friendInDen
  - Global.PlayerSessionRecord.kills
  - Global.PlayerSessionRecord.peaceful
  - Global.PlayerSessionRecord.pearlsFound
  - Global.PlayerSessionRecord.playerGrabbedTime
  - Global.PlayerSessionRecord.playerNumber
  - Global.PlayerSessionRecord.pupCountInDen
  - Global.PlayerSessionRecord.time
  - Global.PlayerSessionRecord.vegetarian
  - Global.PlayerSessionRecord.wentToSleepInRegion
  - Global.PlayerSessionRecord.wokeUpInRegion
  langs:
  - csharp
  - vb
  name: PlayerSessionRecord
  nameWithType: PlayerSessionRecord
  fullName: PlayerSessionRecord
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PlayerSessionRecord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PlayerSessionRecord
    content.vb: Public Class PlayerSessionRecord
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PlayerSessionRecord.playerNumber
  commentId: F:Global.PlayerSessionRecord.playerNumber
  id: playerNumber
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: playerNumber
  nameWithType: PlayerSessionRecord.playerNumber
  fullName: PlayerSessionRecord.playerNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.playerNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int playerNumber
    return:
      type: System.Int32
    content.vb: Public playerNumber As Integer
- uid: Global.PlayerSessionRecord.kills
  commentId: F:Global.PlayerSessionRecord.kills
  id: kills
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: kills
  nameWithType: PlayerSessionRecord.kills
  fullName: PlayerSessionRecord.kills
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.kills</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlayerSessionRecord.KillRecord> kills
    return:
      type: System.Collections.Generic.List{PlayerSessionRecord.KillRecord}
    content.vb: Public kills As List(Of PlayerSessionRecord.KillRecord)
- uid: Global.PlayerSessionRecord.eats
  commentId: F:Global.PlayerSessionRecord.eats
  id: eats
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: eats
  nameWithType: PlayerSessionRecord.eats
  fullName: PlayerSessionRecord.eats
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.eats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlayerSessionRecord.EatRecord> eats
    return:
      type: System.Collections.Generic.List{PlayerSessionRecord.EatRecord}
    content.vb: Public eats As List(Of PlayerSessionRecord.EatRecord)
- uid: Global.PlayerSessionRecord.ateAnything
  commentId: F:Global.PlayerSessionRecord.ateAnything
  id: ateAnything
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: ateAnything
  nameWithType: PlayerSessionRecord.ateAnything
  fullName: PlayerSessionRecord.ateAnything
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.ateAnything</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ateAnything
    return:
      type: System.Boolean
    content.vb: Public ateAnything As Boolean
- uid: Global.PlayerSessionRecord.vegetarian
  commentId: F:Global.PlayerSessionRecord.vegetarian
  id: vegetarian
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: vegetarian
  nameWithType: PlayerSessionRecord.vegetarian
  fullName: PlayerSessionRecord.vegetarian
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.vegetarian</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool vegetarian
    return:
      type: System.Boolean
    content.vb: Public vegetarian As Boolean
- uid: Global.PlayerSessionRecord.peaceful
  commentId: F:Global.PlayerSessionRecord.peaceful
  id: peaceful
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: peaceful
  nameWithType: PlayerSessionRecord.peaceful
  fullName: PlayerSessionRecord.peaceful
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.peaceful</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool peaceful
    return:
      type: System.Boolean
    content.vb: Public peaceful As Boolean
- uid: Global.PlayerSessionRecord.carnivorous
  commentId: F:Global.PlayerSessionRecord.carnivorous
  id: carnivorous
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: carnivorous
  nameWithType: PlayerSessionRecord.carnivorous
  fullName: PlayerSessionRecord.carnivorous
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.carnivorous</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool carnivorous
    return:
      type: System.Boolean
    content.vb: Public carnivorous As Boolean
- uid: Global.PlayerSessionRecord.wokeUpInRegion
  commentId: F:Global.PlayerSessionRecord.wokeUpInRegion
  id: wokeUpInRegion
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: wokeUpInRegion
  nameWithType: PlayerSessionRecord.wokeUpInRegion
  fullName: PlayerSessionRecord.wokeUpInRegion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.wokeUpInRegion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string wokeUpInRegion
    return:
      type: System.String
    content.vb: Public wokeUpInRegion As String
- uid: Global.PlayerSessionRecord.wentToSleepInRegion
  commentId: F:Global.PlayerSessionRecord.wentToSleepInRegion
  id: wentToSleepInRegion
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: wentToSleepInRegion
  nameWithType: PlayerSessionRecord.wentToSleepInRegion
  fullName: PlayerSessionRecord.wentToSleepInRegion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.wentToSleepInRegion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string wentToSleepInRegion
    return:
      type: System.String
    content.vb: Public wentToSleepInRegion As String
- uid: Global.PlayerSessionRecord.pearlsFound
  commentId: F:Global.PlayerSessionRecord.pearlsFound
  id: pearlsFound
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: pearlsFound
  nameWithType: PlayerSessionRecord.pearlsFound
  fullName: PlayerSessionRecord.pearlsFound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.pearlsFound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<DataPearl.AbstractDataPearl.DataPearlType> pearlsFound
    return:
      type: System.Collections.Generic.List{DataPearl.AbstractDataPearl.DataPearlType}
    content.vb: Public pearlsFound As List(Of DataPearl.AbstractDataPearl.DataPearlType)
- uid: Global.PlayerSessionRecord.friendInDen
  commentId: F:Global.PlayerSessionRecord.friendInDen
  id: friendInDen
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: friendInDen
  nameWithType: PlayerSessionRecord.friendInDen
  fullName: PlayerSessionRecord.friendInDen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.friendInDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractCreature friendInDen
    return:
      type: Global.AbstractCreature
    content.vb: Public friendInDen As AbstractCreature
- uid: Global.PlayerSessionRecord.time
  commentId: F:Global.PlayerSessionRecord.time
  id: time
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: time
  nameWithType: PlayerSessionRecord.time
  fullName: PlayerSessionRecord.time
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.time</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int time
    return:
      type: System.Int32
    content.vb: Public time As Integer
- uid: Global.PlayerSessionRecord.playerGrabbedTime
  commentId: F:Global.PlayerSessionRecord.playerGrabbedTime
  id: playerGrabbedTime
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: playerGrabbedTime
  nameWithType: PlayerSessionRecord.playerGrabbedTime
  fullName: PlayerSessionRecord.playerGrabbedTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.playerGrabbedTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int playerGrabbedTime
    return:
      type: System.Int32
    content.vb: Public playerGrabbedTime As Integer
- uid: Global.PlayerSessionRecord.pupCountInDen
  commentId: F:Global.PlayerSessionRecord.pupCountInDen
  id: pupCountInDen
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: pupCountInDen
  nameWithType: PlayerSessionRecord.pupCountInDen
  fullName: PlayerSessionRecord.pupCountInDen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerSessionRecord.pupCountInDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pupCountInDen
    return:
      type: System.Int32
    content.vb: Public pupCountInDen As Integer
- uid: Global.PlayerSessionRecord.#ctor(System.Int32)
  commentId: M:Global.PlayerSessionRecord.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: PlayerSessionRecord(int)
  nameWithType: PlayerSessionRecord.PlayerSessionRecord(int)
  fullName: PlayerSessionRecord.PlayerSessionRecord(int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PlayerSessionRecord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerSessionRecord(int playerNumber)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:PlayerSessionRecord.#ctor(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(playerNumber As Integer)
  overload: Global.PlayerSessionRecord.#ctor*
  nameWithType.vb: PlayerSessionRecord.New(Integer)
  fullName.vb: PlayerSessionRecord.New(Integer)
  name.vb: New(Integer)
- uid: Global.PlayerSessionRecord.BreakPeaceful(Creature)
  commentId: M:Global.PlayerSessionRecord.BreakPeaceful(Creature)
  id: BreakPeaceful(Creature)
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: BreakPeaceful(Creature)
  nameWithType: PlayerSessionRecord.BreakPeaceful(Creature)
  fullName: PlayerSessionRecord.BreakPeaceful(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerSessionRecord.BreakPeaceful(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BreakPeaceful(Creature victim)
    parameters:
    - id: victim
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>victim</parameter>
            <parameter>M:PlayerSessionRecord.BreakPeaceful(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BreakPeaceful(victim As Creature)
  overload: Global.PlayerSessionRecord.BreakPeaceful*
- uid: Global.PlayerSessionRecord.AddKill(Creature)
  commentId: M:Global.PlayerSessionRecord.AddKill(Creature)
  id: AddKill(Creature)
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: AddKill(Creature)
  nameWithType: PlayerSessionRecord.AddKill(Creature)
  fullName: PlayerSessionRecord.AddKill(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerSessionRecord.AddKill(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddKill(Creature victim)
    parameters:
    - id: victim
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>victim</parameter>
            <parameter>M:PlayerSessionRecord.AddKill(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddKill(victim As Creature)
  overload: Global.PlayerSessionRecord.AddKill*
- uid: Global.PlayerSessionRecord.AddEat(PhysicalObject)
  commentId: M:Global.PlayerSessionRecord.AddEat(PhysicalObject)
  id: AddEat(PhysicalObject)
  parent: Global.PlayerSessionRecord
  langs:
  - csharp
  - vb
  name: AddEat(PhysicalObject)
  nameWithType: PlayerSessionRecord.AddEat(PhysicalObject)
  fullName: PlayerSessionRecord.AddEat(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerSessionRecord.AddEat(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddEat(PhysicalObject eatenObject)
    parameters:
    - id: eatenObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eatenObject</parameter>
            <parameter>M:PlayerSessionRecord.AddEat(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddEat(eatenObject As PhysicalObject)
  overload: Global.PlayerSessionRecord.AddEat*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{PlayerSessionRecord.KillRecord}
  commentId: T:System.Collections.Generic.List{PlayerSessionRecord.KillRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlayerSessionRecord.KillRecord>
  nameWithType: List<PlayerSessionRecord.KillRecord>
  fullName: System.Collections.Generic.List<PlayerSessionRecord.KillRecord>
  nameWithType.vb: List(Of PlayerSessionRecord.KillRecord)
  fullName.vb: System.Collections.Generic.List(Of PlayerSessionRecord.KillRecord)
  name.vb: List(Of PlayerSessionRecord.KillRecord)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlayerSessionRecord
    name: PlayerSessionRecord
    isExternal: true
    href: PlayerSessionRecord.html
  - name: .
  - uid: Global.PlayerSessionRecord.KillRecord
    name: KillRecord
    isExternal: true
    href: PlayerSessionRecord.KillRecord.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlayerSessionRecord
    name: PlayerSessionRecord
    isExternal: true
    href: PlayerSessionRecord.html
  - name: .
  - uid: Global.PlayerSessionRecord.KillRecord
    name: KillRecord
    isExternal: true
    href: PlayerSessionRecord.KillRecord.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{PlayerSessionRecord.EatRecord}
  commentId: T:System.Collections.Generic.List{PlayerSessionRecord.EatRecord}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlayerSessionRecord.EatRecord>
  nameWithType: List<PlayerSessionRecord.EatRecord>
  fullName: System.Collections.Generic.List<PlayerSessionRecord.EatRecord>
  nameWithType.vb: List(Of PlayerSessionRecord.EatRecord)
  fullName.vb: System.Collections.Generic.List(Of PlayerSessionRecord.EatRecord)
  name.vb: List(Of PlayerSessionRecord.EatRecord)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlayerSessionRecord
    name: PlayerSessionRecord
    isExternal: true
    href: PlayerSessionRecord.html
  - name: .
  - uid: Global.PlayerSessionRecord.EatRecord
    name: EatRecord
    isExternal: true
    href: PlayerSessionRecord.EatRecord.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlayerSessionRecord
    name: PlayerSessionRecord
    isExternal: true
    href: PlayerSessionRecord.html
  - name: .
  - uid: Global.PlayerSessionRecord.EatRecord
    name: EatRecord
    isExternal: true
    href: PlayerSessionRecord.EatRecord.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{DataPearl.AbstractDataPearl.DataPearlType}
  commentId: T:System.Collections.Generic.List{DataPearl.AbstractDataPearl.DataPearlType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DataPearl.AbstractDataPearl.DataPearlType>
  nameWithType: List<DataPearl.AbstractDataPearl.DataPearlType>
  fullName: System.Collections.Generic.List<DataPearl.AbstractDataPearl.DataPearlType>
  nameWithType.vb: List(Of DataPearl.AbstractDataPearl.DataPearlType)
  fullName.vb: System.Collections.Generic.List(Of DataPearl.AbstractDataPearl.DataPearlType)
  name.vb: List(Of DataPearl.AbstractDataPearl.DataPearlType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.DataPearl
    name: DataPearl
    isExternal: true
    href: DataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl
    name: AbstractDataPearl
    isExternal: true
    href: DataPearl.AbstractDataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl.DataPearlType
    name: DataPearlType
    isExternal: true
    href: DataPearl.AbstractDataPearl.DataPearlType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.DataPearl
    name: DataPearl
    isExternal: true
    href: DataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl
    name: AbstractDataPearl
    isExternal: true
    href: DataPearl.AbstractDataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl.DataPearlType
    name: DataPearlType
    isExternal: true
    href: DataPearl.AbstractDataPearl.DataPearlType.html
  - name: )
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.PlayerSessionRecord.#ctor*
  commentId: Overload:Global.PlayerSessionRecord.#ctor
  isExternal: true
  href: Global.PlayerSessionRecord.html#PlayerSessionRecord__ctor_System_Int32_
  name: PlayerSessionRecord
  nameWithType: PlayerSessionRecord.PlayerSessionRecord
  fullName: PlayerSessionRecord.PlayerSessionRecord
  nameWithType.vb: PlayerSessionRecord.New
  fullName.vb: PlayerSessionRecord.New
  name.vb: New
- uid: Global.PlayerSessionRecord.BreakPeaceful*
  commentId: Overload:Global.PlayerSessionRecord.BreakPeaceful
  isExternal: true
  href: Global.PlayerSessionRecord.html#PlayerSessionRecord_BreakPeaceful_Creature_
  name: BreakPeaceful
  nameWithType: PlayerSessionRecord.BreakPeaceful
  fullName: PlayerSessionRecord.BreakPeaceful
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.PlayerSessionRecord.AddKill*
  commentId: Overload:Global.PlayerSessionRecord.AddKill
  isExternal: true
  href: Global.PlayerSessionRecord.html#PlayerSessionRecord_AddKill_Creature_
  name: AddKill
  nameWithType: PlayerSessionRecord.AddKill
  fullName: PlayerSessionRecord.AddKill
- uid: Global.PlayerSessionRecord.AddEat*
  commentId: Overload:Global.PlayerSessionRecord.AddEat
  isExternal: true
  href: Global.PlayerSessionRecord.html#PlayerSessionRecord_AddEat_PhysicalObject_
  name: AddEat
  nameWithType: PlayerSessionRecord.AddEat
  fullName: PlayerSessionRecord.AddEat
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
