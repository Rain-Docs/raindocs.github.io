### YamlMime:ManagedReference
items:
- uid: Global.OptionInterface.ConfigHolder
  commentId: T:Global.OptionInterface.ConfigHolder
  id: OptionInterface.ConfigHolder
  parent: Global
  children:
  - Global.OptionInterface.ConfigHolder.#ctor(OptionInterface)
  - Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)
  - Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)
  - Global.OptionInterface.ConfigHolder.ContainsConfig
  - Global.OptionInterface.ConfigHolder.LoadConfig
  - Global.OptionInterface.ConfigHolder.SaveConfig(System.String)
  - Global.OptionInterface.ConfigHolder.owner
  langs:
  - csharp
  - vb
  name: OptionInterface.ConfigHolder
  nameWithType: OptionInterface.ConfigHolder
  fullName: OptionInterface.ConfigHolder
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:OptionInterface.ConfigHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class OptionInterface.ConfigHolder
    content.vb: Public Class OptionInterface.ConfigHolder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.OptionInterface.ConfigHolder.owner
  commentId: F:Global.OptionInterface.ConfigHolder.owner
  id: owner
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: OptionInterface.ConfigHolder.owner
  fullName: OptionInterface.ConfigHolder.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:OptionInterface.ConfigHolder.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly OptionInterface owner
    return:
      type: Global.OptionInterface
    content.vb: Public ReadOnly owner As OptionInterface
- uid: Global.OptionInterface.ConfigHolder.#ctor(OptionInterface)
  commentId: M:Global.OptionInterface.ConfigHolder.#ctor(OptionInterface)
  id: '#ctor(OptionInterface)'
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: ConfigHolder(OptionInterface)
  nameWithType: OptionInterface.ConfigHolder.ConfigHolder(OptionInterface)
  fullName: OptionInterface.ConfigHolder.ConfigHolder(OptionInterface)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>OptionInterface.ConfigHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ConfigHolder(OptionInterface owner)
    parameters:
    - id: owner
      type: Global.OptionInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:OptionInterface.ConfigHolder.#ctor(OptionInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As OptionInterface)
  overload: Global.OptionInterface.ConfigHolder.#ctor*
  nameWithType.vb: OptionInterface.ConfigHolder.New(OptionInterface)
  fullName.vb: OptionInterface.ConfigHolder.New(OptionInterface)
  name.vb: New(OptionInterface)
- uid: Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)
  commentId: M:Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)
  id: Bind``1(System.String,``0,ConfigAcceptableBase)
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: Bind<T>(string, T, ConfigAcceptableBase)
  nameWithType: OptionInterface.ConfigHolder.Bind<T>(string, T, ConfigAcceptableBase)
  fullName: OptionInterface.ConfigHolder.Bind<T>(string, T, ConfigAcceptableBase)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Configurable<T> Bind<T>(string key, T defaultValue, ConfigAcceptableBase accept)
    parameters:
    - id: key
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
          </include>
        </markup>
    - id: defaultValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultValue</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
          </include>
        </markup>
    - id: accept
      type: Global.ConfigAcceptableBase
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>accept</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
          </include>
        </markup>
    return:
      type: Global.Configurable{{T}}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigAcceptableBase)</parameter>
          </include>
        </markup>
    content.vb: Public Function Bind(Of T)(key As String, defaultValue As T, accept As ConfigAcceptableBase) As Configurable(Of T)
  overload: Global.OptionInterface.ConfigHolder.Bind*
  nameWithType.vb: OptionInterface.ConfigHolder.Bind(Of T)(String, T, ConfigAcceptableBase)
  fullName.vb: OptionInterface.ConfigHolder.Bind(Of T)(String, T, ConfigAcceptableBase)
  name.vb: Bind(Of T)(String, T, ConfigAcceptableBase)
- uid: Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)
  commentId: M:Global.OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)
  id: Bind``1(System.String,``0,ConfigurableInfo)
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: Bind<T>(string, T, ConfigurableInfo)
  nameWithType: OptionInterface.ConfigHolder.Bind<T>(string, T, ConfigurableInfo)
  fullName: OptionInterface.ConfigHolder.Bind<T>(string, T, ConfigurableInfo)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Configurable<T> Bind<T>(string key, T defaultValue, ConfigurableInfo info = null)
    parameters:
    - id: key
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>key</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
          </include>
        </markup>
    - id: defaultValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultValue</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
          </include>
        </markup>
    - id: info
      type: Global.ConfigurableInfo
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>info</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
          </include>
        </markup>
    return:
      type: Global.Configurable{{T}}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OptionInterface.ConfigHolder.Bind``1(System.String,``0,ConfigurableInfo)</parameter>
          </include>
        </markup>
    content.vb: Public Function Bind(Of T)(key As String, defaultValue As T, info As ConfigurableInfo = Nothing) As Configurable(Of T)
  overload: Global.OptionInterface.ConfigHolder.Bind*
  nameWithType.vb: OptionInterface.ConfigHolder.Bind(Of T)(String, T, ConfigurableInfo)
  fullName.vb: OptionInterface.ConfigHolder.Bind(Of T)(String, T, ConfigurableInfo)
  name.vb: Bind(Of T)(String, T, ConfigurableInfo)
- uid: Global.OptionInterface.ConfigHolder.LoadConfig
  commentId: M:Global.OptionInterface.ConfigHolder.LoadConfig
  id: LoadConfig
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: LoadConfig()
  nameWithType: OptionInterface.ConfigHolder.LoadConfig()
  fullName: OptionInterface.ConfigHolder.LoadConfig()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OptionInterface.ConfigHolder.LoadConfig</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string LoadConfig()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OptionInterface.ConfigHolder.LoadConfig</parameter>
          </include>
        </markup>
    content.vb: Public Function LoadConfig() As String
  overload: Global.OptionInterface.ConfigHolder.LoadConfig*
- uid: Global.OptionInterface.ConfigHolder.SaveConfig(System.String)
  commentId: M:Global.OptionInterface.ConfigHolder.SaveConfig(System.String)
  id: SaveConfig(System.String)
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: SaveConfig(string)
  nameWithType: OptionInterface.ConfigHolder.SaveConfig(string)
  fullName: OptionInterface.ConfigHolder.SaveConfig(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OptionInterface.ConfigHolder.SaveConfig(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveConfig(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:OptionInterface.ConfigHolder.SaveConfig(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SaveConfig(s As String)
  overload: Global.OptionInterface.ConfigHolder.SaveConfig*
  nameWithType.vb: OptionInterface.ConfigHolder.SaveConfig(String)
  fullName.vb: OptionInterface.ConfigHolder.SaveConfig(String)
  name.vb: SaveConfig(String)
- uid: Global.OptionInterface.ConfigHolder.ContainsConfig
  commentId: M:Global.OptionInterface.ConfigHolder.ContainsConfig
  id: ContainsConfig
  parent: Global.OptionInterface.ConfigHolder
  langs:
  - csharp
  - vb
  name: ContainsConfig()
  nameWithType: OptionInterface.ConfigHolder.ContainsConfig()
  fullName: OptionInterface.ConfigHolder.ContainsConfig()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:OptionInterface.ConfigHolder.ContainsConfig</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ContainsConfig()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:OptionInterface.ConfigHolder.ContainsConfig</parameter>
          </include>
        </markup>
    content.vb: Public Function ContainsConfig() As Boolean
  overload: Global.OptionInterface.ConfigHolder.ContainsConfig*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.OptionInterface
  commentId: T:Global.OptionInterface
  isExternal: true
  href: OptionInterface.html
  name: OptionInterface
  nameWithType: OptionInterface
  fullName: OptionInterface
- uid: Global.OptionInterface.ConfigHolder.#ctor*
  commentId: Overload:Global.OptionInterface.ConfigHolder.#ctor
  isExternal: true
  href: Global.OptionInterface.ConfigHolder.html#OptionInterface_ConfigHolder__ctor_OptionInterface_
  name: ConfigHolder
  nameWithType: OptionInterface.ConfigHolder.ConfigHolder
  fullName: OptionInterface.ConfigHolder.ConfigHolder
  nameWithType.vb: OptionInterface.ConfigHolder.New
  fullName.vb: OptionInterface.ConfigHolder.New
  name.vb: New
- uid: Global.OptionInterface.ConfigHolder.Bind*
  commentId: Overload:Global.OptionInterface.ConfigHolder.Bind
  isExternal: true
  href: Global.OptionInterface.ConfigHolder.html#OptionInterface_ConfigHolder_Bind__1_System_String___0_ConfigAcceptableBase_
  name: Bind
  nameWithType: OptionInterface.ConfigHolder.Bind
  fullName: OptionInterface.ConfigHolder.Bind
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ConfigAcceptableBase
  commentId: T:Global.ConfigAcceptableBase
  isExternal: true
  href: ConfigAcceptableBase.html
  name: ConfigAcceptableBase
  nameWithType: ConfigAcceptableBase
  fullName: ConfigAcceptableBase
- uid: Global.Configurable{{T}}
  commentId: T:Global.Configurable{``0}
  definition: Global.Configurable`1
  href: Configurable-1.html
  name: Configurable<T>
  nameWithType: Configurable<T>
  fullName: Configurable<T>
  nameWithType.vb: Configurable(Of T)
  fullName.vb: Configurable(Of T)
  name.vb: Configurable(Of T)
  spec.csharp:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.Configurable`1
  commentId: T:Global.Configurable`1
  isExternal: true
  href: Configurable-1.html
  name: Configurable<T>
  nameWithType: Configurable<T>
  fullName: Configurable<T>
  nameWithType.vb: Configurable(Of T)
  fullName.vb: Configurable(Of T)
  name.vb: Configurable(Of T)
  spec.csharp:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ConfigurableInfo
  commentId: T:Global.ConfigurableInfo
  isExternal: true
  href: ConfigurableInfo.html
  name: ConfigurableInfo
  nameWithType: ConfigurableInfo
  fullName: ConfigurableInfo
- uid: Global.OptionInterface.ConfigHolder.LoadConfig*
  commentId: Overload:Global.OptionInterface.ConfigHolder.LoadConfig
  isExternal: true
  href: Global.OptionInterface.ConfigHolder.html#OptionInterface_ConfigHolder_LoadConfig
  name: LoadConfig
  nameWithType: OptionInterface.ConfigHolder.LoadConfig
  fullName: OptionInterface.ConfigHolder.LoadConfig
- uid: Global.OptionInterface.ConfigHolder.SaveConfig*
  commentId: Overload:Global.OptionInterface.ConfigHolder.SaveConfig
  isExternal: true
  href: Global.OptionInterface.ConfigHolder.html#OptionInterface_ConfigHolder_SaveConfig_System_String_
  name: SaveConfig
  nameWithType: OptionInterface.ConfigHolder.SaveConfig
  fullName: OptionInterface.ConfigHolder.SaveConfig
- uid: Global.OptionInterface.ConfigHolder.ContainsConfig*
  commentId: Overload:Global.OptionInterface.ConfigHolder.ContainsConfig
  isExternal: true
  href: Global.OptionInterface.ConfigHolder.html#OptionInterface_ConfigHolder_ContainsConfig
  name: ContainsConfig
  nameWithType: OptionInterface.ConfigHolder.ContainsConfig
  fullName: OptionInterface.ConfigHolder.ContainsConfig
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
