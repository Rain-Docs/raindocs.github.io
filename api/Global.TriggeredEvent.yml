### YamlMime:ManagedReference
items:
- uid: Global.TriggeredEvent
  commentId: T:Global.TriggeredEvent
  id: TriggeredEvent
  parent: Global
  children:
  - Global.TriggeredEvent.#ctor(TriggeredEvent.EventType)
  - Global.TriggeredEvent.FromString(System.String[])
  - Global.TriggeredEvent.ToString
  - Global.TriggeredEvent.type
  - Global.TriggeredEvent.unrecognizedSaveStrings
  langs:
  - csharp
  - vb
  name: TriggeredEvent
  nameWithType: TriggeredEvent
  fullName: TriggeredEvent
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TriggeredEvent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class TriggeredEvent
    content.vb: Public Class TriggeredEvent
  inheritance:
  - System.Object
  derivedClasses:
  - Global.MusicEvent
  - Global.ShowProjectedImageEvent
  - Global.StopMusicEvent
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.TriggeredEvent.type
  commentId: F:Global.TriggeredEvent.type
  id: type
  parent: Global.TriggeredEvent
  langs:
  - csharp
  - vb
  name: type
  nameWithType: TriggeredEvent.type
  fullName: TriggeredEvent.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TriggeredEvent.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TriggeredEvent.EventType type
    return:
      type: Global.TriggeredEvent.EventType
    content.vb: Public type As TriggeredEvent.EventType
- uid: Global.TriggeredEvent.unrecognizedSaveStrings
  commentId: F:Global.TriggeredEvent.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.TriggeredEvent
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: TriggeredEvent.unrecognizedSaveStrings
  fullName: TriggeredEvent.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TriggeredEvent.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedSaveStrings As List(Of String)
- uid: Global.TriggeredEvent.#ctor(TriggeredEvent.EventType)
  commentId: M:Global.TriggeredEvent.#ctor(TriggeredEvent.EventType)
  id: '#ctor(TriggeredEvent.EventType)'
  parent: Global.TriggeredEvent
  langs:
  - csharp
  - vb
  name: TriggeredEvent(EventType)
  nameWithType: TriggeredEvent.TriggeredEvent(TriggeredEvent.EventType)
  fullName: TriggeredEvent.TriggeredEvent(TriggeredEvent.EventType)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TriggeredEvent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TriggeredEvent(TriggeredEvent.EventType type)
    parameters:
    - id: type
      type: Global.TriggeredEvent.EventType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:TriggeredEvent.#ctor(TriggeredEvent.EventType)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As TriggeredEvent.EventType)
  overload: Global.TriggeredEvent.#ctor*
  nameWithType.vb: TriggeredEvent.New(TriggeredEvent.EventType)
  fullName.vb: TriggeredEvent.New(TriggeredEvent.EventType)
  name.vb: New(EventType)
- uid: Global.TriggeredEvent.ToString
  commentId: M:Global.TriggeredEvent.ToString
  id: ToString
  parent: Global.TriggeredEvent
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: TriggeredEvent.ToString()
  fullName: TriggeredEvent.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TriggeredEvent.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TriggeredEvent.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.TriggeredEvent.ToString*
- uid: Global.TriggeredEvent.FromString(System.String[])
  commentId: M:Global.TriggeredEvent.FromString(System.String[])
  id: FromString(System.String[])
  parent: Global.TriggeredEvent
  langs:
  - csharp
  - vb
  name: FromString(string[])
  nameWithType: TriggeredEvent.FromString(string[])
  fullName: TriggeredEvent.FromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TriggeredEvent.FromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void FromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:TriggeredEvent.FromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub FromString(s As String())
  overload: Global.TriggeredEvent.FromString*
  nameWithType.vb: TriggeredEvent.FromString(String())
  fullName.vb: TriggeredEvent.FromString(String())
  name.vb: FromString(String())
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.TriggeredEvent.EventType
  commentId: T:Global.TriggeredEvent.EventType
  isExternal: true
  href: TriggeredEvent.html
  name: TriggeredEvent.EventType
  nameWithType: TriggeredEvent.EventType
  fullName: TriggeredEvent.EventType
  spec.csharp:
  - uid: Global.TriggeredEvent
    name: TriggeredEvent
    isExternal: true
    href: TriggeredEvent.html
  - name: .
  - uid: Global.TriggeredEvent.EventType
    name: EventType
    isExternal: true
    href: TriggeredEvent.EventType.html
  spec.vb:
  - uid: Global.TriggeredEvent
    name: TriggeredEvent
    isExternal: true
    href: TriggeredEvent.html
  - name: .
  - uid: Global.TriggeredEvent.EventType
    name: EventType
    isExternal: true
    href: TriggeredEvent.EventType.html
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.TriggeredEvent.#ctor*
  commentId: Overload:Global.TriggeredEvent.#ctor
  isExternal: true
  href: Global.TriggeredEvent.html#TriggeredEvent__ctor_TriggeredEvent_EventType_
  name: TriggeredEvent
  nameWithType: TriggeredEvent.TriggeredEvent
  fullName: TriggeredEvent.TriggeredEvent
  nameWithType.vb: TriggeredEvent.New
  fullName.vb: TriggeredEvent.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.TriggeredEvent.ToString*
  commentId: Overload:Global.TriggeredEvent.ToString
  isExternal: true
  href: Global.TriggeredEvent.html#TriggeredEvent_ToString
  name: ToString
  nameWithType: TriggeredEvent.ToString
  fullName: TriggeredEvent.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.TriggeredEvent.FromString*
  commentId: Overload:Global.TriggeredEvent.FromString
  isExternal: true
  href: Global.TriggeredEvent.html#TriggeredEvent_FromString_System_String___
  name: FromString
  nameWithType: TriggeredEvent.FromString
  fullName: TriggeredEvent.FromString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
