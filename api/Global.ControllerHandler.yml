### YamlMime:ManagedReference
items:
- uid: Global.ControllerHandler
  commentId: T:Global.ControllerHandler
  id: ControllerHandler
  parent: Global
  children:
  - Global.ControllerHandler.#ctor
  - Global.ControllerHandler.AttemptScreenShakeRumble(System.Single)
  - Global.ControllerHandler.OnPlayerDeath
  - Global.ControllerHandler.ResetHandler(System.Boolean)
  - Global.ControllerHandler.SetLightBarColour(UnityEngine.Color)
  - Global.ControllerHandler.SetRumblePaused(System.Boolean)
  - Global.ControllerHandler.StopRumble
  - Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)
  - Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)
  - Global.ControllerHandler.WarningSetUp(System.Int32)
  langs:
  - csharp
  - vb
  name: ControllerHandler
  nameWithType: ControllerHandler
  fullName: ControllerHandler
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ControllerHandler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ControllerHandler : MonoBehaviour'
    content.vb: Public Class ControllerHandler Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Global.ControllerHandler.ResetHandler(System.Boolean)
  commentId: M:Global.ControllerHandler.ResetHandler(System.Boolean)
  id: ResetHandler(System.Boolean)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: ResetHandler(bool)
  nameWithType: ControllerHandler.ResetHandler(bool)
  fullName: ControllerHandler.ResetHandler(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.ResetHandler(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetHandler(bool isPlayerDead)
    parameters:
    - id: isPlayerDead
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isPlayerDead</parameter>
            <parameter>M:ControllerHandler.ResetHandler(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ResetHandler(isPlayerDead As Boolean)
  overload: Global.ControllerHandler.ResetHandler*
  nameWithType.vb: ControllerHandler.ResetHandler(Boolean)
  fullName.vb: ControllerHandler.ResetHandler(Boolean)
  name.vb: ResetHandler(Boolean)
- uid: Global.ControllerHandler.WarningSetUp(System.Int32)
  commentId: M:Global.ControllerHandler.WarningSetUp(System.Int32)
  id: WarningSetUp(System.Int32)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: WarningSetUp(int)
  nameWithType: ControllerHandler.WarningSetUp(int)
  fullName: ControllerHandler.WarningSetUp(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.WarningSetUp(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WarningSetUp(int cycleLength)
    parameters:
    - id: cycleLength
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cycleLength</parameter>
            <parameter>M:ControllerHandler.WarningSetUp(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub WarningSetUp(cycleLength As Integer)
  overload: Global.ControllerHandler.WarningSetUp*
  nameWithType.vb: ControllerHandler.WarningSetUp(Integer)
  fullName.vb: ControllerHandler.WarningSetUp(Integer)
  name.vb: WarningSetUp(Integer)
- uid: Global.ControllerHandler.OnPlayerDeath
  commentId: M:Global.ControllerHandler.OnPlayerDeath
  id: OnPlayerDeath
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: OnPlayerDeath()
  nameWithType: ControllerHandler.OnPlayerDeath()
  fullName: ControllerHandler.OnPlayerDeath()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.OnPlayerDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void OnPlayerDeath()
    content.vb: Public Sub OnPlayerDeath()
  overload: Global.ControllerHandler.OnPlayerDeath*
- uid: Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)
  commentId: M:Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)
  id: UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: UpdateWarning(int, int, bool, bool)
  nameWithType: ControllerHandler.UpdateWarning(int, int, bool, bool)
  fullName: ControllerHandler.UpdateWarning(int, int, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateWarning(int timer, int timeUntilRain, bool roomInDanger, bool rumbleActive)
    parameters:
    - id: timer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timer</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: timeUntilRain
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeUntilRain</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: roomInDanger
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomInDanger</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rumbleActive
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rumbleActive</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateWarning(timer As Integer, timeUntilRain As Integer, roomInDanger As Boolean, rumbleActive As Boolean)
  overload: Global.ControllerHandler.UpdateWarning*
  nameWithType.vb: ControllerHandler.UpdateWarning(Integer, Integer, Boolean, Boolean)
  fullName.vb: ControllerHandler.UpdateWarning(Integer, Integer, Boolean, Boolean)
  name.vb: UpdateWarning(Integer, Integer, Boolean, Boolean)
- uid: Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)
  id: UpdateWarning(System.Int32,System.Int32,System.Boolean)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: UpdateWarning(int, int, bool)
  nameWithType: ControllerHandler.UpdateWarning(int, int, bool)
  fullName: ControllerHandler.UpdateWarning(int, int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use four parameter function instead.")]

      public void UpdateWarning(int timer, int timeUntilRain, bool roomInDanger)
    parameters:
    - id: timer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timer</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: timeUntilRain
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeUntilRain</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: roomInDanger
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomInDanger</parameter>
            <parameter>M:ControllerHandler.UpdateWarning(System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use four parameter function instead.")>

      Public Sub UpdateWarning(timer As Integer, timeUntilRain As Integer, roomInDanger As Boolean)
  overload: Global.ControllerHandler.UpdateWarning*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use four parameter function instead.
  nameWithType.vb: ControllerHandler.UpdateWarning(Integer, Integer, Boolean)
  fullName.vb: ControllerHandler.UpdateWarning(Integer, Integer, Boolean)
  name.vb: UpdateWarning(Integer, Integer, Boolean)
- uid: Global.ControllerHandler.SetRumblePaused(System.Boolean)
  commentId: M:Global.ControllerHandler.SetRumblePaused(System.Boolean)
  id: SetRumblePaused(System.Boolean)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: SetRumblePaused(bool)
  nameWithType: ControllerHandler.SetRumblePaused(bool)
  fullName: ControllerHandler.SetRumblePaused(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.SetRumblePaused(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetRumblePaused(bool paused)
    parameters:
    - id: paused
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>paused</parameter>
            <parameter>M:ControllerHandler.SetRumblePaused(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetRumblePaused(paused As Boolean)
  overload: Global.ControllerHandler.SetRumblePaused*
  nameWithType.vb: ControllerHandler.SetRumblePaused(Boolean)
  fullName.vb: ControllerHandler.SetRumblePaused(Boolean)
  name.vb: SetRumblePaused(Boolean)
- uid: Global.ControllerHandler.StopRumble
  commentId: M:Global.ControllerHandler.StopRumble
  id: StopRumble
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: StopRumble()
  nameWithType: ControllerHandler.StopRumble()
  fullName: ControllerHandler.StopRumble()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.StopRumble</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StopRumble()
    content.vb: Public Sub StopRumble()
  overload: Global.ControllerHandler.StopRumble*
- uid: Global.ControllerHandler.AttemptScreenShakeRumble(System.Single)
  commentId: M:Global.ControllerHandler.AttemptScreenShakeRumble(System.Single)
  id: AttemptScreenShakeRumble(System.Single)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: AttemptScreenShakeRumble(float)
  nameWithType: ControllerHandler.AttemptScreenShakeRumble(float)
  fullName: ControllerHandler.AttemptScreenShakeRumble(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.AttemptScreenShakeRumble(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AttemptScreenShakeRumble(float screenShakeAmount)
    parameters:
    - id: screenShakeAmount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>screenShakeAmount</parameter>
            <parameter>M:ControllerHandler.AttemptScreenShakeRumble(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AttemptScreenShakeRumble(screenShakeAmount As Single)
  overload: Global.ControllerHandler.AttemptScreenShakeRumble*
  nameWithType.vb: ControllerHandler.AttemptScreenShakeRumble(Single)
  fullName.vb: ControllerHandler.AttemptScreenShakeRumble(Single)
  name.vb: AttemptScreenShakeRumble(Single)
- uid: Global.ControllerHandler.SetLightBarColour(UnityEngine.Color)
  commentId: M:Global.ControllerHandler.SetLightBarColour(UnityEngine.Color)
  id: SetLightBarColour(UnityEngine.Color)
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: SetLightBarColour(Color)
  nameWithType: ControllerHandler.SetLightBarColour(Color)
  fullName: ControllerHandler.SetLightBarColour(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ControllerHandler.SetLightBarColour(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetLightBarColour(Color colour)
    parameters:
    - id: colour
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colour</parameter>
            <parameter>M:ControllerHandler.SetLightBarColour(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetLightBarColour(colour As Color)
  overload: Global.ControllerHandler.SetLightBarColour*
- uid: Global.ControllerHandler.#ctor
  commentId: M:Global.ControllerHandler.#ctor
  id: '#ctor'
  parent: Global.ControllerHandler
  langs:
  - csharp
  - vb
  name: ControllerHandler()
  nameWithType: ControllerHandler.ControllerHandler()
  fullName: ControllerHandler.ControllerHandler()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ControllerHandler</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ControllerHandler()
    content.vb: Public Sub New()
  overload: Global.ControllerHandler.#ctor*
  nameWithType.vb: ControllerHandler.New()
  fullName.vb: ControllerHandler.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ControllerHandler.ResetHandler*
  commentId: Overload:Global.ControllerHandler.ResetHandler
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_ResetHandler_System_Boolean_
  name: ResetHandler
  nameWithType: ControllerHandler.ResetHandler
  fullName: ControllerHandler.ResetHandler
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ControllerHandler.WarningSetUp*
  commentId: Overload:Global.ControllerHandler.WarningSetUp
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_WarningSetUp_System_Int32_
  name: WarningSetUp
  nameWithType: ControllerHandler.WarningSetUp
  fullName: ControllerHandler.WarningSetUp
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ControllerHandler.OnPlayerDeath*
  commentId: Overload:Global.ControllerHandler.OnPlayerDeath
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_OnPlayerDeath
  name: OnPlayerDeath
  nameWithType: ControllerHandler.OnPlayerDeath
  fullName: ControllerHandler.OnPlayerDeath
- uid: Global.ControllerHandler.UpdateWarning*
  commentId: Overload:Global.ControllerHandler.UpdateWarning
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_UpdateWarning_System_Int32_System_Int32_System_Boolean_System_Boolean_
  name: UpdateWarning
  nameWithType: ControllerHandler.UpdateWarning
  fullName: ControllerHandler.UpdateWarning
- uid: Global.ControllerHandler.SetRumblePaused*
  commentId: Overload:Global.ControllerHandler.SetRumblePaused
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_SetRumblePaused_System_Boolean_
  name: SetRumblePaused
  nameWithType: ControllerHandler.SetRumblePaused
  fullName: ControllerHandler.SetRumblePaused
- uid: Global.ControllerHandler.StopRumble*
  commentId: Overload:Global.ControllerHandler.StopRumble
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_StopRumble
  name: StopRumble
  nameWithType: ControllerHandler.StopRumble
  fullName: ControllerHandler.StopRumble
- uid: Global.ControllerHandler.AttemptScreenShakeRumble*
  commentId: Overload:Global.ControllerHandler.AttemptScreenShakeRumble
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_AttemptScreenShakeRumble_System_Single_
  name: AttemptScreenShakeRumble
  nameWithType: ControllerHandler.AttemptScreenShakeRumble
  fullName: ControllerHandler.AttemptScreenShakeRumble
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.ControllerHandler.SetLightBarColour*
  commentId: Overload:Global.ControllerHandler.SetLightBarColour
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler_SetLightBarColour_UnityEngine_Color_
  name: SetLightBarColour
  nameWithType: ControllerHandler.SetLightBarColour
  fullName: ControllerHandler.SetLightBarColour
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.ControllerHandler.#ctor*
  commentId: Overload:Global.ControllerHandler.#ctor
  isExternal: true
  href: Global.ControllerHandler.html#ControllerHandler__ctor
  name: ControllerHandler
  nameWithType: ControllerHandler.ControllerHandler
  fullName: ControllerHandler.ControllerHandler
  nameWithType.vb: ControllerHandler.New
  fullName.vb: ControllerHandler.New
  name.vb: New
