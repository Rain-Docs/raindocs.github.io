### YamlMime:ManagedReference
items:
- uid: Global.FAtlas
  commentId: T:Global.FAtlas
  id: FAtlas
  parent: Global
  children:
  - Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)
  - Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)
  - Global.FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  - Global.FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  - Global.FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)
  - Global.FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)
  - Global.FAtlas.IsAsset
  - Global.FAtlas.Unload
  - Global.FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)
  - Global.FAtlas.dataPath
  - Global.FAtlas.elements
  - Global.FAtlas.imagePath
  - Global.FAtlas.index
  - Global.FAtlas.isSingleImage
  - Global.FAtlas.name
  - Global.FAtlas.texture
  - Global.FAtlas.textureSize
  langs:
  - csharp
  - vb
  name: FAtlas
  nameWithType: FAtlas
  fullName: FAtlas
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FAtlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FAtlas
    content.vb: Public Class FAtlas
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  commentId: M:Global.FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  id: '#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)'
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: FAtlas(string, Texture, int, bool)
  nameWithType: FAtlas.FAtlas(string, Texture, int, bool)
  fullName: FAtlas.FAtlas(string, UnityEngine.Texture, int, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FAtlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlas(string name, Texture texture, int index, bool textureFromAsset)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: texture
      type: UnityEngine.Texture
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: textureFromAsset
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textureFromAsset</parameter>
            <parameter>M:FAtlas.#ctor(System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, texture As Texture, index As Integer, textureFromAsset As Boolean)
  overload: Global.FAtlas.#ctor*
  nameWithType.vb: FAtlas.New(String, Texture, Integer, Boolean)
  fullName.vb: FAtlas.New(String, UnityEngine.Texture, Integer, Boolean)
  name.vb: New(String, Texture, Integer, Boolean)
- uid: Global.FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  commentId: M:Global.FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)'
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: FAtlas(string, string, Texture, int, bool)
  nameWithType: FAtlas.FAtlas(string, string, Texture, int, bool)
  fullName: FAtlas.FAtlas(string, string, UnityEngine.Texture, int, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FAtlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlas(string name, string dataPath, Texture texture, int index, bool textureFromAsset)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: dataPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataPath</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: texture
      type: UnityEngine.Texture
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: textureFromAsset
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textureFromAsset</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,UnityEngine.Texture,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, dataPath As String, texture As Texture, index As Integer, textureFromAsset As Boolean)
  overload: Global.FAtlas.#ctor*
  nameWithType.vb: FAtlas.New(String, String, Texture, Integer, Boolean)
  fullName.vb: FAtlas.New(String, String, UnityEngine.Texture, Integer, Boolean)
  name.vb: New(String, String, Texture, Integer, Boolean)
- uid: Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)
  commentId: M:Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)
  id: '#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)'
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: FAtlas(string, string, string, int, bool)
  nameWithType: FAtlas.FAtlas(string, string, string, int, bool)
  fullName: FAtlas.FAtlas(string, string, string, int, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FAtlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlas(string name, string imagePath, string dataPath, int index, bool shouldLoadAsSingleImage)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: imagePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>imagePath</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: dataPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataPath</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: shouldLoadAsSingleImage
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shouldLoadAsSingleImage</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, imagePath As String, dataPath As String, index As Integer, shouldLoadAsSingleImage As Boolean)
  overload: Global.FAtlas.#ctor*
  nameWithType.vb: FAtlas.New(String, String, String, Integer, Boolean)
  fullName.vb: FAtlas.New(String, String, String, Integer, Boolean)
  name.vb: New(String, String, String, Integer, Boolean)
- uid: Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)
  commentId: M:Global.FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)
  id: '#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)'
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: FAtlas(string, string, string, int, bool, string)
  nameWithType: FAtlas.FAtlas(string, string, string, int, bool, string)
  fullName: FAtlas.FAtlas(string, string, string, int, bool, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FAtlas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlas(string name, string imagePath, string dataPath, int index, bool shouldLoadAsSingleImage, string address)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: imagePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>imagePath</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: dataPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dataPath</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: shouldLoadAsSingleImage
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shouldLoadAsSingleImage</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: address
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>address</parameter>
            <parameter>M:FAtlas.#ctor(System.String,System.String,System.String,System.Int32,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, imagePath As String, dataPath As String, index As Integer, shouldLoadAsSingleImage As Boolean, address As String)
  overload: Global.FAtlas.#ctor*
  nameWithType.vb: FAtlas.New(String, String, String, Integer, Boolean, String)
  fullName.vb: FAtlas.New(String, String, String, Integer, Boolean, String)
  name.vb: New(String, String, String, Integer, Boolean, String)
- uid: Global.FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)
  id: UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: UpdateElement(FAtlasElement, float, float, float, float)
  nameWithType: FAtlas.UpdateElement(FAtlasElement, float, float, float, float)
  fullName: FAtlas.UpdateElement(FAtlasElement, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateElement(FAtlasElement element, float leftX, float bottomY, float pixelWidth, float pixelHeight)
    parameters:
    - id: element
      type: Global.FAtlasElement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>element</parameter>
            <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: leftX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leftX</parameter>
            <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: bottomY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bottomY</parameter>
            <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelWidth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelWidth</parameter>
            <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelHeight
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelHeight</parameter>
            <parameter>M:FAtlas.UpdateElement(FAtlasElement,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateElement(element As FAtlasElement, leftX As Single, bottomY As Single, pixelWidth As Single, pixelHeight As Single)
  overload: Global.FAtlas.UpdateElement*
  nameWithType.vb: FAtlas.UpdateElement(FAtlasElement, Single, Single, Single, Single)
  fullName.vb: FAtlas.UpdateElement(FAtlasElement, Single, Single, Single, Single)
  name.vb: UpdateElement(FAtlasElement, Single, Single, Single, Single)
- uid: Global.FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)
  id: CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: CreateUnnamedElement(float, float, float, float)
  nameWithType: FAtlas.CreateUnnamedElement(float, float, float, float)
  fullName: FAtlas.CreateUnnamedElement(float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlasElement CreateUnnamedElement(float leftX, float bottomY, float pixelWidth, float pixelHeight)
    parameters:
    - id: leftX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leftX</parameter>
            <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: bottomY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bottomY</parameter>
            <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelWidth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelWidth</parameter>
            <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelHeight
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelHeight</parameter>
            <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.FAtlasElement
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FAtlas.CreateUnnamedElement(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreateUnnamedElement(leftX As Single, bottomY As Single, pixelWidth As Single, pixelHeight As Single) As FAtlasElement
  overload: Global.FAtlas.CreateUnnamedElement*
  nameWithType.vb: FAtlas.CreateUnnamedElement(Single, Single, Single, Single)
  fullName.vb: FAtlas.CreateUnnamedElement(Single, Single, Single, Single)
  name.vb: CreateUnnamedElement(Single, Single, Single, Single)
- uid: Global.FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)
  id: CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: CreateNamedElement(string, float, float, float, float)
  nameWithType: FAtlas.CreateNamedElement(string, float, float, float, float)
  fullName: FAtlas.CreateNamedElement(string, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FAtlasElement CreateNamedElement(string elementName, float leftX, float bottomY, float pixelWidth, float pixelHeight)
    parameters:
    - id: elementName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elementName</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: leftX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leftX</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: bottomY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bottomY</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelWidth
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelWidth</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pixelHeight
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pixelHeight</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.FAtlasElement
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FAtlas.CreateNamedElement(System.String,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreateNamedElement(elementName As String, leftX As Single, bottomY As Single, pixelWidth As Single, pixelHeight As Single) As FAtlasElement
  overload: Global.FAtlas.CreateNamedElement*
  nameWithType.vb: FAtlas.CreateNamedElement(String, Single, Single, Single, Single)
  fullName.vb: FAtlas.CreateNamedElement(String, Single, Single, Single, Single)
  name.vb: CreateNamedElement(String, Single, Single, Single, Single)
- uid: Global.FAtlas.Unload
  commentId: M:Global.FAtlas.Unload
  id: Unload
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: FAtlas.Unload()
  fullName: FAtlas.Unload()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FAtlas.Unload</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Unload()
    content.vb: Public Sub Unload()
  overload: Global.FAtlas.Unload*
- uid: Global.FAtlas.IsAsset
  commentId: M:Global.FAtlas.IsAsset
  id: IsAsset
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: IsAsset()
  nameWithType: FAtlas.IsAsset()
  fullName: FAtlas.IsAsset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FAtlas.IsAsset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsAsset()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FAtlas.IsAsset</parameter>
          </include>
        </markup>
    content.vb: Public Function IsAsset() As Boolean
  overload: Global.FAtlas.IsAsset*
- uid: Global.FAtlas.elements
  commentId: P:Global.FAtlas.elements
  id: elements
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: elements
  nameWithType: FAtlas.elements
  fullName: FAtlas.elements
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.elements</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<FAtlasElement> elements { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{FAtlasElement}
    content.vb: Public ReadOnly Property elements As List(Of FAtlasElement)
  overload: Global.FAtlas.elements*
- uid: Global.FAtlas.index
  commentId: P:Global.FAtlas.index
  id: index
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: index
  nameWithType: FAtlas.index
  fullName: FAtlas.index
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property index As Integer
  overload: Global.FAtlas.index*
- uid: Global.FAtlas.texture
  commentId: P:Global.FAtlas.texture
  id: texture
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: texture
  nameWithType: FAtlas.texture
  fullName: FAtlas.texture
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.texture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Texture texture { get; }
    parameters: []
    return:
      type: UnityEngine.Texture
    content.vb: Public ReadOnly Property texture As Texture
  overload: Global.FAtlas.texture*
- uid: Global.FAtlas.textureSize
  commentId: P:Global.FAtlas.textureSize
  id: textureSize
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: textureSize
  nameWithType: FAtlas.textureSize
  fullName: FAtlas.textureSize
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.textureSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 textureSize { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property textureSize As Vector2
  overload: Global.FAtlas.textureSize*
- uid: Global.FAtlas.name
  commentId: P:Global.FAtlas.name
  id: name
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: name
  nameWithType: FAtlas.name
  fullName: FAtlas.name
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property name As String
  overload: Global.FAtlas.name*
- uid: Global.FAtlas.imagePath
  commentId: P:Global.FAtlas.imagePath
  id: imagePath
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: imagePath
  nameWithType: FAtlas.imagePath
  fullName: FAtlas.imagePath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.imagePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string imagePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property imagePath As String
  overload: Global.FAtlas.imagePath*
- uid: Global.FAtlas.dataPath
  commentId: P:Global.FAtlas.dataPath
  id: dataPath
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: dataPath
  nameWithType: FAtlas.dataPath
  fullName: FAtlas.dataPath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.dataPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string dataPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property dataPath As String
  overload: Global.FAtlas.dataPath*
- uid: Global.FAtlas.isSingleImage
  commentId: P:Global.FAtlas.isSingleImage
  id: isSingleImage
  parent: Global.FAtlas
  langs:
  - csharp
  - vb
  name: isSingleImage
  nameWithType: FAtlas.isSingleImage
  fullName: FAtlas.isSingleImage
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FAtlas.isSingleImage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isSingleImage { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSingleImage As Boolean
  overload: Global.FAtlas.isSingleImage*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FAtlas.#ctor*
  commentId: Overload:Global.FAtlas.#ctor
  isExternal: true
  href: Global.FAtlas.html#FAtlas__ctor_System_String_UnityEngine_Texture_System_Int32_System_Boolean_
  name: FAtlas
  nameWithType: FAtlas.FAtlas
  fullName: FAtlas.FAtlas
  nameWithType.vb: FAtlas.New
  fullName.vb: FAtlas.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Texture
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FAtlas.UpdateElement*
  commentId: Overload:Global.FAtlas.UpdateElement
  isExternal: true
  href: Global.FAtlas.html#FAtlas_UpdateElement_FAtlasElement_System_Single_System_Single_System_Single_System_Single_
  name: UpdateElement
  nameWithType: FAtlas.UpdateElement
  fullName: FAtlas.UpdateElement
- uid: Global.FAtlasElement
  commentId: T:Global.FAtlasElement
  isExternal: true
  href: FAtlasElement.html
  name: FAtlasElement
  nameWithType: FAtlasElement
  fullName: FAtlasElement
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FAtlas.CreateUnnamedElement*
  commentId: Overload:Global.FAtlas.CreateUnnamedElement
  isExternal: true
  href: Global.FAtlas.html#FAtlas_CreateUnnamedElement_System_Single_System_Single_System_Single_System_Single_
  name: CreateUnnamedElement
  nameWithType: FAtlas.CreateUnnamedElement
  fullName: FAtlas.CreateUnnamedElement
- uid: Global.FAtlas.CreateNamedElement*
  commentId: Overload:Global.FAtlas.CreateNamedElement
  isExternal: true
  href: Global.FAtlas.html#FAtlas_CreateNamedElement_System_String_System_Single_System_Single_System_Single_System_Single_
  name: CreateNamedElement
  nameWithType: FAtlas.CreateNamedElement
  fullName: FAtlas.CreateNamedElement
- uid: Global.FAtlas.Unload*
  commentId: Overload:Global.FAtlas.Unload
  isExternal: true
  href: Global.FAtlas.html#FAtlas_Unload
  name: Unload
  nameWithType: FAtlas.Unload
  fullName: FAtlas.Unload
- uid: Global.FAtlas.IsAsset*
  commentId: Overload:Global.FAtlas.IsAsset
  isExternal: true
  href: Global.FAtlas.html#FAtlas_IsAsset
  name: IsAsset
  nameWithType: FAtlas.IsAsset
  fullName: FAtlas.IsAsset
- uid: Global.FAtlas.elements*
  commentId: Overload:Global.FAtlas.elements
  isExternal: true
  href: Global.FAtlas.html#FAtlas_elements
  name: elements
  nameWithType: FAtlas.elements
  fullName: FAtlas.elements
- uid: System.Collections.Generic.List{FAtlasElement}
  commentId: T:System.Collections.Generic.List{FAtlasElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FAtlasElement>
  nameWithType: List<FAtlasElement>
  fullName: System.Collections.Generic.List<FAtlasElement>
  nameWithType.vb: List(Of FAtlasElement)
  fullName.vb: System.Collections.Generic.List(Of FAtlasElement)
  name.vb: List(Of FAtlasElement)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.FAtlasElement
    name: FAtlasElement
    isExternal: true
    href: FAtlasElement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.FAtlasElement
    name: FAtlasElement
    isExternal: true
    href: FAtlasElement.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.FAtlas.index*
  commentId: Overload:Global.FAtlas.index
  isExternal: true
  href: Global.FAtlas.html#FAtlas_index
  name: index
  nameWithType: FAtlas.index
  fullName: FAtlas.index
- uid: Global.FAtlas.texture*
  commentId: Overload:Global.FAtlas.texture
  isExternal: true
  href: Global.FAtlas.html#FAtlas_texture
  name: texture
  nameWithType: FAtlas.texture
  fullName: FAtlas.texture
- uid: Global.FAtlas.textureSize*
  commentId: Overload:Global.FAtlas.textureSize
  isExternal: true
  href: Global.FAtlas.html#FAtlas_textureSize
  name: textureSize
  nameWithType: FAtlas.textureSize
  fullName: FAtlas.textureSize
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FAtlas.name*
  commentId: Overload:Global.FAtlas.name
  isExternal: true
  href: Global.FAtlas.html#FAtlas_name
  name: name
  nameWithType: FAtlas.name
  fullName: FAtlas.name
- uid: Global.FAtlas.imagePath*
  commentId: Overload:Global.FAtlas.imagePath
  isExternal: true
  href: Global.FAtlas.html#FAtlas_imagePath
  name: imagePath
  nameWithType: FAtlas.imagePath
  fullName: FAtlas.imagePath
- uid: Global.FAtlas.dataPath*
  commentId: Overload:Global.FAtlas.dataPath
  isExternal: true
  href: Global.FAtlas.html#FAtlas_dataPath
  name: dataPath
  nameWithType: FAtlas.dataPath
  fullName: FAtlas.dataPath
- uid: Global.FAtlas.isSingleImage*
  commentId: Overload:Global.FAtlas.isSingleImage
  isExternal: true
  href: Global.FAtlas.html#FAtlas_isSingleImage
  name: isSingleImage
  nameWithType: FAtlas.isSingleImage
  fullName: FAtlas.isSingleImage
