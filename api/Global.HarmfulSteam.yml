### YamlMime:ManagedReference
items:
- uid: Global.HarmfulSteam
  commentId: T:Global.HarmfulSteam
  id: HarmfulSteam
  parent: Global
  children:
  - Global.HarmfulSteam.#ctor(PlacedObject,Room)
  - Global.HarmfulSteam.Update(System.Boolean)
  - Global.HarmfulSteam.dangerRange
  - Global.HarmfulSteam.data
  - Global.HarmfulSteam.duration
  - Global.HarmfulSteam.durationTarget
  - Global.HarmfulSteam.frequency
  - Global.HarmfulSteam.frequencyTarget
  - Global.HarmfulSteam.fromPos
  - Global.HarmfulSteam.lifetime
  - Global.HarmfulSteam.placedObject
  - Global.HarmfulSteam.soundLoop
  - Global.HarmfulSteam.steam
  - Global.HarmfulSteam.steamZone
  - Global.HarmfulSteam.toPos
  langs:
  - csharp
  - vb
  name: HarmfulSteam
  nameWithType: HarmfulSteam
  fullName: HarmfulSteam
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HarmfulSteam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class HarmfulSteam : UpdatableAndDeletable'
    content.vb: Public Class HarmfulSteam Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.HarmfulSteam.placedObject
  commentId: F:Global.HarmfulSteam.placedObject
  id: placedObject
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: placedObject
  nameWithType: HarmfulSteam.placedObject
  fullName: HarmfulSteam.placedObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.placedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject placedObject
    return:
      type: Global.PlacedObject
    content.vb: Public placedObject As PlacedObject
- uid: Global.HarmfulSteam.data
  commentId: F:Global.HarmfulSteam.data
  id: data
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: data
  nameWithType: HarmfulSteam.data
  fullName: HarmfulSteam.data
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.HarmfulSteamData data
    return:
      type: Global.PlacedObject.HarmfulSteamData
    content.vb: Public data As PlacedObject.HarmfulSteamData
- uid: Global.HarmfulSteam.durationTarget
  commentId: F:Global.HarmfulSteam.durationTarget
  id: durationTarget
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: durationTarget
  nameWithType: HarmfulSteam.durationTarget
  fullName: HarmfulSteam.durationTarget
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.durationTarget</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float durationTarget
    return:
      type: System.Single
    content.vb: Public durationTarget As Single
- uid: Global.HarmfulSteam.frequencyTarget
  commentId: F:Global.HarmfulSteam.frequencyTarget
  id: frequencyTarget
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: frequencyTarget
  nameWithType: HarmfulSteam.frequencyTarget
  fullName: HarmfulSteam.frequencyTarget
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.frequencyTarget</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float frequencyTarget
    return:
      type: System.Single
    content.vb: Public frequencyTarget As Single
- uid: Global.HarmfulSteam.duration
  commentId: F:Global.HarmfulSteam.duration
  id: duration
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: duration
  nameWithType: HarmfulSteam.duration
  fullName: HarmfulSteam.duration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.duration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float duration
    return:
      type: System.Single
    content.vb: Public duration As Single
- uid: Global.HarmfulSteam.frequency
  commentId: F:Global.HarmfulSteam.frequency
  id: frequency
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: frequency
  nameWithType: HarmfulSteam.frequency
  fullName: HarmfulSteam.frequency
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.frequency</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float frequency
    return:
      type: System.Single
    content.vb: Public frequency As Single
- uid: Global.HarmfulSteam.lifetime
  commentId: F:Global.HarmfulSteam.lifetime
  id: lifetime
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: lifetime
  nameWithType: HarmfulSteam.lifetime
  fullName: HarmfulSteam.lifetime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.lifetime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lifetime
    return:
      type: System.Single
    content.vb: Public lifetime As Single
- uid: Global.HarmfulSteam.dangerRange
  commentId: F:Global.HarmfulSteam.dangerRange
  id: dangerRange
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: dangerRange
  nameWithType: HarmfulSteam.dangerRange
  fullName: HarmfulSteam.dangerRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.dangerRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dangerRange
    return:
      type: System.Single
    content.vb: Public dangerRange As Single
- uid: Global.HarmfulSteam.fromPos
  commentId: F:Global.HarmfulSteam.fromPos
  id: fromPos
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: fromPos
  nameWithType: HarmfulSteam.fromPos
  fullName: HarmfulSteam.fromPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.fromPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 fromPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public fromPos As Vector2
- uid: Global.HarmfulSteam.toPos
  commentId: F:Global.HarmfulSteam.toPos
  id: toPos
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: toPos
  nameWithType: HarmfulSteam.toPos
  fullName: HarmfulSteam.toPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.toPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 toPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public toPos As Vector2
- uid: Global.HarmfulSteam.steamZone
  commentId: F:Global.HarmfulSteam.steamZone
  id: steamZone
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: steamZone
  nameWithType: HarmfulSteam.steamZone
  fullName: HarmfulSteam.steamZone
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.steamZone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] steamZone
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public steamZone As Vector2()
- uid: Global.HarmfulSteam.steam
  commentId: F:Global.HarmfulSteam.steam
  id: steam
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: steam
  nameWithType: HarmfulSteam.steam
  fullName: HarmfulSteam.steam
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.steam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SteamSmoke steam
    return:
      type: Smoke.SteamSmoke
    content.vb: Public steam As SteamSmoke
- uid: Global.HarmfulSteam.soundLoop
  commentId: F:Global.HarmfulSteam.soundLoop
  id: soundLoop
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: HarmfulSteam.soundLoop
  fullName: HarmfulSteam.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HarmfulSteam.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RectangularDynamicSoundLoop soundLoop
    return:
      type: Global.RectangularDynamicSoundLoop
    content.vb: Public soundLoop As RectangularDynamicSoundLoop
- uid: Global.HarmfulSteam.#ctor(PlacedObject,Room)
  commentId: M:Global.HarmfulSteam.#ctor(PlacedObject,Room)
  id: '#ctor(PlacedObject,Room)'
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: HarmfulSteam(PlacedObject, Room)
  nameWithType: HarmfulSteam.HarmfulSteam(PlacedObject, Room)
  fullName: HarmfulSteam.HarmfulSteam(PlacedObject, Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HarmfulSteam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HarmfulSteam(PlacedObject pObj, Room room)
    parameters:
    - id: pObj
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pObj</parameter>
            <parameter>M:HarmfulSteam.#ctor(PlacedObject,Room)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HarmfulSteam.#ctor(PlacedObject,Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(pObj As PlacedObject, room As Room)
  overload: Global.HarmfulSteam.#ctor*
  nameWithType.vb: HarmfulSteam.New(PlacedObject, Room)
  fullName.vb: HarmfulSteam.New(PlacedObject, Room)
  name.vb: New(PlacedObject, Room)
- uid: Global.HarmfulSteam.Update(System.Boolean)
  commentId: M:Global.HarmfulSteam.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.HarmfulSteam
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: HarmfulSteam.Update(bool)
  fullName: HarmfulSteam.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HarmfulSteam.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:HarmfulSteam.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.HarmfulSteam.Update*
  nameWithType.vb: HarmfulSteam.Update(Boolean)
  fullName.vb: HarmfulSteam.Update(Boolean)
  name.vb: Update(Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Global.PlacedObject.HarmfulSteamData
  commentId: T:Global.PlacedObject.HarmfulSteamData
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.HarmfulSteamData
  nameWithType: PlacedObject.HarmfulSteamData
  fullName: PlacedObject.HarmfulSteamData
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.HarmfulSteamData
    name: HarmfulSteamData
    isExternal: true
    href: PlacedObject.HarmfulSteamData.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.HarmfulSteamData
    name: HarmfulSteamData
    isExternal: true
    href: PlacedObject.HarmfulSteamData.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Smoke.SteamSmoke
  commentId: T:Smoke.SteamSmoke
  parent: Smoke
  isExternal: true
  href: Smoke.SteamSmoke.html
  name: SteamSmoke
  nameWithType: SteamSmoke
  fullName: Smoke.SteamSmoke
- uid: Smoke
  commentId: N:Smoke
  isExternal: true
  href: Smoke.html
  name: Smoke
  nameWithType: Smoke
  fullName: Smoke
- uid: Global.RectangularDynamicSoundLoop
  commentId: T:Global.RectangularDynamicSoundLoop
  isExternal: true
  href: RectangularDynamicSoundLoop.html
  name: RectangularDynamicSoundLoop
  nameWithType: RectangularDynamicSoundLoop
  fullName: RectangularDynamicSoundLoop
- uid: Global.HarmfulSteam.#ctor*
  commentId: Overload:Global.HarmfulSteam.#ctor
  isExternal: true
  href: Global.HarmfulSteam.html#HarmfulSteam__ctor_PlacedObject_Room_
  name: HarmfulSteam
  nameWithType: HarmfulSteam.HarmfulSteam
  fullName: HarmfulSteam.HarmfulSteam
  nameWithType.vb: HarmfulSteam.New
  fullName.vb: HarmfulSteam.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.HarmfulSteam.Update*
  commentId: Overload:Global.HarmfulSteam.Update
  isExternal: true
  href: Global.HarmfulSteam.html#HarmfulSteam_Update_System_Boolean_
  name: Update
  nameWithType: HarmfulSteam.Update
  fullName: HarmfulSteam.Update
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
