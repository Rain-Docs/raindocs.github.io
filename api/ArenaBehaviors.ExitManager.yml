### YamlMime:ManagedReference
items:
- uid: ArenaBehaviors.ExitManager
  commentId: T:ArenaBehaviors.ExitManager
  id: ExitManager
  parent: ArenaBehaviors
  children:
  - ArenaBehaviors.ExitManager.#ctor(ArenaGameSession)
  - ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)
  - ArenaBehaviors.ExitManager.ExitsOpen
  - ArenaBehaviors.ExitManager.Initiate
  - ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)
  - ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  - ArenaBehaviors.ExitManager.Update
  - ArenaBehaviors.ExitManager.allPlayersExitedCounter
  - ArenaBehaviors.ExitManager.anyPlayerHasEnoughScore
  - ArenaBehaviors.ExitManager.challengeCompleted
  - ArenaBehaviors.ExitManager.challengeCompletedA
  - ArenaBehaviors.ExitManager.challengeCompletedB
  - ArenaBehaviors.ExitManager.challengeCompletedTime
  - ArenaBehaviors.ExitManager.exitSymbolDarken
  - ArenaBehaviors.ExitManager.playersInDens
  langs:
  - csharp
  - vb
  name: ExitManager
  nameWithType: ExitManager
  fullName: ArenaBehaviors.ExitManager
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ArenaBehaviors.ExitManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ExitManager : ArenaGameBehavior'
    content.vb: Public Class ExitManager Inherits ArenaGameBehavior
  inheritance:
  - System.Object
  - ArenaBehaviors.ArenaGameBehavior
  inheritedMembers:
  - ArenaBehaviors.ArenaGameBehavior.gameSession
  - ArenaBehaviors.ArenaGameBehavior.slatedForDeletion
  - ArenaBehaviors.ArenaGameBehavior.Destroy
  - ArenaBehaviors.ArenaGameBehavior.game
  - ArenaBehaviors.ArenaGameBehavior.world
  - ArenaBehaviors.ArenaGameBehavior.room
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: ArenaBehaviors.ExitManager.exitSymbolDarken
  commentId: F:ArenaBehaviors.ExitManager.exitSymbolDarken
  id: exitSymbolDarken
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: exitSymbolDarken
  nameWithType: ExitManager.exitSymbolDarken
  fullName: ArenaBehaviors.ExitManager.exitSymbolDarken
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.exitSymbolDarken</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] exitSymbolDarken
    return:
      type: System.Single[]
    content.vb: Public exitSymbolDarken As Single()
- uid: ArenaBehaviors.ExitManager.playersInDens
  commentId: F:ArenaBehaviors.ExitManager.playersInDens
  id: playersInDens
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: playersInDens
  nameWithType: ExitManager.playersInDens
  fullName: ArenaBehaviors.ExitManager.playersInDens
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.playersInDens</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ShortcutHandler.ShortCutVessel> playersInDens
    return:
      type: System.Collections.Generic.List{ShortcutHandler.ShortCutVessel}
    content.vb: Public playersInDens As List(Of ShortcutHandler.ShortCutVessel)
- uid: ArenaBehaviors.ExitManager.anyPlayerHasEnoughScore
  commentId: F:ArenaBehaviors.ExitManager.anyPlayerHasEnoughScore
  id: anyPlayerHasEnoughScore
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: anyPlayerHasEnoughScore
  nameWithType: ExitManager.anyPlayerHasEnoughScore
  fullName: ArenaBehaviors.ExitManager.anyPlayerHasEnoughScore
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.anyPlayerHasEnoughScore</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool anyPlayerHasEnoughScore
    return:
      type: System.Boolean
    content.vb: Public anyPlayerHasEnoughScore As Boolean
- uid: ArenaBehaviors.ExitManager.allPlayersExitedCounter
  commentId: F:ArenaBehaviors.ExitManager.allPlayersExitedCounter
  id: allPlayersExitedCounter
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: allPlayersExitedCounter
  nameWithType: ExitManager.allPlayersExitedCounter
  fullName: ArenaBehaviors.ExitManager.allPlayersExitedCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.allPlayersExitedCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int allPlayersExitedCounter
    return:
      type: System.Int32
    content.vb: Public allPlayersExitedCounter As Integer
- uid: ArenaBehaviors.ExitManager.challengeCompleted
  commentId: F:ArenaBehaviors.ExitManager.challengeCompleted
  id: challengeCompleted
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: challengeCompleted
  nameWithType: ExitManager.challengeCompleted
  fullName: ArenaBehaviors.ExitManager.challengeCompleted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.challengeCompleted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool challengeCompleted
    return:
      type: System.Boolean
    content.vb: Public challengeCompleted As Boolean
- uid: ArenaBehaviors.ExitManager.challengeCompletedA
  commentId: F:ArenaBehaviors.ExitManager.challengeCompletedA
  id: challengeCompletedA
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: challengeCompletedA
  nameWithType: ExitManager.challengeCompletedA
  fullName: ArenaBehaviors.ExitManager.challengeCompletedA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.challengeCompletedA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool challengeCompletedA
    return:
      type: System.Boolean
    content.vb: Public challengeCompletedA As Boolean
- uid: ArenaBehaviors.ExitManager.challengeCompletedB
  commentId: F:ArenaBehaviors.ExitManager.challengeCompletedB
  id: challengeCompletedB
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: challengeCompletedB
  nameWithType: ExitManager.challengeCompletedB
  fullName: ArenaBehaviors.ExitManager.challengeCompletedB
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.challengeCompletedB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool challengeCompletedB
    return:
      type: System.Boolean
    content.vb: Public challengeCompletedB As Boolean
- uid: ArenaBehaviors.ExitManager.challengeCompletedTime
  commentId: F:ArenaBehaviors.ExitManager.challengeCompletedTime
  id: challengeCompletedTime
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: challengeCompletedTime
  nameWithType: ExitManager.challengeCompletedTime
  fullName: ArenaBehaviors.ExitManager.challengeCompletedTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaBehaviors.ExitManager.challengeCompletedTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int challengeCompletedTime
    return:
      type: System.Int32
    content.vb: Public challengeCompletedTime As Integer
- uid: ArenaBehaviors.ExitManager.#ctor(ArenaGameSession)
  commentId: M:ArenaBehaviors.ExitManager.#ctor(ArenaGameSession)
  id: '#ctor(ArenaGameSession)'
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: ExitManager(ArenaGameSession)
  nameWithType: ExitManager.ExitManager(ArenaGameSession)
  fullName: ArenaBehaviors.ExitManager.ExitManager(ArenaGameSession)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ArenaBehaviors.ExitManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ExitManager(ArenaGameSession gameSession)
    parameters:
    - id: gameSession
      type: Global.ArenaGameSession
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gameSession</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.#ctor(ArenaGameSession)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(gameSession As ArenaGameSession)
  overload: ArenaBehaviors.ExitManager.#ctor*
  nameWithType.vb: ExitManager.New(ArenaGameSession)
  fullName.vb: ArenaBehaviors.ExitManager.New(ArenaGameSession)
  name.vb: New(ArenaGameSession)
- uid: ArenaBehaviors.ExitManager.Initiate
  commentId: M:ArenaBehaviors.ExitManager.Initiate
  id: Initiate
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: Initiate()
  nameWithType: ExitManager.Initiate()
  fullName: ArenaBehaviors.ExitManager.Initiate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.Initiate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Initiate()
    content.vb: Public Overrides Sub Initiate()
  overridden: ArenaBehaviors.ArenaGameBehavior.Initiate
  overload: ArenaBehaviors.ExitManager.Initiate*
- uid: ArenaBehaviors.ExitManager.Update
  commentId: M:ArenaBehaviors.ExitManager.Update
  id: Update
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ExitManager.Update()
  fullName: ArenaBehaviors.ExitManager.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: ArenaBehaviors.ArenaGameBehavior.Update
  overload: ArenaBehaviors.ExitManager.Update*
- uid: ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)
  commentId: M:ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)
  id: DarkenExitSymbol(System.Int32)
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: DarkenExitSymbol(int)
  nameWithType: ExitManager.DarkenExitSymbol(int)
  fullName: ArenaBehaviors.ExitManager.DarkenExitSymbol(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DarkenExitSymbol(int exit)
    parameters:
    - id: exit
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exit</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.DarkenExitSymbol(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function DarkenExitSymbol([exit] As Integer) As Single
  overload: ArenaBehaviors.ExitManager.DarkenExitSymbol*
  nameWithType.vb: ExitManager.DarkenExitSymbol(Integer)
  fullName.vb: ArenaBehaviors.ExitManager.DarkenExitSymbol(Integer)
  name.vb: DarkenExitSymbol(Integer)
- uid: ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)
  commentId: M:ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)
  id: IsPlayerInDen(AbstractCreature)
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: IsPlayerInDen(AbstractCreature)
  nameWithType: ExitManager.IsPlayerInDen(AbstractCreature)
  fullName: ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsPlayerInDen(AbstractCreature crit)
    parameters:
    - id: crit
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.IsPlayerInDen(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsPlayerInDen(crit As AbstractCreature) As Boolean
  overload: ArenaBehaviors.ExitManager.IsPlayerInDen*
- uid: ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  commentId: M:ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  id: PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: PlayerTryingToEnterDen(ShortCutVessel)
  nameWithType: ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  fullName: ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel shortcutVessel)
    parameters:
    - id: shortcutVessel
      type: Global.ShortcutHandler.ShortCutVessel
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortcutVessel</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.PlayerTryingToEnterDen(ShortcutHandler.ShortCutVessel)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayerTryingToEnterDen(shortcutVessel As ShortcutHandler.ShortCutVessel) As Boolean
  overload: ArenaBehaviors.ExitManager.PlayerTryingToEnterDen*
- uid: ArenaBehaviors.ExitManager.ExitsOpen
  commentId: M:ArenaBehaviors.ExitManager.ExitsOpen
  id: ExitsOpen
  parent: ArenaBehaviors.ExitManager
  langs:
  - csharp
  - vb
  name: ExitsOpen()
  nameWithType: ExitManager.ExitsOpen()
  fullName: ArenaBehaviors.ExitManager.ExitsOpen()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: ArenaBehaviors
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaBehaviors.ExitManager.ExitsOpen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ExitsOpen()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaBehaviors.ExitManager.ExitsOpen</parameter>
          </include>
        </markup>
    content.vb: Public Function ExitsOpen() As Boolean
  overload: ArenaBehaviors.ExitManager.ExitsOpen*
references:
- uid: ArenaBehaviors
  commentId: N:ArenaBehaviors
  isExternal: true
  href: ArenaBehaviors.html
  name: ArenaBehaviors
  nameWithType: ArenaBehaviors
  fullName: ArenaBehaviors
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: ArenaBehaviors.ArenaGameBehavior
  commentId: T:ArenaBehaviors.ArenaGameBehavior
  parent: ArenaBehaviors
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html
  name: ArenaGameBehavior
  nameWithType: ArenaGameBehavior
  fullName: ArenaBehaviors.ArenaGameBehavior
- uid: ArenaBehaviors.ArenaGameBehavior.gameSession
  commentId: F:ArenaBehaviors.ArenaGameBehavior.gameSession
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_gameSession
  name: gameSession
  nameWithType: ArenaGameBehavior.gameSession
  fullName: ArenaBehaviors.ArenaGameBehavior.gameSession
- uid: ArenaBehaviors.ArenaGameBehavior.slatedForDeletion
  commentId: F:ArenaBehaviors.ArenaGameBehavior.slatedForDeletion
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_slatedForDeletion
  name: slatedForDeletion
  nameWithType: ArenaGameBehavior.slatedForDeletion
  fullName: ArenaBehaviors.ArenaGameBehavior.slatedForDeletion
- uid: ArenaBehaviors.ArenaGameBehavior.Destroy
  commentId: M:ArenaBehaviors.ArenaGameBehavior.Destroy
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Destroy
  name: Destroy()
  nameWithType: ArenaGameBehavior.Destroy()
  fullName: ArenaBehaviors.ArenaGameBehavior.Destroy()
  spec.csharp:
  - uid: ArenaBehaviors.ArenaGameBehavior.Destroy
    name: Destroy
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: ArenaBehaviors.ArenaGameBehavior.Destroy
    name: Destroy
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Destroy
  - name: (
  - name: )
- uid: ArenaBehaviors.ArenaGameBehavior.game
  commentId: P:ArenaBehaviors.ArenaGameBehavior.game
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_game
  name: game
  nameWithType: ArenaGameBehavior.game
  fullName: ArenaBehaviors.ArenaGameBehavior.game
- uid: ArenaBehaviors.ArenaGameBehavior.world
  commentId: P:ArenaBehaviors.ArenaGameBehavior.world
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_world
  name: world
  nameWithType: ArenaGameBehavior.world
  fullName: ArenaBehaviors.ArenaGameBehavior.world
- uid: ArenaBehaviors.ArenaGameBehavior.room
  commentId: P:ArenaBehaviors.ArenaGameBehavior.room
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_room
  name: room
  nameWithType: ArenaGameBehavior.room
  fullName: ArenaBehaviors.ArenaGameBehavior.room
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Collections.Generic.List{ShortcutHandler.ShortCutVessel}
  commentId: T:System.Collections.Generic.List{ShortcutHandler.ShortCutVessel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ShortcutHandler.ShortCutVessel>
  nameWithType: List<ShortcutHandler.ShortCutVessel>
  fullName: System.Collections.Generic.List<ShortcutHandler.ShortCutVessel>
  nameWithType.vb: List(Of ShortcutHandler.ShortCutVessel)
  fullName.vb: System.Collections.Generic.List(Of ShortcutHandler.ShortCutVessel)
  name.vb: List(Of ShortcutHandler.ShortCutVessel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ShortcutHandler
    name: ShortcutHandler
    isExternal: true
    href: ShortcutHandler.html
  - name: .
  - uid: Global.ShortcutHandler.ShortCutVessel
    name: ShortCutVessel
    isExternal: true
    href: ShortcutHandler.ShortCutVessel.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ShortcutHandler
    name: ShortcutHandler
    isExternal: true
    href: ShortcutHandler.html
  - name: .
  - uid: Global.ShortcutHandler.ShortCutVessel
    name: ShortCutVessel
    isExternal: true
    href: ShortcutHandler.ShortCutVessel.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: ArenaBehaviors.ExitManager.#ctor*
  commentId: Overload:ArenaBehaviors.ExitManager.#ctor
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager__ctor_ArenaGameSession_
  name: ExitManager
  nameWithType: ExitManager.ExitManager
  fullName: ArenaBehaviors.ExitManager.ExitManager
  nameWithType.vb: ExitManager.New
  fullName.vb: ArenaBehaviors.ExitManager.New
  name.vb: New
- uid: Global.ArenaGameSession
  commentId: T:Global.ArenaGameSession
  isExternal: true
  href: ArenaGameSession.html
  name: ArenaGameSession
  nameWithType: ArenaGameSession
  fullName: ArenaGameSession
- uid: ArenaBehaviors.ArenaGameBehavior.Initiate
  commentId: M:ArenaBehaviors.ArenaGameBehavior.Initiate
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Initiate
  name: Initiate()
  nameWithType: ArenaGameBehavior.Initiate()
  fullName: ArenaBehaviors.ArenaGameBehavior.Initiate()
  spec.csharp:
  - uid: ArenaBehaviors.ArenaGameBehavior.Initiate
    name: Initiate
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Initiate
  - name: (
  - name: )
  spec.vb:
  - uid: ArenaBehaviors.ArenaGameBehavior.Initiate
    name: Initiate
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Initiate
  - name: (
  - name: )
- uid: ArenaBehaviors.ExitManager.Initiate*
  commentId: Overload:ArenaBehaviors.ExitManager.Initiate
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_Initiate
  name: Initiate
  nameWithType: ExitManager.Initiate
  fullName: ArenaBehaviors.ExitManager.Initiate
- uid: ArenaBehaviors.ArenaGameBehavior.Update
  commentId: M:ArenaBehaviors.ArenaGameBehavior.Update
  parent: ArenaBehaviors.ArenaGameBehavior
  isExternal: true
  href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Update
  name: Update()
  nameWithType: ArenaGameBehavior.Update()
  fullName: ArenaBehaviors.ArenaGameBehavior.Update()
  spec.csharp:
  - uid: ArenaBehaviors.ArenaGameBehavior.Update
    name: Update
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Update
  - name: (
  - name: )
  spec.vb:
  - uid: ArenaBehaviors.ArenaGameBehavior.Update
    name: Update
    isExternal: true
    href: ArenaBehaviors.ArenaGameBehavior.html#ArenaBehaviors_ArenaGameBehavior_Update
  - name: (
  - name: )
- uid: ArenaBehaviors.ExitManager.Update*
  commentId: Overload:ArenaBehaviors.ExitManager.Update
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_Update
  name: Update
  nameWithType: ExitManager.Update
  fullName: ArenaBehaviors.ExitManager.Update
- uid: ArenaBehaviors.ExitManager.DarkenExitSymbol*
  commentId: Overload:ArenaBehaviors.ExitManager.DarkenExitSymbol
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_DarkenExitSymbol_System_Int32_
  name: DarkenExitSymbol
  nameWithType: ExitManager.DarkenExitSymbol
  fullName: ArenaBehaviors.ExitManager.DarkenExitSymbol
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: ArenaBehaviors.ExitManager.IsPlayerInDen*
  commentId: Overload:ArenaBehaviors.ExitManager.IsPlayerInDen
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_IsPlayerInDen_AbstractCreature_
  name: IsPlayerInDen
  nameWithType: ExitManager.IsPlayerInDen
  fullName: ArenaBehaviors.ExitManager.IsPlayerInDen
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: ArenaBehaviors.ExitManager.PlayerTryingToEnterDen*
  commentId: Overload:ArenaBehaviors.ExitManager.PlayerTryingToEnterDen
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_PlayerTryingToEnterDen_ShortcutHandler_ShortCutVessel_
  name: PlayerTryingToEnterDen
  nameWithType: ExitManager.PlayerTryingToEnterDen
  fullName: ArenaBehaviors.ExitManager.PlayerTryingToEnterDen
- uid: Global.ShortcutHandler.ShortCutVessel
  commentId: T:Global.ShortcutHandler.ShortCutVessel
  isExternal: true
  href: ShortcutHandler.html
  name: ShortcutHandler.ShortCutVessel
  nameWithType: ShortcutHandler.ShortCutVessel
  fullName: ShortcutHandler.ShortCutVessel
  spec.csharp:
  - uid: Global.ShortcutHandler
    name: ShortcutHandler
    isExternal: true
    href: ShortcutHandler.html
  - name: .
  - uid: Global.ShortcutHandler.ShortCutVessel
    name: ShortCutVessel
    isExternal: true
    href: ShortcutHandler.ShortCutVessel.html
  spec.vb:
  - uid: Global.ShortcutHandler
    name: ShortcutHandler
    isExternal: true
    href: ShortcutHandler.html
  - name: .
  - uid: Global.ShortcutHandler.ShortCutVessel
    name: ShortCutVessel
    isExternal: true
    href: ShortcutHandler.ShortCutVessel.html
- uid: ArenaBehaviors.ExitManager.ExitsOpen*
  commentId: Overload:ArenaBehaviors.ExitManager.ExitsOpen
  isExternal: true
  href: ArenaBehaviors.ExitManager.html#ArenaBehaviors_ExitManager_ExitsOpen
  name: ExitsOpen
  nameWithType: ExitManager.ExitsOpen
  fullName: ArenaBehaviors.ExitManager.ExitsOpen
