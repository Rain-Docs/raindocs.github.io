### YamlMime:ManagedReference
items:
- uid: Expedition.ExpeditionData
  commentId: T:Expedition.ExpeditionData
  id: ExpeditionData
  parent: Expedition
  children:
  - Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)
  - Expedition.ExpeditionData.ClearActiveChallengeList
  - Expedition.ExpeditionData.GetPlayableCharacters
  - Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)
  - Expedition.ExpeditionData.activeMission
  - Expedition.ExpeditionData.allActiveMissions
  - Expedition.ExpeditionData.allChallengeLists
  - Expedition.ExpeditionData.allEarnedPassages
  - Expedition.ExpeditionData.challengeDifficulty
  - Expedition.ExpeditionData.challengeList
  - Expedition.ExpeditionData.challengeTypes
  - Expedition.ExpeditionData.completedChallengeList
  - Expedition.ExpeditionData.completedMissions
  - Expedition.ExpeditionData.completedQuests
  - Expedition.ExpeditionData.currentPoints
  - Expedition.ExpeditionData.devMode
  - Expedition.ExpeditionData.earnedPassages
  - Expedition.ExpeditionData.hasViewedManual
  - Expedition.ExpeditionData.ints
  - Expedition.ExpeditionData.level
  - Expedition.ExpeditionData.menuSong
  - Expedition.ExpeditionData.missionBestTimes
  - Expedition.ExpeditionData.newGame
  - Expedition.ExpeditionData.newSongs
  - Expedition.ExpeditionData.perkLimit
  - Expedition.ExpeditionData.requiredExpeditionContent
  - Expedition.ExpeditionData.saveSlot
  - Expedition.ExpeditionData.slugcatPlayer
  - Expedition.ExpeditionData.slugcatWins
  - Expedition.ExpeditionData.startingDen
  - Expedition.ExpeditionData.totalChallengesCompleted
  - Expedition.ExpeditionData.totalHiddenChallengesCompleted
  - Expedition.ExpeditionData.totalPoints
  - Expedition.ExpeditionData.totalWins
  - Expedition.ExpeditionData.unlockables
  - Expedition.ExpeditionData.validateQuests
  langs:
  - csharp
  - vb
  name: ExpeditionData
  nameWithType: ExpeditionData
  fullName: Expedition.ExpeditionData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Expedition.ExpeditionData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class ExpeditionData
    content.vb: Public Module ExpeditionData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Expedition.ExpeditionData.allChallengeLists
  commentId: F:Expedition.ExpeditionData.allChallengeLists
  id: allChallengeLists
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: allChallengeLists
  nameWithType: ExpeditionData.allChallengeLists
  fullName: Expedition.ExpeditionData.allChallengeLists
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.allChallengeLists</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<SlugcatStats.Name, List<Challenge>> allChallengeLists
    return:
      type: System.Collections.Generic.Dictionary{SlugcatStats.Name,System.Collections.Generic.List{Expedition.Challenge}}
    content.vb: Public Shared allChallengeLists As Dictionary(Of SlugcatStats.Name, List(Of Challenge))
- uid: Expedition.ExpeditionData.completedChallengeList
  commentId: F:Expedition.ExpeditionData.completedChallengeList
  id: completedChallengeList
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: completedChallengeList
  nameWithType: ExpeditionData.completedChallengeList
  fullName: Expedition.ExpeditionData.completedChallengeList
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.completedChallengeList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<Challenge> completedChallengeList
    return:
      type: System.Collections.Generic.List{Expedition.Challenge}
    content.vb: Public Shared completedChallengeList As List(Of Challenge)
- uid: Expedition.ExpeditionData.allActiveMissions
  commentId: F:Expedition.ExpeditionData.allActiveMissions
  id: allActiveMissions
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: allActiveMissions
  nameWithType: ExpeditionData.allActiveMissions
  fullName: Expedition.ExpeditionData.allActiveMissions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.allActiveMissions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, string> allActiveMissions
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared allActiveMissions As Dictionary(Of String, String)
- uid: Expedition.ExpeditionData.requiredExpeditionContent
  commentId: F:Expedition.ExpeditionData.requiredExpeditionContent
  id: requiredExpeditionContent
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: requiredExpeditionContent
  nameWithType: ExpeditionData.requiredExpeditionContent
  fullName: Expedition.ExpeditionData.requiredExpeditionContent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.requiredExpeditionContent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, List<string>> requiredExpeditionContent
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
    content.vb: Public Shared requiredExpeditionContent As Dictionary(Of String, List(Of String))
- uid: Expedition.ExpeditionData.challengeDifficulty
  commentId: F:Expedition.ExpeditionData.challengeDifficulty
  id: challengeDifficulty
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: challengeDifficulty
  nameWithType: ExpeditionData.challengeDifficulty
  fullName: Expedition.ExpeditionData.challengeDifficulty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.challengeDifficulty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float challengeDifficulty
    return:
      type: System.Single
    content.vb: Public Shared challengeDifficulty As Single
- uid: Expedition.ExpeditionData.startingDen
  commentId: F:Expedition.ExpeditionData.startingDen
  id: startingDen
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: startingDen
  nameWithType: ExpeditionData.startingDen
  fullName: Expedition.ExpeditionData.startingDen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.startingDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string startingDen
    return:
      type: System.String
    content.vb: Public Shared startingDen As String
- uid: Expedition.ExpeditionData.newGame
  commentId: F:Expedition.ExpeditionData.newGame
  id: newGame
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: newGame
  nameWithType: ExpeditionData.newGame
  fullName: Expedition.ExpeditionData.newGame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.newGame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool newGame
    return:
      type: System.Boolean
    content.vb: Public Shared newGame As Boolean
- uid: Expedition.ExpeditionData.validateQuests
  commentId: F:Expedition.ExpeditionData.validateQuests
  id: validateQuests
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: validateQuests
  nameWithType: ExpeditionData.validateQuests
  fullName: Expedition.ExpeditionData.validateQuests
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.validateQuests</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool validateQuests
    return:
      type: System.Boolean
    content.vb: Public Shared validateQuests As Boolean
- uid: Expedition.ExpeditionData.hasViewedManual
  commentId: F:Expedition.ExpeditionData.hasViewedManual
  id: hasViewedManual
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: hasViewedManual
  nameWithType: ExpeditionData.hasViewedManual
  fullName: Expedition.ExpeditionData.hasViewedManual
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.hasViewedManual</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool hasViewedManual
    return:
      type: System.Boolean
    content.vb: Public Shared hasViewedManual As Boolean
- uid: Expedition.ExpeditionData.allEarnedPassages
  commentId: F:Expedition.ExpeditionData.allEarnedPassages
  id: allEarnedPassages
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: allEarnedPassages
  nameWithType: ExpeditionData.allEarnedPassages
  fullName: Expedition.ExpeditionData.allEarnedPassages
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.allEarnedPassages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, int> allEarnedPassages
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Shared allEarnedPassages As Dictionary(Of String, Integer)
- uid: Expedition.ExpeditionData.devMode
  commentId: F:Expedition.ExpeditionData.devMode
  id: devMode
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: devMode
  nameWithType: ExpeditionData.devMode
  fullName: Expedition.ExpeditionData.devMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.devMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool devMode
    return:
      type: System.Boolean
    content.vb: Public Shared devMode As Boolean
- uid: Expedition.ExpeditionData.saveSlot
  commentId: F:Expedition.ExpeditionData.saveSlot
  id: saveSlot
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: saveSlot
  nameWithType: ExpeditionData.saveSlot
  fullName: Expedition.ExpeditionData.saveSlot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.saveSlot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int saveSlot
    return:
      type: System.Int32
    content.vb: Public Shared saveSlot As Integer
- uid: Expedition.ExpeditionData.ints
  commentId: F:Expedition.ExpeditionData.ints
  id: ints
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: ints
  nameWithType: ExpeditionData.ints
  fullName: Expedition.ExpeditionData.ints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.ints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int[] ints
    return:
      type: System.Int32[]
    content.vb: Public Shared ints As Integer()
- uid: Expedition.ExpeditionData.slugcatPlayer
  commentId: F:Expedition.ExpeditionData.slugcatPlayer
  id: slugcatPlayer
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: slugcatPlayer
  nameWithType: ExpeditionData.slugcatPlayer
  fullName: Expedition.ExpeditionData.slugcatPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.slugcatPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SlugcatStats.Name slugcatPlayer
    return:
      type: Global.SlugcatStats.Name
    content.vb: Public Shared slugcatPlayer As SlugcatStats.Name
- uid: Expedition.ExpeditionData.completedQuests
  commentId: F:Expedition.ExpeditionData.completedQuests
  id: completedQuests
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: completedQuests
  nameWithType: ExpeditionData.completedQuests
  fullName: Expedition.ExpeditionData.completedQuests
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.completedQuests</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> completedQuests
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared completedQuests As List(Of String)
- uid: Expedition.ExpeditionData.completedMissions
  commentId: F:Expedition.ExpeditionData.completedMissions
  id: completedMissions
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: completedMissions
  nameWithType: ExpeditionData.completedMissions
  fullName: Expedition.ExpeditionData.completedMissions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.completedMissions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> completedMissions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared completedMissions As List(Of String)
- uid: Expedition.ExpeditionData.missionBestTimes
  commentId: F:Expedition.ExpeditionData.missionBestTimes
  id: missionBestTimes
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: missionBestTimes
  nameWithType: ExpeditionData.missionBestTimes
  fullName: Expedition.ExpeditionData.missionBestTimes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.missionBestTimes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, int> missionBestTimes
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Shared missionBestTimes As Dictionary(Of String, Integer)
- uid: Expedition.ExpeditionData.unlockables
  commentId: F:Expedition.ExpeditionData.unlockables
  id: unlockables
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: unlockables
  nameWithType: ExpeditionData.unlockables
  fullName: Expedition.ExpeditionData.unlockables
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.unlockables</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> unlockables
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared unlockables As List(Of String)
- uid: Expedition.ExpeditionData.newSongs
  commentId: F:Expedition.ExpeditionData.newSongs
  id: newSongs
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: newSongs
  nameWithType: ExpeditionData.newSongs
  fullName: Expedition.ExpeditionData.newSongs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.newSongs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> newSongs
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared newSongs As List(Of String)
- uid: Expedition.ExpeditionData.level
  commentId: F:Expedition.ExpeditionData.level
  id: level
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: level
  nameWithType: ExpeditionData.level
  fullName: Expedition.ExpeditionData.level
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.level</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int level
    return:
      type: System.Int32
    content.vb: Public Shared level As Integer
- uid: Expedition.ExpeditionData.currentPoints
  commentId: F:Expedition.ExpeditionData.currentPoints
  id: currentPoints
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: currentPoints
  nameWithType: ExpeditionData.currentPoints
  fullName: Expedition.ExpeditionData.currentPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.currentPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int currentPoints
    return:
      type: System.Int32
    content.vb: Public Shared currentPoints As Integer
- uid: Expedition.ExpeditionData.perkLimit
  commentId: F:Expedition.ExpeditionData.perkLimit
  id: perkLimit
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: perkLimit
  nameWithType: ExpeditionData.perkLimit
  fullName: Expedition.ExpeditionData.perkLimit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.perkLimit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int perkLimit
    return:
      type: System.Int32
    content.vb: Public Shared perkLimit As Integer
- uid: Expedition.ExpeditionData.totalPoints
  commentId: F:Expedition.ExpeditionData.totalPoints
  id: totalPoints
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: totalPoints
  nameWithType: ExpeditionData.totalPoints
  fullName: Expedition.ExpeditionData.totalPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.totalPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int totalPoints
    return:
      type: System.Int32
    content.vb: Public Shared totalPoints As Integer
- uid: Expedition.ExpeditionData.totalChallengesCompleted
  commentId: F:Expedition.ExpeditionData.totalChallengesCompleted
  id: totalChallengesCompleted
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: totalChallengesCompleted
  nameWithType: ExpeditionData.totalChallengesCompleted
  fullName: Expedition.ExpeditionData.totalChallengesCompleted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.totalChallengesCompleted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int totalChallengesCompleted
    return:
      type: System.Int32
    content.vb: Public Shared totalChallengesCompleted As Integer
- uid: Expedition.ExpeditionData.totalHiddenChallengesCompleted
  commentId: F:Expedition.ExpeditionData.totalHiddenChallengesCompleted
  id: totalHiddenChallengesCompleted
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: totalHiddenChallengesCompleted
  nameWithType: ExpeditionData.totalHiddenChallengesCompleted
  fullName: Expedition.ExpeditionData.totalHiddenChallengesCompleted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.totalHiddenChallengesCompleted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int totalHiddenChallengesCompleted
    return:
      type: System.Int32
    content.vb: Public Shared totalHiddenChallengesCompleted As Integer
- uid: Expedition.ExpeditionData.totalWins
  commentId: F:Expedition.ExpeditionData.totalWins
  id: totalWins
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: totalWins
  nameWithType: ExpeditionData.totalWins
  fullName: Expedition.ExpeditionData.totalWins
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.totalWins</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int totalWins
    return:
      type: System.Int32
    content.vb: Public Shared totalWins As Integer
- uid: Expedition.ExpeditionData.slugcatWins
  commentId: F:Expedition.ExpeditionData.slugcatWins
  id: slugcatWins
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: slugcatWins
  nameWithType: ExpeditionData.slugcatWins
  fullName: Expedition.ExpeditionData.slugcatWins
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.slugcatWins</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, int> slugcatWins
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Shared slugcatWins As Dictionary(Of String, Integer)
- uid: Expedition.ExpeditionData.challengeTypes
  commentId: F:Expedition.ExpeditionData.challengeTypes
  id: challengeTypes
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: challengeTypes
  nameWithType: ExpeditionData.challengeTypes
  fullName: Expedition.ExpeditionData.challengeTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.challengeTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, int> challengeTypes
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Shared challengeTypes As Dictionary(Of String, Integer)
- uid: Expedition.ExpeditionData.menuSong
  commentId: F:Expedition.ExpeditionData.menuSong
  id: menuSong
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: menuSong
  nameWithType: ExpeditionData.menuSong
  fullName: Expedition.ExpeditionData.menuSong
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ExpeditionData.menuSong</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string menuSong
    return:
      type: System.String
    content.vb: Public Shared menuSong As String
- uid: Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)
  commentId: M:Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)
  id: AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: AddExpeditionRequirements(Name, bool)
  nameWithType: ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name, bool)
  fullName: Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void AddExpeditionRequirements(SlugcatStats.Name slugcat, bool ended)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ended
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ended</parameter>
            <parameter>M:Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub AddExpeditionRequirements(slugcat As SlugcatStats.Name, ended As Boolean)
  overload: Expedition.ExpeditionData.AddExpeditionRequirements*
  nameWithType.vb: ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name, Boolean)
  fullName.vb: Expedition.ExpeditionData.AddExpeditionRequirements(SlugcatStats.Name, Boolean)
  name.vb: AddExpeditionRequirements(Name, Boolean)
- uid: Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)
  commentId: M:Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)
  id: MissingRequirements(SlugcatStats.Name)
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: MissingRequirements(Name)
  nameWithType: ExpeditionData.MissingRequirements(SlugcatStats.Name)
  fullName: Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MissingRequirements(SlugcatStats.Name slugcat)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ExpeditionData.MissingRequirements(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MissingRequirements(slugcat As SlugcatStats.Name) As Boolean
  overload: Expedition.ExpeditionData.MissingRequirements*
- uid: Expedition.ExpeditionData.GetPlayableCharacters
  commentId: M:Expedition.ExpeditionData.GetPlayableCharacters
  id: GetPlayableCharacters
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: GetPlayableCharacters()
  nameWithType: ExpeditionData.GetPlayableCharacters()
  fullName: Expedition.ExpeditionData.GetPlayableCharacters()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ExpeditionData.GetPlayableCharacters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<SlugcatStats.Name> GetPlayableCharacters()
    return:
      type: System.Collections.Generic.List{SlugcatStats.Name}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ExpeditionData.GetPlayableCharacters</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetPlayableCharacters() As List(Of SlugcatStats.Name)
  overload: Expedition.ExpeditionData.GetPlayableCharacters*
- uid: Expedition.ExpeditionData.ClearActiveChallengeList
  commentId: M:Expedition.ExpeditionData.ClearActiveChallengeList
  id: ClearActiveChallengeList
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: ClearActiveChallengeList()
  nameWithType: ExpeditionData.ClearActiveChallengeList()
  fullName: Expedition.ExpeditionData.ClearActiveChallengeList()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ExpeditionData.ClearActiveChallengeList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ClearActiveChallengeList()
    content.vb: Public Shared Sub ClearActiveChallengeList()
  overload: Expedition.ExpeditionData.ClearActiveChallengeList*
- uid: Expedition.ExpeditionData.challengeList
  commentId: P:Expedition.ExpeditionData.challengeList
  id: challengeList
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: challengeList
  nameWithType: ExpeditionData.challengeList
  fullName: Expedition.ExpeditionData.challengeList
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Expedition.ExpeditionData.challengeList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<Challenge> challengeList { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Expedition.Challenge}
    content.vb: Public Shared ReadOnly Property challengeList As List(Of Challenge)
  overload: Expedition.ExpeditionData.challengeList*
- uid: Expedition.ExpeditionData.activeMission
  commentId: P:Expedition.ExpeditionData.activeMission
  id: activeMission
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: activeMission
  nameWithType: ExpeditionData.activeMission
  fullName: Expedition.ExpeditionData.activeMission
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Expedition.ExpeditionData.activeMission</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string activeMission { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared Property activeMission As String
  overload: Expedition.ExpeditionData.activeMission*
- uid: Expedition.ExpeditionData.earnedPassages
  commentId: P:Expedition.ExpeditionData.earnedPassages
  id: earnedPassages
  parent: Expedition.ExpeditionData
  langs:
  - csharp
  - vb
  name: earnedPassages
  nameWithType: ExpeditionData.earnedPassages
  fullName: Expedition.ExpeditionData.earnedPassages
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Expedition.ExpeditionData.earnedPassages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int earnedPassages { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property earnedPassages As Integer
  overload: Expedition.ExpeditionData.earnedPassages*
references:
- uid: Expedition
  commentId: N:Expedition
  isExternal: true
  href: Expedition.html
  name: Expedition
  nameWithType: Expedition
  fullName: Expedition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary{SlugcatStats.Name,System.Collections.Generic.List{Expedition.Challenge}}
  commentId: T:System.Collections.Generic.Dictionary{SlugcatStats.Name,System.Collections.Generic.List{Expedition.Challenge}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<SlugcatStats.Name, List<Challenge>>
  nameWithType: Dictionary<SlugcatStats.Name, List<Challenge>>
  fullName: System.Collections.Generic.Dictionary<SlugcatStats.Name, System.Collections.Generic.List<Expedition.Challenge>>
  nameWithType.vb: Dictionary(Of SlugcatStats.Name, List(Of Challenge))
  fullName.vb: System.Collections.Generic.Dictionary(Of SlugcatStats.Name, System.Collections.Generic.List(Of Expedition.Challenge))
  name.vb: Dictionary(Of SlugcatStats.Name, List(Of Challenge))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{Expedition.Challenge}
  commentId: T:System.Collections.Generic.List{Expedition.Challenge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Challenge>
  nameWithType: List<Challenge>
  fullName: System.Collections.Generic.List<Expedition.Challenge>
  nameWithType.vb: List(Of Challenge)
  fullName.vb: System.Collections.Generic.List(Of Expedition.Challenge)
  name.vb: List(Of Challenge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Expedition.Challenge
    name: Challenge
    isExternal: true
    href: Expedition.Challenge.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<string>>
  nameWithType: Dictionary<string, List<string>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<string>>
  nameWithType.vb: Dictionary(Of String, List(Of String))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of String))
  name.vb: Dictionary(Of String, List(Of String))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Expedition.ExpeditionData.AddExpeditionRequirements*
  commentId: Overload:Expedition.ExpeditionData.AddExpeditionRequirements
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_AddExpeditionRequirements_SlugcatStats_Name_System_Boolean_
  name: AddExpeditionRequirements
  nameWithType: ExpeditionData.AddExpeditionRequirements
  fullName: Expedition.ExpeditionData.AddExpeditionRequirements
- uid: Expedition.ExpeditionData.MissingRequirements*
  commentId: Overload:Expedition.ExpeditionData.MissingRequirements
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_MissingRequirements_SlugcatStats_Name_
  name: MissingRequirements
  nameWithType: ExpeditionData.MissingRequirements
  fullName: Expedition.ExpeditionData.MissingRequirements
- uid: Expedition.ExpeditionData.GetPlayableCharacters*
  commentId: Overload:Expedition.ExpeditionData.GetPlayableCharacters
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_GetPlayableCharacters
  name: GetPlayableCharacters
  nameWithType: ExpeditionData.GetPlayableCharacters
  fullName: Expedition.ExpeditionData.GetPlayableCharacters
- uid: System.Collections.Generic.List{SlugcatStats.Name}
  commentId: T:System.Collections.Generic.List{SlugcatStats.Name}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SlugcatStats.Name>
  nameWithType: List<SlugcatStats.Name>
  fullName: System.Collections.Generic.List<SlugcatStats.Name>
  nameWithType.vb: List(Of SlugcatStats.Name)
  fullName.vb: System.Collections.Generic.List(Of SlugcatStats.Name)
  name.vb: List(Of SlugcatStats.Name)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: )
- uid: Expedition.ExpeditionData.ClearActiveChallengeList*
  commentId: Overload:Expedition.ExpeditionData.ClearActiveChallengeList
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_ClearActiveChallengeList
  name: ClearActiveChallengeList
  nameWithType: ExpeditionData.ClearActiveChallengeList
  fullName: Expedition.ExpeditionData.ClearActiveChallengeList
- uid: Expedition.ExpeditionData.challengeList*
  commentId: Overload:Expedition.ExpeditionData.challengeList
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_challengeList
  name: challengeList
  nameWithType: ExpeditionData.challengeList
  fullName: Expedition.ExpeditionData.challengeList
- uid: Expedition.ExpeditionData.activeMission*
  commentId: Overload:Expedition.ExpeditionData.activeMission
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_activeMission
  name: activeMission
  nameWithType: ExpeditionData.activeMission
  fullName: Expedition.ExpeditionData.activeMission
- uid: Expedition.ExpeditionData.earnedPassages*
  commentId: Overload:Expedition.ExpeditionData.earnedPassages
  isExternal: true
  href: Expedition.ExpeditionData.html#Expedition_ExpeditionData_earnedPassages
  name: earnedPassages
  nameWithType: ExpeditionData.earnedPassages
  fullName: Expedition.ExpeditionData.earnedPassages
