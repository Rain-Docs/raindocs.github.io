### YamlMime:ManagedReference
items:
- uid: Watcher.Rattler.Arm
  commentId: T:Watcher.Rattler.Arm
  id: Rattler.Arm
  parent: Watcher
  children:
  - Watcher.Rattler.Arm.#ctor(Watcher.Rattler,System.Int32)
  - Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)
  - Watcher.Rattler.Arm.Carry(BodyChunk)
  - Watcher.Rattler.Arm.CurrentTask
  - Watcher.Rattler.Arm.Forage
  - Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)
  - Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)
  - Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)
  - Watcher.Rattler.Arm.Retract
  - Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)
  - Watcher.Rattler.Arm.TargetClawDir
  - Watcher.Rattler.Arm.TargetPos
  - Watcher.Rattler.Arm.Update
  - Watcher.Rattler.Arm.basePos
  - Watcher.Rattler.Arm.lastPos
  - Watcher.Rattler.Arm.limp
  - Watcher.Rattler.Arm.pos
  - Watcher.Rattler.Arm.pullIntoShell
  - Watcher.Rattler.Arm.rope
  - Watcher.Rattler.Arm.vel
  langs:
  - csharp
  - vb
  name: Rattler.Arm
  nameWithType: Rattler.Arm
  fullName: Watcher.Rattler.Arm
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.Rattler.Arm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Rattler.Arm
    content.vb: Public Class Rattler.Arm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.Rattler.Arm.pos
  commentId: F:Watcher.Rattler.Arm.pos
  id: pos
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: Rattler.Arm.pos
  fullName: Watcher.Rattler.Arm.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Watcher.Rattler.Arm.lastPos
  commentId: F:Watcher.Rattler.Arm.lastPos
  id: lastPos
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: Rattler.Arm.lastPos
  fullName: Watcher.Rattler.Arm.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Watcher.Rattler.Arm.vel
  commentId: F:Watcher.Rattler.Arm.vel
  id: vel
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: Rattler.Arm.vel
  fullName: Watcher.Rattler.Arm.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Watcher.Rattler.Arm.basePos
  commentId: F:Watcher.Rattler.Arm.basePos
  id: basePos
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: basePos
  nameWithType: Rattler.Arm.basePos
  fullName: Watcher.Rattler.Arm.basePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.basePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 basePos
    return:
      type: UnityEngine.Vector2
    content.vb: Public basePos As Vector2
- uid: Watcher.Rattler.Arm.limp
  commentId: F:Watcher.Rattler.Arm.limp
  id: limp
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: limp
  nameWithType: Rattler.Arm.limp
  fullName: Watcher.Rattler.Arm.limp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.limp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool limp
    return:
      type: System.Boolean
    content.vb: Public limp As Boolean
- uid: Watcher.Rattler.Arm.pullIntoShell
  commentId: F:Watcher.Rattler.Arm.pullIntoShell
  id: pullIntoShell
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: pullIntoShell
  nameWithType: Rattler.Arm.pullIntoShell
  fullName: Watcher.Rattler.Arm.pullIntoShell
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.pullIntoShell</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pullIntoShell
    return:
      type: System.Single
    content.vb: Public pullIntoShell As Single
- uid: Watcher.Rattler.Arm.rope
  commentId: F:Watcher.Rattler.Arm.rope
  id: rope
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: rope
  nameWithType: Rattler.Arm.rope
  fullName: Watcher.Rattler.Arm.rope
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.Rattler.Arm.rope</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rope rope
    return:
      type: Global.Rope
    content.vb: Public rope As Rope
- uid: Watcher.Rattler.Arm.#ctor(Watcher.Rattler,System.Int32)
  commentId: M:Watcher.Rattler.Arm.#ctor(Watcher.Rattler,System.Int32)
  id: '#ctor(Watcher.Rattler,System.Int32)'
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Arm(Rattler, int)
  nameWithType: Rattler.Arm.Arm(Rattler, int)
  fullName: Watcher.Rattler.Arm.Arm(Watcher.Rattler, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.Rattler.Arm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Arm(Rattler owner, int grasp)
    parameters:
    - id: owner
      type: Watcher.Rattler
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Watcher.Rattler.Arm.#ctor(Watcher.Rattler,System.Int32)</parameter>
          </include>
        </markup>
    - id: grasp
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Watcher.Rattler.Arm.#ctor(Watcher.Rattler,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As Rattler, grasp As Integer)
  overload: Watcher.Rattler.Arm.#ctor*
  nameWithType.vb: Rattler.Arm.New(Rattler, Integer)
  fullName.vb: Watcher.Rattler.Arm.New(Watcher.Rattler, Integer)
  name.vb: New(Rattler, Integer)
- uid: Watcher.Rattler.Arm.Update
  commentId: M:Watcher.Rattler.Arm.Update
  id: Update
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Rattler.Arm.Update()
  fullName: Watcher.Rattler.Arm.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.Rattler.Arm.Update*
- uid: Watcher.Rattler.Arm.Retract
  commentId: M:Watcher.Rattler.Arm.Retract
  id: Retract
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Retract()
  nameWithType: Rattler.Arm.Retract()
  fullName: Watcher.Rattler.Arm.Retract()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.Retract</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Retract()
    content.vb: Public Sub Retract()
  overload: Watcher.Rattler.Arm.Retract*
- uid: Watcher.Rattler.Arm.Forage
  commentId: M:Watcher.Rattler.Arm.Forage
  id: Forage
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Forage()
  nameWithType: Rattler.Arm.Forage()
  fullName: Watcher.Rattler.Arm.Forage()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.Forage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Forage()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.Rattler.Arm.Forage</parameter>
          </include>
        </markup>
    content.vb: Public Function Forage() As Boolean
  overload: Watcher.Rattler.Arm.Forage*
- uid: Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)
  commentId: M:Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)
  id: MoveCreature(Tracker.CreatureRepresentation)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: MoveCreature(CreatureRepresentation)
  nameWithType: Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)
  fullName: Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MoveCreature(Tracker.CreatureRepresentation creature)
    parameters:
    - id: creature
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.Rattler.Arm.MoveCreature(Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Function MoveCreature(creature As Tracker.CreatureRepresentation) As Boolean
  overload: Watcher.Rattler.Arm.MoveCreature*
- uid: Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)
  commentId: M:Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)
  id: InvestigateSound(UnityEngine.Vector2)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: InvestigateSound(Vector2)
  nameWithType: Rattler.Arm.InvestigateSound(Vector2)
  fullName: Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InvestigateSound(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.Rattler.Arm.InvestigateSound(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function InvestigateSound(pos As Vector2) As Boolean
  overload: Watcher.Rattler.Arm.InvestigateSound*
- uid: Watcher.Rattler.Arm.Carry(BodyChunk)
  commentId: M:Watcher.Rattler.Arm.Carry(BodyChunk)
  id: Carry(BodyChunk)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Carry(BodyChunk)
  nameWithType: Rattler.Arm.Carry(BodyChunk)
  fullName: Watcher.Rattler.Arm.Carry(BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.Carry(BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Carry(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Watcher.Rattler.Arm.Carry(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Carry(chunk As BodyChunk)
  overload: Watcher.Rattler.Arm.Carry*
- uid: Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)
  commentId: M:Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)
  id: CanReach(RWCustom.IntVector2)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: CanReach(IntVector2)
  nameWithType: Rattler.Arm.CanReach(IntVector2)
  fullName: Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanReach(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.Rattler.Arm.CanReach(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanReach(pos As IntVector2) As Boolean
  overload: Watcher.Rattler.Arm.CanReach*
- uid: Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)
  commentId: M:Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)
  id: SetTarget(UnityEngine.Vector2)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: SetTarget(Vector2)
  nameWithType: Rattler.Arm.SetTarget(Vector2)
  fullName: Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetTarget(Vector2 target)
    parameters:
    - id: target
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:Watcher.Rattler.Arm.SetTarget(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetTarget(target As Vector2)
  overload: Watcher.Rattler.Arm.SetTarget*
- uid: Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)
  commentId: M:Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: Rattler.Arm.Reset(Vector2)
  fullName: Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.Rattler.Arm.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Reset(pos As Vector2)
  overload: Watcher.Rattler.Arm.Reset*
- uid: Watcher.Rattler.Arm.CurrentTask
  commentId: P:Watcher.Rattler.Arm.CurrentTask
  id: CurrentTask
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: CurrentTask
  nameWithType: Rattler.Arm.CurrentTask
  fullName: Watcher.Rattler.Arm.CurrentTask
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.Rattler.Arm.CurrentTask</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rattler.Arm.Task CurrentTask { get; }
    parameters: []
    return:
      type: Watcher.Rattler.Arm.Task
    content.vb: Public ReadOnly Property CurrentTask As Rattler.Arm.Task
  overload: Watcher.Rattler.Arm.CurrentTask*
- uid: Watcher.Rattler.Arm.TargetClawDir
  commentId: P:Watcher.Rattler.Arm.TargetClawDir
  id: TargetClawDir
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: TargetClawDir
  nameWithType: Rattler.Arm.TargetClawDir
  fullName: Watcher.Rattler.Arm.TargetClawDir
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.Rattler.Arm.TargetClawDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? TargetClawDir { get; }
    parameters: []
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public ReadOnly Property TargetClawDir As Vector2?
  overload: Watcher.Rattler.Arm.TargetClawDir*
- uid: Watcher.Rattler.Arm.TargetPos
  commentId: P:Watcher.Rattler.Arm.TargetPos
  id: TargetPos
  parent: Watcher.Rattler.Arm
  langs:
  - csharp
  - vb
  name: TargetPos
  nameWithType: Rattler.Arm.TargetPos
  fullName: Watcher.Rattler.Arm.TargetPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.Rattler.Arm.TargetPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 TargetPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property TargetPos As Vector2
  overload: Watcher.Rattler.Arm.TargetPos*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Rope
  commentId: T:Global.Rope
  isExternal: true
  href: Rope.html
  name: Rope
  nameWithType: Rope
  fullName: Rope
- uid: Watcher.Rattler.Arm.#ctor*
  commentId: Overload:Watcher.Rattler.Arm.#ctor
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm__ctor_Watcher_Rattler_System_Int32_
  name: Arm
  nameWithType: Rattler.Arm.Arm
  fullName: Watcher.Rattler.Arm.Arm
  nameWithType.vb: Rattler.Arm.New
  fullName.vb: Watcher.Rattler.Arm.New
  name.vb: New
- uid: Watcher.Rattler
  commentId: T:Watcher.Rattler
  parent: Watcher
  isExternal: true
  href: Watcher.Rattler.html
  name: Rattler
  nameWithType: Rattler
  fullName: Watcher.Rattler
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Watcher.Rattler.Arm.Update*
  commentId: Overload:Watcher.Rattler.Arm.Update
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_Update
  name: Update
  nameWithType: Rattler.Arm.Update
  fullName: Watcher.Rattler.Arm.Update
- uid: Watcher.Rattler.Arm.Retract*
  commentId: Overload:Watcher.Rattler.Arm.Retract
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_Retract
  name: Retract
  nameWithType: Rattler.Arm.Retract
  fullName: Watcher.Rattler.Arm.Retract
- uid: Watcher.Rattler.Arm.Forage*
  commentId: Overload:Watcher.Rattler.Arm.Forage
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_Forage
  name: Forage
  nameWithType: Rattler.Arm.Forage
  fullName: Watcher.Rattler.Arm.Forage
- uid: Watcher.Rattler.Arm.MoveCreature*
  commentId: Overload:Watcher.Rattler.Arm.MoveCreature
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_MoveCreature_Tracker_CreatureRepresentation_
  name: MoveCreature
  nameWithType: Rattler.Arm.MoveCreature
  fullName: Watcher.Rattler.Arm.MoveCreature
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Watcher.Rattler.Arm.InvestigateSound*
  commentId: Overload:Watcher.Rattler.Arm.InvestigateSound
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_InvestigateSound_UnityEngine_Vector2_
  name: InvestigateSound
  nameWithType: Rattler.Arm.InvestigateSound
  fullName: Watcher.Rattler.Arm.InvestigateSound
- uid: Watcher.Rattler.Arm.Carry*
  commentId: Overload:Watcher.Rattler.Arm.Carry
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_Carry_BodyChunk_
  name: Carry
  nameWithType: Rattler.Arm.Carry
  fullName: Watcher.Rattler.Arm.Carry
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Watcher.Rattler.Arm.CanReach*
  commentId: Overload:Watcher.Rattler.Arm.CanReach
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_CanReach_RWCustom_IntVector2_
  name: CanReach
  nameWithType: Rattler.Arm.CanReach
  fullName: Watcher.Rattler.Arm.CanReach
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Watcher.Rattler.Arm.SetTarget*
  commentId: Overload:Watcher.Rattler.Arm.SetTarget
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_SetTarget_UnityEngine_Vector2_
  name: SetTarget
  nameWithType: Rattler.Arm.SetTarget
  fullName: Watcher.Rattler.Arm.SetTarget
- uid: Watcher.Rattler.Arm.Reset*
  commentId: Overload:Watcher.Rattler.Arm.Reset
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: Rattler.Arm.Reset
  fullName: Watcher.Rattler.Arm.Reset
- uid: Watcher.Rattler.Arm.CurrentTask*
  commentId: Overload:Watcher.Rattler.Arm.CurrentTask
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_CurrentTask
  name: CurrentTask
  nameWithType: Rattler.Arm.CurrentTask
  fullName: Watcher.Rattler.Arm.CurrentTask
- uid: Watcher.Rattler.Arm.Task
  commentId: T:Watcher.Rattler.Arm.Task
  parent: Watcher
  isExternal: true
  href: Watcher.Rattler.html
  name: Rattler.Arm.Task
  nameWithType: Rattler.Arm.Task
  fullName: Watcher.Rattler.Arm.Task
  spec.csharp:
  - uid: Watcher.Rattler
    name: Rattler
    isExternal: true
    href: Watcher.Rattler.html
  - name: .
  - uid: Watcher.Rattler.Arm
    name: Arm
    isExternal: true
    href: Watcher.Rattler.Arm.html
  - name: .
  - uid: Watcher.Rattler.Arm.Task
    name: Task
    isExternal: true
    href: Watcher.Rattler.Arm.Task.html
  spec.vb:
  - uid: Watcher.Rattler
    name: Rattler
    isExternal: true
    href: Watcher.Rattler.html
  - name: .
  - uid: Watcher.Rattler.Arm
    name: Arm
    isExternal: true
    href: Watcher.Rattler.Arm.html
  - name: .
  - uid: Watcher.Rattler.Arm.Task
    name: Task
    isExternal: true
    href: Watcher.Rattler.Arm.Task.html
- uid: Watcher.Rattler.Arm.TargetClawDir*
  commentId: Overload:Watcher.Rattler.Arm.TargetClawDir
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_TargetClawDir
  name: TargetClawDir
  nameWithType: Rattler.Arm.TargetClawDir
  fullName: Watcher.Rattler.Arm.TargetClawDir
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Watcher.Rattler.Arm.TargetPos*
  commentId: Overload:Watcher.Rattler.Arm.TargetPos
  isExternal: true
  href: Watcher.Rattler.Arm.html#Watcher_Rattler_Arm_TargetPos
  name: TargetPos
  nameWithType: Rattler.Arm.TargetPos
  fullName: Watcher.Rattler.Arm.TargetPos
