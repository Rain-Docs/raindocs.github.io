### YamlMime:ManagedReference
items:
- uid: Global.ShortcutData
  commentId: T:Global.ShortcutData
  id: ShortcutData
  parent: Global
  children:
  - Global.ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])
  - Global.ShortcutData.DestTile
  - Global.ShortcutData.LeadingSomewhere
  - Global.ShortcutData.StartTile
  - Global.ShortcutData.ToNode
  - Global.ShortcutData.connection
  - Global.ShortcutData.destNode
  - Global.ShortcutData.destinationCoord
  - Global.ShortcutData.length
  - Global.ShortcutData.path
  - Global.ShortcutData.room
  - Global.ShortcutData.shortCutType
  - Global.ShortcutData.startCoord
  langs:
  - csharp
  - vb
  name: ShortcutData
  nameWithType: ShortcutData
  fullName: ShortcutData
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ShortcutData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct ShortcutData
    content.vb: Public Structure ShortcutData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.ShortcutData.room
  commentId: F:Global.ShortcutData.room
  id: room
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: room
  nameWithType: ShortcutData.room
  fullName: ShortcutData.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ShortcutData.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.ShortcutData.shortCutType
  commentId: F:Global.ShortcutData.shortCutType
  id: shortCutType
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: shortCutType
  nameWithType: ShortcutData.shortCutType
  fullName: ShortcutData.shortCutType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ShortcutData.shortCutType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData.Type shortCutType
    return:
      type: Global.ShortcutData.Type
    content.vb: Public shortCutType As ShortcutData.Type
- uid: Global.ShortcutData.connection
  commentId: F:Global.ShortcutData.connection
  id: connection
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: connection
  nameWithType: ShortcutData.connection
  fullName: ShortcutData.connection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ShortcutData.connection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection connection
    return:
      type: Global.MovementConnection
    content.vb: Public connection As MovementConnection
- uid: Global.ShortcutData.destNode
  commentId: F:Global.ShortcutData.destNode
  id: destNode
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: destNode
  nameWithType: ShortcutData.destNode
  fullName: ShortcutData.destNode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ShortcutData.destNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int destNode
    return:
      type: System.Int32
    content.vb: Public destNode As Integer
- uid: Global.ShortcutData.path
  commentId: F:Global.ShortcutData.path
  id: path
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: path
  nameWithType: ShortcutData.path
  fullName: ShortcutData.path
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ShortcutData.path</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] path
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public path As IntVector2()
- uid: Global.ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])
  commentId: M:Global.ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])
  id: '#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])'
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: ShortcutData(Room, Type, int, IntVector2, IntVector2, int, IntVector2[])
  nameWithType: ShortcutData.ShortcutData(Room, ShortcutData.Type, int, IntVector2, IntVector2, int, IntVector2[])
  fullName: ShortcutData.ShortcutData(Room, ShortcutData.Type, int, RWCustom.IntVector2, RWCustom.IntVector2, int, RWCustom.IntVector2[])
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ShortcutData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData(Room room, ShortcutData.Type shortCutType, int length, IntVector2 start, IntVector2 goal, int destNode, IntVector2[] path)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: shortCutType
      type: Global.ShortcutData.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortCutType</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: length
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>length</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: start
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>start</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: goal
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goal</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: destNode
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>destNode</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: path
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:ShortcutData.#ctor(Room,ShortcutData.Type,System.Int32,RWCustom.IntVector2,RWCustom.IntVector2,System.Int32,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, shortCutType As ShortcutData.Type, length As Integer, start As IntVector2, goal As IntVector2, destNode As Integer, path As IntVector2())
  overload: Global.ShortcutData.#ctor*
  nameWithType.vb: ShortcutData.New(Room, ShortcutData.Type, Integer, IntVector2, IntVector2, Integer, IntVector2())
  fullName.vb: ShortcutData.New(Room, ShortcutData.Type, Integer, RWCustom.IntVector2, RWCustom.IntVector2, Integer, RWCustom.IntVector2())
  name.vb: New(Room, Type, Integer, IntVector2, IntVector2, Integer, IntVector2())
- uid: Global.ShortcutData.LeadingSomewhere
  commentId: P:Global.ShortcutData.LeadingSomewhere
  id: LeadingSomewhere
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: LeadingSomewhere
  nameWithType: ShortcutData.LeadingSomewhere
  fullName: ShortcutData.LeadingSomewhere
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.LeadingSomewhere</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool LeadingSomewhere { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property LeadingSomewhere As Boolean
  overload: Global.ShortcutData.LeadingSomewhere*
- uid: Global.ShortcutData.ToNode
  commentId: P:Global.ShortcutData.ToNode
  id: ToNode
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: ToNode
  nameWithType: ShortcutData.ToNode
  fullName: ShortcutData.ToNode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.ToNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ToNode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ToNode As Boolean
  overload: Global.ShortcutData.ToNode*
- uid: Global.ShortcutData.StartTile
  commentId: P:Global.ShortcutData.StartTile
  id: StartTile
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: StartTile
  nameWithType: ShortcutData.StartTile
  fullName: ShortcutData.StartTile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.StartTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 StartTile { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property StartTile As IntVector2
  overload: Global.ShortcutData.StartTile*
- uid: Global.ShortcutData.DestTile
  commentId: P:Global.ShortcutData.DestTile
  id: DestTile
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: DestTile
  nameWithType: ShortcutData.DestTile
  fullName: ShortcutData.DestTile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.DestTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 DestTile { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property DestTile As IntVector2
  overload: Global.ShortcutData.DestTile*
- uid: Global.ShortcutData.startCoord
  commentId: P:Global.ShortcutData.startCoord
  id: startCoord
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: startCoord
  nameWithType: ShortcutData.startCoord
  fullName: ShortcutData.startCoord
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.startCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate startCoord { get; }
    parameters: []
    return:
      type: Global.WorldCoordinate
    content.vb: Public ReadOnly Property startCoord As WorldCoordinate
  overload: Global.ShortcutData.startCoord*
- uid: Global.ShortcutData.destinationCoord
  commentId: P:Global.ShortcutData.destinationCoord
  id: destinationCoord
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: destinationCoord
  nameWithType: ShortcutData.destinationCoord
  fullName: ShortcutData.destinationCoord
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.destinationCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate destinationCoord { get; }
    parameters: []
    return:
      type: Global.WorldCoordinate
    content.vb: Public ReadOnly Property destinationCoord As WorldCoordinate
  overload: Global.ShortcutData.destinationCoord*
- uid: Global.ShortcutData.length
  commentId: P:Global.ShortcutData.length
  id: length
  parent: Global.ShortcutData
  langs:
  - csharp
  - vb
  name: length
  nameWithType: ShortcutData.length
  fullName: ShortcutData.length
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ShortcutData.length</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int length { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property length As Integer
  overload: Global.ShortcutData.length*
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.ShortcutData.Type
  commentId: T:Global.ShortcutData.Type
  isExternal: true
  href: ShortcutData.html
  name: ShortcutData.Type
  nameWithType: ShortcutData.Type
  fullName: ShortcutData.Type
  spec.csharp:
  - uid: Global.ShortcutData
    name: ShortcutData
    isExternal: true
    href: ShortcutData.html
  - name: .
  - uid: Global.ShortcutData.Type
    name: Type
    isExternal: true
    href: ShortcutData.Type.html
  spec.vb:
  - uid: Global.ShortcutData
    name: ShortcutData
    isExternal: true
    href: ShortcutData.html
  - name: .
  - uid: Global.ShortcutData.Type
    name: Type
    isExternal: true
    href: ShortcutData.Type.html
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.ShortcutData.#ctor*
  commentId: Overload:Global.ShortcutData.#ctor
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData__ctor_Room_ShortcutData_Type_System_Int32_RWCustom_IntVector2_RWCustom_IntVector2_System_Int32_RWCustom_IntVector2___
  name: ShortcutData
  nameWithType: ShortcutData.ShortcutData
  fullName: ShortcutData.ShortcutData
  nameWithType.vb: ShortcutData.New
  fullName.vb: ShortcutData.New
  name.vb: New
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.ShortcutData.LeadingSomewhere*
  commentId: Overload:Global.ShortcutData.LeadingSomewhere
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_LeadingSomewhere
  name: LeadingSomewhere
  nameWithType: ShortcutData.LeadingSomewhere
  fullName: ShortcutData.LeadingSomewhere
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ShortcutData.ToNode*
  commentId: Overload:Global.ShortcutData.ToNode
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_ToNode
  name: ToNode
  nameWithType: ShortcutData.ToNode
  fullName: ShortcutData.ToNode
- uid: Global.ShortcutData.StartTile*
  commentId: Overload:Global.ShortcutData.StartTile
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_StartTile
  name: StartTile
  nameWithType: ShortcutData.StartTile
  fullName: ShortcutData.StartTile
- uid: Global.ShortcutData.DestTile*
  commentId: Overload:Global.ShortcutData.DestTile
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_DestTile
  name: DestTile
  nameWithType: ShortcutData.DestTile
  fullName: ShortcutData.DestTile
- uid: Global.ShortcutData.startCoord*
  commentId: Overload:Global.ShortcutData.startCoord
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_startCoord
  name: startCoord
  nameWithType: ShortcutData.startCoord
  fullName: ShortcutData.startCoord
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.ShortcutData.destinationCoord*
  commentId: Overload:Global.ShortcutData.destinationCoord
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_destinationCoord
  name: destinationCoord
  nameWithType: ShortcutData.destinationCoord
  fullName: ShortcutData.destinationCoord
- uid: Global.ShortcutData.length*
  commentId: Overload:Global.ShortcutData.length
  isExternal: true
  href: Global.ShortcutData.html#ShortcutData_length
  name: length
  nameWithType: ShortcutData.length
  fullName: ShortcutData.length
