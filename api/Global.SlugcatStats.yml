### YamlMime:ManagedReference
items:
- uid: Global.SlugcatStats
  commentId: T:Global.SlugcatStats
  id: SlugcatStats
  parent: Global
  children:
  - Global.SlugcatStats.#ctor(SlugcatStats.Name,System.Boolean)
  - Global.SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  - Global.SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  - Global.SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)
  - Global.SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  - Global.SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)
  - Global.SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)
  - Global.SlugcatStats.PearlsGivePassageProgress(StoryGameSession)
  - Global.SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatTimelineOrder
  - Global.SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)
  - Global.SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)
  - Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)
  - Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  - Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  - Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  - Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)
  - Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)
  - Global.SlugcatStats.bodyWeightFac
  - Global.SlugcatStats.corridorClimbSpeedFac
  - Global.SlugcatStats.drownThreshold
  - Global.SlugcatStats.foodToHibernate
  - Global.SlugcatStats.generalVisibilityBonus
  - Global.SlugcatStats.getSlugcatName(SlugcatStats.Name)
  - Global.SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)
  - Global.SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)
  - Global.SlugcatStats.getSlugcatTimelineOrder
  - Global.SlugcatStats.loudnessFac
  - Global.SlugcatStats.lungsFac
  - Global.SlugcatStats.malnourished
  - Global.SlugcatStats.maxFood
  - Global.SlugcatStats.name
  - Global.SlugcatStats.poleClimbSpeedFac
  - Global.SlugcatStats.runspeedFac
  - Global.SlugcatStats.swimBoostCooldown
  - Global.SlugcatStats.swimBoostCost
  - Global.SlugcatStats.swimBoostForce
  - Global.SlugcatStats.swimBoostMinAir
  - Global.SlugcatStats.swimForceFac
  - Global.SlugcatStats.throwingSkill
  - Global.SlugcatStats.visualStealthInSneakMode
  langs:
  - csharp
  - vb
  name: SlugcatStats
  nameWithType: SlugcatStats
  fullName: SlugcatStats
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SlugcatStats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SlugcatStats
    content.vb: Public Class SlugcatStats
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SlugcatStats.name
  commentId: F:Global.SlugcatStats.name
  id: name
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: name
  nameWithType: SlugcatStats.name
  fullName: SlugcatStats.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Name name
    return:
      type: Global.SlugcatStats.Name
    content.vb: Public name As SlugcatStats.Name
- uid: Global.SlugcatStats.maxFood
  commentId: F:Global.SlugcatStats.maxFood
  id: maxFood
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: maxFood
  nameWithType: SlugcatStats.maxFood
  fullName: SlugcatStats.maxFood
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.maxFood</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxFood
    return:
      type: System.Int32
    content.vb: Public maxFood As Integer
- uid: Global.SlugcatStats.foodToHibernate
  commentId: F:Global.SlugcatStats.foodToHibernate
  id: foodToHibernate
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: foodToHibernate
  nameWithType: SlugcatStats.foodToHibernate
  fullName: SlugcatStats.foodToHibernate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.foodToHibernate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int foodToHibernate
    return:
      type: System.Int32
    content.vb: Public foodToHibernate As Integer
- uid: Global.SlugcatStats.runspeedFac
  commentId: F:Global.SlugcatStats.runspeedFac
  id: runspeedFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: runspeedFac
  nameWithType: SlugcatStats.runspeedFac
  fullName: SlugcatStats.runspeedFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.runspeedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float runspeedFac
    return:
      type: System.Single
    content.vb: Public runspeedFac As Single
- uid: Global.SlugcatStats.bodyWeightFac
  commentId: F:Global.SlugcatStats.bodyWeightFac
  id: bodyWeightFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: bodyWeightFac
  nameWithType: SlugcatStats.bodyWeightFac
  fullName: SlugcatStats.bodyWeightFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.bodyWeightFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyWeightFac
    return:
      type: System.Single
    content.vb: Public bodyWeightFac As Single
- uid: Global.SlugcatStats.generalVisibilityBonus
  commentId: F:Global.SlugcatStats.generalVisibilityBonus
  id: generalVisibilityBonus
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: generalVisibilityBonus
  nameWithType: SlugcatStats.generalVisibilityBonus
  fullName: SlugcatStats.generalVisibilityBonus
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.generalVisibilityBonus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float generalVisibilityBonus
    return:
      type: System.Single
    content.vb: Public generalVisibilityBonus As Single
- uid: Global.SlugcatStats.visualStealthInSneakMode
  commentId: F:Global.SlugcatStats.visualStealthInSneakMode
  id: visualStealthInSneakMode
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: visualStealthInSneakMode
  nameWithType: SlugcatStats.visualStealthInSneakMode
  fullName: SlugcatStats.visualStealthInSneakMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.visualStealthInSneakMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float visualStealthInSneakMode
    return:
      type: System.Single
    content.vb: Public visualStealthInSneakMode As Single
- uid: Global.SlugcatStats.loudnessFac
  commentId: F:Global.SlugcatStats.loudnessFac
  id: loudnessFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: loudnessFac
  nameWithType: SlugcatStats.loudnessFac
  fullName: SlugcatStats.loudnessFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.loudnessFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loudnessFac
    return:
      type: System.Single
    content.vb: Public loudnessFac As Single
- uid: Global.SlugcatStats.lungsFac
  commentId: F:Global.SlugcatStats.lungsFac
  id: lungsFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: lungsFac
  nameWithType: SlugcatStats.lungsFac
  fullName: SlugcatStats.lungsFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.lungsFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lungsFac
    return:
      type: System.Single
    content.vb: Public lungsFac As Single
- uid: Global.SlugcatStats.malnourished
  commentId: F:Global.SlugcatStats.malnourished
  id: malnourished
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: malnourished
  nameWithType: SlugcatStats.malnourished
  fullName: SlugcatStats.malnourished
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.malnourished</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool malnourished
    return:
      type: System.Boolean
    content.vb: Public malnourished As Boolean
- uid: Global.SlugcatStats.throwingSkill
  commentId: F:Global.SlugcatStats.throwingSkill
  id: throwingSkill
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: throwingSkill
  nameWithType: SlugcatStats.throwingSkill
  fullName: SlugcatStats.throwingSkill
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.throwingSkill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int throwingSkill
    return:
      type: System.Int32
    content.vb: Public throwingSkill As Integer
- uid: Global.SlugcatStats.poleClimbSpeedFac
  commentId: F:Global.SlugcatStats.poleClimbSpeedFac
  id: poleClimbSpeedFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: poleClimbSpeedFac
  nameWithType: SlugcatStats.poleClimbSpeedFac
  fullName: SlugcatStats.poleClimbSpeedFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.poleClimbSpeedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float poleClimbSpeedFac
    return:
      type: System.Single
    content.vb: Public poleClimbSpeedFac As Single
- uid: Global.SlugcatStats.corridorClimbSpeedFac
  commentId: F:Global.SlugcatStats.corridorClimbSpeedFac
  id: corridorClimbSpeedFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: corridorClimbSpeedFac
  nameWithType: SlugcatStats.corridorClimbSpeedFac
  fullName: SlugcatStats.corridorClimbSpeedFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.corridorClimbSpeedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float corridorClimbSpeedFac
    return:
      type: System.Single
    content.vb: Public corridorClimbSpeedFac As Single
- uid: Global.SlugcatStats.drownThreshold
  commentId: F:Global.SlugcatStats.drownThreshold
  id: drownThreshold
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: drownThreshold
  nameWithType: SlugcatStats.drownThreshold
  fullName: SlugcatStats.drownThreshold
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.drownThreshold</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float drownThreshold
    return:
      type: System.Single
    content.vb: Public drownThreshold As Single
- uid: Global.SlugcatStats.swimForceFac
  commentId: F:Global.SlugcatStats.swimForceFac
  id: swimForceFac
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: swimForceFac
  nameWithType: SlugcatStats.swimForceFac
  fullName: SlugcatStats.swimForceFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.swimForceFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimForceFac
    return:
      type: System.Single
    content.vb: Public swimForceFac As Single
- uid: Global.SlugcatStats.swimBoostCost
  commentId: F:Global.SlugcatStats.swimBoostCost
  id: swimBoostCost
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: swimBoostCost
  nameWithType: SlugcatStats.swimBoostCost
  fullName: SlugcatStats.swimBoostCost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.swimBoostCost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimBoostCost
    return:
      type: System.Single
    content.vb: Public swimBoostCost As Single
- uid: Global.SlugcatStats.swimBoostForce
  commentId: F:Global.SlugcatStats.swimBoostForce
  id: swimBoostForce
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: swimBoostForce
  nameWithType: SlugcatStats.swimBoostForce
  fullName: SlugcatStats.swimBoostForce
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.swimBoostForce</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimBoostForce
    return:
      type: System.Single
    content.vb: Public swimBoostForce As Single
- uid: Global.SlugcatStats.swimBoostCooldown
  commentId: F:Global.SlugcatStats.swimBoostCooldown
  id: swimBoostCooldown
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: swimBoostCooldown
  nameWithType: SlugcatStats.swimBoostCooldown
  fullName: SlugcatStats.swimBoostCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.swimBoostCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int swimBoostCooldown
    return:
      type: System.Int32
    content.vb: Public swimBoostCooldown As Integer
- uid: Global.SlugcatStats.swimBoostMinAir
  commentId: F:Global.SlugcatStats.swimBoostMinAir
  id: swimBoostMinAir
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: swimBoostMinAir
  nameWithType: SlugcatStats.swimBoostMinAir
  fullName: SlugcatStats.swimBoostMinAir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SlugcatStats.swimBoostMinAir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimBoostMinAir
    return:
      type: System.Single
    content.vb: Public swimBoostMinAir As Single
- uid: Global.SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)
  id: SlugcatFoodMeter(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatFoodMeter(Name)
  nameWithType: SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 SlugcatFoodMeter(SlugcatStats.Name slugcat)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatFoodMeter(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatFoodMeter(slugcat As SlugcatStats.Name) As IntVector2
  overload: Global.SlugcatStats.SlugcatFoodMeter*
- uid: Global.SlugcatStats.#ctor(SlugcatStats.Name,System.Boolean)
  commentId: M:Global.SlugcatStats.#ctor(SlugcatStats.Name,System.Boolean)
  id: '#ctor(SlugcatStats.Name,System.Boolean)'
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatStats(Name, bool)
  nameWithType: SlugcatStats.SlugcatStats(SlugcatStats.Name, bool)
  fullName: SlugcatStats.SlugcatStats(SlugcatStats.Name, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SlugcatStats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats(SlugcatStats.Name slugcat, bool malnourished)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:SlugcatStats.#ctor(SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    - id: malnourished
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>malnourished</parameter>
            <parameter>M:SlugcatStats.#ctor(SlugcatStats.Name,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(slugcat As SlugcatStats.Name, malnourished As Boolean)
  overload: Global.SlugcatStats.#ctor*
  nameWithType.vb: SlugcatStats.New(SlugcatStats.Name, Boolean)
  fullName.vb: SlugcatStats.New(SlugcatStats.Name, Boolean)
  name.vb: New(Name, Boolean)
- uid: Global.SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)
  commentId: M:Global.SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)
  id: NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: NourishmentOfObjectEaten(Name, IPlayerEdible)
  nameWithType: SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name, IPlayerEdible)
  fullName: SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name, IPlayerEdible)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int NourishmentOfObjectEaten(SlugcatStats.Name slugcatIndex, IPlayerEdible eatenobject)
    parameters:
    - id: slugcatIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatIndex</parameter>
            <parameter>M:SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)</parameter>
          </include>
        </markup>
    - id: eatenobject
      type: Global.IPlayerEdible
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eatenobject</parameter>
            <parameter>M:SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.NourishmentOfObjectEaten(SlugcatStats.Name,IPlayerEdible)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function NourishmentOfObjectEaten(slugcatIndex As SlugcatStats.Name, eatenobject As IPlayerEdible) As Integer
  overload: Global.SlugcatStats.NourishmentOfObjectEaten*
- uid: Global.SlugcatStats.PearlsGivePassageProgress(StoryGameSession)
  commentId: M:Global.SlugcatStats.PearlsGivePassageProgress(StoryGameSession)
  id: PearlsGivePassageProgress(StoryGameSession)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: PearlsGivePassageProgress(StoryGameSession)
  nameWithType: SlugcatStats.PearlsGivePassageProgress(StoryGameSession)
  fullName: SlugcatStats.PearlsGivePassageProgress(StoryGameSession)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.PearlsGivePassageProgress(StoryGameSession)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool PearlsGivePassageProgress(StoryGameSession session)
    parameters:
    - id: session
      type: Global.StoryGameSession
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>session</parameter>
            <parameter>M:SlugcatStats.PearlsGivePassageProgress(StoryGameSession)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.PearlsGivePassageProgress(StoryGameSession)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PearlsGivePassageProgress(session As StoryGameSession) As Boolean
  overload: Global.SlugcatStats.PearlsGivePassageProgress*
- uid: Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  id: SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnExplosiveRandomChance(Name)
  nameWithType: SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  fullName: SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public static float SpearSpawnExplosiveRandomChance(SlugcatStats.Name index)
    parameters:
    - id: index
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Shared Function SpearSpawnExplosiveRandomChance(index As SlugcatStats.Name) As Single
  overload: Global.SlugcatStats.SpearSpawnExplosiveRandomChance*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  commentId: M:Global.SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  id: SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnExplosiveRandomChance(Timeline)
  nameWithType: SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  fullName: SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline index)
    parameters:
    - id: index
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnExplosiveRandomChance(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpearSpawnExplosiveRandomChance(index As SlugcatStats.Timeline) As Single
  overload: Global.SlugcatStats.SpearSpawnExplosiveRandomChance*
- uid: Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)
  id: SpearSpawnElectricRandomChance(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnElectricRandomChance(Name)
  nameWithType: SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)
  fullName: SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public static float SpearSpawnElectricRandomChance(SlugcatStats.Name index)
    parameters:
    - id: index
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Shared Function SpearSpawnElectricRandomChance(index As SlugcatStats.Name) As Single
  overload: Global.SlugcatStats.SpearSpawnElectricRandomChance*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  commentId: M:Global.SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  id: SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnElectricRandomChance(Timeline)
  nameWithType: SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  fullName: SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float SpearSpawnElectricRandomChance(SlugcatStats.Timeline index)
    parameters:
    - id: index
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnElectricRandomChance(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpearSpawnElectricRandomChance(index As SlugcatStats.Timeline) As Single
  overload: Global.SlugcatStats.SpearSpawnElectricRandomChance*
- uid: Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)
  commentId: M:Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)
  id: SpearSpawnModifier(SlugcatStats.Name,System.Single)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnModifier(Name, float)
  nameWithType: SlugcatStats.SpearSpawnModifier(SlugcatStats.Name, float)
  fullName: SlugcatStats.SpearSpawnModifier(SlugcatStats.Name, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public static float SpearSpawnModifier(SlugcatStats.Name index, float originalSpearChance)
    parameters:
    - id: index
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    - id: originalSpearChance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originalSpearChance</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Shared Function SpearSpawnModifier(index As SlugcatStats.Name, originalSpearChance As Single) As Single
  overload: Global.SlugcatStats.SpearSpawnModifier*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
  nameWithType.vb: SlugcatStats.SpearSpawnModifier(SlugcatStats.Name, Single)
  fullName.vb: SlugcatStats.SpearSpawnModifier(SlugcatStats.Name, Single)
  name.vb: SpearSpawnModifier(Name, Single)
- uid: Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)
  commentId: M:Global.SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)
  id: SpearSpawnModifier(SlugcatStats.Timeline,System.Single)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SpearSpawnModifier(Timeline, float)
  nameWithType: SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline, float)
  fullName: SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float SpearSpawnModifier(SlugcatStats.Timeline index, float originalSpearChance)
    parameters:
    - id: index
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)</parameter>
          </include>
        </markup>
    - id: originalSpearChance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originalSpearChance</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpearSpawnModifier(index As SlugcatStats.Timeline, originalSpearChance As Single) As Single
  overload: Global.SlugcatStats.SpearSpawnModifier*
  nameWithType.vb: SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline, Single)
  fullName.vb: SlugcatStats.SpearSpawnModifier(SlugcatStats.Timeline, Single)
  name.vb: SpearSpawnModifier(Timeline, Single)
- uid: Global.SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)
  id: AutoGrabBatflys(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: AutoGrabBatflys(Name)
  nameWithType: SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)
  fullName: SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool AutoGrabBatflys(SlugcatStats.Name slugcatNum)
    parameters:
    - id: slugcatNum
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatNum</parameter>
            <parameter>M:SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.AutoGrabBatflys(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function AutoGrabBatflys(slugcatNum As SlugcatStats.Name) As Boolean
  overload: Global.SlugcatStats.AutoGrabBatflys*
- uid: Global.SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)
  id: SlugcatStartingKarma(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatStartingKarma(Name)
  nameWithType: SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int SlugcatStartingKarma(SlugcatStats.Name slugcatNum)
    parameters:
    - id: slugcatNum
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatNum</parameter>
            <parameter>M:SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatStartingKarma(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatStartingKarma(slugcatNum As SlugcatStats.Name) As Integer
  overload: Global.SlugcatStats.SlugcatStartingKarma*
- uid: Global.SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)
  id: SlugcatCanMaul(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatCanMaul(Name)
  nameWithType: SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool SlugcatCanMaul(SlugcatStats.Name slugcatNum)
    parameters:
    - id: slugcatNum
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatNum</parameter>
            <parameter>M:SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatCanMaul(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatCanMaul(slugcatNum As SlugcatStats.Name) As Boolean
  overload: Global.SlugcatStats.SlugcatCanMaul*
- uid: Global.SlugcatStats.getSlugcatName(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.getSlugcatName(SlugcatStats.Name)
  id: getSlugcatName(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: getSlugcatName(Name)
  nameWithType: SlugcatStats.getSlugcatName(SlugcatStats.Name)
  fullName: SlugcatStats.getSlugcatName(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.getSlugcatName(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string getSlugcatName(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.getSlugcatName(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.getSlugcatName(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function getSlugcatName(i As SlugcatStats.Name) As String
  overload: Global.SlugcatStats.getSlugcatName*
- uid: Global.SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)
  id: SlugcatStoryRegions(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatStoryRegions(Name)
  nameWithType: SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> SlugcatStoryRegions(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatStoryRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatStoryRegions(i As SlugcatStats.Name) As List(Of String)
  overload: Global.SlugcatStats.SlugcatStoryRegions*
- uid: Global.SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)
  id: getSlugcatStoryRegions(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: getSlugcatStoryRegions(Name)
  nameWithType: SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)
  fullName: SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Renamed to SlugcatStoryRegions")]

      public static string[] getSlugcatStoryRegions(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.getSlugcatStoryRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Renamed to SlugcatStoryRegions")>

      Public Shared Function getSlugcatStoryRegions(i As SlugcatStats.Name) As String()
  overload: Global.SlugcatStats.getSlugcatStoryRegions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Renamed to SlugcatStoryRegions
- uid: Global.SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)
  id: SlugcatOptionalRegions(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatOptionalRegions(Name)
  nameWithType: SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> SlugcatOptionalRegions(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatOptionalRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatOptionalRegions(i As SlugcatStats.Name) As List(Of String)
  overload: Global.SlugcatStats.SlugcatOptionalRegions*
- uid: Global.SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)
  id: getSlugcatOptionalRegions(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: getSlugcatOptionalRegions(Name)
  nameWithType: SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)
  fullName: SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Renamed to SlugcatOptionalRegions")]

      public static string[] getSlugcatOptionalRegions(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.getSlugcatOptionalRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Renamed to SlugcatOptionalRegions")>

      Public Shared Function getSlugcatOptionalRegions(i As SlugcatStats.Name) As String()
  overload: Global.SlugcatStats.getSlugcatOptionalRegions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Renamed to SlugcatOptionalRegions
- uid: Global.SlugcatStats.SlugcatTimelineOrder
  commentId: M:Global.SlugcatStats.SlugcatTimelineOrder
  id: SlugcatTimelineOrder
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatTimelineOrder()
  nameWithType: SlugcatStats.SlugcatTimelineOrder()
  fullName: SlugcatStats.SlugcatTimelineOrder()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatTimelineOrder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static LinkedList<SlugcatStats.Timeline> SlugcatTimelineOrder()
    return:
      type: System.Collections.Generic.LinkedList{SlugcatStats.Timeline}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatTimelineOrder</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatTimelineOrder() As LinkedList(Of SlugcatStats.Timeline)
  overload: Global.SlugcatStats.SlugcatTimelineOrder*
- uid: Global.SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)
  id: SlugcatToTimeline(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatToTimeline(Name)
  nameWithType: SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)
  fullName: SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SlugcatStats.Timeline SlugcatToTimeline(SlugcatStats.Name slugcat)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatToTimeline(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatToTimeline(slugcat As SlugcatStats.Name) As SlugcatStats.Timeline
  overload: Global.SlugcatStats.SlugcatToTimeline*
- uid: Global.SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  commentId: M:Global.SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  id: AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: AtOrBeforeTimeline(Timeline, Timeline)
  nameWithType: SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline, SlugcatStats.Timeline)
  fullName: SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline, SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool AtOrBeforeTimeline(SlugcatStats.Timeline currentTime, SlugcatStats.Timeline compareTime)
    parameters:
    - id: currentTime
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currentTime</parameter>
            <parameter>M:SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: compareTime
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>compareTime</parameter>
            <parameter>M:SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.AtOrBeforeTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function AtOrBeforeTimeline(currentTime As SlugcatStats.Timeline, compareTime As SlugcatStats.Timeline) As Boolean
  overload: Global.SlugcatStats.AtOrBeforeTimeline*
- uid: Global.SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  commentId: M:Global.SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  id: AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: AtOrAfterTimeline(Timeline, Timeline)
  nameWithType: SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline, SlugcatStats.Timeline)
  fullName: SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline, SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool AtOrAfterTimeline(SlugcatStats.Timeline currentTime, SlugcatStats.Timeline compareTime)
    parameters:
    - id: currentTime
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currentTime</parameter>
            <parameter>M:SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: compareTime
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>compareTime</parameter>
            <parameter>M:SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.AtOrAfterTimeline(SlugcatStats.Timeline,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function AtOrAfterTimeline(currentTime As SlugcatStats.Timeline, compareTime As SlugcatStats.Timeline) As Boolean
  overload: Global.SlugcatStats.AtOrAfterTimeline*
- uid: Global.SlugcatStats.getSlugcatTimelineOrder
  commentId: M:Global.SlugcatStats.getSlugcatTimelineOrder
  id: getSlugcatTimelineOrder
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: getSlugcatTimelineOrder()
  nameWithType: SlugcatStats.getSlugcatTimelineOrder()
  fullName: SlugcatStats.getSlugcatTimelineOrder()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.getSlugcatTimelineOrder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Renamed to SlugcatTimelineOrder")]

      public static SlugcatStats.Timeline[] getSlugcatTimelineOrder()
    return:
      type: Global.SlugcatStats.Timeline[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.getSlugcatTimelineOrder</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Renamed to SlugcatTimelineOrder")>

      Public Shared Function getSlugcatTimelineOrder() As SlugcatStats.Timeline()
  overload: Global.SlugcatStats.getSlugcatTimelineOrder*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Renamed to SlugcatTimelineOrder
- uid: Global.SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  id: HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: HiddenOrUnplayableSlugcat(Name)
  nameWithType: SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  fullName: SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool HiddenOrUnplayableSlugcat(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.HiddenOrUnplayableSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HiddenOrUnplayableSlugcat(i As SlugcatStats.Name) As Boolean
  overload: Global.SlugcatStats.HiddenOrUnplayableSlugcat*
- uid: Global.SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)
  commentId: M:Global.SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)
  id: SlugcatUnlocked(SlugcatStats.Name,RainWorld)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: SlugcatUnlocked(Name, RainWorld)
  nameWithType: SlugcatStats.SlugcatUnlocked(SlugcatStats.Name, RainWorld)
  fullName: SlugcatStats.SlugcatUnlocked(SlugcatStats.Name, RainWorld)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool SlugcatUnlocked(SlugcatStats.Name i, RainWorld rainWorld)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)</parameter>
          </include>
        </markup>
    - id: rainWorld
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rainWorld</parameter>
            <parameter>M:SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.SlugcatUnlocked(SlugcatStats.Name,RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugcatUnlocked(i As SlugcatStats.Name, rainWorld As RainWorld) As Boolean
  overload: Global.SlugcatStats.SlugcatUnlocked*
- uid: Global.SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)
  commentId: M:Global.SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)
  id: IsSlugcatFromMSC(SlugcatStats.Name)
  parent: Global.SlugcatStats
  langs:
  - csharp
  - vb
  name: IsSlugcatFromMSC(Name)
  nameWithType: SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)
  fullName: SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsSlugcatFromMSC(SlugcatStats.Name i)
    parameters:
    - id: i
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SlugcatStats.IsSlugcatFromMSC(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsSlugcatFromMSC(i As SlugcatStats.Name) As Boolean
  overload: Global.SlugcatStats.IsSlugcatFromMSC*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SlugcatStats.SlugcatFoodMeter*
  commentId: Overload:Global.SlugcatStats.SlugcatFoodMeter
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatFoodMeter_SlugcatStats_Name_
  name: SlugcatFoodMeter
  nameWithType: SlugcatStats.SlugcatFoodMeter
  fullName: SlugcatStats.SlugcatFoodMeter
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.SlugcatStats.#ctor*
  commentId: Overload:Global.SlugcatStats.#ctor
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats__ctor_SlugcatStats_Name_System_Boolean_
  name: SlugcatStats
  nameWithType: SlugcatStats.SlugcatStats
  fullName: SlugcatStats.SlugcatStats
  nameWithType.vb: SlugcatStats.New
  fullName.vb: SlugcatStats.New
  name.vb: New
- uid: Global.SlugcatStats.NourishmentOfObjectEaten*
  commentId: Overload:Global.SlugcatStats.NourishmentOfObjectEaten
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_NourishmentOfObjectEaten_SlugcatStats_Name_IPlayerEdible_
  name: NourishmentOfObjectEaten
  nameWithType: SlugcatStats.NourishmentOfObjectEaten
  fullName: SlugcatStats.NourishmentOfObjectEaten
- uid: Global.IPlayerEdible
  commentId: T:Global.IPlayerEdible
  isExternal: true
  href: IPlayerEdible.html
  name: IPlayerEdible
  nameWithType: IPlayerEdible
  fullName: IPlayerEdible
- uid: Global.SlugcatStats.PearlsGivePassageProgress*
  commentId: Overload:Global.SlugcatStats.PearlsGivePassageProgress
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_PearlsGivePassageProgress_StoryGameSession_
  name: PearlsGivePassageProgress
  nameWithType: SlugcatStats.PearlsGivePassageProgress
  fullName: SlugcatStats.PearlsGivePassageProgress
- uid: Global.StoryGameSession
  commentId: T:Global.StoryGameSession
  isExternal: true
  href: StoryGameSession.html
  name: StoryGameSession
  nameWithType: StoryGameSession
  fullName: StoryGameSession
- uid: Global.SlugcatStats.SpearSpawnExplosiveRandomChance*
  commentId: Overload:Global.SlugcatStats.SpearSpawnExplosiveRandomChance
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SpearSpawnExplosiveRandomChance_SlugcatStats_Name_
  name: SpearSpawnExplosiveRandomChance
  nameWithType: SlugcatStats.SpearSpawnExplosiveRandomChance
  fullName: SlugcatStats.SpearSpawnExplosiveRandomChance
- uid: Global.SlugcatStats.Timeline
  commentId: T:Global.SlugcatStats.Timeline
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Timeline
  nameWithType: SlugcatStats.Timeline
  fullName: SlugcatStats.Timeline
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
- uid: Global.SlugcatStats.SpearSpawnElectricRandomChance*
  commentId: Overload:Global.SlugcatStats.SpearSpawnElectricRandomChance
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SpearSpawnElectricRandomChance_SlugcatStats_Name_
  name: SpearSpawnElectricRandomChance
  nameWithType: SlugcatStats.SpearSpawnElectricRandomChance
  fullName: SlugcatStats.SpearSpawnElectricRandomChance
- uid: Global.SlugcatStats.SpearSpawnModifier*
  commentId: Overload:Global.SlugcatStats.SpearSpawnModifier
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SpearSpawnModifier_SlugcatStats_Name_System_Single_
  name: SpearSpawnModifier
  nameWithType: SlugcatStats.SpearSpawnModifier
  fullName: SlugcatStats.SpearSpawnModifier
- uid: Global.SlugcatStats.AutoGrabBatflys*
  commentId: Overload:Global.SlugcatStats.AutoGrabBatflys
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_AutoGrabBatflys_SlugcatStats_Name_
  name: AutoGrabBatflys
  nameWithType: SlugcatStats.AutoGrabBatflys
  fullName: SlugcatStats.AutoGrabBatflys
- uid: Global.SlugcatStats.SlugcatStartingKarma*
  commentId: Overload:Global.SlugcatStats.SlugcatStartingKarma
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatStartingKarma_SlugcatStats_Name_
  name: SlugcatStartingKarma
  nameWithType: SlugcatStats.SlugcatStartingKarma
  fullName: SlugcatStats.SlugcatStartingKarma
- uid: Global.SlugcatStats.SlugcatCanMaul*
  commentId: Overload:Global.SlugcatStats.SlugcatCanMaul
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatCanMaul_SlugcatStats_Name_
  name: SlugcatCanMaul
  nameWithType: SlugcatStats.SlugcatCanMaul
  fullName: SlugcatStats.SlugcatCanMaul
- uid: Global.SlugcatStats.getSlugcatName*
  commentId: Overload:Global.SlugcatStats.getSlugcatName
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_getSlugcatName_SlugcatStats_Name_
  name: getSlugcatName
  nameWithType: SlugcatStats.getSlugcatName
  fullName: SlugcatStats.getSlugcatName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.SlugcatStats.SlugcatStoryRegions*
  commentId: Overload:Global.SlugcatStats.SlugcatStoryRegions
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatStoryRegions_SlugcatStats_Name_
  name: SlugcatStoryRegions
  nameWithType: SlugcatStats.SlugcatStoryRegions
  fullName: SlugcatStats.SlugcatStoryRegions
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.SlugcatStats.getSlugcatStoryRegions*
  commentId: Overload:Global.SlugcatStats.getSlugcatStoryRegions
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_getSlugcatStoryRegions_SlugcatStats_Name_
  name: getSlugcatStoryRegions
  nameWithType: SlugcatStats.getSlugcatStoryRegions
  fullName: SlugcatStats.getSlugcatStoryRegions
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.SlugcatStats.SlugcatOptionalRegions*
  commentId: Overload:Global.SlugcatStats.SlugcatOptionalRegions
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatOptionalRegions_SlugcatStats_Name_
  name: SlugcatOptionalRegions
  nameWithType: SlugcatStats.SlugcatOptionalRegions
  fullName: SlugcatStats.SlugcatOptionalRegions
- uid: Global.SlugcatStats.getSlugcatOptionalRegions*
  commentId: Overload:Global.SlugcatStats.getSlugcatOptionalRegions
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_getSlugcatOptionalRegions_SlugcatStats_Name_
  name: getSlugcatOptionalRegions
  nameWithType: SlugcatStats.getSlugcatOptionalRegions
  fullName: SlugcatStats.getSlugcatOptionalRegions
- uid: Global.SlugcatStats.SlugcatTimelineOrder*
  commentId: Overload:Global.SlugcatStats.SlugcatTimelineOrder
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatTimelineOrder
  name: SlugcatTimelineOrder
  nameWithType: SlugcatStats.SlugcatTimelineOrder
  fullName: SlugcatStats.SlugcatTimelineOrder
- uid: System.Collections.Generic.LinkedList{SlugcatStats.Timeline}
  commentId: T:System.Collections.Generic.LinkedList{SlugcatStats.Timeline}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedList`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<SlugcatStats.Timeline>
  nameWithType: LinkedList<SlugcatStats.Timeline>
  fullName: System.Collections.Generic.LinkedList<SlugcatStats.Timeline>
  nameWithType.vb: LinkedList(Of SlugcatStats.Timeline)
  fullName.vb: System.Collections.Generic.LinkedList(Of SlugcatStats.Timeline)
  name.vb: LinkedList(Of SlugcatStats.Timeline)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: )
- uid: System.Collections.Generic.LinkedList`1
  commentId: T:System.Collections.Generic.LinkedList`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  name: LinkedList<T>
  nameWithType: LinkedList<T>
  fullName: System.Collections.Generic.LinkedList<T>
  nameWithType.vb: LinkedList(Of T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T)
  name.vb: LinkedList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1
    name: LinkedList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.linkedlist-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.SlugcatStats.SlugcatToTimeline*
  commentId: Overload:Global.SlugcatStats.SlugcatToTimeline
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatToTimeline_SlugcatStats_Name_
  name: SlugcatToTimeline
  nameWithType: SlugcatStats.SlugcatToTimeline
  fullName: SlugcatStats.SlugcatToTimeline
- uid: Global.SlugcatStats.AtOrBeforeTimeline*
  commentId: Overload:Global.SlugcatStats.AtOrBeforeTimeline
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_AtOrBeforeTimeline_SlugcatStats_Timeline_SlugcatStats_Timeline_
  name: AtOrBeforeTimeline
  nameWithType: SlugcatStats.AtOrBeforeTimeline
  fullName: SlugcatStats.AtOrBeforeTimeline
- uid: Global.SlugcatStats.AtOrAfterTimeline*
  commentId: Overload:Global.SlugcatStats.AtOrAfterTimeline
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_AtOrAfterTimeline_SlugcatStats_Timeline_SlugcatStats_Timeline_
  name: AtOrAfterTimeline
  nameWithType: SlugcatStats.AtOrAfterTimeline
  fullName: SlugcatStats.AtOrAfterTimeline
- uid: Global.SlugcatStats.getSlugcatTimelineOrder*
  commentId: Overload:Global.SlugcatStats.getSlugcatTimelineOrder
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_getSlugcatTimelineOrder
  name: getSlugcatTimelineOrder
  nameWithType: SlugcatStats.getSlugcatTimelineOrder
  fullName: SlugcatStats.getSlugcatTimelineOrder
- uid: Global.SlugcatStats.Timeline[]
  isExternal: true
  href: SlugcatStats.Timeline.html
  name: Timeline[]
  nameWithType: SlugcatStats.Timeline[]
  fullName: SlugcatStats.Timeline[]
  nameWithType.vb: SlugcatStats.Timeline()
  fullName.vb: SlugcatStats.Timeline()
  name.vb: Timeline()
  spec.csharp:
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: (
  - name: )
- uid: Global.SlugcatStats.HiddenOrUnplayableSlugcat*
  commentId: Overload:Global.SlugcatStats.HiddenOrUnplayableSlugcat
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_HiddenOrUnplayableSlugcat_SlugcatStats_Name_
  name: HiddenOrUnplayableSlugcat
  nameWithType: SlugcatStats.HiddenOrUnplayableSlugcat
  fullName: SlugcatStats.HiddenOrUnplayableSlugcat
- uid: Global.SlugcatStats.SlugcatUnlocked*
  commentId: Overload:Global.SlugcatStats.SlugcatUnlocked
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_SlugcatUnlocked_SlugcatStats_Name_RainWorld_
  name: SlugcatUnlocked
  nameWithType: SlugcatStats.SlugcatUnlocked
  fullName: SlugcatStats.SlugcatUnlocked
- uid: Global.RainWorld
  commentId: T:Global.RainWorld
  isExternal: true
  href: RainWorld.html
  name: RainWorld
  nameWithType: RainWorld
  fullName: RainWorld
- uid: Global.SlugcatStats.IsSlugcatFromMSC*
  commentId: Overload:Global.SlugcatStats.IsSlugcatFromMSC
  isExternal: true
  href: Global.SlugcatStats.html#SlugcatStats_IsSlugcatFromMSC_SlugcatStats_Name_
  name: IsSlugcatFromMSC
  nameWithType: SlugcatStats.IsSlugcatFromMSC
  fullName: SlugcatStats.IsSlugcatFromMSC
