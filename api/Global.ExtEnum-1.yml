### YamlMime:ManagedReference
items:
- uid: Global.ExtEnum`1
  commentId: T:Global.ExtEnum`1
  id: ExtEnum`1
  parent: Global
  children:
  - Global.ExtEnum`1.#ctor
  - Global.ExtEnum`1.#ctor(System.String,System.Boolean)
  - Global.ExtEnum`1.Equals(ExtEnum{`0})
  - Global.ExtEnum`1.Equals(System.Object)
  - Global.ExtEnum`1.Equals(`0)
  - Global.ExtEnum`1.GetHashCode
  - Global.ExtEnum`1.Index
  - Global.ExtEnum`1.Unregister
  - Global.ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})
  - Global.ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32
  - Global.ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})
  - Global.ExtEnum`1.values
  - Global.ExtEnum`1.valuesVersion
  langs:
  - csharp
  - vb
  name: ExtEnum<T>
  nameWithType: ExtEnum<T>
  fullName: ExtEnum<T>
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ExtEnum`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public abstract class ExtEnum<T> : ExtEnumBase, IComparable, IEquatable<T> where T : class'
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:ExtEnum`1</parameter>
          </include>
        </markup>
    content.vb: Public MustInherit Class ExtEnum(Of T As Class) Inherits ExtEnumBase Implements IComparable, IEquatable(Of T)
  inheritance:
  - System.Object
  - Global.ExtEnumBase
  derivedClasses:
  - DevInterface.DevUISignalType
  - DevInterface.ObjectsPage.DevObjectCategories
  - DevInterface.RoomAttractivenessPanel.Category
  - DevInterface.RoomSettingSlider.Type
  - DevInterface.RoomSettingsPage.DevEffectsCategories
  - DevInterface.SoundPage.SoundTypes
  - Global.AbstractPhysicalObject.AbstractObjectType
  - Global.AbstractRoom.CreatureRoomAttraction
  - Global.AbstractRoomNode.Type
  - Global.AbstractSpaceNodeFinder.FloodMethod
  - Global.AbstractSpaceNodeFinder.SearchingFor
  - Global.AbstractSpaceNodeFinder.Status
  - Global.AmbientSound.Type
  - Global.ArenaSetup.GameTypeID
  - Global.ArenaSetup.GameTypeSetup.DenEntryRule
  - Global.ArenaSetup.GameTypeSetup.WildLifeSetting
  - Global.BigEelAI.Behavior
  - Global.BigSpiderAI.Behavior
  - Global.Bubble.Mode
  - Global.CentipedeAI.Behavior
  - Global.CicadaAI.Behavior
  - Global.ControllerHandler.RumbleState
  - Global.Conversation.ID
  - Global.CosmeticInsect.Type
  - Global.Creature.DamageType
  - Global.Creature.Grasp.Shareability
  - Global.CreatureCommunities.CommunityID
  - Global.CreatureTemplate.Relationship.Type
  - Global.CreatureTemplate.Type
  - Global.CreatureTemplate.WaterRelationship
  - Global.DaddyAI.Behavior
  - Global.DaddyCorruption.CustomRotData.Behavior
  - Global.DaddyCorruption.CustomRotData.EyeType
  - Global.DaddyCorruption.CustomRotData.RotColor
  - Global.DaddyTentacle.Task
  - Global.DartMaggot.Mode
  - Global.DataPearl.AbstractDataPearl.DataPearlType
  - Global.DeathPersistentSaveData.Tutorial
  - Global.DeerAI.Behavior
  - Global.DreamsState.DreamID
  - Global.DropBugAI.Behavior
  - Global.EggBugAI.Behavior
  - Global.EventTrigger.TriggerType
  - Global.FliesWorldAI.Behavior
  - Global.FloatTweener.TweenType
  - Global.Fly.MovementMode
  - Global.FlyAI.Behavior
  - Global.FlyAI.DropStatus
  - Global.GhostWorldPresence.GhostID
  - Global.GlobalRain.DeathRain.DeathRainMode
  - Global.HardmodeStart.Phase
  - Global.InGameTranslator.LanguageID
  - Global.JetFishAI.Behavior
  - Global.JokeRifle.AbstractRifle.AmmoType
  - Global.KingTusks.Tusk.Mode
  - Global.LightBeam.LightBeamData.BlinkType
  - Global.Limb.Mode
  - Global.Lizard.Animation
  - Global.LizardAI.Behavior
  - Global.LizardAI.LizardCommunication
  - Global.LizardState.RotType
  - Global.LizardTongue.State
  - Global.LizardVoice.Emotion
  - Global.LocalizationTranslator.TranslationProcess
  - Global.MirosBirdAI.Behavior
  - Global.MouseAI.Behavior
  - Global.MultiplayerUnlocks.LevelUnlockID
  - Global.MultiplayerUnlocks.SafariUnlockID
  - Global.MultiplayerUnlocks.SandboxUnlockID
  - Global.MultiplayerUnlocks.SlugcatUnlockID
  - Global.NSHSwarmer.Shape.ShapeType
  - Global.NeedleWormAI.Behavior
  - Global.NodeFinder.Status
  - Global.OddJobAIModule.Tag
  - Global.Options.ControlSetup.Preset
  - Global.Options.JollyCameraInputSpeed
  - Global.Options.JollyColorMode
  - Global.Options.JollyDifficulty
  - Global.Options.Quality
  - Global.Oracle.OracleID
  - Global.OverWorld.SpecialWarpType
  - Global.Overseer.Mode
  - Global.OverseerCommunicationModule.PlayerConcern
  - Global.PhysicalObject.BodyChunkConnection.Type
  - Global.PlacedObject.EnergySwirlData.ColorType
  - Global.PlacedObject.FairyParticleData.SpriteType
  - Global.PlacedObject.LightFixtureData.Type
  - Global.PlacedObject.LightSourceData.BlinkType
  - Global.PlacedObject.LightSourceData.ColorType
  - Global.PlacedObject.MultiplayerItemData.Type
  - Global.PlacedObject.SnowSourceData.Shape
  - Global.PlacedObject.Type
  - Global.PlacedObject.WindData.AffectGroup
  - Global.Player.AnimationIndex
  - Global.Player.BlackListReason
  - Global.Player.BodyModeIndex
  - Global.Player.Tongue.Mode
  - Global.PlayerGraphics.AxolotlGills.SpritesOverlap
  - Global.ProcessManager.MenuSetup.StoryGameInitCondition
  - Global.ProcessManager.ProcessID
  - Global.RegionGate.GateRequirement
  - Global.RegionGate.Mode
  - Global.RegionGateGraphics.Clamp.Mode
  - Global.ReliableIggyDirection.ReliableIggyDirectionData.Condition
  - Global.ReliableIggyDirection.ReliableIggyDirectionData.Symbol
  - Global.Room.RippleSpawnSource
  - Global.Room.SlopeDirection
  - Global.RoomCamera.CameraCutsceneType
  - Global.RoomPalette.ColorName
  - Global.RoomRain.DangerType
  - Global.RoomSettings.RoomEffect.Type
  - Global.SLOracleBehavior.MovementBehavior
  - Global.SLOracleBehaviorHasMark.MiscItemType
  - Global.SLOracleBehaviorHasMark.PauseReason
  - Global.SLOracleWakeUpProcedure.Phase
  - Global.SLOrcacleState.PlayerOpinion
  - Global.SSOracleBehavior.Action
  - Global.SSOracleBehavior.MovementBehavior
  - Global.SSOracleBehavior.SubBehavior.SubBehavID
  - Global.SSOracleSwarmer.MovementMode
  - Global.Scavenger.MovementMode
  - Global.Scavenger.ScavengerAnimation.ID
  - Global.ScavengerAI.Behavior
  - Global.ScavengerAI.ViolenceType
  - Global.ScavengerAbstractAI.ScavengerSquad.MissionID
  - Global.ShelterDoor.Clamp.Mode
  - Global.ShortcutData.Type
  - Global.SkyWhaleAI.Behavior
  - Global.SlugcatStats.Name
  - Global.SlugcatStats.Timeline
  - Global.SocialEventRecognizer.EventID
  - Global.SoundID
  - Global.SporePlant.Bee.Mode
  - Global.StationaryEffect.EffectType
  - Global.StopMusicEvent.Type
  - Global.TileVisualizer.vizType
  - Global.TriggeredEvent.EventType
  - Global.TubeWorm.Tongue.Mode
  - Global.VoidSpawn.SpawnType
  - Global.VultureAI.Behavior
  - Global.VultureMask.MaskType
  - Global.VultureTentacle.Mode
  - Global.Weapon.Mode
  - Global.WinState.EndgameID
  - Global.WorldLoader.Activity
  - Global.WorldLoader.LoadingContext
  - Global.YellowAI.YellowPack.Role
  - HUD.HUD.OwnerType
  - HUD.HUDCircle.SnapToGraphic
  - HUD.Map.MapType
  - HUD.TextPrompt.InfoID
  - JollyCoop.JollyEnums.JollyManualPages
  - LizardCosmetics.Template.SpritesOverlap
  - Menu.ArenaOverlay.Phase
  - Menu.EndCredits.Stage
  - Menu.KarmaLadder.Phase
  - Menu.Menu.MenuColors
  - Menu.MenuDepthIllustration.MenuShader
  - Menu.MenuIllustration.CrossfadeType
  - Menu.MenuScene.SceneID
  - Menu.MultiplayerResults.Phase
  - Menu.SandboxEditorSelector.ActionButton.Action
  - Menu.ScoreCalculatorPhase
  - Menu.SlideShow.SlideShowID
  - Menu.Slider.SliderID
  - Menu.StoryGameStatisticsScreen.TickMode
  - Menu.StoryGameStatisticsScreen.TickerID
  - MoreSlugcats.AncientBot.Animation
  - MoreSlugcats.AncientBot.FollowMode
  - MoreSlugcats.ChallengeInformation.ChallengeMeta.WinCondition
  - MoreSlugcats.ChatlogData.ChatlogID
  - MoreSlugcats.CollectionsMenu.PearlReadContext
  - MoreSlugcats.CollisionField.Type
  - MoreSlugcats.CutsceneArtificer.Phase
  - MoreSlugcats.CutsceneArtificerRobo.Phase
  - MoreSlugcats.FairyParticle.LerpMethod
  - MoreSlugcats.InspectorAI.Behavior
  - MoreSlugcats.STOracleBehavior.Laser.Type
  - MoreSlugcats.STOracleBehavior.Phase
  - MoreSlugcats.STOracleBehavior.SimpleDan.DestroyType
  - MoreSlugcats.SlugNPCAI.BehaviorType
  - MoreSlugcats.SlugNPCAI.Food
  - MoreSlugcats.StowawayBugAI.Behavior
  - MoreSlugcats.YeekAI.Behavior
  - MoreSlugcats.YeekGraphics.YeekLeg.AnimState
  - Music.MusicPlayer.MusicContext
  - OverseerHolograms.GateScene.SceneID
  - OverseerHolograms.GateScene.SubScene.GateSceneActor.ActorID
  - OverseerHolograms.GateScene.SubScene.SubSceneID
  - OverseerHolograms.OverseerHologram.Message
  - OverseerHolograms.OverseerImage.ImageID
  - ScavTradeInstruction.ScavTradeInputInstructionController.Phase
  - ScavengerCosmetic.BackDecals.Pattern
  - Smoke.SmokeSystem.SmokeType
  - VoidSea.VoidSeaScene.DeepDivePhase
  - VoidSea.VoidSeaScene.SaintEndingPhase
  - VoidSea.VoidWorm.MainWormBehavior.Phase
  - Watcher.BarnacleAI.Behavior
  - Watcher.BarnacleAI.SubBehavior
  - Watcher.BigMoth.BigMothState.TagOwner
  - Watcher.BigMoth.MothWingPair.Mode
  - Watcher.BigMothAI.Behavior
  - Watcher.BoxWormAI.Behavior
  - Watcher.DrillCrab.Leg.Mode
  - Watcher.DrillCrabAI.Behavior
  - Watcher.FireSpriteAI.Behavior
  - Watcher.FlameJet.ActiveDuring
  - Watcher.FlameJet.Animation
  - Watcher.FrogAI.Behavior
  - Watcher.LoachAI.Behavior
  - Watcher.LoachTentacle.Task
  - Watcher.PrinceBehavior.Pose
  - Watcher.RatAI.Behavior
  - Watcher.Rattler.Arm.Task
  - Watcher.SandGrubAI.Behavior
  - Watcher.TardigradeAI.Behavior
  - Watcher.TardigradeCosmetics.Template.SpritesOverlap
  - Watcher.UrbanShadow.PuppetPart.Type
  - Watcher.WallLight.ActiveDuring
  - Watcher.WallLight.ShadowType
  - Watcher.WarpPoint.SoundMode
  - Watcher.WarpPoint.WarpPointData.WarpPointSpawnCondition
  - Watcher.WatcherRoomSpecificScript.HI_W14.Phase
  implements:
  - System.IComparable
  - System.IEquatable{{T}}
  inheritedMembers:
  - Global.ExtEnumBase.value
  - Global.ExtEnumBase.valueHash
  - Global.ExtEnumBase.index
  - Global.ExtEnumBase.localVersion
  - Global.ExtEnumBase.enumType
  - Global.ExtEnumBase.valueDictionary
  - Global.ExtEnumBase.ToString
  - Global.ExtEnumBase.CompareTo(System.Object)
  - Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  - Global.ExtEnumBase.GetExtEnumType(System.Type)
  - Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  - Global.ExtEnumBase.GetNames(System.Type)
  - Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  - Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ExtEnum(Of T)
  fullName.vb: ExtEnum(Of T)
  name.vb: ExtEnum(Of T)
- uid: Global.ExtEnum`1.values
  commentId: F:Global.ExtEnum`1.values
  id: values
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: values
  nameWithType: ExtEnum<T>.values
  fullName: ExtEnum<T>.values
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ExtEnum`1.values</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ExtEnumType values
    return:
      type: Global.ExtEnumType
    content.vb: Public Shared values As ExtEnumType
  nameWithType.vb: ExtEnum(Of T).values
  fullName.vb: ExtEnum(Of T).values
- uid: Global.ExtEnum`1.#ctor(System.String,System.Boolean)
  commentId: M:Global.ExtEnum`1.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: ExtEnum(string, bool)
  nameWithType: ExtEnum<T>.ExtEnum(string, bool)
  fullName: ExtEnum<T>.ExtEnum(string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ExtEnum`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ExtEnum(string value, bool register = false)
    parameters:
    - id: value
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ExtEnum`1.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: register
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>register</parameter>
            <parameter>M:ExtEnum`1.#ctor(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(value As String, register As Boolean = False)
  overload: Global.ExtEnum`1.#ctor*
  nameWithType.vb: ExtEnum(Of T).New(String, Boolean)
  fullName.vb: ExtEnum(Of T).New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: Global.ExtEnum`1.#ctor
  commentId: M:Global.ExtEnum`1.#ctor
  id: '#ctor'
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: ExtEnum()
  nameWithType: ExtEnum<T>.ExtEnum()
  fullName: ExtEnum<T>.ExtEnum()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ExtEnum`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected ExtEnum()
    content.vb: Protected Sub New()
  overload: Global.ExtEnum`1.#ctor*
  nameWithType.vb: ExtEnum(Of T).New()
  fullName.vb: ExtEnum(Of T).New()
  name.vb: New()
- uid: Global.ExtEnum`1.Equals(System.Object)
  commentId: M:Global.ExtEnum`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: ExtEnum<T>.Equals(object)
  fullName: ExtEnum<T>.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:ExtEnum`1.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Global.ExtEnum`1.Equals*
  nameWithType.vb: ExtEnum(Of T).Equals(Object)
  fullName.vb: ExtEnum(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: Global.ExtEnum`1.Equals(ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.Equals(ExtEnum{`0})
  id: Equals(ExtEnum{`0})
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: Equals(ExtEnum<T>)
  nameWithType: ExtEnum<T>.Equals(ExtEnum<T>)
  fullName: ExtEnum<T>.Equals(ExtEnum<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.Equals(ExtEnum{`0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(ExtEnum<T> other)
    parameters:
    - id: other
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:ExtEnum`1.Equals(ExtEnum{`0})</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.Equals(ExtEnum{`0})</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(other As ExtEnum(Of T)) As Boolean
  overload: Global.ExtEnum`1.Equals*
  nameWithType.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).Equals(ExtEnum(Of T))
  name.vb: Equals(ExtEnum(Of T))
- uid: Global.ExtEnum`1.Equals(`0)
  commentId: M:Global.ExtEnum`1.Equals(`0)
  id: Equals(`0)
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: Equals(T)
  nameWithType: ExtEnum<T>.Equals(T)
  fullName: ExtEnum<T>.Equals(T)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.Equals(`0)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(T other)
    parameters:
    - id: other
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:ExtEnum`1.Equals(`0)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.Equals(`0)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(other As T) As Boolean
  overload: Global.ExtEnum`1.Equals*
  implements:
  - System.IEquatable{{T}}.Equals({T})
  nameWithType.vb: ExtEnum(Of T).Equals(T)
  fullName.vb: ExtEnum(Of T).Equals(T)
- uid: Global.ExtEnum`1.GetHashCode
  commentId: M:Global.ExtEnum`1.GetHashCode
  id: GetHashCode
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: ExtEnum<T>.GetHashCode()
  fullName: ExtEnum<T>.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.Object.GetHashCode
  overload: Global.ExtEnum`1.GetHashCode*
  nameWithType.vb: ExtEnum(Of T).GetHashCode()
  fullName.vb: ExtEnum(Of T).GetHashCode()
- uid: Global.ExtEnum`1.Unregister
  commentId: M:Global.ExtEnum`1.Unregister
  id: Unregister
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: Unregister()
  nameWithType: ExtEnum<T>.Unregister()
  fullName: ExtEnum<T>.Unregister()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.Unregister</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Unregister()
    content.vb: Public Sub Unregister()
  overload: Global.ExtEnum`1.Unregister*
  nameWithType.vb: ExtEnum(Of T).Unregister()
  fullName.vb: ExtEnum(Of T).Unregister()
- uid: Global.ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})
  id: op_Equality(ExtEnum{`0},ExtEnum{`0})
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: operator ==(ExtEnum<T>, ExtEnum<T>)
  nameWithType: ExtEnum<T>.operator ==(ExtEnum<T>, ExtEnum<T>)
  fullName: ExtEnum<T>.operator ==(ExtEnum<T>, ExtEnum<T>)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(ExtEnum<T> a, ExtEnum<T> b)
    parameters:
    - id: a
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    - id: b
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.op_Equality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(a As ExtEnum(Of T), b As ExtEnum(Of T)) As Boolean
  overload: Global.ExtEnum`1.op_Equality*
  nameWithType.vb: ExtEnum(Of T).=(ExtEnum(Of T), ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).=(ExtEnum(Of T), ExtEnum(Of T))
  name.vb: =(ExtEnum(Of T), ExtEnum(Of T))
- uid: Global.ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})
  commentId: M:Global.ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})
  id: op_Inequality(ExtEnum{`0},ExtEnum{`0})
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: operator !=(ExtEnum<T>, ExtEnum<T>)
  nameWithType: ExtEnum<T>.operator !=(ExtEnum<T>, ExtEnum<T>)
  fullName: ExtEnum<T>.operator !=(ExtEnum<T>, ExtEnum<T>)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(ExtEnum<T> a, ExtEnum<T> b)
    parameters:
    - id: a
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    - id: b
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.op_Inequality(ExtEnum{`0},ExtEnum{`0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(a As ExtEnum(Of T), b As ExtEnum(Of T)) As Boolean
  overload: Global.ExtEnum`1.op_Inequality*
  nameWithType.vb: ExtEnum(Of T).<>(ExtEnum(Of T), ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).<>(ExtEnum(Of T), ExtEnum(Of T))
  name.vb: <>(ExtEnum(Of T), ExtEnum(Of T))
- uid: Global.ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32
  commentId: M:Global.ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32
  id: op_Explicit(ExtEnum{`0})~System.Int32
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: explicit operator int(ExtEnum<T>)
  nameWithType: ExtEnum<T>.explicit operator int(ExtEnum<T>)
  fullName: ExtEnum<T>.explicit operator int(ExtEnum<T>)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static explicit operator int(ExtEnum<T> a)
    parameters:
    - id: a
      type: Global.ExtEnum`1
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnum`1.op_Explicit(ExtEnum{`0})~System.Int32</parameter>
          </include>
        </markup>
    content.vb: Public Shared Narrowing Operator CType(a As ExtEnum(Of T)) As Integer
  overload: Global.ExtEnum`1.op_Explicit*
  nameWithType.vb: ExtEnum(Of T).CType(ExtEnum(Of T))
  fullName.vb: ExtEnum(Of T).CType(ExtEnum(Of T))
  name.vb: CType(ExtEnum(Of T))
- uid: Global.ExtEnum`1.valuesVersion
  commentId: P:Global.ExtEnum`1.valuesVersion
  id: valuesVersion
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: valuesVersion
  nameWithType: ExtEnum<T>.valuesVersion
  fullName: ExtEnum<T>.valuesVersion
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ExtEnum`1.valuesVersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int valuesVersion { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared Property valuesVersion As Integer
  overload: Global.ExtEnum`1.valuesVersion*
  nameWithType.vb: ExtEnum(Of T).valuesVersion
  fullName.vb: ExtEnum(Of T).valuesVersion
- uid: Global.ExtEnum`1.Index
  commentId: P:Global.ExtEnum`1.Index
  id: Index
  parent: Global.ExtEnum`1
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: ExtEnum<T>.Index
  fullName: ExtEnum<T>.Index
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ExtEnum`1.Index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int Index { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overrides ReadOnly Property Index As Integer
  overridden: Global.ExtEnumBase.Index
  overload: Global.ExtEnum`1.Index*
  nameWithType.vb: ExtEnum(Of T).Index
  fullName.vb: ExtEnum(Of T).Index
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ExtEnumBase
  commentId: T:Global.ExtEnumBase
  isExternal: true
  href: ExtEnumBase.html
  name: ExtEnumBase
  nameWithType: ExtEnumBase
  fullName: ExtEnumBase
- uid: System.IComparable
  commentId: T:System.IComparable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.icomparable
  name: IComparable
  nameWithType: IComparable
  fullName: System.IComparable
- uid: System.IEquatable{{T}}
  commentId: T:System.IEquatable{`0}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ExtEnumBase.value
  commentId: F:Global.ExtEnumBase.value
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_value
  name: value
  nameWithType: ExtEnumBase.value
  fullName: ExtEnumBase.value
- uid: Global.ExtEnumBase.valueHash
  commentId: F:Global.ExtEnumBase.valueHash
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueHash
  name: valueHash
  nameWithType: ExtEnumBase.valueHash
  fullName: ExtEnumBase.valueHash
- uid: Global.ExtEnumBase.index
  commentId: F:Global.ExtEnumBase.index
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_index
  name: index
  nameWithType: ExtEnumBase.index
  fullName: ExtEnumBase.index
- uid: Global.ExtEnumBase.localVersion
  commentId: F:Global.ExtEnumBase.localVersion
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_localVersion
  name: localVersion
  nameWithType: ExtEnumBase.localVersion
  fullName: ExtEnumBase.localVersion
- uid: Global.ExtEnumBase.enumType
  commentId: F:Global.ExtEnumBase.enumType
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_enumType
  name: enumType
  nameWithType: ExtEnumBase.enumType
  fullName: ExtEnumBase.enumType
- uid: Global.ExtEnumBase.valueDictionary
  commentId: F:Global.ExtEnumBase.valueDictionary
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_valueDictionary
  name: valueDictionary
  nameWithType: ExtEnumBase.valueDictionary
  fullName: ExtEnumBase.valueDictionary
- uid: Global.ExtEnumBase.ToString
  commentId: M:Global.ExtEnumBase.ToString
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  name: ToString()
  nameWithType: ExtEnumBase.ToString()
  fullName: ExtEnumBase.ToString()
  spec.csharp:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.ToString
    name: ToString
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_ToString
  - name: (
  - name: )
- uid: Global.ExtEnumBase.CompareTo(System.Object)
  commentId: M:Global.ExtEnumBase.CompareTo(System.Object)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  name: CompareTo(object)
  nameWithType: ExtEnumBase.CompareTo(object)
  fullName: ExtEnumBase.CompareTo(object)
  nameWithType.vb: ExtEnumBase.CompareTo(Object)
  fullName.vb: ExtEnumBase.CompareTo(Object)
  name.vb: CompareTo(Object)
  spec.csharp:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.CompareTo(System.Object)
    name: CompareTo
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_CompareTo_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  name: Parse(Type, string, bool)
  nameWithType: ExtEnumBase.Parse(Type, string, bool)
  fullName: ExtEnumBase.Parse(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.Parse(Type, String, Boolean)
  fullName.vb: ExtEnumBase.Parse(System.Type, String, Boolean)
  name.vb: Parse(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.Parse(System.Type,System.String,System.Boolean)
    name: Parse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_Parse_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  commentId: M:Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  name: TryParse(Type, string, bool, out ExtEnumBase)
  nameWithType: ExtEnumBase.TryParse(Type, string, bool, out ExtEnumBase)
  fullName: ExtEnumBase.TryParse(System.Type, string, bool, out ExtEnumBase)
  nameWithType.vb: ExtEnumBase.TryParse(Type, String, Boolean, ExtEnumBase)
  fullName.vb: ExtEnumBase.TryParse(System.Type, String, Boolean, ExtEnumBase)
  name.vb: TryParse(Type, String, Boolean, ExtEnumBase)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryParse(System.Type,System.String,System.Boolean,ExtEnumBase@)
    name: TryParse
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryParse_System_Type_System_String_System_Boolean_ExtEnumBase__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: Global.ExtEnumBase
    name: ExtEnumBase
    isExternal: true
    href: ExtEnumBase.html
  - name: )
- uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
  commentId: M:Global.ExtEnumBase.GetExtEnumType(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  name: GetExtEnumType(Type)
  nameWithType: ExtEnumBase.GetExtEnumType(Type)
  fullName: ExtEnumBase.GetExtEnumType(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetExtEnumType(System.Type)
    name: GetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetExtEnumType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  commentId: M:Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  name: TryGetExtEnumType(Type, out ExtEnumType)
  nameWithType: ExtEnumBase.TryGetExtEnumType(Type, out ExtEnumType)
  fullName: ExtEnumBase.TryGetExtEnumType(System.Type, out ExtEnumType)
  nameWithType.vb: ExtEnumBase.TryGetExtEnumType(Type, ExtEnumType)
  fullName.vb: ExtEnumBase.TryGetExtEnumType(System.Type, ExtEnumType)
  name.vb: TryGetExtEnumType(Type, ExtEnumType)
  spec.csharp:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.TryGetExtEnumType(System.Type,ExtEnumType@)
    name: TryGetExtEnumType
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_TryGetExtEnumType_System_Type_ExtEnumType__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Global.ExtEnumType
    name: ExtEnumType
    isExternal: true
    href: ExtEnumType.html
  - name: )
- uid: Global.ExtEnumBase.GetNames(System.Type)
  commentId: M:Global.ExtEnumBase.GetNames(System.Type)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  name: GetNames(Type)
  nameWithType: ExtEnumBase.GetNames(Type)
  fullName: ExtEnumBase.GetNames(System.Type)
  spec.csharp:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.GetNames(System.Type)
    name: GetNames
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_GetNames_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  name: IsDefined(Type, string, bool)
  nameWithType: ExtEnumBase.IsDefined(Type, string, bool)
  fullName: ExtEnumBase.IsDefined(System.Type, string, bool)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, String, Boolean)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, String, Boolean)
  name.vb: IsDefined(Type, String, Boolean)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.String,System.Boolean)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_String_System_Boolean_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  commentId: M:Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  name: IsDefined(Type, int)
  nameWithType: ExtEnumBase.IsDefined(Type, int)
  fullName: ExtEnumBase.IsDefined(System.Type, int)
  nameWithType.vb: ExtEnumBase.IsDefined(Type, Integer)
  fullName.vb: ExtEnumBase.IsDefined(System.Type, Integer)
  name.vb: IsDefined(Type, Integer)
  spec.csharp:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.ExtEnumBase.IsDefined(System.Type,System.Int32)
    name: IsDefined
    isExternal: true
    href: Global.ExtEnumBase.html#ExtEnumBase_IsDefined_System_Type_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ExtEnumType
  commentId: T:Global.ExtEnumType
  isExternal: true
  href: ExtEnumType.html
  name: ExtEnumType
  nameWithType: ExtEnumType
  fullName: ExtEnumType
- uid: Global.ExtEnum`1.#ctor*
  commentId: Overload:Global.ExtEnum`1.#ctor
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1__ctor_System_String_System_Boolean_
  name: ExtEnum
  nameWithType: ExtEnum<T>.ExtEnum
  fullName: ExtEnum<T>.ExtEnum
  nameWithType.vb: ExtEnum(Of T).New
  fullName.vb: ExtEnum(Of T).New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ExtEnum`1.Equals*
  commentId: Overload:Global.ExtEnum`1.Equals
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Equals_System_Object_
  name: Equals
  nameWithType: ExtEnum<T>.Equals
  fullName: ExtEnum<T>.Equals
  nameWithType.vb: ExtEnum(Of T).Equals
  fullName.vb: ExtEnum(Of T).Equals
- uid: Global.ExtEnum`1
  commentId: T:Global.ExtEnum`1
  isExternal: true
  href: ExtEnum-1.html
  name: ExtEnum<T>
  nameWithType: ExtEnum<T>
  fullName: ExtEnum<T>
  nameWithType.vb: ExtEnum(Of T)
  fullName.vb: ExtEnum(Of T)
  name.vb: ExtEnum(Of T)
  spec.csharp:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.ExtEnum`1
    name: ExtEnum
    isExternal: true
    href: ExtEnum-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable{{T}}.Equals({T})
  commentId: M:System.IEquatable{`0}.Equals(`0)
  parent: System.IEquatable{{T}}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable{`0}.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable{`0}.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: Global.ExtEnum`1.GetHashCode*
  commentId: Overload:Global.ExtEnum`1.GetHashCode
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_GetHashCode
  name: GetHashCode
  nameWithType: ExtEnum<T>.GetHashCode
  fullName: ExtEnum<T>.GetHashCode
  nameWithType.vb: ExtEnum(Of T).GetHashCode
  fullName.vb: ExtEnum(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ExtEnum`1.Unregister*
  commentId: Overload:Global.ExtEnum`1.Unregister
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Unregister
  name: Unregister
  nameWithType: ExtEnum<T>.Unregister
  fullName: ExtEnum<T>.Unregister
  nameWithType.vb: ExtEnum(Of T).Unregister
  fullName.vb: ExtEnum(Of T).Unregister
- uid: Global.ExtEnum`1.op_Equality*
  commentId: Overload:Global.ExtEnum`1.op_Equality
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_op_Equality_ExtEnum__0__ExtEnum__0__
  name: operator ==
  nameWithType: ExtEnum<T>.operator ==
  fullName: ExtEnum<T>.operator ==
  nameWithType.vb: ExtEnum(Of T).=
  fullName.vb: ExtEnum(Of T).=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.ExtEnum`1.op_Equality*
    name: ==
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_op_Equality_ExtEnum__0__ExtEnum__0__
- uid: Global.ExtEnum`1.op_Inequality*
  commentId: Overload:Global.ExtEnum`1.op_Inequality
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_op_Inequality_ExtEnum__0__ExtEnum__0__
  name: operator !=
  nameWithType: ExtEnum<T>.operator !=
  fullName: ExtEnum<T>.operator !=
  nameWithType.vb: ExtEnum(Of T).<>
  fullName.vb: ExtEnum(Of T).<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.ExtEnum`1.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.ExtEnum-1.html#ExtEnum_1_op_Inequality_ExtEnum__0__ExtEnum__0__
- uid: Global.ExtEnum`1.op_Explicit*
  commentId: Overload:Global.ExtEnum`1.op_Explicit
  name: explicit operator
  nameWithType: ExtEnum<T>.explicit operator
  fullName: ExtEnum<T>.explicit operator
  nameWithType.vb: ExtEnum(Of T).CType
  fullName.vb: ExtEnum(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: explicit
  - name: " "
  - name: operator
- uid: Global.ExtEnum`1.valuesVersion*
  commentId: Overload:Global.ExtEnum`1.valuesVersion
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_valuesVersion
  name: valuesVersion
  nameWithType: ExtEnum<T>.valuesVersion
  fullName: ExtEnum<T>.valuesVersion
  nameWithType.vb: ExtEnum(Of T).valuesVersion
  fullName.vb: ExtEnum(Of T).valuesVersion
- uid: Global.ExtEnumBase.Index
  commentId: P:Global.ExtEnumBase.Index
  parent: Global.ExtEnumBase
  isExternal: true
  href: Global.ExtEnumBase.html#ExtEnumBase_Index
  name: Index
  nameWithType: ExtEnumBase.Index
  fullName: ExtEnumBase.Index
- uid: Global.ExtEnum`1.Index*
  commentId: Overload:Global.ExtEnum`1.Index
  isExternal: true
  href: Global.ExtEnum-1.html#ExtEnum_1_Index
  name: Index
  nameWithType: ExtEnum<T>.Index
  fullName: ExtEnum<T>.Index
  nameWithType.vb: ExtEnum(Of T).Index
  fullName.vb: ExtEnum(Of T).Index
