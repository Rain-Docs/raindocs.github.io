### YamlMime:ManagedReference
items:
- uid: Global.CreatureSymbol
  commentId: T:Global.CreatureSymbol
  id: CreatureSymbol
  parent: Global
  children:
  - Global.CreatureSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  - Global.CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)
  - Global.CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)
  - Global.CreatureSymbol.LizardSpriteName(System.String,System.Int32)
  - Global.CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)
  - Global.CreatureSymbol.SymbolDataFromCreature(AbstractCreature)
  - Global.CreatureSymbol.critType
  langs:
  - csharp
  - vb
  name: CreatureSymbol
  nameWithType: CreatureSymbol
  fullName: CreatureSymbol
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CreatureSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CreatureSymbol : IconSymbol'
    content.vb: Public Class CreatureSymbol Inherits IconSymbol
  inheritance:
  - System.Object
  - Global.IconSymbol
  inheritedMembers:
  - Global.IconSymbol.iconData
  - Global.IconSymbol.symbolSprite
  - Global.IconSymbol.shadowSprite1
  - Global.IconSymbol.shadowSprite2
  - Global.IconSymbol.myColor
  - Global.IconSymbol.graphWidth
  - Global.IconSymbol.showFlash
  - Global.IconSymbol.lastShowFlash
  - Global.IconSymbol.spriteName
  - Global.IconSymbol.Update
  - Global.IconSymbol.Show(System.Boolean)
  - Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  - Global.IconSymbol.RemoveSprites
  - Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CreatureSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.CreatureSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  id: '#ctor(IconSymbol.IconSymbolData,FContainer)'
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: CreatureSymbol(IconSymbolData, FContainer)
  nameWithType: CreatureSymbol.CreatureSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: CreatureSymbol.CreatureSymbol(IconSymbol.IconSymbolData, FContainer)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureSymbol(IconSymbol.IconSymbolData iconData, FContainer container)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:CreatureSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:CreatureSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(iconData As IconSymbol.IconSymbolData, container As FContainer)
  overload: Global.CreatureSymbol.#ctor*
  nameWithType.vb: CreatureSymbol.New(IconSymbol.IconSymbolData, FContainer)
  fullName.vb: CreatureSymbol.New(IconSymbol.IconSymbolData, FContainer)
  name.vb: New(IconSymbolData, FContainer)
- uid: Global.CreatureSymbol.SymbolDataFromCreature(AbstractCreature)
  commentId: M:Global.CreatureSymbol.SymbolDataFromCreature(AbstractCreature)
  id: SymbolDataFromCreature(AbstractCreature)
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: SymbolDataFromCreature(AbstractCreature)
  nameWithType: CreatureSymbol.SymbolDataFromCreature(AbstractCreature)
  fullName: CreatureSymbol.SymbolDataFromCreature(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureSymbol.SymbolDataFromCreature(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IconSymbol.IconSymbolData SymbolDataFromCreature(AbstractCreature creature)
    parameters:
    - id: creature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:CreatureSymbol.SymbolDataFromCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureSymbol.SymbolDataFromCreature(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SymbolDataFromCreature(creature As AbstractCreature) As IconSymbol.IconSymbolData
  overload: Global.CreatureSymbol.SymbolDataFromCreature*
- uid: Global.CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)
  commentId: M:Global.CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)
  id: DoesCreatureEarnATrophy(CreatureTemplate.Type)
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: DoesCreatureEarnATrophy(Type)
  nameWithType: CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)
  fullName: CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool DoesCreatureEarnATrophy(CreatureTemplate.Type creature)
    parameters:
    - id: creature
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureSymbol.DoesCreatureEarnATrophy(CreatureTemplate.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function DoesCreatureEarnATrophy(creature As CreatureTemplate.Type) As Boolean
  overload: Global.CreatureSymbol.DoesCreatureEarnATrophy*
- uid: Global.CreatureSymbol.LizardSpriteName(System.String,System.Int32)
  commentId: M:Global.CreatureSymbol.LizardSpriteName(System.String,System.Int32)
  id: LizardSpriteName(System.String,System.Int32)
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: LizardSpriteName(string, int)
  nameWithType: CreatureSymbol.LizardSpriteName(string, int)
  fullName: CreatureSymbol.LizardSpriteName(string, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureSymbol.LizardSpriteName(System.String,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string LizardSpriteName(string defaultSpriteName, int intData)
    parameters:
    - id: defaultSpriteName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultSpriteName</parameter>
            <parameter>M:CreatureSymbol.LizardSpriteName(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: intData
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intData</parameter>
            <parameter>M:CreatureSymbol.LizardSpriteName(System.String,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureSymbol.LizardSpriteName(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LizardSpriteName(defaultSpriteName As String, intData As Integer) As String
  overload: Global.CreatureSymbol.LizardSpriteName*
  nameWithType.vb: CreatureSymbol.LizardSpriteName(String, Integer)
  fullName.vb: CreatureSymbol.LizardSpriteName(String, Integer)
  name.vb: LizardSpriteName(String, Integer)
- uid: Global.CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)
  commentId: M:Global.CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)
  id: SpriteNameOfCreature(IconSymbol.IconSymbolData)
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: SpriteNameOfCreature(IconSymbolData)
  nameWithType: CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)
  fullName: CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SpriteNameOfCreature(IconSymbol.IconSymbolData iconData)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureSymbol.SpriteNameOfCreature(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpriteNameOfCreature(iconData As IconSymbol.IconSymbolData) As String
  overload: Global.CreatureSymbol.SpriteNameOfCreature*
- uid: Global.CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)
  commentId: M:Global.CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)
  id: ColorOfCreature(IconSymbol.IconSymbolData)
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: ColorOfCreature(IconSymbolData)
  nameWithType: CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)
  fullName: CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorOfCreature(IconSymbol.IconSymbolData iconData)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureSymbol.ColorOfCreature(IconSymbol.IconSymbolData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorOfCreature(iconData As IconSymbol.IconSymbolData) As Color
  overload: Global.CreatureSymbol.ColorOfCreature*
- uid: Global.CreatureSymbol.critType
  commentId: P:Global.CreatureSymbol.critType
  id: critType
  parent: Global.CreatureSymbol
  langs:
  - csharp
  - vb
  name: critType
  nameWithType: CreatureSymbol.critType
  fullName: CreatureSymbol.critType
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureSymbol.critType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Type critType { get; }
    parameters: []
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public ReadOnly Property critType As CreatureTemplate.Type
  overload: Global.CreatureSymbol.critType*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IconSymbol
  commentId: T:Global.IconSymbol
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol
  nameWithType: IconSymbol
  fullName: IconSymbol
- uid: Global.IconSymbol.iconData
  commentId: F:Global.IconSymbol.iconData
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_iconData
  name: iconData
  nameWithType: IconSymbol.iconData
  fullName: IconSymbol.iconData
- uid: Global.IconSymbol.symbolSprite
  commentId: F:Global.IconSymbol.symbolSprite
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_symbolSprite
  name: symbolSprite
  nameWithType: IconSymbol.symbolSprite
  fullName: IconSymbol.symbolSprite
- uid: Global.IconSymbol.shadowSprite1
  commentId: F:Global.IconSymbol.shadowSprite1
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_shadowSprite1
  name: shadowSprite1
  nameWithType: IconSymbol.shadowSprite1
  fullName: IconSymbol.shadowSprite1
- uid: Global.IconSymbol.shadowSprite2
  commentId: F:Global.IconSymbol.shadowSprite2
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_shadowSprite2
  name: shadowSprite2
  nameWithType: IconSymbol.shadowSprite2
  fullName: IconSymbol.shadowSprite2
- uid: Global.IconSymbol.myColor
  commentId: F:Global.IconSymbol.myColor
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_myColor
  name: myColor
  nameWithType: IconSymbol.myColor
  fullName: IconSymbol.myColor
- uid: Global.IconSymbol.graphWidth
  commentId: F:Global.IconSymbol.graphWidth
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_graphWidth
  name: graphWidth
  nameWithType: IconSymbol.graphWidth
  fullName: IconSymbol.graphWidth
- uid: Global.IconSymbol.showFlash
  commentId: F:Global.IconSymbol.showFlash
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_showFlash
  name: showFlash
  nameWithType: IconSymbol.showFlash
  fullName: IconSymbol.showFlash
- uid: Global.IconSymbol.lastShowFlash
  commentId: F:Global.IconSymbol.lastShowFlash
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_lastShowFlash
  name: lastShowFlash
  nameWithType: IconSymbol.lastShowFlash
  fullName: IconSymbol.lastShowFlash
- uid: Global.IconSymbol.spriteName
  commentId: F:Global.IconSymbol.spriteName
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_spriteName
  name: spriteName
  nameWithType: IconSymbol.spriteName
  fullName: IconSymbol.spriteName
- uid: Global.IconSymbol.Update
  commentId: M:Global.IconSymbol.Update
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Update
  name: Update()
  nameWithType: IconSymbol.Update()
  fullName: IconSymbol.Update()
  spec.csharp:
  - uid: Global.IconSymbol.Update
    name: Update
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Update
    name: Update
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Update
  - name: (
  - name: )
- uid: Global.IconSymbol.Show(System.Boolean)
  commentId: M:Global.IconSymbol.Show(System.Boolean)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  name: Show(bool)
  nameWithType: IconSymbol.Show(bool)
  fullName: IconSymbol.Show(bool)
  nameWithType.vb: IconSymbol.Show(Boolean)
  fullName.vb: IconSymbol.Show(Boolean)
  name.vb: Show(Boolean)
  spec.csharp:
  - uid: Global.IconSymbol.Show(System.Boolean)
    name: Show
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Show(System.Boolean)
    name: Show
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  commentId: M:Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  name: Draw(float, Vector2)
  nameWithType: IconSymbol.Draw(float, Vector2)
  fullName: IconSymbol.Draw(float, UnityEngine.Vector2)
  nameWithType.vb: IconSymbol.Draw(Single, Vector2)
  fullName.vb: IconSymbol.Draw(Single, UnityEngine.Vector2)
  name.vb: Draw(Single, Vector2)
  spec.csharp:
  - uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
    name: Draw
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
    name: Draw
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IconSymbol.RemoveSprites
  commentId: M:Global.IconSymbol.RemoveSprites
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  name: RemoveSprites()
  nameWithType: IconSymbol.RemoveSprites()
  fullName: IconSymbol.RemoveSprites()
  spec.csharp:
  - uid: Global.IconSymbol.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  - name: (
  - name: )
- uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  name: CreateIconSymbol(IconSymbolData, FContainer)
  nameWithType: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  spec.csharp:
  - uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
    name: CreateIconSymbol
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  - name: (
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
    name: CreateIconSymbol
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  - name: (
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureSymbol.#ctor*
  commentId: Overload:Global.CreatureSymbol.#ctor
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol__ctor_IconSymbol_IconSymbolData_FContainer_
  name: CreatureSymbol
  nameWithType: CreatureSymbol.CreatureSymbol
  fullName: CreatureSymbol.CreatureSymbol
  nameWithType.vb: CreatureSymbol.New
  fullName.vb: CreatureSymbol.New
  name.vb: New
- uid: Global.IconSymbol.IconSymbolData
  commentId: T:Global.IconSymbol.IconSymbolData
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol.IconSymbolData
  nameWithType: IconSymbol.IconSymbolData
  fullName: IconSymbol.IconSymbolData
  spec.csharp:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  spec.vb:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.CreatureSymbol.SymbolDataFromCreature*
  commentId: Overload:Global.CreatureSymbol.SymbolDataFromCreature
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_SymbolDataFromCreature_AbstractCreature_
  name: SymbolDataFromCreature
  nameWithType: CreatureSymbol.SymbolDataFromCreature
  fullName: CreatureSymbol.SymbolDataFromCreature
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.CreatureSymbol.DoesCreatureEarnATrophy*
  commentId: Overload:Global.CreatureSymbol.DoesCreatureEarnATrophy
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_DoesCreatureEarnATrophy_CreatureTemplate_Type_
  name: DoesCreatureEarnATrophy
  nameWithType: CreatureSymbol.DoesCreatureEarnATrophy
  fullName: CreatureSymbol.DoesCreatureEarnATrophy
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.CreatureSymbol.LizardSpriteName*
  commentId: Overload:Global.CreatureSymbol.LizardSpriteName
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_LizardSpriteName_System_String_System_Int32_
  name: LizardSpriteName
  nameWithType: CreatureSymbol.LizardSpriteName
  fullName: CreatureSymbol.LizardSpriteName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CreatureSymbol.SpriteNameOfCreature*
  commentId: Overload:Global.CreatureSymbol.SpriteNameOfCreature
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_SpriteNameOfCreature_IconSymbol_IconSymbolData_
  name: SpriteNameOfCreature
  nameWithType: CreatureSymbol.SpriteNameOfCreature
  fullName: CreatureSymbol.SpriteNameOfCreature
- uid: Global.CreatureSymbol.ColorOfCreature*
  commentId: Overload:Global.CreatureSymbol.ColorOfCreature
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_ColorOfCreature_IconSymbol_IconSymbolData_
  name: ColorOfCreature
  nameWithType: CreatureSymbol.ColorOfCreature
  fullName: CreatureSymbol.ColorOfCreature
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.CreatureSymbol.critType*
  commentId: Overload:Global.CreatureSymbol.critType
  isExternal: true
  href: Global.CreatureSymbol.html#CreatureSymbol_critType
  name: critType
  nameWithType: CreatureSymbol.critType
  fullName: CreatureSymbol.critType
