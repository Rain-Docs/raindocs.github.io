### YamlMime:ManagedReference
items:
- uid: Global.CollectToken.TokenStalk
  commentId: T:Global.CollectToken.TokenStalk
  id: CollectToken.TokenStalk
  parent: Global
  children:
  - Global.CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)
  - Global.CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.CollectToken.TokenStalk.Arm1Sprite
  - Global.CollectToken.TokenStalk.Arm2Sprite
  - Global.CollectToken.TokenStalk.Arm3Sprite
  - Global.CollectToken.TokenStalk.Arm4Sprite
  - Global.CollectToken.TokenStalk.Arm5Sprite
  - Global.CollectToken.TokenStalk.ArmJointSprite
  - Global.CollectToken.TokenStalk.BaseSprite
  - Global.CollectToken.TokenStalk.CoordSprite(System.Int32)
  - Global.CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.CollectToken.TokenStalk.EyePos(System.Single)
  - Global.CollectToken.TokenStalk.HeadSprite
  - Global.CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.CollectToken.TokenStalk.LampSprite
  - Global.CollectToken.TokenStalk.SataFlasher
  - Global.CollectToken.TokenStalk.SocketSprite
  - Global.CollectToken.TokenStalk.TotalSprites
  - Global.CollectToken.TokenStalk.Update(System.Boolean)
  - Global.CollectToken.TokenStalk.alive
  - Global.CollectToken.TokenStalk.armGetToPos
  - Global.CollectToken.TokenStalk.armLength
  - Global.CollectToken.TokenStalk.armPos
  - Global.CollectToken.TokenStalk.armVel
  - Global.CollectToken.TokenStalk.basePos
  - Global.CollectToken.TokenStalk.flip
  - Global.CollectToken.TokenStalk.forceSatellite
  - Global.CollectToken.TokenStalk.head
  - Global.CollectToken.TokenStalk.headDir
  - Global.CollectToken.TokenStalk.headVel
  - Global.CollectToken.TokenStalk.hoverPos
  - Global.CollectToken.TokenStalk.lampColor
  - Global.CollectToken.TokenStalk.lastArmPos
  - Global.CollectToken.TokenStalk.lastHead
  - Global.CollectToken.TokenStalk.lastHeadDir
  - Global.CollectToken.TokenStalk.mainDir
  - Global.CollectToken.TokenStalk.sataFlasherLight
  - Global.CollectToken.TokenStalk.stalk
  - Global.CollectToken.TokenStalk.token
  langs:
  - csharp
  - vb
  name: CollectToken.TokenStalk
  nameWithType: CollectToken.TokenStalk
  fullName: CollectToken.TokenStalk
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CollectToken.TokenStalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class CollectToken.TokenStalk : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class CollectToken.TokenStalk Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CollectToken.TokenStalk.hoverPos
  commentId: F:Global.CollectToken.TokenStalk.hoverPos
  id: hoverPos
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: hoverPos
  nameWithType: CollectToken.TokenStalk.hoverPos
  fullName: CollectToken.TokenStalk.hoverPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.hoverPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 hoverPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public hoverPos As Vector2
- uid: Global.CollectToken.TokenStalk.token
  commentId: F:Global.CollectToken.TokenStalk.token
  id: token
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: token
  nameWithType: CollectToken.TokenStalk.token
  fullName: CollectToken.TokenStalk.token
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.token</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CollectToken token
    return:
      type: Global.CollectToken
    content.vb: Public token As CollectToken
- uid: Global.CollectToken.TokenStalk.stalk
  commentId: F:Global.CollectToken.TokenStalk.stalk
  id: stalk
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: stalk
  nameWithType: CollectToken.TokenStalk.stalk
  fullName: CollectToken.TokenStalk.stalk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.stalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] stalk
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public stalk As Vector2(,)
- uid: Global.CollectToken.TokenStalk.basePos
  commentId: F:Global.CollectToken.TokenStalk.basePos
  id: basePos
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: basePos
  nameWithType: CollectToken.TokenStalk.basePos
  fullName: CollectToken.TokenStalk.basePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.basePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 basePos
    return:
      type: UnityEngine.Vector2
    content.vb: Public basePos As Vector2
- uid: Global.CollectToken.TokenStalk.mainDir
  commentId: F:Global.CollectToken.TokenStalk.mainDir
  id: mainDir
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: mainDir
  nameWithType: CollectToken.TokenStalk.mainDir
  fullName: CollectToken.TokenStalk.mainDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.mainDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 mainDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public mainDir As Vector2
- uid: Global.CollectToken.TokenStalk.flip
  commentId: F:Global.CollectToken.TokenStalk.flip
  id: flip
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: flip
  nameWithType: CollectToken.TokenStalk.flip
  fullName: CollectToken.TokenStalk.flip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.flip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flip
    return:
      type: System.Single
    content.vb: Public flip As Single
- uid: Global.CollectToken.TokenStalk.armPos
  commentId: F:Global.CollectToken.TokenStalk.armPos
  id: armPos
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: armPos
  nameWithType: CollectToken.TokenStalk.armPos
  fullName: CollectToken.TokenStalk.armPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.armPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 armPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public armPos As Vector2
- uid: Global.CollectToken.TokenStalk.lastArmPos
  commentId: F:Global.CollectToken.TokenStalk.lastArmPos
  id: lastArmPos
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: lastArmPos
  nameWithType: CollectToken.TokenStalk.lastArmPos
  fullName: CollectToken.TokenStalk.lastArmPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.lastArmPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastArmPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastArmPos As Vector2
- uid: Global.CollectToken.TokenStalk.armVel
  commentId: F:Global.CollectToken.TokenStalk.armVel
  id: armVel
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: armVel
  nameWithType: CollectToken.TokenStalk.armVel
  fullName: CollectToken.TokenStalk.armVel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.armVel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 armVel
    return:
      type: UnityEngine.Vector2
    content.vb: Public armVel As Vector2
- uid: Global.CollectToken.TokenStalk.armGetToPos
  commentId: F:Global.CollectToken.TokenStalk.armGetToPos
  id: armGetToPos
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: armGetToPos
  nameWithType: CollectToken.TokenStalk.armGetToPos
  fullName: CollectToken.TokenStalk.armGetToPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.armGetToPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 armGetToPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public armGetToPos As Vector2
- uid: Global.CollectToken.TokenStalk.head
  commentId: F:Global.CollectToken.TokenStalk.head
  id: head
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: head
  nameWithType: CollectToken.TokenStalk.head
  fullName: CollectToken.TokenStalk.head
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.head</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 head
    return:
      type: UnityEngine.Vector2
    content.vb: Public head As Vector2
- uid: Global.CollectToken.TokenStalk.lastHead
  commentId: F:Global.CollectToken.TokenStalk.lastHead
  id: lastHead
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: lastHead
  nameWithType: CollectToken.TokenStalk.lastHead
  fullName: CollectToken.TokenStalk.lastHead
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.lastHead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastHead
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastHead As Vector2
- uid: Global.CollectToken.TokenStalk.headVel
  commentId: F:Global.CollectToken.TokenStalk.headVel
  id: headVel
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: headVel
  nameWithType: CollectToken.TokenStalk.headVel
  fullName: CollectToken.TokenStalk.headVel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.headVel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 headVel
    return:
      type: UnityEngine.Vector2
    content.vb: Public headVel As Vector2
- uid: Global.CollectToken.TokenStalk.headDir
  commentId: F:Global.CollectToken.TokenStalk.headDir
  id: headDir
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: headDir
  nameWithType: CollectToken.TokenStalk.headDir
  fullName: CollectToken.TokenStalk.headDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.headDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 headDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public headDir As Vector2
- uid: Global.CollectToken.TokenStalk.lastHeadDir
  commentId: F:Global.CollectToken.TokenStalk.lastHeadDir
  id: lastHeadDir
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: lastHeadDir
  nameWithType: CollectToken.TokenStalk.lastHeadDir
  fullName: CollectToken.TokenStalk.lastHeadDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.lastHeadDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastHeadDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastHeadDir As Vector2
- uid: Global.CollectToken.TokenStalk.armLength
  commentId: F:Global.CollectToken.TokenStalk.armLength
  id: armLength
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: armLength
  nameWithType: CollectToken.TokenStalk.armLength
  fullName: CollectToken.TokenStalk.armLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.armLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float armLength
    return:
      type: System.Single
    content.vb: Public armLength As Single
- uid: Global.CollectToken.TokenStalk.lampColor
  commentId: F:Global.CollectToken.TokenStalk.lampColor
  id: lampColor
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: lampColor
  nameWithType: CollectToken.TokenStalk.lampColor
  fullName: CollectToken.TokenStalk.lampColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.lampColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color lampColor
    return:
      type: UnityEngine.Color
    content.vb: Public lampColor As Color
- uid: Global.CollectToken.TokenStalk.forceSatellite
  commentId: F:Global.CollectToken.TokenStalk.forceSatellite
  id: forceSatellite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: forceSatellite
  nameWithType: CollectToken.TokenStalk.forceSatellite
  fullName: CollectToken.TokenStalk.forceSatellite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.forceSatellite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool forceSatellite
    return:
      type: System.Boolean
    content.vb: Public forceSatellite As Boolean
- uid: Global.CollectToken.TokenStalk.sataFlasherLight
  commentId: F:Global.CollectToken.TokenStalk.sataFlasherLight
  id: sataFlasherLight
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: sataFlasherLight
  nameWithType: CollectToken.TokenStalk.sataFlasherLight
  fullName: CollectToken.TokenStalk.sataFlasherLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CollectToken.TokenStalk.sataFlasherLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sataFlasherLight
    return:
      type: System.Int32
    content.vb: Public sataFlasherLight As Integer
- uid: Global.CollectToken.TokenStalk.CoordSprite(System.Int32)
  commentId: M:Global.CollectToken.TokenStalk.CoordSprite(System.Int32)
  id: CoordSprite(System.Int32)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: CoordSprite(int)
  nameWithType: CollectToken.TokenStalk.CoordSprite(int)
  fullName: CollectToken.TokenStalk.CoordSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.CoordSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CoordSprite(int s)
    parameters:
    - id: s
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:CollectToken.TokenStalk.CoordSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CollectToken.TokenStalk.CoordSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordSprite(s As Integer) As Integer
  overload: Global.CollectToken.TokenStalk.CoordSprite*
  nameWithType.vb: CollectToken.TokenStalk.CoordSprite(Integer)
  fullName.vb: CollectToken.TokenStalk.CoordSprite(Integer)
  name.vb: CoordSprite(Integer)
- uid: Global.CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)
  commentId: M:Global.CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)
  id: '#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)'
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: TokenStalk(Room, Vector2, Vector2, CollectToken, bool)
  nameWithType: CollectToken.TokenStalk.TokenStalk(Room, Vector2, Vector2, CollectToken, bool)
  fullName: CollectToken.TokenStalk.TokenStalk(Room, UnityEngine.Vector2, UnityEngine.Vector2, CollectToken, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CollectToken.TokenStalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TokenStalk(Room room, Vector2 hoverPos, Vector2 basePos, CollectToken token, bool blue)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hoverPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hoverPos</parameter>
            <parameter>M:CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)</parameter>
          </include>
        </markup>
    - id: basePos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>basePos</parameter>
            <parameter>M:CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)</parameter>
          </include>
        </markup>
    - id: token
      type: Global.CollectToken
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>token</parameter>
            <parameter>M:CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)</parameter>
          </include>
        </markup>
    - id: blue
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>blue</parameter>
            <parameter>M:CollectToken.TokenStalk.#ctor(Room,UnityEngine.Vector2,UnityEngine.Vector2,CollectToken,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, hoverPos As Vector2, basePos As Vector2, token As CollectToken, blue As Boolean)
  overload: Global.CollectToken.TokenStalk.#ctor*
  nameWithType.vb: CollectToken.TokenStalk.New(Room, Vector2, Vector2, CollectToken, Boolean)
  fullName.vb: CollectToken.TokenStalk.New(Room, UnityEngine.Vector2, UnityEngine.Vector2, CollectToken, Boolean)
  name.vb: New(Room, Vector2, Vector2, CollectToken, Boolean)
- uid: Global.CollectToken.TokenStalk.Update(System.Boolean)
  commentId: M:Global.CollectToken.TokenStalk.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: CollectToken.TokenStalk.Update(bool)
  fullName: CollectToken.TokenStalk.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:CollectToken.TokenStalk.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.CollectToken.TokenStalk.Update*
  nameWithType.vb: CollectToken.TokenStalk.Update(Boolean)
  fullName.vb: CollectToken.TokenStalk.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.CollectToken.TokenStalk.EyePos(System.Single)
  commentId: M:Global.CollectToken.TokenStalk.EyePos(System.Single)
  id: EyePos(System.Single)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: EyePos(float)
  nameWithType: CollectToken.TokenStalk.EyePos(float)
  fullName: CollectToken.TokenStalk.EyePos(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.EyePos(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 EyePos(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CollectToken.TokenStalk.EyePos(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CollectToken.TokenStalk.EyePos(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function EyePos(timeStacker As Single) As Vector2
  overload: Global.CollectToken.TokenStalk.EyePos*
  nameWithType.vb: CollectToken.TokenStalk.EyePos(Single)
  fullName.vb: CollectToken.TokenStalk.EyePos(Single)
  name.vb: EyePos(Single)
- uid: Global.CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.TokenStalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.CollectToken.TokenStalk.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.CollectToken.TokenStalk.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: CollectToken.TokenStalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:CollectToken.TokenStalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.CollectToken.TokenStalk.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:CollectToken.TokenStalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.CollectToken.TokenStalk.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.CollectToken.TokenStalk.BaseSprite
  commentId: P:Global.CollectToken.TokenStalk.BaseSprite
  id: BaseSprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: BaseSprite
  nameWithType: CollectToken.TokenStalk.BaseSprite
  fullName: CollectToken.TokenStalk.BaseSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.BaseSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BaseSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BaseSprite As Integer
  overload: Global.CollectToken.TokenStalk.BaseSprite*
- uid: Global.CollectToken.TokenStalk.Arm1Sprite
  commentId: P:Global.CollectToken.TokenStalk.Arm1Sprite
  id: Arm1Sprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Arm1Sprite
  nameWithType: CollectToken.TokenStalk.Arm1Sprite
  fullName: CollectToken.TokenStalk.Arm1Sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.Arm1Sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Arm1Sprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Arm1Sprite As Integer
  overload: Global.CollectToken.TokenStalk.Arm1Sprite*
- uid: Global.CollectToken.TokenStalk.Arm2Sprite
  commentId: P:Global.CollectToken.TokenStalk.Arm2Sprite
  id: Arm2Sprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Arm2Sprite
  nameWithType: CollectToken.TokenStalk.Arm2Sprite
  fullName: CollectToken.TokenStalk.Arm2Sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.Arm2Sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Arm2Sprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Arm2Sprite As Integer
  overload: Global.CollectToken.TokenStalk.Arm2Sprite*
- uid: Global.CollectToken.TokenStalk.Arm3Sprite
  commentId: P:Global.CollectToken.TokenStalk.Arm3Sprite
  id: Arm3Sprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Arm3Sprite
  nameWithType: CollectToken.TokenStalk.Arm3Sprite
  fullName: CollectToken.TokenStalk.Arm3Sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.Arm3Sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Arm3Sprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Arm3Sprite As Integer
  overload: Global.CollectToken.TokenStalk.Arm3Sprite*
- uid: Global.CollectToken.TokenStalk.Arm4Sprite
  commentId: P:Global.CollectToken.TokenStalk.Arm4Sprite
  id: Arm4Sprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Arm4Sprite
  nameWithType: CollectToken.TokenStalk.Arm4Sprite
  fullName: CollectToken.TokenStalk.Arm4Sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.Arm4Sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Arm4Sprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Arm4Sprite As Integer
  overload: Global.CollectToken.TokenStalk.Arm4Sprite*
- uid: Global.CollectToken.TokenStalk.Arm5Sprite
  commentId: P:Global.CollectToken.TokenStalk.Arm5Sprite
  id: Arm5Sprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: Arm5Sprite
  nameWithType: CollectToken.TokenStalk.Arm5Sprite
  fullName: CollectToken.TokenStalk.Arm5Sprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.Arm5Sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Arm5Sprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Arm5Sprite As Integer
  overload: Global.CollectToken.TokenStalk.Arm5Sprite*
- uid: Global.CollectToken.TokenStalk.ArmJointSprite
  commentId: P:Global.CollectToken.TokenStalk.ArmJointSprite
  id: ArmJointSprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: ArmJointSprite
  nameWithType: CollectToken.TokenStalk.ArmJointSprite
  fullName: CollectToken.TokenStalk.ArmJointSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.ArmJointSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ArmJointSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ArmJointSprite As Integer
  overload: Global.CollectToken.TokenStalk.ArmJointSprite*
- uid: Global.CollectToken.TokenStalk.SocketSprite
  commentId: P:Global.CollectToken.TokenStalk.SocketSprite
  id: SocketSprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: SocketSprite
  nameWithType: CollectToken.TokenStalk.SocketSprite
  fullName: CollectToken.TokenStalk.SocketSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.SocketSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SocketSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SocketSprite As Integer
  overload: Global.CollectToken.TokenStalk.SocketSprite*
- uid: Global.CollectToken.TokenStalk.HeadSprite
  commentId: P:Global.CollectToken.TokenStalk.HeadSprite
  id: HeadSprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: HeadSprite
  nameWithType: CollectToken.TokenStalk.HeadSprite
  fullName: CollectToken.TokenStalk.HeadSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.HeadSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int HeadSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HeadSprite As Integer
  overload: Global.CollectToken.TokenStalk.HeadSprite*
- uid: Global.CollectToken.TokenStalk.LampSprite
  commentId: P:Global.CollectToken.TokenStalk.LampSprite
  id: LampSprite
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: LampSprite
  nameWithType: CollectToken.TokenStalk.LampSprite
  fullName: CollectToken.TokenStalk.LampSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.LampSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LampSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LampSprite As Integer
  overload: Global.CollectToken.TokenStalk.LampSprite*
- uid: Global.CollectToken.TokenStalk.SataFlasher
  commentId: P:Global.CollectToken.TokenStalk.SataFlasher
  id: SataFlasher
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: SataFlasher
  nameWithType: CollectToken.TokenStalk.SataFlasher
  fullName: CollectToken.TokenStalk.SataFlasher
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.SataFlasher</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SataFlasher { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SataFlasher As Integer
  overload: Global.CollectToken.TokenStalk.SataFlasher*
- uid: Global.CollectToken.TokenStalk.TotalSprites
  commentId: P:Global.CollectToken.TokenStalk.TotalSprites
  id: TotalSprites
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: TotalSprites
  nameWithType: CollectToken.TokenStalk.TotalSprites
  fullName: CollectToken.TokenStalk.TotalSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.TotalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSprites As Integer
  overload: Global.CollectToken.TokenStalk.TotalSprites*
- uid: Global.CollectToken.TokenStalk.alive
  commentId: P:Global.CollectToken.TokenStalk.alive
  id: alive
  parent: Global.CollectToken.TokenStalk
  langs:
  - csharp
  - vb
  name: alive
  nameWithType: CollectToken.TokenStalk.alive
  fullName: CollectToken.TokenStalk.alive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CollectToken.TokenStalk.alive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float alive { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property alive As Single
  overload: Global.CollectToken.TokenStalk.alive*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.CollectToken
  commentId: T:Global.CollectToken
  isExternal: true
  href: CollectToken.html
  name: CollectToken
  nameWithType: CollectToken
  fullName: CollectToken
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CollectToken.TokenStalk.CoordSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.CoordSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_CoordSprite_System_Int32_
  name: CoordSprite
  nameWithType: CollectToken.TokenStalk.CoordSprite
  fullName: CollectToken.TokenStalk.CoordSprite
- uid: Global.CollectToken.TokenStalk.#ctor*
  commentId: Overload:Global.CollectToken.TokenStalk.#ctor
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk__ctor_Room_UnityEngine_Vector2_UnityEngine_Vector2_CollectToken_System_Boolean_
  name: TokenStalk
  nameWithType: CollectToken.TokenStalk.TokenStalk
  fullName: CollectToken.TokenStalk.TokenStalk
  nameWithType.vb: CollectToken.TokenStalk.New
  fullName.vb: CollectToken.TokenStalk.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.CollectToken.TokenStalk.Update*
  commentId: Overload:Global.CollectToken.TokenStalk.Update
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Update_System_Boolean_
  name: Update
  nameWithType: CollectToken.TokenStalk.Update
  fullName: CollectToken.TokenStalk.Update
- uid: Global.CollectToken.TokenStalk.EyePos*
  commentId: Overload:Global.CollectToken.TokenStalk.EyePos
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_EyePos_System_Single_
  name: EyePos
  nameWithType: CollectToken.TokenStalk.EyePos
  fullName: CollectToken.TokenStalk.EyePos
- uid: Global.CollectToken.TokenStalk.InitiateSprites*
  commentId: Overload:Global.CollectToken.TokenStalk.InitiateSprites
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: CollectToken.TokenStalk.InitiateSprites
  fullName: CollectToken.TokenStalk.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.CollectToken.TokenStalk.DrawSprites*
  commentId: Overload:Global.CollectToken.TokenStalk.DrawSprites
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: CollectToken.TokenStalk.DrawSprites
  fullName: CollectToken.TokenStalk.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.CollectToken.TokenStalk.ApplyPalette*
  commentId: Overload:Global.CollectToken.TokenStalk.ApplyPalette
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: CollectToken.TokenStalk.ApplyPalette
  fullName: CollectToken.TokenStalk.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.CollectToken.TokenStalk.AddToContainer*
  commentId: Overload:Global.CollectToken.TokenStalk.AddToContainer
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: CollectToken.TokenStalk.AddToContainer
  fullName: CollectToken.TokenStalk.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.CollectToken.TokenStalk.BaseSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.BaseSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_BaseSprite
  name: BaseSprite
  nameWithType: CollectToken.TokenStalk.BaseSprite
  fullName: CollectToken.TokenStalk.BaseSprite
- uid: Global.CollectToken.TokenStalk.Arm1Sprite*
  commentId: Overload:Global.CollectToken.TokenStalk.Arm1Sprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Arm1Sprite
  name: Arm1Sprite
  nameWithType: CollectToken.TokenStalk.Arm1Sprite
  fullName: CollectToken.TokenStalk.Arm1Sprite
- uid: Global.CollectToken.TokenStalk.Arm2Sprite*
  commentId: Overload:Global.CollectToken.TokenStalk.Arm2Sprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Arm2Sprite
  name: Arm2Sprite
  nameWithType: CollectToken.TokenStalk.Arm2Sprite
  fullName: CollectToken.TokenStalk.Arm2Sprite
- uid: Global.CollectToken.TokenStalk.Arm3Sprite*
  commentId: Overload:Global.CollectToken.TokenStalk.Arm3Sprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Arm3Sprite
  name: Arm3Sprite
  nameWithType: CollectToken.TokenStalk.Arm3Sprite
  fullName: CollectToken.TokenStalk.Arm3Sprite
- uid: Global.CollectToken.TokenStalk.Arm4Sprite*
  commentId: Overload:Global.CollectToken.TokenStalk.Arm4Sprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Arm4Sprite
  name: Arm4Sprite
  nameWithType: CollectToken.TokenStalk.Arm4Sprite
  fullName: CollectToken.TokenStalk.Arm4Sprite
- uid: Global.CollectToken.TokenStalk.Arm5Sprite*
  commentId: Overload:Global.CollectToken.TokenStalk.Arm5Sprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_Arm5Sprite
  name: Arm5Sprite
  nameWithType: CollectToken.TokenStalk.Arm5Sprite
  fullName: CollectToken.TokenStalk.Arm5Sprite
- uid: Global.CollectToken.TokenStalk.ArmJointSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.ArmJointSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_ArmJointSprite
  name: ArmJointSprite
  nameWithType: CollectToken.TokenStalk.ArmJointSprite
  fullName: CollectToken.TokenStalk.ArmJointSprite
- uid: Global.CollectToken.TokenStalk.SocketSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.SocketSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_SocketSprite
  name: SocketSprite
  nameWithType: CollectToken.TokenStalk.SocketSprite
  fullName: CollectToken.TokenStalk.SocketSprite
- uid: Global.CollectToken.TokenStalk.HeadSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.HeadSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_HeadSprite
  name: HeadSprite
  nameWithType: CollectToken.TokenStalk.HeadSprite
  fullName: CollectToken.TokenStalk.HeadSprite
- uid: Global.CollectToken.TokenStalk.LampSprite*
  commentId: Overload:Global.CollectToken.TokenStalk.LampSprite
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_LampSprite
  name: LampSprite
  nameWithType: CollectToken.TokenStalk.LampSprite
  fullName: CollectToken.TokenStalk.LampSprite
- uid: Global.CollectToken.TokenStalk.SataFlasher*
  commentId: Overload:Global.CollectToken.TokenStalk.SataFlasher
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_SataFlasher
  name: SataFlasher
  nameWithType: CollectToken.TokenStalk.SataFlasher
  fullName: CollectToken.TokenStalk.SataFlasher
- uid: Global.CollectToken.TokenStalk.TotalSprites*
  commentId: Overload:Global.CollectToken.TokenStalk.TotalSprites
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_TotalSprites
  name: TotalSprites
  nameWithType: CollectToken.TokenStalk.TotalSprites
  fullName: CollectToken.TokenStalk.TotalSprites
- uid: Global.CollectToken.TokenStalk.alive*
  commentId: Overload:Global.CollectToken.TokenStalk.alive
  isExternal: true
  href: Global.CollectToken.TokenStalk.html#CollectToken_TokenStalk_alive
  name: alive
  nameWithType: CollectToken.TokenStalk.alive
  fullName: CollectToken.TokenStalk.alive
