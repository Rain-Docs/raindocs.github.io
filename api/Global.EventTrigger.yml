### YamlMime:ManagedReference
items:
- uid: Global.EventTrigger
  commentId: T:Global.EventTrigger
  id: EventTrigger
  parent: Global
  children:
  - Global.EventTrigger.#ctor(EventTrigger.TriggerType)
  - Global.EventTrigger.BaseSaveString
  - Global.EventTrigger.FromString(System.String[])
  - Global.EventTrigger.ToString
  - Global.EventTrigger.activeFromCycle
  - Global.EventTrigger.activeToCycle
  - Global.EventTrigger.delay
  - Global.EventTrigger.entrance
  - Global.EventTrigger.fireChance
  - Global.EventTrigger.karma
  - Global.EventTrigger.multiUse
  - Global.EventTrigger.panelPosition
  - Global.EventTrigger.slugcats
  - Global.EventTrigger.tEvent
  - Global.EventTrigger.timelines
  - Global.EventTrigger.type
  - Global.EventTrigger.unrecognizedSaveStrings
  langs:
  - csharp
  - vb
  name: EventTrigger
  nameWithType: EventTrigger
  fullName: EventTrigger
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:EventTrigger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class EventTrigger
    content.vb: Public Class EventTrigger
  inheritance:
  - System.Object
  derivedClasses:
  - Global.SeeCreatureTrigger
  - Global.SpotTrigger
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.EventTrigger.type
  commentId: F:Global.EventTrigger.type
  id: type
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: type
  nameWithType: EventTrigger.type
  fullName: EventTrigger.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public EventTrigger.TriggerType type
    return:
      type: Global.EventTrigger.TriggerType
    content.vb: Public type As EventTrigger.TriggerType
- uid: Global.EventTrigger.tEvent
  commentId: F:Global.EventTrigger.tEvent
  id: tEvent
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: tEvent
  nameWithType: EventTrigger.tEvent
  fullName: EventTrigger.tEvent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.tEvent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TriggeredEvent tEvent
    return:
      type: Global.TriggeredEvent
    content.vb: Public tEvent As TriggeredEvent
- uid: Global.EventTrigger.activeToCycle
  commentId: F:Global.EventTrigger.activeToCycle
  id: activeToCycle
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: activeToCycle
  nameWithType: EventTrigger.activeToCycle
  fullName: EventTrigger.activeToCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.activeToCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int activeToCycle
    return:
      type: System.Int32
    content.vb: Public activeToCycle As Integer
- uid: Global.EventTrigger.activeFromCycle
  commentId: F:Global.EventTrigger.activeFromCycle
  id: activeFromCycle
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: activeFromCycle
  nameWithType: EventTrigger.activeFromCycle
  fullName: EventTrigger.activeFromCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.activeFromCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int activeFromCycle
    return:
      type: System.Int32
    content.vb: Public activeFromCycle As Integer
- uid: Global.EventTrigger.delay
  commentId: F:Global.EventTrigger.delay
  id: delay
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: delay
  nameWithType: EventTrigger.delay
  fullName: EventTrigger.delay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.delay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int delay
    return:
      type: System.Int32
    content.vb: Public delay As Integer
- uid: Global.EventTrigger.multiUse
  commentId: F:Global.EventTrigger.multiUse
  id: multiUse
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: multiUse
  nameWithType: EventTrigger.multiUse
  fullName: EventTrigger.multiUse
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.multiUse</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool multiUse
    return:
      type: System.Boolean
    content.vb: Public multiUse As Boolean
- uid: Global.EventTrigger.fireChance
  commentId: F:Global.EventTrigger.fireChance
  id: fireChance
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: fireChance
  nameWithType: EventTrigger.fireChance
  fullName: EventTrigger.fireChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.fireChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fireChance
    return:
      type: System.Single
    content.vb: Public fireChance As Single
- uid: Global.EventTrigger.entrance
  commentId: F:Global.EventTrigger.entrance
  id: entrance
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: entrance
  nameWithType: EventTrigger.entrance
  fullName: EventTrigger.entrance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.entrance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int entrance
    return:
      type: System.Int32
    content.vb: Public entrance As Integer
- uid: Global.EventTrigger.karma
  commentId: F:Global.EventTrigger.karma
  id: karma
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: karma
  nameWithType: EventTrigger.karma
  fullName: EventTrigger.karma
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.karma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int karma
    return:
      type: System.Int32
    content.vb: Public karma As Integer
- uid: Global.EventTrigger.slugcats
  commentId: F:Global.EventTrigger.slugcats
  id: slugcats
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: slugcats
  nameWithType: EventTrigger.slugcats
  fullName: EventTrigger.slugcats
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.slugcats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SlugcatStats.Name> slugcats
    return:
      type: System.Collections.Generic.List{SlugcatStats.Name}
    content.vb: Public slugcats As List(Of SlugcatStats.Name)
- uid: Global.EventTrigger.timelines
  commentId: F:Global.EventTrigger.timelines
  id: timelines
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: timelines
  nameWithType: EventTrigger.timelines
  fullName: EventTrigger.timelines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.timelines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SlugcatStats.Timeline> timelines
    return:
      type: System.Collections.Generic.List{SlugcatStats.Timeline}
    content.vb: Public timelines As List(Of SlugcatStats.Timeline)
- uid: Global.EventTrigger.unrecognizedSaveStrings
  commentId: F:Global.EventTrigger.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: EventTrigger.unrecognizedSaveStrings
  fullName: EventTrigger.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public unrecognizedSaveStrings As Dictionary(Of String, String)
- uid: Global.EventTrigger.panelPosition
  commentId: F:Global.EventTrigger.panelPosition
  id: panelPosition
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: panelPosition
  nameWithType: EventTrigger.panelPosition
  fullName: EventTrigger.panelPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:EventTrigger.panelPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panelPosition
    return:
      type: UnityEngine.Vector2
    content.vb: Public panelPosition As Vector2
- uid: Global.EventTrigger.#ctor(EventTrigger.TriggerType)
  commentId: M:Global.EventTrigger.#ctor(EventTrigger.TriggerType)
  id: '#ctor(EventTrigger.TriggerType)'
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: EventTrigger(TriggerType)
  nameWithType: EventTrigger.EventTrigger(EventTrigger.TriggerType)
  fullName: EventTrigger.EventTrigger(EventTrigger.TriggerType)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>EventTrigger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public EventTrigger(EventTrigger.TriggerType type)
    parameters:
    - id: type
      type: Global.EventTrigger.TriggerType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:EventTrigger.#ctor(EventTrigger.TriggerType)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As EventTrigger.TriggerType)
  overload: Global.EventTrigger.#ctor*
  nameWithType.vb: EventTrigger.New(EventTrigger.TriggerType)
  fullName.vb: EventTrigger.New(EventTrigger.TriggerType)
  name.vb: New(TriggerType)
- uid: Global.EventTrigger.BaseSaveString
  commentId: M:Global.EventTrigger.BaseSaveString
  id: BaseSaveString
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: BaseSaveString()
  nameWithType: EventTrigger.BaseSaveString()
  fullName: EventTrigger.BaseSaveString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:EventTrigger.BaseSaveString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string BaseSaveString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:EventTrigger.BaseSaveString</parameter>
          </include>
        </markup>
    content.vb: Public Function BaseSaveString() As String
  overload: Global.EventTrigger.BaseSaveString*
- uid: Global.EventTrigger.ToString
  commentId: M:Global.EventTrigger.ToString
  id: ToString
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: EventTrigger.ToString()
  fullName: EventTrigger.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:EventTrigger.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:EventTrigger.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.EventTrigger.ToString*
- uid: Global.EventTrigger.FromString(System.String[])
  commentId: M:Global.EventTrigger.FromString(System.String[])
  id: FromString(System.String[])
  parent: Global.EventTrigger
  langs:
  - csharp
  - vb
  name: FromString(string[])
  nameWithType: EventTrigger.FromString(string[])
  fullName: EventTrigger.FromString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:EventTrigger.FromString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void FromString(string[] s)
    parameters:
    - id: s
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:EventTrigger.FromString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub FromString(s As String())
  overload: Global.EventTrigger.FromString*
  nameWithType.vb: EventTrigger.FromString(String())
  fullName.vb: EventTrigger.FromString(String())
  name.vb: FromString(String())
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.EventTrigger.TriggerType
  commentId: T:Global.EventTrigger.TriggerType
  isExternal: true
  href: EventTrigger.html
  name: EventTrigger.TriggerType
  nameWithType: EventTrigger.TriggerType
  fullName: EventTrigger.TriggerType
  spec.csharp:
  - uid: Global.EventTrigger
    name: EventTrigger
    isExternal: true
    href: EventTrigger.html
  - name: .
  - uid: Global.EventTrigger.TriggerType
    name: TriggerType
    isExternal: true
    href: EventTrigger.TriggerType.html
  spec.vb:
  - uid: Global.EventTrigger
    name: EventTrigger
    isExternal: true
    href: EventTrigger.html
  - name: .
  - uid: Global.EventTrigger.TriggerType
    name: TriggerType
    isExternal: true
    href: EventTrigger.TriggerType.html
- uid: Global.TriggeredEvent
  commentId: T:Global.TriggeredEvent
  isExternal: true
  href: TriggeredEvent.html
  name: TriggeredEvent
  nameWithType: TriggeredEvent
  fullName: TriggeredEvent
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{SlugcatStats.Name}
  commentId: T:System.Collections.Generic.List{SlugcatStats.Name}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SlugcatStats.Name>
  nameWithType: List<SlugcatStats.Name>
  fullName: System.Collections.Generic.List<SlugcatStats.Name>
  nameWithType.vb: List(Of SlugcatStats.Name)
  fullName.vb: System.Collections.Generic.List(Of SlugcatStats.Name)
  name.vb: List(Of SlugcatStats.Name)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{SlugcatStats.Timeline}
  commentId: T:System.Collections.Generic.List{SlugcatStats.Timeline}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SlugcatStats.Timeline>
  nameWithType: List<SlugcatStats.Timeline>
  fullName: System.Collections.Generic.List<SlugcatStats.Timeline>
  nameWithType.vb: List(Of SlugcatStats.Timeline)
  fullName.vb: System.Collections.Generic.List(Of SlugcatStats.Timeline)
  name.vb: List(Of SlugcatStats.Timeline)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.EventTrigger.#ctor*
  commentId: Overload:Global.EventTrigger.#ctor
  isExternal: true
  href: Global.EventTrigger.html#EventTrigger__ctor_EventTrigger_TriggerType_
  name: EventTrigger
  nameWithType: EventTrigger.EventTrigger
  fullName: EventTrigger.EventTrigger
  nameWithType.vb: EventTrigger.New
  fullName.vb: EventTrigger.New
  name.vb: New
- uid: Global.EventTrigger.BaseSaveString*
  commentId: Overload:Global.EventTrigger.BaseSaveString
  isExternal: true
  href: Global.EventTrigger.html#EventTrigger_BaseSaveString
  name: BaseSaveString
  nameWithType: EventTrigger.BaseSaveString
  fullName: EventTrigger.BaseSaveString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.EventTrigger.ToString*
  commentId: Overload:Global.EventTrigger.ToString
  isExternal: true
  href: Global.EventTrigger.html#EventTrigger_ToString
  name: ToString
  nameWithType: EventTrigger.ToString
  fullName: EventTrigger.ToString
- uid: Global.EventTrigger.FromString*
  commentId: Overload:Global.EventTrigger.FromString
  isExternal: true
  href: Global.EventTrigger.html#EventTrigger_FromString_System_String___
  name: FromString
  nameWithType: EventTrigger.FromString
  fullName: EventTrigger.FromString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
