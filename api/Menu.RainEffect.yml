### YamlMime:ManagedReference
items:
- uid: Menu.RainEffect
  commentId: T:Menu.RainEffect
  id: RainEffect
  parent: Menu
  children:
  - Menu.RainEffect.#ctor(Menu.Menu,Menu.MenuObject)
  - Menu.RainEffect.GrafUpdate(System.Single)
  - Menu.RainEffect.LIdropOff
  - Menu.RainEffect.LightningSpike(System.Single,System.Single)
  - Menu.RainEffect.RainDir(System.Single)
  - Menu.RainEffect.RemoveSprites
  - Menu.RainEffect.Update
  - Menu.RainEffect.bkg
  - Menu.RainEffect.drops
  - Menu.RainEffect.extraLightningChance
  - Menu.RainEffect.fadeSprite
  - Menu.RainEffect.highlightPos
  - Menu.RainEffect.lastLightning
  - Menu.RainEffect.lightning
  - Menu.RainEffect.lightningIntensity
  - Menu.RainEffect.lightsource
  - Menu.RainEffect.rainFade
  - Menu.RainEffect.sprites
  langs:
  - csharp
  - vb
  name: RainEffect
  nameWithType: RainEffect
  fullName: Menu.RainEffect
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.RainEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class RainEffect : MenuObject'
    content.vb: Public Class RainEffect Inherits MenuObject
  inheritance:
  - System.Object
  - Menu.MenuObject
  inheritedMembers:
  - Menu.MenuObject.menu
  - Menu.MenuObject.subObjects
  - Menu.MenuObject.owner
  - Menu.MenuObject.nextSelectable
  - Menu.MenuObject.toggled
  - Menu.MenuObject.inactive
  - Menu.MenuObject.myContainer
  - Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  - Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  - Menu.MenuObject.Container
  - Menu.MenuObject.Selected
  - Menu.MenuObject.page
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.RainEffect.sprites
  commentId: F:Menu.RainEffect.sprites
  id: sprites
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: sprites
  nameWithType: RainEffect.sprites
  fullName: Menu.RainEffect.sprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.sprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite[] sprites
    return:
      type: Global.FSprite[]
    content.vb: Public sprites As FSprite()
- uid: Menu.RainEffect.drops
  commentId: F:Menu.RainEffect.drops
  id: drops
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: drops
  nameWithType: RainEffect.drops
  fullName: Menu.RainEffect.drops
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.drops</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainEffect.RainDrop[] drops
    return:
      type: Menu.RainEffect.RainDrop[]
    content.vb: Public drops As RainEffect.RainDrop()
- uid: Menu.RainEffect.highlightPos
  commentId: F:Menu.RainEffect.highlightPos
  id: highlightPos
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: highlightPos
  nameWithType: RainEffect.highlightPos
  fullName: Menu.RainEffect.highlightPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.highlightPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float highlightPos
    return:
      type: System.Single
    content.vb: Public highlightPos As Single
- uid: Menu.RainEffect.lightning
  commentId: F:Menu.RainEffect.lightning
  id: lightning
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: lightning
  nameWithType: RainEffect.lightning
  fullName: Menu.RainEffect.lightning
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.lightning</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lightning
    return:
      type: System.Single
    content.vb: Public lightning As Single
- uid: Menu.RainEffect.lastLightning
  commentId: F:Menu.RainEffect.lastLightning
  id: lastLightning
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: lastLightning
  nameWithType: RainEffect.lastLightning
  fullName: Menu.RainEffect.lastLightning
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.lastLightning</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastLightning
    return:
      type: System.Single
    content.vb: Public lastLightning As Single
- uid: Menu.RainEffect.lightningIntensity
  commentId: F:Menu.RainEffect.lightningIntensity
  id: lightningIntensity
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: lightningIntensity
  nameWithType: RainEffect.lightningIntensity
  fullName: Menu.RainEffect.lightningIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.lightningIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lightningIntensity
    return:
      type: System.Single
    content.vb: Public lightningIntensity As Single
- uid: Menu.RainEffect.LIdropOff
  commentId: F:Menu.RainEffect.LIdropOff
  id: LIdropOff
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: LIdropOff
  nameWithType: RainEffect.LIdropOff
  fullName: Menu.RainEffect.LIdropOff
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.LIdropOff</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LIdropOff
    return:
      type: System.Single
    content.vb: Public LIdropOff As Single
- uid: Menu.RainEffect.extraLightningChance
  commentId: F:Menu.RainEffect.extraLightningChance
  id: extraLightningChance
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: extraLightningChance
  nameWithType: RainEffect.extraLightningChance
  fullName: Menu.RainEffect.extraLightningChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.extraLightningChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float extraLightningChance
    return:
      type: System.Single
    content.vb: Public extraLightningChance As Single
- uid: Menu.RainEffect.rainFade
  commentId: F:Menu.RainEffect.rainFade
  id: rainFade
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: rainFade
  nameWithType: RainEffect.rainFade
  fullName: Menu.RainEffect.rainFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.rainFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rainFade
    return:
      type: System.Single
    content.vb: Public rainFade As Single
- uid: Menu.RainEffect.bkg
  commentId: F:Menu.RainEffect.bkg
  id: bkg
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: bkg
  nameWithType: RainEffect.bkg
  fullName: Menu.RainEffect.bkg
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.bkg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite bkg
    return:
      type: Global.FSprite
    content.vb: Public bkg As FSprite
- uid: Menu.RainEffect.fadeSprite
  commentId: F:Menu.RainEffect.fadeSprite
  id: fadeSprite
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: fadeSprite
  nameWithType: RainEffect.fadeSprite
  fullName: Menu.RainEffect.fadeSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.fadeSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite fadeSprite
    return:
      type: Global.FSprite
    content.vb: Public fadeSprite As FSprite
- uid: Menu.RainEffect.lightsource
  commentId: F:Menu.RainEffect.lightsource
  id: lightsource
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: lightsource
  nameWithType: RainEffect.lightsource
  fullName: Menu.RainEffect.lightsource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.RainEffect.lightsource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite lightsource
    return:
      type: Global.FSprite
    content.vb: Public lightsource As FSprite
- uid: Menu.RainEffect.RainDir(System.Single)
  commentId: M:Menu.RainEffect.RainDir(System.Single)
  id: RainDir(System.Single)
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: RainDir(float)
  nameWithType: RainEffect.RainDir(float)
  fullName: Menu.RainEffect.RainDir(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.RainEffect.RainDir(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RainDir(float dp)
    parameters:
    - id: dp
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dp</parameter>
            <parameter>M:Menu.RainEffect.RainDir(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.RainEffect.RainDir(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function RainDir(dp As Single) As Vector2
  overload: Menu.RainEffect.RainDir*
  nameWithType.vb: RainEffect.RainDir(Single)
  fullName.vb: Menu.RainEffect.RainDir(Single)
  name.vb: RainDir(Single)
- uid: Menu.RainEffect.#ctor(Menu.Menu,Menu.MenuObject)
  commentId: M:Menu.RainEffect.#ctor(Menu.Menu,Menu.MenuObject)
  id: '#ctor(Menu.Menu,Menu.MenuObject)'
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: RainEffect(Menu, MenuObject)
  nameWithType: RainEffect.RainEffect(Menu, MenuObject)
  fullName: Menu.RainEffect.RainEffect(Menu.Menu, Menu.MenuObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.RainEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainEffect(Menu menu, MenuObject owner)
    parameters:
    - id: menu
      type: Menu.Menu
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>menu</parameter>
            <parameter>M:Menu.RainEffect.#ctor(Menu.Menu,Menu.MenuObject)</parameter>
          </include>
        </markup>
    - id: owner
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.RainEffect.#ctor(Menu.Menu,Menu.MenuObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(menu As Menu, owner As MenuObject)
  overload: Menu.RainEffect.#ctor*
  nameWithType.vb: RainEffect.New(Menu, MenuObject)
  fullName.vb: Menu.RainEffect.New(Menu.Menu, Menu.MenuObject)
  name.vb: New(Menu, MenuObject)
- uid: Menu.RainEffect.Update
  commentId: M:Menu.RainEffect.Update
  id: Update
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: RainEffect.Update()
  fullName: Menu.RainEffect.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.RainEffect.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Menu.MenuObject.Update
  overload: Menu.RainEffect.Update*
- uid: Menu.RainEffect.LightningSpike(System.Single,System.Single)
  commentId: M:Menu.RainEffect.LightningSpike(System.Single,System.Single)
  id: LightningSpike(System.Single,System.Single)
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: LightningSpike(float, float)
  nameWithType: RainEffect.LightningSpike(float, float)
  fullName: Menu.RainEffect.LightningSpike(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.RainEffect.LightningSpike(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LightningSpike(float newInt, float dropOffFrames)
    parameters:
    - id: newInt
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newInt</parameter>
            <parameter>M:Menu.RainEffect.LightningSpike(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: dropOffFrames
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dropOffFrames</parameter>
            <parameter>M:Menu.RainEffect.LightningSpike(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub LightningSpike(newInt As Single, dropOffFrames As Single)
  overload: Menu.RainEffect.LightningSpike*
  nameWithType.vb: RainEffect.LightningSpike(Single, Single)
  fullName.vb: Menu.RainEffect.LightningSpike(Single, Single)
  name.vb: LightningSpike(Single, Single)
- uid: Menu.RainEffect.GrafUpdate(System.Single)
  commentId: M:Menu.RainEffect.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: RainEffect.GrafUpdate(float)
  fullName: Menu.RainEffect.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.RainEffect.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.RainEffect.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GrafUpdate(timeStacker As Single)
  overridden: Menu.MenuObject.GrafUpdate(System.Single)
  overload: Menu.RainEffect.GrafUpdate*
  nameWithType.vb: RainEffect.GrafUpdate(Single)
  fullName.vb: Menu.RainEffect.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.RainEffect.RemoveSprites
  commentId: M:Menu.RainEffect.RemoveSprites
  id: RemoveSprites
  parent: Menu.RainEffect
  langs:
  - csharp
  - vb
  name: RemoveSprites()
  nameWithType: RainEffect.RemoveSprites()
  fullName: Menu.RainEffect.RemoveSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.RainEffect.RemoveSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void RemoveSprites()
    content.vb: Public Overrides Sub RemoveSprites()
  overridden: Menu.MenuObject.RemoveSprites
  overload: Menu.RainEffect.RemoveSprites*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Menu.MenuObject.menu
  commentId: F:Menu.MenuObject.menu
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_menu
  name: menu
  nameWithType: MenuObject.menu
  fullName: Menu.MenuObject.menu
- uid: Menu.MenuObject.subObjects
  commentId: F:Menu.MenuObject.subObjects
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_subObjects
  name: subObjects
  nameWithType: MenuObject.subObjects
  fullName: Menu.MenuObject.subObjects
- uid: Menu.MenuObject.owner
  commentId: F:Menu.MenuObject.owner
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_owner
  name: owner
  nameWithType: MenuObject.owner
  fullName: Menu.MenuObject.owner
- uid: Menu.MenuObject.nextSelectable
  commentId: F:Menu.MenuObject.nextSelectable
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_nextSelectable
  name: nextSelectable
  nameWithType: MenuObject.nextSelectable
  fullName: Menu.MenuObject.nextSelectable
- uid: Menu.MenuObject.toggled
  commentId: F:Menu.MenuObject.toggled
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_toggled
  name: toggled
  nameWithType: MenuObject.toggled
  fullName: Menu.MenuObject.toggled
- uid: Menu.MenuObject.inactive
  commentId: F:Menu.MenuObject.inactive
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_inactive
  name: inactive
  nameWithType: MenuObject.inactive
  fullName: Menu.MenuObject.inactive
- uid: Menu.MenuObject.myContainer
  commentId: F:Menu.MenuObject.myContainer
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_myContainer
  name: myContainer
  nameWithType: MenuObject.myContainer
  fullName: Menu.MenuObject.myContainer
- uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  name: Singal(MenuObject, string)
  nameWithType: MenuObject.Singal(MenuObject, string)
  fullName: Menu.MenuObject.Singal(Menu.MenuObject, string)
  nameWithType.vb: MenuObject.Singal(MenuObject, String)
  fullName.vb: Menu.MenuObject.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
  spec.csharp:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  commentId: M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  name: RemoveSubObject(MenuObject)
  nameWithType: MenuObject.RemoveSubObject(MenuObject)
  fullName: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: Menu.MenuObject.Container
  commentId: P:Menu.MenuObject.Container
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Container
  name: Container
  nameWithType: MenuObject.Container
  fullName: Menu.MenuObject.Container
- uid: Menu.MenuObject.Selected
  commentId: P:Menu.MenuObject.Selected
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Selected
  name: Selected
  nameWithType: MenuObject.Selected
  fullName: Menu.MenuObject.Selected
- uid: Menu.MenuObject.page
  commentId: P:Menu.MenuObject.page
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_page
  name: page
  nameWithType: MenuObject.page
  fullName: Menu.MenuObject.page
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FSprite[]
  isExternal: true
  href: FSprite.html
  name: FSprite[]
  nameWithType: FSprite[]
  fullName: FSprite[]
  nameWithType.vb: FSprite()
  fullName.vb: FSprite()
  name.vb: FSprite()
  spec.csharp:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: (
  - name: )
- uid: Menu.RainEffect.RainDrop[]
  isExternal: true
  href: Menu.RainEffect.RainDrop.html
  name: RainDrop[]
  nameWithType: RainEffect.RainDrop[]
  fullName: Menu.RainEffect.RainDrop[]
  nameWithType.vb: RainEffect.RainDrop()
  fullName.vb: Menu.RainEffect.RainDrop()
  name.vb: RainDrop()
  spec.csharp:
  - uid: Menu.RainEffect.RainDrop
    name: RainDrop
    isExternal: true
    href: Menu.RainEffect.RainDrop.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.RainEffect.RainDrop
    name: RainDrop
    isExternal: true
    href: Menu.RainEffect.RainDrop.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: Menu.RainEffect.RainDir*
  commentId: Overload:Menu.RainEffect.RainDir
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect_RainDir_System_Single_
  name: RainDir
  nameWithType: RainEffect.RainDir
  fullName: Menu.RainEffect.RainDir
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Menu.RainEffect.#ctor*
  commentId: Overload:Menu.RainEffect.#ctor
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect__ctor_Menu_Menu_Menu_MenuObject_
  name: RainEffect
  nameWithType: RainEffect.RainEffect
  fullName: Menu.RainEffect.RainEffect
  nameWithType.vb: RainEffect.New
  fullName.vb: Menu.RainEffect.New
  name.vb: New
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: Menu.MenuObject.Update
  commentId: M:Menu.MenuObject.Update
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Update
  name: Update()
  nameWithType: MenuObject.Update()
  fullName: Menu.MenuObject.Update()
  spec.csharp:
  - uid: Menu.MenuObject.Update
    name: Update
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.Update
    name: Update
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Update
  - name: (
  - name: )
- uid: Menu.RainEffect.Update*
  commentId: Overload:Menu.RainEffect.Update
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect_Update
  name: Update
  nameWithType: RainEffect.Update
  fullName: Menu.RainEffect.Update
- uid: Menu.RainEffect.LightningSpike*
  commentId: Overload:Menu.RainEffect.LightningSpike
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect_LightningSpike_System_Single_System_Single_
  name: LightningSpike
  nameWithType: RainEffect.LightningSpike
  fullName: Menu.RainEffect.LightningSpike
- uid: Menu.MenuObject.GrafUpdate(System.Single)
  commentId: M:Menu.MenuObject.GrafUpdate(System.Single)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  name: GrafUpdate(float)
  nameWithType: MenuObject.GrafUpdate(float)
  fullName: Menu.MenuObject.GrafUpdate(float)
  nameWithType.vb: MenuObject.GrafUpdate(Single)
  fullName.vb: Menu.MenuObject.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.RainEffect.GrafUpdate*
  commentId: Overload:Menu.RainEffect.GrafUpdate
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: RainEffect.GrafUpdate
  fullName: Menu.RainEffect.GrafUpdate
- uid: Menu.MenuObject.RemoveSprites
  commentId: M:Menu.MenuObject.RemoveSprites
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  name: RemoveSprites()
  nameWithType: MenuObject.RemoveSprites()
  fullName: Menu.MenuObject.RemoveSprites()
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
- uid: Menu.RainEffect.RemoveSprites*
  commentId: Overload:Menu.RainEffect.RemoveSprites
  isExternal: true
  href: Menu.RainEffect.html#Menu_RainEffect_RemoveSprites
  name: RemoveSprites
  nameWithType: RainEffect.RemoveSprites
  fullName: Menu.RainEffect.RemoveSprites
