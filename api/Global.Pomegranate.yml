### YamlMime:ManagedReference
items:
- uid: Global.Pomegranate
  commentId: T:Global.Pomegranate
  id: Pomegranate
  parent: Global
  children:
  - Global.Pomegranate.#ctor(AbstractPhysicalObject)
  - Global.Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)
  - Global.Pomegranate.AbstrPomegranate
  - Global.Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.Pomegranate.BackingSprite(System.Int32)
  - Global.Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)
  - Global.Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)
  - Global.Pomegranate.Disconnect
  - Global.Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.Pomegranate.EnterSmashedMode
  - Global.Pomegranate.FirstSeedSprite(System.Int32)
  - Global.Pomegranate.Grabbed(Creature.Grasp)
  - Global.Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)
  - Global.Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.Pomegranate.PlaceInRoom(Room)
  - Global.Pomegranate.Smash
  - Global.Pomegranate.SmashedBitSprite(System.Int32,System.Int32)
  - Global.Pomegranate.SmashedUpdate(System.Boolean)
  - Global.Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  - Global.Pomegranate.Update(System.Boolean)
  - Global.Pomegranate.attachDirection
  - Global.Pomegranate.baseColor
  - Global.Pomegranate.bitSizes
  - Global.Pomegranate.currentlyEdible
  - Global.Pomegranate.darkness
  - Global.Pomegranate.data
  - Global.Pomegranate.disconnected
  - Global.Pomegranate.eatDelayCounter
  - Global.Pomegranate.falling
  - Global.Pomegranate.idleRotationOffset
  - Global.Pomegranate.killTagHolder
  - Global.Pomegranate.lastDarkness
  - Global.Pomegranate.lastRotation
  - Global.Pomegranate.notMovingTimer
  - Global.Pomegranate.overallSize
  - Global.Pomegranate.refreshSprites
  - Global.Pomegranate.releaseCounter
  - Global.Pomegranate.rotation
  - Global.Pomegranate.scratchTerrainCollisionData
  - Global.Pomegranate.seedSizes
  - Global.Pomegranate.seeds
  - Global.Pomegranate.setRotation
  - Global.Pomegranate.shellColor
  - Global.Pomegranate.shellHalves
  - Global.Pomegranate.shellsInverted
  - Global.Pomegranate.smashed
  - Global.Pomegranate.smashedBits
  - Global.Pomegranate.spearmasterStabbed
  - Global.Pomegranate.stabbedFade
  - Global.Pomegranate.stalkSeeds
  - Global.Pomegranate.stalks
  langs:
  - csharp
  - vb
  name: Pomegranate
  nameWithType: Pomegranate
  fullName: Pomegranate
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Pomegranate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Pomegranate : PlayerCarryableItem, IDrawable'
    content.vb: Public Class Pomegranate Inherits PlayerCarryableItem Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  - Global.PhysicalObject
  - Global.PlayerCarryableItem
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.PlayerCarryableItem.blink
  - Global.PlayerCarryableItem.color
  - Global.PlayerCarryableItem.lastOutsideTerrainPos
  - Global.PlayerCarryableItem.NewRoom(Room)
  - Global.PlayerCarryableItem.PickedUp(Creature)
  - Global.PlayerCarryableItem.Blink
  - Global.PlayerCarryableItem.Forbid
  - Global.PlayerCarryableItem.forbiddenToPlayer
  - Global.PlayerCarryableItem.ThrowPowerFactor
  - Global.PlayerCarryableItem.blinkColor
  - Global.PhysicalObject.bodyChunkConnections
  - Global.PhysicalObject.grabbedBy
  - Global.PhysicalObject.collisionRange
  - Global.PhysicalObject.collisionLayer
  - Global.PhysicalObject.abstractPhysicalObject
  - Global.PhysicalObject.surfaceFriction
  - Global.PhysicalObject.bounce
  - Global.PhysicalObject.impactTreshhold
  - Global.PhysicalObject.waterRetardationImmunity
  - Global.PhysicalObject.burrowFriction
  - Global.PhysicalObject.sticksRespawned
  - Global.PhysicalObject.appendages
  - Global.PhysicalObject.canBeHitByWeapons
  - Global.PhysicalObject.jollyBeingPointedCounter
  - Global.PhysicalObject.FirstChunk
  - Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  - Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  - Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  - Global.PhysicalObject.HitByWeapon(Weapon)
  - Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  - Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  - Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  - Global.PhysicalObject.InitiateGraphicsModule
  - Global.PhysicalObject.RemoveGraphicsModule
  - Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  - Global.PhysicalObject.RecreateSticksFromAbstract
  - Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  - Global.PhysicalObject.SetLocalGravity(System.Single)
  - Global.PhysicalObject.GetLocalGravity
  - Global.PhysicalObject.SetLocalAirFriction(System.Single)
  - Global.PhysicalObject.WeatherInertia
  - Global.PhysicalObject.DisposeGraphicsModule
  - Global.PhysicalObject.bodyChunks
  - Global.PhysicalObject.graphicsModule
  - Global.PhysicalObject.firstChunk
  - Global.PhysicalObject.TotalMass
  - Global.PhysicalObject.RandomChunk
  - Global.PhysicalObject.gravity
  - Global.PhysicalObject.airFriction
  - Global.PhysicalObject.waterFriction
  - Global.PhysicalObject.buoyancy
  - Global.PhysicalObject.windAffectiveness
  - Global.PhysicalObject.VisibilityBonus
  - Global.PhysicalObject.GoThroughFloors
  - Global.PhysicalObject.CollideWithTerrain
  - Global.PhysicalObject.CollideWithSlopes
  - Global.PhysicalObject.CollideWithObjects
  - Global.PhysicalObject.Buried
  - Global.PhysicalObject.WantsToBurrow
  - Global.PhysicalObject.Submersion
  - Global.PhysicalObject.SandstormImmune
  - Global.PhysicalObject.EffectiveRoomGravity
  - Global.PhysicalObject.LickedByPlayer
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Pomegranate.stalks
  commentId: F:Global.Pomegranate.stalks
  id: stalks
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: stalks
  nameWithType: Pomegranate.stalks
  fullName: Pomegranate.stalks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.stalks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Pomegranate.Stalk[] stalks
    return:
      type: Global.Pomegranate.Stalk[]
    content.vb: Public stalks As Pomegranate.Stalk()
- uid: Global.Pomegranate.stalkSeeds
  commentId: F:Global.Pomegranate.stalkSeeds
  id: stalkSeeds
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: stalkSeeds
  nameWithType: Pomegranate.stalkSeeds
  fullName: Pomegranate.stalkSeeds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.stalkSeeds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] stalkSeeds
    return:
      type: System.Int32[]
    content.vb: Public stalkSeeds As Integer()
- uid: Global.Pomegranate.disconnected
  commentId: F:Global.Pomegranate.disconnected
  id: disconnected
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: disconnected
  nameWithType: Pomegranate.disconnected
  fullName: Pomegranate.disconnected
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.disconnected</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool disconnected
    return:
      type: System.Boolean
    content.vb: Public disconnected As Boolean
- uid: Global.Pomegranate.releaseCounter
  commentId: F:Global.Pomegranate.releaseCounter
  id: releaseCounter
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: releaseCounter
  nameWithType: Pomegranate.releaseCounter
  fullName: Pomegranate.releaseCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.releaseCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int releaseCounter
    return:
      type: System.Int32
    content.vb: Public releaseCounter As Integer
- uid: Global.Pomegranate.smashed
  commentId: F:Global.Pomegranate.smashed
  id: smashed
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: smashed
  nameWithType: Pomegranate.smashed
  fullName: Pomegranate.smashed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.smashed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool smashed
    return:
      type: System.Boolean
    content.vb: Public smashed As Boolean
- uid: Global.Pomegranate.eatDelayCounter
  commentId: F:Global.Pomegranate.eatDelayCounter
  id: eatDelayCounter
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: eatDelayCounter
  nameWithType: Pomegranate.eatDelayCounter
  fullName: Pomegranate.eatDelayCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.eatDelayCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eatDelayCounter
    return:
      type: System.Int32
    content.vb: Public eatDelayCounter As Integer
- uid: Global.Pomegranate.notMovingTimer
  commentId: F:Global.Pomegranate.notMovingTimer
  id: notMovingTimer
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: notMovingTimer
  nameWithType: Pomegranate.notMovingTimer
  fullName: Pomegranate.notMovingTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.notMovingTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int notMovingTimer
    return:
      type: System.Int32
    content.vb: Public notMovingTimer As Integer
- uid: Global.Pomegranate.attachDirection
  commentId: F:Global.Pomegranate.attachDirection
  id: attachDirection
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: attachDirection
  nameWithType: Pomegranate.attachDirection
  fullName: Pomegranate.attachDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.attachDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float attachDirection
    return:
      type: System.Single
    content.vb: Public attachDirection As Single
- uid: Global.Pomegranate.idleRotationOffset
  commentId: F:Global.Pomegranate.idleRotationOffset
  id: idleRotationOffset
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: idleRotationOffset
  nameWithType: Pomegranate.idleRotationOffset
  fullName: Pomegranate.idleRotationOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.idleRotationOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 idleRotationOffset
    return:
      type: UnityEngine.Vector2
    content.vb: Public idleRotationOffset As Vector2
- uid: Global.Pomegranate.killTagHolder
  commentId: F:Global.Pomegranate.killTagHolder
  id: killTagHolder
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: killTagHolder
  nameWithType: Pomegranate.killTagHolder
  fullName: Pomegranate.killTagHolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.killTagHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player killTagHolder
    return:
      type: Global.Player
    content.vb: Public killTagHolder As Player
- uid: Global.Pomegranate.scratchTerrainCollisionData
  commentId: F:Global.Pomegranate.scratchTerrainCollisionData
  id: scratchTerrainCollisionData
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: scratchTerrainCollisionData
  nameWithType: Pomegranate.scratchTerrainCollisionData
  fullName: Pomegranate.scratchTerrainCollisionData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.scratchTerrainCollisionData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SharedPhysics.TerrainCollisionData scratchTerrainCollisionData
    return:
      type: Global.SharedPhysics.TerrainCollisionData
    content.vb: Public scratchTerrainCollisionData As SharedPhysics.TerrainCollisionData
- uid: Global.Pomegranate.data
  commentId: F:Global.Pomegranate.data
  id: data
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: data
  nameWithType: Pomegranate.data
  fullName: Pomegranate.data
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.PomegranateData data
    return:
      type: Global.PlacedObject.PomegranateData
    content.vb: Public data As PlacedObject.PomegranateData
- uid: Global.Pomegranate.baseColor
  commentId: F:Global.Pomegranate.baseColor
  id: baseColor
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: baseColor
  nameWithType: Pomegranate.baseColor
  fullName: Pomegranate.baseColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.baseColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color baseColor
    return:
      type: UnityEngine.Color
    content.vb: Public baseColor As Color
- uid: Global.Pomegranate.shellColor
  commentId: F:Global.Pomegranate.shellColor
  id: shellColor
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: shellColor
  nameWithType: Pomegranate.shellColor
  fullName: Pomegranate.shellColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.shellColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color shellColor
    return:
      type: UnityEngine.Color
    content.vb: Public shellColor As Color
- uid: Global.Pomegranate.rotation
  commentId: F:Global.Pomegranate.rotation
  id: rotation
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: Pomegranate.rotation
  fullName: Pomegranate.rotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 rotation
    return:
      type: UnityEngine.Vector2
    content.vb: Public rotation As Vector2
- uid: Global.Pomegranate.lastRotation
  commentId: F:Global.Pomegranate.lastRotation
  id: lastRotation
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: lastRotation
  nameWithType: Pomegranate.lastRotation
  fullName: Pomegranate.lastRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.lastRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastRotation
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastRotation As Vector2
- uid: Global.Pomegranate.setRotation
  commentId: F:Global.Pomegranate.setRotation
  id: setRotation
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: setRotation
  nameWithType: Pomegranate.setRotation
  fullName: Pomegranate.setRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.setRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? setRotation
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public setRotation As Vector2?
- uid: Global.Pomegranate.refreshSprites
  commentId: F:Global.Pomegranate.refreshSprites
  id: refreshSprites
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: refreshSprites
  nameWithType: Pomegranate.refreshSprites
  fullName: Pomegranate.refreshSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.refreshSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool refreshSprites
    return:
      type: System.Boolean
    content.vb: Public refreshSprites As Boolean
- uid: Global.Pomegranate.smashedBits
  commentId: F:Global.Pomegranate.smashedBits
  id: smashedBits
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: smashedBits
  nameWithType: Pomegranate.smashedBits
  fullName: Pomegranate.smashedBits
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.smashedBits</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] smashedBits
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public smashedBits As Vector2(,)
- uid: Global.Pomegranate.bitSizes
  commentId: F:Global.Pomegranate.bitSizes
  id: bitSizes
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: bitSizes
  nameWithType: Pomegranate.bitSizes
  fullName: Pomegranate.bitSizes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.bitSizes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] bitSizes
    return:
      type: System.Single[,]
    content.vb: Public bitSizes As Single(,)
- uid: Global.Pomegranate.shellHalves
  commentId: F:Global.Pomegranate.shellHalves
  id: shellHalves
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: shellHalves
  nameWithType: Pomegranate.shellHalves
  fullName: Pomegranate.shellHalves
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.shellHalves</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] shellHalves
    return:
      type: System.Single[]
    content.vb: Public shellHalves As Single()
- uid: Global.Pomegranate.shellsInverted
  commentId: F:Global.Pomegranate.shellsInverted
  id: shellsInverted
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: shellsInverted
  nameWithType: Pomegranate.shellsInverted
  fullName: Pomegranate.shellsInverted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.shellsInverted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool shellsInverted
    return:
      type: System.Boolean
    content.vb: Public shellsInverted As Boolean
- uid: Global.Pomegranate.seeds
  commentId: F:Global.Pomegranate.seeds
  id: seeds
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: seeds
  nameWithType: Pomegranate.seeds
  fullName: Pomegranate.seeds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.seeds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] seeds
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public seeds As Vector2()
- uid: Global.Pomegranate.seedSizes
  commentId: F:Global.Pomegranate.seedSizes
  id: seedSizes
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: seedSizes
  nameWithType: Pomegranate.seedSizes
  fullName: Pomegranate.seedSizes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.seedSizes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] seedSizes
    return:
      type: System.Single[]
    content.vb: Public seedSizes As Single()
- uid: Global.Pomegranate.overallSize
  commentId: F:Global.Pomegranate.overallSize
  id: overallSize
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: overallSize
  nameWithType: Pomegranate.overallSize
  fullName: Pomegranate.overallSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.overallSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float overallSize
    return:
      type: System.Single
    content.vb: Public overallSize As Single
- uid: Global.Pomegranate.stabbedFade
  commentId: F:Global.Pomegranate.stabbedFade
  id: stabbedFade
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: stabbedFade
  nameWithType: Pomegranate.stabbedFade
  fullName: Pomegranate.stabbedFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.stabbedFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stabbedFade
    return:
      type: System.Single
    content.vb: Public stabbedFade As Single
- uid: Global.Pomegranate.darkness
  commentId: F:Global.Pomegranate.darkness
  id: darkness
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: darkness
  nameWithType: Pomegranate.darkness
  fullName: Pomegranate.darkness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.darkness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float darkness
    return:
      type: System.Single
    content.vb: Public darkness As Single
- uid: Global.Pomegranate.lastDarkness
  commentId: F:Global.Pomegranate.lastDarkness
  id: lastDarkness
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: lastDarkness
  nameWithType: Pomegranate.lastDarkness
  fullName: Pomegranate.lastDarkness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.lastDarkness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastDarkness
    return:
      type: System.Single
    content.vb: Public lastDarkness As Single
- uid: Global.Pomegranate.#ctor(AbstractPhysicalObject)
  commentId: M:Global.Pomegranate.#ctor(AbstractPhysicalObject)
  id: '#ctor(AbstractPhysicalObject)'
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Pomegranate(AbstractPhysicalObject)
  nameWithType: Pomegranate.Pomegranate(AbstractPhysicalObject)
  fullName: Pomegranate.Pomegranate(AbstractPhysicalObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Pomegranate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Pomegranate(AbstractPhysicalObject abstractPhysicalObject)
    parameters:
    - id: abstractPhysicalObject
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractPhysicalObject</parameter>
            <parameter>M:Pomegranate.#ctor(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(abstractPhysicalObject As AbstractPhysicalObject)
  overload: Global.Pomegranate.#ctor*
  nameWithType.vb: Pomegranate.New(AbstractPhysicalObject)
  fullName.vb: Pomegranate.New(AbstractPhysicalObject)
  name.vb: New(AbstractPhysicalObject)
- uid: Global.Pomegranate.Disconnect
  commentId: M:Global.Pomegranate.Disconnect
  id: Disconnect
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Disconnect()
  nameWithType: Pomegranate.Disconnect()
  fullName: Pomegranate.Disconnect()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Disconnect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Disconnect()
    content.vb: Public Sub Disconnect()
  overload: Global.Pomegranate.Disconnect*
- uid: Global.Pomegranate.Grabbed(Creature.Grasp)
  commentId: M:Global.Pomegranate.Grabbed(Creature.Grasp)
  id: Grabbed(Creature.Grasp)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Grabbed(Grasp)
  nameWithType: Pomegranate.Grabbed(Creature.Grasp)
  fullName: Pomegranate.Grabbed(Creature.Grasp)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Grabbed(Creature.Grasp)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Grabbed(Creature.Grasp grasp)
    parameters:
    - id: grasp
      type: Global.Creature.Grasp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Pomegranate.Grabbed(Creature.Grasp)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Grabbed(grasp As Creature.Grasp)
  overridden: Global.PhysicalObject.Grabbed(Creature.Grasp)
  overload: Global.Pomegranate.Grabbed*
- uid: Global.Pomegranate.Update(System.Boolean)
  commentId: M:Global.Pomegranate.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Pomegranate.Update(bool)
  fullName: Pomegranate.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Pomegranate.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.PlayerCarryableItem.Update(System.Boolean)
  overload: Global.Pomegranate.Update*
  nameWithType.vb: Pomegranate.Update(Boolean)
  fullName.vb: Pomegranate.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Pomegranate.SmashedUpdate(System.Boolean)
  commentId: M:Global.Pomegranate.SmashedUpdate(System.Boolean)
  id: SmashedUpdate(System.Boolean)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: SmashedUpdate(bool)
  nameWithType: Pomegranate.SmashedUpdate(bool)
  fullName: Pomegranate.SmashedUpdate(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.SmashedUpdate(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SmashedUpdate(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Pomegranate.SmashedUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SmashedUpdate(eu As Boolean)
  overload: Global.Pomegranate.SmashedUpdate*
  nameWithType.vb: Pomegranate.SmashedUpdate(Boolean)
  fullName.vb: Pomegranate.SmashedUpdate(Boolean)
  name.vb: SmashedUpdate(Boolean)
- uid: Global.Pomegranate.PlaceInRoom(Room)
  commentId: M:Global.Pomegranate.PlaceInRoom(Room)
  id: PlaceInRoom(Room)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: PlaceInRoom(Room)
  nameWithType: Pomegranate.PlaceInRoom(Room)
  fullName: Pomegranate.PlaceInRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.PlaceInRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void PlaceInRoom(Room placeRoom)
    parameters:
    - id: placeRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placeRoom</parameter>
            <parameter>M:Pomegranate.PlaceInRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub PlaceInRoom(placeRoom As Room)
  overridden: Global.PhysicalObject.PlaceInRoom(Room)
  overload: Global.Pomegranate.PlaceInRoom*
- uid: Global.Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  id: TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: Pomegranate.TerrainImpact(int, IntVector2, float, bool)
  fullName: Pomegranate.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void TerrainImpact(int chunk, IntVector2 direction, float speed, bool firstContact)
    parameters:
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: firstContact
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstContact</parameter>
            <parameter>M:Pomegranate.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub TerrainImpact(chunk As Integer, direction As IntVector2, speed As Single, firstContact As Boolean)
  overridden: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  overload: Global.Pomegranate.TerrainImpact*
  nameWithType.vb: Pomegranate.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: Pomegranate.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
- uid: Global.Pomegranate.EnterSmashedMode
  commentId: M:Global.Pomegranate.EnterSmashedMode
  id: EnterSmashedMode
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: EnterSmashedMode()
  nameWithType: Pomegranate.EnterSmashedMode()
  fullName: Pomegranate.EnterSmashedMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.EnterSmashedMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EnterSmashedMode()
    content.vb: Public Sub EnterSmashedMode()
  overload: Global.Pomegranate.EnterSmashedMode*
- uid: Global.Pomegranate.Smash
  commentId: M:Global.Pomegranate.Smash
  id: Smash
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Smash()
  nameWithType: Pomegranate.Smash()
  fullName: Pomegranate.Smash()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Smash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Smash()
    content.vb: Public Sub Smash()
  overload: Global.Pomegranate.Smash*
- uid: Global.Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)
  id: Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: Collide(PhysicalObject, int, int)
  nameWithType: Pomegranate.Collide(PhysicalObject, int, int)
  fullName: Pomegranate.Collide(PhysicalObject, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Collide(PhysicalObject otherObject, int myChunk, int otherChunk)
    parameters:
    - id: otherObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherObject</parameter>
            <parameter>M:Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: myChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>myChunk</parameter>
            <parameter>M:Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: otherChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherChunk</parameter>
            <parameter>M:Pomegranate.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Collide(otherObject As PhysicalObject, myChunk As Integer, otherChunk As Integer)
  overridden: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  overload: Global.Pomegranate.Collide*
  nameWithType.vb: Pomegranate.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: Pomegranate.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
- uid: Global.Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)
  commentId: M:Global.Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)
  id: ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: ISSeed(SpriteLeaser, RoomCamera, int, float, Color)
  nameWithType: Pomegranate.ISSeed(RoomCamera.SpriteLeaser, RoomCamera, int, float, Color)
  fullName: Pomegranate.ISSeed(RoomCamera.SpriteLeaser, RoomCamera, int, float, UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ISSeed(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, int firstSprite, float size, Color color)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: size
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Pomegranate.ISSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Int32,System.Single,UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub ISSeed(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, firstSprite As Integer, size As Single, color As Color)
  overload: Global.Pomegranate.ISSeed*
  nameWithType.vb: Pomegranate.ISSeed(RoomCamera.SpriteLeaser, RoomCamera, Integer, Single, Color)
  fullName.vb: Pomegranate.ISSeed(RoomCamera.SpriteLeaser, RoomCamera, Integer, Single, UnityEngine.Color)
  name.vb: ISSeed(SpriteLeaser, RoomCamera, Integer, Single, Color)
- uid: Global.Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)
  commentId: M:Global.Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)
  id: DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: DSSeed(SpriteLeaser, RoomCamera, float, Vector2, int, float, Color, Vector2, bool)
  nameWithType: Pomegranate.DSSeed(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2, int, float, Color, Vector2, bool)
  fullName: Pomegranate.DSSeed(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2, int, float, UnityEngine.Color, UnityEngine.Vector2, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void DSSeed(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos, int firstSprite, float size, Color color, Vector2 p, bool visible)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: size
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: p
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: visible
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>visible</parameter>
            <parameter>M:Pomegranate.DSSeed(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2,System.Int32,System.Single,UnityEngine.Color,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub DSSeed(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2, firstSprite As Integer, size As Single, color As Color, p As Vector2, visible As Boolean)
  overload: Global.Pomegranate.DSSeed*
  nameWithType.vb: Pomegranate.DSSeed(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2, Integer, Single, Color, Vector2, Boolean)
  fullName.vb: Pomegranate.DSSeed(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2, Integer, Single, UnityEngine.Color, UnityEngine.Vector2, Boolean)
  name.vb: DSSeed(SpriteLeaser, RoomCamera, Single, Vector2, Integer, Single, Color, Vector2, Boolean)
- uid: Global.Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)
  commentId: M:Global.Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)
  id: APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: APSeed(SpriteLeaser, RoomCamera, RoomPalette, int, float, Color, float)
  nameWithType: Pomegranate.APSeed(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette, int, float, Color, float)
  fullName: Pomegranate.APSeed(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette, int, float, UnityEngine.Color, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void APSeed(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette, int firstSprite, float size, Color color, float darkness)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: size
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: darkness
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>darkness</parameter>
            <parameter>M:Pomegranate.APSeed(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette,System.Int32,System.Single,UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub APSeed(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette, firstSprite As Integer, size As Single, color As Color, darkness As Single)
  overload: Global.Pomegranate.APSeed*
  nameWithType.vb: Pomegranate.APSeed(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette, Integer, Single, Color, Single)
  fullName.vb: Pomegranate.APSeed(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette, Integer, Single, UnityEngine.Color, Single)
  name.vb: APSeed(SpriteLeaser, RoomCamera, RoomPalette, Integer, Single, Color, Single)
- uid: Global.Pomegranate.SmashedBitSprite(System.Int32,System.Int32)
  commentId: M:Global.Pomegranate.SmashedBitSprite(System.Int32,System.Int32)
  id: SmashedBitSprite(System.Int32,System.Int32)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: SmashedBitSprite(int, int)
  nameWithType: Pomegranate.SmashedBitSprite(int, int)
  fullName: Pomegranate.SmashedBitSprite(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.SmashedBitSprite(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SmashedBitSprite(int bit, int shade)
    parameters:
    - id: bit
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bit</parameter>
            <parameter>M:Pomegranate.SmashedBitSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: shade
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shade</parameter>
            <parameter>M:Pomegranate.SmashedBitSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.SmashedBitSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SmashedBitSprite(bit As Integer, shade As Integer) As Integer
  overload: Global.Pomegranate.SmashedBitSprite*
  nameWithType.vb: Pomegranate.SmashedBitSprite(Integer, Integer)
  fullName.vb: Pomegranate.SmashedBitSprite(Integer, Integer)
  name.vb: SmashedBitSprite(Integer, Integer)
- uid: Global.Pomegranate.FirstSeedSprite(System.Int32)
  commentId: M:Global.Pomegranate.FirstSeedSprite(System.Int32)
  id: FirstSeedSprite(System.Int32)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: FirstSeedSprite(int)
  nameWithType: Pomegranate.FirstSeedSprite(int)
  fullName: Pomegranate.FirstSeedSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.FirstSeedSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FirstSeedSprite(int seed)
    parameters:
    - id: seed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>seed</parameter>
            <parameter>M:Pomegranate.FirstSeedSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.FirstSeedSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function FirstSeedSprite(seed As Integer) As Integer
  overload: Global.Pomegranate.FirstSeedSprite*
  nameWithType.vb: Pomegranate.FirstSeedSprite(Integer)
  fullName.vb: Pomegranate.FirstSeedSprite(Integer)
  name.vb: FirstSeedSprite(Integer)
- uid: Global.Pomegranate.BackingSprite(System.Int32)
  commentId: M:Global.Pomegranate.BackingSprite(System.Int32)
  id: BackingSprite(System.Int32)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: BackingSprite(int)
  nameWithType: Pomegranate.BackingSprite(int)
  fullName: Pomegranate.BackingSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.BackingSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BackingSprite(int shade)
    parameters:
    - id: shade
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shade</parameter>
            <parameter>M:Pomegranate.BackingSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.BackingSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function BackingSprite(shade As Integer) As Integer
  overload: Global.Pomegranate.BackingSprite*
  nameWithType.vb: Pomegranate.BackingSprite(Integer)
  fullName.vb: Pomegranate.BackingSprite(Integer)
  name.vb: BackingSprite(Integer)
- uid: Global.Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.Pomegranate.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Pomegranate.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Pomegranate.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Pomegranate.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.Pomegranate.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: Pomegranate.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Pomegranate.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Pomegranate.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.Pomegranate.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: Pomegranate.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: Pomegranate.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:Pomegranate.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.Pomegranate.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.Pomegranate.spearmasterStabbed
  commentId: P:Global.Pomegranate.spearmasterStabbed
  id: spearmasterStabbed
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: spearmasterStabbed
  nameWithType: Pomegranate.spearmasterStabbed
  fullName: Pomegranate.spearmasterStabbed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.spearmasterStabbed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool spearmasterStabbed { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property spearmasterStabbed As Boolean
  overload: Global.Pomegranate.spearmasterStabbed*
- uid: Global.Pomegranate.currentlyEdible
  commentId: P:Global.Pomegranate.currentlyEdible
  id: currentlyEdible
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: currentlyEdible
  nameWithType: Pomegranate.currentlyEdible
  fullName: Pomegranate.currentlyEdible
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.currentlyEdible</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool currentlyEdible { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property currentlyEdible As Boolean
  overload: Global.Pomegranate.currentlyEdible*
- uid: Global.Pomegranate.falling
  commentId: P:Global.Pomegranate.falling
  id: falling
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: falling
  nameWithType: Pomegranate.falling
  fullName: Pomegranate.falling
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.falling</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool falling { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property falling As Boolean
  overload: Global.Pomegranate.falling*
- uid: Global.Pomegranate.AbstrPomegranate
  commentId: P:Global.Pomegranate.AbstrPomegranate
  id: AbstrPomegranate
  parent: Global.Pomegranate
  langs:
  - csharp
  - vb
  name: AbstrPomegranate
  nameWithType: Pomegranate.AbstrPomegranate
  fullName: Pomegranate.AbstrPomegranate
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.AbstrPomegranate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Pomegranate.AbstractPomegranate AbstrPomegranate { get; }
    parameters: []
    return:
      type: Global.Pomegranate.AbstractPomegranate
    content.vb: Public ReadOnly Property AbstrPomegranate As Pomegranate.AbstractPomegranate
  overload: Global.Pomegranate.AbstrPomegranate*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.PlayerCarryableItem
  commentId: T:Global.PlayerCarryableItem
  isExternal: true
  href: PlayerCarryableItem.html
  name: PlayerCarryableItem
  nameWithType: PlayerCarryableItem
  fullName: PlayerCarryableItem
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.PlayerCarryableItem.blink
  commentId: F:Global.PlayerCarryableItem.blink
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_blink
  name: blink
  nameWithType: PlayerCarryableItem.blink
  fullName: PlayerCarryableItem.blink
- uid: Global.PlayerCarryableItem.color
  commentId: F:Global.PlayerCarryableItem.color
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_color
  name: color
  nameWithType: PlayerCarryableItem.color
  fullName: PlayerCarryableItem.color
- uid: Global.PlayerCarryableItem.lastOutsideTerrainPos
  commentId: F:Global.PlayerCarryableItem.lastOutsideTerrainPos
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_lastOutsideTerrainPos
  name: lastOutsideTerrainPos
  nameWithType: PlayerCarryableItem.lastOutsideTerrainPos
  fullName: PlayerCarryableItem.lastOutsideTerrainPos
- uid: Global.PlayerCarryableItem.NewRoom(Room)
  commentId: M:Global.PlayerCarryableItem.NewRoom(Room)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: PlayerCarryableItem.NewRoom(Room)
  fullName: PlayerCarryableItem.NewRoom(Room)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.PlayerCarryableItem.PickedUp(Creature)
  commentId: M:Global.PlayerCarryableItem.PickedUp(Creature)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  name: PickedUp(Creature)
  nameWithType: PlayerCarryableItem.PickedUp(Creature)
  fullName: PlayerCarryableItem.PickedUp(Creature)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.PickedUp(Creature)
    name: PickedUp
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.PickedUp(Creature)
    name: PickedUp
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_PickedUp_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.PlayerCarryableItem.Blink
  commentId: M:Global.PlayerCarryableItem.Blink
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  name: Blink()
  nameWithType: PlayerCarryableItem.Blink()
  fullName: PlayerCarryableItem.Blink()
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Blink
    name: Blink
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Blink
    name: Blink
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Blink
  - name: (
  - name: )
- uid: Global.PlayerCarryableItem.Forbid
  commentId: M:Global.PlayerCarryableItem.Forbid
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  name: Forbid()
  nameWithType: PlayerCarryableItem.Forbid()
  fullName: PlayerCarryableItem.Forbid()
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Forbid
    name: Forbid
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Forbid
    name: Forbid
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Forbid
  - name: (
  - name: )
- uid: Global.PlayerCarryableItem.forbiddenToPlayer
  commentId: P:Global.PlayerCarryableItem.forbiddenToPlayer
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_forbiddenToPlayer
  name: forbiddenToPlayer
  nameWithType: PlayerCarryableItem.forbiddenToPlayer
  fullName: PlayerCarryableItem.forbiddenToPlayer
- uid: Global.PlayerCarryableItem.ThrowPowerFactor
  commentId: P:Global.PlayerCarryableItem.ThrowPowerFactor
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_ThrowPowerFactor
  name: ThrowPowerFactor
  nameWithType: PlayerCarryableItem.ThrowPowerFactor
  fullName: PlayerCarryableItem.ThrowPowerFactor
- uid: Global.PlayerCarryableItem.blinkColor
  commentId: P:Global.PlayerCarryableItem.blinkColor
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_blinkColor
  name: blinkColor
  nameWithType: PlayerCarryableItem.blinkColor
  fullName: PlayerCarryableItem.blinkColor
- uid: Global.PhysicalObject.bodyChunkConnections
  commentId: F:Global.PhysicalObject.bodyChunkConnections
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunkConnections
  name: bodyChunkConnections
  nameWithType: PhysicalObject.bodyChunkConnections
  fullName: PhysicalObject.bodyChunkConnections
- uid: Global.PhysicalObject.grabbedBy
  commentId: F:Global.PhysicalObject.grabbedBy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_grabbedBy
  name: grabbedBy
  nameWithType: PhysicalObject.grabbedBy
  fullName: PhysicalObject.grabbedBy
- uid: Global.PhysicalObject.collisionRange
  commentId: F:Global.PhysicalObject.collisionRange
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionRange
  name: collisionRange
  nameWithType: PhysicalObject.collisionRange
  fullName: PhysicalObject.collisionRange
- uid: Global.PhysicalObject.collisionLayer
  commentId: F:Global.PhysicalObject.collisionLayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionLayer
  name: collisionLayer
  nameWithType: PhysicalObject.collisionLayer
  fullName: PhysicalObject.collisionLayer
- uid: Global.PhysicalObject.abstractPhysicalObject
  commentId: F:Global.PhysicalObject.abstractPhysicalObject
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_abstractPhysicalObject
  name: abstractPhysicalObject
  nameWithType: PhysicalObject.abstractPhysicalObject
  fullName: PhysicalObject.abstractPhysicalObject
- uid: Global.PhysicalObject.surfaceFriction
  commentId: F:Global.PhysicalObject.surfaceFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_surfaceFriction
  name: surfaceFriction
  nameWithType: PhysicalObject.surfaceFriction
  fullName: PhysicalObject.surfaceFriction
- uid: Global.PhysicalObject.bounce
  commentId: F:Global.PhysicalObject.bounce
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bounce
  name: bounce
  nameWithType: PhysicalObject.bounce
  fullName: PhysicalObject.bounce
- uid: Global.PhysicalObject.impactTreshhold
  commentId: F:Global.PhysicalObject.impactTreshhold
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_impactTreshhold
  name: impactTreshhold
  nameWithType: PhysicalObject.impactTreshhold
  fullName: PhysicalObject.impactTreshhold
- uid: Global.PhysicalObject.waterRetardationImmunity
  commentId: F:Global.PhysicalObject.waterRetardationImmunity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterRetardationImmunity
  name: waterRetardationImmunity
  nameWithType: PhysicalObject.waterRetardationImmunity
  fullName: PhysicalObject.waterRetardationImmunity
- uid: Global.PhysicalObject.burrowFriction
  commentId: F:Global.PhysicalObject.burrowFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_burrowFriction
  name: burrowFriction
  nameWithType: PhysicalObject.burrowFriction
  fullName: PhysicalObject.burrowFriction
- uid: Global.PhysicalObject.sticksRespawned
  commentId: F:Global.PhysicalObject.sticksRespawned
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_sticksRespawned
  name: sticksRespawned
  nameWithType: PhysicalObject.sticksRespawned
  fullName: PhysicalObject.sticksRespawned
- uid: Global.PhysicalObject.appendages
  commentId: F:Global.PhysicalObject.appendages
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_appendages
  name: appendages
  nameWithType: PhysicalObject.appendages
  fullName: PhysicalObject.appendages
- uid: Global.PhysicalObject.canBeHitByWeapons
  commentId: F:Global.PhysicalObject.canBeHitByWeapons
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_canBeHitByWeapons
  name: canBeHitByWeapons
  nameWithType: PhysicalObject.canBeHitByWeapons
  fullName: PhysicalObject.canBeHitByWeapons
- uid: Global.PhysicalObject.jollyBeingPointedCounter
  commentId: F:Global.PhysicalObject.jollyBeingPointedCounter
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_jollyBeingPointedCounter
  name: jollyBeingPointedCounter
  nameWithType: PhysicalObject.jollyBeingPointedCounter
  fullName: PhysicalObject.jollyBeingPointedCounter
- uid: Global.PhysicalObject.FirstChunk
  commentId: M:Global.PhysicalObject.FirstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  name: FirstChunk()
  nameWithType: PhysicalObject.FirstChunk()
  fullName: PhysicalObject.FirstChunk()
  spec.csharp:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
- uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  name: PushOutOf(Vector2, float, int)
  nameWithType: PhysicalObject.PushOutOf(Vector2, float, int)
  fullName: PhysicalObject.PushOutOf(UnityEngine.Vector2, float, int)
  nameWithType.vb: PhysicalObject.PushOutOf(Vector2, Single, Integer)
  fullName.vb: PhysicalObject.PushOutOf(UnityEngine.Vector2, Single, Integer)
  name.vb: PushOutOf(Vector2, Single, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  name: ChangeCollisionLayer(int)
  nameWithType: PhysicalObject.ChangeCollisionLayer(int)
  fullName: PhysicalObject.ChangeCollisionLayer(int)
  nameWithType.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  fullName.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  name.vb: ChangeCollisionLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  name: ChangeRippleLayer(int)
  nameWithType: PhysicalObject.ChangeRippleLayer(int)
  fullName: PhysicalObject.ChangeRippleLayer(int)
  nameWithType.vb: PhysicalObject.ChangeRippleLayer(Integer)
  fullName.vb: PhysicalObject.ChangeRippleLayer(Integer)
  name.vb: ChangeRippleLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.HitByWeapon(Weapon)
  commentId: M:Global.PhysicalObject.HitByWeapon(Weapon)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  name: HitByWeapon(Weapon)
  nameWithType: PhysicalObject.HitByWeapon(Weapon)
  fullName: PhysicalObject.HitByWeapon(Weapon)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
- uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  name: IsTileSolid(int, int, int)
  nameWithType: PhysicalObject.IsTileSolid(int, int, int)
  fullName: PhysicalObject.IsTileSolid(int, int, int)
  nameWithType.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  fullName.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  name.vb: IsTileSolid(Integer, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  commentId: M:Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  name: AllGraspsLetGoOfThisObject(bool)
  nameWithType: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  fullName: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  nameWithType.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  fullName.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  name.vb: AllGraspsLetGoOfThisObject(Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  fullName: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  nameWithType.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.InitiateGraphicsModule
  commentId: M:Global.PhysicalObject.InitiateGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  name: InitiateGraphicsModule()
  nameWithType: PhysicalObject.InitiateGraphicsModule()
  fullName: PhysicalObject.InitiateGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.RemoveGraphicsModule
  commentId: M:Global.PhysicalObject.RemoveGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  name: RemoveGraphicsModule()
  nameWithType: PhysicalObject.RemoveGraphicsModule()
  fullName: PhysicalObject.RemoveGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  commentId: M:Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  name: WeightedPush(int, int, Vector2, float)
  nameWithType: PhysicalObject.WeightedPush(int, int, Vector2, float)
  fullName: PhysicalObject.WeightedPush(int, int, UnityEngine.Vector2, float)
  nameWithType.vb: PhysicalObject.WeightedPush(Integer, Integer, Vector2, Single)
  fullName.vb: PhysicalObject.WeightedPush(Integer, Integer, UnityEngine.Vector2, Single)
  name.vb: WeightedPush(Integer, Integer, Vector2, Single)
  spec.csharp:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.RecreateSticksFromAbstract
  commentId: M:Global.PhysicalObject.RecreateSticksFromAbstract
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  name: RecreateSticksFromAbstract()
  nameWithType: PhysicalObject.RecreateSticksFromAbstract()
  fullName: PhysicalObject.RecreateSticksFromAbstract()
  spec.csharp:
  - uid: Global.PhysicalObject.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RecreateSticksFromAbstract
  - name: (
  - name: )
- uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  commentId: M:Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  name: HitByExplosion(float, Explosion, int)
  nameWithType: PhysicalObject.HitByExplosion(float, Explosion, int)
  fullName: PhysicalObject.HitByExplosion(float, Explosion, int)
  nameWithType.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  fullName.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  name.vb: HitByExplosion(Single, Explosion, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.SetLocalGravity(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalGravity(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  name: SetLocalGravity(float)
  nameWithType: PhysicalObject.SetLocalGravity(float)
  fullName: PhysicalObject.SetLocalGravity(float)
  nameWithType.vb: PhysicalObject.SetLocalGravity(Single)
  fullName.vb: PhysicalObject.SetLocalGravity(Single)
  name.vb: SetLocalGravity(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.GetLocalGravity
  commentId: M:Global.PhysicalObject.GetLocalGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  name: GetLocalGravity()
  nameWithType: PhysicalObject.GetLocalGravity()
  fullName: PhysicalObject.GetLocalGravity()
  spec.csharp:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
- uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalAirFriction(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  name: SetLocalAirFriction(float)
  nameWithType: PhysicalObject.SetLocalAirFriction(float)
  fullName: PhysicalObject.SetLocalAirFriction(float)
  nameWithType.vb: PhysicalObject.SetLocalAirFriction(Single)
  fullName.vb: PhysicalObject.SetLocalAirFriction(Single)
  name.vb: SetLocalAirFriction(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.WeatherInertia
  commentId: M:Global.PhysicalObject.WeatherInertia
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  name: WeatherInertia()
  nameWithType: PhysicalObject.WeatherInertia()
  fullName: PhysicalObject.WeatherInertia()
  spec.csharp:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
- uid: Global.PhysicalObject.DisposeGraphicsModule
  commentId: M:Global.PhysicalObject.DisposeGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  name: DisposeGraphicsModule()
  nameWithType: PhysicalObject.DisposeGraphicsModule()
  fullName: PhysicalObject.DisposeGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.bodyChunks
  commentId: P:Global.PhysicalObject.bodyChunks
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunks
  name: bodyChunks
  nameWithType: PhysicalObject.bodyChunks
  fullName: PhysicalObject.bodyChunks
- uid: Global.PhysicalObject.graphicsModule
  commentId: P:Global.PhysicalObject.graphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_graphicsModule
  name: graphicsModule
  nameWithType: PhysicalObject.graphicsModule
  fullName: PhysicalObject.graphicsModule
- uid: Global.PhysicalObject.firstChunk
  commentId: P:Global.PhysicalObject.firstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_firstChunk
  name: firstChunk
  nameWithType: PhysicalObject.firstChunk
  fullName: PhysicalObject.firstChunk
- uid: Global.PhysicalObject.TotalMass
  commentId: P:Global.PhysicalObject.TotalMass
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TotalMass
  name: TotalMass
  nameWithType: PhysicalObject.TotalMass
  fullName: PhysicalObject.TotalMass
- uid: Global.PhysicalObject.RandomChunk
  commentId: P:Global.PhysicalObject.RandomChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RandomChunk
  name: RandomChunk
  nameWithType: PhysicalObject.RandomChunk
  fullName: PhysicalObject.RandomChunk
- uid: Global.PhysicalObject.gravity
  commentId: P:Global.PhysicalObject.gravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_gravity
  name: gravity
  nameWithType: PhysicalObject.gravity
  fullName: PhysicalObject.gravity
- uid: Global.PhysicalObject.airFriction
  commentId: P:Global.PhysicalObject.airFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_airFriction
  name: airFriction
  nameWithType: PhysicalObject.airFriction
  fullName: PhysicalObject.airFriction
- uid: Global.PhysicalObject.waterFriction
  commentId: P:Global.PhysicalObject.waterFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterFriction
  name: waterFriction
  nameWithType: PhysicalObject.waterFriction
  fullName: PhysicalObject.waterFriction
- uid: Global.PhysicalObject.buoyancy
  commentId: P:Global.PhysicalObject.buoyancy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_buoyancy
  name: buoyancy
  nameWithType: PhysicalObject.buoyancy
  fullName: PhysicalObject.buoyancy
- uid: Global.PhysicalObject.windAffectiveness
  commentId: P:Global.PhysicalObject.windAffectiveness
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_windAffectiveness
  name: windAffectiveness
  nameWithType: PhysicalObject.windAffectiveness
  fullName: PhysicalObject.windAffectiveness
- uid: Global.PhysicalObject.VisibilityBonus
  commentId: P:Global.PhysicalObject.VisibilityBonus
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_VisibilityBonus
  name: VisibilityBonus
  nameWithType: PhysicalObject.VisibilityBonus
  fullName: PhysicalObject.VisibilityBonus
- uid: Global.PhysicalObject.GoThroughFloors
  commentId: P:Global.PhysicalObject.GoThroughFloors
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GoThroughFloors
  name: GoThroughFloors
  nameWithType: PhysicalObject.GoThroughFloors
  fullName: PhysicalObject.GoThroughFloors
- uid: Global.PhysicalObject.CollideWithTerrain
  commentId: P:Global.PhysicalObject.CollideWithTerrain
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithTerrain
  name: CollideWithTerrain
  nameWithType: PhysicalObject.CollideWithTerrain
  fullName: PhysicalObject.CollideWithTerrain
- uid: Global.PhysicalObject.CollideWithSlopes
  commentId: P:Global.PhysicalObject.CollideWithSlopes
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithSlopes
  name: CollideWithSlopes
  nameWithType: PhysicalObject.CollideWithSlopes
  fullName: PhysicalObject.CollideWithSlopes
- uid: Global.PhysicalObject.CollideWithObjects
  commentId: P:Global.PhysicalObject.CollideWithObjects
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithObjects
  name: CollideWithObjects
  nameWithType: PhysicalObject.CollideWithObjects
  fullName: PhysicalObject.CollideWithObjects
- uid: Global.PhysicalObject.Buried
  commentId: P:Global.PhysicalObject.Buried
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Buried
  name: Buried
  nameWithType: PhysicalObject.Buried
  fullName: PhysicalObject.Buried
- uid: Global.PhysicalObject.WantsToBurrow
  commentId: P:Global.PhysicalObject.WantsToBurrow
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WantsToBurrow
  name: WantsToBurrow
  nameWithType: PhysicalObject.WantsToBurrow
  fullName: PhysicalObject.WantsToBurrow
- uid: Global.PhysicalObject.Submersion
  commentId: P:Global.PhysicalObject.Submersion
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Submersion
  name: Submersion
  nameWithType: PhysicalObject.Submersion
  fullName: PhysicalObject.Submersion
- uid: Global.PhysicalObject.SandstormImmune
  commentId: P:Global.PhysicalObject.SandstormImmune
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SandstormImmune
  name: SandstormImmune
  nameWithType: PhysicalObject.SandstormImmune
  fullName: PhysicalObject.SandstormImmune
- uid: Global.PhysicalObject.EffectiveRoomGravity
  commentId: P:Global.PhysicalObject.EffectiveRoomGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_EffectiveRoomGravity
  name: EffectiveRoomGravity
  nameWithType: PhysicalObject.EffectiveRoomGravity
  fullName: PhysicalObject.EffectiveRoomGravity
- uid: Global.PhysicalObject.LickedByPlayer
  commentId: P:Global.PhysicalObject.LickedByPlayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_LickedByPlayer
  name: LickedByPlayer
  nameWithType: PhysicalObject.LickedByPlayer
  fullName: PhysicalObject.LickedByPlayer
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Pomegranate.Stalk[]
  isExternal: true
  href: Pomegranate.Stalk.html
  name: Stalk[]
  nameWithType: Pomegranate.Stalk[]
  fullName: Pomegranate.Stalk[]
  nameWithType.vb: Pomegranate.Stalk()
  fullName.vb: Pomegranate.Stalk()
  name.vb: Stalk()
  spec.csharp:
  - uid: Global.Pomegranate.Stalk
    name: Stalk
    isExternal: true
    href: Pomegranate.Stalk.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Pomegranate.Stalk
    name: Stalk
    isExternal: true
    href: Pomegranate.Stalk.html
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.SharedPhysics.TerrainCollisionData
  commentId: T:Global.SharedPhysics.TerrainCollisionData
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.TerrainCollisionData
  nameWithType: SharedPhysics.TerrainCollisionData
  fullName: SharedPhysics.TerrainCollisionData
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
- uid: Global.PlacedObject.PomegranateData
  commentId: T:Global.PlacedObject.PomegranateData
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.PomegranateData
  nameWithType: PlacedObject.PomegranateData
  fullName: PlacedObject.PomegranateData
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.PomegranateData
    name: PomegranateData
    isExternal: true
    href: PlacedObject.PomegranateData.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.PomegranateData
    name: PomegranateData
    isExternal: true
    href: PlacedObject.PomegranateData.html
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Global.Pomegranate.#ctor*
  commentId: Overload:Global.Pomegranate.#ctor
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate__ctor_AbstractPhysicalObject_
  name: Pomegranate
  nameWithType: Pomegranate.Pomegranate
  fullName: Pomegranate.Pomegranate
  nameWithType.vb: Pomegranate.New
  fullName.vb: Pomegranate.New
  name.vb: New
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.Pomegranate.Disconnect*
  commentId: Overload:Global.Pomegranate.Disconnect
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_Disconnect
  name: Disconnect
  nameWithType: Pomegranate.Disconnect
  fullName: Pomegranate.Disconnect
- uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
  commentId: M:Global.PhysicalObject.Grabbed(Creature.Grasp)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  name: Grabbed(Grasp)
  nameWithType: PhysicalObject.Grabbed(Creature.Grasp)
  fullName: PhysicalObject.Grabbed(Creature.Grasp)
  spec.csharp:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
- uid: Global.Pomegranate.Grabbed*
  commentId: Overload:Global.Pomegranate.Grabbed
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_Grabbed_Creature_Grasp_
  name: Grabbed
  nameWithType: Pomegranate.Grabbed
  fullName: Pomegranate.Grabbed
- uid: Global.Creature.Grasp
  commentId: T:Global.Creature.Grasp
  isExternal: true
  href: Creature.html
  name: Creature.Grasp
  nameWithType: Creature.Grasp
  fullName: Creature.Grasp
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
- uid: Global.PlayerCarryableItem.Update(System.Boolean)
  commentId: M:Global.PlayerCarryableItem.Update(System.Boolean)
  parent: Global.PlayerCarryableItem
  isExternal: true
  href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  name: Update(bool)
  nameWithType: PlayerCarryableItem.Update(bool)
  fullName: PlayerCarryableItem.Update(bool)
  nameWithType.vb: PlayerCarryableItem.Update(Boolean)
  fullName.vb: PlayerCarryableItem.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.PlayerCarryableItem.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PlayerCarryableItem.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.PlayerCarryableItem.html#PlayerCarryableItem_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Pomegranate.Update*
  commentId: Overload:Global.Pomegranate.Update
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_Update_System_Boolean_
  name: Update
  nameWithType: Pomegranate.Update
  fullName: Pomegranate.Update
- uid: Global.Pomegranate.SmashedUpdate*
  commentId: Overload:Global.Pomegranate.SmashedUpdate
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_SmashedUpdate_System_Boolean_
  name: SmashedUpdate
  nameWithType: Pomegranate.SmashedUpdate
  fullName: Pomegranate.SmashedUpdate
- uid: Global.PhysicalObject.PlaceInRoom(Room)
  commentId: M:Global.PhysicalObject.PlaceInRoom(Room)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  name: PlaceInRoom(Room)
  nameWithType: PhysicalObject.PlaceInRoom(Room)
  fullName: PhysicalObject.PlaceInRoom(Room)
  spec.csharp:
  - uid: Global.PhysicalObject.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Pomegranate.PlaceInRoom*
  commentId: Overload:Global.Pomegranate.PlaceInRoom
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_PlaceInRoom_Room_
  name: PlaceInRoom
  nameWithType: Pomegranate.PlaceInRoom
  fullName: Pomegranate.PlaceInRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: PhysicalObject.TerrainImpact(int, IntVector2, float, bool)
  fullName: PhysicalObject.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  nameWithType.vb: PhysicalObject.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: PhysicalObject.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Pomegranate.TerrainImpact*
  commentId: Overload:Global.Pomegranate.TerrainImpact
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact
  nameWithType: Pomegranate.TerrainImpact
  fullName: Pomegranate.TerrainImpact
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.Pomegranate.EnterSmashedMode*
  commentId: Overload:Global.Pomegranate.EnterSmashedMode
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_EnterSmashedMode
  name: EnterSmashedMode
  nameWithType: Pomegranate.EnterSmashedMode
  fullName: Pomegranate.EnterSmashedMode
- uid: Global.Pomegranate.Smash*
  commentId: Overload:Global.Pomegranate.Smash
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_Smash
  name: Smash
  nameWithType: Pomegranate.Smash
  fullName: Pomegranate.Smash
- uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide(PhysicalObject, int, int)
  nameWithType: PhysicalObject.Collide(PhysicalObject, int, int)
  fullName: PhysicalObject.Collide(PhysicalObject, int, int)
  nameWithType.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Pomegranate.Collide*
  commentId: Overload:Global.Pomegranate.Collide
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide
  nameWithType: Pomegranate.Collide
  fullName: Pomegranate.Collide
- uid: Global.Pomegranate.ISSeed*
  commentId: Overload:Global.Pomegranate.ISSeed
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_ISSeed_RoomCamera_SpriteLeaser_RoomCamera_System_Int32_System_Single_UnityEngine_Color_
  name: ISSeed
  nameWithType: Pomegranate.ISSeed
  fullName: Pomegranate.ISSeed
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Pomegranate.DSSeed*
  commentId: Overload:Global.Pomegranate.DSSeed
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_DSSeed_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_System_Int32_System_Single_UnityEngine_Color_UnityEngine_Vector2_System_Boolean_
  name: DSSeed
  nameWithType: Pomegranate.DSSeed
  fullName: Pomegranate.DSSeed
- uid: Global.Pomegranate.APSeed*
  commentId: Overload:Global.Pomegranate.APSeed
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_APSeed_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_System_Int32_System_Single_UnityEngine_Color_System_Single_
  name: APSeed
  nameWithType: Pomegranate.APSeed
  fullName: Pomegranate.APSeed
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.Pomegranate.SmashedBitSprite*
  commentId: Overload:Global.Pomegranate.SmashedBitSprite
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_SmashedBitSprite_System_Int32_System_Int32_
  name: SmashedBitSprite
  nameWithType: Pomegranate.SmashedBitSprite
  fullName: Pomegranate.SmashedBitSprite
- uid: Global.Pomegranate.FirstSeedSprite*
  commentId: Overload:Global.Pomegranate.FirstSeedSprite
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_FirstSeedSprite_System_Int32_
  name: FirstSeedSprite
  nameWithType: Pomegranate.FirstSeedSprite
  fullName: Pomegranate.FirstSeedSprite
- uid: Global.Pomegranate.BackingSprite*
  commentId: Overload:Global.Pomegranate.BackingSprite
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_BackingSprite_System_Int32_
  name: BackingSprite
  nameWithType: Pomegranate.BackingSprite
  fullName: Pomegranate.BackingSprite
- uid: Global.Pomegranate.InitiateSprites*
  commentId: Overload:Global.Pomegranate.InitiateSprites
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: Pomegranate.InitiateSprites
  fullName: Pomegranate.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.Pomegranate.DrawSprites*
  commentId: Overload:Global.Pomegranate.DrawSprites
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: Pomegranate.DrawSprites
  fullName: Pomegranate.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Pomegranate.ApplyPalette*
  commentId: Overload:Global.Pomegranate.ApplyPalette
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: Pomegranate.ApplyPalette
  fullName: Pomegranate.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.Pomegranate.AddToContainer*
  commentId: Overload:Global.Pomegranate.AddToContainer
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: Pomegranate.AddToContainer
  fullName: Pomegranate.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.Pomegranate.spearmasterStabbed*
  commentId: Overload:Global.Pomegranate.spearmasterStabbed
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_spearmasterStabbed
  name: spearmasterStabbed
  nameWithType: Pomegranate.spearmasterStabbed
  fullName: Pomegranate.spearmasterStabbed
- uid: Global.Pomegranate.currentlyEdible*
  commentId: Overload:Global.Pomegranate.currentlyEdible
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_currentlyEdible
  name: currentlyEdible
  nameWithType: Pomegranate.currentlyEdible
  fullName: Pomegranate.currentlyEdible
- uid: Global.Pomegranate.falling*
  commentId: Overload:Global.Pomegranate.falling
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_falling
  name: falling
  nameWithType: Pomegranate.falling
  fullName: Pomegranate.falling
- uid: Global.Pomegranate.AbstrPomegranate*
  commentId: Overload:Global.Pomegranate.AbstrPomegranate
  isExternal: true
  href: Global.Pomegranate.html#Pomegranate_AbstrPomegranate
  name: AbstrPomegranate
  nameWithType: Pomegranate.AbstrPomegranate
  fullName: Pomegranate.AbstrPomegranate
- uid: Global.Pomegranate.AbstractPomegranate
  commentId: T:Global.Pomegranate.AbstractPomegranate
  isExternal: true
  href: Pomegranate.html
  name: Pomegranate.AbstractPomegranate
  nameWithType: Pomegranate.AbstractPomegranate
  fullName: Pomegranate.AbstractPomegranate
  spec.csharp:
  - uid: Global.Pomegranate
    name: Pomegranate
    isExternal: true
    href: Pomegranate.html
  - name: .
  - uid: Global.Pomegranate.AbstractPomegranate
    name: AbstractPomegranate
    isExternal: true
    href: Pomegranate.AbstractPomegranate.html
  spec.vb:
  - uid: Global.Pomegranate
    name: Pomegranate
    isExternal: true
    href: Pomegranate.html
  - name: .
  - uid: Global.Pomegranate.AbstractPomegranate
    name: AbstractPomegranate
    isExternal: true
    href: Pomegranate.AbstractPomegranate.html
