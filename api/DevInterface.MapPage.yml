### YamlMime:ManagedReference
items:
- uid: DevInterface.MapPage
  commentId: T:DevInterface.MapPage
  id: MapPage
  parent: DevInterface
  children:
  - DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)
  - DevInterface.MapPage.ClearSprites
  - DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)
  - DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)
  - DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)
  - DevInterface.MapPage.LoadDefMatRects
  - DevInterface.MapPage.LoadMapConfig
  - DevInterface.MapPage.NewMode
  - DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)
  - DevInterface.MapPage.Refresh
  - DevInterface.MapPage.SaveMapConfig
  - DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  - DevInterface.MapPage.SubregionColor(AbstractRoom)
  - DevInterface.MapPage.Update
  - DevInterface.MapPage.attractivenessPanel
  - DevInterface.MapPage.canonView
  - DevInterface.MapPage.map
  - DevInterface.MapPage.modeSpecificNodes
  - DevInterface.MapPage.panPos
  - DevInterface.MapPage.renderOutput
  - DevInterface.MapPage.subRegionsMode
  - DevInterface.MapPage.subregionLabel
  - DevInterface.MapPage.viewNodeLabels
  - DevInterface.MapPage.world
  langs:
  - csharp
  - vb
  name: MapPage
  nameWithType: MapPage
  fullName: DevInterface.MapPage
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DevInterface.MapPage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class MapPage : Page, IDevUISignals'
    content.vb: Public Class MapPage Inherits Page Implements IDevUISignals
  inheritance:
  - System.Object
  - DevInterface.DevUINode
  - DevInterface.Page
  implements:
  - DevInterface.IDevUISignals
  inheritedMembers:
  - DevInterface.Page.name
  - DevInterface.Page.tempNodes
  - DevInterface.DevUINode.owner
  - DevInterface.DevUINode.parentNode
  - DevInterface.DevUINode.IDstring
  - DevInterface.DevUINode.subNodes
  - DevInterface.DevUINode.fSprites
  - DevInterface.DevUINode.fLabels
  - DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  - DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  - DevInterface.DevUINode.RoomSettings
  - DevInterface.DevUINode.TopNode
  - DevInterface.DevUINode.Page
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: DevInterface.MapPage.map
  commentId: F:DevInterface.MapPage.map
  id: map
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: map
  nameWithType: MapPage.map
  fullName: DevInterface.MapPage.map
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.map</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MapObject map
    return:
      type: DevInterface.MapObject
    content.vb: Public map As MapObject
- uid: DevInterface.MapPage.canonView
  commentId: F:DevInterface.MapPage.canonView
  id: canonView
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: canonView
  nameWithType: MapPage.canonView
  fullName: DevInterface.MapPage.canonView
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.canonView</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool canonView
    return:
      type: System.Boolean
    content.vb: Public canonView As Boolean
- uid: DevInterface.MapPage.viewNodeLabels
  commentId: F:DevInterface.MapPage.viewNodeLabels
  id: viewNodeLabels
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: viewNodeLabels
  nameWithType: MapPage.viewNodeLabels
  fullName: DevInterface.MapPage.viewNodeLabels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.viewNodeLabels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool viewNodeLabels
    return:
      type: System.Boolean
    content.vb: Public viewNodeLabels As Boolean
- uid: DevInterface.MapPage.panPos
  commentId: F:DevInterface.MapPage.panPos
  id: panPos
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: panPos
  nameWithType: MapPage.panPos
  fullName: DevInterface.MapPage.panPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.panPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 panPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public panPos As Vector2
- uid: DevInterface.MapPage.renderOutput
  commentId: F:DevInterface.MapPage.renderOutput
  id: renderOutput
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: renderOutput
  nameWithType: MapPage.renderOutput
  fullName: DevInterface.MapPage.renderOutput
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.renderOutput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MapRenderOutput renderOutput
    return:
      type: DevInterface.MapRenderOutput
    content.vb: Public renderOutput As MapRenderOutput
- uid: DevInterface.MapPage.attractivenessPanel
  commentId: F:DevInterface.MapPage.attractivenessPanel
  id: attractivenessPanel
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: attractivenessPanel
  nameWithType: MapPage.attractivenessPanel
  fullName: DevInterface.MapPage.attractivenessPanel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.attractivenessPanel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomAttractivenessPanel attractivenessPanel
    return:
      type: DevInterface.RoomAttractivenessPanel
    content.vb: Public attractivenessPanel As RoomAttractivenessPanel
- uid: DevInterface.MapPage.modeSpecificNodes
  commentId: F:DevInterface.MapPage.modeSpecificNodes
  id: modeSpecificNodes
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: modeSpecificNodes
  nameWithType: MapPage.modeSpecificNodes
  fullName: DevInterface.MapPage.modeSpecificNodes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.modeSpecificNodes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<DevUINode> modeSpecificNodes
    return:
      type: System.Collections.Generic.List{DevInterface.DevUINode}
    content.vb: Public modeSpecificNodes As List(Of DevUINode)
- uid: DevInterface.MapPage.subRegionsMode
  commentId: F:DevInterface.MapPage.subRegionsMode
  id: subRegionsMode
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: subRegionsMode
  nameWithType: MapPage.subRegionsMode
  fullName: DevInterface.MapPage.subRegionsMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.subRegionsMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool subRegionsMode
    return:
      type: System.Boolean
    content.vb: Public subRegionsMode As Boolean
- uid: DevInterface.MapPage.subregionLabel
  commentId: F:DevInterface.MapPage.subregionLabel
  id: subregionLabel
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: subregionLabel
  nameWithType: MapPage.subregionLabel
  fullName: DevInterface.MapPage.subregionLabel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.subregionLabel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DevUILabel subregionLabel
    return:
      type: DevInterface.DevUILabel
    content.vb: Public subregionLabel As DevUILabel
- uid: DevInterface.MapPage.world
  commentId: F:DevInterface.MapPage.world
  id: world
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: world
  nameWithType: MapPage.world
  fullName: DevInterface.MapPage.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.MapPage.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: DevInterface.MapPage.SubregionColor(AbstractRoom)
  commentId: M:DevInterface.MapPage.SubregionColor(AbstractRoom)
  id: SubregionColor(AbstractRoom)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: SubregionColor(AbstractRoom)
  nameWithType: MapPage.SubregionColor(AbstractRoom)
  fullName: DevInterface.MapPage.SubregionColor(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.SubregionColor(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color SubregionColor(AbstractRoom rm)
    parameters:
    - id: rm
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rm</parameter>
            <parameter>M:DevInterface.MapPage.SubregionColor(AbstractRoom)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DevInterface.MapPage.SubregionColor(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SubregionColor(rm As AbstractRoom) As Color
  overload: DevInterface.MapPage.SubregionColor*
- uid: DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)
  commentId: M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)
  id: '#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)'
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: MapPage(DevUI, World, string, DevUINode, string, bool)
  nameWithType: MapPage.MapPage(DevUI, World, string, DevUINode, string, bool)
  fullName: DevInterface.MapPage.MapPage(DevInterface.DevUI, World, string, DevInterface.DevUINode, string, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>DevInterface.MapPage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MapPage(DevUI owner, World world, string IDstring, DevUINode parentNode, string name, bool forceRenderMode)
    parameters:
    - id: owner
      type: DevInterface.DevUI
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: IDstring
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>IDstring</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: parentNode
      type: DevInterface.DevUINode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parentNode</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: forceRenderMode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forceRenderMode</parameter>
            <parameter>M:DevInterface.MapPage.#ctor(DevInterface.DevUI,World,System.String,DevInterface.DevUINode,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As DevUI, world As World, IDstring As String, parentNode As DevUINode, name As String, forceRenderMode As Boolean)
  overload: DevInterface.MapPage.#ctor*
  nameWithType.vb: MapPage.New(DevUI, World, String, DevUINode, String, Boolean)
  fullName.vb: DevInterface.MapPage.New(DevInterface.DevUI, World, String, DevInterface.DevUINode, String, Boolean)
  name.vb: New(DevUI, World, String, DevUINode, String, Boolean)
- uid: DevInterface.MapPage.NewMode
  commentId: M:DevInterface.MapPage.NewMode
  id: NewMode
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: NewMode()
  nameWithType: MapPage.NewMode()
  fullName: DevInterface.MapPage.NewMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.NewMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewMode()
    content.vb: Public Sub NewMode()
  overload: DevInterface.MapPage.NewMode*
- uid: DevInterface.MapPage.Update
  commentId: M:DevInterface.MapPage.Update
  id: Update
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: MapPage.Update()
  fullName: DevInterface.MapPage.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: DevInterface.DevUINode.Update
  overload: DevInterface.MapPage.Update*
- uid: DevInterface.MapPage.ClearSprites
  commentId: M:DevInterface.MapPage.ClearSprites
  id: ClearSprites
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: ClearSprites()
  nameWithType: MapPage.ClearSprites()
  fullName: DevInterface.MapPage.ClearSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.ClearSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ClearSprites()
    content.vb: Public Overrides Sub ClearSprites()
  overridden: DevInterface.DevUINode.ClearSprites
  overload: DevInterface.MapPage.ClearSprites*
- uid: DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  commentId: M:DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  id: Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: Signal(DevUISignalType, DevUINode, string)
  nameWithType: MapPage.Signal(DevUISignalType, DevUINode, string)
  fullName: DevInterface.MapPage.Signal(DevInterface.DevUISignalType, DevInterface.DevUINode, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Signal(DevUISignalType type, DevUINode sender, string message)
    parameters:
    - id: type
      type: DevInterface.DevUISignalType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)</parameter>
          </include>
        </markup>
    - id: sender
      type: DevInterface.DevUINode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)</parameter>
          </include>
        </markup>
    - id: message
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:DevInterface.MapPage.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Signal(type As DevUISignalType, sender As DevUINode, message As String)
  overridden: DevInterface.Page.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  overload: DevInterface.MapPage.Signal*
  nameWithType.vb: MapPage.Signal(DevUISignalType, DevUINode, String)
  fullName.vb: DevInterface.MapPage.Signal(DevInterface.DevUISignalType, DevInterface.DevUINode, String)
  name.vb: Signal(DevUISignalType, DevUINode, String)
- uid: DevInterface.MapPage.Refresh
  commentId: M:DevInterface.MapPage.Refresh
  id: Refresh
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: MapPage.Refresh()
  fullName: DevInterface.MapPage.Refresh()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.Refresh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Refresh()
    content.vb: Public Overrides Sub Refresh()
  overridden: DevInterface.Page.Refresh
  overload: DevInterface.MapPage.Refresh*
- uid: DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)
  commentId: M:DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)
  id: ExitVisPos(System.Int32,System.Int32)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: ExitVisPos(int, int)
  nameWithType: MapPage.ExitVisPos(int, int)
  fullName: DevInterface.MapPage.ExitVisPos(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ExitVisPos(int room, int node)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DevInterface.MapPage.ExitVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ExitVisPos(room As Integer, node As Integer) As Vector2
  overload: DevInterface.MapPage.ExitVisPos*
  nameWithType.vb: MapPage.ExitVisPos(Integer, Integer)
  fullName.vb: DevInterface.MapPage.ExitVisPos(Integer, Integer)
  name.vb: ExitVisPos(Integer, Integer)
- uid: DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)
  commentId: M:DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)
  id: NodeVisPos(System.Int32,System.Int32)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: NodeVisPos(int, int)
  nameWithType: MapPage.NodeVisPos(int, int)
  fullName: DevInterface.MapPage.NodeVisPos(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 NodeVisPos(int room, int node)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DevInterface.MapPage.NodeVisPos(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function NodeVisPos(room As Integer, node As Integer) As Vector2
  overload: DevInterface.MapPage.NodeVisPos*
  nameWithType.vb: MapPage.NodeVisPos(Integer, Integer)
  fullName.vb: DevInterface.MapPage.NodeVisPos(Integer, Integer)
  name.vb: NodeVisPos(Integer, Integer)
- uid: DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)
  commentId: M:DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)
  id: GetMiniMapOfRoom(System.Int32)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: GetMiniMapOfRoom(int)
  nameWithType: MapPage.GetMiniMapOfRoom(int)
  fullName: DevInterface.MapPage.GetMiniMapOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MiniMap GetMiniMapOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: DevInterface.MiniMap
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DevInterface.MapPage.GetMiniMapOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetMiniMapOfRoom(room As Integer) As MiniMap
  overload: DevInterface.MapPage.GetMiniMapOfRoom*
  nameWithType.vb: MapPage.GetMiniMapOfRoom(Integer)
  fullName.vb: DevInterface.MapPage.GetMiniMapOfRoom(Integer)
  name.vb: GetMiniMapOfRoom(Integer)
- uid: DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)
  commentId: M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)
  id: CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: CreatureVisPos(WorldCoordinate, bool, bool)
  nameWithType: MapPage.CreatureVisPos(WorldCoordinate, bool, bool)
  fullName: DevInterface.MapPage.CreatureVisPos(WorldCoordinate, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 CreatureVisPos(WorldCoordinate critPos, bool inDen, bool stack)
    parameters:
    - id: critPos
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>critPos</parameter>
            <parameter>M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: inDen
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inDen</parameter>
            <parameter>M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: stack
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stack</parameter>
            <parameter>M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:DevInterface.MapPage.CreatureVisPos(WorldCoordinate,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatureVisPos(critPos As WorldCoordinate, inDen As Boolean, stack As Boolean) As Vector2
  overload: DevInterface.MapPage.CreatureVisPos*
  nameWithType.vb: MapPage.CreatureVisPos(WorldCoordinate, Boolean, Boolean)
  fullName.vb: DevInterface.MapPage.CreatureVisPos(WorldCoordinate, Boolean, Boolean)
  name.vb: CreatureVisPos(WorldCoordinate, Boolean, Boolean)
- uid: DevInterface.MapPage.SaveMapConfig
  commentId: M:DevInterface.MapPage.SaveMapConfig
  id: SaveMapConfig
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: SaveMapConfig()
  nameWithType: MapPage.SaveMapConfig()
  fullName: DevInterface.MapPage.SaveMapConfig()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.SaveMapConfig</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveMapConfig()
    content.vb: Public Sub SaveMapConfig()
  overload: DevInterface.MapPage.SaveMapConfig*
- uid: DevInterface.MapPage.LoadMapConfig
  commentId: M:DevInterface.MapPage.LoadMapConfig
  id: LoadMapConfig
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: LoadMapConfig()
  nameWithType: MapPage.LoadMapConfig()
  fullName: DevInterface.MapPage.LoadMapConfig()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.LoadMapConfig</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadMapConfig()
    content.vb: Public Sub LoadMapConfig()
  overload: DevInterface.MapPage.LoadMapConfig*
- uid: DevInterface.MapPage.LoadDefMatRects
  commentId: M:DevInterface.MapPage.LoadDefMatRects
  id: LoadDefMatRects
  parent: DevInterface.MapPage
  langs:
  - csharp
  - vb
  name: LoadDefMatRects()
  nameWithType: MapPage.LoadDefMatRects()
  fullName: DevInterface.MapPage.LoadDefMatRects()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.MapPage.LoadDefMatRects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadDefMatRects()
    content.vb: Public Sub LoadDefMatRects()
  overload: DevInterface.MapPage.LoadDefMatRects*
references:
- uid: DevInterface
  commentId: N:DevInterface
  isExternal: true
  href: DevInterface.html
  name: DevInterface
  nameWithType: DevInterface
  fullName: DevInterface
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: DevInterface.DevUINode
  commentId: T:DevInterface.DevUINode
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUINode.html
  name: DevUINode
  nameWithType: DevUINode
  fullName: DevInterface.DevUINode
- uid: DevInterface.Page
  commentId: T:DevInterface.Page
  parent: DevInterface
  isExternal: true
  href: DevInterface.Page.html
  name: Page
  nameWithType: Page
  fullName: DevInterface.Page
- uid: DevInterface.IDevUISignals
  commentId: T:DevInterface.IDevUISignals
  parent: DevInterface
  isExternal: true
  href: DevInterface.IDevUISignals.html
  name: IDevUISignals
  nameWithType: IDevUISignals
  fullName: DevInterface.IDevUISignals
- uid: DevInterface.Page.name
  commentId: F:DevInterface.Page.name
  parent: DevInterface.Page
  isExternal: true
  href: DevInterface.Page.html#DevInterface_Page_name
  name: name
  nameWithType: Page.name
  fullName: DevInterface.Page.name
- uid: DevInterface.Page.tempNodes
  commentId: F:DevInterface.Page.tempNodes
  parent: DevInterface.Page
  isExternal: true
  href: DevInterface.Page.html#DevInterface_Page_tempNodes
  name: tempNodes
  nameWithType: Page.tempNodes
  fullName: DevInterface.Page.tempNodes
- uid: DevInterface.DevUINode.owner
  commentId: F:DevInterface.DevUINode.owner
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_owner
  name: owner
  nameWithType: DevUINode.owner
  fullName: DevInterface.DevUINode.owner
- uid: DevInterface.DevUINode.parentNode
  commentId: F:DevInterface.DevUINode.parentNode
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_parentNode
  name: parentNode
  nameWithType: DevUINode.parentNode
  fullName: DevInterface.DevUINode.parentNode
- uid: DevInterface.DevUINode.IDstring
  commentId: F:DevInterface.DevUINode.IDstring
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_IDstring
  name: IDstring
  nameWithType: DevUINode.IDstring
  fullName: DevInterface.DevUINode.IDstring
- uid: DevInterface.DevUINode.subNodes
  commentId: F:DevInterface.DevUINode.subNodes
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_subNodes
  name: subNodes
  nameWithType: DevUINode.subNodes
  fullName: DevInterface.DevUINode.subNodes
- uid: DevInterface.DevUINode.fSprites
  commentId: F:DevInterface.DevUINode.fSprites
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_fSprites
  name: fSprites
  nameWithType: DevUINode.fSprites
  fullName: DevInterface.DevUINode.fSprites
- uid: DevInterface.DevUINode.fLabels
  commentId: F:DevInterface.DevUINode.fLabels
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_fLabels
  name: fLabels
  nameWithType: DevUINode.fLabels
  fullName: DevInterface.DevUINode.fLabels
- uid: DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  commentId: M:DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveSprite_System_Int32_UnityEngine_Vector2_
  name: MoveSprite(int, Vector2)
  nameWithType: DevUINode.MoveSprite(int, Vector2)
  fullName: DevInterface.DevUINode.MoveSprite(int, UnityEngine.Vector2)
  nameWithType.vb: DevUINode.MoveSprite(Integer, Vector2)
  fullName.vb: DevInterface.DevUINode.MoveSprite(Integer, UnityEngine.Vector2)
  name.vb: MoveSprite(Integer, Vector2)
  spec.csharp:
  - uid: DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
    name: MoveSprite
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveSprite_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
    name: MoveSprite
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveSprite_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  commentId: M:DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveLabel_System_Int32_UnityEngine_Vector2_
  name: MoveLabel(int, Vector2)
  nameWithType: DevUINode.MoveLabel(int, Vector2)
  fullName: DevInterface.DevUINode.MoveLabel(int, UnityEngine.Vector2)
  nameWithType.vb: DevUINode.MoveLabel(Integer, Vector2)
  fullName.vb: DevInterface.DevUINode.MoveLabel(Integer, UnityEngine.Vector2)
  name.vb: MoveLabel(Integer, Vector2)
  spec.csharp:
  - uid: DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
    name: MoveLabel
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveLabel_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
    name: MoveLabel
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveLabel_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: DevInterface.DevUINode.RoomSettings
  commentId: P:DevInterface.DevUINode.RoomSettings
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_RoomSettings
  name: RoomSettings
  nameWithType: DevUINode.RoomSettings
  fullName: DevInterface.DevUINode.RoomSettings
- uid: DevInterface.DevUINode.TopNode
  commentId: P:DevInterface.DevUINode.TopNode
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_TopNode
  name: TopNode
  nameWithType: DevUINode.TopNode
  fullName: DevInterface.DevUINode.TopNode
- uid: DevInterface.DevUINode.Page
  commentId: P:DevInterface.DevUINode.Page
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_Page
  name: Page
  nameWithType: DevUINode.Page
  fullName: DevInterface.DevUINode.Page
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DevInterface.MapObject
  commentId: T:DevInterface.MapObject
  parent: DevInterface
  isExternal: true
  href: DevInterface.MapObject.html
  name: MapObject
  nameWithType: MapObject
  fullName: DevInterface.MapObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: DevInterface.MapRenderOutput
  commentId: T:DevInterface.MapRenderOutput
  parent: DevInterface
  isExternal: true
  href: DevInterface.MapRenderOutput.html
  name: MapRenderOutput
  nameWithType: MapRenderOutput
  fullName: DevInterface.MapRenderOutput
- uid: DevInterface.RoomAttractivenessPanel
  commentId: T:DevInterface.RoomAttractivenessPanel
  parent: DevInterface
  isExternal: true
  href: DevInterface.RoomAttractivenessPanel.html
  name: RoomAttractivenessPanel
  nameWithType: RoomAttractivenessPanel
  fullName: DevInterface.RoomAttractivenessPanel
- uid: System.Collections.Generic.List{DevInterface.DevUINode}
  commentId: T:System.Collections.Generic.List{DevInterface.DevUINode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DevUINode>
  nameWithType: List<DevUINode>
  fullName: System.Collections.Generic.List<DevInterface.DevUINode>
  nameWithType.vb: List(Of DevUINode)
  fullName.vb: System.Collections.Generic.List(Of DevInterface.DevUINode)
  name.vb: List(Of DevUINode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: DevInterface.DevUILabel
  commentId: T:DevInterface.DevUILabel
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUILabel.html
  name: DevUILabel
  nameWithType: DevUILabel
  fullName: DevInterface.DevUILabel
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: DevInterface.MapPage.SubregionColor*
  commentId: Overload:DevInterface.MapPage.SubregionColor
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_SubregionColor_AbstractRoom_
  name: SubregionColor
  nameWithType: MapPage.SubregionColor
  fullName: DevInterface.MapPage.SubregionColor
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: DevInterface.MapPage.#ctor*
  commentId: Overload:DevInterface.MapPage.#ctor
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage__ctor_DevInterface_DevUI_World_System_String_DevInterface_DevUINode_System_String_System_Boolean_
  name: MapPage
  nameWithType: MapPage.MapPage
  fullName: DevInterface.MapPage.MapPage
  nameWithType.vb: MapPage.New
  fullName.vb: DevInterface.MapPage.New
  name.vb: New
- uid: DevInterface.DevUI
  commentId: T:DevInterface.DevUI
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUI.html
  name: DevUI
  nameWithType: DevUI
  fullName: DevInterface.DevUI
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: DevInterface.MapPage.NewMode*
  commentId: Overload:DevInterface.MapPage.NewMode
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_NewMode
  name: NewMode
  nameWithType: MapPage.NewMode
  fullName: DevInterface.MapPage.NewMode
- uid: DevInterface.DevUINode.Update
  commentId: M:DevInterface.DevUINode.Update
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_Update
  name: Update()
  nameWithType: DevUINode.Update()
  fullName: DevInterface.DevUINode.Update()
  spec.csharp:
  - uid: DevInterface.DevUINode.Update
    name: Update
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_Update
  - name: (
  - name: )
  spec.vb:
  - uid: DevInterface.DevUINode.Update
    name: Update
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_Update
  - name: (
  - name: )
- uid: DevInterface.MapPage.Update*
  commentId: Overload:DevInterface.MapPage.Update
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_Update
  name: Update
  nameWithType: MapPage.Update
  fullName: DevInterface.MapPage.Update
- uid: DevInterface.DevUINode.ClearSprites
  commentId: M:DevInterface.DevUINode.ClearSprites
  parent: DevInterface.DevUINode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_ClearSprites
  name: ClearSprites()
  nameWithType: DevUINode.ClearSprites()
  fullName: DevInterface.DevUINode.ClearSprites()
  spec.csharp:
  - uid: DevInterface.DevUINode.ClearSprites
    name: ClearSprites
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_ClearSprites
  - name: (
  - name: )
  spec.vb:
  - uid: DevInterface.DevUINode.ClearSprites
    name: ClearSprites
    isExternal: true
    href: DevInterface.DevUINode.html#DevInterface_DevUINode_ClearSprites
  - name: (
  - name: )
- uid: DevInterface.MapPage.ClearSprites*
  commentId: Overload:DevInterface.MapPage.ClearSprites
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_ClearSprites
  name: ClearSprites
  nameWithType: MapPage.ClearSprites
  fullName: DevInterface.MapPage.ClearSprites
- uid: DevInterface.Page.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  commentId: M:DevInterface.Page.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
  parent: DevInterface.Page
  isExternal: true
  href: DevInterface.Page.html#DevInterface_Page_Signal_DevInterface_DevUISignalType_DevInterface_DevUINode_System_String_
  name: Signal(DevUISignalType, DevUINode, string)
  nameWithType: Page.Signal(DevUISignalType, DevUINode, string)
  fullName: DevInterface.Page.Signal(DevInterface.DevUISignalType, DevInterface.DevUINode, string)
  nameWithType.vb: Page.Signal(DevUISignalType, DevUINode, String)
  fullName.vb: DevInterface.Page.Signal(DevInterface.DevUISignalType, DevInterface.DevUINode, String)
  name.vb: Signal(DevUISignalType, DevUINode, String)
  spec.csharp:
  - uid: DevInterface.Page.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
    name: Signal
    isExternal: true
    href: DevInterface.Page.html#DevInterface_Page_Signal_DevInterface_DevUISignalType_DevInterface_DevUINode_System_String_
  - name: (
  - uid: DevInterface.DevUISignalType
    name: DevUISignalType
    isExternal: true
    href: DevInterface.DevUISignalType.html
  - name: ','
  - name: " "
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: DevInterface.Page.Signal(DevInterface.DevUISignalType,DevInterface.DevUINode,System.String)
    name: Signal
    isExternal: true
    href: DevInterface.Page.html#DevInterface_Page_Signal_DevInterface_DevUISignalType_DevInterface_DevUINode_System_String_
  - name: (
  - uid: DevInterface.DevUISignalType
    name: DevUISignalType
    isExternal: true
    href: DevInterface.DevUISignalType.html
  - name: ','
  - name: " "
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: DevInterface.MapPage.Signal*
  commentId: Overload:DevInterface.MapPage.Signal
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_Signal_DevInterface_DevUISignalType_DevInterface_DevUINode_System_String_
  name: Signal
  nameWithType: MapPage.Signal
  fullName: DevInterface.MapPage.Signal
- uid: DevInterface.DevUISignalType
  commentId: T:DevInterface.DevUISignalType
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUISignalType.html
  name: DevUISignalType
  nameWithType: DevUISignalType
  fullName: DevInterface.DevUISignalType
- uid: DevInterface.Page.Refresh
  commentId: M:DevInterface.Page.Refresh
  parent: DevInterface.Page
  isExternal: true
  href: DevInterface.Page.html#DevInterface_Page_Refresh
  name: Refresh()
  nameWithType: Page.Refresh()
  fullName: DevInterface.Page.Refresh()
  spec.csharp:
  - uid: DevInterface.Page.Refresh
    name: Refresh
    isExternal: true
    href: DevInterface.Page.html#DevInterface_Page_Refresh
  - name: (
  - name: )
  spec.vb:
  - uid: DevInterface.Page.Refresh
    name: Refresh
    isExternal: true
    href: DevInterface.Page.html#DevInterface_Page_Refresh
  - name: (
  - name: )
- uid: DevInterface.MapPage.Refresh*
  commentId: Overload:DevInterface.MapPage.Refresh
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_Refresh
  name: Refresh
  nameWithType: MapPage.Refresh
  fullName: DevInterface.MapPage.Refresh
- uid: DevInterface.MapPage.ExitVisPos*
  commentId: Overload:DevInterface.MapPage.ExitVisPos
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_ExitVisPos_System_Int32_System_Int32_
  name: ExitVisPos
  nameWithType: MapPage.ExitVisPos
  fullName: DevInterface.MapPage.ExitVisPos
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: DevInterface.MapPage.NodeVisPos*
  commentId: Overload:DevInterface.MapPage.NodeVisPos
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_NodeVisPos_System_Int32_System_Int32_
  name: NodeVisPos
  nameWithType: MapPage.NodeVisPos
  fullName: DevInterface.MapPage.NodeVisPos
- uid: DevInterface.MapPage.GetMiniMapOfRoom*
  commentId: Overload:DevInterface.MapPage.GetMiniMapOfRoom
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_GetMiniMapOfRoom_System_Int32_
  name: GetMiniMapOfRoom
  nameWithType: MapPage.GetMiniMapOfRoom
  fullName: DevInterface.MapPage.GetMiniMapOfRoom
- uid: DevInterface.MiniMap
  commentId: T:DevInterface.MiniMap
  parent: DevInterface
  isExternal: true
  href: DevInterface.MiniMap.html
  name: MiniMap
  nameWithType: MiniMap
  fullName: DevInterface.MiniMap
- uid: DevInterface.MapPage.CreatureVisPos*
  commentId: Overload:DevInterface.MapPage.CreatureVisPos
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_CreatureVisPos_WorldCoordinate_System_Boolean_System_Boolean_
  name: CreatureVisPos
  nameWithType: MapPage.CreatureVisPos
  fullName: DevInterface.MapPage.CreatureVisPos
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: DevInterface.MapPage.SaveMapConfig*
  commentId: Overload:DevInterface.MapPage.SaveMapConfig
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_SaveMapConfig
  name: SaveMapConfig
  nameWithType: MapPage.SaveMapConfig
  fullName: DevInterface.MapPage.SaveMapConfig
- uid: DevInterface.MapPage.LoadMapConfig*
  commentId: Overload:DevInterface.MapPage.LoadMapConfig
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_LoadMapConfig
  name: LoadMapConfig
  nameWithType: MapPage.LoadMapConfig
  fullName: DevInterface.MapPage.LoadMapConfig
- uid: DevInterface.MapPage.LoadDefMatRects*
  commentId: Overload:DevInterface.MapPage.LoadDefMatRects
  isExternal: true
  href: DevInterface.MapPage.html#DevInterface_MapPage_LoadDefMatRects
  name: LoadDefMatRects
  nameWithType: MapPage.LoadDefMatRects
  fullName: DevInterface.MapPage.LoadDefMatRects
