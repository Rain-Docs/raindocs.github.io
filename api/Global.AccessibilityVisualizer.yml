### YamlMime:ManagedReference
items:
- uid: Global.AccessibilityVisualizer
  commentId: T:Global.AccessibilityVisualizer
  id: AccessibilityVisualizer
  parent: Global
  children:
  - Global.AccessibilityVisualizer.#ctor(RainWorldGame)
  - Global.AccessibilityVisualizer.ClearSprites
  - Global.AccessibilityVisualizer.Destroy
  - Global.AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)
  - Global.AccessibilityVisualizer.Update
  - Global.AccessibilityVisualizer.game
  langs:
  - csharp
  - vb
  name: AccessibilityVisualizer
  nameWithType: AccessibilityVisualizer
  fullName: AccessibilityVisualizer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AccessibilityVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AccessibilityVisualizer
    content.vb: Public Class AccessibilityVisualizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AccessibilityVisualizer.game
  commentId: F:Global.AccessibilityVisualizer.game
  id: game
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: game
  nameWithType: AccessibilityVisualizer.game
  fullName: AccessibilityVisualizer.game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AccessibilityVisualizer.game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainWorldGame game
    return:
      type: Global.RainWorldGame
    content.vb: Public game As RainWorldGame
- uid: Global.AccessibilityVisualizer.#ctor(RainWorldGame)
  commentId: M:Global.AccessibilityVisualizer.#ctor(RainWorldGame)
  id: '#ctor(RainWorldGame)'
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: AccessibilityVisualizer(RainWorldGame)
  nameWithType: AccessibilityVisualizer.AccessibilityVisualizer(RainWorldGame)
  fullName: AccessibilityVisualizer.AccessibilityVisualizer(RainWorldGame)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AccessibilityVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AccessibilityVisualizer(RainWorldGame game)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:AccessibilityVisualizer.#ctor(RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(game As RainWorldGame)
  overload: Global.AccessibilityVisualizer.#ctor*
  nameWithType.vb: AccessibilityVisualizer.New(RainWorldGame)
  fullName.vb: AccessibilityVisualizer.New(RainWorldGame)
  name.vb: New(RainWorldGame)
- uid: Global.AccessibilityVisualizer.Update
  commentId: M:Global.AccessibilityVisualizer.Update
  id: Update
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: AccessibilityVisualizer.Update()
  fullName: AccessibilityVisualizer.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AccessibilityVisualizer.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.AccessibilityVisualizer.Update*
- uid: Global.AccessibilityVisualizer.Destroy
  commentId: M:Global.AccessibilityVisualizer.Destroy
  id: Destroy
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: AccessibilityVisualizer.Destroy()
  fullName: AccessibilityVisualizer.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AccessibilityVisualizer.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: Global.AccessibilityVisualizer.Destroy*
- uid: Global.AccessibilityVisualizer.ClearSprites
  commentId: M:Global.AccessibilityVisualizer.ClearSprites
  id: ClearSprites
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: ClearSprites()
  nameWithType: AccessibilityVisualizer.ClearSprites()
  fullName: AccessibilityVisualizer.ClearSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AccessibilityVisualizer.ClearSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClearSprites()
    content.vb: Public Sub ClearSprites()
  overload: Global.AccessibilityVisualizer.ClearSprites*
- uid: Global.AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)
  commentId: M:Global.AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)
  id: MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)
  parent: Global.AccessibilityVisualizer
  langs:
  - csharp
  - vb
  name: MarkSpriteAccessible(IntVector2, bool)
  nameWithType: AccessibilityVisualizer.MarkSpriteAccessible(IntVector2, bool)
  fullName: AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MarkSpriteAccessible(IntVector2 pos, bool secondPass)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: secondPass
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>secondPass</parameter>
            <parameter>M:AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MarkSpriteAccessible(pos As IntVector2, secondPass As Boolean)
  overload: Global.AccessibilityVisualizer.MarkSpriteAccessible*
  nameWithType.vb: AccessibilityVisualizer.MarkSpriteAccessible(IntVector2, Boolean)
  fullName.vb: AccessibilityVisualizer.MarkSpriteAccessible(RWCustom.IntVector2, Boolean)
  name.vb: MarkSpriteAccessible(IntVector2, Boolean)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.AccessibilityVisualizer.#ctor*
  commentId: Overload:Global.AccessibilityVisualizer.#ctor
  isExternal: true
  href: Global.AccessibilityVisualizer.html#AccessibilityVisualizer__ctor_RainWorldGame_
  name: AccessibilityVisualizer
  nameWithType: AccessibilityVisualizer.AccessibilityVisualizer
  fullName: AccessibilityVisualizer.AccessibilityVisualizer
  nameWithType.vb: AccessibilityVisualizer.New
  fullName.vb: AccessibilityVisualizer.New
  name.vb: New
- uid: Global.AccessibilityVisualizer.Update*
  commentId: Overload:Global.AccessibilityVisualizer.Update
  isExternal: true
  href: Global.AccessibilityVisualizer.html#AccessibilityVisualizer_Update
  name: Update
  nameWithType: AccessibilityVisualizer.Update
  fullName: AccessibilityVisualizer.Update
- uid: Global.AccessibilityVisualizer.Destroy*
  commentId: Overload:Global.AccessibilityVisualizer.Destroy
  isExternal: true
  href: Global.AccessibilityVisualizer.html#AccessibilityVisualizer_Destroy
  name: Destroy
  nameWithType: AccessibilityVisualizer.Destroy
  fullName: AccessibilityVisualizer.Destroy
- uid: Global.AccessibilityVisualizer.ClearSprites*
  commentId: Overload:Global.AccessibilityVisualizer.ClearSprites
  isExternal: true
  href: Global.AccessibilityVisualizer.html#AccessibilityVisualizer_ClearSprites
  name: ClearSprites
  nameWithType: AccessibilityVisualizer.ClearSprites
  fullName: AccessibilityVisualizer.ClearSprites
- uid: Global.AccessibilityVisualizer.MarkSpriteAccessible*
  commentId: Overload:Global.AccessibilityVisualizer.MarkSpriteAccessible
  isExternal: true
  href: Global.AccessibilityVisualizer.html#AccessibilityVisualizer_MarkSpriteAccessible_RWCustom_IntVector2_System_Boolean_
  name: MarkSpriteAccessible
  nameWithType: AccessibilityVisualizer.MarkSpriteAccessible
  fullName: AccessibilityVisualizer.MarkSpriteAccessible
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
