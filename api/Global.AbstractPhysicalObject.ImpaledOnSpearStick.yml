### YamlMime:ManagedReference
items:
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  commentId: T:Global.AbstractPhysicalObject.ImpaledOnSpearStick
  id: AbstractPhysicalObject.ImpaledOnSpearStick
  parent: Global
  children:
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.chunk
  - Global.AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition
  langs:
  - csharp
  - vb
  name: AbstractPhysicalObject.ImpaledOnSpearStick
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractPhysicalObject.ImpaledOnSpearStick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class AbstractPhysicalObject.ImpaledOnSpearStick : AbstractPhysicalObject.AbstractObjectStick'
    content.vb: Public Class AbstractPhysicalObject.ImpaledOnSpearStick Inherits AbstractPhysicalObject.AbstractObjectStick
  inheritance:
  - System.Object
  - Global.AbstractPhysicalObject.AbstractObjectStick
  inheritedMembers:
  - Global.AbstractPhysicalObject.AbstractObjectStick.A
  - Global.AbstractPhysicalObject.AbstractObjectStick.B
  - Global.AbstractPhysicalObject.AbstractObjectStick.unrecognizedAttributes
  - Global.AbstractPhysicalObject.AbstractObjectStick.Deactivate
  - Global.AbstractPhysicalObject.AbstractObjectStick.FromString(System.String[],AbstractRoom)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.chunk
  commentId: F:Global.AbstractPhysicalObject.ImpaledOnSpearStick.chunk
  id: chunk
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: chunk
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.chunk
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.chunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.ImpaledOnSpearStick.chunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int chunk
    return:
      type: System.Int32
    content.vb: Public chunk As Integer
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition
  commentId: F:Global.AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition
  id: onSpearPosition
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: onSpearPosition
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractPhysicalObject.ImpaledOnSpearStick.onSpearPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int onSpearPosition
    return:
      type: System.Int32
    content.vb: Public onSpearPosition As Integer
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)
  id: '#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)'
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: ImpaledOnSpearStick(AbstractPhysicalObject, AbstractPhysicalObject, int, int)
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.ImpaledOnSpearStick(AbstractPhysicalObject, AbstractPhysicalObject, int, int)
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.ImpaledOnSpearStick(AbstractPhysicalObject, AbstractPhysicalObject, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractPhysicalObject.ImpaledOnSpearStick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ImpaledOnSpearStick(AbstractPhysicalObject spear, AbstractPhysicalObject stuckIn, int chunk, int onSpearPosition)
    parameters:
    - id: spear
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spear</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: stuckIn
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stuckIn</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: onSpearPosition
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>onSpearPosition</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.#ctor(AbstractPhysicalObject,AbstractPhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(spear As AbstractPhysicalObject, stuckIn As AbstractPhysicalObject, chunk As Integer, onSpearPosition As Integer)
  overload: Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor*
  nameWithType.vb: AbstractPhysicalObject.ImpaledOnSpearStick.New(AbstractPhysicalObject, AbstractPhysicalObject, Integer, Integer)
  fullName.vb: AbstractPhysicalObject.ImpaledOnSpearStick.New(AbstractPhysicalObject, AbstractPhysicalObject, Integer, Integer)
  name.vb: New(AbstractPhysicalObject, AbstractPhysicalObject, Integer, Integer)
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)
  commentId: M:Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)
  id: SaveToString(System.Int32)
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: SaveToString(int)
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(int)
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string SaveToString(int roomIndex)
    parameters:
    - id: roomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomIndex</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function SaveToString(roomIndex As Integer) As String
  overridden: Global.AbstractPhysicalObject.AbstractObjectStick.SaveToString(System.Int32)
  overload: Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString*
  nameWithType.vb: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(Integer)
  fullName.vb: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString(Integer)
  name.vb: SaveToString(Integer)
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  commentId: P:Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  id: Spear
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: Spear
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AbstractPhysicalObject.ImpaledOnSpearStick.Spear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject Spear { get; }
    parameters: []
    return:
      type: Global.AbstractPhysicalObject
    content.vb: Public ReadOnly Property Spear As AbstractPhysicalObject
  overload: Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear*
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  commentId: P:Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  id: ObjectOnSpear
  parent: Global.AbstractPhysicalObject.ImpaledOnSpearStick
  langs:
  - csharp
  - vb
  name: ObjectOnSpear
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject ObjectOnSpear { get; }
    parameters: []
    return:
      type: Global.AbstractPhysicalObject
    content.vb: Public ReadOnly Property ObjectOnSpear As AbstractPhysicalObject
  overload: Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AbstractPhysicalObject.AbstractObjectStick
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectStick
  nameWithType: AbstractPhysicalObject.AbstractObjectStick
  fullName: AbstractPhysicalObject.AbstractObjectStick
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick
    name: AbstractObjectStick
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectStick.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick
    name: AbstractObjectStick
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectStick.html
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.A
  commentId: F:Global.AbstractPhysicalObject.AbstractObjectStick.A
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_A
  name: A
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.A
  fullName: AbstractPhysicalObject.AbstractObjectStick.A
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.B
  commentId: F:Global.AbstractPhysicalObject.AbstractObjectStick.B
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_B
  name: B
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.B
  fullName: AbstractPhysicalObject.AbstractObjectStick.B
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.unrecognizedAttributes
  commentId: F:Global.AbstractPhysicalObject.AbstractObjectStick.unrecognizedAttributes
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_unrecognizedAttributes
  name: unrecognizedAttributes
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.unrecognizedAttributes
  fullName: AbstractPhysicalObject.AbstractObjectStick.unrecognizedAttributes
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.Deactivate
  commentId: M:Global.AbstractPhysicalObject.AbstractObjectStick.Deactivate
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_Deactivate
  name: Deactivate()
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.Deactivate()
  fullName: AbstractPhysicalObject.AbstractObjectStick.Deactivate()
  spec.csharp:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.Deactivate
    name: Deactivate
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_Deactivate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.Deactivate
    name: Deactivate
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_Deactivate
  - name: (
  - name: )
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.FromString(System.String[],AbstractRoom)
  commentId: M:Global.AbstractPhysicalObject.AbstractObjectStick.FromString(System.String[],AbstractRoom)
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_FromString_System_String___AbstractRoom_
  name: FromString(string[], AbstractRoom)
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.FromString(string[], AbstractRoom)
  fullName: AbstractPhysicalObject.AbstractObjectStick.FromString(string[], AbstractRoom)
  nameWithType.vb: AbstractPhysicalObject.AbstractObjectStick.FromString(String(), AbstractRoom)
  fullName.vb: AbstractPhysicalObject.AbstractObjectStick.FromString(String(), AbstractRoom)
  name.vb: FromString(String(), AbstractRoom)
  spec.csharp:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.FromString(System.String[],AbstractRoom)
    name: FromString
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_FromString_System_String___AbstractRoom_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: )
  spec.vb:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.FromString(System.String[],AbstractRoom)
    name: FromString
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_FromString_System_String___AbstractRoom_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor*
  commentId: Overload:Global.AbstractPhysicalObject.ImpaledOnSpearStick.#ctor
  isExternal: true
  href: Global.AbstractPhysicalObject.ImpaledOnSpearStick.html#AbstractPhysicalObject_ImpaledOnSpearStick__ctor_AbstractPhysicalObject_AbstractPhysicalObject_System_Int32_System_Int32_
  name: ImpaledOnSpearStick
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.ImpaledOnSpearStick
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.ImpaledOnSpearStick
  nameWithType.vb: AbstractPhysicalObject.ImpaledOnSpearStick.New
  fullName.vb: AbstractPhysicalObject.ImpaledOnSpearStick.New
  name.vb: New
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.AbstractPhysicalObject.AbstractObjectStick.SaveToString(System.Int32)
  commentId: M:Global.AbstractPhysicalObject.AbstractObjectStick.SaveToString(System.Int32)
  parent: Global.AbstractPhysicalObject.AbstractObjectStick
  isExternal: true
  href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_SaveToString_System_Int32_
  name: SaveToString(int)
  nameWithType: AbstractPhysicalObject.AbstractObjectStick.SaveToString(int)
  fullName: AbstractPhysicalObject.AbstractObjectStick.SaveToString(int)
  nameWithType.vb: AbstractPhysicalObject.AbstractObjectStick.SaveToString(Integer)
  fullName.vb: AbstractPhysicalObject.AbstractObjectStick.SaveToString(Integer)
  name.vb: SaveToString(Integer)
  spec.csharp:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.SaveToString(System.Int32)
    name: SaveToString
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_SaveToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.AbstractPhysicalObject.AbstractObjectStick.SaveToString(System.Int32)
    name: SaveToString
    isExternal: true
    href: Global.AbstractPhysicalObject.AbstractObjectStick.html#AbstractPhysicalObject_AbstractObjectStick_SaveToString_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString*
  commentId: Overload:Global.AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString
  isExternal: true
  href: Global.AbstractPhysicalObject.ImpaledOnSpearStick.html#AbstractPhysicalObject_ImpaledOnSpearStick_SaveToString_System_Int32_
  name: SaveToString
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.SaveToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear*
  commentId: Overload:Global.AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  isExternal: true
  href: Global.AbstractPhysicalObject.ImpaledOnSpearStick.html#AbstractPhysicalObject_ImpaledOnSpearStick_Spear
  name: Spear
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.Spear
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.Spear
- uid: Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear*
  commentId: Overload:Global.AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  isExternal: true
  href: Global.AbstractPhysicalObject.ImpaledOnSpearStick.html#AbstractPhysicalObject_ImpaledOnSpearStick_ObjectOnSpear
  name: ObjectOnSpear
  nameWithType: AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
  fullName: AbstractPhysicalObject.ImpaledOnSpearStick.ObjectOnSpear
