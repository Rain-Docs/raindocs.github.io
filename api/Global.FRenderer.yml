### YamlMime:ManagedReference
items:
- uid: Global.FRenderer
  commentId: T:Global.FRenderer
  id: FRenderer
  parent: Global
  children:
  - Global.FRenderer.#ctor(FStage)
  - Global.FRenderer.AddRenderableLayer(FRenderableLayerInterface)
  - Global.FRenderer.Clear
  - Global.FRenderer.ClearLayersThatUseAtlas(FAtlas)
  - Global.FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)
  - Global.FRenderer.EndRender
  - Global.FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)
  - Global.FRenderer.StartRender
  - Global.FRenderer.Update
  - Global.FRenderer.UpdateLayerTransforms
  langs:
  - csharp
  - vb
  name: FRenderer
  nameWithType: FRenderer
  fullName: FRenderer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FRenderer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FRenderer
    content.vb: Public Class FRenderer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FRenderer.#ctor(FStage)
  commentId: M:Global.FRenderer.#ctor(FStage)
  id: '#ctor(FStage)'
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: FRenderer(FStage)
  nameWithType: FRenderer.FRenderer(FStage)
  fullName: FRenderer.FRenderer(FStage)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FRenderer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FRenderer(FStage stage)
    parameters:
    - id: stage
      type: Global.FStage
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stage</parameter>
            <parameter>M:FRenderer.#ctor(FStage)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(stage As FStage)
  overload: Global.FRenderer.#ctor*
  nameWithType.vb: FRenderer.New(FStage)
  fullName.vb: FRenderer.New(FStage)
  name.vb: New(FStage)
- uid: Global.FRenderer.Clear
  commentId: M:Global.FRenderer.Clear
  id: Clear
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: FRenderer.Clear()
  fullName: FRenderer.Clear()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.Clear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Global.FRenderer.Clear*
- uid: Global.FRenderer.ClearLayersThatUseAtlas(FAtlas)
  commentId: M:Global.FRenderer.ClearLayersThatUseAtlas(FAtlas)
  id: ClearLayersThatUseAtlas(FAtlas)
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: ClearLayersThatUseAtlas(FAtlas)
  nameWithType: FRenderer.ClearLayersThatUseAtlas(FAtlas)
  fullName: FRenderer.ClearLayersThatUseAtlas(FAtlas)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.ClearLayersThatUseAtlas(FAtlas)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClearLayersThatUseAtlas(FAtlas atlas)
    parameters:
    - id: atlas
      type: Global.FAtlas
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlas</parameter>
            <parameter>M:FRenderer.ClearLayersThatUseAtlas(FAtlas)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ClearLayersThatUseAtlas(atlas As FAtlas)
  overload: Global.FRenderer.ClearLayersThatUseAtlas*
- uid: Global.FRenderer.UpdateLayerTransforms
  commentId: M:Global.FRenderer.UpdateLayerTransforms
  id: UpdateLayerTransforms
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: UpdateLayerTransforms()
  nameWithType: FRenderer.UpdateLayerTransforms()
  fullName: FRenderer.UpdateLayerTransforms()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.UpdateLayerTransforms</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateLayerTransforms()
    content.vb: Public Sub UpdateLayerTransforms()
  overload: Global.FRenderer.UpdateLayerTransforms*
- uid: Global.FRenderer.StartRender
  commentId: M:Global.FRenderer.StartRender
  id: StartRender
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: StartRender()
  nameWithType: FRenderer.StartRender()
  fullName: FRenderer.StartRender()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.StartRender</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StartRender()
    content.vb: Public Sub StartRender()
  overload: Global.FRenderer.StartRender*
- uid: Global.FRenderer.EndRender
  commentId: M:Global.FRenderer.EndRender
  id: EndRender
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: EndRender()
  nameWithType: FRenderer.EndRender()
  fullName: FRenderer.EndRender()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.EndRender</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EndRender()
    content.vb: Public Sub EndRender()
  overload: Global.FRenderer.EndRender*
- uid: Global.FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)
  commentId: M:Global.FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)
  id: CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: CreateFacetRenderLayer(FFacetType, int, FAtlas, FShader)
  nameWithType: FRenderer.CreateFacetRenderLayer(FFacetType, int, FAtlas, FShader)
  fullName: FRenderer.CreateFacetRenderLayer(FFacetType, int, FAtlas, FShader)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FFacetRenderLayer CreateFacetRenderLayer(FFacetType facetType, int batchIndex, FAtlas atlas, FShader shader)
    parameters:
    - id: facetType
      type: Global.FFacetType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>facetType</parameter>
            <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: batchIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>batchIndex</parameter>
            <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: atlas
      type: Global.FAtlas
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlas</parameter>
            <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
          </include>
        </markup>
    - id: shader
      type: Global.FShader
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shader</parameter>
            <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
          </include>
        </markup>
    return:
      type: Global.FFacetRenderLayer
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FRenderer.CreateFacetRenderLayer(FFacetType,System.Int32,FAtlas,FShader)</parameter>
          </include>
        </markup>
    content.vb: Protected Function CreateFacetRenderLayer(facetType As FFacetType, batchIndex As Integer, atlas As FAtlas, shader As FShader) As FFacetRenderLayer
  overload: Global.FRenderer.CreateFacetRenderLayer*
  nameWithType.vb: FRenderer.CreateFacetRenderLayer(FFacetType, Integer, FAtlas, FShader)
  fullName.vb: FRenderer.CreateFacetRenderLayer(FFacetType, Integer, FAtlas, FShader)
  name.vb: CreateFacetRenderLayer(FFacetType, Integer, FAtlas, FShader)
- uid: Global.FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)
  commentId: M:Global.FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)
  id: GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: GetFacetRenderLayer(out FFacetRenderLayer, out int, FFacetType, FAtlas, FShader, int)
  nameWithType: FRenderer.GetFacetRenderLayer(out FFacetRenderLayer, out int, FFacetType, FAtlas, FShader, int)
  fullName: FRenderer.GetFacetRenderLayer(out FFacetRenderLayer, out int, FFacetType, FAtlas, FShader, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GetFacetRenderLayer(out FFacetRenderLayer renderLayer, out int firstFacetIndex, FFacetType facetType, FAtlas atlas, FShader shader, int numberOfFacetsNeeded)
    parameters:
    - id: renderLayer
      type: Global.FFacetRenderLayer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>renderLayer</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    - id: firstFacetIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstFacetIndex</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    - id: facetType
      type: Global.FFacetType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>facetType</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    - id: atlas
      type: Global.FAtlas
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlas</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    - id: shader
      type: Global.FShader
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shader</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    - id: numberOfFacetsNeeded
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>numberOfFacetsNeeded</parameter>
            <parameter>M:FRenderer.GetFacetRenderLayer(FFacetRenderLayer@,System.Int32@,FFacetType,FAtlas,FShader,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GetFacetRenderLayer(renderLayer As FFacetRenderLayer, firstFacetIndex As Integer, facetType As FFacetType, atlas As FAtlas, shader As FShader, numberOfFacetsNeeded As Integer)
  overload: Global.FRenderer.GetFacetRenderLayer*
  nameWithType.vb: FRenderer.GetFacetRenderLayer(FFacetRenderLayer, Integer, FFacetType, FAtlas, FShader, Integer)
  fullName.vb: FRenderer.GetFacetRenderLayer(FFacetRenderLayer, Integer, FFacetType, FAtlas, FShader, Integer)
  name.vb: GetFacetRenderLayer(FFacetRenderLayer, Integer, FFacetType, FAtlas, FShader, Integer)
- uid: Global.FRenderer.AddRenderableLayer(FRenderableLayerInterface)
  commentId: M:Global.FRenderer.AddRenderableLayer(FRenderableLayerInterface)
  id: AddRenderableLayer(FRenderableLayerInterface)
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: AddRenderableLayer(FRenderableLayerInterface)
  nameWithType: FRenderer.AddRenderableLayer(FRenderableLayerInterface)
  fullName: FRenderer.AddRenderableLayer(FRenderableLayerInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.AddRenderableLayer(FRenderableLayerInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddRenderableLayer(FRenderableLayerInterface renderableLayer)
    parameters:
    - id: renderableLayer
      type: Global.FRenderableLayerInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>renderableLayer</parameter>
            <parameter>M:FRenderer.AddRenderableLayer(FRenderableLayerInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddRenderableLayer(renderableLayer As FRenderableLayerInterface)
  overload: Global.FRenderer.AddRenderableLayer*
- uid: Global.FRenderer.Update
  commentId: M:Global.FRenderer.Update
  id: Update
  parent: Global.FRenderer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: FRenderer.Update()
  fullName: FRenderer.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FRenderer.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.FRenderer.Update*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FRenderer.#ctor*
  commentId: Overload:Global.FRenderer.#ctor
  isExternal: true
  href: Global.FRenderer.html#FRenderer__ctor_FStage_
  name: FRenderer
  nameWithType: FRenderer.FRenderer
  fullName: FRenderer.FRenderer
  nameWithType.vb: FRenderer.New
  fullName.vb: FRenderer.New
  name.vb: New
- uid: Global.FStage
  commentId: T:Global.FStage
  isExternal: true
  href: FStage.html
  name: FStage
  nameWithType: FStage
  fullName: FStage
- uid: Global.FRenderer.Clear*
  commentId: Overload:Global.FRenderer.Clear
  isExternal: true
  href: Global.FRenderer.html#FRenderer_Clear
  name: Clear
  nameWithType: FRenderer.Clear
  fullName: FRenderer.Clear
- uid: Global.FRenderer.ClearLayersThatUseAtlas*
  commentId: Overload:Global.FRenderer.ClearLayersThatUseAtlas
  isExternal: true
  href: Global.FRenderer.html#FRenderer_ClearLayersThatUseAtlas_FAtlas_
  name: ClearLayersThatUseAtlas
  nameWithType: FRenderer.ClearLayersThatUseAtlas
  fullName: FRenderer.ClearLayersThatUseAtlas
- uid: Global.FAtlas
  commentId: T:Global.FAtlas
  isExternal: true
  href: FAtlas.html
  name: FAtlas
  nameWithType: FAtlas
  fullName: FAtlas
- uid: Global.FRenderer.UpdateLayerTransforms*
  commentId: Overload:Global.FRenderer.UpdateLayerTransforms
  isExternal: true
  href: Global.FRenderer.html#FRenderer_UpdateLayerTransforms
  name: UpdateLayerTransforms
  nameWithType: FRenderer.UpdateLayerTransforms
  fullName: FRenderer.UpdateLayerTransforms
- uid: Global.FRenderer.StartRender*
  commentId: Overload:Global.FRenderer.StartRender
  isExternal: true
  href: Global.FRenderer.html#FRenderer_StartRender
  name: StartRender
  nameWithType: FRenderer.StartRender
  fullName: FRenderer.StartRender
- uid: Global.FRenderer.EndRender*
  commentId: Overload:Global.FRenderer.EndRender
  isExternal: true
  href: Global.FRenderer.html#FRenderer_EndRender
  name: EndRender
  nameWithType: FRenderer.EndRender
  fullName: FRenderer.EndRender
- uid: Global.FRenderer.CreateFacetRenderLayer*
  commentId: Overload:Global.FRenderer.CreateFacetRenderLayer
  isExternal: true
  href: Global.FRenderer.html#FRenderer_CreateFacetRenderLayer_FFacetType_System_Int32_FAtlas_FShader_
  name: CreateFacetRenderLayer
  nameWithType: FRenderer.CreateFacetRenderLayer
  fullName: FRenderer.CreateFacetRenderLayer
- uid: Global.FFacetType
  commentId: T:Global.FFacetType
  isExternal: true
  href: FFacetType.html
  name: FFacetType
  nameWithType: FFacetType
  fullName: FFacetType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.FShader
  commentId: T:Global.FShader
  isExternal: true
  href: FShader.html
  name: FShader
  nameWithType: FShader
  fullName: FShader
- uid: Global.FFacetRenderLayer
  commentId: T:Global.FFacetRenderLayer
  isExternal: true
  href: FFacetRenderLayer.html
  name: FFacetRenderLayer
  nameWithType: FFacetRenderLayer
  fullName: FFacetRenderLayer
- uid: Global.FRenderer.GetFacetRenderLayer*
  commentId: Overload:Global.FRenderer.GetFacetRenderLayer
  isExternal: true
  href: Global.FRenderer.html#FRenderer_GetFacetRenderLayer_FFacetRenderLayer__System_Int32__FFacetType_FAtlas_FShader_System_Int32_
  name: GetFacetRenderLayer
  nameWithType: FRenderer.GetFacetRenderLayer
  fullName: FRenderer.GetFacetRenderLayer
- uid: Global.FRenderer.AddRenderableLayer*
  commentId: Overload:Global.FRenderer.AddRenderableLayer
  isExternal: true
  href: Global.FRenderer.html#FRenderer_AddRenderableLayer_FRenderableLayerInterface_
  name: AddRenderableLayer
  nameWithType: FRenderer.AddRenderableLayer
  fullName: FRenderer.AddRenderableLayer
- uid: Global.FRenderableLayerInterface
  commentId: T:Global.FRenderableLayerInterface
  isExternal: true
  href: FRenderableLayerInterface.html
  name: FRenderableLayerInterface
  nameWithType: FRenderableLayerInterface
  fullName: FRenderableLayerInterface
- uid: Global.FRenderer.Update*
  commentId: Overload:Global.FRenderer.Update
  isExternal: true
  href: Global.FRenderer.html#FRenderer_Update
  name: Update
  nameWithType: FRenderer.Update
  fullName: FRenderer.Update
