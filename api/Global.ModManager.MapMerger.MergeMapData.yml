### YamlMime:ManagedReference
items:
- uid: Global.ModManager.MapMerger.MergeMapData
  commentId: T:Global.ModManager.MapMerger.MergeMapData
  id: ModManager.MapMerger.MergeMapData
  parent: Global
  children:
  - Global.ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)
  - Global.ModManager.MapMerger.MergeMapData.FullFilePath
  - Global.ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)
  - Global.ModManager.MapMerger.MergeMapData.MapKey
  - Global.ModManager.MapMerger.MergeMapData.directory
  - Global.ModManager.MapMerger.MergeMapData.fileName
  - Global.ModManager.MapMerger.MergeMapData.pngOffset
  - Global.ModManager.MapMerger.MergeMapData.region
  - Global.ModManager.MapMerger.MergeMapData.slugcat
  - Global.ModManager.MapMerger.MergeMapData.sourceMod
  langs:
  - csharp
  - vb
  name: ModManager.MapMerger.MergeMapData
  nameWithType: ModManager.MapMerger.MergeMapData
  fullName: ModManager.MapMerger.MergeMapData
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ModManager.MapMerger.MergeMapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct ModManager.MapMerger.MergeMapData
    content.vb: Public Structure ModManager.MapMerger.MergeMapData
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.ModManager.MapMerger.MergeMapData.region
  commentId: F:Global.ModManager.MapMerger.MergeMapData.region
  id: region
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: region
  nameWithType: ModManager.MapMerger.MergeMapData.region
  fullName: ModManager.MapMerger.MergeMapData.region
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string region
    return:
      type: System.String
    content.vb: Public region As String
- uid: Global.ModManager.MapMerger.MergeMapData.slugcat
  commentId: F:Global.ModManager.MapMerger.MergeMapData.slugcat
  id: slugcat
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: slugcat
  nameWithType: ModManager.MapMerger.MergeMapData.slugcat
  fullName: ModManager.MapMerger.MergeMapData.slugcat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.slugcat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string slugcat
    return:
      type: System.String
    content.vb: Public slugcat As String
- uid: Global.ModManager.MapMerger.MergeMapData.fileName
  commentId: F:Global.ModManager.MapMerger.MergeMapData.fileName
  id: fileName
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: fileName
  nameWithType: ModManager.MapMerger.MergeMapData.fileName
  fullName: ModManager.MapMerger.MergeMapData.fileName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.fileName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string fileName
    return:
      type: System.String
    content.vb: Public fileName As String
- uid: Global.ModManager.MapMerger.MergeMapData.pngOffset
  commentId: F:Global.ModManager.MapMerger.MergeMapData.pngOffset
  id: pngOffset
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: pngOffset
  nameWithType: ModManager.MapMerger.MergeMapData.pngOffset
  fullName: ModManager.MapMerger.MergeMapData.pngOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.pngOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pngOffset
    return:
      type: UnityEngine.Vector2
    content.vb: Public pngOffset As Vector2
- uid: Global.ModManager.MapMerger.MergeMapData.sourceMod
  commentId: F:Global.ModManager.MapMerger.MergeMapData.sourceMod
  id: sourceMod
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: sourceMod
  nameWithType: ModManager.MapMerger.MergeMapData.sourceMod
  fullName: ModManager.MapMerger.MergeMapData.sourceMod
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.sourceMod</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ModManager.Mod sourceMod
    return:
      type: Global.ModManager.Mod
    content.vb: Public sourceMod As ModManager.Mod
- uid: Global.ModManager.MapMerger.MergeMapData.directory
  commentId: F:Global.ModManager.MapMerger.MergeMapData.directory
  id: directory
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: directory
  nameWithType: ModManager.MapMerger.MergeMapData.directory
  fullName: ModManager.MapMerger.MergeMapData.directory
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapData.directory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string directory
    return:
      type: System.String
    content.vb: Public directory As String
- uid: Global.ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)
  commentId: M:Global.ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)
  id: '#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)'
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: MergeMapData(string, string, string, string, Vector2, Mod)
  nameWithType: ModManager.MapMerger.MergeMapData.MergeMapData(string, string, string, string, Vector2, ModManager.Mod)
  fullName: ModManager.MapMerger.MergeMapData.MergeMapData(string, string, string, string, UnityEngine.Vector2, ModManager.Mod)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ModManager.MapMerger.MergeMapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MergeMapData(string region, string slugcat, string fileName, string directory, Vector2 offset, ModManager.Mod sourceMod)
    parameters:
    - id: region
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    - id: slugcat
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    - id: fileName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileName</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    - id: directory
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directory</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    - id: offset
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    - id: sourceMod
      type: Global.ModManager.Mod
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceMod</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.#ctor(System.String,System.String,System.String,System.String,UnityEngine.Vector2,ModManager.Mod)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(region As String, slugcat As String, fileName As String, directory As String, offset As Vector2, sourceMod As ModManager.Mod)
  overload: Global.ModManager.MapMerger.MergeMapData.#ctor*
  nameWithType.vb: ModManager.MapMerger.MergeMapData.New(String, String, String, String, Vector2, ModManager.Mod)
  fullName.vb: ModManager.MapMerger.MergeMapData.New(String, String, String, String, UnityEngine.Vector2, ModManager.Mod)
  name.vb: New(String, String, String, String, Vector2, Mod)
- uid: Global.ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)
  commentId: M:Global.ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)
  id: GenerateDefault(System.String,ModManager.Mod,System.Boolean)
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: GenerateDefault(string, Mod, bool)
  nameWithType: ModManager.MapMerger.MergeMapData.GenerateDefault(string, ModManager.Mod, bool)
  fullName: ModManager.MapMerger.MergeMapData.GenerateDefault(string, ModManager.Mod, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ModManager.MapMerger.MergeMapData GenerateDefault(string sourcePath, ModManager.Mod modApplyFrom, bool baseFile = false)
    parameters:
    - id: sourcePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourcePath</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)</parameter>
          </include>
        </markup>
    - id: modApplyFrom
      type: Global.ModManager.Mod
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>modApplyFrom</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)</parameter>
          </include>
        </markup>
    - id: baseFile
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseFile</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.ModManager.MapMerger.MergeMapData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapData.GenerateDefault(System.String,ModManager.Mod,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GenerateDefault(sourcePath As String, modApplyFrom As ModManager.Mod, baseFile As Boolean = False) As ModManager.MapMerger.MergeMapData
  overload: Global.ModManager.MapMerger.MergeMapData.GenerateDefault*
  nameWithType.vb: ModManager.MapMerger.MergeMapData.GenerateDefault(String, ModManager.Mod, Boolean)
  fullName.vb: ModManager.MapMerger.MergeMapData.GenerateDefault(String, ModManager.Mod, Boolean)
  name.vb: GenerateDefault(String, Mod, Boolean)
- uid: Global.ModManager.MapMerger.MergeMapData.MapKey
  commentId: P:Global.ModManager.MapMerger.MergeMapData.MapKey
  id: MapKey
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: MapKey
  nameWithType: ModManager.MapMerger.MergeMapData.MapKey
  fullName: ModManager.MapMerger.MergeMapData.MapKey
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.MapMerger.MergeMapData.MapKey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string MapKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property MapKey As String
  overload: Global.ModManager.MapMerger.MergeMapData.MapKey*
- uid: Global.ModManager.MapMerger.MergeMapData.FullFilePath
  commentId: P:Global.ModManager.MapMerger.MergeMapData.FullFilePath
  id: FullFilePath
  parent: Global.ModManager.MapMerger.MergeMapData
  langs:
  - csharp
  - vb
  name: FullFilePath
  nameWithType: ModManager.MapMerger.MergeMapData.FullFilePath
  fullName: ModManager.MapMerger.MergeMapData.FullFilePath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.MapMerger.MergeMapData.FullFilePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string FullFilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullFilePath As String
  overload: Global.ModManager.MapMerger.MergeMapData.FullFilePath*
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ModManager.Mod
  commentId: T:Global.ModManager.Mod
  isExternal: true
  href: ModManager.html
  name: ModManager.Mod
  nameWithType: ModManager.Mod
  fullName: ModManager.Mod
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.Mod
    name: Mod
    isExternal: true
    href: ModManager.Mod.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.Mod
    name: Mod
    isExternal: true
    href: ModManager.Mod.html
- uid: Global.ModManager.MapMerger.MergeMapData.#ctor*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapData.#ctor
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapData.html#ModManager_MapMerger_MergeMapData__ctor_System_String_System_String_System_String_System_String_UnityEngine_Vector2_ModManager_Mod_
  name: MergeMapData
  nameWithType: ModManager.MapMerger.MergeMapData.MergeMapData
  fullName: ModManager.MapMerger.MergeMapData.MergeMapData
  nameWithType.vb: ModManager.MapMerger.MergeMapData.New
  fullName.vb: ModManager.MapMerger.MergeMapData.New
  name.vb: New
- uid: Global.ModManager.MapMerger.MergeMapData.GenerateDefault*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapData.GenerateDefault
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapData.html#ModManager_MapMerger_MergeMapData_GenerateDefault_System_String_ModManager_Mod_System_Boolean_
  name: GenerateDefault
  nameWithType: ModManager.MapMerger.MergeMapData.GenerateDefault
  fullName: ModManager.MapMerger.MergeMapData.GenerateDefault
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ModManager.MapMerger.MergeMapData
  commentId: T:Global.ModManager.MapMerger.MergeMapData
  isExternal: true
  href: ModManager.html
  name: ModManager.MapMerger.MergeMapData
  nameWithType: ModManager.MapMerger.MergeMapData
  fullName: ModManager.MapMerger.MergeMapData
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapData
    name: MergeMapData
    isExternal: true
    href: ModManager.MapMerger.MergeMapData.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapData
    name: MergeMapData
    isExternal: true
    href: ModManager.MapMerger.MergeMapData.html
- uid: Global.ModManager.MapMerger.MergeMapData.MapKey*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapData.MapKey
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapData.html#ModManager_MapMerger_MergeMapData_MapKey
  name: MapKey
  nameWithType: ModManager.MapMerger.MergeMapData.MapKey
  fullName: ModManager.MapMerger.MergeMapData.MapKey
- uid: Global.ModManager.MapMerger.MergeMapData.FullFilePath*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapData.FullFilePath
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapData.html#ModManager_MapMerger_MergeMapData_FullFilePath
  name: FullFilePath
  nameWithType: ModManager.MapMerger.MergeMapData.FullFilePath
  fullName: ModManager.MapMerger.MergeMapData.FullFilePath
