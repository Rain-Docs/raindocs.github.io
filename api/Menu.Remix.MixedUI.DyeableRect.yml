### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.DyeableRect
  commentId: T:Menu.Remix.MixedUI.DyeableRect
  id: DyeableRect
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)
  - Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)
  - Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)
  - Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)
  - Menu.Remix.MixedUI.DyeableRect.GrafUpdate(System.Single)
  - Menu.Remix.MixedUI.DyeableRect.Hide
  - Menu.Remix.MixedUI.DyeableRect.MainFillSprite
  - Menu.Remix.MixedUI.DyeableRect.Show
  - Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)
  - Menu.Remix.MixedUI.DyeableRect.Update
  - Menu.Remix.MixedUI.DyeableRect.addSize
  - Menu.Remix.MixedUI.DyeableRect.colorEdge
  - Menu.Remix.MixedUI.DyeableRect.colorFill
  - Menu.Remix.MixedUI.DyeableRect.container
  - Menu.Remix.MixedUI.DyeableRect.fillAlpha
  - Menu.Remix.MixedUI.DyeableRect.hiddenSide
  - Menu.Remix.MixedUI.DyeableRect.isHidden
  - Menu.Remix.MixedUI.DyeableRect.pos
  - Menu.Remix.MixedUI.DyeableRect.size
  - Menu.Remix.MixedUI.DyeableRect.sprites
  langs:
  - csharp
  - vb
  name: DyeableRect
  nameWithType: DyeableRect
  fullName: Menu.Remix.MixedUI.DyeableRect
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.DyeableRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class DyeableRect
    content.vb: Public Class DyeableRect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.DyeableRect.sprites
  commentId: F:Menu.Remix.MixedUI.DyeableRect.sprites
  id: sprites
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: sprites
  nameWithType: DyeableRect.sprites
  fullName: Menu.Remix.MixedUI.DyeableRect.sprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.sprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly FSprite[] sprites
    return:
      type: Global.FSprite[]
    content.vb: Public ReadOnly sprites As FSprite()
- uid: Menu.Remix.MixedUI.DyeableRect.container
  commentId: F:Menu.Remix.MixedUI.DyeableRect.container
  id: container
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: container
  nameWithType: DyeableRect.container
  fullName: Menu.Remix.MixedUI.DyeableRect.container
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.container</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected readonly FContainer container
    return:
      type: Global.FContainer
    content.vb: Protected ReadOnly container As FContainer
- uid: Menu.Remix.MixedUI.DyeableRect.MainFillSprite
  commentId: F:Menu.Remix.MixedUI.DyeableRect.MainFillSprite
  id: MainFillSprite
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: MainFillSprite
  nameWithType: DyeableRect.MainFillSprite
  fullName: Menu.Remix.MixedUI.DyeableRect.MainFillSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.MainFillSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected const int MainFillSprite = 8
    return:
      type: System.Int32
    content.vb: Protected Const MainFillSprite As Integer = 8
- uid: Menu.Remix.MixedUI.DyeableRect.colorEdge
  commentId: F:Menu.Remix.MixedUI.DyeableRect.colorEdge
  id: colorEdge
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: colorEdge
  nameWithType: DyeableRect.colorEdge
  fullName: Menu.Remix.MixedUI.DyeableRect.colorEdge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.colorEdge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color colorEdge
    return:
      type: UnityEngine.Color
    content.vb: Public colorEdge As Color
- uid: Menu.Remix.MixedUI.DyeableRect.colorFill
  commentId: F:Menu.Remix.MixedUI.DyeableRect.colorFill
  id: colorFill
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: colorFill
  nameWithType: DyeableRect.colorFill
  fullName: Menu.Remix.MixedUI.DyeableRect.colorFill
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.colorFill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color colorFill
    return:
      type: UnityEngine.Color
    content.vb: Public colorFill As Color
- uid: Menu.Remix.MixedUI.DyeableRect.pos
  commentId: F:Menu.Remix.MixedUI.DyeableRect.pos
  id: pos
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: DyeableRect.pos
  fullName: Menu.Remix.MixedUI.DyeableRect.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Menu.Remix.MixedUI.DyeableRect.size
  commentId: F:Menu.Remix.MixedUI.DyeableRect.size
  id: size
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: size
  nameWithType: DyeableRect.size
  fullName: Menu.Remix.MixedUI.DyeableRect.size
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.size</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 size
    return:
      type: UnityEngine.Vector2
    content.vb: Public size As Vector2
- uid: Menu.Remix.MixedUI.DyeableRect.addSize
  commentId: F:Menu.Remix.MixedUI.DyeableRect.addSize
  id: addSize
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: addSize
  nameWithType: DyeableRect.addSize
  fullName: Menu.Remix.MixedUI.DyeableRect.addSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.addSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 addSize
    return:
      type: UnityEngine.Vector2
    content.vb: Public addSize As Vector2
- uid: Menu.Remix.MixedUI.DyeableRect.hiddenSide
  commentId: F:Menu.Remix.MixedUI.DyeableRect.hiddenSide
  id: hiddenSide
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: hiddenSide
  nameWithType: DyeableRect.hiddenSide
  fullName: Menu.Remix.MixedUI.DyeableRect.hiddenSide
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.hiddenSide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DyeableRect.HiddenSide hiddenSide
    return:
      type: Menu.Remix.MixedUI.DyeableRect.HiddenSide
    content.vb: Public hiddenSide As DyeableRect.HiddenSide
- uid: Menu.Remix.MixedUI.DyeableRect.fillAlpha
  commentId: F:Menu.Remix.MixedUI.DyeableRect.fillAlpha
  id: fillAlpha
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: fillAlpha
  nameWithType: DyeableRect.fillAlpha
  fullName: Menu.Remix.MixedUI.DyeableRect.fillAlpha
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.DyeableRect.fillAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fillAlpha
    return:
      type: System.Single
    content.vb: Public fillAlpha As Single
- uid: Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)
  id: '#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)'
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: DyeableRect(FContainer, Vector2, Vector2, bool)
  nameWithType: DyeableRect.DyeableRect(FContainer, Vector2, Vector2, bool)
  fullName: Menu.Remix.MixedUI.DyeableRect.DyeableRect(FContainer, UnityEngine.Vector2, UnityEngine.Vector2, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.DyeableRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DyeableRect(FContainer container, Vector2 pos, Vector2 size, bool filled = true)
    parameters:
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: size
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: filled
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filled</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.#ctor(FContainer,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(container As FContainer, pos As Vector2, size As Vector2, filled As Boolean = True)
  overload: Menu.Remix.MixedUI.DyeableRect.#ctor*
  nameWithType.vb: DyeableRect.New(FContainer, Vector2, Vector2, Boolean)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.New(FContainer, UnityEngine.Vector2, UnityEngine.Vector2, Boolean)
  name.vb: New(FContainer, Vector2, Vector2, Boolean)
- uid: Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)
  id: SideSprite(System.Int32)
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: SideSprite(int)
  nameWithType: DyeableRect.SideSprite(int)
  fullName: Menu.Remix.MixedUI.DyeableRect.SideSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int SideSprite(int side)
    parameters:
    - id: side
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.SideSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function SideSprite(side As Integer) As Integer
  overload: Menu.Remix.MixedUI.DyeableRect.SideSprite*
  nameWithType.vb: DyeableRect.SideSprite(Integer)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.SideSprite(Integer)
  name.vb: SideSprite(Integer)
- uid: Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)
  id: CornerSprite(System.Int32)
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: CornerSprite(int)
  nameWithType: DyeableRect.CornerSprite(int)
  fullName: Menu.Remix.MixedUI.DyeableRect.CornerSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int CornerSprite(int corner)
    parameters:
    - id: corner
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>corner</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.CornerSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function CornerSprite(corner As Integer) As Integer
  overload: Menu.Remix.MixedUI.DyeableRect.CornerSprite*
  nameWithType.vb: DyeableRect.CornerSprite(Integer)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.CornerSprite(Integer)
  name.vb: CornerSprite(Integer)
- uid: Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)
  id: FillSideSprite(System.Int32)
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: FillSideSprite(int)
  nameWithType: DyeableRect.FillSideSprite(int)
  fullName: Menu.Remix.MixedUI.DyeableRect.FillSideSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int FillSideSprite(int side)
    parameters:
    - id: side
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillSideSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function FillSideSprite(side As Integer) As Integer
  overload: Menu.Remix.MixedUI.DyeableRect.FillSideSprite*
  nameWithType.vb: DyeableRect.FillSideSprite(Integer)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.FillSideSprite(Integer)
  name.vb: FillSideSprite(Integer)
- uid: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)
  id: FillCornerSprite(System.Int32)
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: FillCornerSprite(int)
  nameWithType: DyeableRect.FillCornerSprite(int)
  fullName: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int FillCornerSprite(int corner)
    parameters:
    - id: corner
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>corner</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function FillCornerSprite(corner As Integer) As Integer
  overload: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite*
  nameWithType.vb: DyeableRect.FillCornerSprite(Integer)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite(Integer)
  name.vb: FillCornerSprite(Integer)
- uid: Menu.Remix.MixedUI.DyeableRect.Update
  commentId: M:Menu.Remix.MixedUI.DyeableRect.Update
  id: Update
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DyeableRect.Update()
  fullName: Menu.Remix.MixedUI.DyeableRect.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Menu.Remix.MixedUI.DyeableRect.Update*
- uid: Menu.Remix.MixedUI.DyeableRect.GrafUpdate(System.Single)
  commentId: M:Menu.Remix.MixedUI.DyeableRect.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: DyeableRect.GrafUpdate(float)
  fullName: Menu.Remix.MixedUI.DyeableRect.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.Remix.MixedUI.DyeableRect.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GrafUpdate(timeStacker As Single)
  overload: Menu.Remix.MixedUI.DyeableRect.GrafUpdate*
  nameWithType.vb: DyeableRect.GrafUpdate(Single)
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.Remix.MixedUI.DyeableRect.Hide
  commentId: M:Menu.Remix.MixedUI.DyeableRect.Hide
  id: Hide
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: Hide()
  nameWithType: DyeableRect.Hide()
  fullName: Menu.Remix.MixedUI.DyeableRect.Hide()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.Hide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Hide()
    content.vb: Public Sub Hide()
  overload: Menu.Remix.MixedUI.DyeableRect.Hide*
- uid: Menu.Remix.MixedUI.DyeableRect.Show
  commentId: M:Menu.Remix.MixedUI.DyeableRect.Show
  id: Show
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: DyeableRect.Show()
  fullName: Menu.Remix.MixedUI.DyeableRect.Show()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.DyeableRect.Show</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Show()
    content.vb: Public Sub Show()
  overload: Menu.Remix.MixedUI.DyeableRect.Show*
- uid: Menu.Remix.MixedUI.DyeableRect.isHidden
  commentId: P:Menu.Remix.MixedUI.DyeableRect.isHidden
  id: isHidden
  parent: Menu.Remix.MixedUI.DyeableRect
  langs:
  - csharp
  - vb
  name: isHidden
  nameWithType: DyeableRect.isHidden
  fullName: Menu.Remix.MixedUI.DyeableRect.isHidden
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.DyeableRect.isHidden</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isHidden { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isHidden As Boolean
  overload: Menu.Remix.MixedUI.DyeableRect.isHidden*
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FSprite[]
  isExternal: true
  href: FSprite.html
  name: FSprite[]
  nameWithType: FSprite[]
  fullName: FSprite[]
  nameWithType.vb: FSprite()
  fullName.vb: FSprite()
  name.vb: FSprite()
  spec.csharp:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: (
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Menu.Remix.MixedUI.DyeableRect.HiddenSide
  commentId: T:Menu.Remix.MixedUI.DyeableRect.HiddenSide
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html
  name: DyeableRect.HiddenSide
  nameWithType: DyeableRect.HiddenSide
  fullName: Menu.Remix.MixedUI.DyeableRect.HiddenSide
  spec.csharp:
  - uid: Menu.Remix.MixedUI.DyeableRect
    name: DyeableRect
    isExternal: true
    href: Menu.Remix.MixedUI.DyeableRect.html
  - name: .
  - uid: Menu.Remix.MixedUI.DyeableRect.HiddenSide
    name: HiddenSide
    isExternal: true
    href: Menu.Remix.MixedUI.DyeableRect.HiddenSide.html
  spec.vb:
  - uid: Menu.Remix.MixedUI.DyeableRect
    name: DyeableRect
    isExternal: true
    href: Menu.Remix.MixedUI.DyeableRect.html
  - name: .
  - uid: Menu.Remix.MixedUI.DyeableRect.HiddenSide
    name: HiddenSide
    isExternal: true
    href: Menu.Remix.MixedUI.DyeableRect.HiddenSide.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Menu.Remix.MixedUI.DyeableRect.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect__ctor_FContainer_UnityEngine_Vector2_UnityEngine_Vector2_System_Boolean_
  name: DyeableRect
  nameWithType: DyeableRect.DyeableRect
  fullName: Menu.Remix.MixedUI.DyeableRect.DyeableRect
  nameWithType.vb: DyeableRect.New
  fullName.vb: Menu.Remix.MixedUI.DyeableRect.New
  name.vb: New
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.MixedUI.DyeableRect.SideSprite*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.SideSprite
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_SideSprite_System_Int32_
  name: SideSprite
  nameWithType: DyeableRect.SideSprite
  fullName: Menu.Remix.MixedUI.DyeableRect.SideSprite
- uid: Menu.Remix.MixedUI.DyeableRect.CornerSprite*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.CornerSprite
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_CornerSprite_System_Int32_
  name: CornerSprite
  nameWithType: DyeableRect.CornerSprite
  fullName: Menu.Remix.MixedUI.DyeableRect.CornerSprite
- uid: Menu.Remix.MixedUI.DyeableRect.FillSideSprite*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.FillSideSprite
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_FillSideSprite_System_Int32_
  name: FillSideSprite
  nameWithType: DyeableRect.FillSideSprite
  fullName: Menu.Remix.MixedUI.DyeableRect.FillSideSprite
- uid: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.FillCornerSprite
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_FillCornerSprite_System_Int32_
  name: FillCornerSprite
  nameWithType: DyeableRect.FillCornerSprite
  fullName: Menu.Remix.MixedUI.DyeableRect.FillCornerSprite
- uid: Menu.Remix.MixedUI.DyeableRect.Update*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.Update
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_Update
  name: Update
  nameWithType: DyeableRect.Update
  fullName: Menu.Remix.MixedUI.DyeableRect.Update
- uid: Menu.Remix.MixedUI.DyeableRect.GrafUpdate*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.GrafUpdate
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: DyeableRect.GrafUpdate
  fullName: Menu.Remix.MixedUI.DyeableRect.GrafUpdate
- uid: Menu.Remix.MixedUI.DyeableRect.Hide*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.Hide
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_Hide
  name: Hide
  nameWithType: DyeableRect.Hide
  fullName: Menu.Remix.MixedUI.DyeableRect.Hide
- uid: Menu.Remix.MixedUI.DyeableRect.Show*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.Show
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_Show
  name: Show
  nameWithType: DyeableRect.Show
  fullName: Menu.Remix.MixedUI.DyeableRect.Show
- uid: Menu.Remix.MixedUI.DyeableRect.isHidden*
  commentId: Overload:Menu.Remix.MixedUI.DyeableRect.isHidden
  isExternal: true
  href: Menu.Remix.MixedUI.DyeableRect.html#Menu_Remix_MixedUI_DyeableRect_isHidden
  name: isHidden
  nameWithType: DyeableRect.isHidden
  fullName: Menu.Remix.MixedUI.DyeableRect.isHidden
