### YamlMime:ManagedReference
items:
- uid: Global.FCharInfo
  commentId: T:Global.FCharInfo
  id: FCharInfo
  parent: Global
  children:
  - Global.FCharInfo.#ctor
  - Global.FCharInfo.charID
  - Global.FCharInfo.height
  - Global.FCharInfo.letter
  - Global.FCharInfo.offsetX
  - Global.FCharInfo.offsetY
  - Global.FCharInfo.page
  - Global.FCharInfo.specificLineHeight
  - Global.FCharInfo.uvBottomLeft
  - Global.FCharInfo.uvBottomRight
  - Global.FCharInfo.uvRect
  - Global.FCharInfo.uvTopLeft
  - Global.FCharInfo.uvTopRight
  - Global.FCharInfo.width
  - Global.FCharInfo.x
  - Global.FCharInfo.xadvance
  - Global.FCharInfo.y
  langs:
  - csharp
  - vb
  name: FCharInfo
  nameWithType: FCharInfo
  fullName: FCharInfo
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FCharInfo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FCharInfo
    content.vb: Public Class FCharInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FCharInfo.charID
  commentId: F:Global.FCharInfo.charID
  id: charID
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: charID
  nameWithType: FCharInfo.charID
  fullName: FCharInfo.charID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.charID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int charID
    return:
      type: System.Int32
    content.vb: Public charID As Integer
- uid: Global.FCharInfo.x
  commentId: F:Global.FCharInfo.x
  id: x
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: x
  nameWithType: FCharInfo.x
  fullName: FCharInfo.x
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.x</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float x
    return:
      type: System.Single
    content.vb: Public x As Single
- uid: Global.FCharInfo.y
  commentId: F:Global.FCharInfo.y
  id: y
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: y
  nameWithType: FCharInfo.y
  fullName: FCharInfo.y
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.y</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float y
    return:
      type: System.Single
    content.vb: Public y As Single
- uid: Global.FCharInfo.width
  commentId: F:Global.FCharInfo.width
  id: width
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: width
  nameWithType: FCharInfo.width
  fullName: FCharInfo.width
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.width</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float width
    return:
      type: System.Single
    content.vb: Public width As Single
- uid: Global.FCharInfo.height
  commentId: F:Global.FCharInfo.height
  id: height
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: height
  nameWithType: FCharInfo.height
  fullName: FCharInfo.height
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.height</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float height
    return:
      type: System.Single
    content.vb: Public height As Single
- uid: Global.FCharInfo.uvRect
  commentId: F:Global.FCharInfo.uvRect
  id: uvRect
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: uvRect
  nameWithType: FCharInfo.uvRect
  fullName: FCharInfo.uvRect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.uvRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rect uvRect
    return:
      type: UnityEngine.Rect
    content.vb: Public uvRect As Rect
- uid: Global.FCharInfo.uvTopLeft
  commentId: F:Global.FCharInfo.uvTopLeft
  id: uvTopLeft
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: uvTopLeft
  nameWithType: FCharInfo.uvTopLeft
  fullName: FCharInfo.uvTopLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.uvTopLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 uvTopLeft
    return:
      type: UnityEngine.Vector2
    content.vb: Public uvTopLeft As Vector2
- uid: Global.FCharInfo.uvTopRight
  commentId: F:Global.FCharInfo.uvTopRight
  id: uvTopRight
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: uvTopRight
  nameWithType: FCharInfo.uvTopRight
  fullName: FCharInfo.uvTopRight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.uvTopRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 uvTopRight
    return:
      type: UnityEngine.Vector2
    content.vb: Public uvTopRight As Vector2
- uid: Global.FCharInfo.uvBottomRight
  commentId: F:Global.FCharInfo.uvBottomRight
  id: uvBottomRight
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: uvBottomRight
  nameWithType: FCharInfo.uvBottomRight
  fullName: FCharInfo.uvBottomRight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.uvBottomRight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 uvBottomRight
    return:
      type: UnityEngine.Vector2
    content.vb: Public uvBottomRight As Vector2
- uid: Global.FCharInfo.uvBottomLeft
  commentId: F:Global.FCharInfo.uvBottomLeft
  id: uvBottomLeft
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: uvBottomLeft
  nameWithType: FCharInfo.uvBottomLeft
  fullName: FCharInfo.uvBottomLeft
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.uvBottomLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 uvBottomLeft
    return:
      type: UnityEngine.Vector2
    content.vb: Public uvBottomLeft As Vector2
- uid: Global.FCharInfo.offsetX
  commentId: F:Global.FCharInfo.offsetX
  id: offsetX
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: offsetX
  nameWithType: FCharInfo.offsetX
  fullName: FCharInfo.offsetX
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.offsetX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offsetX
    return:
      type: System.Single
    content.vb: Public offsetX As Single
- uid: Global.FCharInfo.offsetY
  commentId: F:Global.FCharInfo.offsetY
  id: offsetY
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: offsetY
  nameWithType: FCharInfo.offsetY
  fullName: FCharInfo.offsetY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.offsetY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offsetY
    return:
      type: System.Single
    content.vb: Public offsetY As Single
- uid: Global.FCharInfo.xadvance
  commentId: F:Global.FCharInfo.xadvance
  id: xadvance
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: xadvance
  nameWithType: FCharInfo.xadvance
  fullName: FCharInfo.xadvance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.xadvance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float xadvance
    return:
      type: System.Single
    content.vb: Public xadvance As Single
- uid: Global.FCharInfo.page
  commentId: F:Global.FCharInfo.page
  id: page
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: page
  nameWithType: FCharInfo.page
  fullName: FCharInfo.page
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.page</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int page
    return:
      type: System.Int32
    content.vb: Public page As Integer
- uid: Global.FCharInfo.letter
  commentId: F:Global.FCharInfo.letter
  id: letter
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: letter
  nameWithType: FCharInfo.letter
  fullName: FCharInfo.letter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.letter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string letter
    return:
      type: System.String
    content.vb: Public letter As String
- uid: Global.FCharInfo.specificLineHeight
  commentId: F:Global.FCharInfo.specificLineHeight
  id: specificLineHeight
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: specificLineHeight
  nameWithType: FCharInfo.specificLineHeight
  fullName: FCharInfo.specificLineHeight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FCharInfo.specificLineHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float specificLineHeight
    return:
      type: System.Single
    content.vb: Public specificLineHeight As Single
- uid: Global.FCharInfo.#ctor
  commentId: M:Global.FCharInfo.#ctor
  id: '#ctor'
  parent: Global.FCharInfo
  langs:
  - csharp
  - vb
  name: FCharInfo()
  nameWithType: FCharInfo.FCharInfo()
  fullName: FCharInfo.FCharInfo()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FCharInfo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FCharInfo()
    content.vb: Public Sub New()
  overload: Global.FCharInfo.#ctor*
  nameWithType.vb: FCharInfo.New()
  fullName.vb: FCharInfo.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FCharInfo.#ctor*
  commentId: Overload:Global.FCharInfo.#ctor
  isExternal: true
  href: Global.FCharInfo.html#FCharInfo__ctor
  name: FCharInfo
  nameWithType: FCharInfo.FCharInfo
  fullName: FCharInfo.FCharInfo
  nameWithType.vb: FCharInfo.New
  fullName.vb: FCharInfo.New
  name.vb: New
