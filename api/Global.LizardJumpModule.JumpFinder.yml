### YamlMime:ManagedReference
items:
- uid: Global.LizardJumpModule.JumpFinder
  commentId: T:Global.LizardJumpModule.JumpFinder
  id: LizardJumpModule.JumpFinder
  parent: Global
  children:
  - Global.LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)
  - Global.LizardJumpModule.JumpFinder.BeneficialMovement
  - Global.LizardJumpModule.JumpFinder.Destroy
  - Global.LizardJumpModule.JumpFinder.Update
  - Global.LizardJumpModule.JumpFinder.bestJump
  - Global.LizardJumpModule.JumpFinder.chainJump
  - Global.LizardJumpModule.JumpFinder.currentJump
  - Global.LizardJumpModule.JumpFinder.dbsprts
  - Global.LizardJumpModule.JumpFinder.fade
  - Global.LizardJumpModule.JumpFinder.landingDirection
  - Global.LizardJumpModule.JumpFinder.lastControlledDir
  - Global.LizardJumpModule.JumpFinder.room
  - Global.LizardJumpModule.JumpFinder.slatedForDeletion
  - Global.LizardJumpModule.JumpFinder.startPos
  langs:
  - csharp
  - vb
  name: LizardJumpModule.JumpFinder
  nameWithType: LizardJumpModule.JumpFinder
  fullName: LizardJumpModule.JumpFinder
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardJumpModule.JumpFinder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class LizardJumpModule.JumpFinder
    content.vb: Public Class LizardJumpModule.JumpFinder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardJumpModule.JumpFinder.slatedForDeletion
  commentId: F:Global.LizardJumpModule.JumpFinder.slatedForDeletion
  id: slatedForDeletion
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: LizardJumpModule.JumpFinder.slatedForDeletion
  fullName: LizardJumpModule.JumpFinder.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: Global.LizardJumpModule.JumpFinder.room
  commentId: F:Global.LizardJumpModule.JumpFinder.room
  id: room
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: room
  nameWithType: LizardJumpModule.JumpFinder.room
  fullName: LizardJumpModule.JumpFinder.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.LizardJumpModule.JumpFinder.startPos
  commentId: F:Global.LizardJumpModule.JumpFinder.startPos
  id: startPos
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: startPos
  nameWithType: LizardJumpModule.JumpFinder.startPos
  fullName: LizardJumpModule.JumpFinder.startPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.startPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 startPos
    return:
      type: RWCustom.IntVector2
    content.vb: Public startPos As IntVector2
- uid: Global.LizardJumpModule.JumpFinder.fade
  commentId: F:Global.LizardJumpModule.JumpFinder.fade
  id: fade
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: fade
  nameWithType: LizardJumpModule.JumpFinder.fade
  fullName: LizardJumpModule.JumpFinder.fade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.fade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int fade
    return:
      type: System.Int32
    content.vb: Public fade As Integer
- uid: Global.LizardJumpModule.JumpFinder.dbsprts
  commentId: F:Global.LizardJumpModule.JumpFinder.dbsprts
  id: dbsprts
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: dbsprts
  nameWithType: LizardJumpModule.JumpFinder.dbsprts
  fullName: LizardJumpModule.JumpFinder.dbsprts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.dbsprts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite[] dbsprts
    return:
      type: Global.DebugSprite[]
    content.vb: Public dbsprts As DebugSprite()
- uid: Global.LizardJumpModule.JumpFinder.bestJump
  commentId: F:Global.LizardJumpModule.JumpFinder.bestJump
  id: bestJump
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: bestJump
  nameWithType: LizardJumpModule.JumpFinder.bestJump
  fullName: LizardJumpModule.JumpFinder.bestJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.bestJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardJumpModule.JumpFinder.JumpInstruction bestJump
    return:
      type: Global.LizardJumpModule.JumpFinder.JumpInstruction
    content.vb: Public bestJump As LizardJumpModule.JumpFinder.JumpInstruction
- uid: Global.LizardJumpModule.JumpFinder.currentJump
  commentId: F:Global.LizardJumpModule.JumpFinder.currentJump
  id: currentJump
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: currentJump
  nameWithType: LizardJumpModule.JumpFinder.currentJump
  fullName: LizardJumpModule.JumpFinder.currentJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.currentJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardJumpModule.JumpFinder.JumpInstruction currentJump
    return:
      type: Global.LizardJumpModule.JumpFinder.JumpInstruction
    content.vb: Public currentJump As LizardJumpModule.JumpFinder.JumpInstruction
- uid: Global.LizardJumpModule.JumpFinder.landingDirection
  commentId: F:Global.LizardJumpModule.JumpFinder.landingDirection
  id: landingDirection
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: landingDirection
  nameWithType: LizardJumpModule.JumpFinder.landingDirection
  fullName: LizardJumpModule.JumpFinder.landingDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.landingDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? landingDirection
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public landingDirection As Vector2?
- uid: Global.LizardJumpModule.JumpFinder.lastControlledDir
  commentId: F:Global.LizardJumpModule.JumpFinder.lastControlledDir
  id: lastControlledDir
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: lastControlledDir
  nameWithType: LizardJumpModule.JumpFinder.lastControlledDir
  fullName: LizardJumpModule.JumpFinder.lastControlledDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.lastControlledDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastControlledDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastControlledDir As Vector2
- uid: Global.LizardJumpModule.JumpFinder.chainJump
  commentId: F:Global.LizardJumpModule.JumpFinder.chainJump
  id: chainJump
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: chainJump
  nameWithType: LizardJumpModule.JumpFinder.chainJump
  fullName: LizardJumpModule.JumpFinder.chainJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardJumpModule.JumpFinder.chainJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool chainJump
    return:
      type: System.Boolean
    content.vb: Public chainJump As Boolean
- uid: Global.LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)
  commentId: M:Global.LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)
  id: '#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)'
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: JumpFinder(Room, LizardJumpModule, IntVector2, bool)
  nameWithType: LizardJumpModule.JumpFinder.JumpFinder(Room, LizardJumpModule, IntVector2, bool)
  fullName: LizardJumpModule.JumpFinder.JumpFinder(Room, LizardJumpModule, RWCustom.IntVector2, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardJumpModule.JumpFinder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public JumpFinder(Room room, LizardJumpModule owner, IntVector2 startPos, bool chainJump)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: owner
      type: Global.LizardJumpModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: startPos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startPos</parameter>
            <parameter>M:LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: chainJump
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chainJump</parameter>
            <parameter>M:LizardJumpModule.JumpFinder.#ctor(Room,LizardJumpModule,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, owner As LizardJumpModule, startPos As IntVector2, chainJump As Boolean)
  overload: Global.LizardJumpModule.JumpFinder.#ctor*
  nameWithType.vb: LizardJumpModule.JumpFinder.New(Room, LizardJumpModule, IntVector2, Boolean)
  fullName.vb: LizardJumpModule.JumpFinder.New(Room, LizardJumpModule, RWCustom.IntVector2, Boolean)
  name.vb: New(Room, LizardJumpModule, IntVector2, Boolean)
- uid: Global.LizardJumpModule.JumpFinder.Update
  commentId: M:Global.LizardJumpModule.JumpFinder.Update
  id: Update
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardJumpModule.JumpFinder.Update()
  fullName: LizardJumpModule.JumpFinder.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardJumpModule.JumpFinder.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.LizardJumpModule.JumpFinder.Update*
- uid: Global.LizardJumpModule.JumpFinder.Destroy
  commentId: M:Global.LizardJumpModule.JumpFinder.Destroy
  id: Destroy
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: LizardJumpModule.JumpFinder.Destroy()
  fullName: LizardJumpModule.JumpFinder.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardJumpModule.JumpFinder.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: Global.LizardJumpModule.JumpFinder.Destroy*
- uid: Global.LizardJumpModule.JumpFinder.BeneficialMovement
  commentId: P:Global.LizardJumpModule.JumpFinder.BeneficialMovement
  id: BeneficialMovement
  parent: Global.LizardJumpModule.JumpFinder
  langs:
  - csharp
  - vb
  name: BeneficialMovement
  nameWithType: LizardJumpModule.JumpFinder.BeneficialMovement
  fullName: LizardJumpModule.JumpFinder.BeneficialMovement
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardJumpModule.JumpFinder.BeneficialMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BeneficialMovement { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property BeneficialMovement As Boolean
  overload: Global.LizardJumpModule.JumpFinder.BeneficialMovement*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.DebugSprite[]
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite[]
  nameWithType: DebugSprite[]
  fullName: DebugSprite[]
  nameWithType.vb: DebugSprite()
  fullName.vb: DebugSprite()
  name.vb: DebugSprite()
  spec.csharp:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.DebugSprite
    name: DebugSprite
    isExternal: true
    href: DebugSprite.html
  - name: (
  - name: )
- uid: Global.LizardJumpModule.JumpFinder.JumpInstruction
  commentId: T:Global.LizardJumpModule.JumpFinder.JumpInstruction
  isExternal: true
  href: LizardJumpModule.html
  name: LizardJumpModule.JumpFinder.JumpInstruction
  nameWithType: LizardJumpModule.JumpFinder.JumpInstruction
  fullName: LizardJumpModule.JumpFinder.JumpInstruction
  spec.csharp:
  - uid: Global.LizardJumpModule
    name: LizardJumpModule
    isExternal: true
    href: LizardJumpModule.html
  - name: .
  - uid: Global.LizardJumpModule.JumpFinder
    name: JumpFinder
    isExternal: true
    href: LizardJumpModule.JumpFinder.html
  - name: .
  - uid: Global.LizardJumpModule.JumpFinder.JumpInstruction
    name: JumpInstruction
    isExternal: true
    href: LizardJumpModule.JumpFinder.JumpInstruction.html
  spec.vb:
  - uid: Global.LizardJumpModule
    name: LizardJumpModule
    isExternal: true
    href: LizardJumpModule.html
  - name: .
  - uid: Global.LizardJumpModule.JumpFinder
    name: JumpFinder
    isExternal: true
    href: LizardJumpModule.JumpFinder.html
  - name: .
  - uid: Global.LizardJumpModule.JumpFinder.JumpInstruction
    name: JumpInstruction
    isExternal: true
    href: LizardJumpModule.JumpFinder.JumpInstruction.html
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.LizardJumpModule.JumpFinder.#ctor*
  commentId: Overload:Global.LizardJumpModule.JumpFinder.#ctor
  isExternal: true
  href: Global.LizardJumpModule.JumpFinder.html#LizardJumpModule_JumpFinder__ctor_Room_LizardJumpModule_RWCustom_IntVector2_System_Boolean_
  name: JumpFinder
  nameWithType: LizardJumpModule.JumpFinder.JumpFinder
  fullName: LizardJumpModule.JumpFinder.JumpFinder
  nameWithType.vb: LizardJumpModule.JumpFinder.New
  fullName.vb: LizardJumpModule.JumpFinder.New
  name.vb: New
- uid: Global.LizardJumpModule
  commentId: T:Global.LizardJumpModule
  isExternal: true
  href: LizardJumpModule.html
  name: LizardJumpModule
  nameWithType: LizardJumpModule
  fullName: LizardJumpModule
- uid: Global.LizardJumpModule.JumpFinder.Update*
  commentId: Overload:Global.LizardJumpModule.JumpFinder.Update
  isExternal: true
  href: Global.LizardJumpModule.JumpFinder.html#LizardJumpModule_JumpFinder_Update
  name: Update
  nameWithType: LizardJumpModule.JumpFinder.Update
  fullName: LizardJumpModule.JumpFinder.Update
- uid: Global.LizardJumpModule.JumpFinder.Destroy*
  commentId: Overload:Global.LizardJumpModule.JumpFinder.Destroy
  isExternal: true
  href: Global.LizardJumpModule.JumpFinder.html#LizardJumpModule_JumpFinder_Destroy
  name: Destroy
  nameWithType: LizardJumpModule.JumpFinder.Destroy
  fullName: LizardJumpModule.JumpFinder.Destroy
- uid: Global.LizardJumpModule.JumpFinder.BeneficialMovement*
  commentId: Overload:Global.LizardJumpModule.JumpFinder.BeneficialMovement
  isExternal: true
  href: Global.LizardJumpModule.JumpFinder.html#LizardJumpModule_JumpFinder_BeneficialMovement
  name: BeneficialMovement
  nameWithType: LizardJumpModule.JumpFinder.BeneficialMovement
  fullName: LizardJumpModule.JumpFinder.BeneficialMovement
