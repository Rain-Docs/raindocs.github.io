### YamlMime:ManagedReference
items:
- uid: MoreSlugcats.VoidChain.Halo
  commentId: T:MoreSlugcats.VoidChain.Halo
  id: VoidChain.Halo
  parent: MoreSlugcats
  children:
  - MoreSlugcats.VoidChain.Halo.#ctor(MoreSlugcats.VoidChain,System.Int32)
  - MoreSlugcats.VoidChain.Halo.Circumference(System.Single)
  - MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)
  - MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)
  - MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)
  - MoreSlugcats.VoidChain.Halo.Speed
  - MoreSlugcats.VoidChain.Halo.Update
  - MoreSlugcats.VoidChain.Halo.activity
  - MoreSlugcats.VoidChain.Halo.circles
  - MoreSlugcats.VoidChain.Halo.dirtyGlyphs
  - MoreSlugcats.VoidChain.Halo.firstLineSprite
  - MoreSlugcats.VoidChain.Halo.firstSmallCircleSprite
  - MoreSlugcats.VoidChain.Halo.firstSprite
  - MoreSlugcats.VoidChain.Halo.glyphPositions
  - MoreSlugcats.VoidChain.Halo.glyphs
  - MoreSlugcats.VoidChain.Halo.lastPos
  - MoreSlugcats.VoidChain.Halo.lines
  - MoreSlugcats.VoidChain.Halo.pos
  - MoreSlugcats.VoidChain.Halo.ringsActive
  - MoreSlugcats.VoidChain.Halo.rotation
  - MoreSlugcats.VoidChain.Halo.smallCircles
  - MoreSlugcats.VoidChain.Halo.totalSprites
  langs:
  - csharp
  - vb
  name: VoidChain.Halo
  nameWithType: VoidChain.Halo
  fullName: MoreSlugcats.VoidChain.Halo
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MoreSlugcats.VoidChain.Halo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class VoidChain.Halo
    content.vb: Public Class VoidChain.Halo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: MoreSlugcats.VoidChain.Halo.firstSprite
  commentId: F:MoreSlugcats.VoidChain.Halo.firstSprite
  id: firstSprite
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: firstSprite
  nameWithType: VoidChain.Halo.firstSprite
  fullName: MoreSlugcats.VoidChain.Halo.firstSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.firstSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstSprite
    return:
      type: System.Int32
    content.vb: Public firstSprite As Integer
- uid: MoreSlugcats.VoidChain.Halo.totalSprites
  commentId: F:MoreSlugcats.VoidChain.Halo.totalSprites
  id: totalSprites
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: totalSprites
  nameWithType: VoidChain.Halo.totalSprites
  fullName: MoreSlugcats.VoidChain.Halo.totalSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.totalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int totalSprites
    return:
      type: System.Int32
    content.vb: Public totalSprites As Integer
- uid: MoreSlugcats.VoidChain.Halo.firstLineSprite
  commentId: F:MoreSlugcats.VoidChain.Halo.firstLineSprite
  id: firstLineSprite
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: firstLineSprite
  nameWithType: VoidChain.Halo.firstLineSprite
  fullName: MoreSlugcats.VoidChain.Halo.firstLineSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.firstLineSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstLineSprite
    return:
      type: System.Int32
    content.vb: Public firstLineSprite As Integer
- uid: MoreSlugcats.VoidChain.Halo.firstSmallCircleSprite
  commentId: F:MoreSlugcats.VoidChain.Halo.firstSmallCircleSprite
  id: firstSmallCircleSprite
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: firstSmallCircleSprite
  nameWithType: VoidChain.Halo.firstSmallCircleSprite
  fullName: MoreSlugcats.VoidChain.Halo.firstSmallCircleSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.firstSmallCircleSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstSmallCircleSprite
    return:
      type: System.Int32
    content.vb: Public firstSmallCircleSprite As Integer
- uid: MoreSlugcats.VoidChain.Halo.glyphs
  commentId: F:MoreSlugcats.VoidChain.Halo.glyphs
  id: glyphs
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: glyphs
  nameWithType: VoidChain.Halo.glyphs
  fullName: MoreSlugcats.VoidChain.Halo.glyphs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.glyphs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[][] glyphs
    return:
      type: System.Int32[][]
    content.vb: Public glyphs As Integer()()
- uid: MoreSlugcats.VoidChain.Halo.dirtyGlyphs
  commentId: F:MoreSlugcats.VoidChain.Halo.dirtyGlyphs
  id: dirtyGlyphs
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: dirtyGlyphs
  nameWithType: VoidChain.Halo.dirtyGlyphs
  fullName: MoreSlugcats.VoidChain.Halo.dirtyGlyphs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.dirtyGlyphs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[][] dirtyGlyphs
    return:
      type: System.Boolean[][]
    content.vb: Public dirtyGlyphs As Boolean()()
- uid: MoreSlugcats.VoidChain.Halo.glyphPositions
  commentId: F:MoreSlugcats.VoidChain.Halo.glyphPositions
  id: glyphPositions
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: glyphPositions
  nameWithType: VoidChain.Halo.glyphPositions
  fullName: MoreSlugcats.VoidChain.Halo.glyphPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.glyphPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[][,] glyphPositions
    return:
      type: System.Single[,][]
    content.vb: Public glyphPositions As Single()(,)
- uid: MoreSlugcats.VoidChain.Halo.circles
  commentId: F:MoreSlugcats.VoidChain.Halo.circles
  id: circles
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: circles
  nameWithType: VoidChain.Halo.circles
  fullName: MoreSlugcats.VoidChain.Halo.circles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.circles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int circles
    return:
      type: System.Int32
    content.vb: Public circles As Integer
- uid: MoreSlugcats.VoidChain.Halo.rotation
  commentId: F:MoreSlugcats.VoidChain.Halo.rotation
  id: rotation
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: VoidChain.Halo.rotation
  fullName: MoreSlugcats.VoidChain.Halo.rotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] rotation
    return:
      type: System.Single[,]
    content.vb: Public rotation As Single(,)
- uid: MoreSlugcats.VoidChain.Halo.lines
  commentId: F:MoreSlugcats.VoidChain.Halo.lines
  id: lines
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: lines
  nameWithType: VoidChain.Halo.lines
  fullName: MoreSlugcats.VoidChain.Halo.lines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.lines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] lines
    return:
      type: System.Single[,]
    content.vb: Public lines As Single(,)
- uid: MoreSlugcats.VoidChain.Halo.smallCircles
  commentId: F:MoreSlugcats.VoidChain.Halo.smallCircles
  id: smallCircles
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: smallCircles
  nameWithType: VoidChain.Halo.smallCircles
  fullName: MoreSlugcats.VoidChain.Halo.smallCircles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.smallCircles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] smallCircles
    return:
      type: System.Single[,]
    content.vb: Public smallCircles As Single(,)
- uid: MoreSlugcats.VoidChain.Halo.activity
  commentId: F:MoreSlugcats.VoidChain.Halo.activity
  id: activity
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: activity
  nameWithType: VoidChain.Halo.activity
  fullName: MoreSlugcats.VoidChain.Halo.activity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.activity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float activity
    return:
      type: System.Single
    content.vb: Public activity As Single
- uid: MoreSlugcats.VoidChain.Halo.ringsActive
  commentId: F:MoreSlugcats.VoidChain.Halo.ringsActive
  id: ringsActive
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: ringsActive
  nameWithType: VoidChain.Halo.ringsActive
  fullName: MoreSlugcats.VoidChain.Halo.ringsActive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.ringsActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ringsActive
    return:
      type: System.Int32
    content.vb: Public ringsActive As Integer
- uid: MoreSlugcats.VoidChain.Halo.pos
  commentId: F:MoreSlugcats.VoidChain.Halo.pos
  id: pos
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: VoidChain.Halo.pos
  fullName: MoreSlugcats.VoidChain.Halo.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: MoreSlugcats.VoidChain.Halo.lastPos
  commentId: F:MoreSlugcats.VoidChain.Halo.lastPos
  id: lastPos
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: VoidChain.Halo.lastPos
  fullName: MoreSlugcats.VoidChain.Halo.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.VoidChain.Halo.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: MoreSlugcats.VoidChain.Halo.#ctor(MoreSlugcats.VoidChain,System.Int32)
  commentId: M:MoreSlugcats.VoidChain.Halo.#ctor(MoreSlugcats.VoidChain,System.Int32)
  id: '#ctor(MoreSlugcats.VoidChain,System.Int32)'
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: Halo(VoidChain, int)
  nameWithType: VoidChain.Halo.Halo(VoidChain, int)
  fullName: MoreSlugcats.VoidChain.Halo.Halo(MoreSlugcats.VoidChain, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MoreSlugcats.VoidChain.Halo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Halo(VoidChain owner, int firstSprite)
    parameters:
    - id: owner
      type: MoreSlugcats.VoidChain
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.#ctor(MoreSlugcats.VoidChain,System.Int32)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.#ctor(MoreSlugcats.VoidChain,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As VoidChain, firstSprite As Integer)
  overload: MoreSlugcats.VoidChain.Halo.#ctor*
  nameWithType.vb: VoidChain.Halo.New(VoidChain, Integer)
  fullName.vb: MoreSlugcats.VoidChain.Halo.New(MoreSlugcats.VoidChain, Integer)
  name.vb: New(VoidChain, Integer)
- uid: MoreSlugcats.VoidChain.Halo.Circumference(System.Single)
  commentId: M:MoreSlugcats.VoidChain.Halo.Circumference(System.Single)
  id: Circumference(System.Single)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: Circumference(float)
  nameWithType: VoidChain.Halo.Circumference(float)
  fullName: MoreSlugcats.VoidChain.Halo.Circumference(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.Circumference(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Circumference(float rad)
    parameters:
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.Circumference(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.Circumference(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function Circumference(rad As Single) As Single
  overload: MoreSlugcats.VoidChain.Halo.Circumference*
  nameWithType.vb: VoidChain.Halo.Circumference(Single)
  fullName.vb: MoreSlugcats.VoidChain.Halo.Circumference(Single)
  name.vb: Circumference(Single)
- uid: MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)
  commentId: M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)
  id: RadAtCircle(System.Single,System.Single,System.Single)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: RadAtCircle(float, float, float)
  nameWithType: VoidChain.Halo.RadAtCircle(float, float, float)
  fullName: MoreSlugcats.VoidChain.Halo.RadAtCircle(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RadAtCircle(float circle, float timeStacker, float disruption)
    parameters:
    - id: circle
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>circle</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: disruption
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>disruption</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.RadAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function RadAtCircle(circle As Single, timeStacker As Single, disruption As Single) As Single
  overload: MoreSlugcats.VoidChain.Halo.RadAtCircle*
  nameWithType.vb: VoidChain.Halo.RadAtCircle(Single, Single, Single)
  fullName.vb: MoreSlugcats.VoidChain.Halo.RadAtCircle(Single, Single, Single)
  name.vb: RadAtCircle(Single, Single, Single)
- uid: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)
  commentId: M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)
  id: CircumferenceAtCircle(System.Single,System.Single,System.Single)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: CircumferenceAtCircle(float, float, float)
  nameWithType: VoidChain.Halo.CircumferenceAtCircle(float, float, float)
  fullName: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CircumferenceAtCircle(float circle, float timeStacker, float disruption)
    parameters:
    - id: circle
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>circle</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: disruption
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>disruption</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CircumferenceAtCircle(circle As Single, timeStacker As Single, disruption As Single) As Single
  overload: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle*
  nameWithType.vb: VoidChain.Halo.CircumferenceAtCircle(Single, Single, Single)
  fullName.vb: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle(Single, Single, Single)
  name.vb: CircumferenceAtCircle(Single, Single, Single)
- uid: MoreSlugcats.VoidChain.Halo.Update
  commentId: M:MoreSlugcats.VoidChain.Halo.Update
  id: Update
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: VoidChain.Halo.Update()
  fullName: MoreSlugcats.VoidChain.Halo.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: MoreSlugcats.VoidChain.Halo.Update*
- uid: MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: MoreSlugcats.VoidChain.Halo.InitiateSprites*
- uid: MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: MoreSlugcats.VoidChain.Halo.DrawSprites*
  nameWithType.vb: VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: MoreSlugcats.VoidChain.Halo.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)
  commentId: M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)
  id: GlyphPos(System.Int32,System.Int32,System.Single)
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: GlyphPos(int, int, float)
  nameWithType: VoidChain.Halo.GlyphPos(int, int, float)
  fullName: MoreSlugcats.VoidChain.Halo.GlyphPos(int, int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GlyphPos(int circle, int glyph, float timeStacker)
    parameters:
    - id: circle
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>circle</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: glyph
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>glyph</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MoreSlugcats.VoidChain.Halo.GlyphPos(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function GlyphPos(circle As Integer, glyph As Integer, timeStacker As Single) As Vector2
  overload: MoreSlugcats.VoidChain.Halo.GlyphPos*
  nameWithType.vb: VoidChain.Halo.GlyphPos(Integer, Integer, Single)
  fullName.vb: MoreSlugcats.VoidChain.Halo.GlyphPos(Integer, Integer, Single)
  name.vb: GlyphPos(Integer, Integer, Single)
- uid: MoreSlugcats.VoidChain.Halo.Speed
  commentId: P:MoreSlugcats.VoidChain.Halo.Speed
  id: Speed
  parent: MoreSlugcats.VoidChain.Halo
  langs:
  - csharp
  - vb
  name: Speed
  nameWithType: VoidChain.Halo.Speed
  fullName: MoreSlugcats.VoidChain.Halo.Speed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MoreSlugcats.VoidChain.Halo.Speed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Speed { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Speed As Single
  overload: MoreSlugcats.VoidChain.Halo.Speed*
references:
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[][]
  nameWithType: int[][]
  fullName: int[][]
  nameWithType.vb: Integer()()
  fullName.vb: Integer()()
  name.vb: Integer()()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
  - name: (
  - name: )
- uid: System.Boolean[][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[][]
  nameWithType: bool[][]
  fullName: bool[][]
  nameWithType.vb: Boolean()()
  fullName.vb: Boolean()()
  name.vb: Boolean()()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
  - name: (
  - name: )
- uid: System.Single[,][]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[][,]
  nameWithType: float[][,]
  fullName: float[][,]
  nameWithType.vb: Single()(,)
  fullName.vb: Single()(,)
  name.vb: Single()(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
  - name: (
  - name: ','
  - name: )
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: MoreSlugcats.VoidChain.Halo.#ctor*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.#ctor
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo__ctor_MoreSlugcats_VoidChain_System_Int32_
  name: Halo
  nameWithType: VoidChain.Halo.Halo
  fullName: MoreSlugcats.VoidChain.Halo.Halo
  nameWithType.vb: VoidChain.Halo.New
  fullName.vb: MoreSlugcats.VoidChain.Halo.New
  name.vb: New
- uid: MoreSlugcats.VoidChain
  commentId: T:MoreSlugcats.VoidChain
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.VoidChain.html
  name: VoidChain
  nameWithType: VoidChain
  fullName: MoreSlugcats.VoidChain
- uid: MoreSlugcats.VoidChain.Halo.Circumference*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.Circumference
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_Circumference_System_Single_
  name: Circumference
  nameWithType: VoidChain.Halo.Circumference
  fullName: MoreSlugcats.VoidChain.Halo.Circumference
- uid: MoreSlugcats.VoidChain.Halo.RadAtCircle*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.RadAtCircle
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_RadAtCircle_System_Single_System_Single_System_Single_
  name: RadAtCircle
  nameWithType: VoidChain.Halo.RadAtCircle
  fullName: MoreSlugcats.VoidChain.Halo.RadAtCircle
- uid: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_CircumferenceAtCircle_System_Single_System_Single_System_Single_
  name: CircumferenceAtCircle
  nameWithType: VoidChain.Halo.CircumferenceAtCircle
  fullName: MoreSlugcats.VoidChain.Halo.CircumferenceAtCircle
- uid: MoreSlugcats.VoidChain.Halo.Update*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.Update
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_Update
  name: Update
  nameWithType: VoidChain.Halo.Update
  fullName: MoreSlugcats.VoidChain.Halo.Update
- uid: MoreSlugcats.VoidChain.Halo.InitiateSprites*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.InitiateSprites
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: VoidChain.Halo.InitiateSprites
  fullName: MoreSlugcats.VoidChain.Halo.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: MoreSlugcats.VoidChain.Halo.DrawSprites*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.DrawSprites
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: VoidChain.Halo.DrawSprites
  fullName: MoreSlugcats.VoidChain.Halo.DrawSprites
- uid: MoreSlugcats.VoidChain.Halo.GlyphPos*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.GlyphPos
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_GlyphPos_System_Int32_System_Int32_System_Single_
  name: GlyphPos
  nameWithType: VoidChain.Halo.GlyphPos
  fullName: MoreSlugcats.VoidChain.Halo.GlyphPos
- uid: MoreSlugcats.VoidChain.Halo.Speed*
  commentId: Overload:MoreSlugcats.VoidChain.Halo.Speed
  isExternal: true
  href: MoreSlugcats.VoidChain.Halo.html#MoreSlugcats_VoidChain_Halo_Speed
  name: Speed
  nameWithType: VoidChain.Halo.Speed
  fullName: MoreSlugcats.VoidChain.Halo.Speed
