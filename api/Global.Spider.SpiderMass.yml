### YamlMime:ManagedReference
items:
- uid: Global.Spider.SpiderMass
  commentId: T:Global.Spider.SpiderMass
  id: Spider.SpiderMass
  parent: Global
  children:
  - Global.Spider.SpiderMass.#ctor(Spider,Room)
  - Global.Spider.SpiderMass.AbandonSpider(Spider)
  - Global.Spider.SpiderMass.AddSpider(Spider)
  - Global.Spider.SpiderMass.FirstSpider
  - Global.Spider.SpiderMass.Merge(Spider.SpiderMass)
  - Global.Spider.SpiderMass.ShouldIUpdate(System.Boolean)
  - Global.Spider.SpiderMass.Update(System.Boolean)
  - Global.Spider.SpiderMass.color
  - Global.Spider.SpiderMass.lastEu
  - Global.Spider.SpiderMass.room
  - Global.Spider.SpiderMass.spiders
  langs:
  - csharp
  - vb
  name: Spider.SpiderMass
  nameWithType: Spider.SpiderMass
  fullName: Spider.SpiderMass
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Spider.SpiderMass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class Spider.SpiderMass
    content.vb: Public MustInherit Class Spider.SpiderMass
  inheritance:
  - System.Object
  derivedClasses:
  - Global.Spider.Centipede
  - Global.Spider.Flock
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Spider.SpiderMass.spiders
  commentId: F:Global.Spider.SpiderMass.spiders
  id: spiders
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: spiders
  nameWithType: Spider.SpiderMass.spiders
  fullName: Spider.SpiderMass.spiders
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.SpiderMass.spiders</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Spider> spiders
    return:
      type: System.Collections.Generic.List{Spider}
    content.vb: Public spiders As List(Of Spider)
- uid: Global.Spider.SpiderMass.lastEu
  commentId: F:Global.Spider.SpiderMass.lastEu
  id: lastEu
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: lastEu
  nameWithType: Spider.SpiderMass.lastEu
  fullName: Spider.SpiderMass.lastEu
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.SpiderMass.lastEu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastEu
    return:
      type: System.Boolean
    content.vb: Public lastEu As Boolean
- uid: Global.Spider.SpiderMass.room
  commentId: F:Global.Spider.SpiderMass.room
  id: room
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: room
  nameWithType: Spider.SpiderMass.room
  fullName: Spider.SpiderMass.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.SpiderMass.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.Spider.SpiderMass.color
  commentId: F:Global.Spider.SpiderMass.color
  id: color
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: color
  nameWithType: Spider.SpiderMass.color
  fullName: Spider.SpiderMass.color
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.SpiderMass.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color color
    return:
      type: UnityEngine.Color
    content.vb: Public color As Color
- uid: Global.Spider.SpiderMass.#ctor(Spider,Room)
  commentId: M:Global.Spider.SpiderMass.#ctor(Spider,Room)
  id: '#ctor(Spider,Room)'
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: SpiderMass(Spider, Room)
  nameWithType: Spider.SpiderMass.SpiderMass(Spider, Room)
  fullName: Spider.SpiderMass.SpiderMass(Spider, Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Spider.SpiderMass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SpiderMass(Spider originalSpider, Room room)
    parameters:
    - id: originalSpider
      type: Global.Spider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originalSpider</parameter>
            <parameter>M:Spider.SpiderMass.#ctor(Spider,Room)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Spider.SpiderMass.#ctor(Spider,Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(originalSpider As Spider, room As Room)
  overload: Global.Spider.SpiderMass.#ctor*
  nameWithType.vb: Spider.SpiderMass.New(Spider, Room)
  fullName.vb: Spider.SpiderMass.New(Spider, Room)
  name.vb: New(Spider, Room)
- uid: Global.Spider.SpiderMass.Update(System.Boolean)
  commentId: M:Global.Spider.SpiderMass.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Spider.SpiderMass.Update(bool)
  fullName: Spider.SpiderMass.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.SpiderMass.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Spider.SpiderMass.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Update(eu As Boolean)
  overload: Global.Spider.SpiderMass.Update*
  nameWithType.vb: Spider.SpiderMass.Update(Boolean)
  fullName.vb: Spider.SpiderMass.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Spider.SpiderMass.ShouldIUpdate(System.Boolean)
  commentId: M:Global.Spider.SpiderMass.ShouldIUpdate(System.Boolean)
  id: ShouldIUpdate(System.Boolean)
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: ShouldIUpdate(bool)
  nameWithType: Spider.SpiderMass.ShouldIUpdate(bool)
  fullName: Spider.SpiderMass.ShouldIUpdate(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.SpiderMass.ShouldIUpdate(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ShouldIUpdate(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Spider.SpiderMass.ShouldIUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Spider.SpiderMass.ShouldIUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShouldIUpdate(eu As Boolean) As Boolean
  overload: Global.Spider.SpiderMass.ShouldIUpdate*
  nameWithType.vb: Spider.SpiderMass.ShouldIUpdate(Boolean)
  fullName.vb: Spider.SpiderMass.ShouldIUpdate(Boolean)
  name.vb: ShouldIUpdate(Boolean)
- uid: Global.Spider.SpiderMass.AddSpider(Spider)
  commentId: M:Global.Spider.SpiderMass.AddSpider(Spider)
  id: AddSpider(Spider)
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: AddSpider(Spider)
  nameWithType: Spider.SpiderMass.AddSpider(Spider)
  fullName: Spider.SpiderMass.AddSpider(Spider)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.SpiderMass.AddSpider(Spider)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddSpider(Spider spd)
    parameters:
    - id: spd
      type: Global.Spider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spd</parameter>
            <parameter>M:Spider.SpiderMass.AddSpider(Spider)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddSpider(spd As Spider)
  overload: Global.Spider.SpiderMass.AddSpider*
- uid: Global.Spider.SpiderMass.AbandonSpider(Spider)
  commentId: M:Global.Spider.SpiderMass.AbandonSpider(Spider)
  id: AbandonSpider(Spider)
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: AbandonSpider(Spider)
  nameWithType: Spider.SpiderMass.AbandonSpider(Spider)
  fullName: Spider.SpiderMass.AbandonSpider(Spider)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.SpiderMass.AbandonSpider(Spider)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AbandonSpider(Spider spd)
    parameters:
    - id: spd
      type: Global.Spider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spd</parameter>
            <parameter>M:Spider.SpiderMass.AbandonSpider(Spider)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AbandonSpider(spd As Spider)
  overload: Global.Spider.SpiderMass.AbandonSpider*
- uid: Global.Spider.SpiderMass.Merge(Spider.SpiderMass)
  commentId: M:Global.Spider.SpiderMass.Merge(Spider.SpiderMass)
  id: Merge(Spider.SpiderMass)
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: Merge(SpiderMass)
  nameWithType: Spider.SpiderMass.Merge(Spider.SpiderMass)
  fullName: Spider.SpiderMass.Merge(Spider.SpiderMass)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.SpiderMass.Merge(Spider.SpiderMass)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Merge(Spider.SpiderMass otherFlock)
    parameters:
    - id: otherFlock
      type: Global.Spider.SpiderMass
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherFlock</parameter>
            <parameter>M:Spider.SpiderMass.Merge(Spider.SpiderMass)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Merge(otherFlock As Spider.SpiderMass)
  overload: Global.Spider.SpiderMass.Merge*
- uid: Global.Spider.SpiderMass.FirstSpider
  commentId: P:Global.Spider.SpiderMass.FirstSpider
  id: FirstSpider
  parent: Global.Spider.SpiderMass
  langs:
  - csharp
  - vb
  name: FirstSpider
  nameWithType: Spider.SpiderMass.FirstSpider
  fullName: Spider.SpiderMass.FirstSpider
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Spider.SpiderMass.FirstSpider</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual Spider FirstSpider { get; }
    parameters: []
    return:
      type: Global.Spider
    content.vb: Public Overridable ReadOnly Property FirstSpider As Spider
  overload: Global.Spider.SpiderMass.FirstSpider*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Spider}
  commentId: T:System.Collections.Generic.List{Spider}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Spider>
  nameWithType: List<Spider>
  fullName: System.Collections.Generic.List<Spider>
  nameWithType.vb: List(Of Spider)
  fullName.vb: System.Collections.Generic.List(Of Spider)
  name.vb: List(Of Spider)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.Spider.SpiderMass.#ctor*
  commentId: Overload:Global.Spider.SpiderMass.#ctor
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass__ctor_Spider_Room_
  name: SpiderMass
  nameWithType: Spider.SpiderMass.SpiderMass
  fullName: Spider.SpiderMass.SpiderMass
  nameWithType.vb: Spider.SpiderMass.New
  fullName.vb: Spider.SpiderMass.New
  name.vb: New
- uid: Global.Spider
  commentId: T:Global.Spider
  isExternal: true
  href: Spider.html
  name: Spider
  nameWithType: Spider
  fullName: Spider
- uid: Global.Spider.SpiderMass.Update*
  commentId: Overload:Global.Spider.SpiderMass.Update
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_Update_System_Boolean_
  name: Update
  nameWithType: Spider.SpiderMass.Update
  fullName: Spider.SpiderMass.Update
- uid: Global.Spider.SpiderMass.ShouldIUpdate*
  commentId: Overload:Global.Spider.SpiderMass.ShouldIUpdate
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_ShouldIUpdate_System_Boolean_
  name: ShouldIUpdate
  nameWithType: Spider.SpiderMass.ShouldIUpdate
  fullName: Spider.SpiderMass.ShouldIUpdate
- uid: Global.Spider.SpiderMass.AddSpider*
  commentId: Overload:Global.Spider.SpiderMass.AddSpider
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_AddSpider_Spider_
  name: AddSpider
  nameWithType: Spider.SpiderMass.AddSpider
  fullName: Spider.SpiderMass.AddSpider
- uid: Global.Spider.SpiderMass.AbandonSpider*
  commentId: Overload:Global.Spider.SpiderMass.AbandonSpider
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_AbandonSpider_Spider_
  name: AbandonSpider
  nameWithType: Spider.SpiderMass.AbandonSpider
  fullName: Spider.SpiderMass.AbandonSpider
- uid: Global.Spider.SpiderMass.Merge*
  commentId: Overload:Global.Spider.SpiderMass.Merge
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_Merge_Spider_SpiderMass_
  name: Merge
  nameWithType: Spider.SpiderMass.Merge
  fullName: Spider.SpiderMass.Merge
- uid: Global.Spider.SpiderMass
  commentId: T:Global.Spider.SpiderMass
  isExternal: true
  href: Spider.html
  name: Spider.SpiderMass
  nameWithType: Spider.SpiderMass
  fullName: Spider.SpiderMass
  spec.csharp:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.SpiderMass
    name: SpiderMass
    isExternal: true
    href: Spider.SpiderMass.html
  spec.vb:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.SpiderMass
    name: SpiderMass
    isExternal: true
    href: Spider.SpiderMass.html
- uid: Global.Spider.SpiderMass.FirstSpider*
  commentId: Overload:Global.Spider.SpiderMass.FirstSpider
  isExternal: true
  href: Global.Spider.SpiderMass.html#Spider_SpiderMass_FirstSpider
  name: FirstSpider
  nameWithType: Spider.SpiderMass.FirstSpider
  fullName: Spider.SpiderMass.FirstSpider
