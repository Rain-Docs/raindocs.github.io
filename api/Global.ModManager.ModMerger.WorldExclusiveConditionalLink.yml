### YamlMime:ManagedReference
items:
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  commentId: T:Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  id: ModManager.ModMerger.WorldExclusiveConditionalLink
  parent: Global
  children:
  - Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor(System.String,System.String)
  - Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key
  - Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
  - Global.ModManager.ModMerger.WorldExclusiveConditionalLink.character
  - Global.ModManager.ModMerger.WorldExclusiveConditionalLink.roomName
  langs:
  - csharp
  - vb
  name: ModManager.ModMerger.WorldExclusiveConditionalLink
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ModManager.ModMerger.WorldExclusiveConditionalLink</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ModManager.ModMerger.WorldExclusiveConditionalLink
    content.vb: Public Class ModManager.ModMerger.WorldExclusiveConditionalLink
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.roomName
  commentId: F:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.roomName
  id: roomName
  parent: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  langs:
  - csharp
  - vb
  name: roomName
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.roomName
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.roomName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.ModMerger.WorldExclusiveConditionalLink.roomName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string roomName
    return:
      type: System.String
    content.vb: Public roomName As String
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.character
  commentId: F:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.character
  id: character
  parent: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  langs:
  - csharp
  - vb
  name: character
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.character
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.character
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.ModMerger.WorldExclusiveConditionalLink.character</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string character
    return:
      type: System.String
    content.vb: Public character As String
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor(System.String,System.String)
  commentId: M:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  langs:
  - csharp
  - vb
  name: WorldExclusiveConditionalLink(string, string)
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.WorldExclusiveConditionalLink(string, string)
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.WorldExclusiveConditionalLink(string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ModManager.ModMerger.WorldExclusiveConditionalLink</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldExclusiveConditionalLink(string character, string line)
    parameters:
    - id: character
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>character</parameter>
            <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: line
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>line</parameter>
            <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(character As String, line As String)
  overload: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor*
  nameWithType.vb: ModManager.ModMerger.WorldExclusiveConditionalLink.New(String, String)
  fullName.vb: ModManager.ModMerger.WorldExclusiveConditionalLink.New(String, String)
  name.vb: New(String, String)
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
  commentId: M:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
  id: ToString
  parent: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.ToString()
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString*
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key
  commentId: M:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key
  id: Key
  parent: Global.ModManager.ModMerger.WorldExclusiveConditionalLink
  langs:
  - csharp
  - vb
  name: Key()
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.Key()
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.Key()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.Key</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string Key()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.ModMerger.WorldExclusiveConditionalLink.Key</parameter>
          </include>
        </markup>
    content.vb: Public Function Key() As String
  overload: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor*
  commentId: Overload:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.#ctor
  isExternal: true
  href: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.html#ModManager_ModMerger_WorldExclusiveConditionalLink__ctor_System_String_System_String_
  name: WorldExclusiveConditionalLink
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.WorldExclusiveConditionalLink
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.WorldExclusiveConditionalLink
  nameWithType.vb: ModManager.ModMerger.WorldExclusiveConditionalLink.New
  fullName.vb: ModManager.ModMerger.WorldExclusiveConditionalLink.New
  name.vb: New
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString*
  commentId: Overload:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
  isExternal: true
  href: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.html#ModManager_ModMerger_WorldExclusiveConditionalLink_ToString
  name: ToString
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.ToString
- uid: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key*
  commentId: Overload:Global.ModManager.ModMerger.WorldExclusiveConditionalLink.Key
  isExternal: true
  href: Global.ModManager.ModMerger.WorldExclusiveConditionalLink.html#ModManager_ModMerger_WorldExclusiveConditionalLink_Key
  name: Key
  nameWithType: ModManager.ModMerger.WorldExclusiveConditionalLink.Key
  fullName: ModManager.ModMerger.WorldExclusiveConditionalLink.Key
