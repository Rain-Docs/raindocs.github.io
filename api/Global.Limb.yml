### YamlMime:ManagedReference
items:
- uid: Global.Limb
  commentId: T:Global.Limb
  id: Limb
  parent: Global
  children:
  - Global.Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)
  - Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  - Global.Limb.GrabbedTerrain
  - Global.Limb.OverLappingHuntPos
  - Global.Limb.Reset(UnityEngine.Vector2)
  - Global.Limb.Update
  - Global.Limb.absoluteHuntPos
  - Global.Limb.connection
  - Global.Limb.defaultHuntSpeed
  - Global.Limb.defaultQuickness
  - Global.Limb.huntSpeed
  - Global.Limb.limbNumber
  - Global.Limb.mode
  - Global.Limb.pushOutOfTerrain
  - Global.Limb.quickness
  - Global.Limb.reachedSnapPosition
  - Global.Limb.relativeHuntPos
  - Global.Limb.retract
  langs:
  - csharp
  - vb
  name: Limb
  nameWithType: Limb
  fullName: Limb
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Limb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Limb : BodyPart'
    content.vb: Public Class Limb Inherits BodyPart
  inheritance:
  - System.Object
  - Global.BodyPart
  derivedClasses:
  - Global.LizardLimb
  - Global.ScavengerGraphics.ScavengerHand
  - Global.ScavengerGraphics.ScavengerLeg
  - Global.SlugcatHand
  - Watcher.TardigradeLimb
  inheritedMembers:
  - Global.BodyPart.owner
  - Global.BodyPart.lastPos
  - Global.BodyPart.pos
  - Global.BodyPart.vel
  - Global.BodyPart.rad
  - Global.BodyPart.surfaceFric
  - Global.BodyPart.airFriction
  - Global.BodyPart.terrainContact
  - Global.BodyPart.bodyPartArrayIndex
  - Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  - Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Limb.connection
  commentId: F:Global.Limb.connection
  id: connection
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: connection
  nameWithType: Limb.connection
  fullName: Limb.connection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.connection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk connection
    return:
      type: Global.BodyChunk
    content.vb: Public connection As BodyChunk
- uid: Global.Limb.limbNumber
  commentId: F:Global.Limb.limbNumber
  id: limbNumber
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: limbNumber
  nameWithType: Limb.limbNumber
  fullName: Limb.limbNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.limbNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int limbNumber
    return:
      type: System.Int32
    content.vb: Public limbNumber As Integer
- uid: Global.Limb.defaultHuntSpeed
  commentId: F:Global.Limb.defaultHuntSpeed
  id: defaultHuntSpeed
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: defaultHuntSpeed
  nameWithType: Limb.defaultHuntSpeed
  fullName: Limb.defaultHuntSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.defaultHuntSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float defaultHuntSpeed
    return:
      type: System.Single
    content.vb: Protected defaultHuntSpeed As Single
- uid: Global.Limb.huntSpeed
  commentId: F:Global.Limb.huntSpeed
  id: huntSpeed
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: huntSpeed
  nameWithType: Limb.huntSpeed
  fullName: Limb.huntSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.huntSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float huntSpeed
    return:
      type: System.Single
    content.vb: Public huntSpeed As Single
- uid: Global.Limb.relativeHuntPos
  commentId: F:Global.Limb.relativeHuntPos
  id: relativeHuntPos
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: relativeHuntPos
  nameWithType: Limb.relativeHuntPos
  fullName: Limb.relativeHuntPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.relativeHuntPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 relativeHuntPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public relativeHuntPos As Vector2
- uid: Global.Limb.absoluteHuntPos
  commentId: F:Global.Limb.absoluteHuntPos
  id: absoluteHuntPos
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: absoluteHuntPos
  nameWithType: Limb.absoluteHuntPos
  fullName: Limb.absoluteHuntPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.absoluteHuntPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 absoluteHuntPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public absoluteHuntPos As Vector2
- uid: Global.Limb.defaultQuickness
  commentId: F:Global.Limb.defaultQuickness
  id: defaultQuickness
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: defaultQuickness
  nameWithType: Limb.defaultQuickness
  fullName: Limb.defaultQuickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.defaultQuickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float defaultQuickness
    return:
      type: System.Single
    content.vb: Protected defaultQuickness As Single
- uid: Global.Limb.quickness
  commentId: F:Global.Limb.quickness
  id: quickness
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: quickness
  nameWithType: Limb.quickness
  fullName: Limb.quickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.quickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float quickness
    return:
      type: System.Single
    content.vb: Public quickness As Single
- uid: Global.Limb.reachedSnapPosition
  commentId: F:Global.Limb.reachedSnapPosition
  id: reachedSnapPosition
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: reachedSnapPosition
  nameWithType: Limb.reachedSnapPosition
  fullName: Limb.reachedSnapPosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.reachedSnapPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool reachedSnapPosition
    return:
      type: System.Boolean
    content.vb: Public reachedSnapPosition As Boolean
- uid: Global.Limb.retract
  commentId: F:Global.Limb.retract
  id: retract
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: retract
  nameWithType: Limb.retract
  fullName: Limb.retract
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.retract</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool retract
    return:
      type: System.Boolean
    content.vb: Public retract As Boolean
- uid: Global.Limb.pushOutOfTerrain
  commentId: F:Global.Limb.pushOutOfTerrain
  id: pushOutOfTerrain
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: pushOutOfTerrain
  nameWithType: Limb.pushOutOfTerrain
  fullName: Limb.pushOutOfTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Limb.pushOutOfTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool pushOutOfTerrain
    return:
      type: System.Boolean
    content.vb: Public pushOutOfTerrain As Boolean
- uid: Global.Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)'
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: Limb(GraphicsModule, BodyChunk, int, float, float, float, float, float)
  nameWithType: Limb.Limb(GraphicsModule, BodyChunk, int, float, float, float, float, float)
  fullName: Limb.Limb(GraphicsModule, BodyChunk, int, float, float, float, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Limb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Limb(GraphicsModule owner, BodyChunk connection, int num, float rad, float sfFric, float aFric, float defaultHuntSpeed, float defaultQuickness)
    parameters:
    - id: owner
      type: Global.GraphicsModule
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: connection
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: num
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>num</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sfFric
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sfFric</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: aFric
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aFric</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: defaultHuntSpeed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultHuntSpeed</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: defaultQuickness
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultQuickness</parameter>
            <parameter>M:Limb.#ctor(GraphicsModule,BodyChunk,System.Int32,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As GraphicsModule, connection As BodyChunk, num As Integer, rad As Single, sfFric As Single, aFric As Single, defaultHuntSpeed As Single, defaultQuickness As Single)
  overload: Global.Limb.#ctor*
  nameWithType.vb: Limb.New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single)
  fullName.vb: Limb.New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single)
  name.vb: New(GraphicsModule, BodyChunk, Integer, Single, Single, Single, Single, Single)
- uid: Global.Limb.Update
  commentId: M:Global.Limb.Update
  id: Update
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Limb.Update()
  fullName: Limb.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Limb.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.BodyPart.Update
  overload: Global.Limb.Update*
- uid: Global.Limb.Reset(UnityEngine.Vector2)
  commentId: M:Global.Limb.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: Limb.Reset(Vector2)
  fullName: Limb.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Limb.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Reset(Vector2 resetPoint)
    parameters:
    - id: resetPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetPoint</parameter>
            <parameter>M:Limb.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Reset(resetPoint As Vector2)
  overridden: Global.BodyPart.Reset(UnityEngine.Vector2)
  overload: Global.Limb.Reset*
- uid: Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  id: FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: FindGrip(Room, Vector2, Vector2, float, Vector2, int, int, bool)
  nameWithType: Limb.FindGrip(Room, Vector2, Vector2, float, Vector2, int, int, bool)
  fullName: Limb.FindGrip(Room, UnityEngine.Vector2, UnityEngine.Vector2, float, UnityEngine.Vector2, int, int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FindGrip(Room room, Vector2 attachedPos, Vector2 searchFromPos, float maximumRadiusFromAttachedPos, Vector2 goalPos, int forbiddenXDirs, int forbiddenYDirs, bool behindWalls)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: attachedPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>attachedPos</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: searchFromPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>searchFromPos</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: maximumRadiusFromAttachedPos
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maximumRadiusFromAttachedPos</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: goalPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goalPos</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: forbiddenXDirs
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forbiddenXDirs</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: forbiddenYDirs
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forbiddenYDirs</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: behindWalls
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>behindWalls</parameter>
            <parameter>M:Limb.FindGrip(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,UnityEngine.Vector2,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FindGrip(room As Room, attachedPos As Vector2, searchFromPos As Vector2, maximumRadiusFromAttachedPos As Single, goalPos As Vector2, forbiddenXDirs As Integer, forbiddenYDirs As Integer, behindWalls As Boolean)
  overload: Global.Limb.FindGrip*
  nameWithType.vb: Limb.FindGrip(Room, Vector2, Vector2, Single, Vector2, Integer, Integer, Boolean)
  fullName.vb: Limb.FindGrip(Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, UnityEngine.Vector2, Integer, Integer, Boolean)
  name.vb: FindGrip(Room, Vector2, Vector2, Single, Vector2, Integer, Integer, Boolean)
- uid: Global.Limb.GrabbedTerrain
  commentId: M:Global.Limb.GrabbedTerrain
  id: GrabbedTerrain
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: GrabbedTerrain()
  nameWithType: Limb.GrabbedTerrain()
  fullName: Limb.GrabbedTerrain()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Limb.GrabbedTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void GrabbedTerrain()
    content.vb: Public Overridable Sub GrabbedTerrain()
  overload: Global.Limb.GrabbedTerrain*
- uid: Global.Limb.mode
  commentId: P:Global.Limb.mode
  id: mode
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: Limb.mode
  fullName: Limb.mode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Limb.mode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Limb.Mode mode { get; set; }
    parameters: []
    return:
      type: Global.Limb.Mode
    content.vb: Public Property mode As Limb.Mode
  overload: Global.Limb.mode*
- uid: Global.Limb.OverLappingHuntPos
  commentId: P:Global.Limb.OverLappingHuntPos
  id: OverLappingHuntPos
  parent: Global.Limb
  langs:
  - csharp
  - vb
  name: OverLappingHuntPos
  nameWithType: Limb.OverLappingHuntPos
  fullName: Limb.OverLappingHuntPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Limb.OverLappingHuntPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool OverLappingHuntPos { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property OverLappingHuntPos As Boolean
  overload: Global.Limb.OverLappingHuntPos*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.BodyPart
  commentId: T:Global.BodyPart
  isExternal: true
  href: BodyPart.html
  name: BodyPart
  nameWithType: BodyPart
  fullName: BodyPart
- uid: Global.BodyPart.owner
  commentId: F:Global.BodyPart.owner
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_owner
  name: owner
  nameWithType: BodyPart.owner
  fullName: BodyPart.owner
- uid: Global.BodyPart.lastPos
  commentId: F:Global.BodyPart.lastPos
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_lastPos
  name: lastPos
  nameWithType: BodyPart.lastPos
  fullName: BodyPart.lastPos
- uid: Global.BodyPart.pos
  commentId: F:Global.BodyPart.pos
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_pos
  name: pos
  nameWithType: BodyPart.pos
  fullName: BodyPart.pos
- uid: Global.BodyPart.vel
  commentId: F:Global.BodyPart.vel
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_vel
  name: vel
  nameWithType: BodyPart.vel
  fullName: BodyPart.vel
- uid: Global.BodyPart.rad
  commentId: F:Global.BodyPart.rad
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_rad
  name: rad
  nameWithType: BodyPart.rad
  fullName: BodyPart.rad
- uid: Global.BodyPart.surfaceFric
  commentId: F:Global.BodyPart.surfaceFric
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_surfaceFric
  name: surfaceFric
  nameWithType: BodyPart.surfaceFric
  fullName: BodyPart.surfaceFric
- uid: Global.BodyPart.airFriction
  commentId: F:Global.BodyPart.airFriction
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_airFriction
  name: airFriction
  nameWithType: BodyPart.airFriction
  fullName: BodyPart.airFriction
- uid: Global.BodyPart.terrainContact
  commentId: F:Global.BodyPart.terrainContact
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_terrainContact
  name: terrainContact
  nameWithType: BodyPart.terrainContact
  fullName: BodyPart.terrainContact
- uid: Global.BodyPart.bodyPartArrayIndex
  commentId: F:Global.BodyPart.bodyPartArrayIndex
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_bodyPartArrayIndex
  name: bodyPartArrayIndex
  nameWithType: BodyPart.bodyPartArrayIndex
  fullName: BodyPart.bodyPartArrayIndex
- uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  name: ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  nameWithType: BodyPart.ConnectToPoint(Vector2, float, bool, float, Vector2, float, float)
  fullName: BodyPart.ConnectToPoint(UnityEngine.Vector2, float, bool, float, UnityEngine.Vector2, float, float)
  nameWithType.vb: BodyPart.ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
  fullName.vb: BodyPart.ConnectToPoint(UnityEngine.Vector2, Single, Boolean, Single, UnityEngine.Vector2, Single, Single)
  name.vb: ConnectToPoint(Vector2, Single, Boolean, Single, Vector2, Single, Single)
  spec.csharp:
  - uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
    name: ConnectToPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.ConnectToPoint(UnityEngine.Vector2,System.Single,System.Boolean,System.Single,UnityEngine.Vector2,System.Single,System.Single)
    name: ConnectToPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_ConnectToPoint_UnityEngine_Vector2_System_Single_System_Boolean_System_Single_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  name: PushFromPoint(Vector2, float, float)
  nameWithType: BodyPart.PushFromPoint(Vector2, float, float)
  fullName: BodyPart.PushFromPoint(UnityEngine.Vector2, float, float)
  nameWithType.vb: BodyPart.PushFromPoint(Vector2, Single, Single)
  fullName.vb: BodyPart.PushFromPoint(UnityEngine.Vector2, Single, Single)
  name.vb: PushFromPoint(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
    name: PushFromPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.PushFromPoint(UnityEngine.Vector2,System.Single,System.Single)
    name: PushFromPoint
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushFromPoint_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  commentId: M:Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  name: OnOtherSideOfTerrain(Vector2, float)
  nameWithType: BodyPart.OnOtherSideOfTerrain(Vector2, float)
  fullName: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, float)
  nameWithType.vb: BodyPart.OnOtherSideOfTerrain(Vector2, Single)
  fullName.vb: BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2, Single)
  name.vb: OnOtherSideOfTerrain(Vector2, Single)
  spec.csharp:
  - uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
    name: OnOtherSideOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.BodyPart.OnOtherSideOfTerrain(UnityEngine.Vector2,System.Single)
    name: OnOtherSideOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_OnOtherSideOfTerrain_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  commentId: M:Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  name: PushOutOfTerrain(Room, Vector2)
  nameWithType: BodyPart.PushOutOfTerrain(Room, Vector2)
  fullName: BodyPart.PushOutOfTerrain(Room, UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
    name: PushOutOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.BodyPart.PushOutOfTerrain(Room,UnityEngine.Vector2)
    name: PushOutOfTerrain
    isExternal: true
    href: Global.BodyPart.html#BodyPart_PushOutOfTerrain_Room_UnityEngine_Vector2_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Limb.#ctor*
  commentId: Overload:Global.Limb.#ctor
  isExternal: true
  href: Global.Limb.html#Limb__ctor_GraphicsModule_BodyChunk_System_Int32_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: Limb
  nameWithType: Limb.Limb
  fullName: Limb.Limb
  nameWithType.vb: Limb.New
  fullName.vb: Limb.New
  name.vb: New
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.BodyPart.Update
  commentId: M:Global.BodyPart.Update
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_Update
  name: Update()
  nameWithType: BodyPart.Update()
  fullName: BodyPart.Update()
  spec.csharp:
  - uid: Global.BodyPart.Update
    name: Update
    isExternal: true
    href: Global.BodyPart.html#BodyPart_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.BodyPart.Update
    name: Update
    isExternal: true
    href: Global.BodyPart.html#BodyPart_Update
  - name: (
  - name: )
- uid: Global.Limb.Update*
  commentId: Overload:Global.Limb.Update
  isExternal: true
  href: Global.Limb.html#Limb_Update
  name: Update
  nameWithType: Limb.Update
  fullName: Limb.Update
- uid: Global.BodyPart.Reset(UnityEngine.Vector2)
  commentId: M:Global.BodyPart.Reset(UnityEngine.Vector2)
  parent: Global.BodyPart
  isExternal: true
  href: Global.BodyPart.html#BodyPart_Reset_UnityEngine_Vector2_
  name: Reset(Vector2)
  nameWithType: BodyPart.Reset(Vector2)
  fullName: BodyPart.Reset(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.BodyPart.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.BodyPart.html#BodyPart_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.BodyPart.Reset(UnityEngine.Vector2)
    name: Reset
    isExternal: true
    href: Global.BodyPart.html#BodyPart_Reset_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Limb.Reset*
  commentId: Overload:Global.Limb.Reset
  isExternal: true
  href: Global.Limb.html#Limb_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: Limb.Reset
  fullName: Limb.Reset
- uid: Global.Limb.FindGrip*
  commentId: Overload:Global.Limb.FindGrip
  isExternal: true
  href: Global.Limb.html#Limb_FindGrip_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_UnityEngine_Vector2_System_Int32_System_Int32_System_Boolean_
  name: FindGrip
  nameWithType: Limb.FindGrip
  fullName: Limb.FindGrip
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Limb.GrabbedTerrain*
  commentId: Overload:Global.Limb.GrabbedTerrain
  isExternal: true
  href: Global.Limb.html#Limb_GrabbedTerrain
  name: GrabbedTerrain
  nameWithType: Limb.GrabbedTerrain
  fullName: Limb.GrabbedTerrain
- uid: Global.Limb.mode*
  commentId: Overload:Global.Limb.mode
  isExternal: true
  href: Global.Limb.html#Limb_mode
  name: mode
  nameWithType: Limb.mode
  fullName: Limb.mode
- uid: Global.Limb.Mode
  commentId: T:Global.Limb.Mode
  isExternal: true
  href: Limb.html
  name: Limb.Mode
  nameWithType: Limb.Mode
  fullName: Limb.Mode
  spec.csharp:
  - uid: Global.Limb
    name: Limb
    isExternal: true
    href: Limb.html
  - name: .
  - uid: Global.Limb.Mode
    name: Mode
    isExternal: true
    href: Limb.Mode.html
  spec.vb:
  - uid: Global.Limb
    name: Limb
    isExternal: true
    href: Limb.html
  - name: .
  - uid: Global.Limb.Mode
    name: Mode
    isExternal: true
    href: Limb.Mode.html
- uid: Global.Limb.OverLappingHuntPos*
  commentId: Overload:Global.Limb.OverLappingHuntPos
  isExternal: true
  href: Global.Limb.html#Limb_OverLappingHuntPos
  name: OverLappingHuntPos
  nameWithType: Limb.OverLappingHuntPos
  fullName: Limb.OverLappingHuntPos
