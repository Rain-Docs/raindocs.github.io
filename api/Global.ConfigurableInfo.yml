### YamlMime:ManagedReference
items:
- uid: Global.ConfigurableInfo
  commentId: T:Global.ConfigurableInfo
  id: ConfigurableInfo
  parent: Global
  children:
  - Global.ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])
  - Global.ConfigurableInfo.Empty
  - Global.ConfigurableInfo.Tags
  - Global.ConfigurableInfo.acceptable
  - Global.ConfigurableInfo.autoTab
  - Global.ConfigurableInfo.description
  langs:
  - csharp
  - vb
  name: ConfigurableInfo
  nameWithType: ConfigurableInfo
  fullName: ConfigurableInfo
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ConfigurableInfo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ConfigurableInfo
    content.vb: Public Class ConfigurableInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ConfigurableInfo.description
  commentId: F:Global.ConfigurableInfo.description
  id: description
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: description
  nameWithType: ConfigurableInfo.description
  fullName: ConfigurableInfo.description
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableInfo.description</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string description
    return:
      type: System.String
    content.vb: Public ReadOnly description As String
- uid: Global.ConfigurableInfo.autoTab
  commentId: F:Global.ConfigurableInfo.autoTab
  id: autoTab
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: autoTab
  nameWithType: ConfigurableInfo.autoTab
  fullName: ConfigurableInfo.autoTab
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableInfo.autoTab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string autoTab
    return:
      type: System.String
    content.vb: Public ReadOnly autoTab As String
- uid: Global.ConfigurableInfo.acceptable
  commentId: F:Global.ConfigurableInfo.acceptable
  id: acceptable
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: acceptable
  nameWithType: ConfigurableInfo.acceptable
  fullName: ConfigurableInfo.acceptable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableInfo.acceptable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly ConfigAcceptableBase acceptable
    return:
      type: Global.ConfigAcceptableBase
    content.vb: Public ReadOnly acceptable As ConfigAcceptableBase
- uid: Global.ConfigurableInfo.Tags
  commentId: F:Global.ConfigurableInfo.Tags
  id: Tags
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: ConfigurableInfo.Tags
  fullName: ConfigurableInfo.Tags
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableInfo.Tags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly object[] Tags
    return:
      type: System.Object[]
    content.vb: Public ReadOnly Tags As Object()
- uid: Global.ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])
  commentId: M:Global.ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])
  id: '#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])'
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: ConfigurableInfo(string, ConfigAcceptableBase, string, params object[])
  nameWithType: ConfigurableInfo.ConfigurableInfo(string, ConfigAcceptableBase, string, params object[])
  fullName: ConfigurableInfo.ConfigurableInfo(string, ConfigAcceptableBase, string, params object[])
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ConfigurableInfo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ConfigurableInfo(string description, ConfigAcceptableBase acceptable = null, string autoTab = "", params object[] tags)
    parameters:
    - id: description
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>description</parameter>
            <parameter>M:ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])</parameter>
          </include>
        </markup>
    - id: acceptable
      type: Global.ConfigAcceptableBase
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>acceptable</parameter>
            <parameter>M:ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])</parameter>
          </include>
        </markup>
    - id: autoTab
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>autoTab</parameter>
            <parameter>M:ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])</parameter>
          </include>
        </markup>
    - id: tags
      type: System.Object[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tags</parameter>
            <parameter>M:ConfigurableInfo.#ctor(System.String,ConfigAcceptableBase,System.String,System.Object[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(description As String, acceptable As ConfigAcceptableBase = Nothing, autoTab As String = "", ParamArray tags As Object())
  overload: Global.ConfigurableInfo.#ctor*
  nameWithType.vb: ConfigurableInfo.New(String, ConfigAcceptableBase, String, ParamArray Object())
  fullName.vb: ConfigurableInfo.New(String, ConfigAcceptableBase, String, ParamArray Object())
  name.vb: New(String, ConfigAcceptableBase, String, ParamArray Object())
- uid: Global.ConfigurableInfo.Empty
  commentId: P:Global.ConfigurableInfo.Empty
  id: Empty
  parent: Global.ConfigurableInfo
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: ConfigurableInfo.Empty
  fullName: ConfigurableInfo.Empty
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigurableInfo.Empty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ConfigurableInfo Empty { get; }
    parameters: []
    return:
      type: Global.ConfigurableInfo
    content.vb: Public Shared ReadOnly Property Empty As ConfigurableInfo
  overload: Global.ConfigurableInfo.Empty*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ConfigAcceptableBase
  commentId: T:Global.ConfigAcceptableBase
  isExternal: true
  href: ConfigAcceptableBase.html
  name: ConfigAcceptableBase
  nameWithType: ConfigAcceptableBase
  fullName: ConfigAcceptableBase
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Global.ConfigurableInfo.#ctor*
  commentId: Overload:Global.ConfigurableInfo.#ctor
  isExternal: true
  href: Global.ConfigurableInfo.html#ConfigurableInfo__ctor_System_String_ConfigAcceptableBase_System_String_System_Object___
  name: ConfigurableInfo
  nameWithType: ConfigurableInfo.ConfigurableInfo
  fullName: ConfigurableInfo.ConfigurableInfo
  nameWithType.vb: ConfigurableInfo.New
  fullName.vb: ConfigurableInfo.New
  name.vb: New
- uid: Global.ConfigurableInfo.Empty*
  commentId: Overload:Global.ConfigurableInfo.Empty
  isExternal: true
  href: Global.ConfigurableInfo.html#ConfigurableInfo_Empty
  name: Empty
  nameWithType: ConfigurableInfo.Empty
  fullName: ConfigurableInfo.Empty
- uid: Global.ConfigurableInfo
  commentId: T:Global.ConfigurableInfo
  isExternal: true
  href: ConfigurableInfo.html
  name: ConfigurableInfo
  nameWithType: ConfigurableInfo
  fullName: ConfigurableInfo
