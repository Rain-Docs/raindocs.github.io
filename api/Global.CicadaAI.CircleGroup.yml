### YamlMime:ManagedReference
items:
- uid: Global.CicadaAI.CircleGroup
  commentId: T:Global.CicadaAI.CircleGroup
  id: CicadaAI.CircleGroup
  parent: Global
  children:
  - Global.CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)
  - Global.CicadaAI.CircleGroup.MyPos(AbstractCreature)
  - Global.CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)
  - Global.CicadaAI.CircleGroup.Update
  - Global.CicadaAI.CircleGroup.center
  - Global.CicadaAI.CircleGroup.group
  - Global.CicadaAI.CircleGroup.lifeTime
  - Global.CicadaAI.CircleGroup.radius
  - Global.CicadaAI.CircleGroup.room
  - Global.CicadaAI.CircleGroup.rotation
  - Global.CicadaAI.CircleGroup.rotationDir
  - Global.CicadaAI.CircleGroup.slatedForDeletion
  langs:
  - csharp
  - vb
  name: CicadaAI.CircleGroup
  nameWithType: CicadaAI.CircleGroup
  fullName: CicadaAI.CircleGroup
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CicadaAI.CircleGroup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class CicadaAI.CircleGroup
    content.vb: Public Class CicadaAI.CircleGroup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CicadaAI.CircleGroup.room
  commentId: F:Global.CicadaAI.CircleGroup.room
  id: room
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: room
  nameWithType: CicadaAI.CircleGroup.room
  fullName: CicadaAI.CircleGroup.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.CicadaAI.CircleGroup.group
  commentId: F:Global.CicadaAI.CircleGroup.group
  id: group
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: group
  nameWithType: CicadaAI.CircleGroup.group
  fullName: CicadaAI.CircleGroup.group
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.group</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AbstractCreature> group
    return:
      type: System.Collections.Generic.List{AbstractCreature}
    content.vb: Public group As List(Of AbstractCreature)
- uid: Global.CicadaAI.CircleGroup.center
  commentId: F:Global.CicadaAI.CircleGroup.center
  id: center
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: center
  nameWithType: CicadaAI.CircleGroup.center
  fullName: CicadaAI.CircleGroup.center
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.center</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 center
    return:
      type: UnityEngine.Vector2
    content.vb: Public center As Vector2
- uid: Global.CicadaAI.CircleGroup.radius
  commentId: F:Global.CicadaAI.CircleGroup.radius
  id: radius
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: radius
  nameWithType: CicadaAI.CircleGroup.radius
  fullName: CicadaAI.CircleGroup.radius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.radius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radius
    return:
      type: System.Single
    content.vb: Public radius As Single
- uid: Global.CicadaAI.CircleGroup.rotation
  commentId: F:Global.CicadaAI.CircleGroup.rotation
  id: rotation
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: CicadaAI.CircleGroup.rotation
  fullName: CicadaAI.CircleGroup.rotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rotation
    return:
      type: System.Single
    content.vb: Public rotation As Single
- uid: Global.CicadaAI.CircleGroup.lifeTime
  commentId: F:Global.CicadaAI.CircleGroup.lifeTime
  id: lifeTime
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: lifeTime
  nameWithType: CicadaAI.CircleGroup.lifeTime
  fullName: CicadaAI.CircleGroup.lifeTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.lifeTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lifeTime
    return:
      type: System.Int32
    content.vb: Public lifeTime As Integer
- uid: Global.CicadaAI.CircleGroup.slatedForDeletion
  commentId: F:Global.CicadaAI.CircleGroup.slatedForDeletion
  id: slatedForDeletion
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: slatedForDeletion
  nameWithType: CicadaAI.CircleGroup.slatedForDeletion
  fullName: CicadaAI.CircleGroup.slatedForDeletion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.slatedForDeletion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool slatedForDeletion
    return:
      type: System.Boolean
    content.vb: Public slatedForDeletion As Boolean
- uid: Global.CicadaAI.CircleGroup.rotationDir
  commentId: F:Global.CicadaAI.CircleGroup.rotationDir
  id: rotationDir
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: rotationDir
  nameWithType: CicadaAI.CircleGroup.rotationDir
  fullName: CicadaAI.CircleGroup.rotationDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CicadaAI.CircleGroup.rotationDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rotationDir
    return:
      type: System.Single
    content.vb: Public rotationDir As Single
- uid: Global.CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)
  commentId: M:Global.CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)
  id: '#ctor(Room,AbstractCreature,UnityEngine.Vector2)'
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: CircleGroup(Room, AbstractCreature, Vector2)
  nameWithType: CicadaAI.CircleGroup.CircleGroup(Room, AbstractCreature, Vector2)
  fullName: CicadaAI.CircleGroup.CircleGroup(Room, AbstractCreature, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CicadaAI.CircleGroup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CircleGroup(Room room, AbstractCreature originalCicada, Vector2 center)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: originalCicada
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originalCicada</parameter>
            <parameter>M:CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: center
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>center</parameter>
            <parameter>M:CicadaAI.CircleGroup.#ctor(Room,AbstractCreature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, originalCicada As AbstractCreature, center As Vector2)
  overload: Global.CicadaAI.CircleGroup.#ctor*
  nameWithType.vb: CicadaAI.CircleGroup.New(Room, AbstractCreature, Vector2)
  fullName.vb: CicadaAI.CircleGroup.New(Room, AbstractCreature, UnityEngine.Vector2)
  name.vb: New(Room, AbstractCreature, Vector2)
- uid: Global.CicadaAI.CircleGroup.Update
  commentId: M:Global.CicadaAI.CircleGroup.Update
  id: Update
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: CicadaAI.CircleGroup.Update()
  fullName: CicadaAI.CircleGroup.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CicadaAI.CircleGroup.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.CicadaAI.CircleGroup.Update*
- uid: Global.CicadaAI.CircleGroup.MyPos(AbstractCreature)
  commentId: M:Global.CicadaAI.CircleGroup.MyPos(AbstractCreature)
  id: MyPos(AbstractCreature)
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: MyPos(AbstractCreature)
  nameWithType: CicadaAI.CircleGroup.MyPos(AbstractCreature)
  fullName: CicadaAI.CircleGroup.MyPos(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CicadaAI.CircleGroup.MyPos(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MyPos(AbstractCreature cicada)
    parameters:
    - id: cicada
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cicada</parameter>
            <parameter>M:CicadaAI.CircleGroup.MyPos(AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CicadaAI.CircleGroup.MyPos(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Function MyPos(cicada As AbstractCreature) As Vector2
  overload: Global.CicadaAI.CircleGroup.MyPos*
- uid: Global.CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)
  commentId: M:Global.CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)
  id: RemoveCicada(AbstractCreature)
  parent: Global.CicadaAI.CircleGroup
  langs:
  - csharp
  - vb
  name: RemoveCicada(AbstractCreature)
  nameWithType: CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)
  fullName: CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveCicada(AbstractCreature cicada)
    parameters:
    - id: cicada
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cicada</parameter>
            <parameter>M:CicadaAI.CircleGroup.RemoveCicada(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveCicada(cicada As AbstractCreature)
  overload: Global.CicadaAI.CircleGroup.RemoveCicada*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: System.Collections.Generic.List{AbstractCreature}
  commentId: T:System.Collections.Generic.List{AbstractCreature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractCreature>
  nameWithType: List<AbstractCreature>
  fullName: System.Collections.Generic.List<AbstractCreature>
  nameWithType.vb: List(Of AbstractCreature)
  fullName.vb: System.Collections.Generic.List(Of AbstractCreature)
  name.vb: List(Of AbstractCreature)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.CicadaAI.CircleGroup.#ctor*
  commentId: Overload:Global.CicadaAI.CircleGroup.#ctor
  isExternal: true
  href: Global.CicadaAI.CircleGroup.html#CicadaAI_CircleGroup__ctor_Room_AbstractCreature_UnityEngine_Vector2_
  name: CircleGroup
  nameWithType: CicadaAI.CircleGroup.CircleGroup
  fullName: CicadaAI.CircleGroup.CircleGroup
  nameWithType.vb: CicadaAI.CircleGroup.New
  fullName.vb: CicadaAI.CircleGroup.New
  name.vb: New
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.CicadaAI.CircleGroup.Update*
  commentId: Overload:Global.CicadaAI.CircleGroup.Update
  isExternal: true
  href: Global.CicadaAI.CircleGroup.html#CicadaAI_CircleGroup_Update
  name: Update
  nameWithType: CicadaAI.CircleGroup.Update
  fullName: CicadaAI.CircleGroup.Update
- uid: Global.CicadaAI.CircleGroup.MyPos*
  commentId: Overload:Global.CicadaAI.CircleGroup.MyPos
  isExternal: true
  href: Global.CicadaAI.CircleGroup.html#CicadaAI_CircleGroup_MyPos_AbstractCreature_
  name: MyPos
  nameWithType: CicadaAI.CircleGroup.MyPos
  fullName: CicadaAI.CircleGroup.MyPos
- uid: Global.CicadaAI.CircleGroup.RemoveCicada*
  commentId: Overload:Global.CicadaAI.CircleGroup.RemoveCicada
  isExternal: true
  href: Global.CicadaAI.CircleGroup.html#CicadaAI_CircleGroup_RemoveCicada_AbstractCreature_
  name: RemoveCicada
  nameWithType: CicadaAI.CircleGroup.RemoveCicada
  fullName: CicadaAI.CircleGroup.RemoveCicada
