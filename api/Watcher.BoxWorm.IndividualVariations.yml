### YamlMime:ManagedReference
items:
- uid: Watcher.BoxWorm.IndividualVariations
  commentId: T:Watcher.BoxWorm.IndividualVariations
  id: BoxWorm.IndividualVariations
  parent: Watcher
  children:
  - Watcher.BoxWorm.IndividualVariations.#ctor
  - Watcher.BoxWorm.IndividualVariations.#ctor(AbstractCreature)
  - Watcher.BoxWorm.IndividualVariations.hasLarva
  - Watcher.BoxWorm.IndividualVariations.horizontalOffsets
  - Watcher.BoxWorm.IndividualVariations.numberOfLarva
  - Watcher.BoxWorm.IndividualVariations.numberOfLarvaHolders
  - Watcher.BoxWorm.IndividualVariations.sizeVariation
  langs:
  - csharp
  - vb
  name: BoxWorm.IndividualVariations
  nameWithType: BoxWorm.IndividualVariations
  fullName: Watcher.BoxWorm.IndividualVariations
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.BoxWorm.IndividualVariations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class BoxWorm.IndividualVariations
    content.vb: Public Class BoxWorm.IndividualVariations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.BoxWorm.IndividualVariations.numberOfLarvaHolders
  commentId: F:Watcher.BoxWorm.IndividualVariations.numberOfLarvaHolders
  id: numberOfLarvaHolders
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: numberOfLarvaHolders
  nameWithType: BoxWorm.IndividualVariations.numberOfLarvaHolders
  fullName: Watcher.BoxWorm.IndividualVariations.numberOfLarvaHolders
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BoxWorm.IndividualVariations.numberOfLarvaHolders</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int numberOfLarvaHolders
    return:
      type: System.Int32
    content.vb: Public numberOfLarvaHolders As Integer
- uid: Watcher.BoxWorm.IndividualVariations.numberOfLarva
  commentId: F:Watcher.BoxWorm.IndividualVariations.numberOfLarva
  id: numberOfLarva
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: numberOfLarva
  nameWithType: BoxWorm.IndividualVariations.numberOfLarva
  fullName: Watcher.BoxWorm.IndividualVariations.numberOfLarva
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BoxWorm.IndividualVariations.numberOfLarva</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int numberOfLarva
    return:
      type: System.Int32
    content.vb: Public numberOfLarva As Integer
- uid: Watcher.BoxWorm.IndividualVariations.sizeVariation
  commentId: F:Watcher.BoxWorm.IndividualVariations.sizeVariation
  id: sizeVariation
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: sizeVariation
  nameWithType: BoxWorm.IndividualVariations.sizeVariation
  fullName: Watcher.BoxWorm.IndividualVariations.sizeVariation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BoxWorm.IndividualVariations.sizeVariation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sizeVariation
    return:
      type: System.Single
    content.vb: Public sizeVariation As Single
- uid: Watcher.BoxWorm.IndividualVariations.horizontalOffsets
  commentId: F:Watcher.BoxWorm.IndividualVariations.horizontalOffsets
  id: horizontalOffsets
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: horizontalOffsets
  nameWithType: BoxWorm.IndividualVariations.horizontalOffsets
  fullName: Watcher.BoxWorm.IndividualVariations.horizontalOffsets
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BoxWorm.IndividualVariations.horizontalOffsets</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] horizontalOffsets
    return:
      type: System.Single[]
    content.vb: Public horizontalOffsets As Single()
- uid: Watcher.BoxWorm.IndividualVariations.hasLarva
  commentId: F:Watcher.BoxWorm.IndividualVariations.hasLarva
  id: hasLarva
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: hasLarva
  nameWithType: BoxWorm.IndividualVariations.hasLarva
  fullName: Watcher.BoxWorm.IndividualVariations.hasLarva
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BoxWorm.IndividualVariations.hasLarva</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] hasLarva
    return:
      type: System.Boolean[]
    content.vb: Public hasLarva As Boolean()
- uid: Watcher.BoxWorm.IndividualVariations.#ctor
  commentId: M:Watcher.BoxWorm.IndividualVariations.#ctor
  id: '#ctor'
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: IndividualVariations()
  nameWithType: BoxWorm.IndividualVariations.IndividualVariations()
  fullName: Watcher.BoxWorm.IndividualVariations.IndividualVariations()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.BoxWorm.IndividualVariations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IndividualVariations()
    content.vb: Public Sub New()
  overload: Watcher.BoxWorm.IndividualVariations.#ctor*
  nameWithType.vb: BoxWorm.IndividualVariations.New()
  fullName.vb: Watcher.BoxWorm.IndividualVariations.New()
  name.vb: New()
- uid: Watcher.BoxWorm.IndividualVariations.#ctor(AbstractCreature)
  commentId: M:Watcher.BoxWorm.IndividualVariations.#ctor(AbstractCreature)
  id: '#ctor(AbstractCreature)'
  parent: Watcher.BoxWorm.IndividualVariations
  langs:
  - csharp
  - vb
  name: IndividualVariations(AbstractCreature)
  nameWithType: BoxWorm.IndividualVariations.IndividualVariations(AbstractCreature)
  fullName: Watcher.BoxWorm.IndividualVariations.IndividualVariations(AbstractCreature)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.BoxWorm.IndividualVariations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IndividualVariations(AbstractCreature aCreature)
    parameters:
    - id: aCreature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>aCreature</parameter>
            <parameter>M:Watcher.BoxWorm.IndividualVariations.#ctor(AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(aCreature As AbstractCreature)
  overload: Watcher.BoxWorm.IndividualVariations.#ctor*
  nameWithType.vb: BoxWorm.IndividualVariations.New(AbstractCreature)
  fullName.vb: Watcher.BoxWorm.IndividualVariations.New(AbstractCreature)
  name.vb: New(AbstractCreature)
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Watcher.BoxWorm.IndividualVariations.#ctor*
  commentId: Overload:Watcher.BoxWorm.IndividualVariations.#ctor
  isExternal: true
  href: Watcher.BoxWorm.IndividualVariations.html#Watcher_BoxWorm_IndividualVariations__ctor
  name: IndividualVariations
  nameWithType: BoxWorm.IndividualVariations.IndividualVariations
  fullName: Watcher.BoxWorm.IndividualVariations.IndividualVariations
  nameWithType.vb: BoxWorm.IndividualVariations.New
  fullName.vb: Watcher.BoxWorm.IndividualVariations.New
  name.vb: New
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
