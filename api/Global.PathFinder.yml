### YamlMime:ManagedReference
items:
- uid: Global.PathFinder
  commentId: T:Global.PathFinder
  id: PathFinder
  parent: Global
  children:
  - Global.PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)
  - Global.PathFinder.AITileAtWorldCoordinate(WorldCoordinate)
  - Global.PathFinder.AbortCurrentGenerationPathFinding
  - Global.PathFinder.AccessibilityMappingDone
  - Global.PathFinder.AddToCheckNextList(PathFinder.PathingCell)
  - Global.PathFinder.AssignNewDestination(WorldCoordinate)
  - Global.PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)
  - Global.PathFinder.BestRegionTransportationGoal
  - Global.PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)
  - Global.PathFinder.CheckNeighbours(PathFinder.PathingCell)
  - Global.PathFinder.ConnectAITile(System.Int32,System.Int32)
  - Global.PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)
  - Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)
  - Global.PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  - Global.PathFinder.CoordinateCost(WorldCoordinate)
  - Global.PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)
  - Global.PathFinder.CoordinateReachable(WorldCoordinate)
  - Global.PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)
  - Global.PathFinder.CoordinateViable(WorldCoordinate)
  - Global.PathFinder.CreatePathForAbstractreature(WorldCoordinate)
  - Global.PathFinder.CurrentRoomCells
  - Global.PathFinder.DebugInfo(WorldCoordinate)
  - Global.PathFinder.DestInRoom
  - Global.PathFinder.DestinationExit(System.Int32,System.Int32)
  - Global.PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)
  - Global.PathFinder.DoneMappingAccessibility
  - Global.PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)
  - Global.PathFinder.ForbiddenEntranceDist(WorldCoordinate)
  - Global.PathFinder.ForceNextDestination
  - Global.PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)
  - Global.PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)
  - Global.PathFinder.GetDestination
  - Global.PathFinder.GetEffectualDestination
  - Global.PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)
  - Global.PathFinder.InThisRealizedRoom(WorldCoordinate)
  - Global.PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])
  - Global.PathFinder.InitiatePath(System.Int32)
  - Global.PathFinder.LeavingRoom
  - Global.PathFinder.LogWorldCellState
  - Global.PathFinder.NewRoom(Room)
  - Global.PathFinder.OutOfElement
  - Global.PathFinder.OutOfElement(WorldCoordinate)
  - Global.PathFinder.PathWithExits(WorldCoordinate,System.Boolean)
  - Global.PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)
  - Global.PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.PathFinder.Reset(Room)
  - Global.PathFinder.RestartPathFinding
  - Global.PathFinder.SetDestination(WorldCoordinate)
  - Global.PathFinder.Update
  - Global.PathFinder.WorldAITiles
  - Global.PathFinder.WorldCells
  - Global.PathFinder.acceptablePathAge
  - Global.PathFinder.accessibilityCenter
  - Global.PathFinder.accessibilityMapper
  - Global.PathFinder.accessibilityStepsPerFrame
  - Global.PathFinder.checkNextList
  - Global.PathFinder.coveredArea
  - Global.PathFinder.creature
  - Global.PathFinder.creatureFollowingGeneration
  - Global.PathFinder.creaturePos
  - Global.PathFinder.creatureType
  - Global.PathFinder.currentlyFollowingDestination
  - Global.PathFinder.debugDrawer
  - Global.PathFinder.destination
  - Global.PathFinder.fallbackPathingCell
  - Global.PathFinder.forbiddenEntrance
  - Global.PathFinder.forbiddenEntranceCounter
  - Global.PathFinder.forbiddenNode
  - Global.PathFinder.goalFoundGeneration
  - Global.PathFinder.lastFollowingGeneration
  - Global.PathFinder.lookingForImpossiblePath
  - Global.PathFinder.minimumPossiblePathCost
  - Global.PathFinder.nextDestination
  - Global.PathFinder.nonShortcutRoomEntrancePos
  - Global.PathFinder.pathGeneration
  - Global.PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone
  - Global.PathFinder.realizedRoom
  - Global.PathFinder.room
  - Global.PathFinder.stepsPerFrame
  - Global.PathFinder.timeInGeneration
  - Global.PathFinder.timeUntilPathCertain
  - Global.PathFinder.visualize
  - Global.PathFinder.visualizePath
  - Global.PathFinder.walkPastPointOfNoReturn
  - Global.PathFinder.world
  langs:
  - csharp
  - vb
  name: PathFinder
  nameWithType: PathFinder
  fullName: PathFinder
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PathFinder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public abstract class PathFinder : AIModule'
    content.vb: Public MustInherit Class PathFinder Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  derivedClasses:
  - Global.BigEelPather
  - Global.BorderExitPather
  - Global.CicadaPather
  - Global.FishPather
  - Global.LizardPather
  - Global.MirosBirdPather
  - Global.SnailPather
  - Global.StandardPather
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PathFinder.destination
  commentId: F:Global.PathFinder.destination
  id: destination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: destination
  nameWithType: PathFinder.destination
  fullName: PathFinder.destination
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.destination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected WorldCoordinate destination
    return:
      type: Global.WorldCoordinate
    content.vb: Protected destination As WorldCoordinate
- uid: Global.PathFinder.nextDestination
  commentId: F:Global.PathFinder.nextDestination
  id: nextDestination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: nextDestination
  nameWithType: PathFinder.nextDestination
  fullName: PathFinder.nextDestination
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.nextDestination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected WorldCoordinate? nextDestination
    return:
      type: System.Nullable{WorldCoordinate}
    content.vb: Protected nextDestination As WorldCoordinate?
- uid: Global.PathFinder.currentlyFollowingDestination
  commentId: F:Global.PathFinder.currentlyFollowingDestination
  id: currentlyFollowingDestination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: currentlyFollowingDestination
  nameWithType: PathFinder.currentlyFollowingDestination
  fullName: PathFinder.currentlyFollowingDestination
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.currentlyFollowingDestination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected WorldCoordinate currentlyFollowingDestination
    return:
      type: Global.WorldCoordinate
    content.vb: Protected currentlyFollowingDestination As WorldCoordinate
- uid: Global.PathFinder.pathGeneration
  commentId: F:Global.PathFinder.pathGeneration
  id: pathGeneration
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: pathGeneration
  nameWithType: PathFinder.pathGeneration
  fullName: PathFinder.pathGeneration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.pathGeneration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pathGeneration
    return:
      type: System.Int32
    content.vb: Public pathGeneration As Integer
- uid: Global.PathFinder.creatureFollowingGeneration
  commentId: F:Global.PathFinder.creatureFollowingGeneration
  id: creatureFollowingGeneration
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: creatureFollowingGeneration
  nameWithType: PathFinder.creatureFollowingGeneration
  fullName: PathFinder.creatureFollowingGeneration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.creatureFollowingGeneration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int creatureFollowingGeneration
    return:
      type: System.Int32
    content.vb: Public creatureFollowingGeneration As Integer
- uid: Global.PathFinder.goalFoundGeneration
  commentId: F:Global.PathFinder.goalFoundGeneration
  id: goalFoundGeneration
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: goalFoundGeneration
  nameWithType: PathFinder.goalFoundGeneration
  fullName: PathFinder.goalFoundGeneration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.goalFoundGeneration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int goalFoundGeneration
    return:
      type: System.Int32
    content.vb: Public goalFoundGeneration As Integer
- uid: Global.PathFinder.checkNextList
  commentId: F:Global.PathFinder.checkNextList
  id: checkNextList
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: checkNextList
  nameWithType: PathFinder.checkNextList
  fullName: PathFinder.checkNextList
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.checkNextList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected List<PathFinder.PathingCell> checkNextList
    return:
      type: System.Collections.Generic.List{PathFinder.PathingCell}
    content.vb: Protected checkNextList As List(Of PathFinder.PathingCell)
- uid: Global.PathFinder.coveredArea
  commentId: F:Global.PathFinder.coveredArea
  id: coveredArea
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: coveredArea
  nameWithType: PathFinder.coveredArea
  fullName: PathFinder.coveredArea
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.coveredArea</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntRect coveredArea
    return:
      type: RWCustom.IntRect
    content.vb: Public coveredArea As IntRect
- uid: Global.PathFinder.acceptablePathAge
  commentId: F:Global.PathFinder.acceptablePathAge
  id: acceptablePathAge
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: acceptablePathAge
  nameWithType: PathFinder.acceptablePathAge
  fullName: PathFinder.acceptablePathAge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.acceptablePathAge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int acceptablePathAge
    return:
      type: System.Int32
    content.vb: Protected acceptablePathAge As Integer
- uid: Global.PathFinder.minimumPossiblePathCost
  commentId: F:Global.PathFinder.minimumPossiblePathCost
  id: minimumPossiblePathCost
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: minimumPossiblePathCost
  nameWithType: PathFinder.minimumPossiblePathCost
  fullName: PathFinder.minimumPossiblePathCost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.minimumPossiblePathCost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected PathCost minimumPossiblePathCost
    return:
      type: Global.PathCost
    content.vb: Protected minimumPossiblePathCost As PathCost
- uid: Global.PathFinder.fallbackPathingCell
  commentId: F:Global.PathFinder.fallbackPathingCell
  id: fallbackPathingCell
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: fallbackPathingCell
  nameWithType: PathFinder.fallbackPathingCell
  fullName: PathFinder.fallbackPathingCell
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.fallbackPathingCell</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathFinder.PathingCell fallbackPathingCell
    return:
      type: Global.PathFinder.PathingCell
    content.vb: Public fallbackPathingCell As PathFinder.PathingCell
- uid: Global.PathFinder.timeUntilPathCertain
  commentId: F:Global.PathFinder.timeUntilPathCertain
  id: timeUntilPathCertain
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: timeUntilPathCertain
  nameWithType: PathFinder.timeUntilPathCertain
  fullName: PathFinder.timeUntilPathCertain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.timeUntilPathCertain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeUntilPathCertain
    return:
      type: System.Int32
    content.vb: Public timeUntilPathCertain As Integer
- uid: Global.PathFinder.timeInGeneration
  commentId: F:Global.PathFinder.timeInGeneration
  id: timeInGeneration
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: timeInGeneration
  nameWithType: PathFinder.timeInGeneration
  fullName: PathFinder.timeInGeneration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.timeInGeneration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int timeInGeneration
    return:
      type: System.Int32
    content.vb: Protected timeInGeneration As Integer
- uid: Global.PathFinder.lastFollowingGeneration
  commentId: F:Global.PathFinder.lastFollowingGeneration
  id: lastFollowingGeneration
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: lastFollowingGeneration
  nameWithType: PathFinder.lastFollowingGeneration
  fullName: PathFinder.lastFollowingGeneration
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.lastFollowingGeneration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int lastFollowingGeneration
    return:
      type: System.Int32
    content.vb: Protected lastFollowingGeneration As Integer
- uid: Global.PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone
  commentId: F:Global.PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone
  id: reAssignDestinationOnceAccessibilityMappingIsDone
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: reAssignDestinationOnceAccessibilityMappingIsDone
  nameWithType: PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone
  fullName: PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.reAssignDestinationOnceAccessibilityMappingIsDone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool reAssignDestinationOnceAccessibilityMappingIsDone
    return:
      type: System.Boolean
    content.vb: Protected reAssignDestinationOnceAccessibilityMappingIsDone As Boolean
- uid: Global.PathFinder.forbiddenNode
  commentId: F:Global.PathFinder.forbiddenNode
  id: forbiddenNode
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: forbiddenNode
  nameWithType: PathFinder.forbiddenNode
  fullName: PathFinder.forbiddenNode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.forbiddenNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate? forbiddenNode
    return:
      type: System.Nullable{WorldCoordinate}
    content.vb: Public forbiddenNode As WorldCoordinate?
- uid: Global.PathFinder.WorldCells
  commentId: F:Global.PathFinder.WorldCells
  id: WorldCells
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: WorldCells
  nameWithType: PathFinder.WorldCells
  fullName: PathFinder.WorldCells
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.WorldCells</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected PathFinder.PathingCell[][] WorldCells
    return:
      type: Global.PathFinder.PathingCell[][]
    content.vb: Protected WorldCells As PathFinder.PathingCell()()
- uid: Global.PathFinder.WorldAITiles
  commentId: F:Global.PathFinder.WorldAITiles
  id: WorldAITiles
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: WorldAITiles
  nameWithType: PathFinder.WorldAITiles
  fullName: PathFinder.WorldAITiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.WorldAITiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected AItile[][] WorldAITiles
    return:
      type: Global.AItile[][]
    content.vb: Protected WorldAITiles As AItile()()
- uid: Global.PathFinder.CurrentRoomCells
  commentId: F:Global.PathFinder.CurrentRoomCells
  id: CurrentRoomCells
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CurrentRoomCells
  nameWithType: PathFinder.CurrentRoomCells
  fullName: PathFinder.CurrentRoomCells
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.CurrentRoomCells</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected PathFinder.PathingCell[,] CurrentRoomCells
    return:
      type: Global.PathFinder.PathingCell[,]
    content.vb: Protected CurrentRoomCells As PathFinder.PathingCell(,)
- uid: Global.PathFinder.realizedRoom
  commentId: F:Global.PathFinder.realizedRoom
  id: realizedRoom
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: realizedRoom
  nameWithType: PathFinder.realizedRoom
  fullName: PathFinder.realizedRoom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.realizedRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Room realizedRoom
    return:
      type: Global.Room
    content.vb: Protected realizedRoom As Room
- uid: Global.PathFinder.room
  commentId: F:Global.PathFinder.room
  id: room
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: room
  nameWithType: PathFinder.room
  fullName: PathFinder.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int room
    return:
      type: System.Int32
    content.vb: Protected room As Integer
- uid: Global.PathFinder.world
  commentId: F:Global.PathFinder.world
  id: world
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: world
  nameWithType: PathFinder.world
  fullName: PathFinder.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected World world
    return:
      type: Global.World
    content.vb: Protected world As World
- uid: Global.PathFinder.creature
  commentId: F:Global.PathFinder.creature
  id: creature
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: creature
  nameWithType: PathFinder.creature
  fullName: PathFinder.creature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.creature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly AbstractCreature creature
    return:
      type: Global.AbstractCreature
    content.vb: Public ReadOnly creature As AbstractCreature
- uid: Global.PathFinder.accessibilityCenter
  commentId: F:Global.PathFinder.accessibilityCenter
  id: accessibilityCenter
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: accessibilityCenter
  nameWithType: PathFinder.accessibilityCenter
  fullName: PathFinder.accessibilityCenter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.accessibilityCenter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected WorldCoordinate accessibilityCenter
    return:
      type: Global.WorldCoordinate
    content.vb: Protected accessibilityCenter As WorldCoordinate
- uid: Global.PathFinder.accessibilityMapper
  commentId: F:Global.PathFinder.accessibilityMapper
  id: accessibilityMapper
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: accessibilityMapper
  nameWithType: PathFinder.accessibilityMapper
  fullName: PathFinder.accessibilityMapper
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.accessibilityMapper</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected PathFinder.AccessibilityMapper accessibilityMapper
    return:
      type: Global.PathFinder.AccessibilityMapper
    content.vb: Protected accessibilityMapper As PathFinder.AccessibilityMapper
- uid: Global.PathFinder.debugDrawer
  commentId: F:Global.PathFinder.debugDrawer
  id: debugDrawer
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: debugDrawer
  nameWithType: PathFinder.debugDrawer
  fullName: PathFinder.debugDrawer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.debugDrawer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathfindingVisualizer debugDrawer
    return:
      type: Global.PathfindingVisualizer
    content.vb: Public debugDrawer As PathfindingVisualizer
- uid: Global.PathFinder.visualize
  commentId: F:Global.PathFinder.visualize
  id: visualize
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: visualize
  nameWithType: PathFinder.visualize
  fullName: PathFinder.visualize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.visualize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool visualize
    return:
      type: System.Boolean
    content.vb: Public visualize As Boolean
- uid: Global.PathFinder.visualizePath
  commentId: F:Global.PathFinder.visualizePath
  id: visualizePath
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: visualizePath
  nameWithType: PathFinder.visualizePath
  fullName: PathFinder.visualizePath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.visualizePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool visualizePath
    return:
      type: System.Boolean
    content.vb: Public visualizePath As Boolean
- uid: Global.PathFinder.stepsPerFrame
  commentId: F:Global.PathFinder.stepsPerFrame
  id: stepsPerFrame
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: stepsPerFrame
  nameWithType: PathFinder.stepsPerFrame
  fullName: PathFinder.stepsPerFrame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.stepsPerFrame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stepsPerFrame
    return:
      type: System.Int32
    content.vb: Public stepsPerFrame As Integer
- uid: Global.PathFinder.accessibilityStepsPerFrame
  commentId: F:Global.PathFinder.accessibilityStepsPerFrame
  id: accessibilityStepsPerFrame
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: accessibilityStepsPerFrame
  nameWithType: PathFinder.accessibilityStepsPerFrame
  fullName: PathFinder.accessibilityStepsPerFrame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.accessibilityStepsPerFrame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int accessibilityStepsPerFrame
    return:
      type: System.Int32
    content.vb: Public accessibilityStepsPerFrame As Integer
- uid: Global.PathFinder.nonShortcutRoomEntrancePos
  commentId: F:Global.PathFinder.nonShortcutRoomEntrancePos
  id: nonShortcutRoomEntrancePos
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: nonShortcutRoomEntrancePos
  nameWithType: PathFinder.nonShortcutRoomEntrancePos
  fullName: PathFinder.nonShortcutRoomEntrancePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.nonShortcutRoomEntrancePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate? nonShortcutRoomEntrancePos
    return:
      type: System.Nullable{WorldCoordinate}
    content.vb: Public nonShortcutRoomEntrancePos As WorldCoordinate?
- uid: Global.PathFinder.walkPastPointOfNoReturn
  commentId: F:Global.PathFinder.walkPastPointOfNoReturn
  id: walkPastPointOfNoReturn
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: walkPastPointOfNoReturn
  nameWithType: PathFinder.walkPastPointOfNoReturn
  fullName: PathFinder.walkPastPointOfNoReturn
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.walkPastPointOfNoReturn</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool walkPastPointOfNoReturn
    return:
      type: System.Boolean
    content.vb: Public walkPastPointOfNoReturn As Boolean
- uid: Global.PathFinder.forbiddenEntrance
  commentId: F:Global.PathFinder.forbiddenEntrance
  id: forbiddenEntrance
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: forbiddenEntrance
  nameWithType: PathFinder.forbiddenEntrance
  fullName: PathFinder.forbiddenEntrance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.forbiddenEntrance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate forbiddenEntrance
    return:
      type: Global.WorldCoordinate
    content.vb: Public forbiddenEntrance As WorldCoordinate
- uid: Global.PathFinder.forbiddenEntranceCounter
  commentId: F:Global.PathFinder.forbiddenEntranceCounter
  id: forbiddenEntranceCounter
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: forbiddenEntranceCounter
  nameWithType: PathFinder.forbiddenEntranceCounter
  fullName: PathFinder.forbiddenEntranceCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.forbiddenEntranceCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int forbiddenEntranceCounter
    return:
      type: System.Int32
    content.vb: Public forbiddenEntranceCounter As Integer
- uid: Global.PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)
  commentId: M:Global.PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)
  id: '#ctor(ArtificialIntelligence,World,AbstractCreature)'
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: PathFinder(ArtificialIntelligence, World, AbstractCreature)
  nameWithType: PathFinder.PathFinder(ArtificialIntelligence, World, AbstractCreature)
  fullName: PathFinder.PathFinder(ArtificialIntelligence, World, AbstractCreature)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PathFinder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathFinder(ArtificialIntelligence AI, World world, AbstractCreature creature)
    parameters:
    - id: AI
      type: Global.ArtificialIntelligence
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)</parameter>
          </include>
        </markup>
    - id: creature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:PathFinder.#ctor(ArtificialIntelligence,World,AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As ArtificialIntelligence, world As World, creature As AbstractCreature)
  overload: Global.PathFinder.#ctor*
  nameWithType.vb: PathFinder.New(ArtificialIntelligence, World, AbstractCreature)
  fullName.vb: PathFinder.New(ArtificialIntelligence, World, AbstractCreature)
  name.vb: New(ArtificialIntelligence, World, AbstractCreature)
- uid: Global.PathFinder.Update
  commentId: M:Global.PathFinder.Update
  id: Update
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: PathFinder.Update()
  fullName: PathFinder.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.AIModule.Update
  overload: Global.PathFinder.Update*
- uid: Global.PathFinder.CheckNeighbours(PathFinder.PathingCell)
  commentId: M:Global.PathFinder.CheckNeighbours(PathFinder.PathingCell)
  id: CheckNeighbours(PathFinder.PathingCell)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CheckNeighbours(PathingCell)
  nameWithType: PathFinder.CheckNeighbours(PathFinder.PathingCell)
  fullName: PathFinder.CheckNeighbours(PathFinder.PathingCell)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CheckNeighbours(PathFinder.PathingCell)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void CheckNeighbours(PathFinder.PathingCell checkNow)
    parameters:
    - id: checkNow
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkNow</parameter>
            <parameter>M:PathFinder.CheckNeighbours(PathFinder.PathingCell)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub CheckNeighbours(checkNow As PathFinder.PathingCell)
  overload: Global.PathFinder.CheckNeighbours*
- uid: Global.PathFinder.LeavingRoom
  commentId: M:Global.PathFinder.LeavingRoom
  id: LeavingRoom
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: LeavingRoom()
  nameWithType: PathFinder.LeavingRoom()
  fullName: PathFinder.LeavingRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.LeavingRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void LeavingRoom()
    content.vb: Protected Sub LeavingRoom()
  overload: Global.PathFinder.LeavingRoom*
- uid: Global.PathFinder.NewRoom(Room)
  commentId: M:Global.PathFinder.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: PathFinder.NewRoom(Room)
  fullName: PathFinder.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room newRealizedRoom)
    parameters:
    - id: newRealizedRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRealizedRoom</parameter>
            <parameter>M:PathFinder.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(newRealizedRoom As Room)
  overridden: Global.AIModule.NewRoom(Room)
  overload: Global.PathFinder.NewRoom*
- uid: Global.PathFinder.Reset(Room)
  commentId: M:Global.PathFinder.Reset(Room)
  id: Reset(Room)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: Reset(Room)
  nameWithType: PathFinder.Reset(Room)
  fullName: PathFinder.Reset(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.Reset(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset(Room newRealizedRoom)
    parameters:
    - id: newRealizedRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRealizedRoom</parameter>
            <parameter>M:PathFinder.Reset(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Reset(newRealizedRoom As Room)
  overload: Global.PathFinder.Reset*
- uid: Global.PathFinder.ForceNextDestination
  commentId: M:Global.PathFinder.ForceNextDestination
  id: ForceNextDestination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: ForceNextDestination()
  nameWithType: PathFinder.ForceNextDestination()
  fullName: PathFinder.ForceNextDestination()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.ForceNextDestination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ForceNextDestination()
    content.vb: Public Sub ForceNextDestination()
  overload: Global.PathFinder.ForceNextDestination*
- uid: Global.PathFinder.InitiatePath(System.Int32)
  commentId: M:Global.PathFinder.InitiatePath(System.Int32)
  id: InitiatePath(System.Int32)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: InitiatePath(int)
  nameWithType: PathFinder.InitiatePath(int)
  fullName: PathFinder.InitiatePath(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.InitiatePath(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool InitiatePath(int theDoorICameInThrough)
    parameters:
    - id: theDoorICameInThrough
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>theDoorICameInThrough</parameter>
            <parameter>M:PathFinder.InitiatePath(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.InitiatePath(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function InitiatePath(theDoorICameInThrough As Integer) As Boolean
  overload: Global.PathFinder.InitiatePath*
  nameWithType.vb: PathFinder.InitiatePath(Integer)
  fullName.vb: PathFinder.InitiatePath(Integer)
  name.vb: InitiatePath(Integer)
- uid: Global.PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])
  commentId: M:Global.PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])
  id: InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: InitiAccessibilityMapping(WorldCoordinate, IntVector2[])
  nameWithType: PathFinder.InitiAccessibilityMapping(WorldCoordinate, IntVector2[])
  fullName: PathFinder.InitiAccessibilityMapping(WorldCoordinate, RWCustom.IntVector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiAccessibilityMapping(WorldCoordinate entranceCoordinate, IntVector2[] alreadyAccessible)
    parameters:
    - id: entranceCoordinate
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>entranceCoordinate</parameter>
            <parameter>M:PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: alreadyAccessible
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alreadyAccessible</parameter>
            <parameter>M:PathFinder.InitiAccessibilityMapping(WorldCoordinate,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiAccessibilityMapping(entranceCoordinate As WorldCoordinate, alreadyAccessible As IntVector2())
  overload: Global.PathFinder.InitiAccessibilityMapping*
  nameWithType.vb: PathFinder.InitiAccessibilityMapping(WorldCoordinate, IntVector2())
  fullName.vb: PathFinder.InitiAccessibilityMapping(WorldCoordinate, RWCustom.IntVector2())
  name.vb: InitiAccessibilityMapping(WorldCoordinate, IntVector2())
- uid: Global.PathFinder.AccessibilityMappingDone
  commentId: M:Global.PathFinder.AccessibilityMappingDone
  id: AccessibilityMappingDone
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AccessibilityMappingDone()
  nameWithType: PathFinder.AccessibilityMappingDone()
  fullName: PathFinder.AccessibilityMappingDone()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AccessibilityMappingDone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void AccessibilityMappingDone()
    content.vb: Protected Sub AccessibilityMappingDone()
  overload: Global.PathFinder.AccessibilityMappingDone*
- uid: Global.PathFinder.RestartPathFinding
  commentId: M:Global.PathFinder.RestartPathFinding
  id: RestartPathFinding
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: RestartPathFinding()
  nameWithType: PathFinder.RestartPathFinding()
  fullName: PathFinder.RestartPathFinding()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.RestartPathFinding</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RestartPathFinding()
    content.vb: Public Sub RestartPathFinding()
  overload: Global.PathFinder.RestartPathFinding*
- uid: Global.PathFinder.DestinationExit(System.Int32,System.Int32)
  commentId: M:Global.PathFinder.DestinationExit(System.Int32,System.Int32)
  id: DestinationExit(System.Int32,System.Int32)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: DestinationExit(int, int)
  nameWithType: PathFinder.DestinationExit(int, int)
  fullName: PathFinder.DestinationExit(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.DestinationExit(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DestinationExit(int evaluateRoom, int theDoorICameInThrough)
    parameters:
    - id: evaluateRoom
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>evaluateRoom</parameter>
            <parameter>M:PathFinder.DestinationExit(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: theDoorICameInThrough
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>theDoorICameInThrough</parameter>
            <parameter>M:PathFinder.DestinationExit(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.DestinationExit(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function DestinationExit(evaluateRoom As Integer, theDoorICameInThrough As Integer) As Integer
  overload: Global.PathFinder.DestinationExit*
  nameWithType.vb: PathFinder.DestinationExit(Integer, Integer)
  fullName.vb: PathFinder.DestinationExit(Integer, Integer)
  name.vb: DestinationExit(Integer, Integer)
- uid: Global.PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)
  commentId: M:Global.PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)
  id: DestinationHasChanged(WorldCoordinate,WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: DestinationHasChanged(WorldCoordinate, WorldCoordinate)
  nameWithType: PathFinder.DestinationHasChanged(WorldCoordinate, WorldCoordinate)
  fullName: PathFinder.DestinationHasChanged(WorldCoordinate, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void DestinationHasChanged(WorldCoordinate oldDestination, WorldCoordinate newDestination)
    parameters:
    - id: oldDestination
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>oldDestination</parameter>
            <parameter>M:PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: newDestination
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newDestination</parameter>
            <parameter>M:PathFinder.DestinationHasChanged(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Sub DestinationHasChanged(oldDestination As WorldCoordinate, newDestination As WorldCoordinate)
  overload: Global.PathFinder.DestinationHasChanged*
- uid: Global.PathFinder.SetDestination(WorldCoordinate)
  commentId: M:Global.PathFinder.SetDestination(WorldCoordinate)
  id: SetDestination(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: SetDestination(WorldCoordinate)
  nameWithType: PathFinder.SetDestination(WorldCoordinate)
  fullName: PathFinder.SetDestination(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.SetDestination(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetDestination(WorldCoordinate newDestination)
    parameters:
    - id: newDestination
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newDestination</parameter>
            <parameter>M:PathFinder.SetDestination(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetDestination(newDestination As WorldCoordinate)
  overload: Global.PathFinder.SetDestination*
- uid: Global.PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)
  commentId: M:Global.PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)
  id: FindReachableNeighbourIfPossible(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: FindReachableNeighbourIfPossible(WorldCoordinate)
  nameWithType: PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)
  fullName: PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected WorldCoordinate FindReachableNeighbourIfPossible(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.FindReachableNeighbourIfPossible(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Function FindReachableNeighbourIfPossible(coord As WorldCoordinate) As WorldCoordinate
  overload: Global.PathFinder.FindReachableNeighbourIfPossible*
- uid: Global.PathFinder.AssignNewDestination(WorldCoordinate)
  commentId: M:Global.PathFinder.AssignNewDestination(WorldCoordinate)
  id: AssignNewDestination(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AssignNewDestination(WorldCoordinate)
  nameWithType: PathFinder.AssignNewDestination(WorldCoordinate)
  fullName: PathFinder.AssignNewDestination(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AssignNewDestination(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void AssignNewDestination(WorldCoordinate dest)
    parameters:
    - id: dest
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dest</parameter>
            <parameter>M:PathFinder.AssignNewDestination(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub AssignNewDestination(dest As WorldCoordinate)
  overload: Global.PathFinder.AssignNewDestination*
- uid: Global.PathFinder.AddToCheckNextList(PathFinder.PathingCell)
  commentId: M:Global.PathFinder.AddToCheckNextList(PathFinder.PathingCell)
  id: AddToCheckNextList(PathFinder.PathingCell)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AddToCheckNextList(PathingCell)
  nameWithType: PathFinder.AddToCheckNextList(PathFinder.PathingCell)
  fullName: PathFinder.AddToCheckNextList(PathFinder.PathingCell)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AddToCheckNextList(PathFinder.PathingCell)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void AddToCheckNextList(PathFinder.PathingCell cell)
    parameters:
    - id: cell
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cell</parameter>
            <parameter>M:PathFinder.AddToCheckNextList(PathFinder.PathingCell)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub AddToCheckNextList(cell As PathFinder.PathingCell)
  overload: Global.PathFinder.AddToCheckNextList*
- uid: Global.PathFinder.AbortCurrentGenerationPathFinding
  commentId: M:Global.PathFinder.AbortCurrentGenerationPathFinding
  id: AbortCurrentGenerationPathFinding
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AbortCurrentGenerationPathFinding()
  nameWithType: PathFinder.AbortCurrentGenerationPathFinding()
  fullName: PathFinder.AbortCurrentGenerationPathFinding()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AbortCurrentGenerationPathFinding</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void AbortCurrentGenerationPathFinding()
    content.vb: Protected Sub AbortCurrentGenerationPathFinding()
  overload: Global.PathFinder.AbortCurrentGenerationPathFinding*
- uid: Global.PathFinder.InThisRealizedRoom(WorldCoordinate)
  commentId: M:Global.PathFinder.InThisRealizedRoom(WorldCoordinate)
  id: InThisRealizedRoom(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: InThisRealizedRoom(WorldCoordinate)
  nameWithType: PathFinder.InThisRealizedRoom(WorldCoordinate)
  fullName: PathFinder.InThisRealizedRoom(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.InThisRealizedRoom(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool InThisRealizedRoom(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.InThisRealizedRoom(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.InThisRealizedRoom(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Function InThisRealizedRoom(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.InThisRealizedRoom*
- uid: Global.PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)
  commentId: M:Global.PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)
  id: PathingCellAtWorldCoordinate(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: PathingCellAtWorldCoordinate(WorldCoordinate)
  nameWithType: PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)
  fullName: PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathFinder.PathingCell PathingCellAtWorldCoordinate(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.PathingCellAtWorldCoordinate(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function PathingCellAtWorldCoordinate(coord As WorldCoordinate) As PathFinder.PathingCell
  overload: Global.PathFinder.PathingCellAtWorldCoordinate*
- uid: Global.PathFinder.AITileAtWorldCoordinate(WorldCoordinate)
  commentId: M:Global.PathFinder.AITileAtWorldCoordinate(WorldCoordinate)
  id: AITileAtWorldCoordinate(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AITileAtWorldCoordinate(WorldCoordinate)
  nameWithType: PathFinder.AITileAtWorldCoordinate(WorldCoordinate)
  fullName: PathFinder.AITileAtWorldCoordinate(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AITileAtWorldCoordinate(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected AItile AITileAtWorldCoordinate(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.AITileAtWorldCoordinate(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.AItile
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.AITileAtWorldCoordinate(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Function AITileAtWorldCoordinate(coord As WorldCoordinate) As AItile
  overload: Global.PathFinder.AITileAtWorldCoordinate*
- uid: Global.PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)
  commentId: M:Global.PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)
  id: ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: ConnectionAtCoordinate(bool, WorldCoordinate, int)
  nameWithType: PathFinder.ConnectionAtCoordinate(bool, WorldCoordinate, int)
  fullName: PathFinder.ConnectionAtCoordinate(bool, WorldCoordinate, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection ConnectionAtCoordinate(bool outGoing, WorldCoordinate coord, int index)
    parameters:
    - id: outGoing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>outGoing</parameter>
            <parameter>M:PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.ConnectionAtCoordinate(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionAtCoordinate(outGoing As Boolean, coord As WorldCoordinate, index As Integer) As MovementConnection
  overload: Global.PathFinder.ConnectionAtCoordinate*
  nameWithType.vb: PathFinder.ConnectionAtCoordinate(Boolean, WorldCoordinate, Integer)
  fullName.vb: PathFinder.ConnectionAtCoordinate(Boolean, WorldCoordinate, Integer)
  name.vb: ConnectionAtCoordinate(Boolean, WorldCoordinate, Integer)
- uid: Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)
  commentId: M:Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)
  id: ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: ConnectionsOfAbstractNodeInRealizedRoom(bool, WorldCoordinate, int)
  nameWithType: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(bool, WorldCoordinate, int)
  fullName: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(bool, WorldCoordinate, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MovementConnection ConnectionsOfAbstractNodeInRealizedRoom(bool outGoing, WorldCoordinate coord, int index)
    parameters:
    - id: outGoing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>outGoing</parameter>
            <parameter>M:PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(System.Boolean,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Function ConnectionsOfAbstractNodeInRealizedRoom(outGoing As Boolean, coord As WorldCoordinate, index As Integer) As MovementConnection
  overload: Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom*
  nameWithType.vb: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(Boolean, WorldCoordinate, Integer)
  fullName.vb: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom(Boolean, WorldCoordinate, Integer)
  name.vb: ConnectionsOfAbstractNodeInRealizedRoom(Boolean, WorldCoordinate, Integer)
- uid: Global.PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)
  commentId: M:Global.PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)
  id: FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: FromRealizedToWorldConnection(bool, WorldCoordinate)
  nameWithType: PathFinder.FromRealizedToWorldConnection(bool, WorldCoordinate)
  fullName: PathFinder.FromRealizedToWorldConnection(bool, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MovementConnection FromRealizedToWorldConnection(bool outGoing, WorldCoordinate coord)
    parameters:
    - id: outGoing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>outGoing</parameter>
            <parameter>M:PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.FromRealizedToWorldConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Function FromRealizedToWorldConnection(outGoing As Boolean, coord As WorldCoordinate) As MovementConnection
  overload: Global.PathFinder.FromRealizedToWorldConnection*
  nameWithType.vb: PathFinder.FromRealizedToWorldConnection(Boolean, WorldCoordinate)
  fullName.vb: PathFinder.FromRealizedToWorldConnection(Boolean, WorldCoordinate)
  name.vb: FromRealizedToWorldConnection(Boolean, WorldCoordinate)
- uid: Global.PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)
  commentId: M:Global.PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)
  id: FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: FromWorldToRealizedRoomShortCutConnection(bool, WorldCoordinate)
  nameWithType: PathFinder.FromWorldToRealizedRoomShortCutConnection(bool, WorldCoordinate)
  fullName: PathFinder.FromWorldToRealizedRoomShortCutConnection(bool, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected MovementConnection FromWorldToRealizedRoomShortCutConnection(bool outGoing, WorldCoordinate coord)
    parameters:
    - id: outGoing
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>outGoing</parameter>
            <parameter>M:PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.FromWorldToRealizedRoomShortCutConnection(System.Boolean,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Function FromWorldToRealizedRoomShortCutConnection(outGoing As Boolean, coord As WorldCoordinate) As MovementConnection
  overload: Global.PathFinder.FromWorldToRealizedRoomShortCutConnection*
  nameWithType.vb: PathFinder.FromWorldToRealizedRoomShortCutConnection(Boolean, WorldCoordinate)
  fullName.vb: PathFinder.FromWorldToRealizedRoomShortCutConnection(Boolean, WorldCoordinate)
  name.vb: FromWorldToRealizedRoomShortCutConnection(Boolean, WorldCoordinate)
- uid: Global.PathFinder.OutOfElement(WorldCoordinate)
  commentId: M:Global.PathFinder.OutOfElement(WorldCoordinate)
  id: OutOfElement(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: OutOfElement(WorldCoordinate)
  nameWithType: PathFinder.OutOfElement(WorldCoordinate)
  fullName: PathFinder.OutOfElement(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.OutOfElement(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void OutOfElement(WorldCoordinate ps)
    parameters:
    - id: ps
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:PathFinder.OutOfElement(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub OutOfElement(ps As WorldCoordinate)
  overload: Global.PathFinder.OutOfElement*
- uid: Global.PathFinder.OutOfElement
  commentId: M:Global.PathFinder.OutOfElement
  id: OutOfElement
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: OutOfElement()
  nameWithType: PathFinder.OutOfElement()
  fullName: PathFinder.OutOfElement()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.OutOfElement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void OutOfElement()
    content.vb: Protected Sub OutOfElement()
  overload: Global.PathFinder.OutOfElement*
- uid: Global.PathFinder.CoordinateReachable(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinateReachable(WorldCoordinate)
  id: CoordinateReachable(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinateReachable(WorldCoordinate)
  nameWithType: PathFinder.CoordinateReachable(WorldCoordinate)
  fullName: PathFinder.CoordinateReachable(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinateReachable(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CoordinateReachable(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinateReachable(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinateReachable(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinateReachable(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.CoordinateReachable*
- uid: Global.PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)
  id: CoordinatePossibleToGetBackFrom(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinatePossibleToGetBackFrom(WorldCoordinate)
  nameWithType: PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)
  fullName: PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CoordinatePossibleToGetBackFrom(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinatePossibleToGetBackFrom(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinatePossibleToGetBackFrom(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.CoordinatePossibleToGetBackFrom*
- uid: Global.PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)
  id: CoordinateReachableAndGetbackable(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinateReachableAndGetbackable(WorldCoordinate)
  nameWithType: PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)
  fullName: PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CoordinateReachableAndGetbackable(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinateReachableAndGetbackable(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinateReachableAndGetbackable(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.CoordinateReachableAndGetbackable*
- uid: Global.PathFinder.CoordinateViable(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinateViable(WorldCoordinate)
  id: CoordinateViable(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinateViable(WorldCoordinate)
  nameWithType: PathFinder.CoordinateViable(WorldCoordinate)
  fullName: PathFinder.CoordinateViable(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinateViable(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CoordinateViable(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinateViable(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinateViable(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinateViable(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.CoordinateViable*
- uid: Global.PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  id: CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  nameWithType: PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  fullName: PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CoordinateAtCurrentPathingGeneration(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinateAtCurrentPathingGeneration(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinateAtCurrentPathingGeneration(coord As WorldCoordinate) As Boolean
  overload: Global.PathFinder.CoordinateAtCurrentPathingGeneration*
- uid: Global.PathFinder.ConnectAITile(System.Int32,System.Int32)
  commentId: M:Global.PathFinder.ConnectAITile(System.Int32,System.Int32)
  id: ConnectAITile(System.Int32,System.Int32)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: ConnectAITile(int, int)
  nameWithType: PathFinder.ConnectAITile(int, int)
  fullName: PathFinder.ConnectAITile(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.ConnectAITile(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void ConnectAITile(int room, int node)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:PathFinder.ConnectAITile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:PathFinder.ConnectAITile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub ConnectAITile(room As Integer, node As Integer)
  overload: Global.PathFinder.ConnectAITile*
  nameWithType.vb: PathFinder.ConnectAITile(Integer, Integer)
  fullName.vb: PathFinder.ConnectAITile(Integer, Integer)
  name.vb: ConnectAITile(Integer, Integer)
- uid: Global.PathFinder.CreatePathForAbstractreature(WorldCoordinate)
  commentId: M:Global.PathFinder.CreatePathForAbstractreature(WorldCoordinate)
  id: CreatePathForAbstractreature(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CreatePathForAbstractreature(WorldCoordinate)
  nameWithType: PathFinder.CreatePathForAbstractreature(WorldCoordinate)
  fullName: PathFinder.CreatePathForAbstractreature(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CreatePathForAbstractreature(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<WorldCoordinate> CreatePathForAbstractreature(WorldCoordinate searchDestination)
    parameters:
    - id: searchDestination
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>searchDestination</parameter>
            <parameter>M:PathFinder.CreatePathForAbstractreature(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{WorldCoordinate}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CreatePathForAbstractreature(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatePathForAbstractreature(searchDestination As WorldCoordinate) As List(Of WorldCoordinate)
  overload: Global.PathFinder.CreatePathForAbstractreature*
- uid: Global.PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)
  commentId: M:Global.PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)
  id: AwayFromForbiddenEntrance(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: AwayFromForbiddenEntrance(WorldCoordinate)
  nameWithType: PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)
  fullName: PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection AwayFromForbiddenEntrance(WorldCoordinate origin)
    parameters:
    - id: origin
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>origin</parameter>
            <parameter>M:PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.AwayFromForbiddenEntrance(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function AwayFromForbiddenEntrance(origin As WorldCoordinate) As MovementConnection
  overload: Global.PathFinder.AwayFromForbiddenEntrance*
- uid: Global.PathFinder.ForbiddenEntranceDist(WorldCoordinate)
  commentId: M:Global.PathFinder.ForbiddenEntranceDist(WorldCoordinate)
  id: ForbiddenEntranceDist(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: ForbiddenEntranceDist(WorldCoordinate)
  nameWithType: PathFinder.ForbiddenEntranceDist(WorldCoordinate)
  fullName: PathFinder.ForbiddenEntranceDist(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.ForbiddenEntranceDist(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ForbiddenEntranceDist(WorldCoordinate origin)
    parameters:
    - id: origin
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>origin</parameter>
            <parameter>M:PathFinder.ForbiddenEntranceDist(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.ForbiddenEntranceDist(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function ForbiddenEntranceDist(origin As WorldCoordinate) As Integer
  overload: Global.PathFinder.ForbiddenEntranceDist*
- uid: Global.PathFinder.PathWithExits(WorldCoordinate,System.Boolean)
  commentId: M:Global.PathFinder.PathWithExits(WorldCoordinate,System.Boolean)
  id: PathWithExits(WorldCoordinate,System.Boolean)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: PathWithExits(WorldCoordinate, bool)
  nameWithType: PathFinder.PathWithExits(WorldCoordinate, bool)
  fullName: PathFinder.PathWithExits(WorldCoordinate, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.PathWithExits(WorldCoordinate,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection PathWithExits(WorldCoordinate origin, bool avoidForbiddenEntrance)
    parameters:
    - id: origin
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>origin</parameter>
            <parameter>M:PathFinder.PathWithExits(WorldCoordinate,System.Boolean)</parameter>
          </include>
        </markup>
    - id: avoidForbiddenEntrance
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>avoidForbiddenEntrance</parameter>
            <parameter>M:PathFinder.PathWithExits(WorldCoordinate,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.PathWithExits(WorldCoordinate,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function PathWithExits(origin As WorldCoordinate, avoidForbiddenEntrance As Boolean) As MovementConnection
  overload: Global.PathFinder.PathWithExits*
  nameWithType.vb: PathFinder.PathWithExits(WorldCoordinate, Boolean)
  fullName.vb: PathFinder.PathWithExits(WorldCoordinate, Boolean)
  name.vb: PathWithExits(WorldCoordinate, Boolean)
- uid: Global.PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)
  commentId: M:Global.PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)
  id: CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CheckConnectionCost(PathingCell, PathingCell, MovementConnection, bool)
  nameWithType: PathFinder.CheckConnectionCost(PathFinder.PathingCell, PathFinder.PathingCell, MovementConnection, bool)
  fullName: PathFinder.CheckConnectionCost(PathFinder.PathingCell, PathFinder.PathingCell, MovementConnection, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual PathCost CheckConnectionCost(PathFinder.PathingCell start, PathFinder.PathingCell goal, MovementConnection connection, bool followingPath)
    parameters:
    - id: start
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>start</parameter>
            <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
          </include>
        </markup>
    - id: goal
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goal</parameter>
            <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
          </include>
        </markup>
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
          </include>
        </markup>
    - id: followingPath
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>followingPath</parameter>
            <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CheckConnectionCost(PathFinder.PathingCell,PathFinder.PathingCell,MovementConnection,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Function CheckConnectionCost(start As PathFinder.PathingCell, goal As PathFinder.PathingCell, connection As MovementConnection, followingPath As Boolean) As PathCost
  overload: Global.PathFinder.CheckConnectionCost*
  nameWithType.vb: PathFinder.CheckConnectionCost(PathFinder.PathingCell, PathFinder.PathingCell, MovementConnection, Boolean)
  fullName.vb: PathFinder.CheckConnectionCost(PathFinder.PathingCell, PathFinder.PathingCell, MovementConnection, Boolean)
  name.vb: CheckConnectionCost(PathingCell, PathingCell, MovementConnection, Boolean)
- uid: Global.PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)
  commentId: M:Global.PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)
  id: HeuristicForCell(PathFinder.PathingCell,PathCost)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: HeuristicForCell(PathingCell, PathCost)
  nameWithType: PathFinder.HeuristicForCell(PathFinder.PathingCell, PathCost)
  fullName: PathFinder.HeuristicForCell(PathFinder.PathingCell, PathCost)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual PathCost HeuristicForCell(PathFinder.PathingCell cell, PathCost costToGoal)
    parameters:
    - id: cell
      type: Global.PathFinder.PathingCell
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cell</parameter>
            <parameter>M:PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)</parameter>
          </include>
        </markup>
    - id: costToGoal
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>costToGoal</parameter>
            <parameter>M:PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.HeuristicForCell(PathFinder.PathingCell,PathCost)</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Function HeuristicForCell(cell As PathFinder.PathingCell, costToGoal As PathCost) As PathCost
  overload: Global.PathFinder.HeuristicForCell*
- uid: Global.PathFinder.BestRegionTransportationGoal
  commentId: M:Global.PathFinder.BestRegionTransportationGoal
  id: BestRegionTransportationGoal
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: BestRegionTransportationGoal()
  nameWithType: PathFinder.BestRegionTransportationGoal()
  fullName: PathFinder.BestRegionTransportationGoal()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.BestRegionTransportationGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate BestRegionTransportationGoal()
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.BestRegionTransportationGoal</parameter>
          </include>
        </markup>
    content.vb: Public Function BestRegionTransportationGoal() As WorldCoordinate
  overload: Global.PathFinder.BestRegionTransportationGoal*
- uid: Global.PathFinder.DebugInfo(WorldCoordinate)
  commentId: M:Global.PathFinder.DebugInfo(WorldCoordinate)
  id: DebugInfo(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: DebugInfo(WorldCoordinate)
  nameWithType: PathFinder.DebugInfo(WorldCoordinate)
  fullName: PathFinder.DebugInfo(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.DebugInfo(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string DebugInfo(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.DebugInfo(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.DebugInfo(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function DebugInfo(coord As WorldCoordinate) As String
  overload: Global.PathFinder.DebugInfo*
- uid: Global.PathFinder.LogWorldCellState
  commentId: M:Global.PathFinder.LogWorldCellState
  id: LogWorldCellState
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: LogWorldCellState()
  nameWithType: PathFinder.LogWorldCellState()
  fullName: PathFinder.LogWorldCellState()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.LogWorldCellState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LogWorldCellState()
    content.vb: Public Sub LogWorldCellState()
  overload: Global.PathFinder.LogWorldCellState*
- uid: Global.PathFinder.CoordinateCost(WorldCoordinate)
  commentId: M:Global.PathFinder.CoordinateCost(WorldCoordinate)
  id: CoordinateCost(WorldCoordinate)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: CoordinateCost(WorldCoordinate)
  nameWithType: PathFinder.CoordinateCost(WorldCoordinate)
  fullName: PathFinder.CoordinateCost(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.CoordinateCost(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost CoordinateCost(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:PathFinder.CoordinateCost(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.CoordinateCost(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CoordinateCost(coord As WorldCoordinate) As PathCost
  overload: Global.PathFinder.CoordinateCost*
- uid: Global.PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)
  id: RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: RayTraceInAccessibleTiles(IntVector2, IntVector2)
  nameWithType: PathFinder.RayTraceInAccessibleTiles(IntVector2, IntVector2)
  fullName: PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RayTraceInAccessibleTiles(IntVector2 A, IntVector2 B)
    parameters:
    - id: A
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: B
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.RayTraceInAccessibleTiles(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function RayTraceInAccessibleTiles(A As IntVector2, B As IntVector2) As Boolean
  overload: Global.PathFinder.RayTraceInAccessibleTiles*
- uid: Global.PathFinder.lookingForImpossiblePath
  commentId: P:Global.PathFinder.lookingForImpossiblePath
  id: lookingForImpossiblePath
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: lookingForImpossiblePath
  nameWithType: PathFinder.lookingForImpossiblePath
  fullName: PathFinder.lookingForImpossiblePath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.lookingForImpossiblePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lookingForImpossiblePath { get; protected set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property lookingForImpossiblePath As Boolean
  overload: Global.PathFinder.lookingForImpossiblePath*
- uid: Global.PathFinder.DoneMappingAccessibility
  commentId: P:Global.PathFinder.DoneMappingAccessibility
  id: DoneMappingAccessibility
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: DoneMappingAccessibility
  nameWithType: PathFinder.DoneMappingAccessibility
  fullName: PathFinder.DoneMappingAccessibility
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.DoneMappingAccessibility</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DoneMappingAccessibility { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DoneMappingAccessibility As Boolean
  overload: Global.PathFinder.DoneMappingAccessibility*
- uid: Global.PathFinder.creaturePos
  commentId: P:Global.PathFinder.creaturePos
  id: creaturePos
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: creaturePos
  nameWithType: PathFinder.creaturePos
  fullName: PathFinder.creaturePos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.creaturePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate creaturePos { get; }
    parameters: []
    return:
      type: Global.WorldCoordinate
    content.vb: Public ReadOnly Property creaturePos As WorldCoordinate
  overload: Global.PathFinder.creaturePos*
- uid: Global.PathFinder.creatureType
  commentId: P:Global.PathFinder.creatureType
  id: creatureType
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: creatureType
  nameWithType: PathFinder.creatureType
  fullName: PathFinder.creatureType
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.creatureType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate creatureType { get; }
    parameters: []
    return:
      type: Global.CreatureTemplate
    content.vb: Public ReadOnly Property creatureType As CreatureTemplate
  overload: Global.PathFinder.creatureType*
- uid: Global.PathFinder.GetDestination
  commentId: P:Global.PathFinder.GetDestination
  id: GetDestination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: GetDestination
  nameWithType: PathFinder.GetDestination
  fullName: PathFinder.GetDestination
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.GetDestination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate GetDestination { get; }
    parameters: []
    return:
      type: Global.WorldCoordinate
    content.vb: Public ReadOnly Property GetDestination As WorldCoordinate
  overload: Global.PathFinder.GetDestination*
- uid: Global.PathFinder.GetEffectualDestination
  commentId: P:Global.PathFinder.GetEffectualDestination
  id: GetEffectualDestination
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: GetEffectualDestination
  nameWithType: PathFinder.GetEffectualDestination
  fullName: PathFinder.GetEffectualDestination
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.GetEffectualDestination</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate GetEffectualDestination { get; }
    parameters: []
    return:
      type: Global.WorldCoordinate
    content.vb: Public ReadOnly Property GetEffectualDestination As WorldCoordinate
  overload: Global.PathFinder.GetEffectualDestination*
- uid: Global.PathFinder.DestInRoom
  commentId: P:Global.PathFinder.DestInRoom
  id: DestInRoom
  parent: Global.PathFinder
  langs:
  - csharp
  - vb
  name: DestInRoom
  nameWithType: PathFinder.DestInRoom
  fullName: PathFinder.DestInRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PathFinder.DestInRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DestInRoom { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DestInRoom As Boolean
  overload: Global.PathFinder.DestInRoom*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: System.Nullable{WorldCoordinate}
  commentId: T:System.Nullable{WorldCoordinate}
  parent: System
  definition: System.Nullable`1
  href: WorldCoordinate.html
  name: WorldCoordinate?
  nameWithType: WorldCoordinate?
  fullName: WorldCoordinate?
  spec.csharp:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
  spec.vb:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{PathFinder.PathingCell}
  commentId: T:System.Collections.Generic.List{PathFinder.PathingCell}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PathFinder.PathingCell>
  nameWithType: List<PathFinder.PathingCell>
  fullName: System.Collections.Generic.List<PathFinder.PathingCell>
  nameWithType.vb: List(Of PathFinder.PathingCell)
  fullName.vb: System.Collections.Generic.List(Of PathFinder.PathingCell)
  name.vb: List(Of PathFinder.PathingCell)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RWCustom.IntRect
  commentId: T:RWCustom.IntRect
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntRect.html
  name: IntRect
  nameWithType: IntRect
  fullName: RWCustom.IntRect
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: Global.PathFinder.PathingCell
  commentId: T:Global.PathFinder.PathingCell
  isExternal: true
  href: PathFinder.html
  name: PathFinder.PathingCell
  nameWithType: PathFinder.PathingCell
  fullName: PathFinder.PathingCell
  spec.csharp:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  spec.vb:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.PathFinder.PathingCell[][]
  isExternal: true
  href: PathFinder.PathingCell.html
  name: PathingCell[][]
  nameWithType: PathFinder.PathingCell[][]
  fullName: PathFinder.PathingCell[][]
  nameWithType.vb: PathFinder.PathingCell()()
  fullName.vb: PathFinder.PathingCell()()
  name.vb: PathingCell()()
  spec.csharp:
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: Global.AItile[][]
  isExternal: true
  href: AItile.html
  name: AItile[][]
  nameWithType: AItile[][]
  fullName: AItile[][]
  nameWithType.vb: AItile()()
  fullName.vb: AItile()()
  name.vb: AItile()()
  spec.csharp:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: Global.PathFinder.PathingCell[,]
  isExternal: true
  href: PathFinder.PathingCell.html
  name: PathingCell[,]
  nameWithType: PathFinder.PathingCell[,]
  fullName: PathFinder.PathingCell[,]
  nameWithType.vb: PathFinder.PathingCell(,)
  fullName.vb: PathFinder.PathingCell(,)
  name.vb: PathingCell(,)
  spec.csharp:
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Global.PathFinder.PathingCell
    name: PathingCell
    isExternal: true
    href: PathFinder.PathingCell.html
  - name: (
  - name: ','
  - name: )
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.PathFinder.AccessibilityMapper
  commentId: T:Global.PathFinder.AccessibilityMapper
  isExternal: true
  href: PathFinder.html
  name: PathFinder.AccessibilityMapper
  nameWithType: PathFinder.AccessibilityMapper
  fullName: PathFinder.AccessibilityMapper
  spec.csharp:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.AccessibilityMapper
    name: AccessibilityMapper
    isExternal: true
    href: PathFinder.AccessibilityMapper.html
  spec.vb:
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: .
  - uid: Global.PathFinder.AccessibilityMapper
    name: AccessibilityMapper
    isExternal: true
    href: PathFinder.AccessibilityMapper.html
- uid: Global.PathfindingVisualizer
  commentId: T:Global.PathfindingVisualizer
  isExternal: true
  href: PathfindingVisualizer.html
  name: PathfindingVisualizer
  nameWithType: PathfindingVisualizer
  fullName: PathfindingVisualizer
- uid: Global.PathFinder.#ctor*
  commentId: Overload:Global.PathFinder.#ctor
  isExternal: true
  href: Global.PathFinder.html#PathFinder__ctor_ArtificialIntelligence_World_AbstractCreature_
  name: PathFinder
  nameWithType: PathFinder.PathFinder
  fullName: PathFinder.PathFinder
  nameWithType.vb: PathFinder.New
  fullName.vb: PathFinder.New
  name.vb: New
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.PathFinder.Update*
  commentId: Overload:Global.PathFinder.Update
  isExternal: true
  href: Global.PathFinder.html#PathFinder_Update
  name: Update
  nameWithType: PathFinder.Update
  fullName: PathFinder.Update
- uid: Global.PathFinder.CheckNeighbours*
  commentId: Overload:Global.PathFinder.CheckNeighbours
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CheckNeighbours_PathFinder_PathingCell_
  name: CheckNeighbours
  nameWithType: PathFinder.CheckNeighbours
  fullName: PathFinder.CheckNeighbours
- uid: Global.PathFinder.LeavingRoom*
  commentId: Overload:Global.PathFinder.LeavingRoom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_LeavingRoom
  name: LeavingRoom
  nameWithType: PathFinder.LeavingRoom
  fullName: PathFinder.LeavingRoom
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.PathFinder.NewRoom*
  commentId: Overload:Global.PathFinder.NewRoom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_NewRoom_Room_
  name: NewRoom
  nameWithType: PathFinder.NewRoom
  fullName: PathFinder.NewRoom
- uid: Global.PathFinder.Reset*
  commentId: Overload:Global.PathFinder.Reset
  isExternal: true
  href: Global.PathFinder.html#PathFinder_Reset_Room_
  name: Reset
  nameWithType: PathFinder.Reset
  fullName: PathFinder.Reset
- uid: Global.PathFinder.ForceNextDestination*
  commentId: Overload:Global.PathFinder.ForceNextDestination
  isExternal: true
  href: Global.PathFinder.html#PathFinder_ForceNextDestination
  name: ForceNextDestination
  nameWithType: PathFinder.ForceNextDestination
  fullName: PathFinder.ForceNextDestination
- uid: Global.PathFinder.InitiatePath*
  commentId: Overload:Global.PathFinder.InitiatePath
  isExternal: true
  href: Global.PathFinder.html#PathFinder_InitiatePath_System_Int32_
  name: InitiatePath
  nameWithType: PathFinder.InitiatePath
  fullName: PathFinder.InitiatePath
- uid: Global.PathFinder.InitiAccessibilityMapping*
  commentId: Overload:Global.PathFinder.InitiAccessibilityMapping
  isExternal: true
  href: Global.PathFinder.html#PathFinder_InitiAccessibilityMapping_WorldCoordinate_RWCustom_IntVector2___
  name: InitiAccessibilityMapping
  nameWithType: PathFinder.InitiAccessibilityMapping
  fullName: PathFinder.InitiAccessibilityMapping
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.PathFinder.AccessibilityMappingDone*
  commentId: Overload:Global.PathFinder.AccessibilityMappingDone
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AccessibilityMappingDone
  name: AccessibilityMappingDone
  nameWithType: PathFinder.AccessibilityMappingDone
  fullName: PathFinder.AccessibilityMappingDone
- uid: Global.PathFinder.RestartPathFinding*
  commentId: Overload:Global.PathFinder.RestartPathFinding
  isExternal: true
  href: Global.PathFinder.html#PathFinder_RestartPathFinding
  name: RestartPathFinding
  nameWithType: PathFinder.RestartPathFinding
  fullName: PathFinder.RestartPathFinding
- uid: Global.PathFinder.DestinationExit*
  commentId: Overload:Global.PathFinder.DestinationExit
  isExternal: true
  href: Global.PathFinder.html#PathFinder_DestinationExit_System_Int32_System_Int32_
  name: DestinationExit
  nameWithType: PathFinder.DestinationExit
  fullName: PathFinder.DestinationExit
- uid: Global.PathFinder.DestinationHasChanged*
  commentId: Overload:Global.PathFinder.DestinationHasChanged
  isExternal: true
  href: Global.PathFinder.html#PathFinder_DestinationHasChanged_WorldCoordinate_WorldCoordinate_
  name: DestinationHasChanged
  nameWithType: PathFinder.DestinationHasChanged
  fullName: PathFinder.DestinationHasChanged
- uid: Global.PathFinder.SetDestination*
  commentId: Overload:Global.PathFinder.SetDestination
  isExternal: true
  href: Global.PathFinder.html#PathFinder_SetDestination_WorldCoordinate_
  name: SetDestination
  nameWithType: PathFinder.SetDestination
  fullName: PathFinder.SetDestination
- uid: Global.PathFinder.FindReachableNeighbourIfPossible*
  commentId: Overload:Global.PathFinder.FindReachableNeighbourIfPossible
  isExternal: true
  href: Global.PathFinder.html#PathFinder_FindReachableNeighbourIfPossible_WorldCoordinate_
  name: FindReachableNeighbourIfPossible
  nameWithType: PathFinder.FindReachableNeighbourIfPossible
  fullName: PathFinder.FindReachableNeighbourIfPossible
- uid: Global.PathFinder.AssignNewDestination*
  commentId: Overload:Global.PathFinder.AssignNewDestination
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AssignNewDestination_WorldCoordinate_
  name: AssignNewDestination
  nameWithType: PathFinder.AssignNewDestination
  fullName: PathFinder.AssignNewDestination
- uid: Global.PathFinder.AddToCheckNextList*
  commentId: Overload:Global.PathFinder.AddToCheckNextList
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AddToCheckNextList_PathFinder_PathingCell_
  name: AddToCheckNextList
  nameWithType: PathFinder.AddToCheckNextList
  fullName: PathFinder.AddToCheckNextList
- uid: Global.PathFinder.AbortCurrentGenerationPathFinding*
  commentId: Overload:Global.PathFinder.AbortCurrentGenerationPathFinding
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AbortCurrentGenerationPathFinding
  name: AbortCurrentGenerationPathFinding
  nameWithType: PathFinder.AbortCurrentGenerationPathFinding
  fullName: PathFinder.AbortCurrentGenerationPathFinding
- uid: Global.PathFinder.InThisRealizedRoom*
  commentId: Overload:Global.PathFinder.InThisRealizedRoom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_InThisRealizedRoom_WorldCoordinate_
  name: InThisRealizedRoom
  nameWithType: PathFinder.InThisRealizedRoom
  fullName: PathFinder.InThisRealizedRoom
- uid: Global.PathFinder.PathingCellAtWorldCoordinate*
  commentId: Overload:Global.PathFinder.PathingCellAtWorldCoordinate
  isExternal: true
  href: Global.PathFinder.html#PathFinder_PathingCellAtWorldCoordinate_WorldCoordinate_
  name: PathingCellAtWorldCoordinate
  nameWithType: PathFinder.PathingCellAtWorldCoordinate
  fullName: PathFinder.PathingCellAtWorldCoordinate
- uid: Global.PathFinder.AITileAtWorldCoordinate*
  commentId: Overload:Global.PathFinder.AITileAtWorldCoordinate
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AITileAtWorldCoordinate_WorldCoordinate_
  name: AITileAtWorldCoordinate
  nameWithType: PathFinder.AITileAtWorldCoordinate
  fullName: PathFinder.AITileAtWorldCoordinate
- uid: Global.AItile
  commentId: T:Global.AItile
  isExternal: true
  href: AItile.html
  name: AItile
  nameWithType: AItile
  fullName: AItile
- uid: Global.PathFinder.ConnectionAtCoordinate*
  commentId: Overload:Global.PathFinder.ConnectionAtCoordinate
  isExternal: true
  href: Global.PathFinder.html#PathFinder_ConnectionAtCoordinate_System_Boolean_WorldCoordinate_System_Int32_
  name: ConnectionAtCoordinate
  nameWithType: PathFinder.ConnectionAtCoordinate
  fullName: PathFinder.ConnectionAtCoordinate
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom*
  commentId: Overload:Global.PathFinder.ConnectionsOfAbstractNodeInRealizedRoom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_ConnectionsOfAbstractNodeInRealizedRoom_System_Boolean_WorldCoordinate_System_Int32_
  name: ConnectionsOfAbstractNodeInRealizedRoom
  nameWithType: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom
  fullName: PathFinder.ConnectionsOfAbstractNodeInRealizedRoom
- uid: Global.PathFinder.FromRealizedToWorldConnection*
  commentId: Overload:Global.PathFinder.FromRealizedToWorldConnection
  isExternal: true
  href: Global.PathFinder.html#PathFinder_FromRealizedToWorldConnection_System_Boolean_WorldCoordinate_
  name: FromRealizedToWorldConnection
  nameWithType: PathFinder.FromRealizedToWorldConnection
  fullName: PathFinder.FromRealizedToWorldConnection
- uid: Global.PathFinder.FromWorldToRealizedRoomShortCutConnection*
  commentId: Overload:Global.PathFinder.FromWorldToRealizedRoomShortCutConnection
  isExternal: true
  href: Global.PathFinder.html#PathFinder_FromWorldToRealizedRoomShortCutConnection_System_Boolean_WorldCoordinate_
  name: FromWorldToRealizedRoomShortCutConnection
  nameWithType: PathFinder.FromWorldToRealizedRoomShortCutConnection
  fullName: PathFinder.FromWorldToRealizedRoomShortCutConnection
- uid: Global.PathFinder.OutOfElement*
  commentId: Overload:Global.PathFinder.OutOfElement
  isExternal: true
  href: Global.PathFinder.html#PathFinder_OutOfElement_WorldCoordinate_
  name: OutOfElement
  nameWithType: PathFinder.OutOfElement
  fullName: PathFinder.OutOfElement
- uid: Global.PathFinder.CoordinateReachable*
  commentId: Overload:Global.PathFinder.CoordinateReachable
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinateReachable_WorldCoordinate_
  name: CoordinateReachable
  nameWithType: PathFinder.CoordinateReachable
  fullName: PathFinder.CoordinateReachable
- uid: Global.PathFinder.CoordinatePossibleToGetBackFrom*
  commentId: Overload:Global.PathFinder.CoordinatePossibleToGetBackFrom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinatePossibleToGetBackFrom_WorldCoordinate_
  name: CoordinatePossibleToGetBackFrom
  nameWithType: PathFinder.CoordinatePossibleToGetBackFrom
  fullName: PathFinder.CoordinatePossibleToGetBackFrom
- uid: Global.PathFinder.CoordinateReachableAndGetbackable*
  commentId: Overload:Global.PathFinder.CoordinateReachableAndGetbackable
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinateReachableAndGetbackable_WorldCoordinate_
  name: CoordinateReachableAndGetbackable
  nameWithType: PathFinder.CoordinateReachableAndGetbackable
  fullName: PathFinder.CoordinateReachableAndGetbackable
- uid: Global.PathFinder.CoordinateViable*
  commentId: Overload:Global.PathFinder.CoordinateViable
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinateViable_WorldCoordinate_
  name: CoordinateViable
  nameWithType: PathFinder.CoordinateViable
  fullName: PathFinder.CoordinateViable
- uid: Global.PathFinder.CoordinateAtCurrentPathingGeneration*
  commentId: Overload:Global.PathFinder.CoordinateAtCurrentPathingGeneration
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinateAtCurrentPathingGeneration_WorldCoordinate_
  name: CoordinateAtCurrentPathingGeneration
  nameWithType: PathFinder.CoordinateAtCurrentPathingGeneration
  fullName: PathFinder.CoordinateAtCurrentPathingGeneration
- uid: Global.PathFinder.ConnectAITile*
  commentId: Overload:Global.PathFinder.ConnectAITile
  isExternal: true
  href: Global.PathFinder.html#PathFinder_ConnectAITile_System_Int32_System_Int32_
  name: ConnectAITile
  nameWithType: PathFinder.ConnectAITile
  fullName: PathFinder.ConnectAITile
- uid: Global.PathFinder.CreatePathForAbstractreature*
  commentId: Overload:Global.PathFinder.CreatePathForAbstractreature
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CreatePathForAbstractreature_WorldCoordinate_
  name: CreatePathForAbstractreature
  nameWithType: PathFinder.CreatePathForAbstractreature
  fullName: PathFinder.CreatePathForAbstractreature
- uid: System.Collections.Generic.List{WorldCoordinate}
  commentId: T:System.Collections.Generic.List{WorldCoordinate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WorldCoordinate>
  nameWithType: List<WorldCoordinate>
  fullName: System.Collections.Generic.List<WorldCoordinate>
  nameWithType.vb: List(Of WorldCoordinate)
  fullName.vb: System.Collections.Generic.List(Of WorldCoordinate)
  name.vb: List(Of WorldCoordinate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: )
- uid: Global.PathFinder.AwayFromForbiddenEntrance*
  commentId: Overload:Global.PathFinder.AwayFromForbiddenEntrance
  isExternal: true
  href: Global.PathFinder.html#PathFinder_AwayFromForbiddenEntrance_WorldCoordinate_
  name: AwayFromForbiddenEntrance
  nameWithType: PathFinder.AwayFromForbiddenEntrance
  fullName: PathFinder.AwayFromForbiddenEntrance
- uid: Global.PathFinder.ForbiddenEntranceDist*
  commentId: Overload:Global.PathFinder.ForbiddenEntranceDist
  isExternal: true
  href: Global.PathFinder.html#PathFinder_ForbiddenEntranceDist_WorldCoordinate_
  name: ForbiddenEntranceDist
  nameWithType: PathFinder.ForbiddenEntranceDist
  fullName: PathFinder.ForbiddenEntranceDist
- uid: Global.PathFinder.PathWithExits*
  commentId: Overload:Global.PathFinder.PathWithExits
  isExternal: true
  href: Global.PathFinder.html#PathFinder_PathWithExits_WorldCoordinate_System_Boolean_
  name: PathWithExits
  nameWithType: PathFinder.PathWithExits
  fullName: PathFinder.PathWithExits
- uid: Global.PathFinder.CheckConnectionCost*
  commentId: Overload:Global.PathFinder.CheckConnectionCost
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CheckConnectionCost_PathFinder_PathingCell_PathFinder_PathingCell_MovementConnection_System_Boolean_
  name: CheckConnectionCost
  nameWithType: PathFinder.CheckConnectionCost
  fullName: PathFinder.CheckConnectionCost
- uid: Global.PathFinder.HeuristicForCell*
  commentId: Overload:Global.PathFinder.HeuristicForCell
  isExternal: true
  href: Global.PathFinder.html#PathFinder_HeuristicForCell_PathFinder_PathingCell_PathCost_
  name: HeuristicForCell
  nameWithType: PathFinder.HeuristicForCell
  fullName: PathFinder.HeuristicForCell
- uid: Global.PathFinder.BestRegionTransportationGoal*
  commentId: Overload:Global.PathFinder.BestRegionTransportationGoal
  isExternal: true
  href: Global.PathFinder.html#PathFinder_BestRegionTransportationGoal
  name: BestRegionTransportationGoal
  nameWithType: PathFinder.BestRegionTransportationGoal
  fullName: PathFinder.BestRegionTransportationGoal
- uid: Global.PathFinder.DebugInfo*
  commentId: Overload:Global.PathFinder.DebugInfo
  isExternal: true
  href: Global.PathFinder.html#PathFinder_DebugInfo_WorldCoordinate_
  name: DebugInfo
  nameWithType: PathFinder.DebugInfo
  fullName: PathFinder.DebugInfo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.PathFinder.LogWorldCellState*
  commentId: Overload:Global.PathFinder.LogWorldCellState
  isExternal: true
  href: Global.PathFinder.html#PathFinder_LogWorldCellState
  name: LogWorldCellState
  nameWithType: PathFinder.LogWorldCellState
  fullName: PathFinder.LogWorldCellState
- uid: Global.PathFinder.CoordinateCost*
  commentId: Overload:Global.PathFinder.CoordinateCost
  isExternal: true
  href: Global.PathFinder.html#PathFinder_CoordinateCost_WorldCoordinate_
  name: CoordinateCost
  nameWithType: PathFinder.CoordinateCost
  fullName: PathFinder.CoordinateCost
- uid: Global.PathFinder.RayTraceInAccessibleTiles*
  commentId: Overload:Global.PathFinder.RayTraceInAccessibleTiles
  isExternal: true
  href: Global.PathFinder.html#PathFinder_RayTraceInAccessibleTiles_RWCustom_IntVector2_RWCustom_IntVector2_
  name: RayTraceInAccessibleTiles
  nameWithType: PathFinder.RayTraceInAccessibleTiles
  fullName: PathFinder.RayTraceInAccessibleTiles
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: Global.PathFinder.lookingForImpossiblePath*
  commentId: Overload:Global.PathFinder.lookingForImpossiblePath
  isExternal: true
  href: Global.PathFinder.html#PathFinder_lookingForImpossiblePath
  name: lookingForImpossiblePath
  nameWithType: PathFinder.lookingForImpossiblePath
  fullName: PathFinder.lookingForImpossiblePath
- uid: Global.PathFinder.DoneMappingAccessibility*
  commentId: Overload:Global.PathFinder.DoneMappingAccessibility
  isExternal: true
  href: Global.PathFinder.html#PathFinder_DoneMappingAccessibility
  name: DoneMappingAccessibility
  nameWithType: PathFinder.DoneMappingAccessibility
  fullName: PathFinder.DoneMappingAccessibility
- uid: Global.PathFinder.creaturePos*
  commentId: Overload:Global.PathFinder.creaturePos
  isExternal: true
  href: Global.PathFinder.html#PathFinder_creaturePos
  name: creaturePos
  nameWithType: PathFinder.creaturePos
  fullName: PathFinder.creaturePos
- uid: Global.PathFinder.creatureType*
  commentId: Overload:Global.PathFinder.creatureType
  isExternal: true
  href: Global.PathFinder.html#PathFinder_creatureType
  name: creatureType
  nameWithType: PathFinder.creatureType
  fullName: PathFinder.creatureType
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
- uid: Global.PathFinder.GetDestination*
  commentId: Overload:Global.PathFinder.GetDestination
  isExternal: true
  href: Global.PathFinder.html#PathFinder_GetDestination
  name: GetDestination
  nameWithType: PathFinder.GetDestination
  fullName: PathFinder.GetDestination
- uid: Global.PathFinder.GetEffectualDestination*
  commentId: Overload:Global.PathFinder.GetEffectualDestination
  isExternal: true
  href: Global.PathFinder.html#PathFinder_GetEffectualDestination
  name: GetEffectualDestination
  nameWithType: PathFinder.GetEffectualDestination
  fullName: PathFinder.GetEffectualDestination
- uid: Global.PathFinder.DestInRoom*
  commentId: Overload:Global.PathFinder.DestInRoom
  isExternal: true
  href: Global.PathFinder.html#PathFinder_DestInRoom
  name: DestInRoom
  nameWithType: PathFinder.DestInRoom
  fullName: PathFinder.DestInRoom
