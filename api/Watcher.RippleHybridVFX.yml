### YamlMime:ManagedReference
items:
- uid: Watcher.RippleHybridVFX
  commentId: T:Watcher.RippleHybridVFX
  id: RippleHybridVFX
  parent: Watcher
  children:
  - Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)
  - Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)
  - Watcher.RippleHybridVFX.deactivate
  - Watcher.RippleHybridVFX.delete
  - Watcher.RippleHybridVFX.deleteMe
  langs:
  - csharp
  - vb
  name: RippleHybridVFX
  nameWithType: RippleHybridVFX
  fullName: Watcher.RippleHybridVFX
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.RippleHybridVFX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class RippleHybridVFX : IDrawable'
    content.vb: Public Class RippleHybridVFX Implements IDrawable
  inheritance:
  - System.Object
  implements:
  - Global.IDrawable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.RippleHybridVFX.deactivate
  commentId: F:Watcher.RippleHybridVFX.deactivate
  id: deactivate
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: deactivate
  nameWithType: RippleHybridVFX.deactivate
  fullName: Watcher.RippleHybridVFX.deactivate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.RippleHybridVFX.deactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deactivate
    return:
      type: System.Boolean
    content.vb: Public deactivate As Boolean
- uid: Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)
  commentId: M:Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)
  id: '#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)'
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: RippleHybridVFX(SpriteLeaser, Room, float, RippleSide)
  nameWithType: RippleHybridVFX.RippleHybridVFX(RoomCamera.SpriteLeaser, Room, float, RippleHybridVFX.RippleSide)
  fullName: Watcher.RippleHybridVFX.RippleHybridVFX(RoomCamera.SpriteLeaser, Room, float, Watcher.RippleHybridVFX.RippleSide)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.RippleHybridVFX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RippleHybridVFX(RoomCamera.SpriteLeaser sLeaser, Room room, float activationTime, RippleHybridVFX.RippleSide rippleMaskSide)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    - id: activationTime
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>activationTime</parameter>
            <parameter>M:Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    - id: rippleMaskSide
      type: Watcher.RippleHybridVFX.RippleSide
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rippleMaskSide</parameter>
            <parameter>M:Watcher.RippleHybridVFX.#ctor(RoomCamera.SpriteLeaser,Room,System.Single,Watcher.RippleHybridVFX.RippleSide)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(sLeaser As RoomCamera.SpriteLeaser, room As Room, activationTime As Single, rippleMaskSide As RippleHybridVFX.RippleSide)
  overload: Watcher.RippleHybridVFX.#ctor*
  nameWithType.vb: RippleHybridVFX.New(RoomCamera.SpriteLeaser, Room, Single, RippleHybridVFX.RippleSide)
  fullName.vb: Watcher.RippleHybridVFX.New(RoomCamera.SpriteLeaser, Room, Single, Watcher.RippleHybridVFX.RippleSide)
  name.vb: New(SpriteLeaser, Room, Single, RippleSide)
- uid: Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)
  commentId: M:Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)
  id: Update(RoomCamera.SpriteLeaser)
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: Update(SpriteLeaser)
  nameWithType: RippleHybridVFX.Update(RoomCamera.SpriteLeaser)
  fullName: Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update(RoomCamera.SpriteLeaser sLeaser)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.Update(RoomCamera.SpriteLeaser)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Update(sLeaser As RoomCamera.SpriteLeaser)
  overload: Watcher.RippleHybridVFX.Update*
- uid: Watcher.RippleHybridVFX.delete
  commentId: M:Watcher.RippleHybridVFX.delete
  id: delete
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: delete()
  nameWithType: RippleHybridVFX.delete()
  fullName: Watcher.RippleHybridVFX.delete()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.delete</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void delete()
    content.vb: Public Sub delete()
  overload: Watcher.RippleHybridVFX.delete*
- uid: Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.RippleHybridVFX.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Watcher.RippleHybridVFX.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Watcher.RippleHybridVFX.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Watcher.RippleHybridVFX.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:Watcher.RippleHybridVFX.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Watcher.RippleHybridVFX.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Watcher.RippleHybridVFX.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Watcher.RippleHybridVFX.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Watcher.RippleHybridVFX.deleteMe
  commentId: P:Watcher.RippleHybridVFX.deleteMe
  id: deleteMe
  parent: Watcher.RippleHybridVFX
  langs:
  - csharp
  - vb
  name: deleteMe
  nameWithType: RippleHybridVFX.deleteMe
  fullName: Watcher.RippleHybridVFX.deleteMe
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.RippleHybridVFX.deleteMe</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deleteMe { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property deleteMe As Boolean
  overload: Watcher.RippleHybridVFX.deleteMe*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Watcher.RippleHybridVFX.#ctor*
  commentId: Overload:Watcher.RippleHybridVFX.#ctor
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX__ctor_RoomCamera_SpriteLeaser_Room_System_Single_Watcher_RippleHybridVFX_RippleSide_
  name: RippleHybridVFX
  nameWithType: RippleHybridVFX.RippleHybridVFX
  fullName: Watcher.RippleHybridVFX.RippleHybridVFX
  nameWithType.vb: RippleHybridVFX.New
  fullName.vb: Watcher.RippleHybridVFX.New
  name.vb: New
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Watcher.RippleHybridVFX.RippleSide
  commentId: T:Watcher.RippleHybridVFX.RippleSide
  parent: Watcher
  isExternal: true
  href: Watcher.RippleHybridVFX.html
  name: RippleHybridVFX.RippleSide
  nameWithType: RippleHybridVFX.RippleSide
  fullName: Watcher.RippleHybridVFX.RippleSide
  spec.csharp:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  spec.vb:
  - uid: Watcher.RippleHybridVFX
    name: RippleHybridVFX
    isExternal: true
    href: Watcher.RippleHybridVFX.html
  - name: .
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
- uid: Watcher.RippleHybridVFX.Update*
  commentId: Overload:Watcher.RippleHybridVFX.Update
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_Update_RoomCamera_SpriteLeaser_
  name: Update
  nameWithType: RippleHybridVFX.Update
  fullName: Watcher.RippleHybridVFX.Update
- uid: Watcher.RippleHybridVFX.delete*
  commentId: Overload:Watcher.RippleHybridVFX.delete
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_delete
  name: delete
  nameWithType: RippleHybridVFX.delete
  fullName: Watcher.RippleHybridVFX.delete
- uid: Watcher.RippleHybridVFX.InitiateSprites*
  commentId: Overload:Watcher.RippleHybridVFX.InitiateSprites
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: RippleHybridVFX.InitiateSprites
  fullName: Watcher.RippleHybridVFX.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Watcher.RippleHybridVFX.DrawSprites*
  commentId: Overload:Watcher.RippleHybridVFX.DrawSprites
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: RippleHybridVFX.DrawSprites
  fullName: Watcher.RippleHybridVFX.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Watcher.RippleHybridVFX.AddToContainer*
  commentId: Overload:Watcher.RippleHybridVFX.AddToContainer
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: RippleHybridVFX.AddToContainer
  fullName: Watcher.RippleHybridVFX.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Watcher.RippleHybridVFX.ApplyPalette*
  commentId: Overload:Watcher.RippleHybridVFX.ApplyPalette
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: RippleHybridVFX.ApplyPalette
  fullName: Watcher.RippleHybridVFX.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Watcher.RippleHybridVFX.deleteMe*
  commentId: Overload:Watcher.RippleHybridVFX.deleteMe
  isExternal: true
  href: Watcher.RippleHybridVFX.html#Watcher_RippleHybridVFX_deleteMe
  name: deleteMe
  nameWithType: RippleHybridVFX.deleteMe
  fullName: Watcher.RippleHybridVFX.deleteMe
