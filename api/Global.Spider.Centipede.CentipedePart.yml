### YamlMime:ManagedReference
items:
- uid: Global.Spider.Centipede.CentipedePart
  commentId: T:Global.Spider.Centipede.CentipedePart
  id: Spider.Centipede.CentipedePart
  parent: Global
  children:
  - Global.Spider.Centipede.CentipedePart.#ctor(Spider.Centipede,Spider)
  - Global.Spider.Centipede.CentipedePart.BodyFac
  - Global.Spider.Centipede.CentipedePart.Update(System.Int32)
  - Global.Spider.Centipede.CentipedePart.centipede
  - Global.Spider.Centipede.CentipedePart.inRightPlace
  - Global.Spider.Centipede.CentipedePart.index
  - Global.Spider.Centipede.CentipedePart.master
  - Global.Spider.Centipede.CentipedePart.separatedCounter
  - Global.Spider.Centipede.CentipedePart.spider
  langs:
  - csharp
  - vb
  name: Spider.Centipede.CentipedePart
  nameWithType: Spider.Centipede.CentipedePart
  fullName: Spider.Centipede.CentipedePart
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Spider.Centipede.CentipedePart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Spider.Centipede.CentipedePart
    content.vb: Public Class Spider.Centipede.CentipedePart
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Spider.Centipede.CentipedePart.centipede
  commentId: F:Global.Spider.Centipede.CentipedePart.centipede
  id: centipede
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: centipede
  nameWithType: Spider.Centipede.CentipedePart.centipede
  fullName: Spider.Centipede.CentipedePart.centipede
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.centipede</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Spider.Centipede centipede
    return:
      type: Global.Spider.Centipede
    content.vb: Public centipede As Spider.Centipede
- uid: Global.Spider.Centipede.CentipedePart.spider
  commentId: F:Global.Spider.Centipede.CentipedePart.spider
  id: spider
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: spider
  nameWithType: Spider.Centipede.CentipedePart.spider
  fullName: Spider.Centipede.CentipedePart.spider
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.spider</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Spider spider
    return:
      type: Global.Spider
    content.vb: Public spider As Spider
- uid: Global.Spider.Centipede.CentipedePart.inRightPlace
  commentId: F:Global.Spider.Centipede.CentipedePart.inRightPlace
  id: inRightPlace
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: inRightPlace
  nameWithType: Spider.Centipede.CentipedePart.inRightPlace
  fullName: Spider.Centipede.CentipedePart.inRightPlace
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.inRightPlace</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inRightPlace
    return:
      type: System.Boolean
    content.vb: Public inRightPlace As Boolean
- uid: Global.Spider.Centipede.CentipedePart.separatedCounter
  commentId: F:Global.Spider.Centipede.CentipedePart.separatedCounter
  id: separatedCounter
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: separatedCounter
  nameWithType: Spider.Centipede.CentipedePart.separatedCounter
  fullName: Spider.Centipede.CentipedePart.separatedCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.separatedCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int separatedCounter
    return:
      type: System.Int32
    content.vb: Public separatedCounter As Integer
- uid: Global.Spider.Centipede.CentipedePart.index
  commentId: F:Global.Spider.Centipede.CentipedePart.index
  id: index
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: index
  nameWithType: Spider.Centipede.CentipedePart.index
  fullName: Spider.Centipede.CentipedePart.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Global.Spider.Centipede.CentipedePart.master
  commentId: F:Global.Spider.Centipede.CentipedePart.master
  id: master
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: master
  nameWithType: Spider.Centipede.CentipedePart.master
  fullName: Spider.Centipede.CentipedePart.master
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Spider.Centipede.CentipedePart.master</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Spider.Centipede.CentipedePart master
    return:
      type: Global.Spider.Centipede.CentipedePart
    content.vb: Public master As Spider.Centipede.CentipedePart
- uid: Global.Spider.Centipede.CentipedePart.#ctor(Spider.Centipede,Spider)
  commentId: M:Global.Spider.Centipede.CentipedePart.#ctor(Spider.Centipede,Spider)
  id: '#ctor(Spider.Centipede,Spider)'
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: CentipedePart(Centipede, Spider)
  nameWithType: Spider.Centipede.CentipedePart.CentipedePart(Spider.Centipede, Spider)
  fullName: Spider.Centipede.CentipedePart.CentipedePart(Spider.Centipede, Spider)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Spider.Centipede.CentipedePart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CentipedePart(Spider.Centipede centipede, Spider spider)
    parameters:
    - id: centipede
      type: Global.Spider.Centipede
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>centipede</parameter>
            <parameter>M:Spider.Centipede.CentipedePart.#ctor(Spider.Centipede,Spider)</parameter>
          </include>
        </markup>
    - id: spider
      type: Global.Spider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spider</parameter>
            <parameter>M:Spider.Centipede.CentipedePart.#ctor(Spider.Centipede,Spider)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(centipede As Spider.Centipede, spider As Spider)
  overload: Global.Spider.Centipede.CentipedePart.#ctor*
  nameWithType.vb: Spider.Centipede.CentipedePart.New(Spider.Centipede, Spider)
  fullName.vb: Spider.Centipede.CentipedePart.New(Spider.Centipede, Spider)
  name.vb: New(Centipede, Spider)
- uid: Global.Spider.Centipede.CentipedePart.Update(System.Int32)
  commentId: M:Global.Spider.Centipede.CentipedePart.Update(System.Int32)
  id: Update(System.Int32)
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: Update(int)
  nameWithType: Spider.Centipede.CentipedePart.Update(int)
  fullName: Spider.Centipede.CentipedePart.Update(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Spider.Centipede.CentipedePart.Update(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Spider.Centipede.CentipedePart.Update(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Update(index As Integer)
  overload: Global.Spider.Centipede.CentipedePart.Update*
  nameWithType.vb: Spider.Centipede.CentipedePart.Update(Integer)
  fullName.vb: Spider.Centipede.CentipedePart.Update(Integer)
  name.vb: Update(Integer)
- uid: Global.Spider.Centipede.CentipedePart.BodyFac
  commentId: P:Global.Spider.Centipede.CentipedePart.BodyFac
  id: BodyFac
  parent: Global.Spider.Centipede.CentipedePart
  langs:
  - csharp
  - vb
  name: BodyFac
  nameWithType: Spider.Centipede.CentipedePart.BodyFac
  fullName: Spider.Centipede.CentipedePart.BodyFac
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Spider.Centipede.CentipedePart.BodyFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BodyFac { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property BodyFac As Single
  overload: Global.Spider.Centipede.CentipedePart.BodyFac*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Spider.Centipede
  commentId: T:Global.Spider.Centipede
  isExternal: true
  href: Spider.html
  name: Spider.Centipede
  nameWithType: Spider.Centipede
  fullName: Spider.Centipede
  spec.csharp:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.Centipede
    name: Centipede
    isExternal: true
    href: Spider.Centipede.html
  spec.vb:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.Centipede
    name: Centipede
    isExternal: true
    href: Spider.Centipede.html
- uid: Global.Spider
  commentId: T:Global.Spider
  isExternal: true
  href: Spider.html
  name: Spider
  nameWithType: Spider
  fullName: Spider
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.Spider.Centipede.CentipedePart
  commentId: T:Global.Spider.Centipede.CentipedePart
  isExternal: true
  href: Spider.html
  name: Spider.Centipede.CentipedePart
  nameWithType: Spider.Centipede.CentipedePart
  fullName: Spider.Centipede.CentipedePart
  spec.csharp:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.Centipede
    name: Centipede
    isExternal: true
    href: Spider.Centipede.html
  - name: .
  - uid: Global.Spider.Centipede.CentipedePart
    name: CentipedePart
    isExternal: true
    href: Spider.Centipede.CentipedePart.html
  spec.vb:
  - uid: Global.Spider
    name: Spider
    isExternal: true
    href: Spider.html
  - name: .
  - uid: Global.Spider.Centipede
    name: Centipede
    isExternal: true
    href: Spider.Centipede.html
  - name: .
  - uid: Global.Spider.Centipede.CentipedePart
    name: CentipedePart
    isExternal: true
    href: Spider.Centipede.CentipedePart.html
- uid: Global.Spider.Centipede.CentipedePart.#ctor*
  commentId: Overload:Global.Spider.Centipede.CentipedePart.#ctor
  isExternal: true
  href: Global.Spider.Centipede.CentipedePart.html#Spider_Centipede_CentipedePart__ctor_Spider_Centipede_Spider_
  name: CentipedePart
  nameWithType: Spider.Centipede.CentipedePart.CentipedePart
  fullName: Spider.Centipede.CentipedePart.CentipedePart
  nameWithType.vb: Spider.Centipede.CentipedePart.New
  fullName.vb: Spider.Centipede.CentipedePart.New
  name.vb: New
- uid: Global.Spider.Centipede.CentipedePart.Update*
  commentId: Overload:Global.Spider.Centipede.CentipedePart.Update
  isExternal: true
  href: Global.Spider.Centipede.CentipedePart.html#Spider_Centipede_CentipedePart_Update_System_Int32_
  name: Update
  nameWithType: Spider.Centipede.CentipedePart.Update
  fullName: Spider.Centipede.CentipedePart.Update
- uid: Global.Spider.Centipede.CentipedePart.BodyFac*
  commentId: Overload:Global.Spider.Centipede.CentipedePart.BodyFac
  isExternal: true
  href: Global.Spider.Centipede.CentipedePart.html#Spider_Centipede_CentipedePart_BodyFac
  name: BodyFac
  nameWithType: Spider.Centipede.CentipedePart.BodyFac
  fullName: Spider.Centipede.CentipedePart.BodyFac
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
