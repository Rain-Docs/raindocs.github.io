### YamlMime:ManagedReference
items:
- uid: HUD.Map.MapData
  commentId: T:HUD.Map.MapData
  id: Map.MapData
  parent: HUD
  children:
  - HUD.Map.MapData.#ctor(HUD.Map.MapData)
  - HUD.Map.MapData.#ctor(World,RainWorld)
  - HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})
  - HUD.Map.MapData.InitWarpData(SaveState)
  - HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)
  - HUD.Map.MapData.LayerOfRoom(System.Int32)
  - HUD.Map.MapData.NameOfRoom(System.Int32)
  - HUD.Map.MapData.PositionOfRoom(System.Int32)
  - HUD.Map.MapData.ResetWarpMapToCenter
  - HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)
  - HUD.Map.MapData.SizeOfRoom(System.Int32)
  - HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)
  - HUD.Map.MapData.UpdateWarpData
  - HUD.Map.MapData.activeSwarmRooms
  - HUD.Map.MapData.allWarpConnectionData
  - HUD.Map.MapData.allWarpConnections
  - HUD.Map.MapData.currentKarma
  - HUD.Map.MapData.currentPlayerRegion
  - HUD.Map.MapData.discoveredWarpRegions
  - HUD.Map.MapData.dontReplayAnimations
  - HUD.Map.MapData.firstRoomIndex
  - HUD.Map.MapData.gateData
  - HUD.Map.MapData.infectedWarpRegions
  - HUD.Map.MapData.karmaFlowerPos
  - HUD.Map.MapData.newWarpConnections
  - HUD.Map.MapData.newWarpRegions
  - HUD.Map.MapData.objectTrackers
  - HUD.Map.MapData.regionName
  - HUD.Map.MapData.regionPositions
  - HUD.Map.MapData.roomConnections
  - HUD.Map.MapData.roomIndices
  - HUD.Map.MapData.roomLayers
  - HUD.Map.MapData.roomNames
  - HUD.Map.MapData.roomPositions
  - HUD.Map.MapData.roomSizes
  - HUD.Map.MapData.shelterData
  - HUD.Map.MapData.type
  - HUD.Map.MapData.unencounteredSpinningTopRegions
  - HUD.Map.MapData.world
  langs:
  - csharp
  - vb
  name: Map.MapData
  nameWithType: Map.MapData
  fullName: HUD.Map.MapData
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.Map.MapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Map.MapData
    content.vb: Public Class Map.MapData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.Map.MapData.firstRoomIndex
  commentId: F:HUD.Map.MapData.firstRoomIndex
  id: firstRoomIndex
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: firstRoomIndex
  nameWithType: Map.MapData.firstRoomIndex
  fullName: HUD.Map.MapData.firstRoomIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.firstRoomIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstRoomIndex
    return:
      type: System.Int32
    content.vb: Public firstRoomIndex As Integer
- uid: HUD.Map.MapData.regionName
  commentId: F:HUD.Map.MapData.regionName
  id: regionName
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: regionName
  nameWithType: Map.MapData.regionName
  fullName: HUD.Map.MapData.regionName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.regionName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string regionName
    return:
      type: System.String
    content.vb: Public regionName As String
- uid: HUD.Map.MapData.world
  commentId: F:HUD.Map.MapData.world
  id: world
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: world
  nameWithType: Map.MapData.world
  fullName: HUD.Map.MapData.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: HUD.Map.MapData.roomPositions
  commentId: F:HUD.Map.MapData.roomPositions
  id: roomPositions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomPositions
  nameWithType: Map.MapData.roomPositions
  fullName: HUD.Map.MapData.roomPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] roomPositions
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public roomPositions As Vector2()
- uid: HUD.Map.MapData.roomSizes
  commentId: F:HUD.Map.MapData.roomSizes
  id: roomSizes
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomSizes
  nameWithType: Map.MapData.roomSizes
  fullName: HUD.Map.MapData.roomSizes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomSizes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] roomSizes
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public roomSizes As IntVector2()
- uid: HUD.Map.MapData.roomLayers
  commentId: F:HUD.Map.MapData.roomLayers
  id: roomLayers
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomLayers
  nameWithType: Map.MapData.roomLayers
  fullName: HUD.Map.MapData.roomLayers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomLayers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] roomLayers
    return:
      type: System.Int32[]
    content.vb: Public roomLayers As Integer()
- uid: HUD.Map.MapData.roomNames
  commentId: F:HUD.Map.MapData.roomNames
  id: roomNames
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomNames
  nameWithType: Map.MapData.roomNames
  fullName: HUD.Map.MapData.roomNames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomNames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] roomNames
    return:
      type: System.String[]
    content.vb: Public roomNames As String()
- uid: HUD.Map.MapData.roomIndices
  commentId: F:HUD.Map.MapData.roomIndices
  id: roomIndices
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomIndices
  nameWithType: Map.MapData.roomIndices
  fullName: HUD.Map.MapData.roomIndices
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomIndices</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] roomIndices
    return:
      type: System.Int32[]
    content.vb: Public roomIndices As Integer()
- uid: HUD.Map.MapData.activeSwarmRooms
  commentId: F:HUD.Map.MapData.activeSwarmRooms
  id: activeSwarmRooms
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: activeSwarmRooms
  nameWithType: Map.MapData.activeSwarmRooms
  fullName: HUD.Map.MapData.activeSwarmRooms
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.activeSwarmRooms</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.MapData.SwarmRoomData[] activeSwarmRooms
    return:
      type: HUD.Map.MapData.SwarmRoomData[]
    content.vb: Public activeSwarmRooms As Map.MapData.SwarmRoomData()
- uid: HUD.Map.MapData.shelterData
  commentId: F:HUD.Map.MapData.shelterData
  id: shelterData
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: shelterData
  nameWithType: Map.MapData.shelterData
  fullName: HUD.Map.MapData.shelterData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.shelterData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.MapData.ShelterData[] shelterData
    return:
      type: HUD.Map.MapData.ShelterData[]
    content.vb: Public shelterData As Map.MapData.ShelterData()
- uid: HUD.Map.MapData.gateData
  commentId: F:HUD.Map.MapData.gateData
  id: gateData
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: gateData
  nameWithType: Map.MapData.gateData
  fullName: HUD.Map.MapData.gateData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.gateData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.MapData.GateData[] gateData
    return:
      type: HUD.Map.MapData.GateData[]
    content.vb: Public gateData As Map.MapData.GateData()
- uid: HUD.Map.MapData.karmaFlowerPos
  commentId: F:HUD.Map.MapData.karmaFlowerPos
  id: karmaFlowerPos
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: karmaFlowerPos
  nameWithType: Map.MapData.karmaFlowerPos
  fullName: HUD.Map.MapData.karmaFlowerPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.karmaFlowerPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate? karmaFlowerPos
    return:
      type: System.Nullable{WorldCoordinate}
    content.vb: Public karmaFlowerPos As WorldCoordinate?
- uid: HUD.Map.MapData.currentKarma
  commentId: F:HUD.Map.MapData.currentKarma
  id: currentKarma
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: currentKarma
  nameWithType: Map.MapData.currentKarma
  fullName: HUD.Map.MapData.currentKarma
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.currentKarma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int currentKarma
    return:
      type: System.Int32
    content.vb: Public currentKarma As Integer
- uid: HUD.Map.MapData.roomConnections
  commentId: F:HUD.Map.MapData.roomConnections
  id: roomConnections
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: roomConnections
  nameWithType: Map.MapData.roomConnections
  fullName: HUD.Map.MapData.roomConnections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.roomConnections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> roomConnections
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public roomConnections As List(Of String)
- uid: HUD.Map.MapData.objectTrackers
  commentId: F:HUD.Map.MapData.objectTrackers
  id: objectTrackers
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: objectTrackers
  nameWithType: Map.MapData.objectTrackers
  fullName: HUD.Map.MapData.objectTrackers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.objectTrackers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PersistentObjectTracker> objectTrackers
    return:
      type: System.Collections.Generic.List{MoreSlugcats.PersistentObjectTracker}
    content.vb: Public objectTrackers As List(Of PersistentObjectTracker)
- uid: HUD.Map.MapData.type
  commentId: F:HUD.Map.MapData.type
  id: type
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: type
  nameWithType: Map.MapData.type
  fullName: HUD.Map.MapData.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map.MapType type
    return:
      type: HUD.Map.MapType
    content.vb: Public type As Map.MapType
- uid: HUD.Map.MapData.currentPlayerRegion
  commentId: F:HUD.Map.MapData.currentPlayerRegion
  id: currentPlayerRegion
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: currentPlayerRegion
  nameWithType: Map.MapData.currentPlayerRegion
  fullName: HUD.Map.MapData.currentPlayerRegion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.currentPlayerRegion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string currentPlayerRegion
    return:
      type: System.String
    content.vb: Public currentPlayerRegion As String
- uid: HUD.Map.MapData.discoveredWarpRegions
  commentId: F:HUD.Map.MapData.discoveredWarpRegions
  id: discoveredWarpRegions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: discoveredWarpRegions
  nameWithType: Map.MapData.discoveredWarpRegions
  fullName: HUD.Map.MapData.discoveredWarpRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.discoveredWarpRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> discoveredWarpRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public discoveredWarpRegions As List(Of String)
- uid: HUD.Map.MapData.infectedWarpRegions
  commentId: F:HUD.Map.MapData.infectedWarpRegions
  id: infectedWarpRegions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: infectedWarpRegions
  nameWithType: Map.MapData.infectedWarpRegions
  fullName: HUD.Map.MapData.infectedWarpRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.infectedWarpRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> infectedWarpRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public infectedWarpRegions As List(Of String)
- uid: HUD.Map.MapData.unencounteredSpinningTopRegions
  commentId: F:HUD.Map.MapData.unencounteredSpinningTopRegions
  id: unencounteredSpinningTopRegions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: unencounteredSpinningTopRegions
  nameWithType: Map.MapData.unencounteredSpinningTopRegions
  fullName: HUD.Map.MapData.unencounteredSpinningTopRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.unencounteredSpinningTopRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unencounteredSpinningTopRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unencounteredSpinningTopRegions As List(Of String)
- uid: HUD.Map.MapData.newWarpRegions
  commentId: F:HUD.Map.MapData.newWarpRegions
  id: newWarpRegions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: newWarpRegions
  nameWithType: Map.MapData.newWarpRegions
  fullName: HUD.Map.MapData.newWarpRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.newWarpRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> newWarpRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public newWarpRegions As List(Of String)
- uid: HUD.Map.MapData.allWarpConnections
  commentId: F:HUD.Map.MapData.allWarpConnections
  id: allWarpConnections
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: allWarpConnections
  nameWithType: Map.MapData.allWarpConnections
  fullName: HUD.Map.MapData.allWarpConnections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.allWarpConnections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> allWarpConnections
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public allWarpConnections As List(Of String)
- uid: HUD.Map.MapData.newWarpConnections
  commentId: F:HUD.Map.MapData.newWarpConnections
  id: newWarpConnections
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: newWarpConnections
  nameWithType: Map.MapData.newWarpConnections
  fullName: HUD.Map.MapData.newWarpConnections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.newWarpConnections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> newWarpConnections
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public newWarpConnections As List(Of String)
- uid: HUD.Map.MapData.allWarpConnectionData
  commentId: F:HUD.Map.MapData.allWarpConnectionData
  id: allWarpConnectionData
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: allWarpConnectionData
  nameWithType: Map.MapData.allWarpConnectionData
  fullName: HUD.Map.MapData.allWarpConnectionData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.allWarpConnectionData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<WarpPoint.WarpPointData> allWarpConnectionData
    return:
      type: System.Collections.Generic.List{Watcher.WarpPoint.WarpPointData}
    content.vb: Public allWarpConnectionData As List(Of WarpPoint.WarpPointData)
- uid: HUD.Map.MapData.regionPositions
  commentId: F:HUD.Map.MapData.regionPositions
  id: regionPositions
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: regionPositions
  nameWithType: Map.MapData.regionPositions
  fullName: HUD.Map.MapData.regionPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.regionPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector3[] regionPositions
    return:
      type: UnityEngine.Vector3[]
    content.vb: Public regionPositions As Vector3()
- uid: HUD.Map.MapData.dontReplayAnimations
  commentId: F:HUD.Map.MapData.dontReplayAnimations
  id: dontReplayAnimations
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: dontReplayAnimations
  nameWithType: Map.MapData.dontReplayAnimations
  fullName: HUD.Map.MapData.dontReplayAnimations
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.MapData.dontReplayAnimations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dontReplayAnimations
    return:
      type: System.Boolean
    content.vb: Public dontReplayAnimations As Boolean
- uid: HUD.Map.MapData.#ctor(World,RainWorld)
  commentId: M:HUD.Map.MapData.#ctor(World,RainWorld)
  id: '#ctor(World,RainWorld)'
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: MapData(World, RainWorld)
  nameWithType: Map.MapData.MapData(World, RainWorld)
  fullName: HUD.Map.MapData.MapData(World, RainWorld)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.Map.MapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MapData(World initWorld, RainWorld rainWorld)
    parameters:
    - id: initWorld
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initWorld</parameter>
            <parameter>M:HUD.Map.MapData.#ctor(World,RainWorld)</parameter>
          </include>
        </markup>
    - id: rainWorld
      type: Global.RainWorld
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rainWorld</parameter>
            <parameter>M:HUD.Map.MapData.#ctor(World,RainWorld)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(initWorld As World, rainWorld As RainWorld)
  overload: HUD.Map.MapData.#ctor*
  nameWithType.vb: Map.MapData.New(World, RainWorld)
  fullName.vb: HUD.Map.MapData.New(World, RainWorld)
  name.vb: New(World, RainWorld)
- uid: HUD.Map.MapData.#ctor(HUD.Map.MapData)
  commentId: M:HUD.Map.MapData.#ctor(HUD.Map.MapData)
  id: '#ctor(HUD.Map.MapData)'
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: MapData(MapData)
  nameWithType: Map.MapData.MapData(Map.MapData)
  fullName: HUD.Map.MapData.MapData(HUD.Map.MapData)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.Map.MapData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MapData(Map.MapData copyData)
    parameters:
    - id: copyData
      type: HUD.Map.MapData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>copyData</parameter>
            <parameter>M:HUD.Map.MapData.#ctor(HUD.Map.MapData)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(copyData As Map.MapData)
  overload: HUD.Map.MapData.#ctor*
  nameWithType.vb: Map.MapData.New(Map.MapData)
  fullName.vb: HUD.Map.MapData.New(HUD.Map.MapData)
  name.vb: New(MapData)
- uid: HUD.Map.MapData.NameOfRoom(System.Int32)
  commentId: M:HUD.Map.MapData.NameOfRoom(System.Int32)
  id: NameOfRoom(System.Int32)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: NameOfRoom(int)
  nameWithType: Map.MapData.NameOfRoom(int)
  fullName: HUD.Map.MapData.NameOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.NameOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string NameOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.MapData.NameOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.NameOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function NameOfRoom(room As Integer) As String
  overload: HUD.Map.MapData.NameOfRoom*
  nameWithType.vb: Map.MapData.NameOfRoom(Integer)
  fullName.vb: HUD.Map.MapData.NameOfRoom(Integer)
  name.vb: NameOfRoom(Integer)
- uid: HUD.Map.MapData.PositionOfRoom(System.Int32)
  commentId: M:HUD.Map.MapData.PositionOfRoom(System.Int32)
  id: PositionOfRoom(System.Int32)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: PositionOfRoom(int)
  nameWithType: Map.MapData.PositionOfRoom(int)
  fullName: HUD.Map.MapData.PositionOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.PositionOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 PositionOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.MapData.PositionOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.PositionOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function PositionOfRoom(room As Integer) As Vector2
  overload: HUD.Map.MapData.PositionOfRoom*
  nameWithType.vb: Map.MapData.PositionOfRoom(Integer)
  fullName.vb: HUD.Map.MapData.PositionOfRoom(Integer)
  name.vb: PositionOfRoom(Integer)
- uid: HUD.Map.MapData.SizeOfRoom(System.Int32)
  commentId: M:HUD.Map.MapData.SizeOfRoom(System.Int32)
  id: SizeOfRoom(System.Int32)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: SizeOfRoom(int)
  nameWithType: Map.MapData.SizeOfRoom(int)
  fullName: HUD.Map.MapData.SizeOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.SizeOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 SizeOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.MapData.SizeOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.SizeOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SizeOfRoom(room As Integer) As IntVector2
  overload: HUD.Map.MapData.SizeOfRoom*
  nameWithType.vb: Map.MapData.SizeOfRoom(Integer)
  fullName.vb: HUD.Map.MapData.SizeOfRoom(Integer)
  name.vb: SizeOfRoom(Integer)
- uid: HUD.Map.MapData.LayerOfRoom(System.Int32)
  commentId: M:HUD.Map.MapData.LayerOfRoom(System.Int32)
  id: LayerOfRoom(System.Int32)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: LayerOfRoom(int)
  nameWithType: Map.MapData.LayerOfRoom(int)
  fullName: HUD.Map.MapData.LayerOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.LayerOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LayerOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.MapData.LayerOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.LayerOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function LayerOfRoom(room As Integer) As Integer
  overload: HUD.Map.MapData.LayerOfRoom*
  nameWithType.vb: Map.MapData.LayerOfRoom(Integer)
  fullName.vb: HUD.Map.MapData.LayerOfRoom(Integer)
  name.vb: LayerOfRoom(Integer)
- uid: HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)
  commentId: M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)
  id: KarmaOfGate(PlayerProgression,World,System.String)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: KarmaOfGate(PlayerProgression, World, string)
  nameWithType: Map.MapData.KarmaOfGate(PlayerProgression, World, string)
  fullName: HUD.Map.MapData.KarmaOfGate(PlayerProgression, World, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RegionGate.GateRequirement KarmaOfGate(PlayerProgression progression, World initWorld, string roomName)
    parameters:
    - id: progression
      type: Global.PlayerProgression
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>progression</parameter>
            <parameter>M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)</parameter>
          </include>
        </markup>
    - id: initWorld
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initWorld</parameter>
            <parameter>M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)</parameter>
          </include>
        </markup>
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.RegionGate.GateRequirement
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.KarmaOfGate(PlayerProgression,World,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function KarmaOfGate(progression As PlayerProgression, initWorld As World, roomName As String) As RegionGate.GateRequirement
  overload: HUD.Map.MapData.KarmaOfGate*
  nameWithType.vb: Map.MapData.KarmaOfGate(PlayerProgression, World, String)
  fullName.vb: HUD.Map.MapData.KarmaOfGate(PlayerProgression, World, String)
  name.vb: KarmaOfGate(PlayerProgression, World, String)
- uid: HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)
  commentId: M:HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)
  id: ShelterMarkerPosOfRoom(System.Int32)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: ShelterMarkerPosOfRoom(int)
  nameWithType: Map.MapData.ShelterMarkerPosOfRoom(int)
  fullName: HUD.Map.MapData.ShelterMarkerPosOfRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ShelterMarkerPosOfRoom(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HUD.Map.MapData.ShelterMarkerPosOfRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShelterMarkerPosOfRoom(room As Integer) As Vector2
  overload: HUD.Map.MapData.ShelterMarkerPosOfRoom*
  nameWithType.vb: Map.MapData.ShelterMarkerPosOfRoom(Integer)
  fullName.vb: HUD.Map.MapData.ShelterMarkerPosOfRoom(Integer)
  name.vb: ShelterMarkerPosOfRoom(Integer)
- uid: HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)
  commentId: M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)
  id: UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: UpdateData(World, int, int, WorldCoordinate?, bool)
  nameWithType: Map.MapData.UpdateData(World, int, int, WorldCoordinate?, bool)
  fullName: HUD.Map.MapData.UpdateData(World, int, int, WorldCoordinate?, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateData(World world, int foodTicks, int currKarm, WorldCoordinate? kfPos, bool putItemsInShelters)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
          </include>
        </markup>
    - id: foodTicks
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>foodTicks</parameter>
            <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
          </include>
        </markup>
    - id: currKarm
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currKarm</parameter>
            <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
          </include>
        </markup>
    - id: kfPos
      type: System.Nullable{WorldCoordinate}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>kfPos</parameter>
            <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
          </include>
        </markup>
    - id: putItemsInShelters
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>putItemsInShelters</parameter>
            <parameter>M:HUD.Map.MapData.UpdateData(World,System.Int32,System.Int32,System.Nullable{WorldCoordinate},System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateData(world As World, foodTicks As Integer, currKarm As Integer, kfPos As WorldCoordinate?, putItemsInShelters As Boolean)
  overload: HUD.Map.MapData.UpdateData*
  nameWithType.vb: Map.MapData.UpdateData(World, Integer, Integer, WorldCoordinate?, Boolean)
  fullName.vb: HUD.Map.MapData.UpdateData(World, Integer, Integer, WorldCoordinate?, Boolean)
  name.vb: UpdateData(World, Integer, Integer, WorldCoordinate?, Boolean)
- uid: HUD.Map.MapData.InitWarpData(SaveState)
  commentId: M:HUD.Map.MapData.InitWarpData(SaveState)
  id: InitWarpData(SaveState)
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: InitWarpData(SaveState)
  nameWithType: Map.MapData.InitWarpData(SaveState)
  fullName: HUD.Map.MapData.InitWarpData(SaveState)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.InitWarpData(SaveState)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitWarpData(SaveState saveState)
    parameters:
    - id: saveState
      type: Global.SaveState
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveState</parameter>
            <parameter>M:HUD.Map.MapData.InitWarpData(SaveState)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitWarpData(saveState As SaveState)
  overload: HUD.Map.MapData.InitWarpData*
- uid: HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})
  commentId: M:HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})
  id: AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: AddConnectionsFromWarpString(KeyValuePair<string, string>)
  nameWithType: Map.MapData.AddConnectionsFromWarpString(KeyValuePair<string, string>)
  fullName: HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair<string, string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddConnectionsFromWarpString(KeyValuePair<string, string> warpPoint)
    parameters:
    - id: warpPoint
      type: System.Collections.Generic.KeyValuePair{System.String,System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>warpPoint</parameter>
            <parameter>M:HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair{System.String,System.String})</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddConnectionsFromWarpString(warpPoint As KeyValuePair(Of String, String))
  overload: HUD.Map.MapData.AddConnectionsFromWarpString*
  nameWithType.vb: Map.MapData.AddConnectionsFromWarpString(KeyValuePair(Of String, String))
  fullName.vb: HUD.Map.MapData.AddConnectionsFromWarpString(System.Collections.Generic.KeyValuePair(Of String, String))
  name.vb: AddConnectionsFromWarpString(KeyValuePair(Of String, String))
- uid: HUD.Map.MapData.UpdateWarpData
  commentId: M:HUD.Map.MapData.UpdateWarpData
  id: UpdateWarpData
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: UpdateWarpData()
  nameWithType: Map.MapData.UpdateWarpData()
  fullName: HUD.Map.MapData.UpdateWarpData()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.UpdateWarpData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateWarpData()
    content.vb: Public Sub UpdateWarpData()
  overload: HUD.Map.MapData.UpdateWarpData*
- uid: HUD.Map.MapData.ResetWarpMapToCenter
  commentId: M:HUD.Map.MapData.ResetWarpMapToCenter
  id: ResetWarpMapToCenter
  parent: HUD.Map.MapData
  langs:
  - csharp
  - vb
  name: ResetWarpMapToCenter()
  nameWithType: Map.MapData.ResetWarpMapToCenter()
  fullName: HUD.Map.MapData.ResetWarpMapToCenter()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.MapData.ResetWarpMapToCenter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetWarpMapToCenter()
    content.vb: Public Sub ResetWarpMapToCenter()
  overload: HUD.Map.MapData.ResetWarpMapToCenter*
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: HUD.Map.MapData.SwarmRoomData[]
  isExternal: true
  href: HUD.Map.MapData.SwarmRoomData.html
  name: SwarmRoomData[]
  nameWithType: Map.MapData.SwarmRoomData[]
  fullName: HUD.Map.MapData.SwarmRoomData[]
  nameWithType.vb: Map.MapData.SwarmRoomData()
  fullName.vb: HUD.Map.MapData.SwarmRoomData()
  name.vb: SwarmRoomData()
  spec.csharp:
  - uid: HUD.Map.MapData.SwarmRoomData
    name: SwarmRoomData
    isExternal: true
    href: HUD.Map.MapData.SwarmRoomData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: HUD.Map.MapData.SwarmRoomData
    name: SwarmRoomData
    isExternal: true
    href: HUD.Map.MapData.SwarmRoomData.html
  - name: (
  - name: )
- uid: HUD.Map.MapData.ShelterData[]
  isExternal: true
  href: HUD.Map.MapData.ShelterData.html
  name: ShelterData[]
  nameWithType: Map.MapData.ShelterData[]
  fullName: HUD.Map.MapData.ShelterData[]
  nameWithType.vb: Map.MapData.ShelterData()
  fullName.vb: HUD.Map.MapData.ShelterData()
  name.vb: ShelterData()
  spec.csharp:
  - uid: HUD.Map.MapData.ShelterData
    name: ShelterData
    isExternal: true
    href: HUD.Map.MapData.ShelterData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: HUD.Map.MapData.ShelterData
    name: ShelterData
    isExternal: true
    href: HUD.Map.MapData.ShelterData.html
  - name: (
  - name: )
- uid: HUD.Map.MapData.GateData[]
  isExternal: true
  href: HUD.Map.MapData.GateData.html
  name: GateData[]
  nameWithType: Map.MapData.GateData[]
  fullName: HUD.Map.MapData.GateData[]
  nameWithType.vb: Map.MapData.GateData()
  fullName.vb: HUD.Map.MapData.GateData()
  name.vb: GateData()
  spec.csharp:
  - uid: HUD.Map.MapData.GateData
    name: GateData
    isExternal: true
    href: HUD.Map.MapData.GateData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: HUD.Map.MapData.GateData
    name: GateData
    isExternal: true
    href: HUD.Map.MapData.GateData.html
  - name: (
  - name: )
- uid: System.Nullable{WorldCoordinate}
  commentId: T:System.Nullable{WorldCoordinate}
  parent: System
  definition: System.Nullable`1
  href: WorldCoordinate.html
  name: WorldCoordinate?
  nameWithType: WorldCoordinate?
  fullName: WorldCoordinate?
  spec.csharp:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
  spec.vb:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{MoreSlugcats.PersistentObjectTracker}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.PersistentObjectTracker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PersistentObjectTracker>
  nameWithType: List<PersistentObjectTracker>
  fullName: System.Collections.Generic.List<MoreSlugcats.PersistentObjectTracker>
  nameWithType.vb: List(Of PersistentObjectTracker)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.PersistentObjectTracker)
  name.vb: List(Of PersistentObjectTracker)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.PersistentObjectTracker
    name: PersistentObjectTracker
    isExternal: true
    href: MoreSlugcats.PersistentObjectTracker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.PersistentObjectTracker
    name: PersistentObjectTracker
    isExternal: true
    href: MoreSlugcats.PersistentObjectTracker.html
  - name: )
- uid: HUD.Map.MapType
  commentId: T:HUD.Map.MapType
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map.MapType
  nameWithType: Map.MapType
  fullName: HUD.Map.MapType
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapType
    name: MapType
    isExternal: true
    href: HUD.Map.MapType.html
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapType
    name: MapType
    isExternal: true
    href: HUD.Map.MapType.html
- uid: System.Collections.Generic.List{Watcher.WarpPoint.WarpPointData}
  commentId: T:System.Collections.Generic.List{Watcher.WarpPoint.WarpPointData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WarpPoint.WarpPointData>
  nameWithType: List<WarpPoint.WarpPointData>
  fullName: System.Collections.Generic.List<Watcher.WarpPoint.WarpPointData>
  nameWithType.vb: List(Of WarpPoint.WarpPointData)
  fullName.vb: System.Collections.Generic.List(Of Watcher.WarpPoint.WarpPointData)
  name.vb: List(Of WarpPoint.WarpPointData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
  - name: )
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: HUD.Map.MapData.#ctor*
  commentId: Overload:HUD.Map.MapData.#ctor
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData__ctor_World_RainWorld_
  name: MapData
  nameWithType: Map.MapData.MapData
  fullName: HUD.Map.MapData.MapData
  nameWithType.vb: Map.MapData.New
  fullName.vb: HUD.Map.MapData.New
  name.vb: New
- uid: Global.RainWorld
  commentId: T:Global.RainWorld
  isExternal: true
  href: RainWorld.html
  name: RainWorld
  nameWithType: RainWorld
  fullName: RainWorld
- uid: HUD.Map.MapData
  commentId: T:HUD.Map.MapData
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map.MapData
  nameWithType: Map.MapData
  fullName: HUD.Map.MapData
  spec.csharp:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapData
    name: MapData
    isExternal: true
    href: HUD.Map.MapData.html
  spec.vb:
  - uid: HUD.Map
    name: Map
    isExternal: true
    href: HUD.Map.html
  - name: .
  - uid: HUD.Map.MapData
    name: MapData
    isExternal: true
    href: HUD.Map.MapData.html
- uid: HUD.Map.MapData.NameOfRoom*
  commentId: Overload:HUD.Map.MapData.NameOfRoom
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_NameOfRoom_System_Int32_
  name: NameOfRoom
  nameWithType: Map.MapData.NameOfRoom
  fullName: HUD.Map.MapData.NameOfRoom
- uid: HUD.Map.MapData.PositionOfRoom*
  commentId: Overload:HUD.Map.MapData.PositionOfRoom
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_PositionOfRoom_System_Int32_
  name: PositionOfRoom
  nameWithType: Map.MapData.PositionOfRoom
  fullName: HUD.Map.MapData.PositionOfRoom
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: HUD.Map.MapData.SizeOfRoom*
  commentId: Overload:HUD.Map.MapData.SizeOfRoom
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_SizeOfRoom_System_Int32_
  name: SizeOfRoom
  nameWithType: Map.MapData.SizeOfRoom
  fullName: HUD.Map.MapData.SizeOfRoom
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: HUD.Map.MapData.LayerOfRoom*
  commentId: Overload:HUD.Map.MapData.LayerOfRoom
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_LayerOfRoom_System_Int32_
  name: LayerOfRoom
  nameWithType: Map.MapData.LayerOfRoom
  fullName: HUD.Map.MapData.LayerOfRoom
- uid: HUD.Map.MapData.KarmaOfGate*
  commentId: Overload:HUD.Map.MapData.KarmaOfGate
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_KarmaOfGate_PlayerProgression_World_System_String_
  name: KarmaOfGate
  nameWithType: Map.MapData.KarmaOfGate
  fullName: HUD.Map.MapData.KarmaOfGate
- uid: Global.PlayerProgression
  commentId: T:Global.PlayerProgression
  isExternal: true
  href: PlayerProgression.html
  name: PlayerProgression
  nameWithType: PlayerProgression
  fullName: PlayerProgression
- uid: Global.RegionGate.GateRequirement
  commentId: T:Global.RegionGate.GateRequirement
  isExternal: true
  href: RegionGate.html
  name: RegionGate.GateRequirement
  nameWithType: RegionGate.GateRequirement
  fullName: RegionGate.GateRequirement
  spec.csharp:
  - uid: Global.RegionGate
    name: RegionGate
    isExternal: true
    href: RegionGate.html
  - name: .
  - uid: Global.RegionGate.GateRequirement
    name: GateRequirement
    isExternal: true
    href: RegionGate.GateRequirement.html
  spec.vb:
  - uid: Global.RegionGate
    name: RegionGate
    isExternal: true
    href: RegionGate.html
  - name: .
  - uid: Global.RegionGate.GateRequirement
    name: GateRequirement
    isExternal: true
    href: RegionGate.GateRequirement.html
- uid: HUD.Map.MapData.ShelterMarkerPosOfRoom*
  commentId: Overload:HUD.Map.MapData.ShelterMarkerPosOfRoom
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_ShelterMarkerPosOfRoom_System_Int32_
  name: ShelterMarkerPosOfRoom
  nameWithType: Map.MapData.ShelterMarkerPosOfRoom
  fullName: HUD.Map.MapData.ShelterMarkerPosOfRoom
- uid: HUD.Map.MapData.UpdateData*
  commentId: Overload:HUD.Map.MapData.UpdateData
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_UpdateData_World_System_Int32_System_Int32_System_Nullable_WorldCoordinate__System_Boolean_
  name: UpdateData
  nameWithType: Map.MapData.UpdateData
  fullName: HUD.Map.MapData.UpdateData
- uid: HUD.Map.MapData.InitWarpData*
  commentId: Overload:HUD.Map.MapData.InitWarpData
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_InitWarpData_SaveState_
  name: InitWarpData
  nameWithType: Map.MapData.InitWarpData
  fullName: HUD.Map.MapData.InitWarpData
- uid: Global.SaveState
  commentId: T:Global.SaveState
  isExternal: true
  href: SaveState.html
  name: SaveState
  nameWithType: SaveState
  fullName: SaveState
- uid: HUD.Map.MapData.AddConnectionsFromWarpString*
  commentId: Overload:HUD.Map.MapData.AddConnectionsFromWarpString
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_AddConnectionsFromWarpString_System_Collections_Generic_KeyValuePair_System_String_System_String__
  name: AddConnectionsFromWarpString
  nameWithType: Map.MapData.AddConnectionsFromWarpString
  fullName: HUD.Map.MapData.AddConnectionsFromWarpString
- uid: System.Collections.Generic.KeyValuePair{System.String,System.String}
  commentId: T:System.Collections.Generic.KeyValuePair{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<string, string>
  nameWithType: KeyValuePair<string, string>
  fullName: System.Collections.Generic.KeyValuePair<string, string>
  nameWithType.vb: KeyValuePair(Of String, String)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of String, String)
  name.vb: KeyValuePair(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.KeyValuePair`2
  commentId: T:System.Collections.Generic.KeyValuePair`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  name: KeyValuePair<TKey, TValue>
  nameWithType: KeyValuePair<TKey, TValue>
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  nameWithType.vb: KeyValuePair(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  name.vb: KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: HUD.Map.MapData.UpdateWarpData*
  commentId: Overload:HUD.Map.MapData.UpdateWarpData
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_UpdateWarpData
  name: UpdateWarpData
  nameWithType: Map.MapData.UpdateWarpData
  fullName: HUD.Map.MapData.UpdateWarpData
- uid: HUD.Map.MapData.ResetWarpMapToCenter*
  commentId: Overload:HUD.Map.MapData.ResetWarpMapToCenter
  isExternal: true
  href: HUD.Map.MapData.html#HUD_Map_MapData_ResetWarpMapToCenter
  name: ResetWarpMapToCenter
  nameWithType: Map.MapData.ResetWarpMapToCenter
  fullName: HUD.Map.MapData.ResetWarpMapToCenter
