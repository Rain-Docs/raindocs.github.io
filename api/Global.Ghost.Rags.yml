### YamlMime:ManagedReference
items:
- uid: Global.Ghost.Rags
  commentId: T:Global.Ghost.Rags
  id: Ghost.Rags
  parent: Global
  children:
  - Global.Ghost.Rags.#ctor(Ghost,System.Int32)
  - Global.Ghost.Rags.AttachPos(System.Int32,System.Single)
  - Global.Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.Ghost.Rags.Reset(UnityEngine.Vector2)
  - Global.Ghost.Rags.Update
  - Global.Ghost.Rags.firstSprite
  - Global.Ghost.Rags.ghost
  - Global.Ghost.Rags.segments
  - Global.Ghost.Rags.totalSprites
  langs:
  - csharp
  - vb
  name: Ghost.Rags
  nameWithType: Ghost.Rags
  fullName: Ghost.Rags
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Ghost.Rags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Ghost.Rags
    content.vb: Public Class Ghost.Rags
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Ghost.Rags.ghost
  commentId: F:Global.Ghost.Rags.ghost
  id: ghost
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: ghost
  nameWithType: Ghost.Rags.ghost
  fullName: Ghost.Rags.ghost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Ghost.Rags.ghost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Ghost ghost
    return:
      type: Global.Ghost
    content.vb: Public ghost As Ghost
- uid: Global.Ghost.Rags.firstSprite
  commentId: F:Global.Ghost.Rags.firstSprite
  id: firstSprite
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: firstSprite
  nameWithType: Ghost.Rags.firstSprite
  fullName: Ghost.Rags.firstSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Ghost.Rags.firstSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstSprite
    return:
      type: System.Int32
    content.vb: Public firstSprite As Integer
- uid: Global.Ghost.Rags.totalSprites
  commentId: F:Global.Ghost.Rags.totalSprites
  id: totalSprites
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: totalSprites
  nameWithType: Ghost.Rags.totalSprites
  fullName: Ghost.Rags.totalSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Ghost.Rags.totalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int totalSprites
    return:
      type: System.Int32
    content.vb: Public totalSprites As Integer
- uid: Global.Ghost.Rags.segments
  commentId: F:Global.Ghost.Rags.segments
  id: segments
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: Ghost.Rags.segments
  fullName: Ghost.Rags.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Ghost.Rags.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[][,] segments
    return:
      type: UnityEngine.Vector2[,][]
    content.vb: Public segments As Vector2()(,)
- uid: Global.Ghost.Rags.#ctor(Ghost,System.Int32)
  commentId: M:Global.Ghost.Rags.#ctor(Ghost,System.Int32)
  id: '#ctor(Ghost,System.Int32)'
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: Rags(Ghost, int)
  nameWithType: Ghost.Rags.Rags(Ghost, int)
  fullName: Ghost.Rags.Rags(Ghost, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Ghost.Rags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Rags(Ghost ghost, int firstSprite)
    parameters:
    - id: ghost
      type: Global.Ghost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghost</parameter>
            <parameter>M:Ghost.Rags.#ctor(Ghost,System.Int32)</parameter>
          </include>
        </markup>
    - id: firstSprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSprite</parameter>
            <parameter>M:Ghost.Rags.#ctor(Ghost,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ghost As Ghost, firstSprite As Integer)
  overload: Global.Ghost.Rags.#ctor*
  nameWithType.vb: Ghost.Rags.New(Ghost, Integer)
  fullName.vb: Ghost.Rags.New(Ghost, Integer)
  name.vb: New(Ghost, Integer)
- uid: Global.Ghost.Rags.Reset(UnityEngine.Vector2)
  commentId: M:Global.Ghost.Rags.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: Ghost.Rags.Reset(Vector2)
  fullName: Ghost.Rags.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Ghost.Rags.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset(Vector2 resetPos)
    parameters:
    - id: resetPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resetPos</parameter>
            <parameter>M:Ghost.Rags.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Reset(resetPos As Vector2)
  overload: Global.Ghost.Rags.Reset*
- uid: Global.Ghost.Rags.Update
  commentId: M:Global.Ghost.Rags.Update
  id: Update
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Ghost.Rags.Update()
  fullName: Ghost.Rags.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Ghost.Rags.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Ghost.Rags.Update*
- uid: Global.Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Ghost.Rags.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.Ghost.Rags.InitiateSprites*
- uid: Global.Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.Ghost.Rags.DrawSprites*
  nameWithType.vb: Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Ghost.Rags.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.Ghost.Rags.AttachPos(System.Int32,System.Single)
  commentId: M:Global.Ghost.Rags.AttachPos(System.Int32,System.Single)
  id: AttachPos(System.Int32,System.Single)
  parent: Global.Ghost.Rags
  langs:
  - csharp
  - vb
  name: AttachPos(int, float)
  nameWithType: Ghost.Rags.AttachPos(int, float)
  fullName: Ghost.Rags.AttachPos(int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Ghost.Rags.AttachPos(System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 AttachPos(int rag, float timeStacker)
    parameters:
    - id: rag
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rag</parameter>
            <parameter>M:Ghost.Rags.AttachPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Ghost.Rags.AttachPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Ghost.Rags.AttachPos(System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function AttachPos(rag As Integer, timeStacker As Single) As Vector2
  overload: Global.Ghost.Rags.AttachPos*
  nameWithType.vb: Ghost.Rags.AttachPos(Integer, Single)
  fullName.vb: Ghost.Rags.AttachPos(Integer, Single)
  name.vb: AttachPos(Integer, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Ghost
  commentId: T:Global.Ghost
  isExternal: true
  href: Ghost.html
  name: Ghost
  nameWithType: Ghost
  fullName: Ghost
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2[,][]
  isExternal: true
  name: Vector2[][,]
  nameWithType: Vector2[][,]
  fullName: UnityEngine.Vector2[][,]
  nameWithType.vb: Vector2()(,)
  fullName.vb: UnityEngine.Vector2()(,)
  name.vb: Vector2()(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: (
  - name: ','
  - name: )
- uid: Global.Ghost.Rags.#ctor*
  commentId: Overload:Global.Ghost.Rags.#ctor
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags__ctor_Ghost_System_Int32_
  name: Rags
  nameWithType: Ghost.Rags.Rags
  fullName: Ghost.Rags.Rags
  nameWithType.vb: Ghost.Rags.New
  fullName.vb: Ghost.Rags.New
  name.vb: New
- uid: Global.Ghost.Rags.Reset*
  commentId: Overload:Global.Ghost.Rags.Reset
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: Ghost.Rags.Reset
  fullName: Ghost.Rags.Reset
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.Ghost.Rags.Update*
  commentId: Overload:Global.Ghost.Rags.Update
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags_Update
  name: Update
  nameWithType: Ghost.Rags.Update
  fullName: Ghost.Rags.Update
- uid: Global.Ghost.Rags.InitiateSprites*
  commentId: Overload:Global.Ghost.Rags.InitiateSprites
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: Ghost.Rags.InitiateSprites
  fullName: Ghost.Rags.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Ghost.Rags.DrawSprites*
  commentId: Overload:Global.Ghost.Rags.DrawSprites
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: Ghost.Rags.DrawSprites
  fullName: Ghost.Rags.DrawSprites
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Ghost.Rags.AttachPos*
  commentId: Overload:Global.Ghost.Rags.AttachPos
  isExternal: true
  href: Global.Ghost.Rags.html#Ghost_Rags_AttachPos_System_Int32_System_Single_
  name: AttachPos
  nameWithType: Ghost.Rags.AttachPos
  fullName: Ghost.Rags.AttachPos
