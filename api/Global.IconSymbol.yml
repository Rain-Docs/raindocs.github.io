### YamlMime:ManagedReference
items:
- uid: Global.IconSymbol
  commentId: T:Global.IconSymbol
  id: IconSymbol
  parent: Global
  children:
  - Global.IconSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  - Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  - Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  - Global.IconSymbol.RemoveSprites
  - Global.IconSymbol.Show(System.Boolean)
  - Global.IconSymbol.Update
  - Global.IconSymbol.graphWidth
  - Global.IconSymbol.iconData
  - Global.IconSymbol.lastShowFlash
  - Global.IconSymbol.myColor
  - Global.IconSymbol.shadowSprite1
  - Global.IconSymbol.shadowSprite2
  - Global.IconSymbol.showFlash
  - Global.IconSymbol.spriteName
  - Global.IconSymbol.symbolSprite
  langs:
  - csharp
  - vb
  name: IconSymbol
  nameWithType: IconSymbol
  fullName: IconSymbol
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:IconSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class IconSymbol
    content.vb: Public MustInherit Class IconSymbol
  inheritance:
  - System.Object
  derivedClasses:
  - Global.CreatureSymbol
  - Global.ItemSymbol
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.IconSymbol.iconData
  commentId: F:Global.IconSymbol.iconData
  id: iconData
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: iconData
  nameWithType: IconSymbol.iconData
  fullName: IconSymbol.iconData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.iconData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IconSymbol.IconSymbolData iconData
    return:
      type: Global.IconSymbol.IconSymbolData
    content.vb: Public iconData As IconSymbol.IconSymbolData
- uid: Global.IconSymbol.symbolSprite
  commentId: F:Global.IconSymbol.symbolSprite
  id: symbolSprite
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: symbolSprite
  nameWithType: IconSymbol.symbolSprite
  fullName: IconSymbol.symbolSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.symbolSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite symbolSprite
    return:
      type: Global.FSprite
    content.vb: Public symbolSprite As FSprite
- uid: Global.IconSymbol.shadowSprite1
  commentId: F:Global.IconSymbol.shadowSprite1
  id: shadowSprite1
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: shadowSprite1
  nameWithType: IconSymbol.shadowSprite1
  fullName: IconSymbol.shadowSprite1
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.shadowSprite1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite shadowSprite1
    return:
      type: Global.FSprite
    content.vb: Public shadowSprite1 As FSprite
- uid: Global.IconSymbol.shadowSprite2
  commentId: F:Global.IconSymbol.shadowSprite2
  id: shadowSprite2
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: shadowSprite2
  nameWithType: IconSymbol.shadowSprite2
  fullName: IconSymbol.shadowSprite2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.shadowSprite2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite shadowSprite2
    return:
      type: Global.FSprite
    content.vb: Public shadowSprite2 As FSprite
- uid: Global.IconSymbol.myColor
  commentId: F:Global.IconSymbol.myColor
  id: myColor
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: myColor
  nameWithType: IconSymbol.myColor
  fullName: IconSymbol.myColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.myColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color myColor
    return:
      type: UnityEngine.Color
    content.vb: Public myColor As Color
- uid: Global.IconSymbol.graphWidth
  commentId: F:Global.IconSymbol.graphWidth
  id: graphWidth
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: graphWidth
  nameWithType: IconSymbol.graphWidth
  fullName: IconSymbol.graphWidth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.graphWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float graphWidth
    return:
      type: System.Single
    content.vb: Public graphWidth As Single
- uid: Global.IconSymbol.showFlash
  commentId: F:Global.IconSymbol.showFlash
  id: showFlash
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: showFlash
  nameWithType: IconSymbol.showFlash
  fullName: IconSymbol.showFlash
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.showFlash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float showFlash
    return:
      type: System.Single
    content.vb: Public showFlash As Single
- uid: Global.IconSymbol.lastShowFlash
  commentId: F:Global.IconSymbol.lastShowFlash
  id: lastShowFlash
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: lastShowFlash
  nameWithType: IconSymbol.lastShowFlash
  fullName: IconSymbol.lastShowFlash
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.lastShowFlash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastShowFlash
    return:
      type: System.Single
    content.vb: Public lastShowFlash As Single
- uid: Global.IconSymbol.spriteName
  commentId: F:Global.IconSymbol.spriteName
  id: spriteName
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: spriteName
  nameWithType: IconSymbol.spriteName
  fullName: IconSymbol.spriteName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:IconSymbol.spriteName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string spriteName
    return:
      type: System.String
    content.vb: Public spriteName As String
- uid: Global.IconSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.IconSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  id: '#ctor(IconSymbol.IconSymbolData,FContainer)'
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: IconSymbol(IconSymbolData, FContainer)
  nameWithType: IconSymbol.IconSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: IconSymbol.IconSymbol(IconSymbol.IconSymbolData, FContainer)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>IconSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IconSymbol(IconSymbol.IconSymbolData iconData, FContainer container)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:IconSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:IconSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(iconData As IconSymbol.IconSymbolData, container As FContainer)
  overload: Global.IconSymbol.#ctor*
  nameWithType.vb: IconSymbol.New(IconSymbol.IconSymbolData, FContainer)
  fullName.vb: IconSymbol.New(IconSymbol.IconSymbolData, FContainer)
  name.vb: New(IconSymbolData, FContainer)
- uid: Global.IconSymbol.Update
  commentId: M:Global.IconSymbol.Update
  id: Update
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: IconSymbol.Update()
  fullName: IconSymbol.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.IconSymbol.Update*
- uid: Global.IconSymbol.Show(System.Boolean)
  commentId: M:Global.IconSymbol.Show(System.Boolean)
  id: Show(System.Boolean)
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: Show(bool)
  nameWithType: IconSymbol.Show(bool)
  fullName: IconSymbol.Show(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.Show(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Show(bool showShadowSprites)
    parameters:
    - id: showShadowSprites
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>showShadowSprites</parameter>
            <parameter>M:IconSymbol.Show(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Show(showShadowSprites As Boolean)
  overload: Global.IconSymbol.Show*
  nameWithType.vb: IconSymbol.Show(Boolean)
  fullName.vb: IconSymbol.Show(Boolean)
  name.vb: Show(Boolean)
- uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  commentId: M:Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  id: Draw(System.Single,UnityEngine.Vector2)
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: Draw(float, Vector2)
  nameWithType: IconSymbol.Draw(float, Vector2)
  fullName: IconSymbol.Draw(float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.Draw(System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Draw(float timeStacker, Vector2 drawPos)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:IconSymbol.Draw(System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: drawPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>drawPos</parameter>
            <parameter>M:IconSymbol.Draw(System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Draw(timeStacker As Single, drawPos As Vector2)
  overload: Global.IconSymbol.Draw*
  nameWithType.vb: IconSymbol.Draw(Single, Vector2)
  fullName.vb: IconSymbol.Draw(Single, UnityEngine.Vector2)
  name.vb: Draw(Single, Vector2)
- uid: Global.IconSymbol.RemoveSprites
  commentId: M:Global.IconSymbol.RemoveSprites
  id: RemoveSprites
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: RemoveSprites()
  nameWithType: IconSymbol.RemoveSprites()
  fullName: IconSymbol.RemoveSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.RemoveSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveSprites()
    content.vb: Public Sub RemoveSprites()
  overload: Global.IconSymbol.RemoveSprites*
- uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  id: CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  parent: Global.IconSymbol
  langs:
  - csharp
  - vb
  name: CreateIconSymbol(IconSymbolData, FContainer)
  nameWithType: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IconSymbol CreateIconSymbol(IconSymbol.IconSymbolData iconData, FContainer container)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    return:
      type: Global.IconSymbol
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CreateIconSymbol(iconData As IconSymbol.IconSymbolData, container As FContainer) As IconSymbol
  overload: Global.IconSymbol.CreateIconSymbol*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.IconSymbol.IconSymbolData
  commentId: T:Global.IconSymbol.IconSymbolData
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol.IconSymbolData
  nameWithType: IconSymbol.IconSymbolData
  fullName: IconSymbol.IconSymbolData
  spec.csharp:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  spec.vb:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.IconSymbol.#ctor*
  commentId: Overload:Global.IconSymbol.#ctor
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol__ctor_IconSymbol_IconSymbolData_FContainer_
  name: IconSymbol
  nameWithType: IconSymbol.IconSymbol
  fullName: IconSymbol.IconSymbol
  nameWithType.vb: IconSymbol.New
  fullName.vb: IconSymbol.New
  name.vb: New
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.IconSymbol.Update*
  commentId: Overload:Global.IconSymbol.Update
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Update
  name: Update
  nameWithType: IconSymbol.Update
  fullName: IconSymbol.Update
- uid: Global.IconSymbol.Show*
  commentId: Overload:Global.IconSymbol.Show
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  name: Show
  nameWithType: IconSymbol.Show
  fullName: IconSymbol.Show
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.IconSymbol.Draw*
  commentId: Overload:Global.IconSymbol.Draw
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  name: Draw
  nameWithType: IconSymbol.Draw
  fullName: IconSymbol.Draw
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.IconSymbol.RemoveSprites*
  commentId: Overload:Global.IconSymbol.RemoveSprites
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  name: RemoveSprites
  nameWithType: IconSymbol.RemoveSprites
  fullName: IconSymbol.RemoveSprites
- uid: Global.IconSymbol.CreateIconSymbol*
  commentId: Overload:Global.IconSymbol.CreateIconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  name: CreateIconSymbol
  nameWithType: IconSymbol.CreateIconSymbol
  fullName: IconSymbol.CreateIconSymbol
- uid: Global.IconSymbol
  commentId: T:Global.IconSymbol
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol
  nameWithType: IconSymbol
  fullName: IconSymbol
