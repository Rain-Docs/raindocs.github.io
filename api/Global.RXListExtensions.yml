### YamlMime:ManagedReference
items:
- uid: Global.RXListExtensions
  commentId: T:Global.RXListExtensions
  id: RXListExtensions
  parent: Global
  children:
  - Global.RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})
  - Global.RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})
  - Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0})
  - Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)
  - Global.RXListExtensions.Pop``1(System.Collections.Generic.List{``0})
  - Global.RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})
  langs:
  - csharp
  - vb
  name: RXListExtensions
  nameWithType: RXListExtensions
  fullName: RXListExtensions
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXListExtensions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class RXListExtensions
    content.vb: Public Module RXListExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0})
  commentId: M:Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0})
  id: Log``1(System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: Log<T>(List<T>)
  nameWithType: RXListExtensions.Log<T>(List<T>)
  fullName: RXListExtensions.Log<T>(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Log<T>(this List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Log(Of T)(list As List(Of T))
  overload: Global.RXListExtensions.Log*
  nameWithType.vb: RXListExtensions.Log(Of T)(List(Of T))
  fullName.vb: RXListExtensions.Log(Of T)(System.Collections.Generic.List(Of T))
  name.vb: Log(Of T)(List(Of T))
- uid: Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)
  commentId: M:Global.RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)
  id: Log``1(System.Collections.Generic.List{``0},System.String)
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: Log<T>(List<T>, string)
  nameWithType: RXListExtensions.Log<T>(List<T>, string)
  fullName: RXListExtensions.Log<T>(System.Collections.Generic.List<T>, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Log<T>(this List<T> list, string name)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.Log``1(System.Collections.Generic.List{``0},System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Log(Of T)(list As List(Of T), name As String)
  overload: Global.RXListExtensions.Log*
  nameWithType.vb: RXListExtensions.Log(Of T)(List(Of T), String)
  fullName.vb: RXListExtensions.Log(Of T)(System.Collections.Generic.List(Of T), String)
  name.vb: Log(Of T)(List(Of T), String)
- uid: Global.RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})
  commentId: M:Global.RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})
  id: Unshift``1(System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: Unshift<T>(List<T>)
  nameWithType: RXListExtensions.Unshift<T>(List<T>)
  fullName: RXListExtensions.Unshift<T>(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static T Unshift<T>(this List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    return:
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXListExtensions.Unshift``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Unshift(Of T)(list As List(Of T)) As T
  overload: Global.RXListExtensions.Unshift*
  nameWithType.vb: RXListExtensions.Unshift(Of T)(List(Of T))
  fullName.vb: RXListExtensions.Unshift(Of T)(System.Collections.Generic.List(Of T))
  name.vb: Unshift(Of T)(List(Of T))
- uid: Global.RXListExtensions.Pop``1(System.Collections.Generic.List{``0})
  commentId: M:Global.RXListExtensions.Pop``1(System.Collections.Generic.List{``0})
  id: Pop``1(System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: Pop<T>(List<T>)
  nameWithType: RXListExtensions.Pop<T>(List<T>)
  fullName: RXListExtensions.Pop<T>(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.Pop``1(System.Collections.Generic.List{``0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static T Pop<T>(this List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.Pop``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.Pop``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    return:
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXListExtensions.Pop``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Pop(Of T)(list As List(Of T)) As T
  overload: Global.RXListExtensions.Pop*
  nameWithType.vb: RXListExtensions.Pop(Of T)(List(Of T))
  fullName.vb: RXListExtensions.Pop(Of T)(System.Collections.Generic.List(Of T))
  name.vb: Pop(Of T)(List(Of T))
- uid: Global.RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})
  commentId: M:Global.RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})
  id: GetLastObject``1(System.Collections.Generic.List{``0})
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: GetLastObject<T>(List<T>)
  nameWithType: RXListExtensions.GetLastObject<T>(List<T>)
  fullName: RXListExtensions.GetLastObject<T>(System.Collections.Generic.List<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static T GetLastObject<T>(this List<T> list)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    return:
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXListExtensions.GetLastObject``1(System.Collections.Generic.List{``0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetLastObject(Of T)(list As List(Of T)) As T
  overload: Global.RXListExtensions.GetLastObject*
  nameWithType.vb: RXListExtensions.GetLastObject(Of T)(List(Of T))
  fullName.vb: RXListExtensions.GetLastObject(Of T)(System.Collections.Generic.List(Of T))
  name.vb: GetLastObject(Of T)(List(Of T))
- uid: Global.RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})
  commentId: M:Global.RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})
  id: InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})
  isExtensionMethod: true
  parent: Global.RXListExtensions
  langs:
  - csharp
  - vb
  name: InsertionSort<T>(List<T>, Comparison<T>)
  nameWithType: RXListExtensions.InsertionSort<T>(List<T>, Comparison<T>)
  fullName: RXListExtensions.InsertionSort<T>(System.Collections.Generic.List<T>, System.Comparison<T>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void InsertionSort<T>(this List<T> list, Comparison<T> comparison)
    parameters:
    - id: list
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>list</parameter>
            <parameter>M:RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})</parameter>
          </include>
        </markup>
    - id: comparison
      type: System.Comparison{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>comparison</parameter>
            <parameter>M:RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:RXListExtensions.InsertionSort``1(System.Collections.Generic.List{``0},System.Comparison{``0})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub InsertionSort(Of T)(list As List(Of T), comparison As Comparison(Of T))
  overload: Global.RXListExtensions.InsertionSort*
  nameWithType.vb: RXListExtensions.InsertionSort(Of T)(List(Of T), Comparison(Of T))
  fullName.vb: RXListExtensions.InsertionSort(Of T)(System.Collections.Generic.List(Of T), System.Comparison(Of T))
  name.vb: InsertionSort(Of T)(List(Of T), Comparison(Of T))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXListExtensions.Log*
  commentId: Overload:Global.RXListExtensions.Log
  isExternal: true
  href: Global.RXListExtensions.html#RXListExtensions_Log__1_System_Collections_Generic_List___0__
  name: Log
  nameWithType: RXListExtensions.Log
  fullName: RXListExtensions.Log
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.RXListExtensions.Unshift*
  commentId: Overload:Global.RXListExtensions.Unshift
  isExternal: true
  href: Global.RXListExtensions.html#RXListExtensions_Unshift__1_System_Collections_Generic_List___0__
  name: Unshift
  nameWithType: RXListExtensions.Unshift
  fullName: RXListExtensions.Unshift
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.RXListExtensions.Pop*
  commentId: Overload:Global.RXListExtensions.Pop
  isExternal: true
  href: Global.RXListExtensions.html#RXListExtensions_Pop__1_System_Collections_Generic_List___0__
  name: Pop
  nameWithType: RXListExtensions.Pop
  fullName: RXListExtensions.Pop
- uid: Global.RXListExtensions.GetLastObject*
  commentId: Overload:Global.RXListExtensions.GetLastObject
  isExternal: true
  href: Global.RXListExtensions.html#RXListExtensions_GetLastObject__1_System_Collections_Generic_List___0__
  name: GetLastObject
  nameWithType: RXListExtensions.GetLastObject
  fullName: RXListExtensions.GetLastObject
- uid: Global.RXListExtensions.InsertionSort*
  commentId: Overload:Global.RXListExtensions.InsertionSort
  isExternal: true
  href: Global.RXListExtensions.html#RXListExtensions_InsertionSort__1_System_Collections_Generic_List___0__System_Comparison___0__
  name: InsertionSort
  nameWithType: RXListExtensions.InsertionSort
  fullName: RXListExtensions.InsertionSort
- uid: System.Comparison{{T}}
  commentId: T:System.Comparison{``0}
  parent: System
  definition: System.Comparison`1
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Comparison`1
  commentId: T:System.Comparison`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  name: Comparison<T>
  nameWithType: Comparison<T>
  fullName: System.Comparison<T>
  nameWithType.vb: Comparison(Of T)
  fullName.vb: System.Comparison(Of T)
  name.vb: Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.comparison-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
