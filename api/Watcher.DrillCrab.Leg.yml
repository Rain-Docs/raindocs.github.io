### YamlMime:ManagedReference
items:
- uid: Watcher.DrillCrab.Leg
  commentId: T:Watcher.DrillCrab.Leg
  id: DrillCrab.Leg
  parent: Watcher
  children:
  - Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)
  - Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  - Watcher.DrillCrab.Leg.Dead
  - Watcher.DrillCrab.Leg.Health
  - Watcher.DrillCrab.Leg.Limp
  - Watcher.DrillCrab.Leg.ResetPhysics
  - Watcher.DrillCrab.Leg.Retract
  - Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)
  - Watcher.DrillCrab.Leg.StartStep
  - Watcher.DrillCrab.Leg.Supporting
  - Watcher.DrillCrab.Leg.Tip
  - Watcher.DrillCrab.Leg.Update
  - Watcher.DrillCrab.Leg.WantsToStep
  - Watcher.DrillCrab.Leg.anchor
  - Watcher.DrillCrab.Leg.lastAnchor
  - Watcher.DrillCrab.Leg.mode
  - Watcher.DrillCrab.Leg.segments
  - Watcher.DrillCrab.Leg.targetPos
  langs:
  - csharp
  - vb
  name: DrillCrab.Leg
  nameWithType: DrillCrab.Leg
  fullName: Watcher.DrillCrab.Leg
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.DrillCrab.Leg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class DrillCrab.Leg
    content.vb: Public Class DrillCrab.Leg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.DrillCrab.Leg.segments
  commentId: F:Watcher.DrillCrab.Leg.segments
  id: segments
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: DrillCrab.Leg.segments
  fullName: Watcher.DrillCrab.Leg.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.DrillCrab.Leg.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly DrillCrab.Leg.Segment[] segments
    return:
      type: Watcher.DrillCrab.Leg.Segment[]
    content.vb: Public ReadOnly segments As DrillCrab.Leg.Segment()
- uid: Watcher.DrillCrab.Leg.targetPos
  commentId: F:Watcher.DrillCrab.Leg.targetPos
  id: targetPos
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: targetPos
  nameWithType: DrillCrab.Leg.targetPos
  fullName: Watcher.DrillCrab.Leg.targetPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.DrillCrab.Leg.targetPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 targetPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public targetPos As Vector2
- uid: Watcher.DrillCrab.Leg.mode
  commentId: F:Watcher.DrillCrab.Leg.mode
  id: mode
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: mode
  nameWithType: DrillCrab.Leg.mode
  fullName: Watcher.DrillCrab.Leg.mode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.DrillCrab.Leg.mode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DrillCrab.Leg.Mode mode
    return:
      type: Watcher.DrillCrab.Leg.Mode
    content.vb: Public mode As DrillCrab.Leg.Mode
- uid: Watcher.DrillCrab.Leg.anchor
  commentId: F:Watcher.DrillCrab.Leg.anchor
  id: anchor
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: anchor
  nameWithType: DrillCrab.Leg.anchor
  fullName: Watcher.DrillCrab.Leg.anchor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.DrillCrab.Leg.anchor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 anchor
    return:
      type: UnityEngine.Vector2
    content.vb: Public anchor As Vector2
- uid: Watcher.DrillCrab.Leg.lastAnchor
  commentId: F:Watcher.DrillCrab.Leg.lastAnchor
  id: lastAnchor
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: lastAnchor
  nameWithType: DrillCrab.Leg.lastAnchor
  fullName: Watcher.DrillCrab.Leg.lastAnchor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.DrillCrab.Leg.lastAnchor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastAnchor
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastAnchor As Vector2
- uid: Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)
  commentId: M:Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)
  id: '#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)'
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Leg(DrillCrab, float, float, int)
  nameWithType: DrillCrab.Leg.Leg(DrillCrab, float, float, int)
  fullName: Watcher.DrillCrab.Leg.Leg(Watcher.DrillCrab, float, float, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.DrillCrab.Leg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Leg(DrillCrab crab, float side, float lengthFac, int index)
    parameters:
    - id: crab
      type: Watcher.DrillCrab
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crab</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: side
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: lengthFac
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lengthFac</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.#ctor(Watcher.DrillCrab,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(crab As DrillCrab, side As Single, lengthFac As Single, index As Integer)
  overload: Watcher.DrillCrab.Leg.#ctor*
  nameWithType.vb: DrillCrab.Leg.New(DrillCrab, Single, Single, Integer)
  fullName.vb: Watcher.DrillCrab.Leg.New(Watcher.DrillCrab, Single, Single, Integer)
  name.vb: New(DrillCrab, Single, Single, Integer)
- uid: Watcher.DrillCrab.Leg.ResetPhysics
  commentId: M:Watcher.DrillCrab.Leg.ResetPhysics
  id: ResetPhysics
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: ResetPhysics()
  nameWithType: DrillCrab.Leg.ResetPhysics()
  fullName: Watcher.DrillCrab.Leg.ResetPhysics()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.ResetPhysics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetPhysics()
    content.vb: Public Sub ResetPhysics()
  overload: Watcher.DrillCrab.Leg.ResetPhysics*
- uid: Watcher.DrillCrab.Leg.Update
  commentId: M:Watcher.DrillCrab.Leg.Update
  id: Update
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DrillCrab.Leg.Update()
  fullName: Watcher.DrillCrab.Leg.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.DrillCrab.Leg.Update*
- uid: Watcher.DrillCrab.Leg.Retract
  commentId: M:Watcher.DrillCrab.Leg.Retract
  id: Retract
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Retract()
  nameWithType: DrillCrab.Leg.Retract()
  fullName: Watcher.DrillCrab.Leg.Retract()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.Retract</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Retract()
    content.vb: Public Sub Retract()
  overload: Watcher.DrillCrab.Leg.Retract*
- uid: Watcher.DrillCrab.Leg.StartStep
  commentId: M:Watcher.DrillCrab.Leg.StartStep
  id: StartStep
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: StartStep()
  nameWithType: DrillCrab.Leg.StartStep()
  fullName: Watcher.DrillCrab.Leg.StartStep()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.StartStep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StartStep()
    content.vb: Public Sub StartStep()
  overload: Watcher.DrillCrab.Leg.StartStep*
- uid: Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)
  commentId: M:Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)
  id: SetTarget(UnityEngine.Vector2)
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: SetTarget(Vector2)
  nameWithType: DrillCrab.Leg.SetTarget(Vector2)
  fullName: Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetTarget(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.SetTarget(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetTarget(pos As Vector2)
  overload: Watcher.DrillCrab.Leg.SetTarget*
- uid: Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  id: ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: ApplyForce(Pos, Vector2)
  nameWithType: DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos, Vector2)
  fullName: Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyForce(PhysicalObject.Appendage.Pos pos, Vector2 momentum)
    parameters:
    - id: pos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: momentum
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>momentum</parameter>
            <parameter>M:Watcher.DrillCrab.Leg.ApplyForce(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyForce(pos As PhysicalObject.Appendage.Pos, momentum As Vector2)
  overload: Watcher.DrillCrab.Leg.ApplyForce*
- uid: Watcher.DrillCrab.Leg.Tip
  commentId: P:Watcher.DrillCrab.Leg.Tip
  id: Tip
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Tip
  nameWithType: DrillCrab.Leg.Tip
  fullName: Watcher.DrillCrab.Leg.Tip
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.Tip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DrillCrab.Leg.Segment Tip { get; }
    parameters: []
    return:
      type: Watcher.DrillCrab.Leg.Segment
    content.vb: Public ReadOnly Property Tip As DrillCrab.Leg.Segment
  overload: Watcher.DrillCrab.Leg.Tip*
- uid: Watcher.DrillCrab.Leg.Supporting
  commentId: P:Watcher.DrillCrab.Leg.Supporting
  id: Supporting
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Supporting
  nameWithType: DrillCrab.Leg.Supporting
  fullName: Watcher.DrillCrab.Leg.Supporting
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.Supporting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Supporting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Supporting As Boolean
  overload: Watcher.DrillCrab.Leg.Supporting*
- uid: Watcher.DrillCrab.Leg.Limp
  commentId: P:Watcher.DrillCrab.Leg.Limp
  id: Limp
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Limp
  nameWithType: DrillCrab.Leg.Limp
  fullName: Watcher.DrillCrab.Leg.Limp
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.Limp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Limp { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Limp As Boolean
  overload: Watcher.DrillCrab.Leg.Limp*
- uid: Watcher.DrillCrab.Leg.WantsToStep
  commentId: P:Watcher.DrillCrab.Leg.WantsToStep
  id: WantsToStep
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: WantsToStep
  nameWithType: DrillCrab.Leg.WantsToStep
  fullName: Watcher.DrillCrab.Leg.WantsToStep
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.WantsToStep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WantsToStep { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WantsToStep As Boolean
  overload: Watcher.DrillCrab.Leg.WantsToStep*
- uid: Watcher.DrillCrab.Leg.Health
  commentId: P:Watcher.DrillCrab.Leg.Health
  id: Health
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Health
  nameWithType: DrillCrab.Leg.Health
  fullName: Watcher.DrillCrab.Leg.Health
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.Health</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Health { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Health As Single
  overload: Watcher.DrillCrab.Leg.Health*
- uid: Watcher.DrillCrab.Leg.Dead
  commentId: P:Watcher.DrillCrab.Leg.Dead
  id: Dead
  parent: Watcher.DrillCrab.Leg
  langs:
  - csharp
  - vb
  name: Dead
  nameWithType: DrillCrab.Leg.Dead
  fullName: Watcher.DrillCrab.Leg.Dead
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.DrillCrab.Leg.Dead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Dead { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Dead As Boolean
  overload: Watcher.DrillCrab.Leg.Dead*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Watcher.DrillCrab.Leg.Segment[]
  isExternal: true
  href: Watcher.DrillCrab.Leg.Segment.html
  name: Segment[]
  nameWithType: DrillCrab.Leg.Segment[]
  fullName: Watcher.DrillCrab.Leg.Segment[]
  nameWithType.vb: DrillCrab.Leg.Segment()
  fullName.vb: Watcher.DrillCrab.Leg.Segment()
  name.vb: Segment()
  spec.csharp:
  - uid: Watcher.DrillCrab.Leg.Segment
    name: Segment
    isExternal: true
    href: Watcher.DrillCrab.Leg.Segment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Watcher.DrillCrab.Leg.Segment
    name: Segment
    isExternal: true
    href: Watcher.DrillCrab.Leg.Segment.html
  - name: (
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Watcher.DrillCrab.Leg.Mode
  commentId: T:Watcher.DrillCrab.Leg.Mode
  parent: Watcher
  isExternal: true
  href: Watcher.DrillCrab.html
  name: DrillCrab.Leg.Mode
  nameWithType: DrillCrab.Leg.Mode
  fullName: Watcher.DrillCrab.Leg.Mode
  spec.csharp:
  - uid: Watcher.DrillCrab
    name: DrillCrab
    isExternal: true
    href: Watcher.DrillCrab.html
  - name: .
  - uid: Watcher.DrillCrab.Leg
    name: Leg
    isExternal: true
    href: Watcher.DrillCrab.Leg.html
  - name: .
  - uid: Watcher.DrillCrab.Leg.Mode
    name: Mode
    isExternal: true
    href: Watcher.DrillCrab.Leg.Mode.html
  spec.vb:
  - uid: Watcher.DrillCrab
    name: DrillCrab
    isExternal: true
    href: Watcher.DrillCrab.html
  - name: .
  - uid: Watcher.DrillCrab.Leg
    name: Leg
    isExternal: true
    href: Watcher.DrillCrab.Leg.html
  - name: .
  - uid: Watcher.DrillCrab.Leg.Mode
    name: Mode
    isExternal: true
    href: Watcher.DrillCrab.Leg.Mode.html
- uid: Watcher.DrillCrab.Leg.#ctor*
  commentId: Overload:Watcher.DrillCrab.Leg.#ctor
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg__ctor_Watcher_DrillCrab_System_Single_System_Single_System_Int32_
  name: Leg
  nameWithType: DrillCrab.Leg.Leg
  fullName: Watcher.DrillCrab.Leg.Leg
  nameWithType.vb: DrillCrab.Leg.New
  fullName.vb: Watcher.DrillCrab.Leg.New
  name.vb: New
- uid: Watcher.DrillCrab
  commentId: T:Watcher.DrillCrab
  parent: Watcher
  isExternal: true
  href: Watcher.DrillCrab.html
  name: DrillCrab
  nameWithType: DrillCrab
  fullName: Watcher.DrillCrab
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Watcher.DrillCrab.Leg.ResetPhysics*
  commentId: Overload:Watcher.DrillCrab.Leg.ResetPhysics
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_ResetPhysics
  name: ResetPhysics
  nameWithType: DrillCrab.Leg.ResetPhysics
  fullName: Watcher.DrillCrab.Leg.ResetPhysics
- uid: Watcher.DrillCrab.Leg.Update*
  commentId: Overload:Watcher.DrillCrab.Leg.Update
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Update
  name: Update
  nameWithType: DrillCrab.Leg.Update
  fullName: Watcher.DrillCrab.Leg.Update
- uid: Watcher.DrillCrab.Leg.Retract*
  commentId: Overload:Watcher.DrillCrab.Leg.Retract
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Retract
  name: Retract
  nameWithType: DrillCrab.Leg.Retract
  fullName: Watcher.DrillCrab.Leg.Retract
- uid: Watcher.DrillCrab.Leg.StartStep*
  commentId: Overload:Watcher.DrillCrab.Leg.StartStep
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_StartStep
  name: StartStep
  nameWithType: DrillCrab.Leg.StartStep
  fullName: Watcher.DrillCrab.Leg.StartStep
- uid: Watcher.DrillCrab.Leg.SetTarget*
  commentId: Overload:Watcher.DrillCrab.Leg.SetTarget
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_SetTarget_UnityEngine_Vector2_
  name: SetTarget
  nameWithType: DrillCrab.Leg.SetTarget
  fullName: Watcher.DrillCrab.Leg.SetTarget
- uid: Watcher.DrillCrab.Leg.ApplyForce*
  commentId: Overload:Watcher.DrillCrab.Leg.ApplyForce
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_ApplyForce_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: ApplyForce
  nameWithType: DrillCrab.Leg.ApplyForce
  fullName: Watcher.DrillCrab.Leg.ApplyForce
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
- uid: Watcher.DrillCrab.Leg.Tip*
  commentId: Overload:Watcher.DrillCrab.Leg.Tip
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Tip
  name: Tip
  nameWithType: DrillCrab.Leg.Tip
  fullName: Watcher.DrillCrab.Leg.Tip
- uid: Watcher.DrillCrab.Leg.Segment
  commentId: T:Watcher.DrillCrab.Leg.Segment
  parent: Watcher
  isExternal: true
  href: Watcher.DrillCrab.html
  name: DrillCrab.Leg.Segment
  nameWithType: DrillCrab.Leg.Segment
  fullName: Watcher.DrillCrab.Leg.Segment
  spec.csharp:
  - uid: Watcher.DrillCrab
    name: DrillCrab
    isExternal: true
    href: Watcher.DrillCrab.html
  - name: .
  - uid: Watcher.DrillCrab.Leg
    name: Leg
    isExternal: true
    href: Watcher.DrillCrab.Leg.html
  - name: .
  - uid: Watcher.DrillCrab.Leg.Segment
    name: Segment
    isExternal: true
    href: Watcher.DrillCrab.Leg.Segment.html
  spec.vb:
  - uid: Watcher.DrillCrab
    name: DrillCrab
    isExternal: true
    href: Watcher.DrillCrab.html
  - name: .
  - uid: Watcher.DrillCrab.Leg
    name: Leg
    isExternal: true
    href: Watcher.DrillCrab.Leg.html
  - name: .
  - uid: Watcher.DrillCrab.Leg.Segment
    name: Segment
    isExternal: true
    href: Watcher.DrillCrab.Leg.Segment.html
- uid: Watcher.DrillCrab.Leg.Supporting*
  commentId: Overload:Watcher.DrillCrab.Leg.Supporting
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Supporting
  name: Supporting
  nameWithType: DrillCrab.Leg.Supporting
  fullName: Watcher.DrillCrab.Leg.Supporting
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Watcher.DrillCrab.Leg.Limp*
  commentId: Overload:Watcher.DrillCrab.Leg.Limp
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Limp
  name: Limp
  nameWithType: DrillCrab.Leg.Limp
  fullName: Watcher.DrillCrab.Leg.Limp
- uid: Watcher.DrillCrab.Leg.WantsToStep*
  commentId: Overload:Watcher.DrillCrab.Leg.WantsToStep
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_WantsToStep
  name: WantsToStep
  nameWithType: DrillCrab.Leg.WantsToStep
  fullName: Watcher.DrillCrab.Leg.WantsToStep
- uid: Watcher.DrillCrab.Leg.Health*
  commentId: Overload:Watcher.DrillCrab.Leg.Health
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Health
  name: Health
  nameWithType: DrillCrab.Leg.Health
  fullName: Watcher.DrillCrab.Leg.Health
- uid: Watcher.DrillCrab.Leg.Dead*
  commentId: Overload:Watcher.DrillCrab.Leg.Dead
  isExternal: true
  href: Watcher.DrillCrab.Leg.html#Watcher_DrillCrab_Leg_Dead
  name: Dead
  nameWithType: DrillCrab.Leg.Dead
  fullName: Watcher.DrillCrab.Leg.Dead
