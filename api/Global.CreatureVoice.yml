### YamlMime:ManagedReference
items:
- uid: Global.CreatureVoice
  commentId: T:Global.CreatureVoice
  id: CreatureVoice
  parent: Global
  children:
  - Global.CreatureVoice.#ctor(Creature,System.Int32)
  - Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  - Global.CreatureVoice.MakingASound
  - Global.CreatureVoice.Pitch
  - Global.CreatureVoice.Update
  - Global.CreatureVoice.VisualizedIntensity
  - Global.CreatureVoice.Volume
  - Global.CreatureVoice.creature
  - Global.CreatureVoice.lastSoundName
  - Global.CreatureVoice.room
  - Global.CreatureVoice.soundA
  - Global.CreatureVoice.soundID
  - Global.CreatureVoice.soundName
  - Global.CreatureVoice.voiceChunk
  langs:
  - csharp
  - vb
  name: CreatureVoice
  nameWithType: CreatureVoice
  fullName: CreatureVoice
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CreatureVoice</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class CreatureVoice
    content.vb: Public MustInherit Class CreatureVoice
  inheritance:
  - System.Object
  derivedClasses:
  - Global.LizardVoice
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CreatureVoice.creature
  commentId: F:Global.CreatureVoice.creature
  id: creature
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: creature
  nameWithType: CreatureVoice.creature
  fullName: CreatureVoice.creature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.creature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature creature
    return:
      type: Global.Creature
    content.vb: Public creature As Creature
- uid: Global.CreatureVoice.voiceChunk
  commentId: F:Global.CreatureVoice.voiceChunk
  id: voiceChunk
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: voiceChunk
  nameWithType: CreatureVoice.voiceChunk
  fullName: CreatureVoice.voiceChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.voiceChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk voiceChunk
    return:
      type: Global.BodyChunk
    content.vb: Public voiceChunk As BodyChunk
- uid: Global.CreatureVoice.room
  commentId: F:Global.CreatureVoice.room
  id: room
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: room
  nameWithType: CreatureVoice.room
  fullName: CreatureVoice.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.CreatureVoice.soundA
  commentId: F:Global.CreatureVoice.soundA
  id: soundA
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: soundA
  nameWithType: CreatureVoice.soundA
  fullName: CreatureVoice.soundA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.soundA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter soundA
    return:
      type: Global.ChunkSoundEmitter
    content.vb: Public soundA As ChunkSoundEmitter
- uid: Global.CreatureVoice.soundID
  commentId: F:Global.CreatureVoice.soundID
  id: soundID
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: soundID
  nameWithType: CreatureVoice.soundID
  fullName: CreatureVoice.soundID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.soundID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID soundID
    return:
      type: Global.SoundID
    content.vb: Public soundID As SoundID
- uid: Global.CreatureVoice.soundName
  commentId: F:Global.CreatureVoice.soundName
  id: soundName
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: soundName
  nameWithType: CreatureVoice.soundName
  fullName: CreatureVoice.soundName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.soundName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string soundName
    return:
      type: System.String
    content.vb: Public soundName As String
- uid: Global.CreatureVoice.lastSoundName
  commentId: F:Global.CreatureVoice.lastSoundName
  id: lastSoundName
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: lastSoundName
  nameWithType: CreatureVoice.lastSoundName
  fullName: CreatureVoice.lastSoundName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureVoice.lastSoundName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string lastSoundName
    return:
      type: System.String
    content.vb: Public lastSoundName As String
- uid: Global.CreatureVoice.#ctor(Creature,System.Int32)
  commentId: M:Global.CreatureVoice.#ctor(Creature,System.Int32)
  id: '#ctor(Creature,System.Int32)'
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: CreatureVoice(Creature, int)
  nameWithType: CreatureVoice.CreatureVoice(Creature, int)
  fullName: CreatureVoice.CreatureVoice(Creature, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureVoice</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureVoice(Creature creature, int voiceChunkIndex)
    parameters:
    - id: creature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:CreatureVoice.#ctor(Creature,System.Int32)</parameter>
          </include>
        </markup>
    - id: voiceChunkIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>voiceChunkIndex</parameter>
            <parameter>M:CreatureVoice.#ctor(Creature,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(creature As Creature, voiceChunkIndex As Integer)
  overload: Global.CreatureVoice.#ctor*
  nameWithType.vb: CreatureVoice.New(Creature, Integer)
  fullName.vb: CreatureVoice.New(Creature, Integer)
  name.vb: New(Creature, Integer)
- uid: Global.CreatureVoice.Update
  commentId: M:Global.CreatureVoice.Update
  id: Update
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: CreatureVoice.Update()
  fullName: CreatureVoice.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureVoice.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Global.CreatureVoice.Update*
- uid: Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  commentId: M:Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  id: InitSoundVisualizer(System.Single,System.Single,System.Single)
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: InitSoundVisualizer(float, float, float)
  nameWithType: CreatureVoice.InitSoundVisualizer(float, float, float)
  fullName: CreatureVoice.InitSoundVisualizer(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitSoundVisualizer(float intensityLowerCutoff, float intensityUpperCeiling, float intensityExponent)
    parameters:
    - id: intensityLowerCutoff
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intensityLowerCutoff</parameter>
            <parameter>M:CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: intensityUpperCeiling
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intensityUpperCeiling</parameter>
            <parameter>M:CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: intensityExponent
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intensityExponent</parameter>
            <parameter>M:CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitSoundVisualizer(intensityLowerCutoff As Single, intensityUpperCeiling As Single, intensityExponent As Single)
  overload: Global.CreatureVoice.InitSoundVisualizer*
  nameWithType.vb: CreatureVoice.InitSoundVisualizer(Single, Single, Single)
  fullName.vb: CreatureVoice.InitSoundVisualizer(Single, Single, Single)
  name.vb: InitSoundVisualizer(Single, Single, Single)
- uid: Global.CreatureVoice.Volume
  commentId: P:Global.CreatureVoice.Volume
  id: Volume
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: Volume
  nameWithType: CreatureVoice.Volume
  fullName: CreatureVoice.Volume
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureVoice.Volume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Volume { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Volume As Single
  overload: Global.CreatureVoice.Volume*
- uid: Global.CreatureVoice.Pitch
  commentId: P:Global.CreatureVoice.Pitch
  id: Pitch
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: Pitch
  nameWithType: CreatureVoice.Pitch
  fullName: CreatureVoice.Pitch
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureVoice.Pitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Pitch { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Pitch As Single
  overload: Global.CreatureVoice.Pitch*
- uid: Global.CreatureVoice.MakingASound
  commentId: P:Global.CreatureVoice.MakingASound
  id: MakingASound
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: MakingASound
  nameWithType: CreatureVoice.MakingASound
  fullName: CreatureVoice.MakingASound
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureVoice.MakingASound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MakingASound { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MakingASound As Boolean
  overload: Global.CreatureVoice.MakingASound*
- uid: Global.CreatureVoice.VisualizedIntensity
  commentId: P:Global.CreatureVoice.VisualizedIntensity
  id: VisualizedIntensity
  parent: Global.CreatureVoice
  langs:
  - csharp
  - vb
  name: VisualizedIntensity
  nameWithType: CreatureVoice.VisualizedIntensity
  fullName: CreatureVoice.VisualizedIntensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureVoice.VisualizedIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float VisualizedIntensity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property VisualizedIntensity As Single
  overload: Global.CreatureVoice.VisualizedIntensity*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.ChunkSoundEmitter
  commentId: T:Global.ChunkSoundEmitter
  isExternal: true
  href: ChunkSoundEmitter.html
  name: ChunkSoundEmitter
  nameWithType: ChunkSoundEmitter
  fullName: ChunkSoundEmitter
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.CreatureVoice.#ctor*
  commentId: Overload:Global.CreatureVoice.#ctor
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice__ctor_Creature_System_Int32_
  name: CreatureVoice
  nameWithType: CreatureVoice.CreatureVoice
  fullName: CreatureVoice.CreatureVoice
  nameWithType.vb: CreatureVoice.New
  fullName.vb: CreatureVoice.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CreatureVoice.Update*
  commentId: Overload:Global.CreatureVoice.Update
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Update
  name: Update
  nameWithType: CreatureVoice.Update
  fullName: CreatureVoice.Update
- uid: Global.CreatureVoice.InitSoundVisualizer*
  commentId: Overload:Global.CreatureVoice.InitSoundVisualizer
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_InitSoundVisualizer_System_Single_System_Single_System_Single_
  name: InitSoundVisualizer
  nameWithType: CreatureVoice.InitSoundVisualizer
  fullName: CreatureVoice.InitSoundVisualizer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.CreatureVoice.Volume*
  commentId: Overload:Global.CreatureVoice.Volume
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Volume
  name: Volume
  nameWithType: CreatureVoice.Volume
  fullName: CreatureVoice.Volume
- uid: Global.CreatureVoice.Pitch*
  commentId: Overload:Global.CreatureVoice.Pitch
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Pitch
  name: Pitch
  nameWithType: CreatureVoice.Pitch
  fullName: CreatureVoice.Pitch
- uid: Global.CreatureVoice.MakingASound*
  commentId: Overload:Global.CreatureVoice.MakingASound
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_MakingASound
  name: MakingASound
  nameWithType: CreatureVoice.MakingASound
  fullName: CreatureVoice.MakingASound
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.CreatureVoice.VisualizedIntensity*
  commentId: Overload:Global.CreatureVoice.VisualizedIntensity
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_VisualizedIntensity
  name: VisualizedIntensity
  nameWithType: CreatureVoice.VisualizedIntensity
  fullName: CreatureVoice.VisualizedIntensity
