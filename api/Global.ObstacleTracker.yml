### YamlMime:ManagedReference
items:
- uid: Global.ObstacleTracker
  commentId: T:Global.ObstacleTracker
  id: ObstacleTracker
  parent: Global
  children:
  - Global.ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)
  - Global.ObstacleTracker.EraseObstacleObject(PhysicalObject)
  - Global.ObstacleTracker.KnownObstacleObject(PhysicalObject)
  - Global.ObstacleTracker.NewRoom(Room)
  - Global.ObstacleTracker.ObstacleWarning(MovementConnection)
  - Global.ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)
  langs:
  - csharp
  - vb
  name: ObstacleTracker
  nameWithType: ObstacleTracker
  fullName: ObstacleTracker
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ObstacleTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ObstacleTracker : AIModule'
    content.vb: Public Class ObstacleTracker Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.Update
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)
  id: '#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)'
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: ObstacleTracker(ArtificialIntelligence, bool, bool, int, int, int)
  nameWithType: ObstacleTracker.ObstacleTracker(ArtificialIntelligence, bool, bool, int, int, int)
  fullName: ObstacleTracker.ObstacleTracker(ArtificialIntelligence, bool, bool, int, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ObstacleTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ObstacleTracker(ArtificialIntelligence AI, bool trackObjects, bool trackTiles, int mapDecayPerReport, int objectsReportsToNoticeCreatures, int objectsMaxTrackedCreatures)
    parameters:
    - id: AI
      type: Global.ArtificialIntelligence
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: trackObjects
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trackObjects</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: trackTiles
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trackTiles</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: mapDecayPerReport
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mapDecayPerReport</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: objectsReportsToNoticeCreatures
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>objectsReportsToNoticeCreatures</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: objectsMaxTrackedCreatures
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>objectsMaxTrackedCreatures</parameter>
            <parameter>M:ObstacleTracker.#ctor(ArtificialIntelligence,System.Boolean,System.Boolean,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As ArtificialIntelligence, trackObjects As Boolean, trackTiles As Boolean, mapDecayPerReport As Integer, objectsReportsToNoticeCreatures As Integer, objectsMaxTrackedCreatures As Integer)
  overload: Global.ObstacleTracker.#ctor*
  nameWithType.vb: ObstacleTracker.New(ArtificialIntelligence, Boolean, Boolean, Integer, Integer, Integer)
  fullName.vb: ObstacleTracker.New(ArtificialIntelligence, Boolean, Boolean, Integer, Integer, Integer)
  name.vb: New(ArtificialIntelligence, Boolean, Boolean, Integer, Integer, Integer)
- uid: Global.ObstacleTracker.NewRoom(Room)
  commentId: M:Global.ObstacleTracker.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: ObstacleTracker.NewRoom(Room)
  fullName: ObstacleTracker.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ObstacleTracker.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:ObstacleTracker.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(room As Room)
  overridden: Global.AIModule.NewRoom(Room)
  overload: Global.ObstacleTracker.NewRoom*
- uid: Global.ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)
  commentId: M:Global.ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)
  id: ReportMovementFailure(MovementConnection,BodyChunk)
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: ReportMovementFailure(MovementConnection, BodyChunk)
  nameWithType: ObstacleTracker.ReportMovementFailure(MovementConnection, BodyChunk)
  fullName: ObstacleTracker.ReportMovementFailure(MovementConnection, BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReportMovementFailure(MovementConnection connection, BodyChunk suspectedBlockingObject)
    parameters:
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)</parameter>
          </include>
        </markup>
    - id: suspectedBlockingObject
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>suspectedBlockingObject</parameter>
            <parameter>M:ObstacleTracker.ReportMovementFailure(MovementConnection,BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReportMovementFailure(connection As MovementConnection, suspectedBlockingObject As BodyChunk)
  overload: Global.ObstacleTracker.ReportMovementFailure*
- uid: Global.ObstacleTracker.EraseObstacleObject(PhysicalObject)
  commentId: M:Global.ObstacleTracker.EraseObstacleObject(PhysicalObject)
  id: EraseObstacleObject(PhysicalObject)
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: EraseObstacleObject(PhysicalObject)
  nameWithType: ObstacleTracker.EraseObstacleObject(PhysicalObject)
  fullName: ObstacleTracker.EraseObstacleObject(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ObstacleTracker.EraseObstacleObject(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EraseObstacleObject(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:ObstacleTracker.EraseObstacleObject(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub EraseObstacleObject(obj As PhysicalObject)
  overload: Global.ObstacleTracker.EraseObstacleObject*
- uid: Global.ObstacleTracker.KnownObstacleObject(PhysicalObject)
  commentId: M:Global.ObstacleTracker.KnownObstacleObject(PhysicalObject)
  id: KnownObstacleObject(PhysicalObject)
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: KnownObstacleObject(PhysicalObject)
  nameWithType: ObstacleTracker.KnownObstacleObject(PhysicalObject)
  fullName: ObstacleTracker.KnownObstacleObject(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ObstacleTracker.KnownObstacleObject(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool KnownObstacleObject(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:ObstacleTracker.KnownObstacleObject(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ObstacleTracker.KnownObstacleObject(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function KnownObstacleObject(obj As PhysicalObject) As Boolean
  overload: Global.ObstacleTracker.KnownObstacleObject*
- uid: Global.ObstacleTracker.ObstacleWarning(MovementConnection)
  commentId: M:Global.ObstacleTracker.ObstacleWarning(MovementConnection)
  id: ObstacleWarning(MovementConnection)
  parent: Global.ObstacleTracker
  langs:
  - csharp
  - vb
  name: ObstacleWarning(MovementConnection)
  nameWithType: ObstacleTracker.ObstacleWarning(MovementConnection)
  fullName: ObstacleTracker.ObstacleWarning(MovementConnection)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ObstacleTracker.ObstacleWarning(MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ObstacleWarning(MovementConnection connection)
    parameters:
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:ObstacleTracker.ObstacleWarning(MovementConnection)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ObstacleTracker.ObstacleWarning(MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: Public Function ObstacleWarning(connection As MovementConnection) As Integer
  overload: Global.ObstacleTracker.ObstacleWarning*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ObstacleTracker.#ctor*
  commentId: Overload:Global.ObstacleTracker.#ctor
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker__ctor_ArtificialIntelligence_System_Boolean_System_Boolean_System_Int32_System_Int32_System_Int32_
  name: ObstacleTracker
  nameWithType: ObstacleTracker.ObstacleTracker
  fullName: ObstacleTracker.ObstacleTracker
  nameWithType.vb: ObstacleTracker.New
  fullName.vb: ObstacleTracker.New
  name.vb: New
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.ObstacleTracker.NewRoom*
  commentId: Overload:Global.ObstacleTracker.NewRoom
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker_NewRoom_Room_
  name: NewRoom
  nameWithType: ObstacleTracker.NewRoom
  fullName: ObstacleTracker.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.ObstacleTracker.ReportMovementFailure*
  commentId: Overload:Global.ObstacleTracker.ReportMovementFailure
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker_ReportMovementFailure_MovementConnection_BodyChunk_
  name: ReportMovementFailure
  nameWithType: ObstacleTracker.ReportMovementFailure
  fullName: ObstacleTracker.ReportMovementFailure
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.ObstacleTracker.EraseObstacleObject*
  commentId: Overload:Global.ObstacleTracker.EraseObstacleObject
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker_EraseObstacleObject_PhysicalObject_
  name: EraseObstacleObject
  nameWithType: ObstacleTracker.EraseObstacleObject
  fullName: ObstacleTracker.EraseObstacleObject
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.ObstacleTracker.KnownObstacleObject*
  commentId: Overload:Global.ObstacleTracker.KnownObstacleObject
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker_KnownObstacleObject_PhysicalObject_
  name: KnownObstacleObject
  nameWithType: ObstacleTracker.KnownObstacleObject
  fullName: ObstacleTracker.KnownObstacleObject
- uid: Global.ObstacleTracker.ObstacleWarning*
  commentId: Overload:Global.ObstacleTracker.ObstacleWarning
  isExternal: true
  href: Global.ObstacleTracker.html#ObstacleTracker_ObstacleWarning_MovementConnection_
  name: ObstacleWarning
  nameWithType: ObstacleTracker.ObstacleWarning
  fullName: ObstacleTracker.ObstacleWarning
