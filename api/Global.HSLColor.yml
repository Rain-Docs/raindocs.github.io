### YamlMime:ManagedReference
items:
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  id: HSLColor
  parent: Global
  children:
  - Global.HSLColor.#ctor(System.Single,System.Single,System.Single)
  - Global.HSLColor.Lerp(HSLColor,HSLColor,System.Single)
  - Global.HSLColor.hue
  - Global.HSLColor.lightness
  - Global.HSLColor.rgb
  - Global.HSLColor.saturation
  langs:
  - csharp
  - vb
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HSLColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct HSLColor
    content.vb: Public Structure HSLColor
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.HSLColor.hue
  commentId: F:Global.HSLColor.hue
  id: hue
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: hue
  nameWithType: HSLColor.hue
  fullName: HSLColor.hue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HSLColor.hue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float hue
    return:
      type: System.Single
    content.vb: Public hue As Single
- uid: Global.HSLColor.saturation
  commentId: F:Global.HSLColor.saturation
  id: saturation
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: saturation
  nameWithType: HSLColor.saturation
  fullName: HSLColor.saturation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HSLColor.saturation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float saturation
    return:
      type: System.Single
    content.vb: Public saturation As Single
- uid: Global.HSLColor.lightness
  commentId: F:Global.HSLColor.lightness
  id: lightness
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: lightness
  nameWithType: HSLColor.lightness
  fullName: HSLColor.lightness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HSLColor.lightness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lightness
    return:
      type: System.Single
    content.vb: Public lightness As Single
- uid: Global.HSLColor.#ctor(System.Single,System.Single,System.Single)
  commentId: M:Global.HSLColor.#ctor(System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single)'
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: HSLColor(float, float, float)
  nameWithType: HSLColor.HSLColor(float, float, float)
  fullName: HSLColor.HSLColor(float, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HSLColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HSLColor(float hue, float saturation, float lightness)
    parameters:
    - id: hue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue</parameter>
            <parameter>M:HSLColor.#ctor(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: saturation
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saturation</parameter>
            <parameter>M:HSLColor.#ctor(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lightness
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lightness</parameter>
            <parameter>M:HSLColor.#ctor(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(hue As Single, saturation As Single, lightness As Single)
  overload: Global.HSLColor.#ctor*
  nameWithType.vb: HSLColor.New(Single, Single, Single)
  fullName.vb: HSLColor.New(Single, Single, Single)
  name.vb: New(Single, Single, Single)
- uid: Global.HSLColor.Lerp(HSLColor,HSLColor,System.Single)
  commentId: M:Global.HSLColor.Lerp(HSLColor,HSLColor,System.Single)
  id: Lerp(HSLColor,HSLColor,System.Single)
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: Lerp(HSLColor, HSLColor, float)
  nameWithType: HSLColor.Lerp(HSLColor, HSLColor, float)
  fullName: HSLColor.Lerp(HSLColor, HSLColor, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HSLColor.Lerp(HSLColor,HSLColor,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor Lerp(HSLColor from, HSLColor to, float lrp)
    parameters:
    - id: from
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>from</parameter>
            <parameter>M:HSLColor.Lerp(HSLColor,HSLColor,System.Single)</parameter>
          </include>
        </markup>
    - id: to
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>to</parameter>
            <parameter>M:HSLColor.Lerp(HSLColor,HSLColor,System.Single)</parameter>
          </include>
        </markup>
    - id: lrp
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lrp</parameter>
            <parameter>M:HSLColor.Lerp(HSLColor,HSLColor,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HSLColor.Lerp(HSLColor,HSLColor,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Lerp(from As HSLColor, [to] As HSLColor, lrp As Single) As HSLColor
  overload: Global.HSLColor.Lerp*
  nameWithType.vb: HSLColor.Lerp(HSLColor, HSLColor, Single)
  fullName.vb: HSLColor.Lerp(HSLColor, HSLColor, Single)
  name.vb: Lerp(HSLColor, HSLColor, Single)
- uid: Global.HSLColor.rgb
  commentId: P:Global.HSLColor.rgb
  id: rgb
  parent: Global.HSLColor
  langs:
  - csharp
  - vb
  name: rgb
  nameWithType: HSLColor.rgb
  fullName: HSLColor.rgb
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HSLColor.rgb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color rgb { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property rgb As Color
  overload: Global.HSLColor.rgb*
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.HSLColor.#ctor*
  commentId: Overload:Global.HSLColor.#ctor
  isExternal: true
  href: Global.HSLColor.html#HSLColor__ctor_System_Single_System_Single_System_Single_
  name: HSLColor
  nameWithType: HSLColor.HSLColor
  fullName: HSLColor.HSLColor
  nameWithType.vb: HSLColor.New
  fullName.vb: HSLColor.New
  name.vb: New
- uid: Global.HSLColor.Lerp*
  commentId: Overload:Global.HSLColor.Lerp
  isExternal: true
  href: Global.HSLColor.html#HSLColor_Lerp_HSLColor_HSLColor_System_Single_
  name: Lerp
  nameWithType: HSLColor.Lerp
  fullName: HSLColor.Lerp
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  isExternal: true
  href: HSLColor.html
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
- uid: Global.HSLColor.rgb*
  commentId: Overload:Global.HSLColor.rgb
  isExternal: true
  href: Global.HSLColor.html#HSLColor_rgb
  name: rgb
  nameWithType: HSLColor.rgb
  fullName: HSLColor.rgb
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
