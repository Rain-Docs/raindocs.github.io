### YamlMime:ManagedReference
items:
- uid: Global.LizardAI.LizardSpitTracker
  commentId: T:Global.LizardAI.LizardSpitTracker
  id: LizardAI.LizardSpitTracker
  parent: Global
  children:
  - Global.LizardAI.LizardSpitTracker.#ctor(ArtificialIntelligence)
  - Global.LizardAI.LizardSpitTracker.AimABitDown(System.Single)
  - Global.LizardAI.LizardSpitTracker.AimABitUp(System.Single)
  - Global.LizardAI.LizardSpitTracker.AimPos
  - Global.LizardAI.LizardSpitTracker.AtSpitPos
  - Global.LizardAI.LizardSpitTracker.SetAim(System.Single)
  - Global.LizardAI.LizardSpitTracker.Update
  - Global.LizardAI.LizardSpitTracker.aimForChunk
  - Global.LizardAI.LizardSpitTracker.aimUp
  - Global.LizardAI.LizardSpitTracker.delay
  - Global.LizardAI.LizardSpitTracker.goToSpitPosCounter
  - Global.LizardAI.LizardSpitTracker.lizardAI
  - Global.LizardAI.LizardSpitTracker.spitFromPos
  - Global.LizardAI.LizardSpitTracker.spitting
  - Global.LizardAI.LizardSpitTracker.targetReachable
  - Global.LizardAI.LizardSpitTracker.tempSpitFromPos
  - Global.LizardAI.LizardSpitTracker.wantToSpit
  - Global.LizardAI.LizardSpitTracker.wantToSpitAtPos
  langs:
  - csharp
  - vb
  name: LizardAI.LizardSpitTracker
  nameWithType: LizardAI.LizardSpitTracker
  fullName: LizardAI.LizardSpitTracker
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardAI.LizardSpitTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardAI.LizardSpitTracker : AIModule'
    content.vb: Public Class LizardAI.LizardSpitTracker Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.NewRoom(Room)
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardAI.LizardSpitTracker.spitting
  commentId: F:Global.LizardAI.LizardSpitTracker.spitting
  id: spitting
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: spitting
  nameWithType: LizardAI.LizardSpitTracker.spitting
  fullName: LizardAI.LizardSpitTracker.spitting
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.spitting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool spitting
    return:
      type: System.Boolean
    content.vb: Public spitting As Boolean
- uid: Global.LizardAI.LizardSpitTracker.wantToSpit
  commentId: F:Global.LizardAI.LizardSpitTracker.wantToSpit
  id: wantToSpit
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: wantToSpit
  nameWithType: LizardAI.LizardSpitTracker.wantToSpit
  fullName: LizardAI.LizardSpitTracker.wantToSpit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.wantToSpit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool wantToSpit
    return:
      type: System.Boolean
    content.vb: Public wantToSpit As Boolean
- uid: Global.LizardAI.LizardSpitTracker.targetReachable
  commentId: F:Global.LizardAI.LizardSpitTracker.targetReachable
  id: targetReachable
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: targetReachable
  nameWithType: LizardAI.LizardSpitTracker.targetReachable
  fullName: LizardAI.LizardSpitTracker.targetReachable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.targetReachable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool targetReachable
    return:
      type: System.Boolean
    content.vb: Public targetReachable As Boolean
- uid: Global.LizardAI.LizardSpitTracker.wantToSpitAtPos
  commentId: F:Global.LizardAI.LizardSpitTracker.wantToSpitAtPos
  id: wantToSpitAtPos
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: wantToSpitAtPos
  nameWithType: LizardAI.LizardSpitTracker.wantToSpitAtPos
  fullName: LizardAI.LizardSpitTracker.wantToSpitAtPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.wantToSpitAtPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate wantToSpitAtPos
    return:
      type: Global.WorldCoordinate
    content.vb: Public wantToSpitAtPos As WorldCoordinate
- uid: Global.LizardAI.LizardSpitTracker.tempSpitFromPos
  commentId: F:Global.LizardAI.LizardSpitTracker.tempSpitFromPos
  id: tempSpitFromPos
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: tempSpitFromPos
  nameWithType: LizardAI.LizardSpitTracker.tempSpitFromPos
  fullName: LizardAI.LizardSpitTracker.tempSpitFromPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.tempSpitFromPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate tempSpitFromPos
    return:
      type: Global.WorldCoordinate
    content.vb: Public tempSpitFromPos As WorldCoordinate
- uid: Global.LizardAI.LizardSpitTracker.spitFromPos
  commentId: F:Global.LizardAI.LizardSpitTracker.spitFromPos
  id: spitFromPos
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: spitFromPos
  nameWithType: LizardAI.LizardSpitTracker.spitFromPos
  fullName: LizardAI.LizardSpitTracker.spitFromPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.spitFromPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate spitFromPos
    return:
      type: Global.WorldCoordinate
    content.vb: Public spitFromPos As WorldCoordinate
- uid: Global.LizardAI.LizardSpitTracker.delay
  commentId: F:Global.LizardAI.LizardSpitTracker.delay
  id: delay
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: delay
  nameWithType: LizardAI.LizardSpitTracker.delay
  fullName: LizardAI.LizardSpitTracker.delay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.delay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int delay
    return:
      type: System.Int32
    content.vb: Public delay As Integer
- uid: Global.LizardAI.LizardSpitTracker.goToSpitPosCounter
  commentId: F:Global.LizardAI.LizardSpitTracker.goToSpitPosCounter
  id: goToSpitPosCounter
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: goToSpitPosCounter
  nameWithType: LizardAI.LizardSpitTracker.goToSpitPosCounter
  fullName: LizardAI.LizardSpitTracker.goToSpitPosCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.goToSpitPosCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int goToSpitPosCounter
    return:
      type: System.Int32
    content.vb: Public goToSpitPosCounter As Integer
- uid: Global.LizardAI.LizardSpitTracker.aimUp
  commentId: F:Global.LizardAI.LizardSpitTracker.aimUp
  id: aimUp
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: aimUp
  nameWithType: LizardAI.LizardSpitTracker.aimUp
  fullName: LizardAI.LizardSpitTracker.aimUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.aimUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float aimUp
    return:
      type: System.Single
    content.vb: Public aimUp As Single
- uid: Global.LizardAI.LizardSpitTracker.aimForChunk
  commentId: F:Global.LizardAI.LizardSpitTracker.aimForChunk
  id: aimForChunk
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: aimForChunk
  nameWithType: LizardAI.LizardSpitTracker.aimForChunk
  fullName: LizardAI.LizardSpitTracker.aimForChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardAI.LizardSpitTracker.aimForChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk aimForChunk
    return:
      type: Global.BodyChunk
    content.vb: Public aimForChunk As BodyChunk
- uid: Global.LizardAI.LizardSpitTracker.#ctor(ArtificialIntelligence)
  commentId: M:Global.LizardAI.LizardSpitTracker.#ctor(ArtificialIntelligence)
  id: '#ctor(ArtificialIntelligence)'
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: LizardSpitTracker(ArtificialIntelligence)
  nameWithType: LizardAI.LizardSpitTracker.LizardSpitTracker(ArtificialIntelligence)
  fullName: LizardAI.LizardSpitTracker.LizardSpitTracker(ArtificialIntelligence)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardAI.LizardSpitTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardSpitTracker(ArtificialIntelligence AI)
    parameters:
    - id: AI
      type: Global.ArtificialIntelligence
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:LizardAI.LizardSpitTracker.#ctor(ArtificialIntelligence)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As ArtificialIntelligence)
  overload: Global.LizardAI.LizardSpitTracker.#ctor*
  nameWithType.vb: LizardAI.LizardSpitTracker.New(ArtificialIntelligence)
  fullName.vb: LizardAI.LizardSpitTracker.New(ArtificialIntelligence)
  name.vb: New(ArtificialIntelligence)
- uid: Global.LizardAI.LizardSpitTracker.Update
  commentId: M:Global.LizardAI.LizardSpitTracker.Update
  id: Update
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardAI.LizardSpitTracker.Update()
  fullName: LizardAI.LizardSpitTracker.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LizardSpitTracker.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.AIModule.Update
  overload: Global.LizardAI.LizardSpitTracker.Update*
- uid: Global.LizardAI.LizardSpitTracker.AimPos
  commentId: M:Global.LizardAI.LizardSpitTracker.AimPos
  id: AimPos
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: AimPos()
  nameWithType: LizardAI.LizardSpitTracker.AimPos()
  fullName: LizardAI.LizardSpitTracker.AimPos()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LizardSpitTracker.AimPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? AimPos()
    return:
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardAI.LizardSpitTracker.AimPos</parameter>
          </include>
        </markup>
    content.vb: Public Function AimPos() As Vector2?
  overload: Global.LizardAI.LizardSpitTracker.AimPos*
- uid: Global.LizardAI.LizardSpitTracker.AimABitUp(System.Single)
  commentId: M:Global.LizardAI.LizardSpitTracker.AimABitUp(System.Single)
  id: AimABitUp(System.Single)
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: AimABitUp(float)
  nameWithType: LizardAI.LizardSpitTracker.AimABitUp(float)
  fullName: LizardAI.LizardSpitTracker.AimABitUp(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LizardSpitTracker.AimABitUp(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AimABitUp(float am)
    parameters:
    - id: am
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>am</parameter>
            <parameter>M:LizardAI.LizardSpitTracker.AimABitUp(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AimABitUp(am As Single)
  overload: Global.LizardAI.LizardSpitTracker.AimABitUp*
  nameWithType.vb: LizardAI.LizardSpitTracker.AimABitUp(Single)
  fullName.vb: LizardAI.LizardSpitTracker.AimABitUp(Single)
  name.vb: AimABitUp(Single)
- uid: Global.LizardAI.LizardSpitTracker.AimABitDown(System.Single)
  commentId: M:Global.LizardAI.LizardSpitTracker.AimABitDown(System.Single)
  id: AimABitDown(System.Single)
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: AimABitDown(float)
  nameWithType: LizardAI.LizardSpitTracker.AimABitDown(float)
  fullName: LizardAI.LizardSpitTracker.AimABitDown(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LizardSpitTracker.AimABitDown(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AimABitDown(float am)
    parameters:
    - id: am
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>am</parameter>
            <parameter>M:LizardAI.LizardSpitTracker.AimABitDown(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AimABitDown(am As Single)
  overload: Global.LizardAI.LizardSpitTracker.AimABitDown*
  nameWithType.vb: LizardAI.LizardSpitTracker.AimABitDown(Single)
  fullName.vb: LizardAI.LizardSpitTracker.AimABitDown(Single)
  name.vb: AimABitDown(Single)
- uid: Global.LizardAI.LizardSpitTracker.SetAim(System.Single)
  commentId: M:Global.LizardAI.LizardSpitTracker.SetAim(System.Single)
  id: SetAim(System.Single)
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: SetAim(float)
  nameWithType: LizardAI.LizardSpitTracker.SetAim(float)
  fullName: LizardAI.LizardSpitTracker.SetAim(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardAI.LizardSpitTracker.SetAim(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetAim(float am)
    parameters:
    - id: am
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>am</parameter>
            <parameter>M:LizardAI.LizardSpitTracker.SetAim(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetAim(am As Single)
  overload: Global.LizardAI.LizardSpitTracker.SetAim*
  nameWithType.vb: LizardAI.LizardSpitTracker.SetAim(Single)
  fullName.vb: LizardAI.LizardSpitTracker.SetAim(Single)
  name.vb: SetAim(Single)
- uid: Global.LizardAI.LizardSpitTracker.lizardAI
  commentId: P:Global.LizardAI.LizardSpitTracker.lizardAI
  id: lizardAI
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: lizardAI
  nameWithType: LizardAI.LizardSpitTracker.lizardAI
  fullName: LizardAI.LizardSpitTracker.lizardAI
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardAI.LizardSpitTracker.lizardAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardAI lizardAI { get; }
    parameters: []
    return:
      type: Global.LizardAI
    content.vb: Public ReadOnly Property lizardAI As LizardAI
  overload: Global.LizardAI.LizardSpitTracker.lizardAI*
- uid: Global.LizardAI.LizardSpitTracker.AtSpitPos
  commentId: P:Global.LizardAI.LizardSpitTracker.AtSpitPos
  id: AtSpitPos
  parent: Global.LizardAI.LizardSpitTracker
  langs:
  - csharp
  - vb
  name: AtSpitPos
  nameWithType: LizardAI.LizardSpitTracker.AtSpitPos
  fullName: LizardAI.LizardSpitTracker.AtSpitPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardAI.LizardSpitTracker.AtSpitPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AtSpitPos { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AtSpitPos As Boolean
  overload: Global.LizardAI.LizardSpitTracker.AtSpitPos*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.LizardAI.LizardSpitTracker.#ctor*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.#ctor
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker__ctor_ArtificialIntelligence_
  name: LizardSpitTracker
  nameWithType: LizardAI.LizardSpitTracker.LizardSpitTracker
  fullName: LizardAI.LizardSpitTracker.LizardSpitTracker
  nameWithType.vb: LizardAI.LizardSpitTracker.New
  fullName.vb: LizardAI.LizardSpitTracker.New
  name.vb: New
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.LizardAI.LizardSpitTracker.Update*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.Update
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_Update
  name: Update
  nameWithType: LizardAI.LizardSpitTracker.Update
  fullName: LizardAI.LizardSpitTracker.Update
- uid: Global.LizardAI.LizardSpitTracker.AimPos*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.AimPos
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_AimPos
  name: AimPos
  nameWithType: LizardAI.LizardSpitTracker.AimPos
  fullName: LizardAI.LizardSpitTracker.AimPos
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.LizardAI.LizardSpitTracker.AimABitUp*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.AimABitUp
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_AimABitUp_System_Single_
  name: AimABitUp
  nameWithType: LizardAI.LizardSpitTracker.AimABitUp
  fullName: LizardAI.LizardSpitTracker.AimABitUp
- uid: Global.LizardAI.LizardSpitTracker.AimABitDown*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.AimABitDown
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_AimABitDown_System_Single_
  name: AimABitDown
  nameWithType: LizardAI.LizardSpitTracker.AimABitDown
  fullName: LizardAI.LizardSpitTracker.AimABitDown
- uid: Global.LizardAI.LizardSpitTracker.SetAim*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.SetAim
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_SetAim_System_Single_
  name: SetAim
  nameWithType: LizardAI.LizardSpitTracker.SetAim
  fullName: LizardAI.LizardSpitTracker.SetAim
- uid: Global.LizardAI.LizardSpitTracker.lizardAI*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.lizardAI
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_lizardAI
  name: lizardAI
  nameWithType: LizardAI.LizardSpitTracker.lizardAI
  fullName: LizardAI.LizardSpitTracker.lizardAI
- uid: Global.LizardAI
  commentId: T:Global.LizardAI
  isExternal: true
  href: LizardAI.html
  name: LizardAI
  nameWithType: LizardAI
  fullName: LizardAI
- uid: Global.LizardAI.LizardSpitTracker.AtSpitPos*
  commentId: Overload:Global.LizardAI.LizardSpitTracker.AtSpitPos
  isExternal: true
  href: Global.LizardAI.LizardSpitTracker.html#LizardAI_LizardSpitTracker_AtSpitPos
  name: AtSpitPos
  nameWithType: LizardAI.LizardSpitTracker.AtSpitPos
  fullName: LizardAI.LizardSpitTracker.AtSpitPos
