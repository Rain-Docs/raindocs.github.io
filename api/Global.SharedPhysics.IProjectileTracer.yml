### YamlMime:ManagedReference
items:
- uid: Global.SharedPhysics.IProjectileTracer
  commentId: T:Global.SharedPhysics.IProjectileTracer
  id: SharedPhysics.IProjectileTracer
  parent: Global
  children:
  - Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  - Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  langs:
  - csharp
  - vb
  name: SharedPhysics.IProjectileTracer
  nameWithType: SharedPhysics.IProjectileTracer
  fullName: SharedPhysics.IProjectileTracer
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SharedPhysics.IProjectileTracer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface SharedPhysics.IProjectileTracer
    content.vb: Public Interface SharedPhysics.IProjectileTracer
- uid: Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  commentId: M:Global.SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  id: HitThisObject(PhysicalObject)
  parent: Global.SharedPhysics.IProjectileTracer
  langs:
  - csharp
  - vb
  name: HitThisObject(PhysicalObject)
  nameWithType: SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  fullName: SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool HitThisObject(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.IProjectileTracer.HitThisObject(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Function HitThisObject(obj As PhysicalObject) As Boolean
  overload: Global.SharedPhysics.IProjectileTracer.HitThisObject*
- uid: Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  commentId: M:Global.SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  id: HitThisChunk(BodyChunk)
  parent: Global.SharedPhysics.IProjectileTracer
  langs:
  - csharp
  - vb
  name: HitThisChunk(BodyChunk)
  nameWithType: SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  fullName: SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool HitThisChunk(BodyChunk chunk)
    parameters:
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.IProjectileTracer.HitThisChunk(BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Function HitThisChunk(chunk As BodyChunk) As Boolean
  overload: Global.SharedPhysics.IProjectileTracer.HitThisChunk*
references:
- uid: Global
- uid: Global.SharedPhysics.IProjectileTracer.HitThisObject*
  commentId: Overload:Global.SharedPhysics.IProjectileTracer.HitThisObject
  isExternal: true
  href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisObject_PhysicalObject_
  name: HitThisObject
  nameWithType: SharedPhysics.IProjectileTracer.HitThisObject
  fullName: SharedPhysics.IProjectileTracer.HitThisObject
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SharedPhysics.IProjectileTracer.HitThisChunk*
  commentId: Overload:Global.SharedPhysics.IProjectileTracer.HitThisChunk
  isExternal: true
  href: Global.SharedPhysics.IProjectileTracer.html#SharedPhysics_IProjectileTracer_HitThisChunk_BodyChunk_
  name: HitThisChunk
  nameWithType: SharedPhysics.IProjectileTracer.HitThisChunk
  fullName: SharedPhysics.IProjectileTracer.HitThisChunk
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
