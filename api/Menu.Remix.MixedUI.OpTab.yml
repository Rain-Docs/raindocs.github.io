### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.OpTab
  commentId: T:Menu.Remix.MixedUI.OpTab
  id: OpTab
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.OpTab.#ctor(OptionInterface,System.String)
  - Menu.Remix.MixedUI.OpTab.AddItems(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab.CanvasSize
  - Menu.Remix.MixedUI.OpTab.DestroyItems(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab.HideItems(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab.IsTab
  - Menu.Remix.MixedUI.OpTab.OnPostActivate
  - Menu.Remix.MixedUI.OpTab.OnPostDeactivate
  - Menu.Remix.MixedUI.OpTab.OnPostGrafUpdate
  - Menu.Remix.MixedUI.OpTab.OnPostUpdate
  - Menu.Remix.MixedUI.OpTab.OnPreActivate
  - Menu.Remix.MixedUI.OpTab.OnPreDeactivate
  - Menu.Remix.MixedUI.OpTab.OnPreGrafUpdate
  - Menu.Remix.MixedUI.OpTab.OnPreUnload
  - Menu.Remix.MixedUI.OpTab.OnPreUpdate
  - Menu.Remix.MixedUI.OpTab.RemoveItems(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab.ShowItems(Menu.Remix.MixedUI.UIelement[])
  - Menu.Remix.MixedUI.OpTab._container
  - Menu.Remix.MixedUI.OpTab._offset
  - Menu.Remix.MixedUI.OpTab.colorButton
  - Menu.Remix.MixedUI.OpTab.colorCanvas
  - Menu.Remix.MixedUI.OpTab.focusables
  - Menu.Remix.MixedUI.OpTab.isInactive
  - Menu.Remix.MixedUI.OpTab.items
  - Menu.Remix.MixedUI.OpTab.name
  - Menu.Remix.MixedUI.OpTab.owner
  langs:
  - csharp
  - vb
  name: OpTab
  nameWithType: OpTab
  fullName: Menu.Remix.MixedUI.OpTab
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.OpTab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class OpTab : IHoldUIelements'
    content.vb: Public Class OpTab Implements IHoldUIelements
  inheritance:
  - System.Object
  derivedClasses:
  - Menu.Remix.MenuTab
  implements:
  - Menu.Remix.MixedUI.IHoldUIelements
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.OpTab._offset
  commentId: F:Menu.Remix.MixedUI.OpTab._offset
  id: _offset
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: _offset
  nameWithType: OpTab._offset
  fullName: Menu.Remix.MixedUI.OpTab._offset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab._offset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static readonly Vector2 _offset
    return:
      type: UnityEngine.Vector2
    content.vb: Public Shared ReadOnly _offset As Vector2
- uid: Menu.Remix.MixedUI.OpTab.owner
  commentId: F:Menu.Remix.MixedUI.OpTab.owner
  id: owner
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: OpTab.owner
  fullName: Menu.Remix.MixedUI.OpTab.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly OptionInterface owner
    return:
      type: Global.OptionInterface
    content.vb: Public ReadOnly owner As OptionInterface
- uid: Menu.Remix.MixedUI.OpTab.colorButton
  commentId: F:Menu.Remix.MixedUI.OpTab.colorButton
  id: colorButton
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: colorButton
  nameWithType: OpTab.colorButton
  fullName: Menu.Remix.MixedUI.OpTab.colorButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab.colorButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color colorButton
    return:
      type: UnityEngine.Color
    content.vb: Public colorButton As Color
- uid: Menu.Remix.MixedUI.OpTab.colorCanvas
  commentId: F:Menu.Remix.MixedUI.OpTab.colorCanvas
  id: colorCanvas
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: colorCanvas
  nameWithType: OpTab.colorCanvas
  fullName: Menu.Remix.MixedUI.OpTab.colorCanvas
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab.colorCanvas</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color colorCanvas
    return:
      type: UnityEngine.Color
    content.vb: Public colorCanvas As Color
- uid: Menu.Remix.MixedUI.OpTab.name
  commentId: F:Menu.Remix.MixedUI.OpTab.name
  id: name
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: name
  nameWithType: OpTab.name
  fullName: Menu.Remix.MixedUI.OpTab.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string name
    return:
      type: System.String
    content.vb: Public ReadOnly name As String
- uid: Menu.Remix.MixedUI.OpTab._container
  commentId: F:Menu.Remix.MixedUI.OpTab._container
  id: _container
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: _container
  nameWithType: OpTab._container
  fullName: Menu.Remix.MixedUI.OpTab._container
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.OpTab._container</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected readonly FContainer _container
    return:
      type: Global.FContainer
    content.vb: Protected ReadOnly _container As FContainer
- uid: Menu.Remix.MixedUI.OpTab.#ctor(OptionInterface,System.String)
  commentId: M:Menu.Remix.MixedUI.OpTab.#ctor(OptionInterface,System.String)
  id: '#ctor(OptionInterface,System.String)'
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OpTab(OptionInterface, string)
  nameWithType: OpTab.OpTab(OptionInterface, string)
  fullName: Menu.Remix.MixedUI.OpTab.OpTab(OptionInterface, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.OpTab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public OpTab(OptionInterface owner, string name = "")
    parameters:
    - id: owner
      type: Global.OptionInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.#ctor(OptionInterface,System.String)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.#ctor(OptionInterface,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As OptionInterface, name As String = "")
  overload: Menu.Remix.MixedUI.OpTab.#ctor*
  nameWithType.vb: OpTab.New(OptionInterface, String)
  fullName.vb: Menu.Remix.MixedUI.OpTab.New(OptionInterface, String)
  name.vb: New(OptionInterface, String)
- uid: Menu.Remix.MixedUI.OpTab.AddItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.AddItems(Menu.Remix.MixedUI.UIelement[])
  id: AddItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: AddItems(params UIelement[])
  nameWithType: OpTab.AddItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.AddItems(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.AddItems(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddItems(params UIelement[] elements)
    parameters:
    - id: elements
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elements</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.AddItems(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddItems(ParamArray elements As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.AddItems*
  implements:
  - Menu.Remix.MixedUI.IHoldUIelements.AddItems(Menu.Remix.MixedUI.UIelement[])
  nameWithType.vb: OpTab.AddItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.AddItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: AddItems(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.RemoveItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.RemoveItems(Menu.Remix.MixedUI.UIelement[])
  id: RemoveItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: RemoveItems(params UIelement[])
  nameWithType: OpTab.RemoveItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.RemoveItems(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.RemoveItems(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveItems(params UIelement[] items)
    parameters:
    - id: items
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.RemoveItems(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveItems(ParamArray items As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.RemoveItems*
  nameWithType.vb: OpTab.RemoveItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.RemoveItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: RemoveItems(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.ShowItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.ShowItems(Menu.Remix.MixedUI.UIelement[])
  id: ShowItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: ShowItems(params UIelement[])
  nameWithType: OpTab.ShowItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.ShowItems(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.ShowItems(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ShowItems(params UIelement[] items)
    parameters:
    - id: items
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.ShowItems(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub ShowItems(ParamArray items As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.ShowItems*
  nameWithType.vb: OpTab.ShowItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.ShowItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: ShowItems(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.HideItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.HideItems(Menu.Remix.MixedUI.UIelement[])
  id: HideItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: HideItems(params UIelement[])
  nameWithType: OpTab.HideItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.HideItems(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.HideItems(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void HideItems(params UIelement[] items)
    parameters:
    - id: items
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.HideItems(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub HideItems(ParamArray items As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.HideItems*
  nameWithType.vb: OpTab.HideItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.HideItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: HideItems(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.DestroyItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.DestroyItems(Menu.Remix.MixedUI.UIelement[])
  id: DestroyItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: DestroyItems(params UIelement[])
  nameWithType: OpTab.DestroyItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.DestroyItems(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.DestroyItems(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void DestroyItems(params UIelement[] items)
    parameters:
    - id: items
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.DestroyItems(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub DestroyItems(ParamArray items As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.DestroyItems*
  nameWithType.vb: OpTab.DestroyItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.DestroyItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: DestroyItems(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])
  id: RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: RemoveItemsFromTab(params UIelement[])
  nameWithType: OpTab.RemoveItemsFromTab(params UIelement[])
  fullName: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(params Menu.Remix.MixedUI.UIelement[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void RemoveItemsFromTab(params UIelement[] items)
    parameters:
    - id: items
      type: Menu.Remix.MixedUI.UIelement[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>items</parameter>
            <parameter>M:Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(Menu.Remix.MixedUI.UIelement[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub RemoveItemsFromTab(ParamArray items As UIelement())
  overload: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab*
  nameWithType.vb: OpTab.RemoveItemsFromTab(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: RemoveItemsFromTab(ParamArray UIelement())
- uid: Menu.Remix.MixedUI.OpTab.isInactive
  commentId: P:Menu.Remix.MixedUI.OpTab.isInactive
  id: isInactive
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: isInactive
  nameWithType: OpTab.isInactive
  fullName: Menu.Remix.MixedUI.OpTab.isInactive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.OpTab.isInactive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isInactive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isInactive As Boolean
  overload: Menu.Remix.MixedUI.OpTab.isInactive*
- uid: Menu.Remix.MixedUI.OpTab.items
  commentId: P:Menu.Remix.MixedUI.OpTab.items
  id: items
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: items
  nameWithType: OpTab.items
  fullName: Menu.Remix.MixedUI.OpTab.items
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.OpTab.items</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HashSet<UIelement> items { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIelement}
    content.vb: Public Property items As HashSet(Of UIelement)
  overload: Menu.Remix.MixedUI.OpTab.items*
  implements:
  - Menu.Remix.MixedUI.IHoldUIelements.items
- uid: Menu.Remix.MixedUI.OpTab.focusables
  commentId: P:Menu.Remix.MixedUI.OpTab.focusables
  id: focusables
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: focusables
  nameWithType: OpTab.focusables
  fullName: Menu.Remix.MixedUI.OpTab.focusables
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.OpTab.focusables</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HashSet<UIfocusable> focusables { get; protected set; }
    parameters: []
    return:
      type: System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIfocusable}
    content.vb: Public Property focusables As HashSet(Of UIfocusable)
  overload: Menu.Remix.MixedUI.OpTab.focusables*
- uid: Menu.Remix.MixedUI.OpTab.IsTab
  commentId: P:Menu.Remix.MixedUI.OpTab.IsTab
  id: IsTab
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: IsTab
  nameWithType: OpTab.IsTab
  fullName: Menu.Remix.MixedUI.OpTab.IsTab
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.OpTab.IsTab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsTab { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsTab As Boolean
  overload: Menu.Remix.MixedUI.OpTab.IsTab*
  implements:
  - Menu.Remix.MixedUI.IHoldUIelements.IsTab
- uid: Menu.Remix.MixedUI.OpTab.CanvasSize
  commentId: P:Menu.Remix.MixedUI.OpTab.CanvasSize
  id: CanvasSize
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: CanvasSize
  nameWithType: OpTab.CanvasSize
  fullName: Menu.Remix.MixedUI.OpTab.CanvasSize
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.OpTab.CanvasSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 CanvasSize { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property CanvasSize As Vector2
  overload: Menu.Remix.MixedUI.OpTab.CanvasSize*
  implements:
  - Menu.Remix.MixedUI.IHoldUIelements.CanvasSize
- uid: Menu.Remix.MixedUI.OpTab.OnPreUpdate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPreUpdate
  id: OnPreUpdate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPreUpdate
  nameWithType: OpTab.OnPreUpdate
  fullName: Menu.Remix.MixedUI.OpTab.OnPreUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPreUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPreUpdate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPreUpdate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPostUpdate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPostUpdate
  id: OnPostUpdate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPostUpdate
  nameWithType: OpTab.OnPostUpdate
  fullName: Menu.Remix.MixedUI.OpTab.OnPostUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPostUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPostUpdate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPostUpdate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPreGrafUpdate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPreGrafUpdate
  id: OnPreGrafUpdate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPreGrafUpdate
  nameWithType: OpTab.OnPreGrafUpdate
  fullName: Menu.Remix.MixedUI.OpTab.OnPreGrafUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPreGrafUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnGrafUpdateHandler OnPreGrafUpdate
    return:
      type: Menu.Remix.MixedUI.OnGrafUpdateHandler
    content.vb: Public Event OnPreGrafUpdate As OnGrafUpdateHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPostGrafUpdate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPostGrafUpdate
  id: OnPostGrafUpdate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPostGrafUpdate
  nameWithType: OpTab.OnPostGrafUpdate
  fullName: Menu.Remix.MixedUI.OpTab.OnPostGrafUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPostGrafUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnGrafUpdateHandler OnPostGrafUpdate
    return:
      type: Menu.Remix.MixedUI.OnGrafUpdateHandler
    content.vb: Public Event OnPostGrafUpdate As OnGrafUpdateHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPreActivate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPreActivate
  id: OnPreActivate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPreActivate
  nameWithType: OpTab.OnPreActivate
  fullName: Menu.Remix.MixedUI.OpTab.OnPreActivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPreActivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPreActivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPreActivate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPostActivate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPostActivate
  id: OnPostActivate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPostActivate
  nameWithType: OpTab.OnPostActivate
  fullName: Menu.Remix.MixedUI.OpTab.OnPostActivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPostActivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPostActivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPostActivate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPreDeactivate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPreDeactivate
  id: OnPreDeactivate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPreDeactivate
  nameWithType: OpTab.OnPreDeactivate
  fullName: Menu.Remix.MixedUI.OpTab.OnPreDeactivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPreDeactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPreDeactivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPreDeactivate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPostDeactivate
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPostDeactivate
  id: OnPostDeactivate
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPostDeactivate
  nameWithType: OpTab.OnPostDeactivate
  fullName: Menu.Remix.MixedUI.OpTab.OnPostDeactivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPostDeactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPostDeactivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPostDeactivate As OnEventHandler
- uid: Menu.Remix.MixedUI.OpTab.OnPreUnload
  commentId: E:Menu.Remix.MixedUI.OpTab.OnPreUnload
  id: OnPreUnload
  parent: Menu.Remix.MixedUI.OpTab
  langs:
  - csharp
  - vb
  name: OnPreUnload
  nameWithType: OpTab.OnPreUnload
  fullName: Menu.Remix.MixedUI.OpTab.OnPreUnload
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.OpTab.OnPreUnload</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnPreUnload
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnPreUnload As OnEventHandler
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Menu.Remix.MixedUI.IHoldUIelements
  commentId: T:Menu.Remix.MixedUI.IHoldUIelements
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.IHoldUIelements.html
  name: IHoldUIelements
  nameWithType: IHoldUIelements
  fullName: Menu.Remix.MixedUI.IHoldUIelements
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.OptionInterface
  commentId: T:Global.OptionInterface
  isExternal: true
  href: OptionInterface.html
  name: OptionInterface
  nameWithType: OptionInterface
  fullName: OptionInterface
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Menu.Remix.MixedUI.OpTab.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab__ctor_OptionInterface_System_String_
  name: OpTab
  nameWithType: OpTab.OpTab
  fullName: Menu.Remix.MixedUI.OpTab.OpTab
  nameWithType.vb: OpTab.New
  fullName.vb: Menu.Remix.MixedUI.OpTab.New
  name.vb: New
- uid: Menu.Remix.MixedUI.OpTab.AddItems*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.AddItems
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_AddItems_Menu_Remix_MixedUI_UIelement___
  name: AddItems
  nameWithType: OpTab.AddItems
  fullName: Menu.Remix.MixedUI.OpTab.AddItems
- uid: Menu.Remix.MixedUI.IHoldUIelements.AddItems(Menu.Remix.MixedUI.UIelement[])
  commentId: M:Menu.Remix.MixedUI.IHoldUIelements.AddItems(Menu.Remix.MixedUI.UIelement[])
  parent: Menu.Remix.MixedUI.IHoldUIelements
  isExternal: true
  href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_AddItems_Menu_Remix_MixedUI_UIelement___
  name: AddItems(params UIelement[])
  nameWithType: IHoldUIelements.AddItems(params UIelement[])
  fullName: Menu.Remix.MixedUI.IHoldUIelements.AddItems(params Menu.Remix.MixedUI.UIelement[])
  nameWithType.vb: IHoldUIelements.AddItems(ParamArray UIelement())
  fullName.vb: Menu.Remix.MixedUI.IHoldUIelements.AddItems(ParamArray Menu.Remix.MixedUI.UIelement())
  name.vb: AddItems(ParamArray UIelement())
  spec.csharp:
  - uid: Menu.Remix.MixedUI.IHoldUIelements.AddItems(Menu.Remix.MixedUI.UIelement[])
    name: AddItems
    isExternal: true
    href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_AddItems_Menu_Remix_MixedUI_UIelement___
  - name: (
  - name: params
  - name: " "
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Menu.Remix.MixedUI.IHoldUIelements.AddItems(Menu.Remix.MixedUI.UIelement[])
    name: AddItems
    isExternal: true
    href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_AddItems_Menu_Remix_MixedUI_UIelement___
  - name: (
  - name: ParamArray
  - name: " "
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: (
  - name: )
  - name: )
- uid: Menu.Remix.MixedUI.UIelement[]
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html
  name: UIelement[]
  nameWithType: UIelement[]
  fullName: Menu.Remix.MixedUI.UIelement[]
  nameWithType.vb: UIelement()
  fullName.vb: Menu.Remix.MixedUI.UIelement()
  name.vb: UIelement()
  spec.csharp:
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: (
  - name: )
- uid: Menu.Remix.MixedUI.OpTab.RemoveItems*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.RemoveItems
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_RemoveItems_Menu_Remix_MixedUI_UIelement___
  name: RemoveItems
  nameWithType: OpTab.RemoveItems
  fullName: Menu.Remix.MixedUI.OpTab.RemoveItems
- uid: Menu.Remix.MixedUI.OpTab.ShowItems*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.ShowItems
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_ShowItems_Menu_Remix_MixedUI_UIelement___
  name: ShowItems
  nameWithType: OpTab.ShowItems
  fullName: Menu.Remix.MixedUI.OpTab.ShowItems
- uid: Menu.Remix.MixedUI.OpTab.HideItems*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.HideItems
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_HideItems_Menu_Remix_MixedUI_UIelement___
  name: HideItems
  nameWithType: OpTab.HideItems
  fullName: Menu.Remix.MixedUI.OpTab.HideItems
- uid: Menu.Remix.MixedUI.OpTab.DestroyItems*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.DestroyItems
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_DestroyItems_Menu_Remix_MixedUI_UIelement___
  name: DestroyItems
  nameWithType: OpTab.DestroyItems
  fullName: Menu.Remix.MixedUI.OpTab.DestroyItems
- uid: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_RemoveItemsFromTab_Menu_Remix_MixedUI_UIelement___
  name: RemoveItemsFromTab
  nameWithType: OpTab.RemoveItemsFromTab
  fullName: Menu.Remix.MixedUI.OpTab.RemoveItemsFromTab
- uid: Menu.Remix.MixedUI.OpTab.isInactive*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.isInactive
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_isInactive
  name: isInactive
  nameWithType: OpTab.isInactive
  fullName: Menu.Remix.MixedUI.OpTab.isInactive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.MixedUI.OpTab.items*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.items
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_items
  name: items
  nameWithType: OpTab.items
  fullName: Menu.Remix.MixedUI.OpTab.items
- uid: Menu.Remix.MixedUI.IHoldUIelements.items
  commentId: P:Menu.Remix.MixedUI.IHoldUIelements.items
  parent: Menu.Remix.MixedUI.IHoldUIelements
  isExternal: true
  href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_items
  name: items
  nameWithType: IHoldUIelements.items
  fullName: Menu.Remix.MixedUI.IHoldUIelements.items
- uid: System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIelement}
  commentId: T:System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIelement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<UIelement>
  nameWithType: HashSet<UIelement>
  fullName: System.Collections.Generic.HashSet<Menu.Remix.MixedUI.UIelement>
  nameWithType.vb: HashSet(Of UIelement)
  fullName.vb: System.Collections.Generic.HashSet(Of Menu.Remix.MixedUI.UIelement)
  name.vb: HashSet(Of UIelement)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.Remix.MixedUI.UIelement
    name: UIelement
    isExternal: true
    href: Menu.Remix.MixedUI.UIelement.html
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Menu.Remix.MixedUI.OpTab.focusables*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.focusables
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_focusables
  name: focusables
  nameWithType: OpTab.focusables
  fullName: Menu.Remix.MixedUI.OpTab.focusables
- uid: System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIfocusable}
  commentId: T:System.Collections.Generic.HashSet{Menu.Remix.MixedUI.UIfocusable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<UIfocusable>
  nameWithType: HashSet<UIfocusable>
  fullName: System.Collections.Generic.HashSet<Menu.Remix.MixedUI.UIfocusable>
  nameWithType.vb: HashSet(Of UIfocusable)
  fullName.vb: System.Collections.Generic.HashSet(Of Menu.Remix.MixedUI.UIfocusable)
  name.vb: HashSet(Of UIfocusable)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
    href: Menu.Remix.MixedUI.UIfocusable.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.Remix.MixedUI.UIfocusable
    name: UIfocusable
    isExternal: true
    href: Menu.Remix.MixedUI.UIfocusable.html
  - name: )
- uid: Menu.Remix.MixedUI.OpTab.IsTab*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.IsTab
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_IsTab
  name: IsTab
  nameWithType: OpTab.IsTab
  fullName: Menu.Remix.MixedUI.OpTab.IsTab
- uid: Menu.Remix.MixedUI.IHoldUIelements.IsTab
  commentId: P:Menu.Remix.MixedUI.IHoldUIelements.IsTab
  parent: Menu.Remix.MixedUI.IHoldUIelements
  isExternal: true
  href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_IsTab
  name: IsTab
  nameWithType: IHoldUIelements.IsTab
  fullName: Menu.Remix.MixedUI.IHoldUIelements.IsTab
- uid: Menu.Remix.MixedUI.OpTab.CanvasSize*
  commentId: Overload:Menu.Remix.MixedUI.OpTab.CanvasSize
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html#Menu_Remix_MixedUI_OpTab_CanvasSize
  name: CanvasSize
  nameWithType: OpTab.CanvasSize
  fullName: Menu.Remix.MixedUI.OpTab.CanvasSize
- uid: Menu.Remix.MixedUI.IHoldUIelements.CanvasSize
  commentId: P:Menu.Remix.MixedUI.IHoldUIelements.CanvasSize
  parent: Menu.Remix.MixedUI.IHoldUIelements
  isExternal: true
  href: Menu.Remix.MixedUI.IHoldUIelements.html#Menu_Remix_MixedUI_IHoldUIelements_CanvasSize
  name: CanvasSize
  nameWithType: IHoldUIelements.CanvasSize
  fullName: Menu.Remix.MixedUI.IHoldUIelements.CanvasSize
- uid: Menu.Remix.MixedUI.OnEventHandler
  commentId: T:Menu.Remix.MixedUI.OnEventHandler
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OnEventHandler.html
  name: OnEventHandler
  nameWithType: OnEventHandler
  fullName: Menu.Remix.MixedUI.OnEventHandler
- uid: Menu.Remix.MixedUI.OnGrafUpdateHandler
  commentId: T:Menu.Remix.MixedUI.OnGrafUpdateHandler
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OnGrafUpdateHandler.html
  name: OnGrafUpdateHandler
  nameWithType: OnGrafUpdateHandler
  fullName: Menu.Remix.MixedUI.OnGrafUpdateHandler
