### YamlMime:ManagedReference
items:
- uid: Global.Deer.PlayerInAntlers
  commentId: T:Global.Deer.PlayerInAntlers
  id: Deer.PlayerInAntlers
  parent: Global
  children:
  - Global.Deer.PlayerInAntlers.#ctor(Player,Deer)
  - Global.Deer.PlayerInAntlers.FaceDir
  - Global.Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)
  - Global.Deer.PlayerInAntlers.Update(System.Boolean)
  - Global.Deer.PlayerInAntlers.antlerChunk
  - Global.Deer.PlayerInAntlers.antlers
  - Global.Deer.PlayerInAntlers.climbGoal
  - Global.Deer.PlayerInAntlers.dangle
  - Global.Deer.PlayerInAntlers.dbSpr
  - Global.Deer.PlayerInAntlers.dbSpr2
  - Global.Deer.PlayerInAntlers.dbSpr3
  - Global.Deer.PlayerInAntlers.deer
  - Global.Deer.PlayerInAntlers.handGrabPoints
  - Global.Deer.PlayerInAntlers.movProg
  - Global.Deer.PlayerInAntlers.nextStance
  - Global.Deer.PlayerInAntlers.oddHand
  - Global.Deer.PlayerInAntlers.oddHandGrip
  - Global.Deer.PlayerInAntlers.player
  - Global.Deer.PlayerInAntlers.playerDisconnected
  - Global.Deer.PlayerInAntlers.stance
  - Global.Deer.PlayerInAntlers.turnAroundCoolDown
  - Global.Deer.PlayerInAntlers.vultures
  langs:
  - csharp
  - vb
  name: Deer.PlayerInAntlers
  nameWithType: Deer.PlayerInAntlers
  fullName: Deer.PlayerInAntlers
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Deer.PlayerInAntlers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Deer.PlayerInAntlers
    content.vb: Public Class Deer.PlayerInAntlers
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Deer.PlayerInAntlers.player
  commentId: F:Global.Deer.PlayerInAntlers.player
  id: player
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: player
  nameWithType: Deer.PlayerInAntlers.player
  fullName: Deer.PlayerInAntlers.player
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.player</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player player
    return:
      type: Global.Player
    content.vb: Public player As Player
- uid: Global.Deer.PlayerInAntlers.deer
  commentId: F:Global.Deer.PlayerInAntlers.deer
  id: deer
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: deer
  nameWithType: Deer.PlayerInAntlers.deer
  fullName: Deer.PlayerInAntlers.deer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.deer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Deer deer
    return:
      type: Global.Deer
    content.vb: Public deer As Deer
- uid: Global.Deer.PlayerInAntlers.antlers
  commentId: F:Global.Deer.PlayerInAntlers.antlers
  id: antlers
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: antlers
  nameWithType: Deer.PlayerInAntlers.antlers
  fullName: Deer.PlayerInAntlers.antlers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.antlers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DeerGraphics.Antlers antlers
    return:
      type: Global.DeerGraphics.Antlers
    content.vb: Public antlers As DeerGraphics.Antlers
- uid: Global.Deer.PlayerInAntlers.antlerChunk
  commentId: F:Global.Deer.PlayerInAntlers.antlerChunk
  id: antlerChunk
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: antlerChunk
  nameWithType: Deer.PlayerInAntlers.antlerChunk
  fullName: Deer.PlayerInAntlers.antlerChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.antlerChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk antlerChunk
    return:
      type: Global.BodyChunk
    content.vb: Public antlerChunk As BodyChunk
- uid: Global.Deer.PlayerInAntlers.stance
  commentId: F:Global.Deer.PlayerInAntlers.stance
  id: stance
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: stance
  nameWithType: Deer.PlayerInAntlers.stance
  fullName: Deer.PlayerInAntlers.stance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.stance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Deer.PlayerInAntlers.GrabStance stance
    return:
      type: Global.Deer.PlayerInAntlers.GrabStance
    content.vb: Public stance As Deer.PlayerInAntlers.GrabStance
- uid: Global.Deer.PlayerInAntlers.nextStance
  commentId: F:Global.Deer.PlayerInAntlers.nextStance
  id: nextStance
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: nextStance
  nameWithType: Deer.PlayerInAntlers.nextStance
  fullName: Deer.PlayerInAntlers.nextStance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.nextStance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Deer.PlayerInAntlers.GrabStance nextStance
    return:
      type: Global.Deer.PlayerInAntlers.GrabStance
    content.vb: Public nextStance As Deer.PlayerInAntlers.GrabStance
- uid: Global.Deer.PlayerInAntlers.movProg
  commentId: F:Global.Deer.PlayerInAntlers.movProg
  id: movProg
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: movProg
  nameWithType: Deer.PlayerInAntlers.movProg
  fullName: Deer.PlayerInAntlers.movProg
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.movProg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float movProg
    return:
      type: System.Single
    content.vb: Public movProg As Single
- uid: Global.Deer.PlayerInAntlers.climbGoal
  commentId: F:Global.Deer.PlayerInAntlers.climbGoal
  id: climbGoal
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: climbGoal
  nameWithType: Deer.PlayerInAntlers.climbGoal
  fullName: Deer.PlayerInAntlers.climbGoal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.climbGoal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 climbGoal
    return:
      type: UnityEngine.Vector2
    content.vb: Public climbGoal As Vector2
- uid: Global.Deer.PlayerInAntlers.dangle
  commentId: F:Global.Deer.PlayerInAntlers.dangle
  id: dangle
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: dangle
  nameWithType: Deer.PlayerInAntlers.dangle
  fullName: Deer.PlayerInAntlers.dangle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.dangle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dangle
    return:
      type: System.Boolean
    content.vb: Public dangle As Boolean
- uid: Global.Deer.PlayerInAntlers.playerDisconnected
  commentId: F:Global.Deer.PlayerInAntlers.playerDisconnected
  id: playerDisconnected
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: playerDisconnected
  nameWithType: Deer.PlayerInAntlers.playerDisconnected
  fullName: Deer.PlayerInAntlers.playerDisconnected
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.playerDisconnected</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool playerDisconnected
    return:
      type: System.Boolean
    content.vb: Public playerDisconnected As Boolean
- uid: Global.Deer.PlayerInAntlers.dbSpr
  commentId: F:Global.Deer.PlayerInAntlers.dbSpr
  id: dbSpr
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: dbSpr
  nameWithType: Deer.PlayerInAntlers.dbSpr
  fullName: Deer.PlayerInAntlers.dbSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.dbSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite dbSpr
    return:
      type: Global.DebugSprite
    content.vb: Public dbSpr As DebugSprite
- uid: Global.Deer.PlayerInAntlers.dbSpr2
  commentId: F:Global.Deer.PlayerInAntlers.dbSpr2
  id: dbSpr2
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: dbSpr2
  nameWithType: Deer.PlayerInAntlers.dbSpr2
  fullName: Deer.PlayerInAntlers.dbSpr2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.dbSpr2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite dbSpr2
    return:
      type: Global.DebugSprite
    content.vb: Public dbSpr2 As DebugSprite
- uid: Global.Deer.PlayerInAntlers.dbSpr3
  commentId: F:Global.Deer.PlayerInAntlers.dbSpr3
  id: dbSpr3
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: dbSpr3
  nameWithType: Deer.PlayerInAntlers.dbSpr3
  fullName: Deer.PlayerInAntlers.dbSpr3
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.dbSpr3</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite dbSpr3
    return:
      type: Global.DebugSprite
    content.vb: Public dbSpr3 As DebugSprite
- uid: Global.Deer.PlayerInAntlers.handGrabPoints
  commentId: F:Global.Deer.PlayerInAntlers.handGrabPoints
  id: handGrabPoints
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: handGrabPoints
  nameWithType: Deer.PlayerInAntlers.handGrabPoints
  fullName: Deer.PlayerInAntlers.handGrabPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.handGrabPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] handGrabPoints
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public handGrabPoints As Vector2()
- uid: Global.Deer.PlayerInAntlers.oddHandGrip
  commentId: F:Global.Deer.PlayerInAntlers.oddHandGrip
  id: oddHandGrip
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: oddHandGrip
  nameWithType: Deer.PlayerInAntlers.oddHandGrip
  fullName: Deer.PlayerInAntlers.oddHandGrip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.oddHandGrip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Deer.PlayerInAntlers.AntlerPoint oddHandGrip
    return:
      type: Global.Deer.PlayerInAntlers.AntlerPoint
    content.vb: Public oddHandGrip As Deer.PlayerInAntlers.AntlerPoint
- uid: Global.Deer.PlayerInAntlers.oddHand
  commentId: F:Global.Deer.PlayerInAntlers.oddHand
  id: oddHand
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: oddHand
  nameWithType: Deer.PlayerInAntlers.oddHand
  fullName: Deer.PlayerInAntlers.oddHand
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.oddHand</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int oddHand
    return:
      type: System.Int32
    content.vb: Public oddHand As Integer
- uid: Global.Deer.PlayerInAntlers.vultures
  commentId: F:Global.Deer.PlayerInAntlers.vultures
  id: vultures
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: vultures
  nameWithType: Deer.PlayerInAntlers.vultures
  fullName: Deer.PlayerInAntlers.vultures
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.vultures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<VultureAbstractAI> vultures
    return:
      type: System.Collections.Generic.List{VultureAbstractAI}
    content.vb: Public vultures As List(Of VultureAbstractAI)
- uid: Global.Deer.PlayerInAntlers.turnAroundCoolDown
  commentId: F:Global.Deer.PlayerInAntlers.turnAroundCoolDown
  id: turnAroundCoolDown
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: turnAroundCoolDown
  nameWithType: Deer.PlayerInAntlers.turnAroundCoolDown
  fullName: Deer.PlayerInAntlers.turnAroundCoolDown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Deer.PlayerInAntlers.turnAroundCoolDown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int turnAroundCoolDown
    return:
      type: System.Int32
    content.vb: Public turnAroundCoolDown As Integer
- uid: Global.Deer.PlayerInAntlers.#ctor(Player,Deer)
  commentId: M:Global.Deer.PlayerInAntlers.#ctor(Player,Deer)
  id: '#ctor(Player,Deer)'
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: PlayerInAntlers(Player, Deer)
  nameWithType: Deer.PlayerInAntlers.PlayerInAntlers(Player, Deer)
  fullName: Deer.PlayerInAntlers.PlayerInAntlers(Player, Deer)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Deer.PlayerInAntlers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerInAntlers(Player player, Deer deer)
    parameters:
    - id: player
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>player</parameter>
            <parameter>M:Deer.PlayerInAntlers.#ctor(Player,Deer)</parameter>
          </include>
        </markup>
    - id: deer
      type: Global.Deer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deer</parameter>
            <parameter>M:Deer.PlayerInAntlers.#ctor(Player,Deer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(player As Player, deer As Deer)
  overload: Global.Deer.PlayerInAntlers.#ctor*
  nameWithType.vb: Deer.PlayerInAntlers.New(Player, Deer)
  fullName.vb: Deer.PlayerInAntlers.New(Player, Deer)
  name.vb: New(Player, Deer)
- uid: Global.Deer.PlayerInAntlers.Update(System.Boolean)
  commentId: M:Global.Deer.PlayerInAntlers.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Deer.PlayerInAntlers.Update(bool)
  fullName: Deer.PlayerInAntlers.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Deer.PlayerInAntlers.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Deer.PlayerInAntlers.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Update(eu As Boolean)
  overload: Global.Deer.PlayerInAntlers.Update*
  nameWithType.vb: Deer.PlayerInAntlers.Update(Boolean)
  fullName.vb: Deer.PlayerInAntlers.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)
  commentId: M:Global.Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)
  id: PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: PlaySpaceCoordinate(int, int, float)
  nameWithType: Deer.PlayerInAntlers.PlaySpaceCoordinate(int, int, float)
  fullName: Deer.PlayerInAntlers.PlaySpaceCoordinate(int, int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 PlaySpaceCoordinate(int part, int segment, float side)
    parameters:
    - id: part
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>part</parameter>
            <parameter>M:Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: segment
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segment</parameter>
            <parameter>M:Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: side
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Deer.PlayerInAntlers.PlaySpaceCoordinate(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlaySpaceCoordinate(part As Integer, segment As Integer, side As Single) As Vector2
  overload: Global.Deer.PlayerInAntlers.PlaySpaceCoordinate*
  nameWithType.vb: Deer.PlayerInAntlers.PlaySpaceCoordinate(Integer, Integer, Single)
  fullName.vb: Deer.PlayerInAntlers.PlaySpaceCoordinate(Integer, Integer, Single)
  name.vb: PlaySpaceCoordinate(Integer, Integer, Single)
- uid: Global.Deer.PlayerInAntlers.FaceDir
  commentId: P:Global.Deer.PlayerInAntlers.FaceDir
  id: FaceDir
  parent: Global.Deer.PlayerInAntlers
  langs:
  - csharp
  - vb
  name: FaceDir
  nameWithType: Deer.PlayerInAntlers.FaceDir
  fullName: Deer.PlayerInAntlers.FaceDir
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Deer.PlayerInAntlers.FaceDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float FaceDir { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FaceDir As Single
  overload: Global.Deer.PlayerInAntlers.FaceDir*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Deer
  commentId: T:Global.Deer
  isExternal: true
  href: Deer.html
  name: Deer
  nameWithType: Deer
  fullName: Deer
- uid: Global.DeerGraphics.Antlers
  commentId: T:Global.DeerGraphics.Antlers
  isExternal: true
  href: DeerGraphics.html
  name: DeerGraphics.Antlers
  nameWithType: DeerGraphics.Antlers
  fullName: DeerGraphics.Antlers
  spec.csharp:
  - uid: Global.DeerGraphics
    name: DeerGraphics
    isExternal: true
    href: DeerGraphics.html
  - name: .
  - uid: Global.DeerGraphics.Antlers
    name: Antlers
    isExternal: true
    href: DeerGraphics.Antlers.html
  spec.vb:
  - uid: Global.DeerGraphics
    name: DeerGraphics
    isExternal: true
    href: DeerGraphics.html
  - name: .
  - uid: Global.DeerGraphics.Antlers
    name: Antlers
    isExternal: true
    href: DeerGraphics.Antlers.html
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.Deer.PlayerInAntlers.GrabStance
  commentId: T:Global.Deer.PlayerInAntlers.GrabStance
  isExternal: true
  href: Deer.html
  name: Deer.PlayerInAntlers.GrabStance
  nameWithType: Deer.PlayerInAntlers.GrabStance
  fullName: Deer.PlayerInAntlers.GrabStance
  spec.csharp:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers.GrabStance
    name: GrabStance
    isExternal: true
    href: Deer.PlayerInAntlers.GrabStance.html
  spec.vb:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers.GrabStance
    name: GrabStance
    isExternal: true
    href: Deer.PlayerInAntlers.GrabStance.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.DebugSprite
  commentId: T:Global.DebugSprite
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite
  nameWithType: DebugSprite
  fullName: DebugSprite
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Global.Deer.PlayerInAntlers.AntlerPoint
  commentId: T:Global.Deer.PlayerInAntlers.AntlerPoint
  isExternal: true
  href: Deer.html
  name: Deer.PlayerInAntlers.AntlerPoint
  nameWithType: Deer.PlayerInAntlers.AntlerPoint
  fullName: Deer.PlayerInAntlers.AntlerPoint
  spec.csharp:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers.AntlerPoint
    name: AntlerPoint
    isExternal: true
    href: Deer.PlayerInAntlers.AntlerPoint.html
  spec.vb:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers.AntlerPoint
    name: AntlerPoint
    isExternal: true
    href: Deer.PlayerInAntlers.AntlerPoint.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{VultureAbstractAI}
  commentId: T:System.Collections.Generic.List{VultureAbstractAI}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<VultureAbstractAI>
  nameWithType: List<VultureAbstractAI>
  fullName: System.Collections.Generic.List<VultureAbstractAI>
  nameWithType.vb: List(Of VultureAbstractAI)
  fullName.vb: System.Collections.Generic.List(Of VultureAbstractAI)
  name.vb: List(Of VultureAbstractAI)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.VultureAbstractAI
    name: VultureAbstractAI
    isExternal: true
    href: VultureAbstractAI.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.VultureAbstractAI
    name: VultureAbstractAI
    isExternal: true
    href: VultureAbstractAI.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.Deer.PlayerInAntlers.#ctor*
  commentId: Overload:Global.Deer.PlayerInAntlers.#ctor
  isExternal: true
  href: Global.Deer.PlayerInAntlers.html#Deer_PlayerInAntlers__ctor_Player_Deer_
  name: PlayerInAntlers
  nameWithType: Deer.PlayerInAntlers.PlayerInAntlers
  fullName: Deer.PlayerInAntlers.PlayerInAntlers
  nameWithType.vb: Deer.PlayerInAntlers.New
  fullName.vb: Deer.PlayerInAntlers.New
  name.vb: New
- uid: Global.Deer.PlayerInAntlers.Update*
  commentId: Overload:Global.Deer.PlayerInAntlers.Update
  isExternal: true
  href: Global.Deer.PlayerInAntlers.html#Deer_PlayerInAntlers_Update_System_Boolean_
  name: Update
  nameWithType: Deer.PlayerInAntlers.Update
  fullName: Deer.PlayerInAntlers.Update
- uid: Global.Deer.PlayerInAntlers.PlaySpaceCoordinate*
  commentId: Overload:Global.Deer.PlayerInAntlers.PlaySpaceCoordinate
  isExternal: true
  href: Global.Deer.PlayerInAntlers.html#Deer_PlayerInAntlers_PlaySpaceCoordinate_System_Int32_System_Int32_System_Single_
  name: PlaySpaceCoordinate
  nameWithType: Deer.PlayerInAntlers.PlaySpaceCoordinate
  fullName: Deer.PlayerInAntlers.PlaySpaceCoordinate
- uid: Global.Deer.PlayerInAntlers.FaceDir*
  commentId: Overload:Global.Deer.PlayerInAntlers.FaceDir
  isExternal: true
  href: Global.Deer.PlayerInAntlers.html#Deer_PlayerInAntlers_FaceDir
  name: FaceDir
  nameWithType: Deer.PlayerInAntlers.FaceDir
  fullName: Deer.PlayerInAntlers.FaceDir
