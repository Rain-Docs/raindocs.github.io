### YamlMime:ManagedReference
items:
- uid: Global.RXColorExtensions
  commentId: T:Global.RXColorExtensions
  id: RXColorExtensions
  parent: Global
  children:
  - Global.RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)
  - Global.RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)
  - Global.RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)
  langs:
  - csharp
  - vb
  name: RXColorExtensions
  nameWithType: RXColorExtensions
  fullName: RXColorExtensions
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXColorExtensions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class RXColorExtensions
    content.vb: Public Module RXColorExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)
  commentId: M:Global.RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)
  id: CloneWithNewAlpha(UnityEngine.Color,System.Single)
  isExtensionMethod: true
  parent: Global.RXColorExtensions
  langs:
  - csharp
  - vb
  name: CloneWithNewAlpha(Color, float)
  nameWithType: RXColorExtensions.CloneWithNewAlpha(Color, float)
  fullName: RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color CloneWithNewAlpha(this Color color, float alpha)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: alpha
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alpha</parameter>
            <parameter>M:RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneWithNewAlpha(color As Color, alpha As Single) As Color
  overload: Global.RXColorExtensions.CloneWithNewAlpha*
  nameWithType.vb: RXColorExtensions.CloneWithNewAlpha(Color, Single)
  fullName.vb: RXColorExtensions.CloneWithNewAlpha(UnityEngine.Color, Single)
  name.vb: CloneWithNewAlpha(Color, Single)
- uid: Global.RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)
  commentId: M:Global.RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)
  id: CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)
  isExtensionMethod: true
  parent: Global.RXColorExtensions
  langs:
  - csharp
  - vb
  name: CloneWithMultipliedAlpha(Color, float)
  nameWithType: RXColorExtensions.CloneWithMultipliedAlpha(Color, float)
  fullName: RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color CloneWithMultipliedAlpha(this Color color, float alpha)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    - id: alpha
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alpha</parameter>
            <parameter>M:RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CloneWithMultipliedAlpha(color As Color, alpha As Single) As Color
  overload: Global.RXColorExtensions.CloneWithMultipliedAlpha*
  nameWithType.vb: RXColorExtensions.CloneWithMultipliedAlpha(Color, Single)
  fullName.vb: RXColorExtensions.CloneWithMultipliedAlpha(UnityEngine.Color, Single)
  name.vb: CloneWithMultipliedAlpha(Color, Single)
- uid: Global.RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)
  commentId: M:Global.RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)
  id: ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)
  isExtensionMethod: true
  parent: Global.RXColorExtensions
  langs:
  - csharp
  - vb
  name: ApplyMultipliedAlpha(Color, ref Color, float)
  nameWithType: RXColorExtensions.ApplyMultipliedAlpha(Color, ref Color, float)
  fullName: RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color, ref UnityEngine.Color, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ApplyMultipliedAlpha(this Color color, ref Color targetColor, float alpha)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)</parameter>
          </include>
        </markup>
    - id: targetColor
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>targetColor</parameter>
            <parameter>M:RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)</parameter>
          </include>
        </markup>
    - id: alpha
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alpha</parameter>
            <parameter>M:RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color,UnityEngine.Color@,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub ApplyMultipliedAlpha(color As Color, targetColor As Color, alpha As Single)
  overload: Global.RXColorExtensions.ApplyMultipliedAlpha*
  nameWithType.vb: RXColorExtensions.ApplyMultipliedAlpha(Color, Color, Single)
  fullName.vb: RXColorExtensions.ApplyMultipliedAlpha(UnityEngine.Color, UnityEngine.Color, Single)
  name.vb: ApplyMultipliedAlpha(Color, Color, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXColorExtensions.CloneWithNewAlpha*
  commentId: Overload:Global.RXColorExtensions.CloneWithNewAlpha
  isExternal: true
  href: Global.RXColorExtensions.html#RXColorExtensions_CloneWithNewAlpha_UnityEngine_Color_System_Single_
  name: CloneWithNewAlpha
  nameWithType: RXColorExtensions.CloneWithNewAlpha
  fullName: RXColorExtensions.CloneWithNewAlpha
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RXColorExtensions.CloneWithMultipliedAlpha*
  commentId: Overload:Global.RXColorExtensions.CloneWithMultipliedAlpha
  isExternal: true
  href: Global.RXColorExtensions.html#RXColorExtensions_CloneWithMultipliedAlpha_UnityEngine_Color_System_Single_
  name: CloneWithMultipliedAlpha
  nameWithType: RXColorExtensions.CloneWithMultipliedAlpha
  fullName: RXColorExtensions.CloneWithMultipliedAlpha
- uid: Global.RXColorExtensions.ApplyMultipliedAlpha*
  commentId: Overload:Global.RXColorExtensions.ApplyMultipliedAlpha
  isExternal: true
  href: Global.RXColorExtensions.html#RXColorExtensions_ApplyMultipliedAlpha_UnityEngine_Color_UnityEngine_Color__System_Single_
  name: ApplyMultipliedAlpha
  nameWithType: RXColorExtensions.ApplyMultipliedAlpha
  fullName: RXColorExtensions.ApplyMultipliedAlpha
