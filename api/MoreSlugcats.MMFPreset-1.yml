### YamlMime:ManagedReference
items:
- uid: MoreSlugcats.MMFPreset`1
  commentId: T:MoreSlugcats.MMFPreset`1
  id: MMFPreset`1
  parent: MoreSlugcats
  children:
  - MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)
  - MoreSlugcats.MMFPreset`1.casualValue
  - MoreSlugcats.MMFPreset`1.classicValue
  - MoreSlugcats.MMFPreset`1.config
  - MoreSlugcats.MMFPreset`1.remixValue
  langs:
  - csharp
  - vb
  name: MMFPreset<T>
  nameWithType: MMFPreset<T>
  fullName: MoreSlugcats.MMFPreset<T>
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MoreSlugcats.MMFPreset`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class MMFPreset<T>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:MoreSlugcats.MMFPreset`1</parameter>
          </include>
        </markup>
    content.vb: Public Class MMFPreset(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: MMFPreset(Of T)
  fullName.vb: MoreSlugcats.MMFPreset(Of T)
  name.vb: MMFPreset(Of T)
- uid: MoreSlugcats.MMFPreset`1.config
  commentId: F:MoreSlugcats.MMFPreset`1.config
  id: config
  parent: MoreSlugcats.MMFPreset`1
  langs:
  - csharp
  - vb
  name: config
  nameWithType: MMFPreset<T>.config
  fullName: MoreSlugcats.MMFPreset<T>.config
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.MMFPreset`1.config</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Configurable<T> config
    return:
      type: Global.Configurable{{T}}
    content.vb: Public config As Configurable(Of T)
  nameWithType.vb: MMFPreset(Of T).config
  fullName.vb: MoreSlugcats.MMFPreset(Of T).config
- uid: MoreSlugcats.MMFPreset`1.remixValue
  commentId: F:MoreSlugcats.MMFPreset`1.remixValue
  id: remixValue
  parent: MoreSlugcats.MMFPreset`1
  langs:
  - csharp
  - vb
  name: remixValue
  nameWithType: MMFPreset<T>.remixValue
  fullName: MoreSlugcats.MMFPreset<T>.remixValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.MMFPreset`1.remixValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public T remixValue
    return:
      type: '{T}'
    content.vb: Public remixValue As T
  nameWithType.vb: MMFPreset(Of T).remixValue
  fullName.vb: MoreSlugcats.MMFPreset(Of T).remixValue
- uid: MoreSlugcats.MMFPreset`1.classicValue
  commentId: F:MoreSlugcats.MMFPreset`1.classicValue
  id: classicValue
  parent: MoreSlugcats.MMFPreset`1
  langs:
  - csharp
  - vb
  name: classicValue
  nameWithType: MMFPreset<T>.classicValue
  fullName: MoreSlugcats.MMFPreset<T>.classicValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.MMFPreset`1.classicValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public T classicValue
    return:
      type: '{T}'
    content.vb: Public classicValue As T
  nameWithType.vb: MMFPreset(Of T).classicValue
  fullName.vb: MoreSlugcats.MMFPreset(Of T).classicValue
- uid: MoreSlugcats.MMFPreset`1.casualValue
  commentId: F:MoreSlugcats.MMFPreset`1.casualValue
  id: casualValue
  parent: MoreSlugcats.MMFPreset`1
  langs:
  - csharp
  - vb
  name: casualValue
  nameWithType: MMFPreset<T>.casualValue
  fullName: MoreSlugcats.MMFPreset<T>.casualValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MoreSlugcats.MMFPreset`1.casualValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public T casualValue
    return:
      type: '{T}'
    content.vb: Public casualValue As T
  nameWithType.vb: MMFPreset(Of T).casualValue
  fullName.vb: MoreSlugcats.MMFPreset(Of T).casualValue
- uid: MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)
  commentId: M:MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)
  id: '#ctor(Configurable{`0},`0,`0,`0)'
  parent: MoreSlugcats.MMFPreset`1
  langs:
  - csharp
  - vb
  name: MMFPreset(Configurable<T>, T, T, T)
  nameWithType: MMFPreset<T>.MMFPreset(Configurable<T>, T, T, T)
  fullName: MoreSlugcats.MMFPreset<T>.MMFPreset(Configurable<T>, T, T, T)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: MoreSlugcats
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MoreSlugcats.MMFPreset`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MMFPreset(Configurable<T> config, T remixValue, T classicValue, T casualValue)
    parameters:
    - id: config
      type: Global.Configurable{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>config</parameter>
            <parameter>M:MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)</parameter>
          </include>
        </markup>
    - id: remixValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>remixValue</parameter>
            <parameter>M:MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)</parameter>
          </include>
        </markup>
    - id: classicValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>classicValue</parameter>
            <parameter>M:MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)</parameter>
          </include>
        </markup>
    - id: casualValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>casualValue</parameter>
            <parameter>M:MoreSlugcats.MMFPreset`1.#ctor(Configurable{`0},`0,`0,`0)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(config As Configurable(Of T), remixValue As T, classicValue As T, casualValue As T)
  overload: MoreSlugcats.MMFPreset`1.#ctor*
  nameWithType.vb: MMFPreset(Of T).New(Configurable(Of T), T, T, T)
  fullName.vb: MoreSlugcats.MMFPreset(Of T).New(Configurable(Of T), T, T, T)
  name.vb: New(Configurable(Of T), T, T, T)
references:
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Configurable{{T}}
  commentId: T:Global.Configurable{``0}
  definition: Global.Configurable`1
  href: Configurable-1.html
  name: Configurable<T>
  nameWithType: Configurable<T>
  fullName: Configurable<T>
  nameWithType.vb: Configurable(Of T)
  fullName.vb: Configurable(Of T)
  name.vb: Configurable(Of T)
  spec.csharp:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.Configurable`1
  commentId: T:Global.Configurable`1
  isExternal: true
  href: Configurable-1.html
  name: Configurable<T>
  nameWithType: Configurable<T>
  fullName: Configurable<T>
  nameWithType.vb: Configurable(Of T)
  fullName.vb: Configurable(Of T)
  name.vb: Configurable(Of T)
  spec.csharp:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Global.Configurable`1
    name: Configurable
    isExternal: true
    href: Configurable-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: MoreSlugcats.MMFPreset`1.#ctor*
  commentId: Overload:MoreSlugcats.MMFPreset`1.#ctor
  isExternal: true
  href: MoreSlugcats.MMFPreset-1.html#MoreSlugcats_MMFPreset_1__ctor_Configurable__0___0__0__0_
  name: MMFPreset
  nameWithType: MMFPreset<T>.MMFPreset
  fullName: MoreSlugcats.MMFPreset<T>.MMFPreset
  nameWithType.vb: MMFPreset(Of T).New
  fullName.vb: MoreSlugcats.MMFPreset(Of T).New
  name.vb: New
