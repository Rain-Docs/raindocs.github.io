### YamlMime:ManagedReference
items:
- uid: Global.LightBeam
  commentId: T:Global.LightBeam
  id: LightBeam
  parent: Global
  children:
  - Global.LightBeam.#ctor(PlacedObject)
  - Global.LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.LightBeam.BlinkFade
  - Global.LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.LightBeam.GetIdealGridDiv
  - Global.LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)
  - Global.LightBeam.Update(System.Boolean)
  - Global.LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)
  - Global.LightBeam.blinkRate
  - Global.LightBeam.blinkTicker
  - Global.LightBeam.blinkType
  - Global.LightBeam.color
  - Global.LightBeam.environmentColor
  - Global.LightBeam.lastCamPos
  - Global.LightBeam.meshDirty
  - Global.LightBeam.nightFade
  - Global.LightBeam.nightLight
  - Global.LightBeam.paletteLitColor
  - Global.LightBeam.placedObject
  - Global.LightBeam.quad
  - Global.LightBeam.verts
  langs:
  - csharp
  - vb
  name: LightBeam
  nameWithType: LightBeam
  fullName: LightBeam
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LightBeam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LightBeam : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class LightBeam Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LightBeam.placedObject
  commentId: F:Global.LightBeam.placedObject
  id: placedObject
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: placedObject
  nameWithType: LightBeam.placedObject
  fullName: LightBeam.placedObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.placedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject placedObject
    return:
      type: Global.PlacedObject
    content.vb: Public placedObject As PlacedObject
- uid: Global.LightBeam.quad
  commentId: F:Global.LightBeam.quad
  id: quad
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: quad
  nameWithType: LightBeam.quad
  fullName: LightBeam.quad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.quad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] quad
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public quad As Vector2()
- uid: Global.LightBeam.verts
  commentId: F:Global.LightBeam.verts
  id: verts
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: verts
  nameWithType: LightBeam.verts
  fullName: LightBeam.verts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.verts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] verts
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public verts As Vector2()
- uid: Global.LightBeam.meshDirty
  commentId: F:Global.LightBeam.meshDirty
  id: meshDirty
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: meshDirty
  nameWithType: LightBeam.meshDirty
  fullName: LightBeam.meshDirty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.meshDirty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool meshDirty
    return:
      type: System.Boolean
    content.vb: Public meshDirty As Boolean
- uid: Global.LightBeam.lastCamPos
  commentId: F:Global.LightBeam.lastCamPos
  id: lastCamPos
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: lastCamPos
  nameWithType: LightBeam.lastCamPos
  fullName: LightBeam.lastCamPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.lastCamPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastCamPos
    return:
      type: System.Int32
    content.vb: Public lastCamPos As Integer
- uid: Global.LightBeam.environmentColor
  commentId: F:Global.LightBeam.environmentColor
  id: environmentColor
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: environmentColor
  nameWithType: LightBeam.environmentColor
  fullName: LightBeam.environmentColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.environmentColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color environmentColor
    return:
      type: UnityEngine.Color
    content.vb: Public environmentColor As Color
- uid: Global.LightBeam.paletteLitColor
  commentId: F:Global.LightBeam.paletteLitColor
  id: paletteLitColor
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: paletteLitColor
  nameWithType: LightBeam.paletteLitColor
  fullName: LightBeam.paletteLitColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.paletteLitColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color paletteLitColor
    return:
      type: UnityEngine.Color
    content.vb: Public paletteLitColor As Color
- uid: Global.LightBeam.blinkTicker
  commentId: F:Global.LightBeam.blinkTicker
  id: blinkTicker
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: blinkTicker
  nameWithType: LightBeam.blinkTicker
  fullName: LightBeam.blinkTicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.blinkTicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int blinkTicker
    return:
      type: System.Int32
    content.vb: Public blinkTicker As Integer
- uid: Global.LightBeam.blinkType
  commentId: F:Global.LightBeam.blinkType
  id: blinkType
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: blinkType
  nameWithType: LightBeam.blinkType
  fullName: LightBeam.blinkType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.blinkType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightBeam.LightBeamData.BlinkType blinkType
    return:
      type: Global.LightBeam.LightBeamData.BlinkType
    content.vb: Public blinkType As LightBeam.LightBeamData.BlinkType
- uid: Global.LightBeam.blinkRate
  commentId: F:Global.LightBeam.blinkRate
  id: blinkRate
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: blinkRate
  nameWithType: LightBeam.blinkRate
  fullName: LightBeam.blinkRate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.blinkRate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float blinkRate
    return:
      type: System.Single
    content.vb: Public blinkRate As Single
- uid: Global.LightBeam.nightLight
  commentId: F:Global.LightBeam.nightLight
  id: nightLight
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: nightLight
  nameWithType: LightBeam.nightLight
  fullName: LightBeam.nightLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.nightLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool nightLight
    return:
      type: System.Boolean
    content.vb: Public nightLight As Boolean
- uid: Global.LightBeam.nightFade
  commentId: F:Global.LightBeam.nightFade
  id: nightFade
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: nightFade
  nameWithType: LightBeam.nightFade
  fullName: LightBeam.nightFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LightBeam.nightFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float nightFade
    return:
      type: System.Single
    content.vb: Public nightFade As Single
- uid: Global.LightBeam.#ctor(PlacedObject)
  commentId: M:Global.LightBeam.#ctor(PlacedObject)
  id: '#ctor(PlacedObject)'
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: LightBeam(PlacedObject)
  nameWithType: LightBeam.LightBeam(PlacedObject)
  fullName: LightBeam.LightBeam(PlacedObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LightBeam</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightBeam(PlacedObject placedObject)
    parameters:
    - id: placedObject
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placedObject</parameter>
            <parameter>M:LightBeam.#ctor(PlacedObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(placedObject As PlacedObject)
  overload: Global.LightBeam.#ctor*
  nameWithType.vb: LightBeam.New(PlacedObject)
  fullName.vb: LightBeam.New(PlacedObject)
  name.vb: New(PlacedObject)
- uid: Global.LightBeam.Update(System.Boolean)
  commentId: M:Global.LightBeam.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: LightBeam.Update(bool)
  fullName: LightBeam.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:LightBeam.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.LightBeam.Update*
  nameWithType.vb: LightBeam.Update(Boolean)
  fullName.vb: LightBeam.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.LightBeam.GetIdealGridDiv
  commentId: M:Global.LightBeam.GetIdealGridDiv
  id: GetIdealGridDiv
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: GetIdealGridDiv()
  nameWithType: LightBeam.GetIdealGridDiv()
  fullName: LightBeam.GetIdealGridDiv()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.GetIdealGridDiv</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetIdealGridDiv()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LightBeam.GetIdealGridDiv</parameter>
          </include>
        </markup>
    content.vb: Public Function GetIdealGridDiv() As Integer
  overload: Global.LightBeam.GetIdealGridDiv*
- uid: Global.LightBeam.BlinkFade
  commentId: M:Global.LightBeam.BlinkFade
  id: BlinkFade
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: BlinkFade()
  nameWithType: LightBeam.BlinkFade()
  fullName: LightBeam.BlinkFade()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.BlinkFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BlinkFade()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LightBeam.BlinkFade</parameter>
          </include>
        </markup>
    content.vb: Public Function BlinkFade() As Single
  overload: Global.LightBeam.BlinkFade*
- uid: Global.LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)
  commentId: M:Global.LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)
  id: SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: SetBlinkProperties(BlinkType, float)
  nameWithType: LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType, float)
  fullName: LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetBlinkProperties(LightBeam.LightBeamData.BlinkType type, float rate)
    parameters:
    - id: type
      type: Global.LightBeam.LightBeamData.BlinkType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)</parameter>
          </include>
        </markup>
    - id: rate
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rate</parameter>
            <parameter>M:LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetBlinkProperties(type As LightBeam.LightBeamData.BlinkType, rate As Single)
  overload: Global.LightBeam.SetBlinkProperties*
  nameWithType.vb: LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType, Single)
  fullName.vb: LightBeam.SetBlinkProperties(LightBeam.LightBeamData.BlinkType, Single)
  name.vb: SetBlinkProperties(BlinkType, Single)
- uid: Global.LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: LightBeam.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: LightBeam.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightBeam.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.LightBeam.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)
  commentId: M:Global.LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)
  id: UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: UpdateColor(SpriteLeaser, RoomCamera, float)
  nameWithType: LightBeam.UpdateColor(RoomCamera.SpriteLeaser, RoomCamera, float)
  fullName: LightBeam.UpdateColor(RoomCamera.SpriteLeaser, RoomCamera, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateColor(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float a)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)</parameter>
          </include>
        </markup>
    - id: a
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:LightBeam.UpdateColor(RoomCamera.SpriteLeaser,RoomCamera,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateColor(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, a As Single)
  overload: Global.LightBeam.UpdateColor*
  nameWithType.vb: LightBeam.UpdateColor(RoomCamera.SpriteLeaser, RoomCamera, Single)
  fullName.vb: LightBeam.UpdateColor(RoomCamera.SpriteLeaser, RoomCamera, Single)
  name.vb: UpdateColor(SpriteLeaser, RoomCamera, Single)
- uid: Global.LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: LightBeam.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: LightBeam.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:LightBeam.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.LightBeam.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: LightBeam.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: LightBeam.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: LightBeam.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: LightBeam.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:LightBeam.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.LightBeam.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: LightBeam.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: LightBeam.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:LightBeam.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.LightBeam.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.LightBeam.color
  commentId: P:Global.LightBeam.color
  id: color
  parent: Global.LightBeam
  langs:
  - csharp
  - vb
  name: color
  nameWithType: LightBeam.color
  fullName: LightBeam.color
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LightBeam.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color color { get; set; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public Property color As Color
  overload: Global.LightBeam.color*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.LightBeam.LightBeamData.BlinkType
  commentId: T:Global.LightBeam.LightBeamData.BlinkType
  isExternal: true
  href: LightBeam.html
  name: LightBeam.LightBeamData.BlinkType
  nameWithType: LightBeam.LightBeamData.BlinkType
  fullName: LightBeam.LightBeamData.BlinkType
  spec.csharp:
  - uid: Global.LightBeam
    name: LightBeam
    isExternal: true
    href: LightBeam.html
  - name: .
  - uid: Global.LightBeam.LightBeamData
    name: LightBeamData
    isExternal: true
    href: LightBeam.LightBeamData.html
  - name: .
  - uid: Global.LightBeam.LightBeamData.BlinkType
    name: BlinkType
    isExternal: true
    href: LightBeam.LightBeamData.BlinkType.html
  spec.vb:
  - uid: Global.LightBeam
    name: LightBeam
    isExternal: true
    href: LightBeam.html
  - name: .
  - uid: Global.LightBeam.LightBeamData
    name: LightBeamData
    isExternal: true
    href: LightBeam.LightBeamData.html
  - name: .
  - uid: Global.LightBeam.LightBeamData.BlinkType
    name: BlinkType
    isExternal: true
    href: LightBeam.LightBeamData.BlinkType.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.LightBeam.#ctor*
  commentId: Overload:Global.LightBeam.#ctor
  isExternal: true
  href: Global.LightBeam.html#LightBeam__ctor_PlacedObject_
  name: LightBeam
  nameWithType: LightBeam.LightBeam
  fullName: LightBeam.LightBeam
  nameWithType.vb: LightBeam.New
  fullName.vb: LightBeam.New
  name.vb: New
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.LightBeam.Update*
  commentId: Overload:Global.LightBeam.Update
  isExternal: true
  href: Global.LightBeam.html#LightBeam_Update_System_Boolean_
  name: Update
  nameWithType: LightBeam.Update
  fullName: LightBeam.Update
- uid: Global.LightBeam.GetIdealGridDiv*
  commentId: Overload:Global.LightBeam.GetIdealGridDiv
  isExternal: true
  href: Global.LightBeam.html#LightBeam_GetIdealGridDiv
  name: GetIdealGridDiv
  nameWithType: LightBeam.GetIdealGridDiv
  fullName: LightBeam.GetIdealGridDiv
- uid: Global.LightBeam.BlinkFade*
  commentId: Overload:Global.LightBeam.BlinkFade
  isExternal: true
  href: Global.LightBeam.html#LightBeam_BlinkFade
  name: BlinkFade
  nameWithType: LightBeam.BlinkFade
  fullName: LightBeam.BlinkFade
- uid: Global.LightBeam.SetBlinkProperties*
  commentId: Overload:Global.LightBeam.SetBlinkProperties
  isExternal: true
  href: Global.LightBeam.html#LightBeam_SetBlinkProperties_LightBeam_LightBeamData_BlinkType_System_Single_
  name: SetBlinkProperties
  nameWithType: LightBeam.SetBlinkProperties
  fullName: LightBeam.SetBlinkProperties
- uid: Global.LightBeam.InitiateSprites*
  commentId: Overload:Global.LightBeam.InitiateSprites
  isExternal: true
  href: Global.LightBeam.html#LightBeam_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: LightBeam.InitiateSprites
  fullName: LightBeam.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.LightBeam.UpdateColor*
  commentId: Overload:Global.LightBeam.UpdateColor
  isExternal: true
  href: Global.LightBeam.html#LightBeam_UpdateColor_RoomCamera_SpriteLeaser_RoomCamera_System_Single_
  name: UpdateColor
  nameWithType: LightBeam.UpdateColor
  fullName: LightBeam.UpdateColor
- uid: Global.LightBeam.DrawSprites*
  commentId: Overload:Global.LightBeam.DrawSprites
  isExternal: true
  href: Global.LightBeam.html#LightBeam_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: LightBeam.DrawSprites
  fullName: LightBeam.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.LightBeam.ApplyPalette*
  commentId: Overload:Global.LightBeam.ApplyPalette
  isExternal: true
  href: Global.LightBeam.html#LightBeam_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: LightBeam.ApplyPalette
  fullName: LightBeam.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.LightBeam.AddToContainer*
  commentId: Overload:Global.LightBeam.AddToContainer
  isExternal: true
  href: Global.LightBeam.html#LightBeam_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: LightBeam.AddToContainer
  fullName: LightBeam.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.LightBeam.color*
  commentId: Overload:Global.LightBeam.color
  isExternal: true
  href: Global.LightBeam.html#LightBeam_color
  name: color
  nameWithType: LightBeam.color
  fullName: LightBeam.color
