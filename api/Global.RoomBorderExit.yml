### YamlMime:ManagedReference
items:
- uid: Global.RoomBorderExit
  commentId: T:Global.RoomBorderExit
  id: RoomBorderExit
  parent: Global
  children:
  - Global.RoomBorderExit.#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)
  - Global.RoomBorderExit.borderTiles
  - Global.RoomBorderExit.type
  langs:
  - csharp
  - vb
  name: RoomBorderExit
  nameWithType: RoomBorderExit
  fullName: RoomBorderExit
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RoomBorderExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct RoomBorderExit
    content.vb: Public Structure RoomBorderExit
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.RoomBorderExit.borderTiles
  commentId: F:Global.RoomBorderExit.borderTiles
  id: borderTiles
  parent: Global.RoomBorderExit
  langs:
  - csharp
  - vb
  name: borderTiles
  nameWithType: RoomBorderExit.borderTiles
  fullName: RoomBorderExit.borderTiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomBorderExit.borderTiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] borderTiles
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public borderTiles As IntVector2()
- uid: Global.RoomBorderExit.type
  commentId: F:Global.RoomBorderExit.type
  id: type
  parent: Global.RoomBorderExit
  langs:
  - csharp
  - vb
  name: type
  nameWithType: RoomBorderExit.type
  fullName: RoomBorderExit.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomBorderExit.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoomNode.Type type
    return:
      type: Global.AbstractRoomNode.Type
    content.vb: Public type As AbstractRoomNode.Type
- uid: Global.RoomBorderExit.#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)
  commentId: M:Global.RoomBorderExit.#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)
  id: '#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)'
  parent: Global.RoomBorderExit
  langs:
  - csharp
  - vb
  name: RoomBorderExit(IntVector2[], Type)
  nameWithType: RoomBorderExit.RoomBorderExit(IntVector2[], AbstractRoomNode.Type)
  fullName: RoomBorderExit.RoomBorderExit(RWCustom.IntVector2[], AbstractRoomNode.Type)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomBorderExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomBorderExit(IntVector2[] borderTiles, AbstractRoomNode.Type type)
    parameters:
    - id: borderTiles
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>borderTiles</parameter>
            <parameter>M:RoomBorderExit.#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)</parameter>
          </include>
        </markup>
    - id: type
      type: Global.AbstractRoomNode.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:RoomBorderExit.#ctor(RWCustom.IntVector2[],AbstractRoomNode.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(borderTiles As IntVector2(), type As AbstractRoomNode.Type)
  overload: Global.RoomBorderExit.#ctor*
  nameWithType.vb: RoomBorderExit.New(IntVector2(), AbstractRoomNode.Type)
  fullName.vb: RoomBorderExit.New(RWCustom.IntVector2(), AbstractRoomNode.Type)
  name.vb: New(IntVector2(), Type)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.AbstractRoomNode.Type
  commentId: T:Global.AbstractRoomNode.Type
  isExternal: true
  href: AbstractRoomNode.html
  name: AbstractRoomNode.Type
  nameWithType: AbstractRoomNode.Type
  fullName: AbstractRoomNode.Type
  spec.csharp:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
  spec.vb:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
- uid: Global.RoomBorderExit.#ctor*
  commentId: Overload:Global.RoomBorderExit.#ctor
  isExternal: true
  href: Global.RoomBorderExit.html#RoomBorderExit__ctor_RWCustom_IntVector2___AbstractRoomNode_Type_
  name: RoomBorderExit
  nameWithType: RoomBorderExit.RoomBorderExit
  fullName: RoomBorderExit.RoomBorderExit
  nameWithType.vb: RoomBorderExit.New
  fullName.vb: RoomBorderExit.New
  name.vb: New
