### YamlMime:ManagedReference
items:
- uid: Global.VoidSpawn.BezierSwarm
  commentId: T:Global.VoidSpawn.BezierSwarm
  id: VoidSpawn.BezierSwarm
  parent: Global
  children:
  - Global.VoidSpawn.BezierSwarm.#ctor(VoidSpawn,Room)
  - Global.VoidSpawn.BezierSwarm.BezierPoints
  - Global.VoidSpawn.BezierSwarm.GetNewBezier
  - Global.VoidSpawn.BezierSwarm.SwimTowards
  - Global.VoidSpawn.BezierSwarm.currentT
  - Global.VoidSpawn.BezierSwarm.followingAmount
  - Global.VoidSpawn.BezierSwarm.hasBezierPoints
  - Global.VoidSpawn.BezierSwarm.interestInPlayer
  - Global.VoidSpawn.BezierSwarm.isFollowing
  - Global.VoidSpawn.BezierSwarm.leader
  - Global.VoidSpawn.BezierSwarm.variance
  langs:
  - csharp
  - vb
  name: VoidSpawn.BezierSwarm
  nameWithType: VoidSpawn.BezierSwarm
  fullName: VoidSpawn.BezierSwarm
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:VoidSpawn.BezierSwarm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class VoidSpawn.BezierSwarm : VoidSpawn.Behavior'
    content.vb: Public Class VoidSpawn.BezierSwarm Inherits VoidSpawn.Behavior
  inheritance:
  - System.Object
  - Global.VoidSpawn.Behavior
  inheritedMembers:
  - Global.VoidSpawn.Behavior.owner
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.VoidSpawn.BezierSwarm.BezierPoints
  commentId: F:Global.VoidSpawn.BezierSwarm.BezierPoints
  id: BezierPoints
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: BezierPoints
  nameWithType: VoidSpawn.BezierSwarm.BezierPoints
  fullName: VoidSpawn.BezierSwarm.BezierPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.BezierPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] BezierPoints
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public BezierPoints As Vector2()
- uid: Global.VoidSpawn.BezierSwarm.currentT
  commentId: F:Global.VoidSpawn.BezierSwarm.currentT
  id: currentT
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: currentT
  nameWithType: VoidSpawn.BezierSwarm.currentT
  fullName: VoidSpawn.BezierSwarm.currentT
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.currentT</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float currentT
    return:
      type: System.Single
    content.vb: Public currentT As Single
- uid: Global.VoidSpawn.BezierSwarm.hasBezierPoints
  commentId: F:Global.VoidSpawn.BezierSwarm.hasBezierPoints
  id: hasBezierPoints
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: hasBezierPoints
  nameWithType: VoidSpawn.BezierSwarm.hasBezierPoints
  fullName: VoidSpawn.BezierSwarm.hasBezierPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.hasBezierPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasBezierPoints
    return:
      type: System.Boolean
    content.vb: Public hasBezierPoints As Boolean
- uid: Global.VoidSpawn.BezierSwarm.followingAmount
  commentId: F:Global.VoidSpawn.BezierSwarm.followingAmount
  id: followingAmount
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: followingAmount
  nameWithType: VoidSpawn.BezierSwarm.followingAmount
  fullName: VoidSpawn.BezierSwarm.followingAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.followingAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int followingAmount
    return:
      type: System.Int32
    content.vb: Public followingAmount As Integer
- uid: Global.VoidSpawn.BezierSwarm.isFollowing
  commentId: F:Global.VoidSpawn.BezierSwarm.isFollowing
  id: isFollowing
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: isFollowing
  nameWithType: VoidSpawn.BezierSwarm.isFollowing
  fullName: VoidSpawn.BezierSwarm.isFollowing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.isFollowing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isFollowing
    return:
      type: System.Boolean
    content.vb: Public isFollowing As Boolean
- uid: Global.VoidSpawn.BezierSwarm.variance
  commentId: F:Global.VoidSpawn.BezierSwarm.variance
  id: variance
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: variance
  nameWithType: VoidSpawn.BezierSwarm.variance
  fullName: VoidSpawn.BezierSwarm.variance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.variance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 variance
    return:
      type: UnityEngine.Vector2
    content.vb: Public variance As Vector2
- uid: Global.VoidSpawn.BezierSwarm.leader
  commentId: F:Global.VoidSpawn.BezierSwarm.leader
  id: leader
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: leader
  nameWithType: VoidSpawn.BezierSwarm.leader
  fullName: VoidSpawn.BezierSwarm.leader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.leader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VoidSpawn.BezierSwarm leader
    return:
      type: Global.VoidSpawn.BezierSwarm
    content.vb: Public leader As VoidSpawn.BezierSwarm
- uid: Global.VoidSpawn.BezierSwarm.interestInPlayer
  commentId: F:Global.VoidSpawn.BezierSwarm.interestInPlayer
  id: interestInPlayer
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: interestInPlayer
  nameWithType: VoidSpawn.BezierSwarm.interestInPlayer
  fullName: VoidSpawn.BezierSwarm.interestInPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:VoidSpawn.BezierSwarm.interestInPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float interestInPlayer
    return:
      type: System.Single
    content.vb: Public interestInPlayer As Single
- uid: Global.VoidSpawn.BezierSwarm.#ctor(VoidSpawn,Room)
  commentId: M:Global.VoidSpawn.BezierSwarm.#ctor(VoidSpawn,Room)
  id: '#ctor(VoidSpawn,Room)'
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: BezierSwarm(VoidSpawn, Room)
  nameWithType: VoidSpawn.BezierSwarm.BezierSwarm(VoidSpawn, Room)
  fullName: VoidSpawn.BezierSwarm.BezierSwarm(VoidSpawn, Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>VoidSpawn.BezierSwarm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BezierSwarm(VoidSpawn owner, Room room)
    parameters:
    - id: owner
      type: Global.VoidSpawn
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:VoidSpawn.BezierSwarm.#ctor(VoidSpawn,Room)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:VoidSpawn.BezierSwarm.#ctor(VoidSpawn,Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As VoidSpawn, room As Room)
  overload: Global.VoidSpawn.BezierSwarm.#ctor*
  nameWithType.vb: VoidSpawn.BezierSwarm.New(VoidSpawn, Room)
  fullName.vb: VoidSpawn.BezierSwarm.New(VoidSpawn, Room)
  name.vb: New(VoidSpawn, Room)
- uid: Global.VoidSpawn.BezierSwarm.GetNewBezier
  commentId: M:Global.VoidSpawn.BezierSwarm.GetNewBezier
  id: GetNewBezier
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: GetNewBezier()
  nameWithType: VoidSpawn.BezierSwarm.GetNewBezier()
  fullName: VoidSpawn.BezierSwarm.GetNewBezier()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:VoidSpawn.BezierSwarm.GetNewBezier</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GetNewBezier()
    content.vb: Public Sub GetNewBezier()
  overload: Global.VoidSpawn.BezierSwarm.GetNewBezier*
- uid: Global.VoidSpawn.BezierSwarm.SwimTowards
  commentId: P:Global.VoidSpawn.BezierSwarm.SwimTowards
  id: SwimTowards
  parent: Global.VoidSpawn.BezierSwarm
  langs:
  - csharp
  - vb
  name: SwimTowards
  nameWithType: VoidSpawn.BezierSwarm.SwimTowards
  fullName: VoidSpawn.BezierSwarm.SwimTowards
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:VoidSpawn.BezierSwarm.SwimTowards</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override Vector2 SwimTowards { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Overrides ReadOnly Property SwimTowards As Vector2
  overridden: Global.VoidSpawn.Behavior.SwimTowards
  overload: Global.VoidSpawn.BezierSwarm.SwimTowards*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.VoidSpawn.Behavior
  commentId: T:Global.VoidSpawn.Behavior
  isExternal: true
  href: VoidSpawn.html
  name: VoidSpawn.Behavior
  nameWithType: VoidSpawn.Behavior
  fullName: VoidSpawn.Behavior
  spec.csharp:
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: .
  - uid: Global.VoidSpawn.Behavior
    name: Behavior
    isExternal: true
    href: VoidSpawn.Behavior.html
  spec.vb:
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: .
  - uid: Global.VoidSpawn.Behavior
    name: Behavior
    isExternal: true
    href: VoidSpawn.Behavior.html
- uid: Global.VoidSpawn.Behavior.owner
  commentId: F:Global.VoidSpawn.Behavior.owner
  parent: Global.VoidSpawn.Behavior
  isExternal: true
  href: Global.VoidSpawn.Behavior.html#VoidSpawn_Behavior_owner
  name: owner
  nameWithType: VoidSpawn.Behavior.owner
  fullName: VoidSpawn.Behavior.owner
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.VoidSpawn.BezierSwarm
  commentId: T:Global.VoidSpawn.BezierSwarm
  isExternal: true
  href: VoidSpawn.html
  name: VoidSpawn.BezierSwarm
  nameWithType: VoidSpawn.BezierSwarm
  fullName: VoidSpawn.BezierSwarm
  spec.csharp:
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: .
  - uid: Global.VoidSpawn.BezierSwarm
    name: BezierSwarm
    isExternal: true
    href: VoidSpawn.BezierSwarm.html
  spec.vb:
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: .
  - uid: Global.VoidSpawn.BezierSwarm
    name: BezierSwarm
    isExternal: true
    href: VoidSpawn.BezierSwarm.html
- uid: Global.VoidSpawn.BezierSwarm.#ctor*
  commentId: Overload:Global.VoidSpawn.BezierSwarm.#ctor
  isExternal: true
  href: Global.VoidSpawn.BezierSwarm.html#VoidSpawn_BezierSwarm__ctor_VoidSpawn_Room_
  name: BezierSwarm
  nameWithType: VoidSpawn.BezierSwarm.BezierSwarm
  fullName: VoidSpawn.BezierSwarm.BezierSwarm
  nameWithType.vb: VoidSpawn.BezierSwarm.New
  fullName.vb: VoidSpawn.BezierSwarm.New
  name.vb: New
- uid: Global.VoidSpawn
  commentId: T:Global.VoidSpawn
  isExternal: true
  href: VoidSpawn.html
  name: VoidSpawn
  nameWithType: VoidSpawn
  fullName: VoidSpawn
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.VoidSpawn.BezierSwarm.GetNewBezier*
  commentId: Overload:Global.VoidSpawn.BezierSwarm.GetNewBezier
  isExternal: true
  href: Global.VoidSpawn.BezierSwarm.html#VoidSpawn_BezierSwarm_GetNewBezier
  name: GetNewBezier
  nameWithType: VoidSpawn.BezierSwarm.GetNewBezier
  fullName: VoidSpawn.BezierSwarm.GetNewBezier
- uid: Global.VoidSpawn.Behavior.SwimTowards
  commentId: P:Global.VoidSpawn.Behavior.SwimTowards
  parent: Global.VoidSpawn.Behavior
  isExternal: true
  href: Global.VoidSpawn.Behavior.html#VoidSpawn_Behavior_SwimTowards
  name: SwimTowards
  nameWithType: VoidSpawn.Behavior.SwimTowards
  fullName: VoidSpawn.Behavior.SwimTowards
- uid: Global.VoidSpawn.BezierSwarm.SwimTowards*
  commentId: Overload:Global.VoidSpawn.BezierSwarm.SwimTowards
  isExternal: true
  href: Global.VoidSpawn.BezierSwarm.html#VoidSpawn_BezierSwarm_SwimTowards
  name: SwimTowards
  nameWithType: VoidSpawn.BezierSwarm.SwimTowards
  fullName: VoidSpawn.BezierSwarm.SwimTowards
