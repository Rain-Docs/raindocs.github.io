### YamlMime:ManagedReference
items:
- uid: Global.AssetManager
  commentId: T:Global.AssetManager
  id: AssetManager
  parent: Global
  children:
  - Global.AssetManager.#ctor
  - Global.AssetManager.CreateDirectoryMd5(System.String,System.String)
  - Global.AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})
  - Global.AssetManager.HardCleanFutileAssets
  - Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)
  - Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)
  - Global.AssetManager.PreLoadTexture(System.String)
  - Global.AssetManager.ResolveAllFilePaths(System.String)
  - Global.AssetManager.ResolveDirectory(System.String)
  - Global.AssetManager.ResolveFilePath(System.String)
  - Global.AssetManager.ResolveFilePath(System.String,System.Boolean)
  - Global.AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)
  - Global.AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)
  langs:
  - csharp
  - vb
  name: AssetManager
  nameWithType: AssetManager
  fullName: AssetManager
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AssetManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AssetManager
    content.vb: Public Class AssetManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AssetManager.ResolveFilePath(System.String,System.Boolean)
  commentId: M:Global.AssetManager.ResolveFilePath(System.String,System.Boolean)
  id: ResolveFilePath(System.String,System.Boolean)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ResolveFilePath(string, bool)
  nameWithType: AssetManager.ResolveFilePath(string, bool)
  fullName: AssetManager.ResolveFilePath(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ResolveFilePath(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ResolveFilePath(string path, bool skipMergedMods = false)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ResolveFilePath(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: skipMergedMods
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>skipMergedMods</parameter>
            <parameter>M:AssetManager.ResolveFilePath(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ResolveFilePath(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ResolveFilePath(path As String, skipMergedMods As Boolean = False) As String
  overload: Global.AssetManager.ResolveFilePath*
  nameWithType.vb: AssetManager.ResolveFilePath(String, Boolean)
  fullName.vb: AssetManager.ResolveFilePath(String, Boolean)
  name.vb: ResolveFilePath(String, Boolean)
- uid: Global.AssetManager.ResolveAllFilePaths(System.String)
  commentId: M:Global.AssetManager.ResolveAllFilePaths(System.String)
  id: ResolveAllFilePaths(System.String)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ResolveAllFilePaths(string)
  nameWithType: AssetManager.ResolveAllFilePaths(string)
  fullName: AssetManager.ResolveAllFilePaths(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ResolveAllFilePaths(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> ResolveAllFilePaths(string path)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ResolveAllFilePaths(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ResolveAllFilePaths(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ResolveAllFilePaths(path As String) As List(Of String)
  overload: Global.AssetManager.ResolveAllFilePaths*
  nameWithType.vb: AssetManager.ResolveAllFilePaths(String)
  fullName.vb: AssetManager.ResolveAllFilePaths(String)
  name.vb: ResolveAllFilePaths(String)
- uid: Global.AssetManager.ResolveDirectory(System.String)
  commentId: M:Global.AssetManager.ResolveDirectory(System.String)
  id: ResolveDirectory(System.String)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ResolveDirectory(string)
  nameWithType: AssetManager.ResolveDirectory(string)
  fullName: AssetManager.ResolveDirectory(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ResolveDirectory(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ResolveDirectory(string path)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ResolveDirectory(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ResolveDirectory(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ResolveDirectory(path As String) As String
  overload: Global.AssetManager.ResolveDirectory*
  nameWithType.vb: AssetManager.ResolveDirectory(String)
  fullName.vb: AssetManager.ResolveDirectory(String)
  name.vb: ResolveDirectory(String)
- uid: Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)
  id: ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ListDirectory(string, bool, bool, bool)
  nameWithType: AssetManager.ListDirectory(string, bool, bool, bool)
  fullName: AssetManager.ListDirectory(string, bool, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] ListDirectory(string path, bool directories = false, bool includeAll = false, bool moddedOnly = false)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: directories
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directories</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: includeAll
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>includeAll</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: moddedOnly
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>moddedOnly</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ListDirectory(path As String, directories As Boolean = False, includeAll As Boolean = False, moddedOnly As Boolean = False) As String()
  overload: Global.AssetManager.ListDirectory*
  nameWithType.vb: AssetManager.ListDirectory(String, Boolean, Boolean, Boolean)
  fullName.vb: AssetManager.ListDirectory(String, Boolean, Boolean, Boolean)
  name.vb: ListDirectory(String, Boolean, Boolean, Boolean)
- uid: Global.AssetManager.HardCleanFutileAssets
  commentId: M:Global.AssetManager.HardCleanFutileAssets
  id: HardCleanFutileAssets
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: HardCleanFutileAssets()
  nameWithType: AssetManager.HardCleanFutileAssets()
  fullName: AssetManager.HardCleanFutileAssets()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.HardCleanFutileAssets</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void HardCleanFutileAssets()
    content.vb: Public Shared Sub HardCleanFutileAssets()
  overload: Global.AssetManager.HardCleanFutileAssets*
- uid: Global.AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)
  commentId: M:Global.AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)
  id: SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: SafeWWWLoadTexture(ref Texture2D, string, bool, bool)
  nameWithType: AssetManager.SafeWWWLoadTexture(ref Texture2D, string, bool, bool)
  fullName: AssetManager.SafeWWWLoadTexture(ref UnityEngine.Texture2D, string, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Texture2D SafeWWWLoadTexture(ref Texture2D texture2D, string path, bool clampWrapMode, bool crispPixels)
    parameters:
    - id: texture2D
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture2D</parameter>
            <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: clampWrapMode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>clampWrapMode</parameter>
            <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: crispPixels
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crispPixels</parameter>
            <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D@,System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SafeWWWLoadTexture(texture2D As Texture2D, path As String, clampWrapMode As Boolean, crispPixels As Boolean) As Texture2D
  overload: Global.AssetManager.SafeWWWLoadTexture*
  nameWithType.vb: AssetManager.SafeWWWLoadTexture(Texture2D, String, Boolean, Boolean)
  fullName.vb: AssetManager.SafeWWWLoadTexture(UnityEngine.Texture2D, String, Boolean, Boolean)
  name.vb: SafeWWWLoadTexture(Texture2D, String, Boolean, Boolean)
- uid: Global.AssetManager.PreLoadTexture(System.String)
  commentId: M:Global.AssetManager.PreLoadTexture(System.String)
  id: PreLoadTexture(System.String)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: PreLoadTexture(string)
  nameWithType: AssetManager.PreLoadTexture(string)
  fullName: AssetManager.PreLoadTexture(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.PreLoadTexture(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static byte[] PreLoadTexture(string path)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.PreLoadTexture(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Byte[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.PreLoadTexture(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PreLoadTexture(path As String) As Byte()
  overload: Global.AssetManager.PreLoadTexture*
  nameWithType.vb: AssetManager.PreLoadTexture(String)
  fullName.vb: AssetManager.PreLoadTexture(String)
  name.vb: PreLoadTexture(String)
- uid: Global.AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)
  commentId: M:Global.AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)
  id: SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: SafeWWWAudioClip(string, bool, bool, AudioType)
  nameWithType: AssetManager.SafeWWWAudioClip(string, bool, bool, AudioType)
  fullName: AssetManager.SafeWWWAudioClip(string, bool, bool, UnityEngine.AudioType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static AudioClip SafeWWWAudioClip(string path, bool threeD, bool stream, AudioType audioType)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
          </include>
        </markup>
    - id: threeD
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>threeD</parameter>
            <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
          </include>
        </markup>
    - id: stream
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>stream</parameter>
            <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
          </include>
        </markup>
    - id: audioType
      type: UnityEngine.AudioType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>audioType</parameter>
            <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.AudioClip
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.SafeWWWAudioClip(System.String,System.Boolean,System.Boolean,UnityEngine.AudioType)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SafeWWWAudioClip(path As String, threeD As Boolean, stream As Boolean, audioType As AudioType) As AudioClip
  overload: Global.AssetManager.SafeWWWAudioClip*
  nameWithType.vb: AssetManager.SafeWWWAudioClip(String, Boolean, Boolean, AudioType)
  fullName.vb: AssetManager.SafeWWWAudioClip(String, Boolean, Boolean, UnityEngine.AudioType)
  name.vb: SafeWWWAudioClip(String, Boolean, Boolean, AudioType)
- uid: Global.AssetManager.CreateDirectoryMd5(System.String,System.String)
  commentId: M:Global.AssetManager.CreateDirectoryMd5(System.String,System.String)
  id: CreateDirectoryMd5(System.String,System.String)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: CreateDirectoryMd5(string, string)
  nameWithType: AssetManager.CreateDirectoryMd5(string, string)
  fullName: AssetManager.CreateDirectoryMd5(string, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string CreateDirectoryMd5(string srcPath, string relativeRoot)
    parameters:
    - id: srcPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>srcPath</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: relativeRoot
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>relativeRoot</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CreateDirectoryMd5(srcPath As String, relativeRoot As String) As String
  overload: Global.AssetManager.CreateDirectoryMd5*
  nameWithType.vb: AssetManager.CreateDirectoryMd5(String, String)
  fullName.vb: AssetManager.CreateDirectoryMd5(String, String)
  name.vb: CreateDirectoryMd5(String, String)
- uid: Global.AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})
  commentId: M:Global.AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})
  id: CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: CreateDirectoryMd5(string, string, List<string>)
  nameWithType: AssetManager.CreateDirectoryMd5(string, string, List<string>)
  fullName: AssetManager.CreateDirectoryMd5(string, string, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use two parameter function instead.")]

      public static string CreateDirectoryMd5(string srcPath, string relativeRoot, List<string> obsolete)
    parameters:
    - id: srcPath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>srcPath</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: relativeRoot
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>relativeRoot</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: obsolete
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obsolete</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.CreateDirectoryMd5(System.String,System.String,System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use two parameter function instead.")>

      Public Shared Function CreateDirectoryMd5(srcPath As String, relativeRoot As String, obsolete As List(Of String)) As String
  overload: Global.AssetManager.CreateDirectoryMd5*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use two parameter function instead.
  nameWithType.vb: AssetManager.CreateDirectoryMd5(String, String, List(Of String))
  fullName.vb: AssetManager.CreateDirectoryMd5(String, String, System.Collections.Generic.List(Of String))
  name.vb: CreateDirectoryMd5(String, String, List(Of String))
- uid: Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)
  commentId: M:Global.AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)
  id: ListDirectory(System.String,System.Boolean,System.Boolean)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ListDirectory(string, bool, bool)
  nameWithType: AssetManager.ListDirectory(string, bool, bool)
  fullName: AssetManager.ListDirectory(string, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] ListDirectory(string path, bool directories, bool includeAll)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: directories
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>directories</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: includeAll
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>includeAll</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ListDirectory(System.String,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ListDirectory(path As String, directories As Boolean, includeAll As Boolean) As String()
  overload: Global.AssetManager.ListDirectory*
  nameWithType.vb: AssetManager.ListDirectory(String, Boolean, Boolean)
  fullName.vb: AssetManager.ListDirectory(String, Boolean, Boolean)
  name.vb: ListDirectory(String, Boolean, Boolean)
- uid: Global.AssetManager.ResolveFilePath(System.String)
  commentId: M:Global.AssetManager.ResolveFilePath(System.String)
  id: ResolveFilePath(System.String)
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: ResolveFilePath(string)
  nameWithType: AssetManager.ResolveFilePath(string)
  fullName: AssetManager.ResolveFilePath(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AssetManager.ResolveFilePath(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ResolveFilePath(string path)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:AssetManager.ResolveFilePath(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AssetManager.ResolveFilePath(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ResolveFilePath(path As String) As String
  overload: Global.AssetManager.ResolveFilePath*
  nameWithType.vb: AssetManager.ResolveFilePath(String)
  fullName.vb: AssetManager.ResolveFilePath(String)
  name.vb: ResolveFilePath(String)
- uid: Global.AssetManager.#ctor
  commentId: M:Global.AssetManager.#ctor
  id: '#ctor'
  parent: Global.AssetManager
  langs:
  - csharp
  - vb
  name: AssetManager()
  nameWithType: AssetManager.AssetManager()
  fullName: AssetManager.AssetManager()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AssetManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AssetManager()
    content.vb: Public Sub New()
  overload: Global.AssetManager.#ctor*
  nameWithType.vb: AssetManager.New()
  fullName.vb: AssetManager.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AssetManager.ResolveFilePath*
  commentId: Overload:Global.AssetManager.ResolveFilePath
  isExternal: true
  href: Global.AssetManager.html#AssetManager_ResolveFilePath_System_String_System_Boolean_
  name: ResolveFilePath
  nameWithType: AssetManager.ResolveFilePath
  fullName: AssetManager.ResolveFilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AssetManager.ResolveAllFilePaths*
  commentId: Overload:Global.AssetManager.ResolveAllFilePaths
  isExternal: true
  href: Global.AssetManager.html#AssetManager_ResolveAllFilePaths_System_String_
  name: ResolveAllFilePaths
  nameWithType: AssetManager.ResolveAllFilePaths
  fullName: AssetManager.ResolveAllFilePaths
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.AssetManager.ResolveDirectory*
  commentId: Overload:Global.AssetManager.ResolveDirectory
  isExternal: true
  href: Global.AssetManager.html#AssetManager_ResolveDirectory_System_String_
  name: ResolveDirectory
  nameWithType: AssetManager.ResolveDirectory
  fullName: AssetManager.ResolveDirectory
- uid: Global.AssetManager.ListDirectory*
  commentId: Overload:Global.AssetManager.ListDirectory
  isExternal: true
  href: Global.AssetManager.html#AssetManager_ListDirectory_System_String_System_Boolean_System_Boolean_System_Boolean_
  name: ListDirectory
  nameWithType: AssetManager.ListDirectory
  fullName: AssetManager.ListDirectory
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.AssetManager.HardCleanFutileAssets*
  commentId: Overload:Global.AssetManager.HardCleanFutileAssets
  isExternal: true
  href: Global.AssetManager.html#AssetManager_HardCleanFutileAssets
  name: HardCleanFutileAssets
  nameWithType: AssetManager.HardCleanFutileAssets
  fullName: AssetManager.HardCleanFutileAssets
- uid: Global.AssetManager.SafeWWWLoadTexture*
  commentId: Overload:Global.AssetManager.SafeWWWLoadTexture
  isExternal: true
  href: Global.AssetManager.html#AssetManager_SafeWWWLoadTexture_UnityEngine_Texture2D__System_String_System_Boolean_System_Boolean_
  name: SafeWWWLoadTexture
  nameWithType: AssetManager.SafeWWWLoadTexture
  fullName: AssetManager.SafeWWWLoadTexture
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Global.AssetManager.PreLoadTexture*
  commentId: Overload:Global.AssetManager.PreLoadTexture
  isExternal: true
  href: Global.AssetManager.html#AssetManager_PreLoadTexture_System_String_
  name: PreLoadTexture
  nameWithType: AssetManager.PreLoadTexture
  fullName: AssetManager.PreLoadTexture
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: Global.AssetManager.SafeWWWAudioClip*
  commentId: Overload:Global.AssetManager.SafeWWWAudioClip
  isExternal: true
  href: Global.AssetManager.html#AssetManager_SafeWWWAudioClip_System_String_System_Boolean_System_Boolean_UnityEngine_AudioType_
  name: SafeWWWAudioClip
  nameWithType: AssetManager.SafeWWWAudioClip
  fullName: AssetManager.SafeWWWAudioClip
- uid: UnityEngine.AudioType
  commentId: '!:UnityEngine.AudioType'
  isExternal: true
  name: AudioType
  nameWithType: AudioType
  fullName: UnityEngine.AudioType
- uid: UnityEngine.AudioClip
  isExternal: true
  name: AudioClip
  nameWithType: AudioClip
  fullName: UnityEngine.AudioClip
- uid: Global.AssetManager.CreateDirectoryMd5*
  commentId: Overload:Global.AssetManager.CreateDirectoryMd5
  isExternal: true
  href: Global.AssetManager.html#AssetManager_CreateDirectoryMd5_System_String_System_String_
  name: CreateDirectoryMd5
  nameWithType: AssetManager.CreateDirectoryMd5
  fullName: AssetManager.CreateDirectoryMd5
- uid: Global.AssetManager.#ctor*
  commentId: Overload:Global.AssetManager.#ctor
  isExternal: true
  href: Global.AssetManager.html#AssetManager__ctor
  name: AssetManager
  nameWithType: AssetManager.AssetManager
  fullName: AssetManager.AssetManager
  nameWithType.vb: AssetManager.New
  fullName.vb: AssetManager.New
  name.vb: New
