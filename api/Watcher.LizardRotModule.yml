### YamlMime:ManagedReference
items:
- uid: Watcher.LizardRotModule
  commentId: T:Watcher.LizardRotModule
  id: LizardRotModule
  parent: Watcher
  children:
  - Watcher.LizardRotModule.#ctor(Lizard)
  - Watcher.LizardRotModule.Act
  - Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)
  - Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  - Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain
  - Watcher.LizardRotModule.Hiss(System.Int32)
  - Watcher.LizardRotModule.NewRoom(Room)
  - Watcher.LizardRotModule.PlaceInRoom(Room)
  - Watcher.LizardRotModule.RotAI
  - Watcher.LizardRotModule.RotDigesting
  - Watcher.LizardRotModule.RotEyeColor
  - Watcher.LizardRotModule.RotEyesClose
  - Watcher.LizardRotModule.RotGraphicsOwner
  - Watcher.LizardRotModule.RotMoveDirection
  - Watcher.LizardRotModule.RotSizeClass
  - Watcher.LizardRotModule.RotStuckCounter
  - Watcher.LizardRotModule.RotTentacles
  - Watcher.LizardRotModule.SpitOutOfShortCut
  - Watcher.LizardRotModule.Stun
  - Watcher.LizardRotModule.SwitchToDaddyMode
  - Watcher.LizardRotModule.SwitchToLizardMode
  - Watcher.LizardRotModule.Update
  - Watcher.LizardRotModule.Violence(System.Single)
  - Watcher.LizardRotModule.daddyMode
  - Watcher.LizardRotModule.hangingInTentacle
  - Watcher.LizardRotModule.legsGrabbing
  - Watcher.LizardRotModule.moveDirection
  - Watcher.LizardRotModule.moving
  - Watcher.LizardRotModule.nearNormalClimbable
  - Watcher.LizardRotModule.notFollowingPathToCurrentGoalCounter
  - Watcher.LizardRotModule.pastPositions
  - Watcher.LizardRotModule.rotColor
  - Watcher.LizardRotModule.rotTemplates
  - Watcher.LizardRotModule.sizzleSoundCooldown
  - Watcher.LizardRotModule.stuckCounter
  - Watcher.LizardRotModule.stuckPos
  - Watcher.LizardRotModule.tentacles
  - Watcher.LizardRotModule.tentaclesHoldOn
  - Watcher.LizardRotModule.transforming
  - Watcher.LizardRotModule.transfromTimer
  - Watcher.LizardRotModule.unconditionalSupport
  - Watcher.LizardRotModule.vocalizeSoundCooldown
  langs:
  - csharp
  - vb
  name: LizardRotModule
  nameWithType: LizardRotModule
  fullName: Watcher.LizardRotModule
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.LizardRotModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardRotModule : DaddyLongLegs.IHaveRotParts'
    content.vb: Public Class LizardRotModule Implements DaddyLongLegs.IHaveRotParts
  inheritance:
  - System.Object
  implements:
  - Global.DaddyLongLegs.IHaveRotParts
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.LizardRotModule.rotTemplates
  commentId: F:Watcher.LizardRotModule.rotTemplates
  id: rotTemplates
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: rotTemplates
  nameWithType: LizardRotModule.rotTemplates
  fullName: Watcher.LizardRotModule.rotTemplates
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.rotTemplates</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<CreatureTemplate> rotTemplates
    return:
      type: System.Collections.Generic.List{CreatureTemplate}
    content.vb: Public Shared rotTemplates As List(Of CreatureTemplate)
- uid: Watcher.LizardRotModule.hangingInTentacle
  commentId: F:Watcher.LizardRotModule.hangingInTentacle
  id: hangingInTentacle
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: hangingInTentacle
  nameWithType: LizardRotModule.hangingInTentacle
  fullName: Watcher.LizardRotModule.hangingInTentacle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.hangingInTentacle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hangingInTentacle
    return:
      type: System.Boolean
    content.vb: Public hangingInTentacle As Boolean
- uid: Watcher.LizardRotModule.tentacles
  commentId: F:Watcher.LizardRotModule.tentacles
  id: tentacles
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: tentacles
  nameWithType: LizardRotModule.tentacles
  fullName: Watcher.LizardRotModule.tentacles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.tentacles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DaddyTentacle[] tentacles
    return:
      type: Global.DaddyTentacle[]
    content.vb: Public tentacles As DaddyTentacle()
- uid: Watcher.LizardRotModule.moveDirection
  commentId: F:Watcher.LizardRotModule.moveDirection
  id: moveDirection
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: moveDirection
  nameWithType: LizardRotModule.moveDirection
  fullName: Watcher.LizardRotModule.moveDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.moveDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 moveDirection
    return:
      type: UnityEngine.Vector2
    content.vb: Public moveDirection As Vector2
- uid: Watcher.LizardRotModule.tentaclesHoldOn
  commentId: F:Watcher.LizardRotModule.tentaclesHoldOn
  id: tentaclesHoldOn
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: tentaclesHoldOn
  nameWithType: LizardRotModule.tentaclesHoldOn
  fullName: Watcher.LizardRotModule.tentaclesHoldOn
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.tentaclesHoldOn</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool tentaclesHoldOn
    return:
      type: System.Boolean
    content.vb: Public tentaclesHoldOn As Boolean
- uid: Watcher.LizardRotModule.moving
  commentId: F:Watcher.LizardRotModule.moving
  id: moving
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: moving
  nameWithType: LizardRotModule.moving
  fullName: Watcher.LizardRotModule.moving
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.moving</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool moving
    return:
      type: System.Boolean
    content.vb: Public moving As Boolean
- uid: Watcher.LizardRotModule.pastPositions
  commentId: F:Watcher.LizardRotModule.pastPositions
  id: pastPositions
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: pastPositions
  nameWithType: LizardRotModule.pastPositions
  fullName: Watcher.LizardRotModule.pastPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.pastPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> pastPositions
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public pastPositions As List(Of IntVector2)
- uid: Watcher.LizardRotModule.notFollowingPathToCurrentGoalCounter
  commentId: F:Watcher.LizardRotModule.notFollowingPathToCurrentGoalCounter
  id: notFollowingPathToCurrentGoalCounter
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: notFollowingPathToCurrentGoalCounter
  nameWithType: LizardRotModule.notFollowingPathToCurrentGoalCounter
  fullName: Watcher.LizardRotModule.notFollowingPathToCurrentGoalCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.notFollowingPathToCurrentGoalCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int notFollowingPathToCurrentGoalCounter
    return:
      type: System.Int32
    content.vb: Public notFollowingPathToCurrentGoalCounter As Integer
- uid: Watcher.LizardRotModule.unconditionalSupport
  commentId: F:Watcher.LizardRotModule.unconditionalSupport
  id: unconditionalSupport
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: unconditionalSupport
  nameWithType: LizardRotModule.unconditionalSupport
  fullName: Watcher.LizardRotModule.unconditionalSupport
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.unconditionalSupport</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float unconditionalSupport
    return:
      type: System.Single
    content.vb: Public unconditionalSupport As Single
- uid: Watcher.LizardRotModule.legsGrabbing
  commentId: F:Watcher.LizardRotModule.legsGrabbing
  id: legsGrabbing
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: legsGrabbing
  nameWithType: LizardRotModule.legsGrabbing
  fullName: Watcher.LizardRotModule.legsGrabbing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.legsGrabbing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int legsGrabbing
    return:
      type: System.Int32
    content.vb: Public legsGrabbing As Integer
- uid: Watcher.LizardRotModule.stuckCounter
  commentId: F:Watcher.LizardRotModule.stuckCounter
  id: stuckCounter
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: stuckCounter
  nameWithType: LizardRotModule.stuckCounter
  fullName: Watcher.LizardRotModule.stuckCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.stuckCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stuckCounter
    return:
      type: System.Int32
    content.vb: Public stuckCounter As Integer
- uid: Watcher.LizardRotModule.stuckPos
  commentId: F:Watcher.LizardRotModule.stuckPos
  id: stuckPos
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: stuckPos
  nameWithType: LizardRotModule.stuckPos
  fullName: Watcher.LizardRotModule.stuckPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.stuckPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject stuckPos
    return:
      type: Global.PlacedObject
    content.vb: Public stuckPos As PlacedObject
- uid: Watcher.LizardRotModule.daddyMode
  commentId: F:Watcher.LizardRotModule.daddyMode
  id: daddyMode
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: daddyMode
  nameWithType: LizardRotModule.daddyMode
  fullName: Watcher.LizardRotModule.daddyMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.daddyMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool daddyMode
    return:
      type: System.Boolean
    content.vb: Public daddyMode As Boolean
- uid: Watcher.LizardRotModule.nearNormalClimbable
  commentId: F:Watcher.LizardRotModule.nearNormalClimbable
  id: nearNormalClimbable
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: nearNormalClimbable
  nameWithType: LizardRotModule.nearNormalClimbable
  fullName: Watcher.LizardRotModule.nearNormalClimbable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.nearNormalClimbable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool nearNormalClimbable
    return:
      type: System.Boolean
    content.vb: Public nearNormalClimbable As Boolean
- uid: Watcher.LizardRotModule.transforming
  commentId: F:Watcher.LizardRotModule.transforming
  id: transforming
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: transforming
  nameWithType: LizardRotModule.transforming
  fullName: Watcher.LizardRotModule.transforming
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.transforming</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool transforming
    return:
      type: System.Boolean
    content.vb: Public transforming As Boolean
- uid: Watcher.LizardRotModule.transfromTimer
  commentId: F:Watcher.LizardRotModule.transfromTimer
  id: transfromTimer
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: transfromTimer
  nameWithType: LizardRotModule.transfromTimer
  fullName: Watcher.LizardRotModule.transfromTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.transfromTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int transfromTimer
    return:
      type: System.Int32
    content.vb: Public transfromTimer As Integer
- uid: Watcher.LizardRotModule.sizzleSoundCooldown
  commentId: F:Watcher.LizardRotModule.sizzleSoundCooldown
  id: sizzleSoundCooldown
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: sizzleSoundCooldown
  nameWithType: LizardRotModule.sizzleSoundCooldown
  fullName: Watcher.LizardRotModule.sizzleSoundCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.sizzleSoundCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sizzleSoundCooldown
    return:
      type: System.Int32
    content.vb: Public sizzleSoundCooldown As Integer
- uid: Watcher.LizardRotModule.vocalizeSoundCooldown
  commentId: F:Watcher.LizardRotModule.vocalizeSoundCooldown
  id: vocalizeSoundCooldown
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: vocalizeSoundCooldown
  nameWithType: LizardRotModule.vocalizeSoundCooldown
  fullName: Watcher.LizardRotModule.vocalizeSoundCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.vocalizeSoundCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int vocalizeSoundCooldown
    return:
      type: System.Int32
    content.vb: Public vocalizeSoundCooldown As Integer
- uid: Watcher.LizardRotModule.rotColor
  commentId: F:Watcher.LizardRotModule.rotColor
  id: rotColor
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: rotColor
  nameWithType: LizardRotModule.rotColor
  fullName: Watcher.LizardRotModule.rotColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.LizardRotModule.rotColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color rotColor
    return:
      type: UnityEngine.Color
    content.vb: Public rotColor As Color
- uid: Watcher.LizardRotModule.#ctor(Lizard)
  commentId: M:Watcher.LizardRotModule.#ctor(Lizard)
  id: '#ctor(Lizard)'
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: LizardRotModule(Lizard)
  nameWithType: LizardRotModule.LizardRotModule(Lizard)
  fullName: Watcher.LizardRotModule.LizardRotModule(Lizard)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.LizardRotModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardRotModule(Lizard lizard)
    parameters:
    - id: lizard
      type: Global.Lizard
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizard</parameter>
            <parameter>M:Watcher.LizardRotModule.#ctor(Lizard)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(lizard As Lizard)
  overload: Watcher.LizardRotModule.#ctor*
  nameWithType.vb: LizardRotModule.New(Lizard)
  fullName.vb: Watcher.LizardRotModule.New(Lizard)
  name.vb: New(Lizard)
- uid: Watcher.LizardRotModule.Hiss(System.Int32)
  commentId: M:Watcher.LizardRotModule.Hiss(System.Int32)
  id: Hiss(System.Int32)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: Hiss(int)
  nameWithType: LizardRotModule.Hiss(int)
  fullName: Watcher.LizardRotModule.Hiss(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.Hiss(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Hiss(int duration)
    parameters:
    - id: duration
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>duration</parameter>
            <parameter>M:Watcher.LizardRotModule.Hiss(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Hiss(duration As Integer)
  overload: Watcher.LizardRotModule.Hiss*
  nameWithType.vb: LizardRotModule.Hiss(Integer)
  fullName.vb: Watcher.LizardRotModule.Hiss(Integer)
  name.vb: Hiss(Integer)
- uid: Watcher.LizardRotModule.SwitchToDaddyMode
  commentId: M:Watcher.LizardRotModule.SwitchToDaddyMode
  id: SwitchToDaddyMode
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: SwitchToDaddyMode()
  nameWithType: LizardRotModule.SwitchToDaddyMode()
  fullName: Watcher.LizardRotModule.SwitchToDaddyMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.SwitchToDaddyMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SwitchToDaddyMode()
    content.vb: Public Sub SwitchToDaddyMode()
  overload: Watcher.LizardRotModule.SwitchToDaddyMode*
- uid: Watcher.LizardRotModule.SwitchToLizardMode
  commentId: M:Watcher.LizardRotModule.SwitchToLizardMode
  id: SwitchToLizardMode
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: SwitchToLizardMode()
  nameWithType: LizardRotModule.SwitchToLizardMode()
  fullName: Watcher.LizardRotModule.SwitchToLizardMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.SwitchToLizardMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SwitchToLizardMode()
    content.vb: Public Sub SwitchToLizardMode()
  overload: Watcher.LizardRotModule.SwitchToLizardMode*
- uid: Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)
  commentId: M:Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)
  id: AppendagePosition(System.Int32,System.Int32)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: AppendagePosition(int, int)
  nameWithType: LizardRotModule.AppendagePosition(int, int)
  fullName: Watcher.LizardRotModule.AppendagePosition(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 AppendagePosition(int appendage, int segment)
    parameters:
    - id: appendage
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>appendage</parameter>
            <parameter>M:Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: segment
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segment</parameter>
            <parameter>M:Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.LizardRotModule.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function AppendagePosition(appendage As Integer, segment As Integer) As Vector2
  overload: Watcher.LizardRotModule.AppendagePosition*
  nameWithType.vb: LizardRotModule.AppendagePosition(Integer, Integer)
  fullName.vb: Watcher.LizardRotModule.AppendagePosition(Integer, Integer)
  name.vb: AppendagePosition(Integer, Integer)
- uid: Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  id: ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: ApplyForceOnAppendage(Pos, Vector2)
  nameWithType: LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos, Vector2)
  fullName: Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyForceOnAppendage(PhysicalObject.Appendage.Pos pos, Vector2 momentum)
    parameters:
    - id: pos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: momentum
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>momentum</parameter>
            <parameter>M:Watcher.LizardRotModule.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyForceOnAppendage(pos As PhysicalObject.Appendage.Pos, momentum As Vector2)
  overload: Watcher.LizardRotModule.ApplyForceOnAppendage*
- uid: Watcher.LizardRotModule.NewRoom(Room)
  commentId: M:Watcher.LizardRotModule.NewRoom(Room)
  id: NewRoom(Room)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: LizardRotModule.NewRoom(Room)
  fullName: Watcher.LizardRotModule.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Watcher.LizardRotModule.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewRoom(newRoom As Room)
  overload: Watcher.LizardRotModule.NewRoom*
- uid: Watcher.LizardRotModule.PlaceInRoom(Room)
  commentId: M:Watcher.LizardRotModule.PlaceInRoom(Room)
  id: PlaceInRoom(Room)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: PlaceInRoom(Room)
  nameWithType: LizardRotModule.PlaceInRoom(Room)
  fullName: Watcher.LizardRotModule.PlaceInRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.PlaceInRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaceInRoom(Room placeRoom)
    parameters:
    - id: placeRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placeRoom</parameter>
            <parameter>M:Watcher.LizardRotModule.PlaceInRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaceInRoom(placeRoom As Room)
  overload: Watcher.LizardRotModule.PlaceInRoom*
- uid: Watcher.LizardRotModule.Update
  commentId: M:Watcher.LizardRotModule.Update
  id: Update
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardRotModule.Update()
  fullName: Watcher.LizardRotModule.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.LizardRotModule.Update*
- uid: Watcher.LizardRotModule.Act
  commentId: M:Watcher.LizardRotModule.Act
  id: Act
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: Act()
  nameWithType: LizardRotModule.Act()
  fullName: Watcher.LizardRotModule.Act()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.Act</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Act()
    content.vb: Public Sub Act()
  overload: Watcher.LizardRotModule.Act*
- uid: Watcher.LizardRotModule.Stun
  commentId: M:Watcher.LizardRotModule.Stun
  id: Stun
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: Stun()
  nameWithType: LizardRotModule.Stun()
  fullName: Watcher.LizardRotModule.Stun()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.Stun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Stun()
    content.vb: Public Sub Stun()
  overload: Watcher.LizardRotModule.Stun*
- uid: Watcher.LizardRotModule.Violence(System.Single)
  commentId: M:Watcher.LizardRotModule.Violence(System.Single)
  id: Violence(System.Single)
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: Violence(float)
  nameWithType: LizardRotModule.Violence(float)
  fullName: Watcher.LizardRotModule.Violence(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.Violence(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Violence(float damage)
    parameters:
    - id: damage
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>damage</parameter>
            <parameter>M:Watcher.LizardRotModule.Violence(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Violence(damage As Single)
  overload: Watcher.LizardRotModule.Violence*
  nameWithType.vb: LizardRotModule.Violence(Single)
  fullName.vb: Watcher.LizardRotModule.Violence(Single)
  name.vb: Violence(Single)
- uid: Watcher.LizardRotModule.SpitOutOfShortCut
  commentId: M:Watcher.LizardRotModule.SpitOutOfShortCut
  id: SpitOutOfShortCut
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: SpitOutOfShortCut()
  nameWithType: LizardRotModule.SpitOutOfShortCut()
  fullName: Watcher.LizardRotModule.SpitOutOfShortCut()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.SpitOutOfShortCut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpitOutOfShortCut()
    content.vb: Public Sub SpitOutOfShortCut()
  overload: Watcher.LizardRotModule.SpitOutOfShortCut*
- uid: Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain
  commentId: M:Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain
  id: CheckTentaclesForAccessibleTerrain
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: CheckTentaclesForAccessibleTerrain()
  nameWithType: LizardRotModule.CheckTentaclesForAccessibleTerrain()
  fullName: Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection CheckTentaclesForAccessibleTerrain()
    return:
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain</parameter>
          </include>
        </markup>
    content.vb: Public Function CheckTentaclesForAccessibleTerrain() As MovementConnection
  overload: Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain*
- uid: Watcher.LizardRotModule.RotGraphicsOwner
  commentId: P:Watcher.LizardRotModule.RotGraphicsOwner
  id: RotGraphicsOwner
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotGraphicsOwner
  nameWithType: LizardRotModule.RotGraphicsOwner
  fullName: Watcher.LizardRotModule.RotGraphicsOwner
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotGraphicsOwner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DaddyGraphics.IHaveRotGraphics RotGraphicsOwner { get; }
    parameters: []
    return:
      type: Global.DaddyGraphics.IHaveRotGraphics
    content.vb: Public ReadOnly Property RotGraphicsOwner As DaddyGraphics.IHaveRotGraphics
  overload: Watcher.LizardRotModule.RotGraphicsOwner*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
- uid: Watcher.LizardRotModule.RotTentacles
  commentId: P:Watcher.LizardRotModule.RotTentacles
  id: RotTentacles
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotTentacles
  nameWithType: LizardRotModule.RotTentacles
  fullName: Watcher.LizardRotModule.RotTentacles
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotTentacles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DaddyTentacle[] RotTentacles { get; }
    parameters: []
    return:
      type: Global.DaddyTentacle[]
    content.vb: Public ReadOnly Property RotTentacles As DaddyTentacle()
  overload: Watcher.LizardRotModule.RotTentacles*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotTentacles
- uid: Watcher.LizardRotModule.RotAI
  commentId: P:Watcher.LizardRotModule.RotAI
  id: RotAI
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotAI
  nameWithType: LizardRotModule.RotAI
  fullName: Watcher.LizardRotModule.RotAI
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArtificialIntelligence RotAI { get; }
    parameters: []
    return:
      type: Global.ArtificialIntelligence
    content.vb: Public ReadOnly Property RotAI As ArtificialIntelligence
  overload: Watcher.LizardRotModule.RotAI*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotAI
- uid: Watcher.LizardRotModule.RotMoveDirection
  commentId: P:Watcher.LizardRotModule.RotMoveDirection
  id: RotMoveDirection
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotMoveDirection
  nameWithType: LizardRotModule.RotMoveDirection
  fullName: Watcher.LizardRotModule.RotMoveDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotMoveDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RotMoveDirection { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property RotMoveDirection As Vector2
  overload: Watcher.LizardRotModule.RotMoveDirection*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
- uid: Watcher.LizardRotModule.RotSizeClass
  commentId: P:Watcher.LizardRotModule.RotSizeClass
  id: RotSizeClass
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotSizeClass
  nameWithType: LizardRotModule.RotSizeClass
  fullName: Watcher.LizardRotModule.RotSizeClass
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotSizeClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RotSizeClass { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RotSizeClass As Boolean
  overload: Watcher.LizardRotModule.RotSizeClass*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
- uid: Watcher.LizardRotModule.RotEyeColor
  commentId: P:Watcher.LizardRotModule.RotEyeColor
  id: RotEyeColor
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotEyeColor
  nameWithType: LizardRotModule.RotEyeColor
  fullName: Watcher.LizardRotModule.RotEyeColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotEyeColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color RotEyeColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property RotEyeColor As Color
  overload: Watcher.LizardRotModule.RotEyeColor*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
- uid: Watcher.LizardRotModule.RotEyesClose
  commentId: P:Watcher.LizardRotModule.RotEyesClose
  id: RotEyesClose
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotEyesClose
  nameWithType: LizardRotModule.RotEyesClose
  fullName: Watcher.LizardRotModule.RotEyesClose
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotEyesClose</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int RotEyesClose { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RotEyesClose As Integer
  overload: Watcher.LizardRotModule.RotEyesClose*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
- uid: Watcher.LizardRotModule.RotDigesting
  commentId: P:Watcher.LizardRotModule.RotDigesting
  id: RotDigesting
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotDigesting
  nameWithType: LizardRotModule.RotDigesting
  fullName: Watcher.LizardRotModule.RotDigesting
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotDigesting</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RotDigesting { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RotDigesting As Boolean
  overload: Watcher.LizardRotModule.RotDigesting*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotDigesting
- uid: Watcher.LizardRotModule.RotStuckCounter
  commentId: P:Watcher.LizardRotModule.RotStuckCounter
  id: RotStuckCounter
  parent: Watcher.LizardRotModule
  langs:
  - csharp
  - vb
  name: RotStuckCounter
  nameWithType: LizardRotModule.RotStuckCounter
  fullName: Watcher.LizardRotModule.RotStuckCounter
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.LizardRotModule.RotStuckCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int RotStuckCounter { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RotStuckCounter As Integer
  overload: Watcher.LizardRotModule.RotStuckCounter*
  implements:
  - Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.DaddyLongLegs.IHaveRotParts
  commentId: T:Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: DaddyLongLegs.html
  name: DaddyLongLegs.IHaveRotParts
  nameWithType: DaddyLongLegs.IHaveRotParts
  fullName: DaddyLongLegs.IHaveRotParts
  spec.csharp:
  - uid: Global.DaddyLongLegs
    name: DaddyLongLegs
    isExternal: true
    href: DaddyLongLegs.html
  - name: .
  - uid: Global.DaddyLongLegs.IHaveRotParts
    name: IHaveRotParts
    isExternal: true
    href: DaddyLongLegs.IHaveRotParts.html
  spec.vb:
  - uid: Global.DaddyLongLegs
    name: DaddyLongLegs
    isExternal: true
    href: DaddyLongLegs.html
  - name: .
  - uid: Global.DaddyLongLegs.IHaveRotParts
    name: IHaveRotParts
    isExternal: true
    href: DaddyLongLegs.IHaveRotParts.html
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{CreatureTemplate}
  commentId: T:System.Collections.Generic.List{CreatureTemplate}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CreatureTemplate>
  nameWithType: List<CreatureTemplate>
  fullName: System.Collections.Generic.List<CreatureTemplate>
  nameWithType.vb: List(Of CreatureTemplate)
  fullName.vb: System.Collections.Generic.List(Of CreatureTemplate)
  name.vb: List(Of CreatureTemplate)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.DaddyTentacle[]
  isExternal: true
  href: DaddyTentacle.html
  name: DaddyTentacle[]
  nameWithType: DaddyTentacle[]
  fullName: DaddyTentacle[]
  nameWithType.vb: DaddyTentacle()
  fullName.vb: DaddyTentacle()
  name.vb: DaddyTentacle()
  spec.csharp:
  - uid: Global.DaddyTentacle
    name: DaddyTentacle
    isExternal: true
    href: DaddyTentacle.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.DaddyTentacle
    name: DaddyTentacle
    isExternal: true
    href: DaddyTentacle.html
  - name: (
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Watcher.LizardRotModule.#ctor*
  commentId: Overload:Watcher.LizardRotModule.#ctor
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule__ctor_Lizard_
  name: LizardRotModule
  nameWithType: LizardRotModule.LizardRotModule
  fullName: Watcher.LizardRotModule.LizardRotModule
  nameWithType.vb: LizardRotModule.New
  fullName.vb: Watcher.LizardRotModule.New
  name.vb: New
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: Watcher.LizardRotModule.Hiss*
  commentId: Overload:Watcher.LizardRotModule.Hiss
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_Hiss_System_Int32_
  name: Hiss
  nameWithType: LizardRotModule.Hiss
  fullName: Watcher.LizardRotModule.Hiss
- uid: Watcher.LizardRotModule.SwitchToDaddyMode*
  commentId: Overload:Watcher.LizardRotModule.SwitchToDaddyMode
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_SwitchToDaddyMode
  name: SwitchToDaddyMode
  nameWithType: LizardRotModule.SwitchToDaddyMode
  fullName: Watcher.LizardRotModule.SwitchToDaddyMode
- uid: Watcher.LizardRotModule.SwitchToLizardMode*
  commentId: Overload:Watcher.LizardRotModule.SwitchToLizardMode
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_SwitchToLizardMode
  name: SwitchToLizardMode
  nameWithType: LizardRotModule.SwitchToLizardMode
  fullName: Watcher.LizardRotModule.SwitchToLizardMode
- uid: Watcher.LizardRotModule.AppendagePosition*
  commentId: Overload:Watcher.LizardRotModule.AppendagePosition
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_AppendagePosition_System_Int32_System_Int32_
  name: AppendagePosition
  nameWithType: LizardRotModule.AppendagePosition
  fullName: Watcher.LizardRotModule.AppendagePosition
- uid: Watcher.LizardRotModule.ApplyForceOnAppendage*
  commentId: Overload:Watcher.LizardRotModule.ApplyForceOnAppendage
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_ApplyForceOnAppendage_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: ApplyForceOnAppendage
  nameWithType: LizardRotModule.ApplyForceOnAppendage
  fullName: Watcher.LizardRotModule.ApplyForceOnAppendage
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
- uid: Watcher.LizardRotModule.NewRoom*
  commentId: Overload:Watcher.LizardRotModule.NewRoom
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_NewRoom_Room_
  name: NewRoom
  nameWithType: LizardRotModule.NewRoom
  fullName: Watcher.LizardRotModule.NewRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Watcher.LizardRotModule.PlaceInRoom*
  commentId: Overload:Watcher.LizardRotModule.PlaceInRoom
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_PlaceInRoom_Room_
  name: PlaceInRoom
  nameWithType: LizardRotModule.PlaceInRoom
  fullName: Watcher.LizardRotModule.PlaceInRoom
- uid: Watcher.LizardRotModule.Update*
  commentId: Overload:Watcher.LizardRotModule.Update
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_Update
  name: Update
  nameWithType: LizardRotModule.Update
  fullName: Watcher.LizardRotModule.Update
- uid: Watcher.LizardRotModule.Act*
  commentId: Overload:Watcher.LizardRotModule.Act
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_Act
  name: Act
  nameWithType: LizardRotModule.Act
  fullName: Watcher.LizardRotModule.Act
- uid: Watcher.LizardRotModule.Stun*
  commentId: Overload:Watcher.LizardRotModule.Stun
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_Stun
  name: Stun
  nameWithType: LizardRotModule.Stun
  fullName: Watcher.LizardRotModule.Stun
- uid: Watcher.LizardRotModule.Violence*
  commentId: Overload:Watcher.LizardRotModule.Violence
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_Violence_System_Single_
  name: Violence
  nameWithType: LizardRotModule.Violence
  fullName: Watcher.LizardRotModule.Violence
- uid: Watcher.LizardRotModule.SpitOutOfShortCut*
  commentId: Overload:Watcher.LizardRotModule.SpitOutOfShortCut
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_SpitOutOfShortCut
  name: SpitOutOfShortCut
  nameWithType: LizardRotModule.SpitOutOfShortCut
  fullName: Watcher.LizardRotModule.SpitOutOfShortCut
- uid: Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain*
  commentId: Overload:Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_CheckTentaclesForAccessibleTerrain
  name: CheckTentaclesForAccessibleTerrain
  nameWithType: LizardRotModule.CheckTentaclesForAccessibleTerrain
  fullName: Watcher.LizardRotModule.CheckTentaclesForAccessibleTerrain
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Watcher.LizardRotModule.RotGraphicsOwner*
  commentId: Overload:Watcher.LizardRotModule.RotGraphicsOwner
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotGraphicsOwner
  name: RotGraphicsOwner
  nameWithType: LizardRotModule.RotGraphicsOwner
  fullName: Watcher.LizardRotModule.RotGraphicsOwner
- uid: Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotGraphicsOwner
  name: RotGraphicsOwner
  nameWithType: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
  fullName: DaddyLongLegs.IHaveRotParts.RotGraphicsOwner
- uid: Global.DaddyGraphics.IHaveRotGraphics
  commentId: T:Global.DaddyGraphics.IHaveRotGraphics
  isExternal: true
  href: DaddyGraphics.html
  name: DaddyGraphics.IHaveRotGraphics
  nameWithType: DaddyGraphics.IHaveRotGraphics
  fullName: DaddyGraphics.IHaveRotGraphics
  spec.csharp:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
  spec.vb:
  - uid: Global.DaddyGraphics
    name: DaddyGraphics
    isExternal: true
    href: DaddyGraphics.html
  - name: .
  - uid: Global.DaddyGraphics.IHaveRotGraphics
    name: IHaveRotGraphics
    isExternal: true
    href: DaddyGraphics.IHaveRotGraphics.html
- uid: Watcher.LizardRotModule.RotTentacles*
  commentId: Overload:Watcher.LizardRotModule.RotTentacles
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotTentacles
  name: RotTentacles
  nameWithType: LizardRotModule.RotTentacles
  fullName: Watcher.LizardRotModule.RotTentacles
- uid: Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotTentacles
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotTentacles
  name: RotTentacles
  nameWithType: DaddyLongLegs.IHaveRotParts.RotTentacles
  fullName: DaddyLongLegs.IHaveRotParts.RotTentacles
- uid: Watcher.LizardRotModule.RotAI*
  commentId: Overload:Watcher.LizardRotModule.RotAI
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotAI
  name: RotAI
  nameWithType: LizardRotModule.RotAI
  fullName: Watcher.LizardRotModule.RotAI
- uid: Global.DaddyLongLegs.IHaveRotParts.RotAI
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotAI
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotAI
  name: RotAI
  nameWithType: DaddyLongLegs.IHaveRotParts.RotAI
  fullName: DaddyLongLegs.IHaveRotParts.RotAI
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Watcher.LizardRotModule.RotMoveDirection*
  commentId: Overload:Watcher.LizardRotModule.RotMoveDirection
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotMoveDirection
  name: RotMoveDirection
  nameWithType: LizardRotModule.RotMoveDirection
  fullName: Watcher.LizardRotModule.RotMoveDirection
- uid: Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotMoveDirection
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotMoveDirection
  name: RotMoveDirection
  nameWithType: DaddyLongLegs.IHaveRotParts.RotMoveDirection
  fullName: DaddyLongLegs.IHaveRotParts.RotMoveDirection
- uid: Watcher.LizardRotModule.RotSizeClass*
  commentId: Overload:Watcher.LizardRotModule.RotSizeClass
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotSizeClass
  name: RotSizeClass
  nameWithType: LizardRotModule.RotSizeClass
  fullName: Watcher.LizardRotModule.RotSizeClass
- uid: Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotSizeClass
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotSizeClass
  name: RotSizeClass
  nameWithType: DaddyLongLegs.IHaveRotParts.RotSizeClass
  fullName: DaddyLongLegs.IHaveRotParts.RotSizeClass
- uid: Watcher.LizardRotModule.RotEyeColor*
  commentId: Overload:Watcher.LizardRotModule.RotEyeColor
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotEyeColor
  name: RotEyeColor
  nameWithType: LizardRotModule.RotEyeColor
  fullName: Watcher.LizardRotModule.RotEyeColor
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotEyeColor
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotEyeColor
  name: RotEyeColor
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyeColor
  fullName: DaddyLongLegs.IHaveRotParts.RotEyeColor
- uid: Watcher.LizardRotModule.RotEyesClose*
  commentId: Overload:Watcher.LizardRotModule.RotEyesClose
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotEyesClose
  name: RotEyesClose
  nameWithType: LizardRotModule.RotEyesClose
  fullName: Watcher.LizardRotModule.RotEyesClose
- uid: Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotEyesClose
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotEyesClose
  name: RotEyesClose
  nameWithType: DaddyLongLegs.IHaveRotParts.RotEyesClose
  fullName: DaddyLongLegs.IHaveRotParts.RotEyesClose
- uid: Watcher.LizardRotModule.RotDigesting*
  commentId: Overload:Watcher.LizardRotModule.RotDigesting
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotDigesting
  name: RotDigesting
  nameWithType: LizardRotModule.RotDigesting
  fullName: Watcher.LizardRotModule.RotDigesting
- uid: Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotDigesting
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotDigesting
  name: RotDigesting
  nameWithType: DaddyLongLegs.IHaveRotParts.RotDigesting
  fullName: DaddyLongLegs.IHaveRotParts.RotDigesting
- uid: Watcher.LizardRotModule.RotStuckCounter*
  commentId: Overload:Watcher.LizardRotModule.RotStuckCounter
  isExternal: true
  href: Watcher.LizardRotModule.html#Watcher_LizardRotModule_RotStuckCounter
  name: RotStuckCounter
  nameWithType: LizardRotModule.RotStuckCounter
  fullName: Watcher.LizardRotModule.RotStuckCounter
- uid: Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  commentId: P:Global.DaddyLongLegs.IHaveRotParts.RotStuckCounter
  parent: Global.DaddyLongLegs.IHaveRotParts
  isExternal: true
  href: Global.DaddyLongLegs.IHaveRotParts.html#DaddyLongLegs_IHaveRotParts_RotStuckCounter
  name: RotStuckCounter
  nameWithType: DaddyLongLegs.IHaveRotParts.RotStuckCounter
  fullName: DaddyLongLegs.IHaveRotParts.RotStuckCounter
