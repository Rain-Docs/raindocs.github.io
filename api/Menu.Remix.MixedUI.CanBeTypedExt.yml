### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.CanBeTypedExt
  commentId: T:Menu.Remix.MixedUI.CanBeTypedExt
  id: CanBeTypedExt
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)
  - Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)
  - Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)
  langs:
  - csharp
  - vb
  name: CanBeTypedExt
  nameWithType: CanBeTypedExt
  fullName: Menu.Remix.MixedUI.CanBeTypedExt
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.CanBeTypedExt</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class CanBeTypedExt
    content.vb: Public Module CanBeTypedExt
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)
  commentId: M:Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)
  id: Assign(Menu.Remix.MixedUI.ICanBeTyped)
  isExtensionMethod: true
  parent: Menu.Remix.MixedUI.CanBeTypedExt
  langs:
  - csharp
  - vb
  name: Assign(ICanBeTyped)
  nameWithType: CanBeTypedExt.Assign(ICanBeTyped)
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Assign(this ICanBeTyped typable)
    parameters:
    - id: typable
      type: Menu.Remix.MixedUI.ICanBeTyped
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>typable</parameter>
            <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.Assign(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Assign(typable As ICanBeTyped)
  overload: Menu.Remix.MixedUI.CanBeTypedExt.Assign*
- uid: Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)
  commentId: M:Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)
  id: IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)
  isExtensionMethod: true
  parent: Menu.Remix.MixedUI.CanBeTypedExt
  langs:
  - csharp
  - vb
  name: IsAssigned(ICanBeTyped)
  nameWithType: CanBeTypedExt.IsAssigned(ICanBeTyped)
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsAssigned(this ICanBeTyped typable)
    parameters:
    - id: typable
      type: Menu.Remix.MixedUI.ICanBeTyped
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>typable</parameter>
            <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsAssigned(typable As ICanBeTyped) As Boolean
  overload: Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned*
- uid: Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)
  commentId: M:Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)
  id: Unassign(Menu.Remix.MixedUI.ICanBeTyped)
  isExtensionMethod: true
  parent: Menu.Remix.MixedUI.CanBeTypedExt
  langs:
  - csharp
  - vb
  name: Unassign(ICanBeTyped)
  nameWithType: CanBeTypedExt.Unassign(ICanBeTyped)
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Unassign(this ICanBeTyped typable)
    parameters:
    - id: typable
      type: Menu.Remix.MixedUI.ICanBeTyped
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>typable</parameter>
            <parameter>M:Menu.Remix.MixedUI.CanBeTypedExt.Unassign(Menu.Remix.MixedUI.ICanBeTyped)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Unassign(typable As ICanBeTyped)
  overload: Menu.Remix.MixedUI.CanBeTypedExt.Unassign*
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.MixedUI.CanBeTypedExt.Assign*
  commentId: Overload:Menu.Remix.MixedUI.CanBeTypedExt.Assign
  isExternal: true
  href: Menu.Remix.MixedUI.CanBeTypedExt.html#Menu_Remix_MixedUI_CanBeTypedExt_Assign_Menu_Remix_MixedUI_ICanBeTyped_
  name: Assign
  nameWithType: CanBeTypedExt.Assign
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.Assign
- uid: Menu.Remix.MixedUI.ICanBeTyped
  commentId: T:Menu.Remix.MixedUI.ICanBeTyped
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.ICanBeTyped.html
  name: ICanBeTyped
  nameWithType: ICanBeTyped
  fullName: Menu.Remix.MixedUI.ICanBeTyped
- uid: Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned*
  commentId: Overload:Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned
  isExternal: true
  href: Menu.Remix.MixedUI.CanBeTypedExt.html#Menu_Remix_MixedUI_CanBeTypedExt_IsAssigned_Menu_Remix_MixedUI_ICanBeTyped_
  name: IsAssigned
  nameWithType: CanBeTypedExt.IsAssigned
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.IsAssigned
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.MixedUI.CanBeTypedExt.Unassign*
  commentId: Overload:Menu.Remix.MixedUI.CanBeTypedExt.Unassign
  isExternal: true
  href: Menu.Remix.MixedUI.CanBeTypedExt.html#Menu_Remix_MixedUI_CanBeTypedExt_Unassign_Menu_Remix_MixedUI_ICanBeTyped_
  name: Unassign
  nameWithType: CanBeTypedExt.Unassign
  fullName: Menu.Remix.MixedUI.CanBeTypedExt.Unassign
