### YamlMime:ManagedReference
items:
- uid: Global.LizardGraphics
  commentId: T:Global.LizardGraphics
  id: LizardGraphics
  parent: Global
  children:
  - Global.LizardGraphics.#ctor(PhysicalObject)
  - Global.LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)
  - Global.LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.LizardGraphics.BodyAndTailLength
  - Global.LizardGraphics.BodyChunkDisplayRad(System.Int32)
  - Global.LizardGraphics.BodyColor(System.Single)
  - Global.LizardGraphics.BubbleIntensity
  - Global.LizardGraphics.CamoAmountControlled
  - Global.LizardGraphics.Camouflaged
  - Global.LizardGraphics.Caramel
  - Global.LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  - Global.LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  - Global.LizardGraphics.DebugBodyChunksEnd
  - Global.LizardGraphics.DebugBodyChunksStart
  - Global.LizardGraphics.DebugGrabPosEnd
  - Global.LizardGraphics.DebugGrabPosStart
  - Global.LizardGraphics.DebugHead
  - Global.LizardGraphics.DebugLimbsEnd
  - Global.LizardGraphics.DebugLimbsStart
  - Global.LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.LizardGraphics.DynamicBodyColor(System.Single)
  - Global.LizardGraphics.ForcedLookCreature
  - Global.LizardGraphics.HeadColor(System.Single)
  - Global.LizardGraphics.HeadLightsUpFromNoise
  - Global.LizardGraphics.HeadRotation(System.Single)
  - Global.LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.LizardGraphics.LookAtNothing
  - Global.LizardGraphics.Reset
  - Global.LizardGraphics.SalamanderColor
  - Global.LizardGraphics.SpinePosition(System.Single,System.Single)
  - Global.LizardGraphics.SpriteBodyCirclesEnd
  - Global.LizardGraphics.SpriteBodyCirclesStart
  - Global.LizardGraphics.SpriteBodyMesh
  - Global.LizardGraphics.SpriteHeadEnd
  - Global.LizardGraphics.SpriteHeadStart
  - Global.LizardGraphics.SpriteLimbsColorEnd
  - Global.LizardGraphics.SpriteLimbsColorStart
  - Global.LizardGraphics.SpriteLimbsEnd
  - Global.LizardGraphics.SpriteLimbsStart
  - Global.LizardGraphics.SpriteTail
  - Global.LizardGraphics.SpriteTongueEnd
  - Global.LizardGraphics.SpriteTongueStart
  - Global.LizardGraphics.SpriteVisionEnd
  - Global.LizardGraphics.SpriteVisionStart
  - Global.LizardGraphics.Stun(System.Int32)
  - Global.LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)
  - Global.LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)
  - Global.LizardGraphics.TotalDebugSprites
  - Global.LizardGraphics.TotalSprites
  - Global.LizardGraphics.Update
  - Global.LizardGraphics.WhiteFlicker(System.Int32)
  - Global.LizardGraphics.blackLizardLightUpHead
  - Global.LizardGraphics.bodyLength
  - Global.LizardGraphics.cosmetics
  - Global.LizardGraphics.creatureLooker
  - Global.LizardGraphics.depthRotation
  - Global.LizardGraphics.drawPositions
  - Global.LizardGraphics.effectColor
  - Global.LizardGraphics.extraSprites
  - Global.LizardGraphics.frontBob
  - Global.LizardGraphics.frontLegsGrabbing
  - Global.LizardGraphics.head
  - Global.LizardGraphics.headColorSetter
  - Global.LizardGraphics.headConnectionRad
  - Global.LizardGraphics.headDepthRotation
  - Global.LizardGraphics.hindBob
  - Global.LizardGraphics.hindLegsGrabbing
  - Global.LizardGraphics.iVars
  - Global.LizardGraphics.lastDepthRotation
  - Global.LizardGraphics.lastHeadDepthRotation
  - Global.LizardGraphics.lastVoiceVisualization
  - Global.LizardGraphics.lastVoiceVisualizationIntensity
  - Global.LizardGraphics.legsGrabbing
  - Global.LizardGraphics.lightSource
  - Global.LizardGraphics.limbs
  - Global.LizardGraphics.lizard
  - Global.LizardGraphics.lookPos
  - Global.LizardGraphics.noGripCounter
  - Global.LizardGraphics.overrideHeadGraphic
  - Global.LizardGraphics.palette
  - Global.LizardGraphics.rotGraphics
  - Global.LizardGraphics.showDominance
  - Global.LizardGraphics.snowAccCosmetic
  - Global.LizardGraphics.startOfExtraSprites
  - Global.LizardGraphics.tail
  - Global.LizardGraphics.tailLength
  - Global.LizardGraphics.tongue
  - Global.LizardGraphics.voiceVisualization
  - Global.LizardGraphics.voiceVisualizationIntensity
  - Global.LizardGraphics.whiteCamoColor
  - Global.LizardGraphics.whiteFlicker
  langs:
  - csharp
  - vb
  name: LizardGraphics
  nameWithType: LizardGraphics
  fullName: LizardGraphics
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardGraphics : GraphicsModule, IDrawable, ILookingAtCreatures'
    content.vb: Public Class LizardGraphics Inherits GraphicsModule Implements IDrawable, ILookingAtCreatures
  inheritance:
  - System.Object
  - Global.GraphicsModule
  implements:
  - Global.IDrawable
  - Global.ILookingAtCreatures
  inheritedMembers:
  - Global.GraphicsModule.internalContainerObjects
  - Global.GraphicsModule.bodyParts
  - Global.GraphicsModule.DEBUGLABELS
  - Global.GraphicsModule.culled
  - Global.GraphicsModule.lastCulled
  - Global.GraphicsModule.dispose
  - Global.GraphicsModule.cullRange
  - Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  - Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  - Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  - Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  - Global.GraphicsModule.BringSpritesToFront
  - Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  - Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  - Global.GraphicsModule.DeactivateRippleHybrid
  - Global.GraphicsModule.owner
  - Global.GraphicsModule.ShouldBeCulled
  - Global.GraphicsModule.rippleHybridState
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardGraphics.lizard
  commentId: F:Global.LizardGraphics.lizard
  id: lizard
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lizard
  nameWithType: LizardGraphics.lizard
  fullName: LizardGraphics.lizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lizard lizard
    return:
      type: Global.Lizard
    content.vb: Public lizard As Lizard
- uid: Global.LizardGraphics.limbs
  commentId: F:Global.LizardGraphics.limbs
  id: limbs
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: limbs
  nameWithType: LizardGraphics.limbs
  fullName: LizardGraphics.limbs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.limbs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardLimb[] limbs
    return:
      type: Global.LizardLimb[]
    content.vb: Public limbs As LizardLimb()
- uid: Global.LizardGraphics.drawPositions
  commentId: F:Global.LizardGraphics.drawPositions
  id: drawPositions
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: drawPositions
  nameWithType: LizardGraphics.drawPositions
  fullName: LizardGraphics.drawPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.drawPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] drawPositions
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public drawPositions As Vector2(,)
- uid: Global.LizardGraphics.tail
  commentId: F:Global.LizardGraphics.tail
  id: tail
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: tail
  nameWithType: LizardGraphics.tail
  fullName: LizardGraphics.tail
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.tail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TailSegment[] tail
    return:
      type: Global.TailSegment[]
    content.vb: Public tail As TailSegment()
- uid: Global.LizardGraphics.tongue
  commentId: F:Global.LizardGraphics.tongue
  id: tongue
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: tongue
  nameWithType: LizardGraphics.tongue
  fullName: LizardGraphics.tongue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.tongue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GenericBodyPart[] tongue
    return:
      type: Global.GenericBodyPart[]
    content.vb: Public tongue As GenericBodyPart()
- uid: Global.LizardGraphics.legsGrabbing
  commentId: F:Global.LizardGraphics.legsGrabbing
  id: legsGrabbing
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: legsGrabbing
  nameWithType: LizardGraphics.legsGrabbing
  fullName: LizardGraphics.legsGrabbing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.legsGrabbing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int legsGrabbing
    return:
      type: System.Int32
    content.vb: Public legsGrabbing As Integer
- uid: Global.LizardGraphics.frontLegsGrabbing
  commentId: F:Global.LizardGraphics.frontLegsGrabbing
  id: frontLegsGrabbing
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: frontLegsGrabbing
  nameWithType: LizardGraphics.frontLegsGrabbing
  fullName: LizardGraphics.frontLegsGrabbing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.frontLegsGrabbing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int frontLegsGrabbing
    return:
      type: System.Int32
    content.vb: Public frontLegsGrabbing As Integer
- uid: Global.LizardGraphics.hindLegsGrabbing
  commentId: F:Global.LizardGraphics.hindLegsGrabbing
  id: hindLegsGrabbing
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: hindLegsGrabbing
  nameWithType: LizardGraphics.hindLegsGrabbing
  fullName: LizardGraphics.hindLegsGrabbing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.hindLegsGrabbing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int hindLegsGrabbing
    return:
      type: System.Int32
    content.vb: Public hindLegsGrabbing As Integer
- uid: Global.LizardGraphics.noGripCounter
  commentId: F:Global.LizardGraphics.noGripCounter
  id: noGripCounter
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: noGripCounter
  nameWithType: LizardGraphics.noGripCounter
  fullName: LizardGraphics.noGripCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.noGripCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int noGripCounter
    return:
      type: System.Int32
    content.vb: Public noGripCounter As Integer
- uid: Global.LizardGraphics.frontBob
  commentId: F:Global.LizardGraphics.frontBob
  id: frontBob
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: frontBob
  nameWithType: LizardGraphics.frontBob
  fullName: LizardGraphics.frontBob
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.frontBob</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float frontBob
    return:
      type: System.Single
    content.vb: Public frontBob As Single
- uid: Global.LizardGraphics.hindBob
  commentId: F:Global.LizardGraphics.hindBob
  id: hindBob
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: hindBob
  nameWithType: LizardGraphics.hindBob
  fullName: LizardGraphics.hindBob
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.hindBob</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float hindBob
    return:
      type: System.Single
    content.vb: Public hindBob As Single
- uid: Global.LizardGraphics.depthRotation
  commentId: F:Global.LizardGraphics.depthRotation
  id: depthRotation
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: depthRotation
  nameWithType: LizardGraphics.depthRotation
  fullName: LizardGraphics.depthRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.depthRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float depthRotation
    return:
      type: System.Single
    content.vb: Public depthRotation As Single
- uid: Global.LizardGraphics.lastDepthRotation
  commentId: F:Global.LizardGraphics.lastDepthRotation
  id: lastDepthRotation
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lastDepthRotation
  nameWithType: LizardGraphics.lastDepthRotation
  fullName: LizardGraphics.lastDepthRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lastDepthRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastDepthRotation
    return:
      type: System.Single
    content.vb: Public lastDepthRotation As Single
- uid: Global.LizardGraphics.headDepthRotation
  commentId: F:Global.LizardGraphics.headDepthRotation
  id: headDepthRotation
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: headDepthRotation
  nameWithType: LizardGraphics.headDepthRotation
  fullName: LizardGraphics.headDepthRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.headDepthRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float headDepthRotation
    return:
      type: System.Single
    content.vb: Public headDepthRotation As Single
- uid: Global.LizardGraphics.lastHeadDepthRotation
  commentId: F:Global.LizardGraphics.lastHeadDepthRotation
  id: lastHeadDepthRotation
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lastHeadDepthRotation
  nameWithType: LizardGraphics.lastHeadDepthRotation
  fullName: LizardGraphics.lastHeadDepthRotation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lastHeadDepthRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastHeadDepthRotation
    return:
      type: System.Single
    content.vb: Public lastHeadDepthRotation As Single
- uid: Global.LizardGraphics.head
  commentId: F:Global.LizardGraphics.head
  id: head
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: head
  nameWithType: LizardGraphics.head
  fullName: LizardGraphics.head
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.head</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GenericBodyPart head
    return:
      type: Global.GenericBodyPart
    content.vb: Public head As GenericBodyPart
- uid: Global.LizardGraphics.whiteFlicker
  commentId: F:Global.LizardGraphics.whiteFlicker
  id: whiteFlicker
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: whiteFlicker
  nameWithType: LizardGraphics.whiteFlicker
  fullName: LizardGraphics.whiteFlicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.whiteFlicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int whiteFlicker
    return:
      type: System.Int32
    content.vb: Public whiteFlicker As Integer
- uid: Global.LizardGraphics.creatureLooker
  commentId: F:Global.LizardGraphics.creatureLooker
  id: creatureLooker
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: creatureLooker
  nameWithType: LizardGraphics.creatureLooker
  fullName: LizardGraphics.creatureLooker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.creatureLooker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureLooker creatureLooker
    return:
      type: Global.CreatureLooker
    content.vb: Public creatureLooker As CreatureLooker
- uid: Global.LizardGraphics.lookPos
  commentId: F:Global.LizardGraphics.lookPos
  id: lookPos
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lookPos
  nameWithType: LizardGraphics.lookPos
  fullName: LizardGraphics.lookPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lookPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lookPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lookPos As Vector2
- uid: Global.LizardGraphics.palette
  commentId: F:Global.LizardGraphics.palette
  id: palette
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: palette
  nameWithType: LizardGraphics.palette
  fullName: LizardGraphics.palette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.palette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomPalette palette
    return:
      type: Global.RoomPalette
    content.vb: Public palette As RoomPalette
- uid: Global.LizardGraphics.headColorSetter
  commentId: F:Global.LizardGraphics.headColorSetter
  id: headColorSetter
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: headColorSetter
  nameWithType: LizardGraphics.headColorSetter
  fullName: LizardGraphics.headColorSetter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.headColorSetter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float headColorSetter
    return:
      type: System.Single
    content.vb: Public headColorSetter As Single
- uid: Global.LizardGraphics.whiteCamoColor
  commentId: F:Global.LizardGraphics.whiteCamoColor
  id: whiteCamoColor
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: whiteCamoColor
  nameWithType: LizardGraphics.whiteCamoColor
  fullName: LizardGraphics.whiteCamoColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.whiteCamoColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color whiteCamoColor
    return:
      type: UnityEngine.Color
    content.vb: Public whiteCamoColor As Color
- uid: Global.LizardGraphics.extraSprites
  commentId: F:Global.LizardGraphics.extraSprites
  id: extraSprites
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: extraSprites
  nameWithType: LizardGraphics.extraSprites
  fullName: LizardGraphics.extraSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.extraSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int extraSprites
    return:
      type: System.Int32
    content.vb: Public extraSprites As Integer
- uid: Global.LizardGraphics.cosmetics
  commentId: F:Global.LizardGraphics.cosmetics
  id: cosmetics
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: cosmetics
  nameWithType: LizardGraphics.cosmetics
  fullName: LizardGraphics.cosmetics
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.cosmetics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Template> cosmetics
    return:
      type: System.Collections.Generic.List{LizardCosmetics.Template}
    content.vb: Public cosmetics As List(Of Template)
- uid: Global.LizardGraphics.snowAccCosmetic
  commentId: F:Global.LizardGraphics.snowAccCosmetic
  id: snowAccCosmetic
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: snowAccCosmetic
  nameWithType: LizardGraphics.snowAccCosmetic
  fullName: LizardGraphics.snowAccCosmetic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.snowAccCosmetic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SnowAccumulation snowAccCosmetic
    return:
      type: LizardCosmetics.SnowAccumulation
    content.vb: Public snowAccCosmetic As SnowAccumulation
- uid: Global.LizardGraphics.bodyLength
  commentId: F:Global.LizardGraphics.bodyLength
  id: bodyLength
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: bodyLength
  nameWithType: LizardGraphics.bodyLength
  fullName: LizardGraphics.bodyLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.bodyLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyLength
    return:
      type: System.Single
    content.vb: Public bodyLength As Single
- uid: Global.LizardGraphics.tailLength
  commentId: F:Global.LizardGraphics.tailLength
  id: tailLength
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: tailLength
  nameWithType: LizardGraphics.tailLength
  fullName: LizardGraphics.tailLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.tailLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailLength
    return:
      type: System.Single
    content.vb: Public tailLength As Single
- uid: Global.LizardGraphics.headConnectionRad
  commentId: F:Global.LizardGraphics.headConnectionRad
  id: headConnectionRad
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: headConnectionRad
  nameWithType: LizardGraphics.headConnectionRad
  fullName: LizardGraphics.headConnectionRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.headConnectionRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float headConnectionRad
    return:
      type: System.Single
    content.vb: Public headConnectionRad As Single
- uid: Global.LizardGraphics.showDominance
  commentId: F:Global.LizardGraphics.showDominance
  id: showDominance
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: showDominance
  nameWithType: LizardGraphics.showDominance
  fullName: LizardGraphics.showDominance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.showDominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float showDominance
    return:
      type: System.Single
    content.vb: Public showDominance As Single
- uid: Global.LizardGraphics.lightSource
  commentId: F:Global.LizardGraphics.lightSource
  id: lightSource
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lightSource
  nameWithType: LizardGraphics.lightSource
  fullName: LizardGraphics.lightSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lightSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightSource lightSource
    return:
      type: Global.LightSource
    content.vb: Public lightSource As LightSource
- uid: Global.LizardGraphics.blackLizardLightUpHead
  commentId: F:Global.LizardGraphics.blackLizardLightUpHead
  id: blackLizardLightUpHead
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: blackLizardLightUpHead
  nameWithType: LizardGraphics.blackLizardLightUpHead
  fullName: LizardGraphics.blackLizardLightUpHead
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.blackLizardLightUpHead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float blackLizardLightUpHead
    return:
      type: System.Single
    content.vb: Public blackLizardLightUpHead As Single
- uid: Global.LizardGraphics.voiceVisualizationIntensity
  commentId: F:Global.LizardGraphics.voiceVisualizationIntensity
  id: voiceVisualizationIntensity
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: voiceVisualizationIntensity
  nameWithType: LizardGraphics.voiceVisualizationIntensity
  fullName: LizardGraphics.voiceVisualizationIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.voiceVisualizationIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float voiceVisualizationIntensity
    return:
      type: System.Single
    content.vb: Public voiceVisualizationIntensity As Single
- uid: Global.LizardGraphics.lastVoiceVisualizationIntensity
  commentId: F:Global.LizardGraphics.lastVoiceVisualizationIntensity
  id: lastVoiceVisualizationIntensity
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lastVoiceVisualizationIntensity
  nameWithType: LizardGraphics.lastVoiceVisualizationIntensity
  fullName: LizardGraphics.lastVoiceVisualizationIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lastVoiceVisualizationIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastVoiceVisualizationIntensity
    return:
      type: System.Single
    content.vb: Public lastVoiceVisualizationIntensity As Single
- uid: Global.LizardGraphics.voiceVisualization
  commentId: F:Global.LizardGraphics.voiceVisualization
  id: voiceVisualization
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: voiceVisualization
  nameWithType: LizardGraphics.voiceVisualization
  fullName: LizardGraphics.voiceVisualization
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.voiceVisualization</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float voiceVisualization
    return:
      type: System.Single
    content.vb: Public voiceVisualization As Single
- uid: Global.LizardGraphics.lastVoiceVisualization
  commentId: F:Global.LizardGraphics.lastVoiceVisualization
  id: lastVoiceVisualization
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: lastVoiceVisualization
  nameWithType: LizardGraphics.lastVoiceVisualization
  fullName: LizardGraphics.lastVoiceVisualization
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.lastVoiceVisualization</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastVoiceVisualization
    return:
      type: System.Single
    content.vb: Public lastVoiceVisualization As Single
- uid: Global.LizardGraphics.iVars
  commentId: F:Global.LizardGraphics.iVars
  id: iVars
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: iVars
  nameWithType: LizardGraphics.iVars
  fullName: LizardGraphics.iVars
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.iVars</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardGraphics.IndividualVariations iVars
    return:
      type: Global.LizardGraphics.IndividualVariations
    content.vb: Public iVars As LizardGraphics.IndividualVariations
- uid: Global.LizardGraphics.overrideHeadGraphic
  commentId: F:Global.LizardGraphics.overrideHeadGraphic
  id: overrideHeadGraphic
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: overrideHeadGraphic
  nameWithType: LizardGraphics.overrideHeadGraphic
  fullName: LizardGraphics.overrideHeadGraphic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.overrideHeadGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int overrideHeadGraphic
    return:
      type: System.Int32
    content.vb: Public overrideHeadGraphic As Integer
- uid: Global.LizardGraphics.rotGraphics
  commentId: F:Global.LizardGraphics.rotGraphics
  id: rotGraphics
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: rotGraphics
  nameWithType: LizardGraphics.rotGraphics
  fullName: LizardGraphics.rotGraphics
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardGraphics.rotGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardRotGraphics rotGraphics
    return:
      type: Watcher.LizardRotGraphics
    content.vb: Public rotGraphics As LizardRotGraphics
- uid: Global.LizardGraphics.#ctor(PhysicalObject)
  commentId: M:Global.LizardGraphics.#ctor(PhysicalObject)
  id: '#ctor(PhysicalObject)'
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: LizardGraphics(PhysicalObject)
  nameWithType: LizardGraphics.LizardGraphics(PhysicalObject)
  fullName: LizardGraphics.LizardGraphics(PhysicalObject)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardGraphics(PhysicalObject ow)
    parameters:
    - id: ow
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ow</parameter>
            <parameter>M:LizardGraphics.#ctor(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ow As PhysicalObject)
  overload: Global.LizardGraphics.#ctor*
  nameWithType.vb: LizardGraphics.New(PhysicalObject)
  fullName.vb: LizardGraphics.New(PhysicalObject)
  name.vb: New(PhysicalObject)
- uid: Global.LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)
  commentId: M:Global.LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)
  id: AddCosmetic(System.Int32,LizardCosmetics.Template)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: AddCosmetic(int, Template)
  nameWithType: LizardGraphics.AddCosmetic(int, Template)
  fullName: LizardGraphics.AddCosmetic(int, LizardCosmetics.Template)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int AddCosmetic(int spriteIndex, Template cosmetic)
    parameters:
    - id: spriteIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spriteIndex</parameter>
            <parameter>M:LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)</parameter>
          </include>
        </markup>
    - id: cosmetic
      type: LizardCosmetics.Template
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cosmetic</parameter>
            <parameter>M:LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.AddCosmetic(System.Int32,LizardCosmetics.Template)</parameter>
          </include>
        </markup>
    content.vb: Public Function AddCosmetic(spriteIndex As Integer, cosmetic As Template) As Integer
  overload: Global.LizardGraphics.AddCosmetic*
  nameWithType.vb: LizardGraphics.AddCosmetic(Integer, Template)
  fullName.vb: LizardGraphics.AddCosmetic(Integer, LizardCosmetics.Template)
  name.vb: AddCosmetic(Integer, Template)
- uid: Global.LizardGraphics.CamoAmountControlled
  commentId: M:Global.LizardGraphics.CamoAmountControlled
  id: CamoAmountControlled
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: CamoAmountControlled()
  nameWithType: LizardGraphics.CamoAmountControlled()
  fullName: LizardGraphics.CamoAmountControlled()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.CamoAmountControlled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CamoAmountControlled()
    content.vb: Public Sub CamoAmountControlled()
  overload: Global.LizardGraphics.CamoAmountControlled*
- uid: Global.LizardGraphics.BodyChunkDisplayRad(System.Int32)
  commentId: M:Global.LizardGraphics.BodyChunkDisplayRad(System.Int32)
  id: BodyChunkDisplayRad(System.Int32)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: BodyChunkDisplayRad(int)
  nameWithType: LizardGraphics.BodyChunkDisplayRad(int)
  fullName: LizardGraphics.BodyChunkDisplayRad(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.BodyChunkDisplayRad(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BodyChunkDisplayRad(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:LizardGraphics.BodyChunkDisplayRad(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.BodyChunkDisplayRad(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function BodyChunkDisplayRad(index As Integer) As Single
  overload: Global.LizardGraphics.BodyChunkDisplayRad*
  nameWithType.vb: LizardGraphics.BodyChunkDisplayRad(Integer)
  fullName.vb: LizardGraphics.BodyChunkDisplayRad(Integer)
  name.vb: BodyChunkDisplayRad(Integer)
- uid: Global.LizardGraphics.Update
  commentId: M:Global.LizardGraphics.Update
  id: Update
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardGraphics.Update()
  fullName: LizardGraphics.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.GraphicsModule.Update
  overload: Global.LizardGraphics.Update*
- uid: Global.LizardGraphics.Reset
  commentId: M:Global.LizardGraphics.Reset
  id: Reset
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: LizardGraphics.Reset()
  fullName: LizardGraphics.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Reset()
    content.vb: Public Overrides Sub Reset()
  overridden: Global.GraphicsModule.Reset
  overload: Global.LizardGraphics.Reset*
- uid: Global.LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)
  commentId: M:Global.LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)
  id: SuckedIntoShortCut(UnityEngine.Vector2)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SuckedIntoShortCut(Vector2)
  nameWithType: LizardGraphics.SuckedIntoShortCut(Vector2)
  fullName: LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void SuckedIntoShortCut(Vector2 shortCutPosition)
    parameters:
    - id: shortCutPosition
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortCutPosition</parameter>
            <parameter>M:LizardGraphics.SuckedIntoShortCut(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub SuckedIntoShortCut(shortCutPosition As Vector2)
  overridden: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  overload: Global.LizardGraphics.SuckedIntoShortCut*
- uid: Global.LizardGraphics.Stun(System.Int32)
  commentId: M:Global.LizardGraphics.Stun(System.Int32)
  id: Stun(System.Int32)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: Stun(int)
  nameWithType: LizardGraphics.Stun(int)
  fullName: LizardGraphics.Stun(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.Stun(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Stun(int st)
    parameters:
    - id: st
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>st</parameter>
            <parameter>M:LizardGraphics.Stun(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Stun(st As Integer)
  overload: Global.LizardGraphics.Stun*
  nameWithType.vb: LizardGraphics.Stun(Integer)
  fullName.vb: LizardGraphics.Stun(Integer)
  name.vb: Stun(Integer)
- uid: Global.LizardGraphics.WhiteFlicker(System.Int32)
  commentId: M:Global.LizardGraphics.WhiteFlicker(System.Int32)
  id: WhiteFlicker(System.Int32)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: WhiteFlicker(int)
  nameWithType: LizardGraphics.WhiteFlicker(int)
  fullName: LizardGraphics.WhiteFlicker(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.WhiteFlicker(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WhiteFlicker(int fl)
    parameters:
    - id: fl
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fl</parameter>
            <parameter>M:LizardGraphics.WhiteFlicker(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub WhiteFlicker(fl As Integer)
  overload: Global.LizardGraphics.WhiteFlicker*
  nameWithType.vb: LizardGraphics.WhiteFlicker(Integer)
  fullName.vb: LizardGraphics.WhiteFlicker(Integer)
  name.vb: WhiteFlicker(Integer)
- uid: Global.LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)
  commentId: M:Global.LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)
  id: TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: TerrainImpact(int, IntVector2, float)
  nameWithType: LizardGraphics.TerrainImpact(int, IntVector2, float)
  fullName: LizardGraphics.TerrainImpact(int, RWCustom.IntVector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TerrainImpact(int chunk, IntVector2 direction, float speed)
    parameters:
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:LizardGraphics.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub TerrainImpact(chunk As Integer, direction As IntVector2, speed As Single)
  overload: Global.LizardGraphics.TerrainImpact*
  nameWithType.vb: LizardGraphics.TerrainImpact(Integer, IntVector2, Single)
  fullName.vb: LizardGraphics.TerrainImpact(Integer, RWCustom.IntVector2, Single)
  name.vb: TerrainImpact(Integer, IntVector2, Single)
- uid: Global.LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  commentId: M:Global.LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  id: CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: CreatureSpotted(bool, CreatureRepresentation)
  nameWithType: LizardGraphics.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  fullName: LizardGraphics.CreatureSpotted(bool, Tracker.CreatureRepresentation)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CreatureSpotted(bool firstSpot, Tracker.CreatureRepresentation crit)
    parameters:
    - id: firstSpot
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstSpot</parameter>
            <parameter>M:LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    - id: crit
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:LizardGraphics.CreatureSpotted(System.Boolean,Tracker.CreatureRepresentation)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CreatureSpotted(firstSpot As Boolean, crit As Tracker.CreatureRepresentation)
  overload: Global.LizardGraphics.CreatureSpotted*
  nameWithType.vb: LizardGraphics.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  fullName.vb: LizardGraphics.CreatureSpotted(Boolean, Tracker.CreatureRepresentation)
  name.vb: CreatureSpotted(Boolean, CreatureRepresentation)
- uid: Global.LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LizardGraphics.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overridden: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  overload: Global.LizardGraphics.InitiateSprites*
- uid: Global.LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overridden: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  overload: Global.LizardGraphics.DrawSprites*
  nameWithType.vb: LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: LizardGraphics.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.LizardGraphics.HeadColor(System.Single)
  commentId: M:Global.LizardGraphics.HeadColor(System.Single)
  id: HeadColor(System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: HeadColor(float)
  nameWithType: LizardGraphics.HeadColor(float)
  fullName: LizardGraphics.HeadColor(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.HeadColor(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color HeadColor(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LizardGraphics.HeadColor(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.HeadColor(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function HeadColor(timeStacker As Single) As Color
  overload: Global.LizardGraphics.HeadColor*
  nameWithType.vb: LizardGraphics.HeadColor(Single)
  fullName.vb: LizardGraphics.HeadColor(Single)
  name.vb: HeadColor(Single)
- uid: Global.LizardGraphics.HeadRotation(System.Single)
  commentId: M:Global.LizardGraphics.HeadRotation(System.Single)
  id: HeadRotation(System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: HeadRotation(float)
  nameWithType: LizardGraphics.HeadRotation(float)
  fullName: LizardGraphics.HeadRotation(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.HeadRotation(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float HeadRotation(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LizardGraphics.HeadRotation(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.HeadRotation(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function HeadRotation(timeStacker As Single) As Single
  overload: Global.LizardGraphics.HeadRotation*
  nameWithType.vb: LizardGraphics.HeadRotation(Single)
  fullName.vb: LizardGraphics.HeadRotation(Single)
  name.vb: HeadRotation(Single)
- uid: Global.LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:LizardGraphics.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overridden: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  overload: Global.LizardGraphics.ApplyPalette*
- uid: Global.LizardGraphics.DynamicBodyColor(System.Single)
  commentId: M:Global.LizardGraphics.DynamicBodyColor(System.Single)
  id: DynamicBodyColor(System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DynamicBodyColor(float)
  nameWithType: LizardGraphics.DynamicBodyColor(float)
  fullName: LizardGraphics.DynamicBodyColor(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.DynamicBodyColor(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color DynamicBodyColor(float f)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:LizardGraphics.DynamicBodyColor(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.DynamicBodyColor(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function DynamicBodyColor(f As Single) As Color
  overload: Global.LizardGraphics.DynamicBodyColor*
  nameWithType.vb: LizardGraphics.DynamicBodyColor(Single)
  fullName.vb: LizardGraphics.DynamicBodyColor(Single)
  name.vb: DynamicBodyColor(Single)
- uid: Global.LizardGraphics.BodyColor(System.Single)
  commentId: M:Global.LizardGraphics.BodyColor(System.Single)
  id: BodyColor(System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: BodyColor(float)
  nameWithType: LizardGraphics.BodyColor(float)
  fullName: LizardGraphics.BodyColor(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.BodyColor(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color BodyColor(float f)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:LizardGraphics.BodyColor(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.BodyColor(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function BodyColor(f As Single) As Color
  overload: Global.LizardGraphics.BodyColor*
  nameWithType.vb: LizardGraphics.BodyColor(Single)
  fullName.vb: LizardGraphics.BodyColor(Single)
  name.vb: BodyColor(Single)
- uid: Global.LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:LizardGraphics.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overridden: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  overload: Global.LizardGraphics.AddToContainer*
- uid: Global.LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  commentId: M:Global.LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  id: CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: CreatureInterestBonus(CreatureRepresentation, float)
  nameWithType: LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  fullName: LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CreatureInterestBonus(Tracker.CreatureRepresentation crit, float score)
    parameters:
    - id: crit
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    - id: score
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>score</parameter>
            <parameter>M:LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatureInterestBonus(crit As Tracker.CreatureRepresentation, score As Single) As Single
  overload: Global.LizardGraphics.CreatureInterestBonus*
  implements:
  - Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  nameWithType.vb: LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  fullName.vb: LizardGraphics.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  name.vb: CreatureInterestBonus(CreatureRepresentation, Single)
- uid: Global.LizardGraphics.ForcedLookCreature
  commentId: M:Global.LizardGraphics.ForcedLookCreature
  id: ForcedLookCreature
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: ForcedLookCreature()
  nameWithType: LizardGraphics.ForcedLookCreature()
  fullName: LizardGraphics.ForcedLookCreature()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.ForcedLookCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Tracker.CreatureRepresentation ForcedLookCreature()
    return:
      type: Global.Tracker.CreatureRepresentation
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.ForcedLookCreature</parameter>
          </include>
        </markup>
    content.vb: Public Function ForcedLookCreature() As Tracker.CreatureRepresentation
  overload: Global.LizardGraphics.ForcedLookCreature*
  implements:
  - Global.ILookingAtCreatures.ForcedLookCreature
- uid: Global.LizardGraphics.LookAtNothing
  commentId: M:Global.LizardGraphics.LookAtNothing
  id: LookAtNothing
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: LookAtNothing()
  nameWithType: LizardGraphics.LookAtNothing()
  fullName: LizardGraphics.LookAtNothing()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.LookAtNothing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LookAtNothing()
    content.vb: Public Sub LookAtNothing()
  overload: Global.LizardGraphics.LookAtNothing*
  implements:
  - Global.ILookingAtCreatures.LookAtNothing
- uid: Global.LizardGraphics.SpinePosition(System.Single,System.Single)
  commentId: M:Global.LizardGraphics.SpinePosition(System.Single,System.Single)
  id: SpinePosition(System.Single,System.Single)
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpinePosition(float, float)
  nameWithType: LizardGraphics.SpinePosition(float, float)
  fullName: LizardGraphics.SpinePosition(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardGraphics.SpinePosition(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardGraphics.LizardSpineData SpinePosition(float s, float timeStacker)
    parameters:
    - id: s
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:LizardGraphics.SpinePosition(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:LizardGraphics.SpinePosition(System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.LizardGraphics.LizardSpineData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardGraphics.SpinePosition(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function SpinePosition(s As Single, timeStacker As Single) As LizardGraphics.LizardSpineData
  overload: Global.LizardGraphics.SpinePosition*
  nameWithType.vb: LizardGraphics.SpinePosition(Single, Single)
  fullName.vb: LizardGraphics.SpinePosition(Single, Single)
  name.vb: SpinePosition(Single, Single)
- uid: Global.LizardGraphics.Camouflaged
  commentId: P:Global.LizardGraphics.Camouflaged
  id: Camouflaged
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: Camouflaged
  nameWithType: LizardGraphics.Camouflaged
  fullName: LizardGraphics.Camouflaged
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.Camouflaged</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Camouflaged { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Camouflaged As Single
  overload: Global.LizardGraphics.Camouflaged*
- uid: Global.LizardGraphics.effectColor
  commentId: P:Global.LizardGraphics.effectColor
  id: effectColor
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: effectColor
  nameWithType: LizardGraphics.effectColor
  fullName: LizardGraphics.effectColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.effectColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color effectColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property effectColor As Color
  overload: Global.LizardGraphics.effectColor*
- uid: Global.LizardGraphics.SalamanderColor
  commentId: P:Global.LizardGraphics.SalamanderColor
  id: SalamanderColor
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SalamanderColor
  nameWithType: LizardGraphics.SalamanderColor
  fullName: LizardGraphics.SalamanderColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SalamanderColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color SalamanderColor { get; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public ReadOnly Property SalamanderColor As Color
  overload: Global.LizardGraphics.SalamanderColor*
- uid: Global.LizardGraphics.startOfExtraSprites
  commentId: P:Global.LizardGraphics.startOfExtraSprites
  id: startOfExtraSprites
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: startOfExtraSprites
  nameWithType: LizardGraphics.startOfExtraSprites
  fullName: LizardGraphics.startOfExtraSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.startOfExtraSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int startOfExtraSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property startOfExtraSprites As Integer
  overload: Global.LizardGraphics.startOfExtraSprites*
- uid: Global.LizardGraphics.BodyAndTailLength
  commentId: P:Global.LizardGraphics.BodyAndTailLength
  id: BodyAndTailLength
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: BodyAndTailLength
  nameWithType: LizardGraphics.BodyAndTailLength
  fullName: LizardGraphics.BodyAndTailLength
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.BodyAndTailLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BodyAndTailLength { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property BodyAndTailLength As Single
  overload: Global.LizardGraphics.BodyAndTailLength*
- uid: Global.LizardGraphics.HeadLightsUpFromNoise
  commentId: P:Global.LizardGraphics.HeadLightsUpFromNoise
  id: HeadLightsUpFromNoise
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: HeadLightsUpFromNoise
  nameWithType: LizardGraphics.HeadLightsUpFromNoise
  fullName: LizardGraphics.HeadLightsUpFromNoise
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.HeadLightsUpFromNoise</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HeadLightsUpFromNoise { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HeadLightsUpFromNoise As Boolean
  overload: Global.LizardGraphics.HeadLightsUpFromNoise*
- uid: Global.LizardGraphics.BubbleIntensity
  commentId: P:Global.LizardGraphics.BubbleIntensity
  id: BubbleIntensity
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: BubbleIntensity
  nameWithType: LizardGraphics.BubbleIntensity
  fullName: LizardGraphics.BubbleIntensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.BubbleIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BubbleIntensity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property BubbleIntensity As Single
  overload: Global.LizardGraphics.BubbleIntensity*
- uid: Global.LizardGraphics.Caramel
  commentId: P:Global.LizardGraphics.Caramel
  id: Caramel
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: Caramel
  nameWithType: LizardGraphics.Caramel
  fullName: LizardGraphics.Caramel
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.Caramel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Caramel { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Caramel As Boolean
  overload: Global.LizardGraphics.Caramel*
- uid: Global.LizardGraphics.SpriteBodyCirclesStart
  commentId: P:Global.LizardGraphics.SpriteBodyCirclesStart
  id: SpriteBodyCirclesStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteBodyCirclesStart
  nameWithType: LizardGraphics.SpriteBodyCirclesStart
  fullName: LizardGraphics.SpriteBodyCirclesStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteBodyCirclesStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteBodyCirclesStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteBodyCirclesStart As Integer
  overload: Global.LizardGraphics.SpriteBodyCirclesStart*
- uid: Global.LizardGraphics.SpriteBodyCirclesEnd
  commentId: P:Global.LizardGraphics.SpriteBodyCirclesEnd
  id: SpriteBodyCirclesEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteBodyCirclesEnd
  nameWithType: LizardGraphics.SpriteBodyCirclesEnd
  fullName: LizardGraphics.SpriteBodyCirclesEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteBodyCirclesEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteBodyCirclesEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteBodyCirclesEnd As Integer
  overload: Global.LizardGraphics.SpriteBodyCirclesEnd*
- uid: Global.LizardGraphics.SpriteBodyMesh
  commentId: P:Global.LizardGraphics.SpriteBodyMesh
  id: SpriteBodyMesh
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteBodyMesh
  nameWithType: LizardGraphics.SpriteBodyMesh
  fullName: LizardGraphics.SpriteBodyMesh
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteBodyMesh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteBodyMesh { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteBodyMesh As Integer
  overload: Global.LizardGraphics.SpriteBodyMesh*
- uid: Global.LizardGraphics.SpriteTail
  commentId: P:Global.LizardGraphics.SpriteTail
  id: SpriteTail
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteTail
  nameWithType: LizardGraphics.SpriteTail
  fullName: LizardGraphics.SpriteTail
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteTail</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteTail { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteTail As Integer
  overload: Global.LizardGraphics.SpriteTail*
- uid: Global.LizardGraphics.SpriteLimbsStart
  commentId: P:Global.LizardGraphics.SpriteLimbsStart
  id: SpriteLimbsStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteLimbsStart
  nameWithType: LizardGraphics.SpriteLimbsStart
  fullName: LizardGraphics.SpriteLimbsStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteLimbsStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteLimbsStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteLimbsStart As Integer
  overload: Global.LizardGraphics.SpriteLimbsStart*
- uid: Global.LizardGraphics.SpriteLimbsEnd
  commentId: P:Global.LizardGraphics.SpriteLimbsEnd
  id: SpriteLimbsEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteLimbsEnd
  nameWithType: LizardGraphics.SpriteLimbsEnd
  fullName: LizardGraphics.SpriteLimbsEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteLimbsEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteLimbsEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteLimbsEnd As Integer
  overload: Global.LizardGraphics.SpriteLimbsEnd*
- uid: Global.LizardGraphics.SpriteHeadStart
  commentId: P:Global.LizardGraphics.SpriteHeadStart
  id: SpriteHeadStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteHeadStart
  nameWithType: LizardGraphics.SpriteHeadStart
  fullName: LizardGraphics.SpriteHeadStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteHeadStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteHeadStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteHeadStart As Integer
  overload: Global.LizardGraphics.SpriteHeadStart*
- uid: Global.LizardGraphics.SpriteHeadEnd
  commentId: P:Global.LizardGraphics.SpriteHeadEnd
  id: SpriteHeadEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteHeadEnd
  nameWithType: LizardGraphics.SpriteHeadEnd
  fullName: LizardGraphics.SpriteHeadEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteHeadEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteHeadEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteHeadEnd As Integer
  overload: Global.LizardGraphics.SpriteHeadEnd*
- uid: Global.LizardGraphics.SpriteLimbsColorStart
  commentId: P:Global.LizardGraphics.SpriteLimbsColorStart
  id: SpriteLimbsColorStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteLimbsColorStart
  nameWithType: LizardGraphics.SpriteLimbsColorStart
  fullName: LizardGraphics.SpriteLimbsColorStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteLimbsColorStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteLimbsColorStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteLimbsColorStart As Integer
  overload: Global.LizardGraphics.SpriteLimbsColorStart*
- uid: Global.LizardGraphics.SpriteLimbsColorEnd
  commentId: P:Global.LizardGraphics.SpriteLimbsColorEnd
  id: SpriteLimbsColorEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteLimbsColorEnd
  nameWithType: LizardGraphics.SpriteLimbsColorEnd
  fullName: LizardGraphics.SpriteLimbsColorEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteLimbsColorEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteLimbsColorEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteLimbsColorEnd As Integer
  overload: Global.LizardGraphics.SpriteLimbsColorEnd*
- uid: Global.LizardGraphics.SpriteTongueStart
  commentId: P:Global.LizardGraphics.SpriteTongueStart
  id: SpriteTongueStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteTongueStart
  nameWithType: LizardGraphics.SpriteTongueStart
  fullName: LizardGraphics.SpriteTongueStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteTongueStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteTongueStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteTongueStart As Integer
  overload: Global.LizardGraphics.SpriteTongueStart*
- uid: Global.LizardGraphics.SpriteTongueEnd
  commentId: P:Global.LizardGraphics.SpriteTongueEnd
  id: SpriteTongueEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteTongueEnd
  nameWithType: LizardGraphics.SpriteTongueEnd
  fullName: LizardGraphics.SpriteTongueEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteTongueEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteTongueEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteTongueEnd As Integer
  overload: Global.LizardGraphics.SpriteTongueEnd*
- uid: Global.LizardGraphics.TotalSprites
  commentId: P:Global.LizardGraphics.TotalSprites
  id: TotalSprites
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: TotalSprites
  nameWithType: LizardGraphics.TotalSprites
  fullName: LizardGraphics.TotalSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.TotalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSprites As Integer
  overload: Global.LizardGraphics.TotalSprites*
- uid: Global.LizardGraphics.SpriteVisionEnd
  commentId: P:Global.LizardGraphics.SpriteVisionEnd
  id: SpriteVisionEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteVisionEnd
  nameWithType: LizardGraphics.SpriteVisionEnd
  fullName: LizardGraphics.SpriteVisionEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteVisionEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteVisionEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteVisionEnd As Integer
  overload: Global.LizardGraphics.SpriteVisionEnd*
- uid: Global.LizardGraphics.SpriteVisionStart
  commentId: P:Global.LizardGraphics.SpriteVisionStart
  id: SpriteVisionStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: SpriteVisionStart
  nameWithType: LizardGraphics.SpriteVisionStart
  fullName: LizardGraphics.SpriteVisionStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.SpriteVisionStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SpriteVisionStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property SpriteVisionStart As Integer
  overload: Global.LizardGraphics.SpriteVisionStart*
- uid: Global.LizardGraphics.DebugLimbsStart
  commentId: P:Global.LizardGraphics.DebugLimbsStart
  id: DebugLimbsStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugLimbsStart
  nameWithType: LizardGraphics.DebugLimbsStart
  fullName: LizardGraphics.DebugLimbsStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugLimbsStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugLimbsStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugLimbsStart As Integer
  overload: Global.LizardGraphics.DebugLimbsStart*
- uid: Global.LizardGraphics.DebugLimbsEnd
  commentId: P:Global.LizardGraphics.DebugLimbsEnd
  id: DebugLimbsEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugLimbsEnd
  nameWithType: LizardGraphics.DebugLimbsEnd
  fullName: LizardGraphics.DebugLimbsEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugLimbsEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugLimbsEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugLimbsEnd As Integer
  overload: Global.LizardGraphics.DebugLimbsEnd*
- uid: Global.LizardGraphics.DebugBodyChunksStart
  commentId: P:Global.LizardGraphics.DebugBodyChunksStart
  id: DebugBodyChunksStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugBodyChunksStart
  nameWithType: LizardGraphics.DebugBodyChunksStart
  fullName: LizardGraphics.DebugBodyChunksStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugBodyChunksStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugBodyChunksStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugBodyChunksStart As Integer
  overload: Global.LizardGraphics.DebugBodyChunksStart*
- uid: Global.LizardGraphics.DebugBodyChunksEnd
  commentId: P:Global.LizardGraphics.DebugBodyChunksEnd
  id: DebugBodyChunksEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugBodyChunksEnd
  nameWithType: LizardGraphics.DebugBodyChunksEnd
  fullName: LizardGraphics.DebugBodyChunksEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugBodyChunksEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugBodyChunksEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugBodyChunksEnd As Integer
  overload: Global.LizardGraphics.DebugBodyChunksEnd*
- uid: Global.LizardGraphics.DebugHead
  commentId: P:Global.LizardGraphics.DebugHead
  id: DebugHead
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugHead
  nameWithType: LizardGraphics.DebugHead
  fullName: LizardGraphics.DebugHead
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugHead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugHead { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugHead As Integer
  overload: Global.LizardGraphics.DebugHead*
- uid: Global.LizardGraphics.DebugGrabPosStart
  commentId: P:Global.LizardGraphics.DebugGrabPosStart
  id: DebugGrabPosStart
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugGrabPosStart
  nameWithType: LizardGraphics.DebugGrabPosStart
  fullName: LizardGraphics.DebugGrabPosStart
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugGrabPosStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugGrabPosStart { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugGrabPosStart As Integer
  overload: Global.LizardGraphics.DebugGrabPosStart*
- uid: Global.LizardGraphics.DebugGrabPosEnd
  commentId: P:Global.LizardGraphics.DebugGrabPosEnd
  id: DebugGrabPosEnd
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: DebugGrabPosEnd
  nameWithType: LizardGraphics.DebugGrabPosEnd
  fullName: LizardGraphics.DebugGrabPosEnd
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.DebugGrabPosEnd</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int DebugGrabPosEnd { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property DebugGrabPosEnd As Integer
  overload: Global.LizardGraphics.DebugGrabPosEnd*
- uid: Global.LizardGraphics.TotalDebugSprites
  commentId: P:Global.LizardGraphics.TotalDebugSprites
  id: TotalDebugSprites
  parent: Global.LizardGraphics
  langs:
  - csharp
  - vb
  name: TotalDebugSprites
  nameWithType: LizardGraphics.TotalDebugSprites
  fullName: LizardGraphics.TotalDebugSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardGraphics.TotalDebugSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalDebugSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalDebugSprites As Integer
  overload: Global.LizardGraphics.TotalDebugSprites*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.GraphicsModule
  commentId: T:Global.GraphicsModule
  isExternal: true
  href: GraphicsModule.html
  name: GraphicsModule
  nameWithType: GraphicsModule
  fullName: GraphicsModule
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.ILookingAtCreatures
  commentId: T:Global.ILookingAtCreatures
  isExternal: true
  href: ILookingAtCreatures.html
  name: ILookingAtCreatures
  nameWithType: ILookingAtCreatures
  fullName: ILookingAtCreatures
- uid: Global.GraphicsModule.internalContainerObjects
  commentId: F:Global.GraphicsModule.internalContainerObjects
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_internalContainerObjects
  name: internalContainerObjects
  nameWithType: GraphicsModule.internalContainerObjects
  fullName: GraphicsModule.internalContainerObjects
- uid: Global.GraphicsModule.bodyParts
  commentId: F:Global.GraphicsModule.bodyParts
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_bodyParts
  name: bodyParts
  nameWithType: GraphicsModule.bodyParts
  fullName: GraphicsModule.bodyParts
- uid: Global.GraphicsModule.DEBUGLABELS
  commentId: F:Global.GraphicsModule.DEBUGLABELS
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DEBUGLABELS
  name: DEBUGLABELS
  nameWithType: GraphicsModule.DEBUGLABELS
  fullName: GraphicsModule.DEBUGLABELS
- uid: Global.GraphicsModule.culled
  commentId: F:Global.GraphicsModule.culled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_culled
  name: culled
  nameWithType: GraphicsModule.culled
  fullName: GraphicsModule.culled
- uid: Global.GraphicsModule.lastCulled
  commentId: F:Global.GraphicsModule.lastCulled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_lastCulled
  name: lastCulled
  nameWithType: GraphicsModule.lastCulled
  fullName: GraphicsModule.lastCulled
- uid: Global.GraphicsModule.dispose
  commentId: F:Global.GraphicsModule.dispose
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_dispose
  name: dispose
  nameWithType: GraphicsModule.dispose
  fullName: GraphicsModule.dispose
- uid: Global.GraphicsModule.cullRange
  commentId: F:Global.GraphicsModule.cullRange
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_cullRange
  name: cullRange
  nameWithType: GraphicsModule.cullRange
  fullName: GraphicsModule.cullRange
- uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  commentId: M:Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  name: PushOutOf(Vector2, float)
  nameWithType: GraphicsModule.PushOutOf(Vector2, float)
  fullName: GraphicsModule.PushOutOf(UnityEngine.Vector2, float)
  nameWithType.vb: GraphicsModule.PushOutOf(Vector2, Single)
  fullName.vb: GraphicsModule.PushOutOf(UnityEngine.Vector2, Single)
  name.vb: PushOutOf(Vector2, Single)
  spec.csharp:
  - uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
    name: PushOutOf
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.PushOutOf(UnityEngine.Vector2,System.Single)
    name: PushOutOf
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_PushOutOf_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  commentId: M:Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  name: AddObjectToInternalContainer(IDrawable, int)
  nameWithType: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  fullName: GraphicsModule.AddObjectToInternalContainer(IDrawable, int)
  nameWithType.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  fullName.vb: GraphicsModule.AddObjectToInternalContainer(IDrawable, Integer)
  name.vb: AddObjectToInternalContainer(IDrawable, Integer)
  spec.csharp:
  - uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
    name: AddObjectToInternalContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.AddObjectToInternalContainer(IDrawable,System.Int32)
    name: AddObjectToInternalContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddObjectToInternalContainer_IDrawable_System_Int32_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  commentId: M:Global.GraphicsModule.ReleaseAllInternallyContainedSprites
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  name: ReleaseAllInternallyContainedSprites()
  nameWithType: GraphicsModule.ReleaseAllInternallyContainedSprites()
  fullName: GraphicsModule.ReleaseAllInternallyContainedSprites()
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
    name: ReleaseAllInternallyContainedSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseAllInternallyContainedSprites
    name: ReleaseAllInternallyContainedSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseAllInternallyContainedSprites
  - name: (
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  name: ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(PhysicalObject)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_PhysicalObject_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  name: ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(IDrawable)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_IDrawable_
  - name: (
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: )
- uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  commentId: M:Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  name: ReleaseSpecificInternallyContainedObjectSprites(int)
  nameWithType: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  fullName: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(int)
  nameWithType.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  fullName.vb: GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(Integer)
  name.vb: ReleaseSpecificInternallyContainedObjectSprites(Integer)
  spec.csharp:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ReleaseSpecificInternallyContainedObjectSprites(System.Int32)
    name: ReleaseSpecificInternallyContainedObjectSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ReleaseSpecificInternallyContainedObjectSprites_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.GraphicsModule.BringSpritesToFront
  commentId: M:Global.GraphicsModule.BringSpritesToFront
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  name: BringSpritesToFront()
  nameWithType: GraphicsModule.BringSpritesToFront()
  fullName: GraphicsModule.BringSpritesToFront()
  spec.csharp:
  - uid: Global.GraphicsModule.BringSpritesToFront
    name: BringSpritesToFront
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.BringSpritesToFront
    name: BringSpritesToFront
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_BringSpritesToFront
  - name: (
  - name: )
- uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  commentId: M:Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  name: HypothermiaColorBlend(Color)
  nameWithType: GraphicsModule.HypothermiaColorBlend(Color)
  fullName: GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
  spec.csharp:
  - uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
    name: HypothermiaColorBlend
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.HypothermiaColorBlend(UnityEngine.Color)
    name: HypothermiaColorBlend
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_HypothermiaColorBlend_UnityEngine_Color_
  - name: (
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  commentId: M:Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  name: ActivateRippleHybrid(float, RippleSide)
  nameWithType: GraphicsModule.ActivateRippleHybrid(float, RippleHybridVFX.RippleSide)
  fullName: GraphicsModule.ActivateRippleHybrid(float, Watcher.RippleHybridVFX.RippleSide)
  nameWithType.vb: GraphicsModule.ActivateRippleHybrid(Single, RippleHybridVFX.RippleSide)
  fullName.vb: GraphicsModule.ActivateRippleHybrid(Single, Watcher.RippleHybridVFX.RippleSide)
  name.vb: ActivateRippleHybrid(Single, RippleSide)
  spec.csharp:
  - uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
    name: ActivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ActivateRippleHybrid(System.Single,Watcher.RippleHybridVFX.RippleSide)
    name: ActivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ActivateRippleHybrid_System_Single_Watcher_RippleHybridVFX_RippleSide_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Watcher.RippleHybridVFX.RippleSide
    name: RippleSide
    isExternal: true
    href: Watcher.RippleHybridVFX.RippleSide.html
  - name: )
- uid: Global.GraphicsModule.DeactivateRippleHybrid
  commentId: M:Global.GraphicsModule.DeactivateRippleHybrid
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  name: DeactivateRippleHybrid()
  nameWithType: GraphicsModule.DeactivateRippleHybrid()
  fullName: GraphicsModule.DeactivateRippleHybrid()
  spec.csharp:
  - uid: Global.GraphicsModule.DeactivateRippleHybrid
    name: DeactivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.DeactivateRippleHybrid
    name: DeactivateRippleHybrid
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DeactivateRippleHybrid
  - name: (
  - name: )
- uid: Global.GraphicsModule.owner
  commentId: P:Global.GraphicsModule.owner
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_owner
  name: owner
  nameWithType: GraphicsModule.owner
  fullName: GraphicsModule.owner
- uid: Global.GraphicsModule.ShouldBeCulled
  commentId: P:Global.GraphicsModule.ShouldBeCulled
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ShouldBeCulled
  name: ShouldBeCulled
  nameWithType: GraphicsModule.ShouldBeCulled
  fullName: GraphicsModule.ShouldBeCulled
- uid: Global.GraphicsModule.rippleHybridState
  commentId: P:Global.GraphicsModule.rippleHybridState
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_rippleHybridState
  name: rippleHybridState
  nameWithType: GraphicsModule.rippleHybridState
  fullName: GraphicsModule.rippleHybridState
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: Global.LizardLimb[]
  isExternal: true
  href: LizardLimb.html
  name: LizardLimb[]
  nameWithType: LizardLimb[]
  fullName: LizardLimb[]
  nameWithType.vb: LizardLimb()
  fullName.vb: LizardLimb()
  name.vb: LizardLimb()
  spec.csharp:
  - uid: Global.LizardLimb
    name: LizardLimb
    isExternal: true
    href: LizardLimb.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.LizardLimb
    name: LizardLimb
    isExternal: true
    href: LizardLimb.html
  - name: (
  - name: )
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: Global.TailSegment[]
  isExternal: true
  href: TailSegment.html
  name: TailSegment[]
  nameWithType: TailSegment[]
  fullName: TailSegment[]
  nameWithType.vb: TailSegment()
  fullName.vb: TailSegment()
  name.vb: TailSegment()
  spec.csharp:
  - uid: Global.TailSegment
    name: TailSegment
    isExternal: true
    href: TailSegment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.TailSegment
    name: TailSegment
    isExternal: true
    href: TailSegment.html
  - name: (
  - name: )
- uid: Global.GenericBodyPart[]
  isExternal: true
  href: GenericBodyPart.html
  name: GenericBodyPart[]
  nameWithType: GenericBodyPart[]
  fullName: GenericBodyPart[]
  nameWithType.vb: GenericBodyPart()
  fullName.vb: GenericBodyPart()
  name.vb: GenericBodyPart()
  spec.csharp:
  - uid: Global.GenericBodyPart
    name: GenericBodyPart
    isExternal: true
    href: GenericBodyPart.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.GenericBodyPart
    name: GenericBodyPart
    isExternal: true
    href: GenericBodyPart.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.GenericBodyPart
  commentId: T:Global.GenericBodyPart
  isExternal: true
  href: GenericBodyPart.html
  name: GenericBodyPart
  nameWithType: GenericBodyPart
  fullName: GenericBodyPart
- uid: Global.CreatureLooker
  commentId: T:Global.CreatureLooker
  isExternal: true
  href: CreatureLooker.html
  name: CreatureLooker
  nameWithType: CreatureLooker
  fullName: CreatureLooker
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: System.Collections.Generic.List{LizardCosmetics.Template}
  commentId: T:System.Collections.Generic.List{LizardCosmetics.Template}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Template>
  nameWithType: List<Template>
  fullName: System.Collections.Generic.List<LizardCosmetics.Template>
  nameWithType.vb: List(Of Template)
  fullName.vb: System.Collections.Generic.List(Of LizardCosmetics.Template)
  name.vb: List(Of Template)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: LizardCosmetics.Template
    name: Template
    isExternal: true
    href: LizardCosmetics.Template.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: LizardCosmetics.Template
    name: Template
    isExternal: true
    href: LizardCosmetics.Template.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: LizardCosmetics.SnowAccumulation
  commentId: T:LizardCosmetics.SnowAccumulation
  parent: LizardCosmetics
  isExternal: true
  href: LizardCosmetics.SnowAccumulation.html
  name: SnowAccumulation
  nameWithType: SnowAccumulation
  fullName: LizardCosmetics.SnowAccumulation
- uid: LizardCosmetics
  commentId: N:LizardCosmetics
  isExternal: true
  href: LizardCosmetics.html
  name: LizardCosmetics
  nameWithType: LizardCosmetics
  fullName: LizardCosmetics
- uid: Global.LightSource
  commentId: T:Global.LightSource
  isExternal: true
  href: LightSource.html
  name: LightSource
  nameWithType: LightSource
  fullName: LightSource
- uid: Global.LizardGraphics.IndividualVariations
  commentId: T:Global.LizardGraphics.IndividualVariations
  isExternal: true
  href: LizardGraphics.html
  name: LizardGraphics.IndividualVariations
  nameWithType: LizardGraphics.IndividualVariations
  fullName: LizardGraphics.IndividualVariations
  spec.csharp:
  - uid: Global.LizardGraphics
    name: LizardGraphics
    isExternal: true
    href: LizardGraphics.html
  - name: .
  - uid: Global.LizardGraphics.IndividualVariations
    name: IndividualVariations
    isExternal: true
    href: LizardGraphics.IndividualVariations.html
  spec.vb:
  - uid: Global.LizardGraphics
    name: LizardGraphics
    isExternal: true
    href: LizardGraphics.html
  - name: .
  - uid: Global.LizardGraphics.IndividualVariations
    name: IndividualVariations
    isExternal: true
    href: LizardGraphics.IndividualVariations.html
- uid: Watcher.LizardRotGraphics
  commentId: T:Watcher.LizardRotGraphics
  parent: Watcher
  isExternal: true
  href: Watcher.LizardRotGraphics.html
  name: LizardRotGraphics
  nameWithType: LizardRotGraphics
  fullName: Watcher.LizardRotGraphics
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: Global.LizardGraphics.#ctor*
  commentId: Overload:Global.LizardGraphics.#ctor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics__ctor_PhysicalObject_
  name: LizardGraphics
  nameWithType: LizardGraphics.LizardGraphics
  fullName: LizardGraphics.LizardGraphics
  nameWithType.vb: LizardGraphics.New
  fullName.vb: LizardGraphics.New
  name.vb: New
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.LizardGraphics.AddCosmetic*
  commentId: Overload:Global.LizardGraphics.AddCosmetic
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_AddCosmetic_System_Int32_LizardCosmetics_Template_
  name: AddCosmetic
  nameWithType: LizardGraphics.AddCosmetic
  fullName: LizardGraphics.AddCosmetic
- uid: LizardCosmetics.Template
  commentId: T:LizardCosmetics.Template
  parent: LizardCosmetics
  isExternal: true
  href: LizardCosmetics.Template.html
  name: Template
  nameWithType: Template
  fullName: LizardCosmetics.Template
- uid: Global.LizardGraphics.CamoAmountControlled*
  commentId: Overload:Global.LizardGraphics.CamoAmountControlled
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_CamoAmountControlled
  name: CamoAmountControlled
  nameWithType: LizardGraphics.CamoAmountControlled
  fullName: LizardGraphics.CamoAmountControlled
- uid: Global.LizardGraphics.BodyChunkDisplayRad*
  commentId: Overload:Global.LizardGraphics.BodyChunkDisplayRad
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_BodyChunkDisplayRad_System_Int32_
  name: BodyChunkDisplayRad
  nameWithType: LizardGraphics.BodyChunkDisplayRad
  fullName: LizardGraphics.BodyChunkDisplayRad
- uid: Global.GraphicsModule.Update
  commentId: M:Global.GraphicsModule.Update
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Update
  name: Update()
  nameWithType: GraphicsModule.Update()
  fullName: GraphicsModule.Update()
  spec.csharp:
  - uid: Global.GraphicsModule.Update
    name: Update
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.Update
    name: Update
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Update
  - name: (
  - name: )
- uid: Global.LizardGraphics.Update*
  commentId: Overload:Global.LizardGraphics.Update
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_Update
  name: Update
  nameWithType: LizardGraphics.Update
  fullName: LizardGraphics.Update
- uid: Global.GraphicsModule.Reset
  commentId: M:Global.GraphicsModule.Reset
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_Reset
  name: Reset()
  nameWithType: GraphicsModule.Reset()
  fullName: GraphicsModule.Reset()
  spec.csharp:
  - uid: Global.GraphicsModule.Reset
    name: Reset
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Reset
  - name: (
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.Reset
    name: Reset
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_Reset
  - name: (
  - name: )
- uid: Global.LizardGraphics.Reset*
  commentId: Overload:Global.LizardGraphics.Reset
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_Reset
  name: Reset
  nameWithType: LizardGraphics.Reset
  fullName: LizardGraphics.Reset
- uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  name: SuckedIntoShortCut(Vector2)
  nameWithType: GraphicsModule.SuckedIntoShortCut(Vector2)
  fullName: GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
    name: SuckedIntoShortCut
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.SuckedIntoShortCut(UnityEngine.Vector2)
    name: SuckedIntoShortCut
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_SuckedIntoShortCut_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.LizardGraphics.SuckedIntoShortCut*
  commentId: Overload:Global.LizardGraphics.SuckedIntoShortCut
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SuckedIntoShortCut_UnityEngine_Vector2_
  name: SuckedIntoShortCut
  nameWithType: LizardGraphics.SuckedIntoShortCut
  fullName: LizardGraphics.SuckedIntoShortCut
- uid: Global.LizardGraphics.Stun*
  commentId: Overload:Global.LizardGraphics.Stun
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_Stun_System_Int32_
  name: Stun
  nameWithType: LizardGraphics.Stun
  fullName: LizardGraphics.Stun
- uid: Global.LizardGraphics.WhiteFlicker*
  commentId: Overload:Global.LizardGraphics.WhiteFlicker
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_WhiteFlicker_System_Int32_
  name: WhiteFlicker
  nameWithType: LizardGraphics.WhiteFlicker
  fullName: LizardGraphics.WhiteFlicker
- uid: Global.LizardGraphics.TerrainImpact*
  commentId: Overload:Global.LizardGraphics.TerrainImpact
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_
  name: TerrainImpact
  nameWithType: LizardGraphics.TerrainImpact
  fullName: LizardGraphics.TerrainImpact
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.LizardGraphics.CreatureSpotted*
  commentId: Overload:Global.LizardGraphics.CreatureSpotted
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_CreatureSpotted_System_Boolean_Tracker_CreatureRepresentation_
  name: CreatureSpotted
  nameWithType: LizardGraphics.CreatureSpotted
  fullName: LizardGraphics.CreatureSpotted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Tracker.CreatureRepresentation
  commentId: T:Global.Tracker.CreatureRepresentation
  isExternal: true
  href: Tracker.html
  name: Tracker.CreatureRepresentation
  nameWithType: Tracker.CreatureRepresentation
  fullName: Tracker.CreatureRepresentation
  spec.csharp:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  spec.vb:
  - uid: Global.Tracker
    name: Tracker
    isExternal: true
    href: Tracker.html
  - name: .
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
- uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.LizardGraphics.InitiateSprites*
  commentId: Overload:Global.LizardGraphics.InitiateSprites
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: LizardGraphics.InitiateSprites
  fullName: LizardGraphics.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.LizardGraphics.DrawSprites*
  commentId: Overload:Global.LizardGraphics.DrawSprites
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: LizardGraphics.DrawSprites
  fullName: LizardGraphics.DrawSprites
- uid: Global.LizardGraphics.HeadColor*
  commentId: Overload:Global.LizardGraphics.HeadColor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_HeadColor_System_Single_
  name: HeadColor
  nameWithType: LizardGraphics.HeadColor
  fullName: LizardGraphics.HeadColor
- uid: Global.LizardGraphics.HeadRotation*
  commentId: Overload:Global.LizardGraphics.HeadRotation
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_HeadRotation_System_Single_
  name: HeadRotation
  nameWithType: LizardGraphics.HeadRotation
  fullName: LizardGraphics.HeadRotation
- uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.LizardGraphics.ApplyPalette*
  commentId: Overload:Global.LizardGraphics.ApplyPalette
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: LizardGraphics.ApplyPalette
  fullName: LizardGraphics.ApplyPalette
- uid: Global.LizardGraphics.DynamicBodyColor*
  commentId: Overload:Global.LizardGraphics.DynamicBodyColor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DynamicBodyColor_System_Single_
  name: DynamicBodyColor
  nameWithType: LizardGraphics.DynamicBodyColor
  fullName: LizardGraphics.DynamicBodyColor
- uid: Global.LizardGraphics.BodyColor*
  commentId: Overload:Global.LizardGraphics.BodyColor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_BodyColor_System_Single_
  name: BodyColor
  nameWithType: LizardGraphics.BodyColor
  fullName: LizardGraphics.BodyColor
- uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.GraphicsModule
  isExternal: true
  href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.GraphicsModule.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.GraphicsModule.html#GraphicsModule_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.LizardGraphics.AddToContainer*
  commentId: Overload:Global.LizardGraphics.AddToContainer
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: LizardGraphics.AddToContainer
  fullName: LizardGraphics.AddToContainer
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.LizardGraphics.CreatureInterestBonus*
  commentId: Overload:Global.LizardGraphics.CreatureInterestBonus
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  name: CreatureInterestBonus
  nameWithType: LizardGraphics.CreatureInterestBonus
  fullName: LizardGraphics.CreatureInterestBonus
- uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  commentId: M:Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  name: CreatureInterestBonus(CreatureRepresentation, float)
  nameWithType: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  fullName: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, float)
  nameWithType.vb: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  fullName.vb: ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation, Single)
  name.vb: CreatureInterestBonus(CreatureRepresentation, Single)
  spec.csharp:
  - uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
    name: CreatureInterestBonus
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.CreatureInterestBonus(Tracker.CreatureRepresentation,System.Single)
    name: CreatureInterestBonus
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_CreatureInterestBonus_Tracker_CreatureRepresentation_System_Single_
  - name: (
  - uid: Global.Tracker.CreatureRepresentation
    name: CreatureRepresentation
    isExternal: true
    href: Tracker.CreatureRepresentation.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.LizardGraphics.ForcedLookCreature*
  commentId: Overload:Global.LizardGraphics.ForcedLookCreature
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_ForcedLookCreature
  name: ForcedLookCreature
  nameWithType: LizardGraphics.ForcedLookCreature
  fullName: LizardGraphics.ForcedLookCreature
- uid: Global.ILookingAtCreatures.ForcedLookCreature
  commentId: M:Global.ILookingAtCreatures.ForcedLookCreature
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  name: ForcedLookCreature()
  nameWithType: ILookingAtCreatures.ForcedLookCreature()
  fullName: ILookingAtCreatures.ForcedLookCreature()
  spec.csharp:
  - uid: Global.ILookingAtCreatures.ForcedLookCreature
    name: ForcedLookCreature
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.ForcedLookCreature
    name: ForcedLookCreature
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_ForcedLookCreature
  - name: (
  - name: )
- uid: Global.LizardGraphics.LookAtNothing*
  commentId: Overload:Global.LizardGraphics.LookAtNothing
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_LookAtNothing
  name: LookAtNothing
  nameWithType: LizardGraphics.LookAtNothing
  fullName: LizardGraphics.LookAtNothing
- uid: Global.ILookingAtCreatures.LookAtNothing
  commentId: M:Global.ILookingAtCreatures.LookAtNothing
  parent: Global.ILookingAtCreatures
  isExternal: true
  href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  name: LookAtNothing()
  nameWithType: ILookingAtCreatures.LookAtNothing()
  fullName: ILookingAtCreatures.LookAtNothing()
  spec.csharp:
  - uid: Global.ILookingAtCreatures.LookAtNothing
    name: LookAtNothing
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ILookingAtCreatures.LookAtNothing
    name: LookAtNothing
    isExternal: true
    href: Global.ILookingAtCreatures.html#ILookingAtCreatures_LookAtNothing
  - name: (
  - name: )
- uid: Global.LizardGraphics.SpinePosition*
  commentId: Overload:Global.LizardGraphics.SpinePosition
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpinePosition_System_Single_System_Single_
  name: SpinePosition
  nameWithType: LizardGraphics.SpinePosition
  fullName: LizardGraphics.SpinePosition
- uid: Global.LizardGraphics.LizardSpineData
  commentId: T:Global.LizardGraphics.LizardSpineData
  isExternal: true
  href: LizardGraphics.html
  name: LizardGraphics.LizardSpineData
  nameWithType: LizardGraphics.LizardSpineData
  fullName: LizardGraphics.LizardSpineData
  spec.csharp:
  - uid: Global.LizardGraphics
    name: LizardGraphics
    isExternal: true
    href: LizardGraphics.html
  - name: .
  - uid: Global.LizardGraphics.LizardSpineData
    name: LizardSpineData
    isExternal: true
    href: LizardGraphics.LizardSpineData.html
  spec.vb:
  - uid: Global.LizardGraphics
    name: LizardGraphics
    isExternal: true
    href: LizardGraphics.html
  - name: .
  - uid: Global.LizardGraphics.LizardSpineData
    name: LizardSpineData
    isExternal: true
    href: LizardGraphics.LizardSpineData.html
- uid: Global.LizardGraphics.Camouflaged*
  commentId: Overload:Global.LizardGraphics.Camouflaged
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_Camouflaged
  name: Camouflaged
  nameWithType: LizardGraphics.Camouflaged
  fullName: LizardGraphics.Camouflaged
- uid: Global.LizardGraphics.effectColor*
  commentId: Overload:Global.LizardGraphics.effectColor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_effectColor
  name: effectColor
  nameWithType: LizardGraphics.effectColor
  fullName: LizardGraphics.effectColor
- uid: Global.LizardGraphics.SalamanderColor*
  commentId: Overload:Global.LizardGraphics.SalamanderColor
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SalamanderColor
  name: SalamanderColor
  nameWithType: LizardGraphics.SalamanderColor
  fullName: LizardGraphics.SalamanderColor
- uid: Global.LizardGraphics.startOfExtraSprites*
  commentId: Overload:Global.LizardGraphics.startOfExtraSprites
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_startOfExtraSprites
  name: startOfExtraSprites
  nameWithType: LizardGraphics.startOfExtraSprites
  fullName: LizardGraphics.startOfExtraSprites
- uid: Global.LizardGraphics.BodyAndTailLength*
  commentId: Overload:Global.LizardGraphics.BodyAndTailLength
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_BodyAndTailLength
  name: BodyAndTailLength
  nameWithType: LizardGraphics.BodyAndTailLength
  fullName: LizardGraphics.BodyAndTailLength
- uid: Global.LizardGraphics.HeadLightsUpFromNoise*
  commentId: Overload:Global.LizardGraphics.HeadLightsUpFromNoise
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_HeadLightsUpFromNoise
  name: HeadLightsUpFromNoise
  nameWithType: LizardGraphics.HeadLightsUpFromNoise
  fullName: LizardGraphics.HeadLightsUpFromNoise
- uid: Global.LizardGraphics.BubbleIntensity*
  commentId: Overload:Global.LizardGraphics.BubbleIntensity
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_BubbleIntensity
  name: BubbleIntensity
  nameWithType: LizardGraphics.BubbleIntensity
  fullName: LizardGraphics.BubbleIntensity
- uid: Global.LizardGraphics.Caramel*
  commentId: Overload:Global.LizardGraphics.Caramel
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_Caramel
  name: Caramel
  nameWithType: LizardGraphics.Caramel
  fullName: LizardGraphics.Caramel
- uid: Global.LizardGraphics.SpriteBodyCirclesStart*
  commentId: Overload:Global.LizardGraphics.SpriteBodyCirclesStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteBodyCirclesStart
  name: SpriteBodyCirclesStart
  nameWithType: LizardGraphics.SpriteBodyCirclesStart
  fullName: LizardGraphics.SpriteBodyCirclesStart
- uid: Global.LizardGraphics.SpriteBodyCirclesEnd*
  commentId: Overload:Global.LizardGraphics.SpriteBodyCirclesEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteBodyCirclesEnd
  name: SpriteBodyCirclesEnd
  nameWithType: LizardGraphics.SpriteBodyCirclesEnd
  fullName: LizardGraphics.SpriteBodyCirclesEnd
- uid: Global.LizardGraphics.SpriteBodyMesh*
  commentId: Overload:Global.LizardGraphics.SpriteBodyMesh
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteBodyMesh
  name: SpriteBodyMesh
  nameWithType: LizardGraphics.SpriteBodyMesh
  fullName: LizardGraphics.SpriteBodyMesh
- uid: Global.LizardGraphics.SpriteTail*
  commentId: Overload:Global.LizardGraphics.SpriteTail
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteTail
  name: SpriteTail
  nameWithType: LizardGraphics.SpriteTail
  fullName: LizardGraphics.SpriteTail
- uid: Global.LizardGraphics.SpriteLimbsStart*
  commentId: Overload:Global.LizardGraphics.SpriteLimbsStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteLimbsStart
  name: SpriteLimbsStart
  nameWithType: LizardGraphics.SpriteLimbsStart
  fullName: LizardGraphics.SpriteLimbsStart
- uid: Global.LizardGraphics.SpriteLimbsEnd*
  commentId: Overload:Global.LizardGraphics.SpriteLimbsEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteLimbsEnd
  name: SpriteLimbsEnd
  nameWithType: LizardGraphics.SpriteLimbsEnd
  fullName: LizardGraphics.SpriteLimbsEnd
- uid: Global.LizardGraphics.SpriteHeadStart*
  commentId: Overload:Global.LizardGraphics.SpriteHeadStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteHeadStart
  name: SpriteHeadStart
  nameWithType: LizardGraphics.SpriteHeadStart
  fullName: LizardGraphics.SpriteHeadStart
- uid: Global.LizardGraphics.SpriteHeadEnd*
  commentId: Overload:Global.LizardGraphics.SpriteHeadEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteHeadEnd
  name: SpriteHeadEnd
  nameWithType: LizardGraphics.SpriteHeadEnd
  fullName: LizardGraphics.SpriteHeadEnd
- uid: Global.LizardGraphics.SpriteLimbsColorStart*
  commentId: Overload:Global.LizardGraphics.SpriteLimbsColorStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteLimbsColorStart
  name: SpriteLimbsColorStart
  nameWithType: LizardGraphics.SpriteLimbsColorStart
  fullName: LizardGraphics.SpriteLimbsColorStart
- uid: Global.LizardGraphics.SpriteLimbsColorEnd*
  commentId: Overload:Global.LizardGraphics.SpriteLimbsColorEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteLimbsColorEnd
  name: SpriteLimbsColorEnd
  nameWithType: LizardGraphics.SpriteLimbsColorEnd
  fullName: LizardGraphics.SpriteLimbsColorEnd
- uid: Global.LizardGraphics.SpriteTongueStart*
  commentId: Overload:Global.LizardGraphics.SpriteTongueStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteTongueStart
  name: SpriteTongueStart
  nameWithType: LizardGraphics.SpriteTongueStart
  fullName: LizardGraphics.SpriteTongueStart
- uid: Global.LizardGraphics.SpriteTongueEnd*
  commentId: Overload:Global.LizardGraphics.SpriteTongueEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteTongueEnd
  name: SpriteTongueEnd
  nameWithType: LizardGraphics.SpriteTongueEnd
  fullName: LizardGraphics.SpriteTongueEnd
- uid: Global.LizardGraphics.TotalSprites*
  commentId: Overload:Global.LizardGraphics.TotalSprites
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_TotalSprites
  name: TotalSprites
  nameWithType: LizardGraphics.TotalSprites
  fullName: LizardGraphics.TotalSprites
- uid: Global.LizardGraphics.SpriteVisionEnd*
  commentId: Overload:Global.LizardGraphics.SpriteVisionEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteVisionEnd
  name: SpriteVisionEnd
  nameWithType: LizardGraphics.SpriteVisionEnd
  fullName: LizardGraphics.SpriteVisionEnd
- uid: Global.LizardGraphics.SpriteVisionStart*
  commentId: Overload:Global.LizardGraphics.SpriteVisionStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_SpriteVisionStart
  name: SpriteVisionStart
  nameWithType: LizardGraphics.SpriteVisionStart
  fullName: LizardGraphics.SpriteVisionStart
- uid: Global.LizardGraphics.DebugLimbsStart*
  commentId: Overload:Global.LizardGraphics.DebugLimbsStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugLimbsStart
  name: DebugLimbsStart
  nameWithType: LizardGraphics.DebugLimbsStart
  fullName: LizardGraphics.DebugLimbsStart
- uid: Global.LizardGraphics.DebugLimbsEnd*
  commentId: Overload:Global.LizardGraphics.DebugLimbsEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugLimbsEnd
  name: DebugLimbsEnd
  nameWithType: LizardGraphics.DebugLimbsEnd
  fullName: LizardGraphics.DebugLimbsEnd
- uid: Global.LizardGraphics.DebugBodyChunksStart*
  commentId: Overload:Global.LizardGraphics.DebugBodyChunksStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugBodyChunksStart
  name: DebugBodyChunksStart
  nameWithType: LizardGraphics.DebugBodyChunksStart
  fullName: LizardGraphics.DebugBodyChunksStart
- uid: Global.LizardGraphics.DebugBodyChunksEnd*
  commentId: Overload:Global.LizardGraphics.DebugBodyChunksEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugBodyChunksEnd
  name: DebugBodyChunksEnd
  nameWithType: LizardGraphics.DebugBodyChunksEnd
  fullName: LizardGraphics.DebugBodyChunksEnd
- uid: Global.LizardGraphics.DebugHead*
  commentId: Overload:Global.LizardGraphics.DebugHead
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugHead
  name: DebugHead
  nameWithType: LizardGraphics.DebugHead
  fullName: LizardGraphics.DebugHead
- uid: Global.LizardGraphics.DebugGrabPosStart*
  commentId: Overload:Global.LizardGraphics.DebugGrabPosStart
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugGrabPosStart
  name: DebugGrabPosStart
  nameWithType: LizardGraphics.DebugGrabPosStart
  fullName: LizardGraphics.DebugGrabPosStart
- uid: Global.LizardGraphics.DebugGrabPosEnd*
  commentId: Overload:Global.LizardGraphics.DebugGrabPosEnd
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_DebugGrabPosEnd
  name: DebugGrabPosEnd
  nameWithType: LizardGraphics.DebugGrabPosEnd
  fullName: LizardGraphics.DebugGrabPosEnd
- uid: Global.LizardGraphics.TotalDebugSprites*
  commentId: Overload:Global.LizardGraphics.TotalDebugSprites
  isExternal: true
  href: Global.LizardGraphics.html#LizardGraphics_TotalDebugSprites
  name: TotalDebugSprites
  nameWithType: LizardGraphics.TotalDebugSprites
  fullName: LizardGraphics.TotalDebugSprites
