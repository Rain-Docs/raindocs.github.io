### YamlMime:ManagedReference
items:
- uid: Global.SkyWhale.SkyWhaleWhisker
  commentId: T:Global.SkyWhale.SkyWhaleWhisker
  id: SkyWhale.SkyWhaleWhisker
  parent: Global
  children:
  - Global.SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)
  - Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor
  - Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)
  - Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
  - Global.SkyWhale.SkyWhaleWhisker.InBackground
  - Global.SkyWhale.SkyWhaleWhisker.Mass(System.Int32)
  - Global.SkyWhale.SkyWhaleWhisker.Pos(System.Int32)
  - Global.SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)
  - Global.SkyWhale.SkyWhaleWhisker.Rad(System.Int32)
  - Global.SkyWhale.SkyWhaleWhisker.Reset
  - Global.SkyWhale.SkyWhaleWhisker.TotalPositions
  - Global.SkyWhale.SkyWhaleWhisker.Update(System.Boolean)
  - Global.SkyWhale.SkyWhaleWhisker.endRadius
  - Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached
  - Global.SkyWhale.SkyWhaleWhisker.segments
  - Global.SkyWhale.SkyWhaleWhisker.startRadius
  - Global.SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed
  langs:
  - csharp
  - vb
  name: SkyWhale.SkyWhaleWhisker
  nameWithType: SkyWhale.SkyWhaleWhisker
  fullName: SkyWhale.SkyWhaleWhisker
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SkyWhale.SkyWhaleWhisker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class SkyWhale.SkyWhaleWhisker : UpdatableAndDeletable, IClimbableVine'
    content.vb: Public Class SkyWhale.SkyWhaleWhisker Inherits UpdatableAndDeletable Implements IClimbableVine
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  implements:
  - Global.IClimbableVine
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SkyWhale.SkyWhaleWhisker.segments
  commentId: F:Global.SkyWhale.SkyWhaleWhisker.segments
  id: segments
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: SkyWhale.SkyWhaleWhisker.segments
  fullName: SkyWhale.SkyWhaleWhisker.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SkyWhale.SkyWhaleWhisker.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SimpleSegment[] segments
    return:
      type: Global.SimpleSegment[]
    content.vb: Public segments As SimpleSegment()
- uid: Global.SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed
  commentId: F:Global.SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed
  id: timeSinceWhiskersBeingClimbed
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: timeSinceWhiskersBeingClimbed
  nameWithType: SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed
  fullName: SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SkyWhale.SkyWhaleWhisker.timeSinceWhiskersBeingClimbed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeSinceWhiskersBeingClimbed
    return:
      type: System.Int32
    content.vb: Public timeSinceWhiskersBeingClimbed As Integer
- uid: Global.SkyWhale.SkyWhaleWhisker.startRadius
  commentId: F:Global.SkyWhale.SkyWhaleWhisker.startRadius
  id: startRadius
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: startRadius
  nameWithType: SkyWhale.SkyWhaleWhisker.startRadius
  fullName: SkyWhale.SkyWhaleWhisker.startRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SkyWhale.SkyWhaleWhisker.startRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float startRadius
    return:
      type: System.Single
    content.vb: Public startRadius As Single
- uid: Global.SkyWhale.SkyWhaleWhisker.endRadius
  commentId: F:Global.SkyWhale.SkyWhaleWhisker.endRadius
  id: endRadius
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: endRadius
  nameWithType: SkyWhale.SkyWhaleWhisker.endRadius
  fullName: SkyWhale.SkyWhaleWhisker.endRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SkyWhale.SkyWhaleWhisker.endRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float endRadius
    return:
      type: System.Single
    content.vb: Public endRadius As Single
- uid: Global.SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)
  id: '#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)'
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: SkyWhaleWhisker(SkyWhale, int, BodyChunk, float, float)
  nameWithType: SkyWhale.SkyWhaleWhisker.SkyWhaleWhisker(SkyWhale, int, BodyChunk, float, float)
  fullName: SkyWhale.SkyWhaleWhisker.SkyWhaleWhisker(SkyWhale, int, BodyChunk, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SkyWhale.SkyWhaleWhisker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SkyWhaleWhisker(SkyWhale owner, int segments, BodyChunk attachmentChunk, float angle, float side)
    parameters:
    - id: owner
      type: Global.SkyWhale
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: segments
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segments</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: attachmentChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>attachmentChunk</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: angle
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>angle</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: side
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.#ctor(SkyWhale,System.Int32,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As SkyWhale, segments As Integer, attachmentChunk As BodyChunk, angle As Single, side As Single)
  overload: Global.SkyWhale.SkyWhaleWhisker.#ctor*
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.New(SkyWhale, Integer, BodyChunk, Single, Single)
  fullName.vb: SkyWhale.SkyWhaleWhisker.New(SkyWhale, Integer, BodyChunk, Single, Single)
  name.vb: New(SkyWhale, Integer, BodyChunk, Single, Single)
- uid: Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached
  id: hasCreatureAttached
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: hasCreatureAttached()
  nameWithType: SkyWhale.SkyWhaleWhisker.hasCreatureAttached()
  fullName: SkyWhale.SkyWhaleWhisker.hasCreatureAttached()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.hasCreatureAttached</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasCreatureAttached()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.hasCreatureAttached</parameter>
          </include>
        </markup>
    content.vb: Public Function hasCreatureAttached() As Boolean
  overload: Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached*
- uid: Global.SkyWhale.SkyWhaleWhisker.Reset
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Reset
  id: Reset
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: SkyWhale.SkyWhaleWhisker.Reset()
  fullName: SkyWhale.SkyWhaleWhisker.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.SkyWhale.SkyWhaleWhisker.Reset*
- uid: Global.SkyWhale.SkyWhaleWhisker.Update(System.Boolean)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: SkyWhale.SkyWhaleWhisker.Update(bool)
  fullName: SkyWhale.SkyWhaleWhisker.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.SkyWhale.SkyWhaleWhisker.Update*
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.Update(Boolean)
  fullName.vb: SkyWhale.SkyWhaleWhisker.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)
  id: BeingClimbedOn(Creature)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: BeingClimbedOn(Creature)
  nameWithType: SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)
  fullName: SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BeingClimbedOn(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.BeingClimbedOn(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BeingClimbedOn(crit As Creature)
  overload: Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn*
  implements:
  - Global.IClimbableVine.BeingClimbedOn(Creature)
- uid: Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
  id: CurrentlyClimbable
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: CurrentlyClimbable()
  nameWithType: SkyWhale.SkyWhaleWhisker.CurrentlyClimbable()
  fullName: SkyWhale.SkyWhaleWhisker.CurrentlyClimbable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.CurrentlyClimbable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CurrentlyClimbable()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.CurrentlyClimbable</parameter>
          </include>
        </markup>
    content.vb: Public Function CurrentlyClimbable() As Boolean
  overload: Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable*
  implements:
  - Global.IClimbableVine.CurrentlyClimbable
- uid: Global.SkyWhale.SkyWhaleWhisker.TotalPositions
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.TotalPositions
  id: TotalPositions
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: TotalPositions()
  nameWithType: SkyWhale.SkyWhaleWhisker.TotalPositions()
  fullName: SkyWhale.SkyWhaleWhisker.TotalPositions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.TotalPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalPositions()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.TotalPositions</parameter>
          </include>
        </markup>
    content.vb: Public Function TotalPositions() As Integer
  overload: Global.SkyWhale.SkyWhaleWhisker.TotalPositions*
  implements:
  - Global.IClimbableVine.TotalPositions
- uid: Global.SkyWhale.SkyWhaleWhisker.Rad(System.Int32)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Rad(System.Int32)
  id: Rad(System.Int32)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Rad(int)
  nameWithType: SkyWhale.SkyWhaleWhisker.Rad(int)
  fullName: SkyWhale.SkyWhaleWhisker.Rad(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Rad(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Rad(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Rad(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Rad(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Rad(index As Integer) As Single
  overload: Global.SkyWhale.SkyWhaleWhisker.Rad*
  implements:
  - Global.IClimbableVine.Rad(System.Int32)
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.Rad(Integer)
  fullName.vb: SkyWhale.SkyWhaleWhisker.Rad(Integer)
  name.vb: Rad(Integer)
- uid: Global.SkyWhale.SkyWhaleWhisker.Mass(System.Int32)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Mass(System.Int32)
  id: Mass(System.Int32)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Mass(int)
  nameWithType: SkyWhale.SkyWhaleWhisker.Mass(int)
  fullName: SkyWhale.SkyWhaleWhisker.Mass(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Mass(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Mass(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Mass(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Mass(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Mass(index As Integer) As Single
  overload: Global.SkyWhale.SkyWhaleWhisker.Mass*
  implements:
  - Global.IClimbableVine.Mass(System.Int32)
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.Mass(Integer)
  fullName.vb: SkyWhale.SkyWhaleWhisker.Mass(Integer)
  name.vb: Mass(Integer)
- uid: Global.SkyWhale.SkyWhaleWhisker.Pos(System.Int32)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Pos(System.Int32)
  id: Pos(System.Int32)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Pos(int)
  nameWithType: SkyWhale.SkyWhaleWhisker.Pos(int)
  fullName: SkyWhale.SkyWhaleWhisker.Pos(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Pos(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Pos(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Pos(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Pos(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Pos(index As Integer) As Vector2
  overload: Global.SkyWhale.SkyWhaleWhisker.Pos*
  implements:
  - Global.IClimbableVine.Pos(System.Int32)
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.Pos(Integer)
  fullName.vb: SkyWhale.SkyWhaleWhisker.Pos(Integer)
  name.vb: Pos(Integer)
- uid: Global.SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)
  id: Push(System.Int32,UnityEngine.Vector2)
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: Push(int, Vector2)
  nameWithType: SkyWhale.SkyWhaleWhisker.Push(int, Vector2)
  fullName: SkyWhale.SkyWhaleWhisker.Push(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Push(int index, Vector2 movement)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: movement
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movement</parameter>
            <parameter>M:SkyWhale.SkyWhaleWhisker.Push(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Push(index As Integer, movement As Vector2)
  overload: Global.SkyWhale.SkyWhaleWhisker.Push*
  implements:
  - Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.Push(Integer, Vector2)
  fullName.vb: SkyWhale.SkyWhaleWhisker.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
- uid: Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor
  commentId: P:Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor
  id: BackgroundFactor
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: BackgroundFactor
  nameWithType: SkyWhale.SkyWhaleWhisker.BackgroundFactor
  fullName: SkyWhale.SkyWhaleWhisker.BackgroundFactor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SkyWhale.SkyWhaleWhisker.BackgroundFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BackgroundFactor { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property BackgroundFactor As Single
  overload: Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor*
- uid: Global.SkyWhale.SkyWhaleWhisker.InBackground
  commentId: P:Global.SkyWhale.SkyWhaleWhisker.InBackground
  id: InBackground
  parent: Global.SkyWhale.SkyWhaleWhisker
  langs:
  - csharp
  - vb
  name: InBackground
  nameWithType: SkyWhale.SkyWhaleWhisker.InBackground
  fullName: SkyWhale.SkyWhaleWhisker.InBackground
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SkyWhale.SkyWhaleWhisker.InBackground</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InBackground { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property InBackground As Boolean
  overload: Global.SkyWhale.SkyWhaleWhisker.InBackground*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IClimbableVine
  commentId: T:Global.IClimbableVine
  isExternal: true
  href: IClimbableVine.html
  name: IClimbableVine
  nameWithType: IClimbableVine
  fullName: IClimbableVine
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SimpleSegment[]
  isExternal: true
  href: SimpleSegment.html
  name: SimpleSegment[]
  nameWithType: SimpleSegment[]
  fullName: SimpleSegment[]
  nameWithType.vb: SimpleSegment()
  fullName.vb: SimpleSegment()
  name.vb: SimpleSegment()
  spec.csharp:
  - uid: Global.SimpleSegment
    name: SimpleSegment
    isExternal: true
    href: SimpleSegment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.SimpleSegment
    name: SimpleSegment
    isExternal: true
    href: SimpleSegment.html
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SkyWhale.SkyWhaleWhisker.#ctor*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.#ctor
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker__ctor_SkyWhale_System_Int32_BodyChunk_System_Single_System_Single_
  name: SkyWhaleWhisker
  nameWithType: SkyWhale.SkyWhaleWhisker.SkyWhaleWhisker
  fullName: SkyWhale.SkyWhaleWhisker.SkyWhaleWhisker
  nameWithType.vb: SkyWhale.SkyWhaleWhisker.New
  fullName.vb: SkyWhale.SkyWhaleWhisker.New
  name.vb: New
- uid: Global.SkyWhale
  commentId: T:Global.SkyWhale
  isExternal: true
  href: SkyWhale.html
  name: SkyWhale
  nameWithType: SkyWhale
  fullName: SkyWhale
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.hasCreatureAttached
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_hasCreatureAttached
  name: hasCreatureAttached
  nameWithType: SkyWhale.SkyWhaleWhisker.hasCreatureAttached
  fullName: SkyWhale.SkyWhaleWhisker.hasCreatureAttached
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SkyWhale.SkyWhaleWhisker.Reset*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Reset
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Reset
  name: Reset
  nameWithType: SkyWhale.SkyWhaleWhisker.Reset
  fullName: SkyWhale.SkyWhaleWhisker.Reset
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.Update*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Update
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Update_System_Boolean_
  name: Update
  nameWithType: SkyWhale.SkyWhaleWhisker.Update
  fullName: SkyWhale.SkyWhaleWhisker.Update
- uid: Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.BeingClimbedOn
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_BeingClimbedOn_Creature_
  name: BeingClimbedOn
  nameWithType: SkyWhale.SkyWhaleWhisker.BeingClimbedOn
  fullName: SkyWhale.SkyWhaleWhisker.BeingClimbedOn
- uid: Global.IClimbableVine.BeingClimbedOn(Creature)
  commentId: M:Global.IClimbableVine.BeingClimbedOn(Creature)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  name: BeingClimbedOn(Creature)
  nameWithType: IClimbableVine.BeingClimbedOn(Creature)
  fullName: IClimbableVine.BeingClimbedOn(Creature)
  spec.csharp:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.BeingClimbedOn(Creature)
    name: BeingClimbedOn
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_BeingClimbedOn_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_CurrentlyClimbable
  name: CurrentlyClimbable
  nameWithType: SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
  fullName: SkyWhale.SkyWhaleWhisker.CurrentlyClimbable
- uid: Global.IClimbableVine.CurrentlyClimbable
  commentId: M:Global.IClimbableVine.CurrentlyClimbable
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  name: CurrentlyClimbable()
  nameWithType: IClimbableVine.CurrentlyClimbable()
  fullName: IClimbableVine.CurrentlyClimbable()
  spec.csharp:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.CurrentlyClimbable
    name: CurrentlyClimbable
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_CurrentlyClimbable
  - name: (
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.TotalPositions*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.TotalPositions
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_TotalPositions
  name: TotalPositions
  nameWithType: SkyWhale.SkyWhaleWhisker.TotalPositions
  fullName: SkyWhale.SkyWhaleWhisker.TotalPositions
- uid: Global.IClimbableVine.TotalPositions
  commentId: M:Global.IClimbableVine.TotalPositions
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  name: TotalPositions()
  nameWithType: IClimbableVine.TotalPositions()
  fullName: IClimbableVine.TotalPositions()
  spec.csharp:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.TotalPositions
    name: TotalPositions
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_TotalPositions
  - name: (
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.Rad*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Rad
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Rad_System_Int32_
  name: Rad
  nameWithType: SkyWhale.SkyWhaleWhisker.Rad
  fullName: SkyWhale.SkyWhaleWhisker.Rad
- uid: Global.IClimbableVine.Rad(System.Int32)
  commentId: M:Global.IClimbableVine.Rad(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  name: Rad(int)
  nameWithType: IClimbableVine.Rad(int)
  fullName: IClimbableVine.Rad(int)
  nameWithType.vb: IClimbableVine.Rad(Integer)
  fullName.vb: IClimbableVine.Rad(Integer)
  name.vb: Rad(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Rad(System.Int32)
    name: Rad
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Rad_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.Mass*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Mass
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Mass_System_Int32_
  name: Mass
  nameWithType: SkyWhale.SkyWhaleWhisker.Mass
  fullName: SkyWhale.SkyWhaleWhisker.Mass
- uid: Global.IClimbableVine.Mass(System.Int32)
  commentId: M:Global.IClimbableVine.Mass(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  name: Mass(int)
  nameWithType: IClimbableVine.Mass(int)
  fullName: IClimbableVine.Mass(int)
  nameWithType.vb: IClimbableVine.Mass(Integer)
  fullName.vb: IClimbableVine.Mass(Integer)
  name.vb: Mass(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Mass(System.Int32)
    name: Mass
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Mass_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.Pos*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Pos
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Pos_System_Int32_
  name: Pos
  nameWithType: SkyWhale.SkyWhaleWhisker.Pos
  fullName: SkyWhale.SkyWhaleWhisker.Pos
- uid: Global.IClimbableVine.Pos(System.Int32)
  commentId: M:Global.IClimbableVine.Pos(System.Int32)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  name: Pos(int)
  nameWithType: IClimbableVine.Pos(int)
  fullName: IClimbableVine.Pos(int)
  nameWithType.vb: IClimbableVine.Pos(Integer)
  fullName.vb: IClimbableVine.Pos(Integer)
  name.vb: Pos(Integer)
  spec.csharp:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Pos(System.Int32)
    name: Pos
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Pos_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.SkyWhale.SkyWhaleWhisker.Push*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.Push
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_Push_System_Int32_UnityEngine_Vector2_
  name: Push
  nameWithType: SkyWhale.SkyWhaleWhisker.Push
  fullName: SkyWhale.SkyWhaleWhisker.Push
- uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
  parent: Global.IClimbableVine
  isExternal: true
  href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  name: Push(int, Vector2)
  nameWithType: IClimbableVine.Push(int, Vector2)
  fullName: IClimbableVine.Push(int, UnityEngine.Vector2)
  nameWithType.vb: IClimbableVine.Push(Integer, Vector2)
  fullName.vb: IClimbableVine.Push(Integer, UnityEngine.Vector2)
  name.vb: Push(Integer, Vector2)
  spec.csharp:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IClimbableVine.Push(System.Int32,UnityEngine.Vector2)
    name: Push
    isExternal: true
    href: Global.IClimbableVine.html#IClimbableVine_Push_System_Int32_UnityEngine_Vector2_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.BackgroundFactor
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_BackgroundFactor
  name: BackgroundFactor
  nameWithType: SkyWhale.SkyWhaleWhisker.BackgroundFactor
  fullName: SkyWhale.SkyWhaleWhisker.BackgroundFactor
- uid: Global.SkyWhale.SkyWhaleWhisker.InBackground*
  commentId: Overload:Global.SkyWhale.SkyWhaleWhisker.InBackground
  isExternal: true
  href: Global.SkyWhale.SkyWhaleWhisker.html#SkyWhale_SkyWhaleWhisker_InBackground
  name: InBackground
  nameWithType: SkyWhale.SkyWhaleWhisker.InBackground
  fullName: SkyWhale.SkyWhaleWhisker.InBackground
