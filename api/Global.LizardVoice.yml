### YamlMime:ManagedReference
items:
- uid: Global.LizardVoice
  commentId: T:Global.LizardVoice
  id: LizardVoice
  parent: Global
  children:
  - Global.LizardVoice.#ctor(Lizard)
  - Global.LizardVoice.MakeSound(LizardVoice.Emotion)
  - Global.LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)
  - Global.LizardVoice.Update
  - Global.LizardVoice.articulationIndex
  - Global.LizardVoice.articulations
  - Global.LizardVoice.currentArt
  - Global.LizardVoice.currentArticulationProgression
  - Global.LizardVoice.currentEmotionIntensity
  - Global.LizardVoice.lizard
  - Global.LizardVoice.myPitch
  - Global.LizardVoice.myVoiceTrigger
  langs:
  - csharp
  - vb
  name: LizardVoice
  nameWithType: LizardVoice
  fullName: LizardVoice
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardVoice</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardVoice : CreatureVoice'
    content.vb: Public Class LizardVoice Inherits CreatureVoice
  inheritance:
  - System.Object
  - Global.CreatureVoice
  inheritedMembers:
  - Global.CreatureVoice.creature
  - Global.CreatureVoice.voiceChunk
  - Global.CreatureVoice.room
  - Global.CreatureVoice.soundA
  - Global.CreatureVoice.soundID
  - Global.CreatureVoice.soundName
  - Global.CreatureVoice.lastSoundName
  - Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  - Global.CreatureVoice.Volume
  - Global.CreatureVoice.Pitch
  - Global.CreatureVoice.MakingASound
  - Global.CreatureVoice.VisualizedIntensity
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardVoice.lizard
  commentId: F:Global.LizardVoice.lizard
  id: lizard
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: lizard
  nameWithType: LizardVoice.lizard
  fullName: LizardVoice.lizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.lizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lizard lizard
    return:
      type: Global.Lizard
    content.vb: Public lizard As Lizard
- uid: Global.LizardVoice.myPitch
  commentId: F:Global.LizardVoice.myPitch
  id: myPitch
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: myPitch
  nameWithType: LizardVoice.myPitch
  fullName: LizardVoice.myPitch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.myPitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float myPitch
    return:
      type: System.Single
    content.vb: Public myPitch As Single
- uid: Global.LizardVoice.currentArticulationProgression
  commentId: F:Global.LizardVoice.currentArticulationProgression
  id: currentArticulationProgression
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: currentArticulationProgression
  nameWithType: LizardVoice.currentArticulationProgression
  fullName: LizardVoice.currentArticulationProgression
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.currentArticulationProgression</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float currentArticulationProgression
    return:
      type: System.Single
    content.vb: Public currentArticulationProgression As Single
- uid: Global.LizardVoice.articulationIndex
  commentId: F:Global.LizardVoice.articulationIndex
  id: articulationIndex
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: articulationIndex
  nameWithType: LizardVoice.articulationIndex
  fullName: LizardVoice.articulationIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.articulationIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int articulationIndex
    return:
      type: System.Int32
    content.vb: Public articulationIndex As Integer
- uid: Global.LizardVoice.currentEmotionIntensity
  commentId: F:Global.LizardVoice.currentEmotionIntensity
  id: currentEmotionIntensity
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: currentEmotionIntensity
  nameWithType: LizardVoice.currentEmotionIntensity
  fullName: LizardVoice.currentEmotionIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.currentEmotionIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float currentEmotionIntensity
    return:
      type: System.Single
    content.vb: Public currentEmotionIntensity As Single
- uid: Global.LizardVoice.myVoiceTrigger
  commentId: F:Global.LizardVoice.myVoiceTrigger
  id: myVoiceTrigger
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: myVoiceTrigger
  nameWithType: LizardVoice.myVoiceTrigger
  fullName: LizardVoice.myVoiceTrigger
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.myVoiceTrigger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID myVoiceTrigger
    return:
      type: Global.SoundID
    content.vb: Public myVoiceTrigger As SoundID
- uid: Global.LizardVoice.articulations
  commentId: F:Global.LizardVoice.articulations
  id: articulations
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: articulations
  nameWithType: LizardVoice.articulations
  fullName: LizardVoice.articulations
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardVoice.articulations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardVoice.VoiceArticulation[] articulations
    return:
      type: Global.LizardVoice.VoiceArticulation[]
    content.vb: Public articulations As LizardVoice.VoiceArticulation()
- uid: Global.LizardVoice.#ctor(Lizard)
  commentId: M:Global.LizardVoice.#ctor(Lizard)
  id: '#ctor(Lizard)'
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: LizardVoice(Lizard)
  nameWithType: LizardVoice.LizardVoice(Lizard)
  fullName: LizardVoice.LizardVoice(Lizard)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardVoice</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardVoice(Lizard lizard)
    parameters:
    - id: lizard
      type: Global.Lizard
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lizard</parameter>
            <parameter>M:LizardVoice.#ctor(Lizard)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(lizard As Lizard)
  overload: Global.LizardVoice.#ctor*
  nameWithType.vb: LizardVoice.New(Lizard)
  fullName.vb: LizardVoice.New(Lizard)
  name.vb: New(Lizard)
- uid: Global.LizardVoice.Update
  commentId: M:Global.LizardVoice.Update
  id: Update
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LizardVoice.Update()
  fullName: LizardVoice.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardVoice.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.CreatureVoice.Update
  overload: Global.LizardVoice.Update*
- uid: Global.LizardVoice.MakeSound(LizardVoice.Emotion)
  commentId: M:Global.LizardVoice.MakeSound(LizardVoice.Emotion)
  id: MakeSound(LizardVoice.Emotion)
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: MakeSound(Emotion)
  nameWithType: LizardVoice.MakeSound(LizardVoice.Emotion)
  fullName: LizardVoice.MakeSound(LizardVoice.Emotion)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardVoice.MakeSound(LizardVoice.Emotion)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MakeSound(LizardVoice.Emotion emotion)
    parameters:
    - id: emotion
      type: Global.LizardVoice.Emotion
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emotion</parameter>
            <parameter>M:LizardVoice.MakeSound(LizardVoice.Emotion)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MakeSound(emotion As LizardVoice.Emotion)
  overload: Global.LizardVoice.MakeSound*
- uid: Global.LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)
  commentId: M:Global.LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)
  id: MakeSound(LizardVoice.Emotion,System.Single)
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: MakeSound(Emotion, float)
  nameWithType: LizardVoice.MakeSound(LizardVoice.Emotion, float)
  fullName: LizardVoice.MakeSound(LizardVoice.Emotion, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MakeSound(LizardVoice.Emotion emotion, float intensity)
    parameters:
    - id: emotion
      type: Global.LizardVoice.Emotion
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>emotion</parameter>
            <parameter>M:LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)</parameter>
          </include>
        </markup>
    - id: intensity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intensity</parameter>
            <parameter>M:LizardVoice.MakeSound(LizardVoice.Emotion,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MakeSound(emotion As LizardVoice.Emotion, intensity As Single)
  overload: Global.LizardVoice.MakeSound*
  nameWithType.vb: LizardVoice.MakeSound(LizardVoice.Emotion, Single)
  fullName.vb: LizardVoice.MakeSound(LizardVoice.Emotion, Single)
  name.vb: MakeSound(Emotion, Single)
- uid: Global.LizardVoice.currentArt
  commentId: P:Global.LizardVoice.currentArt
  id: currentArt
  parent: Global.LizardVoice
  langs:
  - csharp
  - vb
  name: currentArt
  nameWithType: LizardVoice.currentArt
  fullName: LizardVoice.currentArt
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardVoice.currentArt</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardVoice.VoiceArticulation currentArt { get; }
    parameters: []
    return:
      type: Global.LizardVoice.VoiceArticulation
    content.vb: Public ReadOnly Property currentArt As LizardVoice.VoiceArticulation
  overload: Global.LizardVoice.currentArt*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.CreatureVoice
  commentId: T:Global.CreatureVoice
  isExternal: true
  href: CreatureVoice.html
  name: CreatureVoice
  nameWithType: CreatureVoice
  fullName: CreatureVoice
- uid: Global.CreatureVoice.creature
  commentId: F:Global.CreatureVoice.creature
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_creature
  name: creature
  nameWithType: CreatureVoice.creature
  fullName: CreatureVoice.creature
- uid: Global.CreatureVoice.voiceChunk
  commentId: F:Global.CreatureVoice.voiceChunk
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_voiceChunk
  name: voiceChunk
  nameWithType: CreatureVoice.voiceChunk
  fullName: CreatureVoice.voiceChunk
- uid: Global.CreatureVoice.room
  commentId: F:Global.CreatureVoice.room
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_room
  name: room
  nameWithType: CreatureVoice.room
  fullName: CreatureVoice.room
- uid: Global.CreatureVoice.soundA
  commentId: F:Global.CreatureVoice.soundA
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_soundA
  name: soundA
  nameWithType: CreatureVoice.soundA
  fullName: CreatureVoice.soundA
- uid: Global.CreatureVoice.soundID
  commentId: F:Global.CreatureVoice.soundID
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_soundID
  name: soundID
  nameWithType: CreatureVoice.soundID
  fullName: CreatureVoice.soundID
- uid: Global.CreatureVoice.soundName
  commentId: F:Global.CreatureVoice.soundName
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_soundName
  name: soundName
  nameWithType: CreatureVoice.soundName
  fullName: CreatureVoice.soundName
- uid: Global.CreatureVoice.lastSoundName
  commentId: F:Global.CreatureVoice.lastSoundName
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_lastSoundName
  name: lastSoundName
  nameWithType: CreatureVoice.lastSoundName
  fullName: CreatureVoice.lastSoundName
- uid: Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  commentId: M:Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_InitSoundVisualizer_System_Single_System_Single_System_Single_
  name: InitSoundVisualizer(float, float, float)
  nameWithType: CreatureVoice.InitSoundVisualizer(float, float, float)
  fullName: CreatureVoice.InitSoundVisualizer(float, float, float)
  nameWithType.vb: CreatureVoice.InitSoundVisualizer(Single, Single, Single)
  fullName.vb: CreatureVoice.InitSoundVisualizer(Single, Single, Single)
  name.vb: InitSoundVisualizer(Single, Single, Single)
  spec.csharp:
  - uid: Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
    name: InitSoundVisualizer
    isExternal: true
    href: Global.CreatureVoice.html#CreatureVoice_InitSoundVisualizer_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.CreatureVoice.InitSoundVisualizer(System.Single,System.Single,System.Single)
    name: InitSoundVisualizer
    isExternal: true
    href: Global.CreatureVoice.html#CreatureVoice_InitSoundVisualizer_System_Single_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.CreatureVoice.Volume
  commentId: P:Global.CreatureVoice.Volume
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Volume
  name: Volume
  nameWithType: CreatureVoice.Volume
  fullName: CreatureVoice.Volume
- uid: Global.CreatureVoice.Pitch
  commentId: P:Global.CreatureVoice.Pitch
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Pitch
  name: Pitch
  nameWithType: CreatureVoice.Pitch
  fullName: CreatureVoice.Pitch
- uid: Global.CreatureVoice.MakingASound
  commentId: P:Global.CreatureVoice.MakingASound
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_MakingASound
  name: MakingASound
  nameWithType: CreatureVoice.MakingASound
  fullName: CreatureVoice.MakingASound
- uid: Global.CreatureVoice.VisualizedIntensity
  commentId: P:Global.CreatureVoice.VisualizedIntensity
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_VisualizedIntensity
  name: VisualizedIntensity
  nameWithType: CreatureVoice.VisualizedIntensity
  fullName: CreatureVoice.VisualizedIntensity
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: Global.LizardVoice.VoiceArticulation[]
  isExternal: true
  href: LizardVoice.VoiceArticulation.html
  name: VoiceArticulation[]
  nameWithType: LizardVoice.VoiceArticulation[]
  fullName: LizardVoice.VoiceArticulation[]
  nameWithType.vb: LizardVoice.VoiceArticulation()
  fullName.vb: LizardVoice.VoiceArticulation()
  name.vb: VoiceArticulation()
  spec.csharp:
  - uid: Global.LizardVoice.VoiceArticulation
    name: VoiceArticulation
    isExternal: true
    href: LizardVoice.VoiceArticulation.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.LizardVoice.VoiceArticulation
    name: VoiceArticulation
    isExternal: true
    href: LizardVoice.VoiceArticulation.html
  - name: (
  - name: )
- uid: Global.LizardVoice.#ctor*
  commentId: Overload:Global.LizardVoice.#ctor
  isExternal: true
  href: Global.LizardVoice.html#LizardVoice__ctor_Lizard_
  name: LizardVoice
  nameWithType: LizardVoice.LizardVoice
  fullName: LizardVoice.LizardVoice
  nameWithType.vb: LizardVoice.New
  fullName.vb: LizardVoice.New
  name.vb: New
- uid: Global.CreatureVoice.Update
  commentId: M:Global.CreatureVoice.Update
  parent: Global.CreatureVoice
  isExternal: true
  href: Global.CreatureVoice.html#CreatureVoice_Update
  name: Update()
  nameWithType: CreatureVoice.Update()
  fullName: CreatureVoice.Update()
  spec.csharp:
  - uid: Global.CreatureVoice.Update
    name: Update
    isExternal: true
    href: Global.CreatureVoice.html#CreatureVoice_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.CreatureVoice.Update
    name: Update
    isExternal: true
    href: Global.CreatureVoice.html#CreatureVoice_Update
  - name: (
  - name: )
- uid: Global.LizardVoice.Update*
  commentId: Overload:Global.LizardVoice.Update
  isExternal: true
  href: Global.LizardVoice.html#LizardVoice_Update
  name: Update
  nameWithType: LizardVoice.Update
  fullName: LizardVoice.Update
- uid: Global.LizardVoice.MakeSound*
  commentId: Overload:Global.LizardVoice.MakeSound
  isExternal: true
  href: Global.LizardVoice.html#LizardVoice_MakeSound_LizardVoice_Emotion_
  name: MakeSound
  nameWithType: LizardVoice.MakeSound
  fullName: LizardVoice.MakeSound
- uid: Global.LizardVoice.Emotion
  commentId: T:Global.LizardVoice.Emotion
  isExternal: true
  href: LizardVoice.html
  name: LizardVoice.Emotion
  nameWithType: LizardVoice.Emotion
  fullName: LizardVoice.Emotion
  spec.csharp:
  - uid: Global.LizardVoice
    name: LizardVoice
    isExternal: true
    href: LizardVoice.html
  - name: .
  - uid: Global.LizardVoice.Emotion
    name: Emotion
    isExternal: true
    href: LizardVoice.Emotion.html
  spec.vb:
  - uid: Global.LizardVoice
    name: LizardVoice
    isExternal: true
    href: LizardVoice.html
  - name: .
  - uid: Global.LizardVoice.Emotion
    name: Emotion
    isExternal: true
    href: LizardVoice.Emotion.html
- uid: Global.LizardVoice.currentArt*
  commentId: Overload:Global.LizardVoice.currentArt
  isExternal: true
  href: Global.LizardVoice.html#LizardVoice_currentArt
  name: currentArt
  nameWithType: LizardVoice.currentArt
  fullName: LizardVoice.currentArt
- uid: Global.LizardVoice.VoiceArticulation
  commentId: T:Global.LizardVoice.VoiceArticulation
  isExternal: true
  href: LizardVoice.html
  name: LizardVoice.VoiceArticulation
  nameWithType: LizardVoice.VoiceArticulation
  fullName: LizardVoice.VoiceArticulation
  spec.csharp:
  - uid: Global.LizardVoice
    name: LizardVoice
    isExternal: true
    href: LizardVoice.html
  - name: .
  - uid: Global.LizardVoice.VoiceArticulation
    name: VoiceArticulation
    isExternal: true
    href: LizardVoice.VoiceArticulation.html
  spec.vb:
  - uid: Global.LizardVoice
    name: LizardVoice
    isExternal: true
    href: LizardVoice.html
  - name: .
  - uid: Global.LizardVoice.VoiceArticulation
    name: VoiceArticulation
    isExternal: true
    href: LizardVoice.VoiceArticulation.html
