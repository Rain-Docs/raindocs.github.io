### YamlMime:ManagedReference
items:
- uid: Global.SocialMemory
  commentId: T:Global.SocialMemory
  id: SocialMemory
  parent: Global
  children:
  - Global.SocialMemory.#ctor
  - Global.SocialMemory.CycleTick
  - Global.SocialMemory.DiscardRelationship(EntityID)
  - Global.SocialMemory.EvenOutAllTemps(System.Single)
  - Global.SocialMemory.FromString(System.String)
  - Global.SocialMemory.GetKnow(EntityID)
  - Global.SocialMemory.GetLike(EntityID)
  - Global.SocialMemory.GetOrInitiateRelationship(EntityID)
  - Global.SocialMemory.GetRelationship(EntityID)
  - Global.SocialMemory.GetTempLike(EntityID)
  - Global.SocialMemory.ToString
  - Global.SocialMemory.relationShips
  langs:
  - csharp
  - vb
  name: SocialMemory
  nameWithType: SocialMemory
  fullName: SocialMemory
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SocialMemory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SocialMemory
    content.vb: Public Class SocialMemory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SocialMemory.relationShips
  commentId: F:Global.SocialMemory.relationShips
  id: relationShips
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: relationShips
  nameWithType: SocialMemory.relationShips
  fullName: SocialMemory.relationShips
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SocialMemory.relationShips</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SocialMemory.Relationship> relationShips
    return:
      type: System.Collections.Generic.List{SocialMemory.Relationship}
    content.vb: Public relationShips As List(Of SocialMemory.Relationship)
- uid: Global.SocialMemory.#ctor
  commentId: M:Global.SocialMemory.#ctor
  id: '#ctor'
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: SocialMemory()
  nameWithType: SocialMemory.SocialMemory()
  fullName: SocialMemory.SocialMemory()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SocialMemory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialMemory()
    content.vb: Public Sub New()
  overload: Global.SocialMemory.#ctor*
  nameWithType.vb: SocialMemory.New()
  fullName.vb: SocialMemory.New()
  name.vb: New()
- uid: Global.SocialMemory.GetOrInitiateRelationship(EntityID)
  commentId: M:Global.SocialMemory.GetOrInitiateRelationship(EntityID)
  id: GetOrInitiateRelationship(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: GetOrInitiateRelationship(EntityID)
  nameWithType: SocialMemory.GetOrInitiateRelationship(EntityID)
  fullName: SocialMemory.GetOrInitiateRelationship(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.GetOrInitiateRelationship(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialMemory.Relationship GetOrInitiateRelationship(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.GetOrInitiateRelationship(EntityID)</parameter>
          </include>
        </markup>
    return:
      type: Global.SocialMemory.Relationship
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.GetOrInitiateRelationship(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetOrInitiateRelationship(subjectID As EntityID) As SocialMemory.Relationship
  overload: Global.SocialMemory.GetOrInitiateRelationship*
- uid: Global.SocialMemory.DiscardRelationship(EntityID)
  commentId: M:Global.SocialMemory.DiscardRelationship(EntityID)
  id: DiscardRelationship(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: DiscardRelationship(EntityID)
  nameWithType: SocialMemory.DiscardRelationship(EntityID)
  fullName: SocialMemory.DiscardRelationship(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.DiscardRelationship(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DiscardRelationship(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.DiscardRelationship(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DiscardRelationship(subjectID As EntityID)
  overload: Global.SocialMemory.DiscardRelationship*
- uid: Global.SocialMemory.GetRelationship(EntityID)
  commentId: M:Global.SocialMemory.GetRelationship(EntityID)
  id: GetRelationship(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: GetRelationship(EntityID)
  nameWithType: SocialMemory.GetRelationship(EntityID)
  fullName: SocialMemory.GetRelationship(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.GetRelationship(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialMemory.Relationship GetRelationship(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.GetRelationship(EntityID)</parameter>
          </include>
        </markup>
    return:
      type: Global.SocialMemory.Relationship
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.GetRelationship(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetRelationship(subjectID As EntityID) As SocialMemory.Relationship
  overload: Global.SocialMemory.GetRelationship*
- uid: Global.SocialMemory.GetLike(EntityID)
  commentId: M:Global.SocialMemory.GetLike(EntityID)
  id: GetLike(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: GetLike(EntityID)
  nameWithType: SocialMemory.GetLike(EntityID)
  fullName: SocialMemory.GetLike(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.GetLike(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetLike(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.GetLike(EntityID)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.GetLike(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetLike(subjectID As EntityID) As Single
  overload: Global.SocialMemory.GetLike*
- uid: Global.SocialMemory.GetTempLike(EntityID)
  commentId: M:Global.SocialMemory.GetTempLike(EntityID)
  id: GetTempLike(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: GetTempLike(EntityID)
  nameWithType: SocialMemory.GetTempLike(EntityID)
  fullName: SocialMemory.GetTempLike(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.GetTempLike(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetTempLike(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.GetTempLike(EntityID)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.GetTempLike(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTempLike(subjectID As EntityID) As Single
  overload: Global.SocialMemory.GetTempLike*
- uid: Global.SocialMemory.GetKnow(EntityID)
  commentId: M:Global.SocialMemory.GetKnow(EntityID)
  id: GetKnow(EntityID)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: GetKnow(EntityID)
  nameWithType: SocialMemory.GetKnow(EntityID)
  fullName: SocialMemory.GetKnow(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.GetKnow(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GetKnow(EntityID subjectID)
    parameters:
    - id: subjectID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subjectID</parameter>
            <parameter>M:SocialMemory.GetKnow(EntityID)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.GetKnow(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetKnow(subjectID As EntityID) As Single
  overload: Global.SocialMemory.GetKnow*
- uid: Global.SocialMemory.ToString
  commentId: M:Global.SocialMemory.ToString
  id: ToString
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SocialMemory.ToString()
  fullName: SocialMemory.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.SocialMemory.ToString*
- uid: Global.SocialMemory.FromString(System.String)
  commentId: M:Global.SocialMemory.FromString(System.String)
  id: FromString(System.String)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: SocialMemory.FromString(string)
  fullName: SocialMemory.FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SocialMemory FromString(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:SocialMemory.FromString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.SocialMemory
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SocialMemory.FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FromString(s As String) As SocialMemory
  overload: Global.SocialMemory.FromString*
  nameWithType.vb: SocialMemory.FromString(String)
  fullName.vb: SocialMemory.FromString(String)
  name.vb: FromString(String)
- uid: Global.SocialMemory.EvenOutAllTemps(System.Single)
  commentId: M:Global.SocialMemory.EvenOutAllTemps(System.Single)
  id: EvenOutAllTemps(System.Single)
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: EvenOutAllTemps(float)
  nameWithType: SocialMemory.EvenOutAllTemps(float)
  fullName: SocialMemory.EvenOutAllTemps(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.EvenOutAllTemps(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EvenOutAllTemps(float speed)
    parameters:
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:SocialMemory.EvenOutAllTemps(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub EvenOutAllTemps(speed As Single)
  overload: Global.SocialMemory.EvenOutAllTemps*
  nameWithType.vb: SocialMemory.EvenOutAllTemps(Single)
  fullName.vb: SocialMemory.EvenOutAllTemps(Single)
  name.vb: EvenOutAllTemps(Single)
- uid: Global.SocialMemory.CycleTick
  commentId: M:Global.SocialMemory.CycleTick
  id: CycleTick
  parent: Global.SocialMemory
  langs:
  - csharp
  - vb
  name: CycleTick()
  nameWithType: SocialMemory.CycleTick()
  fullName: SocialMemory.CycleTick()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SocialMemory.CycleTick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CycleTick()
    content.vb: Public Sub CycleTick()
  overload: Global.SocialMemory.CycleTick*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{SocialMemory.Relationship}
  commentId: T:System.Collections.Generic.List{SocialMemory.Relationship}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SocialMemory.Relationship>
  nameWithType: List<SocialMemory.Relationship>
  fullName: System.Collections.Generic.List<SocialMemory.Relationship>
  nameWithType.vb: List(Of SocialMemory.Relationship)
  fullName.vb: System.Collections.Generic.List(Of SocialMemory.Relationship)
  name.vb: List(Of SocialMemory.Relationship)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SocialMemory
    name: SocialMemory
    isExternal: true
    href: SocialMemory.html
  - name: .
  - uid: Global.SocialMemory.Relationship
    name: Relationship
    isExternal: true
    href: SocialMemory.Relationship.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SocialMemory
    name: SocialMemory
    isExternal: true
    href: SocialMemory.html
  - name: .
  - uid: Global.SocialMemory.Relationship
    name: Relationship
    isExternal: true
    href: SocialMemory.Relationship.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.SocialMemory.#ctor*
  commentId: Overload:Global.SocialMemory.#ctor
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory__ctor
  name: SocialMemory
  nameWithType: SocialMemory.SocialMemory
  fullName: SocialMemory.SocialMemory
  nameWithType.vb: SocialMemory.New
  fullName.vb: SocialMemory.New
  name.vb: New
- uid: Global.SocialMemory.GetOrInitiateRelationship*
  commentId: Overload:Global.SocialMemory.GetOrInitiateRelationship
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_GetOrInitiateRelationship_EntityID_
  name: GetOrInitiateRelationship
  nameWithType: SocialMemory.GetOrInitiateRelationship
  fullName: SocialMemory.GetOrInitiateRelationship
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
- uid: Global.SocialMemory.Relationship
  commentId: T:Global.SocialMemory.Relationship
  isExternal: true
  href: SocialMemory.html
  name: SocialMemory.Relationship
  nameWithType: SocialMemory.Relationship
  fullName: SocialMemory.Relationship
  spec.csharp:
  - uid: Global.SocialMemory
    name: SocialMemory
    isExternal: true
    href: SocialMemory.html
  - name: .
  - uid: Global.SocialMemory.Relationship
    name: Relationship
    isExternal: true
    href: SocialMemory.Relationship.html
  spec.vb:
  - uid: Global.SocialMemory
    name: SocialMemory
    isExternal: true
    href: SocialMemory.html
  - name: .
  - uid: Global.SocialMemory.Relationship
    name: Relationship
    isExternal: true
    href: SocialMemory.Relationship.html
- uid: Global.SocialMemory.DiscardRelationship*
  commentId: Overload:Global.SocialMemory.DiscardRelationship
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_DiscardRelationship_EntityID_
  name: DiscardRelationship
  nameWithType: SocialMemory.DiscardRelationship
  fullName: SocialMemory.DiscardRelationship
- uid: Global.SocialMemory.GetRelationship*
  commentId: Overload:Global.SocialMemory.GetRelationship
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_GetRelationship_EntityID_
  name: GetRelationship
  nameWithType: SocialMemory.GetRelationship
  fullName: SocialMemory.GetRelationship
- uid: Global.SocialMemory.GetLike*
  commentId: Overload:Global.SocialMemory.GetLike
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_GetLike_EntityID_
  name: GetLike
  nameWithType: SocialMemory.GetLike
  fullName: SocialMemory.GetLike
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SocialMemory.GetTempLike*
  commentId: Overload:Global.SocialMemory.GetTempLike
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_GetTempLike_EntityID_
  name: GetTempLike
  nameWithType: SocialMemory.GetTempLike
  fullName: SocialMemory.GetTempLike
- uid: Global.SocialMemory.GetKnow*
  commentId: Overload:Global.SocialMemory.GetKnow
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_GetKnow_EntityID_
  name: GetKnow
  nameWithType: SocialMemory.GetKnow
  fullName: SocialMemory.GetKnow
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.SocialMemory.ToString*
  commentId: Overload:Global.SocialMemory.ToString
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_ToString
  name: ToString
  nameWithType: SocialMemory.ToString
  fullName: SocialMemory.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.SocialMemory.FromString*
  commentId: Overload:Global.SocialMemory.FromString
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_FromString_System_String_
  name: FromString
  nameWithType: SocialMemory.FromString
  fullName: SocialMemory.FromString
- uid: Global.SocialMemory
  commentId: T:Global.SocialMemory
  isExternal: true
  href: SocialMemory.html
  name: SocialMemory
  nameWithType: SocialMemory
  fullName: SocialMemory
- uid: Global.SocialMemory.EvenOutAllTemps*
  commentId: Overload:Global.SocialMemory.EvenOutAllTemps
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_EvenOutAllTemps_System_Single_
  name: EvenOutAllTemps
  nameWithType: SocialMemory.EvenOutAllTemps
  fullName: SocialMemory.EvenOutAllTemps
- uid: Global.SocialMemory.CycleTick*
  commentId: Overload:Global.SocialMemory.CycleTick
  isExternal: true
  href: Global.SocialMemory.html#SocialMemory_CycleTick
  name: CycleTick
  nameWithType: SocialMemory.CycleTick
  fullName: SocialMemory.CycleTick
