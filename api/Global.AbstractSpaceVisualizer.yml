### YamlMime:ManagedReference
items:
- uid: Global.AbstractSpaceVisualizer
  commentId: T:Global.AbstractSpaceVisualizer
  id: AbstractSpaceVisualizer
  parent: Global
  children:
  - Global.AbstractSpaceVisualizer.#ctor(World,Room)
  - Global.AbstractSpaceVisualizer.ChangeRoom(Room)
  - Global.AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)
  - Global.AbstractSpaceVisualizer.Update
  - Global.AbstractSpaceVisualizer.Visibility(System.Boolean)
  - Global.AbstractSpaceVisualizer.communityLabels
  - Global.AbstractSpaceVisualizer.current
  - Global.AbstractSpaceVisualizer.infoText
  - Global.AbstractSpaceVisualizer.room
  - Global.AbstractSpaceVisualizer.world
  langs:
  - csharp
  - vb
  name: AbstractSpaceVisualizer
  nameWithType: AbstractSpaceVisualizer
  fullName: AbstractSpaceVisualizer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractSpaceVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AbstractSpaceVisualizer
    content.vb: Public Class AbstractSpaceVisualizer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AbstractSpaceVisualizer.world
  commentId: F:Global.AbstractSpaceVisualizer.world
  id: world
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: world
  nameWithType: AbstractSpaceVisualizer.world
  fullName: AbstractSpaceVisualizer.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractSpaceVisualizer.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.AbstractSpaceVisualizer.room
  commentId: F:Global.AbstractSpaceVisualizer.room
  id: room
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: room
  nameWithType: AbstractSpaceVisualizer.room
  fullName: AbstractSpaceVisualizer.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractSpaceVisualizer.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room
    return:
      type: Global.Room
    content.vb: Public room As Room
- uid: Global.AbstractSpaceVisualizer.infoText
  commentId: F:Global.AbstractSpaceVisualizer.infoText
  id: infoText
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: infoText
  nameWithType: AbstractSpaceVisualizer.infoText
  fullName: AbstractSpaceVisualizer.infoText
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractSpaceVisualizer.infoText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLabel infoText
    return:
      type: Global.FLabel
    content.vb: Public infoText As FLabel
- uid: Global.AbstractSpaceVisualizer.communityLabels
  commentId: F:Global.AbstractSpaceVisualizer.communityLabels
  id: communityLabels
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: communityLabels
  nameWithType: AbstractSpaceVisualizer.communityLabels
  fullName: AbstractSpaceVisualizer.communityLabels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractSpaceVisualizer.communityLabels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLabel[,] communityLabels
    return:
      type: Global.FLabel[,]
    content.vb: Public communityLabels As FLabel(,)
- uid: Global.AbstractSpaceVisualizer.current
  commentId: F:Global.AbstractSpaceVisualizer.current
  id: current
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: current
  nameWithType: AbstractSpaceVisualizer.current
  fullName: AbstractSpaceVisualizer.current
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractSpaceVisualizer.current</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite current
    return:
      type: Global.DebugSprite
    content.vb: Public current As DebugSprite
- uid: Global.AbstractSpaceVisualizer.#ctor(World,Room)
  commentId: M:Global.AbstractSpaceVisualizer.#ctor(World,Room)
  id: '#ctor(World,Room)'
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: AbstractSpaceVisualizer(World, Room)
  nameWithType: AbstractSpaceVisualizer.AbstractSpaceVisualizer(World, Room)
  fullName: AbstractSpaceVisualizer.AbstractSpaceVisualizer(World, Room)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractSpaceVisualizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractSpaceVisualizer(World world, Room room)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:AbstractSpaceVisualizer.#ctor(World,Room)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:AbstractSpaceVisualizer.#ctor(World,Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, room As Room)
  overload: Global.AbstractSpaceVisualizer.#ctor*
  nameWithType.vb: AbstractSpaceVisualizer.New(World, Room)
  fullName.vb: AbstractSpaceVisualizer.New(World, Room)
  name.vb: New(World, Room)
- uid: Global.AbstractSpaceVisualizer.Visibility(System.Boolean)
  commentId: M:Global.AbstractSpaceVisualizer.Visibility(System.Boolean)
  id: Visibility(System.Boolean)
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: Visibility(bool)
  nameWithType: AbstractSpaceVisualizer.Visibility(bool)
  fullName: AbstractSpaceVisualizer.Visibility(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractSpaceVisualizer.Visibility(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Visibility(bool visibility)
    parameters:
    - id: visibility
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>visibility</parameter>
            <parameter>M:AbstractSpaceVisualizer.Visibility(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Visibility(visibility As Boolean)
  overload: Global.AbstractSpaceVisualizer.Visibility*
  nameWithType.vb: AbstractSpaceVisualizer.Visibility(Boolean)
  fullName.vb: AbstractSpaceVisualizer.Visibility(Boolean)
  name.vb: Visibility(Boolean)
- uid: Global.AbstractSpaceVisualizer.ChangeRoom(Room)
  commentId: M:Global.AbstractSpaceVisualizer.ChangeRoom(Room)
  id: ChangeRoom(Room)
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: ChangeRoom(Room)
  nameWithType: AbstractSpaceVisualizer.ChangeRoom(Room)
  fullName: AbstractSpaceVisualizer.ChangeRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractSpaceVisualizer.ChangeRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ChangeRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:AbstractSpaceVisualizer.ChangeRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ChangeRoom(newRoom As Room)
  overload: Global.AbstractSpaceVisualizer.ChangeRoom*
- uid: Global.AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)
  commentId: M:Global.AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)
  id: SpritePosition(System.Int32,System.Int32)
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: SpritePosition(int, int)
  nameWithType: AbstractSpaceVisualizer.SpritePosition(int, int)
  fullName: AbstractSpaceVisualizer.SpritePosition(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SpritePosition(int i, int a)
    parameters:
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: a
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractSpaceVisualizer.SpritePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SpritePosition(i As Integer, a As Integer) As Vector2
  overload: Global.AbstractSpaceVisualizer.SpritePosition*
  nameWithType.vb: AbstractSpaceVisualizer.SpritePosition(Integer, Integer)
  fullName.vb: AbstractSpaceVisualizer.SpritePosition(Integer, Integer)
  name.vb: SpritePosition(Integer, Integer)
- uid: Global.AbstractSpaceVisualizer.Update
  commentId: M:Global.AbstractSpaceVisualizer.Update
  id: Update
  parent: Global.AbstractSpaceVisualizer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: AbstractSpaceVisualizer.Update()
  fullName: AbstractSpaceVisualizer.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractSpaceVisualizer.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.AbstractSpaceVisualizer.Update*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: Global.FLabel[,]
  isExternal: true
  href: FLabel.html
  name: FLabel[,]
  nameWithType: FLabel[,]
  fullName: FLabel[,]
  nameWithType.vb: FLabel(,)
  fullName.vb: FLabel(,)
  name.vb: FLabel(,)
  spec.csharp:
  - uid: Global.FLabel
    name: FLabel
    isExternal: true
    href: FLabel.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Global.FLabel
    name: FLabel
    isExternal: true
    href: FLabel.html
  - name: (
  - name: ','
  - name: )
- uid: Global.DebugSprite
  commentId: T:Global.DebugSprite
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite
  nameWithType: DebugSprite
  fullName: DebugSprite
- uid: Global.AbstractSpaceVisualizer.#ctor*
  commentId: Overload:Global.AbstractSpaceVisualizer.#ctor
  isExternal: true
  href: Global.AbstractSpaceVisualizer.html#AbstractSpaceVisualizer__ctor_World_Room_
  name: AbstractSpaceVisualizer
  nameWithType: AbstractSpaceVisualizer.AbstractSpaceVisualizer
  fullName: AbstractSpaceVisualizer.AbstractSpaceVisualizer
  nameWithType.vb: AbstractSpaceVisualizer.New
  fullName.vb: AbstractSpaceVisualizer.New
  name.vb: New
- uid: Global.AbstractSpaceVisualizer.Visibility*
  commentId: Overload:Global.AbstractSpaceVisualizer.Visibility
  isExternal: true
  href: Global.AbstractSpaceVisualizer.html#AbstractSpaceVisualizer_Visibility_System_Boolean_
  name: Visibility
  nameWithType: AbstractSpaceVisualizer.Visibility
  fullName: AbstractSpaceVisualizer.Visibility
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.AbstractSpaceVisualizer.ChangeRoom*
  commentId: Overload:Global.AbstractSpaceVisualizer.ChangeRoom
  isExternal: true
  href: Global.AbstractSpaceVisualizer.html#AbstractSpaceVisualizer_ChangeRoom_Room_
  name: ChangeRoom
  nameWithType: AbstractSpaceVisualizer.ChangeRoom
  fullName: AbstractSpaceVisualizer.ChangeRoom
- uid: Global.AbstractSpaceVisualizer.SpritePosition*
  commentId: Overload:Global.AbstractSpaceVisualizer.SpritePosition
  isExternal: true
  href: Global.AbstractSpaceVisualizer.html#AbstractSpaceVisualizer_SpritePosition_System_Int32_System_Int32_
  name: SpritePosition
  nameWithType: AbstractSpaceVisualizer.SpritePosition
  fullName: AbstractSpaceVisualizer.SpritePosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.AbstractSpaceVisualizer.Update*
  commentId: Overload:Global.AbstractSpaceVisualizer.Update
  isExternal: true
  href: Global.AbstractSpaceVisualizer.html#AbstractSpaceVisualizer_Update
  name: Update
  nameWithType: AbstractSpaceVisualizer.Update
  fullName: AbstractSpaceVisualizer.Update
