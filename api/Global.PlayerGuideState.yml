### YamlMime:ManagedReference
items:
- uid: Global.PlayerGuideState
  commentId: T:Global.PlayerGuideState
  id: PlayerGuideState
  parent: Global
  children:
  - Global.PlayerGuideState.#ctor
  - Global.PlayerGuideState.FromString(System.String)
  - Global.PlayerGuideState.HasImageBeenShownInRoom(System.String)
  - Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)
  - Global.PlayerGuideState.ImageShownInRoom(System.String)
  - Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(System.Int32)
  - Global.PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)
  - Global.PlayerGuideState.InfluenceLike(System.Single,System.Boolean)
  - Global.PlayerGuideState.ToString
  - Global.PlayerGuideState.angryWithPlayer
  - Global.PlayerGuideState.creatureTypes
  - Global.PlayerGuideState.displayedAnger
  - Global.PlayerGuideState.forcedDirectionsGiven
  - Global.PlayerGuideState.guideSymbol
  - Global.PlayerGuideState.handHolding
  - Global.PlayerGuideState.hasBeenToASwarmRoomThisCycle
  - Global.PlayerGuideState.imagesShown
  - Global.PlayerGuideState.increaseLikeOnSave
  - Global.PlayerGuideState.integers
  - Global.PlayerGuideState.itemTypes
  - Global.PlayerGuideState.likesPlayer
  - Global.PlayerGuideState.pickupObjectsShown
  - Global.PlayerGuideState.playerHasVisitedMoon
  - Global.PlayerGuideState.scavTradeInstructionCompleted
  - Global.PlayerGuideState.superJumpsShown
  - Global.PlayerGuideState.unrecognizedSaveStrings
  - Global.PlayerGuideState.wantDirectionHandHoldingThisCycle
  - Global.PlayerGuideState.wantFoodHandHoldingThisCycle
  - Global.PlayerGuideState.wantShelterHandHoldingThisCycle
  langs:
  - csharp
  - vb
  name: PlayerGuideState
  nameWithType: PlayerGuideState
  fullName: PlayerGuideState
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PlayerGuideState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PlayerGuideState
    content.vb: Public Class PlayerGuideState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PlayerGuideState.itemTypes
  commentId: F:Global.PlayerGuideState.itemTypes
  id: itemTypes
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: itemTypes
  nameWithType: PlayerGuideState.itemTypes
  fullName: PlayerGuideState.itemTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.itemTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<AbstractPhysicalObject.AbstractObjectType> itemTypes
    return:
      type: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
    content.vb: Public itemTypes As List(Of AbstractPhysicalObject.AbstractObjectType)
- uid: Global.PlayerGuideState.creatureTypes
  commentId: F:Global.PlayerGuideState.creatureTypes
  id: creatureTypes
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: creatureTypes
  nameWithType: PlayerGuideState.creatureTypes
  fullName: PlayerGuideState.creatureTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.creatureTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<CreatureTemplate.Type> creatureTypes
    return:
      type: System.Collections.Generic.List{CreatureTemplate.Type}
    content.vb: Public creatureTypes As List(Of CreatureTemplate.Type)
- uid: Global.PlayerGuideState.unrecognizedSaveStrings
  commentId: F:Global.PlayerGuideState.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: PlayerGuideState.unrecognizedSaveStrings
  fullName: PlayerGuideState.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedSaveStrings As List(Of String)
- uid: Global.PlayerGuideState.integers
  commentId: F:Global.PlayerGuideState.integers
  id: integers
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: integers
  nameWithType: PlayerGuideState.integers
  fullName: PlayerGuideState.integers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.integers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] integers
    return:
      type: System.Int32[]
    content.vb: Public integers As Integer()
- uid: Global.PlayerGuideState.increaseLikeOnSave
  commentId: F:Global.PlayerGuideState.increaseLikeOnSave
  id: increaseLikeOnSave
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: increaseLikeOnSave
  nameWithType: PlayerGuideState.increaseLikeOnSave
  fullName: PlayerGuideState.increaseLikeOnSave
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.increaseLikeOnSave</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool increaseLikeOnSave
    return:
      type: System.Boolean
    content.vb: Public increaseLikeOnSave As Boolean
- uid: Global.PlayerGuideState.likesPlayer
  commentId: F:Global.PlayerGuideState.likesPlayer
  id: likesPlayer
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: likesPlayer
  nameWithType: PlayerGuideState.likesPlayer
  fullName: PlayerGuideState.likesPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.likesPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float likesPlayer
    return:
      type: System.Single
    content.vb: Public likesPlayer As Single
- uid: Global.PlayerGuideState.handHolding
  commentId: F:Global.PlayerGuideState.handHolding
  id: handHolding
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: handHolding
  nameWithType: PlayerGuideState.handHolding
  fullName: PlayerGuideState.handHolding
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.handHolding</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float handHolding
    return:
      type: System.Single
    content.vb: Public handHolding As Single
- uid: Global.PlayerGuideState.hasBeenToASwarmRoomThisCycle
  commentId: F:Global.PlayerGuideState.hasBeenToASwarmRoomThisCycle
  id: hasBeenToASwarmRoomThisCycle
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: hasBeenToASwarmRoomThisCycle
  nameWithType: PlayerGuideState.hasBeenToASwarmRoomThisCycle
  fullName: PlayerGuideState.hasBeenToASwarmRoomThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.hasBeenToASwarmRoomThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasBeenToASwarmRoomThisCycle
    return:
      type: System.Boolean
    content.vb: Public hasBeenToASwarmRoomThisCycle As Boolean
- uid: Global.PlayerGuideState.wantFoodHandHoldingThisCycle
  commentId: F:Global.PlayerGuideState.wantFoodHandHoldingThisCycle
  id: wantFoodHandHoldingThisCycle
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: wantFoodHandHoldingThisCycle
  nameWithType: PlayerGuideState.wantFoodHandHoldingThisCycle
  fullName: PlayerGuideState.wantFoodHandHoldingThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.wantFoodHandHoldingThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wantFoodHandHoldingThisCycle
    return:
      type: System.Single
    content.vb: Public wantFoodHandHoldingThisCycle As Single
- uid: Global.PlayerGuideState.wantShelterHandHoldingThisCycle
  commentId: F:Global.PlayerGuideState.wantShelterHandHoldingThisCycle
  id: wantShelterHandHoldingThisCycle
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: wantShelterHandHoldingThisCycle
  nameWithType: PlayerGuideState.wantShelterHandHoldingThisCycle
  fullName: PlayerGuideState.wantShelterHandHoldingThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.wantShelterHandHoldingThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wantShelterHandHoldingThisCycle
    return:
      type: System.Single
    content.vb: Public wantShelterHandHoldingThisCycle As Single
- uid: Global.PlayerGuideState.wantDirectionHandHoldingThisCycle
  commentId: F:Global.PlayerGuideState.wantDirectionHandHoldingThisCycle
  id: wantDirectionHandHoldingThisCycle
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: wantDirectionHandHoldingThisCycle
  nameWithType: PlayerGuideState.wantDirectionHandHoldingThisCycle
  fullName: PlayerGuideState.wantDirectionHandHoldingThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.wantDirectionHandHoldingThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wantDirectionHandHoldingThisCycle
    return:
      type: System.Single
    content.vb: Public wantDirectionHandHoldingThisCycle As Single
- uid: Global.PlayerGuideState.imagesShown
  commentId: F:Global.PlayerGuideState.imagesShown
  id: imagesShown
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: imagesShown
  nameWithType: PlayerGuideState.imagesShown
  fullName: PlayerGuideState.imagesShown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.imagesShown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> imagesShown
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public imagesShown As List(Of String)
- uid: Global.PlayerGuideState.forcedDirectionsGiven
  commentId: F:Global.PlayerGuideState.forcedDirectionsGiven
  id: forcedDirectionsGiven
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: forcedDirectionsGiven
  nameWithType: PlayerGuideState.forcedDirectionsGiven
  fullName: PlayerGuideState.forcedDirectionsGiven
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PlayerGuideState.forcedDirectionsGiven</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<KeyValuePair<int, int>> forcedDirectionsGiven
    return:
      type: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}}
    content.vb: Public forcedDirectionsGiven As List(Of KeyValuePair(Of Integer, Integer))
- uid: Global.PlayerGuideState.InfluenceLike(System.Single,System.Boolean)
  commentId: M:Global.PlayerGuideState.InfluenceLike(System.Single,System.Boolean)
  id: InfluenceLike(System.Single,System.Boolean)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: InfluenceLike(float, bool)
  nameWithType: PlayerGuideState.InfluenceLike(float, bool)
  fullName: PlayerGuideState.InfluenceLike(float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.InfluenceLike(System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InfluenceLike(float influence, bool print)
    parameters:
    - id: influence
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>influence</parameter>
            <parameter>M:PlayerGuideState.InfluenceLike(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: print
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>print</parameter>
            <parameter>M:PlayerGuideState.InfluenceLike(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InfluenceLike(influence As Single, print As Boolean)
  overload: Global.PlayerGuideState.InfluenceLike*
  nameWithType.vb: PlayerGuideState.InfluenceLike(Single, Boolean)
  fullName.vb: PlayerGuideState.InfluenceLike(Single, Boolean)
  name.vb: InfluenceLike(Single, Boolean)
- uid: Global.PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)
  commentId: M:Global.PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)
  id: InfluenceHandHolding(System.Single,System.Boolean)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: InfluenceHandHolding(float, bool)
  nameWithType: PlayerGuideState.InfluenceHandHolding(float, bool)
  fullName: PlayerGuideState.InfluenceHandHolding(float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InfluenceHandHolding(float influence, bool print)
    parameters:
    - id: influence
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>influence</parameter>
            <parameter>M:PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: print
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>print</parameter>
            <parameter>M:PlayerGuideState.InfluenceHandHolding(System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InfluenceHandHolding(influence As Single, print As Boolean)
  overload: Global.PlayerGuideState.InfluenceHandHolding*
  nameWithType.vb: PlayerGuideState.InfluenceHandHolding(Single, Boolean)
  fullName.vb: PlayerGuideState.InfluenceHandHolding(Single, Boolean)
  name.vb: InfluenceHandHolding(Single, Boolean)
- uid: Global.PlayerGuideState.ImageShownInRoom(System.String)
  commentId: M:Global.PlayerGuideState.ImageShownInRoom(System.String)
  id: ImageShownInRoom(System.String)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: ImageShownInRoom(string)
  nameWithType: PlayerGuideState.ImageShownInRoom(string)
  fullName: PlayerGuideState.ImageShownInRoom(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.ImageShownInRoom(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ImageShownInRoom(string roomName)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:PlayerGuideState.ImageShownInRoom(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ImageShownInRoom(roomName As String)
  overload: Global.PlayerGuideState.ImageShownInRoom*
  nameWithType.vb: PlayerGuideState.ImageShownInRoom(String)
  fullName.vb: PlayerGuideState.ImageShownInRoom(String)
  name.vb: ImageShownInRoom(String)
- uid: Global.PlayerGuideState.HasImageBeenShownInRoom(System.String)
  commentId: M:Global.PlayerGuideState.HasImageBeenShownInRoom(System.String)
  id: HasImageBeenShownInRoom(System.String)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: HasImageBeenShownInRoom(string)
  nameWithType: PlayerGuideState.HasImageBeenShownInRoom(string)
  fullName: PlayerGuideState.HasImageBeenShownInRoom(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.HasImageBeenShownInRoom(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HasImageBeenShownInRoom(string roomName)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:PlayerGuideState.HasImageBeenShownInRoom(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PlayerGuideState.HasImageBeenShownInRoom(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function HasImageBeenShownInRoom(roomName As String) As Boolean
  overload: Global.PlayerGuideState.HasImageBeenShownInRoom*
  nameWithType.vb: PlayerGuideState.HasImageBeenShownInRoom(String)
  fullName.vb: PlayerGuideState.HasImageBeenShownInRoom(String)
  name.vb: HasImageBeenShownInRoom(String)
- uid: Global.PlayerGuideState.#ctor
  commentId: M:Global.PlayerGuideState.#ctor
  id: '#ctor'
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: PlayerGuideState()
  nameWithType: PlayerGuideState.PlayerGuideState()
  fullName: PlayerGuideState.PlayerGuideState()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PlayerGuideState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerGuideState()
    content.vb: Public Sub New()
  overload: Global.PlayerGuideState.#ctor*
  nameWithType.vb: PlayerGuideState.New()
  fullName.vb: PlayerGuideState.New()
  name.vb: New()
- uid: Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)
  commentId: M:Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)
  id: HowManyTimesHasForcedDirectionBeenGiven(System.Int32)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: HowManyTimesHasForcedDirectionBeenGiven(int)
  nameWithType: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(int)
  fullName: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int HowManyTimesHasForcedDirectionBeenGiven(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function HowManyTimesHasForcedDirectionBeenGiven(room As Integer) As Integer
  overload: Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven*
  nameWithType.vb: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(Integer)
  fullName.vb: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven(Integer)
  name.vb: HowManyTimesHasForcedDirectionBeenGiven(Integer)
- uid: Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(System.Int32)
  commentId: M:Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(System.Int32)
  id: IncrementTimesForcedDirectionHasBeenGiven(System.Int32)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: IncrementTimesForcedDirectionHasBeenGiven(int)
  nameWithType: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(int)
  fullName: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void IncrementTimesForcedDirectionHasBeenGiven(int room)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub IncrementTimesForcedDirectionHasBeenGiven(room As Integer)
  overload: Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven*
  nameWithType.vb: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(Integer)
  fullName.vb: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven(Integer)
  name.vb: IncrementTimesForcedDirectionHasBeenGiven(Integer)
- uid: Global.PlayerGuideState.ToString
  commentId: M:Global.PlayerGuideState.ToString
  id: ToString
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PlayerGuideState.ToString()
  fullName: PlayerGuideState.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PlayerGuideState.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.PlayerGuideState.ToString*
- uid: Global.PlayerGuideState.FromString(System.String)
  commentId: M:Global.PlayerGuideState.FromString(System.String)
  id: FromString(System.String)
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: PlayerGuideState.FromString(string)
  fullName: PlayerGuideState.FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PlayerGuideState.FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FromString(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:PlayerGuideState.FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FromString(s As String)
  overload: Global.PlayerGuideState.FromString*
  nameWithType.vb: PlayerGuideState.FromString(String)
  fullName.vb: PlayerGuideState.FromString(String)
  name.vb: FromString(String)
- uid: Global.PlayerGuideState.playerHasVisitedMoon
  commentId: P:Global.PlayerGuideState.playerHasVisitedMoon
  id: playerHasVisitedMoon
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: playerHasVisitedMoon
  nameWithType: PlayerGuideState.playerHasVisitedMoon
  fullName: PlayerGuideState.playerHasVisitedMoon
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.playerHasVisitedMoon</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool playerHasVisitedMoon { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property playerHasVisitedMoon As Boolean
  overload: Global.PlayerGuideState.playerHasVisitedMoon*
- uid: Global.PlayerGuideState.superJumpsShown
  commentId: P:Global.PlayerGuideState.superJumpsShown
  id: superJumpsShown
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: superJumpsShown
  nameWithType: PlayerGuideState.superJumpsShown
  fullName: PlayerGuideState.superJumpsShown
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.superJumpsShown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int superJumpsShown { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property superJumpsShown As Integer
  overload: Global.PlayerGuideState.superJumpsShown*
- uid: Global.PlayerGuideState.pickupObjectsShown
  commentId: P:Global.PlayerGuideState.pickupObjectsShown
  id: pickupObjectsShown
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: pickupObjectsShown
  nameWithType: PlayerGuideState.pickupObjectsShown
  fullName: PlayerGuideState.pickupObjectsShown
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.pickupObjectsShown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pickupObjectsShown { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property pickupObjectsShown As Integer
  overload: Global.PlayerGuideState.pickupObjectsShown*
- uid: Global.PlayerGuideState.scavTradeInstructionCompleted
  commentId: P:Global.PlayerGuideState.scavTradeInstructionCompleted
  id: scavTradeInstructionCompleted
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: scavTradeInstructionCompleted
  nameWithType: PlayerGuideState.scavTradeInstructionCompleted
  fullName: PlayerGuideState.scavTradeInstructionCompleted
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.scavTradeInstructionCompleted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool scavTradeInstructionCompleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property scavTradeInstructionCompleted As Boolean
  overload: Global.PlayerGuideState.scavTradeInstructionCompleted*
- uid: Global.PlayerGuideState.angryWithPlayer
  commentId: P:Global.PlayerGuideState.angryWithPlayer
  id: angryWithPlayer
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: angryWithPlayer
  nameWithType: PlayerGuideState.angryWithPlayer
  fullName: PlayerGuideState.angryWithPlayer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.angryWithPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool angryWithPlayer { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property angryWithPlayer As Boolean
  overload: Global.PlayerGuideState.angryWithPlayer*
- uid: Global.PlayerGuideState.displayedAnger
  commentId: P:Global.PlayerGuideState.displayedAnger
  id: displayedAnger
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: displayedAnger
  nameWithType: PlayerGuideState.displayedAnger
  fullName: PlayerGuideState.displayedAnger
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.displayedAnger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool displayedAnger { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property displayedAnger As Boolean
  overload: Global.PlayerGuideState.displayedAnger*
- uid: Global.PlayerGuideState.guideSymbol
  commentId: P:Global.PlayerGuideState.guideSymbol
  id: guideSymbol
  parent: Global.PlayerGuideState
  langs:
  - csharp
  - vb
  name: guideSymbol
  nameWithType: PlayerGuideState.guideSymbol
  fullName: PlayerGuideState.guideSymbol
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:PlayerGuideState.guideSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int guideSymbol { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property guideSymbol As Integer
  overload: Global.PlayerGuideState.guideSymbol*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
  commentId: T:System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractPhysicalObject.AbstractObjectType>
  nameWithType: List<AbstractPhysicalObject.AbstractObjectType>
  fullName: System.Collections.Generic.List<AbstractPhysicalObject.AbstractObjectType>
  nameWithType.vb: List(Of AbstractPhysicalObject.AbstractObjectType)
  fullName.vb: System.Collections.Generic.List(Of AbstractPhysicalObject.AbstractObjectType)
  name.vb: List(Of AbstractPhysicalObject.AbstractObjectType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{CreatureTemplate.Type}
  commentId: T:System.Collections.Generic.List{CreatureTemplate.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CreatureTemplate.Type>
  nameWithType: List<CreatureTemplate.Type>
  fullName: System.Collections.Generic.List<CreatureTemplate.Type>
  nameWithType.vb: List(Of CreatureTemplate.Type)
  fullName.vb: System.Collections.Generic.List(Of CreatureTemplate.Type)
  name.vb: List(Of CreatureTemplate.Type)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}}
  commentId: T:System.Collections.Generic.List{System.Collections.Generic.KeyValuePair{System.Int32,System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<KeyValuePair<int, int>>
  nameWithType: List<KeyValuePair<int, int>>
  fullName: System.Collections.Generic.List<System.Collections.Generic.KeyValuePair<int, int>>
  nameWithType.vb: List(Of KeyValuePair(Of Integer, Integer))
  fullName.vb: System.Collections.Generic.List(Of System.Collections.Generic.KeyValuePair(Of Integer, Integer))
  name.vb: List(Of KeyValuePair(Of Integer, Integer))
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  - name: )
- uid: Global.PlayerGuideState.InfluenceLike*
  commentId: Overload:Global.PlayerGuideState.InfluenceLike
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_InfluenceLike_System_Single_System_Boolean_
  name: InfluenceLike
  nameWithType: PlayerGuideState.InfluenceLike
  fullName: PlayerGuideState.InfluenceLike
- uid: Global.PlayerGuideState.InfluenceHandHolding*
  commentId: Overload:Global.PlayerGuideState.InfluenceHandHolding
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_InfluenceHandHolding_System_Single_System_Boolean_
  name: InfluenceHandHolding
  nameWithType: PlayerGuideState.InfluenceHandHolding
  fullName: PlayerGuideState.InfluenceHandHolding
- uid: Global.PlayerGuideState.ImageShownInRoom*
  commentId: Overload:Global.PlayerGuideState.ImageShownInRoom
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_ImageShownInRoom_System_String_
  name: ImageShownInRoom
  nameWithType: PlayerGuideState.ImageShownInRoom
  fullName: PlayerGuideState.ImageShownInRoom
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.PlayerGuideState.HasImageBeenShownInRoom*
  commentId: Overload:Global.PlayerGuideState.HasImageBeenShownInRoom
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_HasImageBeenShownInRoom_System_String_
  name: HasImageBeenShownInRoom
  nameWithType: PlayerGuideState.HasImageBeenShownInRoom
  fullName: PlayerGuideState.HasImageBeenShownInRoom
- uid: Global.PlayerGuideState.#ctor*
  commentId: Overload:Global.PlayerGuideState.#ctor
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState__ctor
  name: PlayerGuideState
  nameWithType: PlayerGuideState.PlayerGuideState
  fullName: PlayerGuideState.PlayerGuideState
  nameWithType.vb: PlayerGuideState.New
  fullName.vb: PlayerGuideState.New
  name.vb: New
- uid: Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven*
  commentId: Overload:Global.PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_HowManyTimesHasForcedDirectionBeenGiven_System_Int32_
  name: HowManyTimesHasForcedDirectionBeenGiven
  nameWithType: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven
  fullName: PlayerGuideState.HowManyTimesHasForcedDirectionBeenGiven
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven*
  commentId: Overload:Global.PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_IncrementTimesForcedDirectionHasBeenGiven_System_Int32_
  name: IncrementTimesForcedDirectionHasBeenGiven
  nameWithType: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven
  fullName: PlayerGuideState.IncrementTimesForcedDirectionHasBeenGiven
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.PlayerGuideState.ToString*
  commentId: Overload:Global.PlayerGuideState.ToString
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_ToString
  name: ToString
  nameWithType: PlayerGuideState.ToString
  fullName: PlayerGuideState.ToString
- uid: Global.PlayerGuideState.FromString*
  commentId: Overload:Global.PlayerGuideState.FromString
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_FromString_System_String_
  name: FromString
  nameWithType: PlayerGuideState.FromString
  fullName: PlayerGuideState.FromString
- uid: Global.PlayerGuideState.playerHasVisitedMoon*
  commentId: Overload:Global.PlayerGuideState.playerHasVisitedMoon
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_playerHasVisitedMoon
  name: playerHasVisitedMoon
  nameWithType: PlayerGuideState.playerHasVisitedMoon
  fullName: PlayerGuideState.playerHasVisitedMoon
- uid: Global.PlayerGuideState.superJumpsShown*
  commentId: Overload:Global.PlayerGuideState.superJumpsShown
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_superJumpsShown
  name: superJumpsShown
  nameWithType: PlayerGuideState.superJumpsShown
  fullName: PlayerGuideState.superJumpsShown
- uid: Global.PlayerGuideState.pickupObjectsShown*
  commentId: Overload:Global.PlayerGuideState.pickupObjectsShown
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_pickupObjectsShown
  name: pickupObjectsShown
  nameWithType: PlayerGuideState.pickupObjectsShown
  fullName: PlayerGuideState.pickupObjectsShown
- uid: Global.PlayerGuideState.scavTradeInstructionCompleted*
  commentId: Overload:Global.PlayerGuideState.scavTradeInstructionCompleted
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_scavTradeInstructionCompleted
  name: scavTradeInstructionCompleted
  nameWithType: PlayerGuideState.scavTradeInstructionCompleted
  fullName: PlayerGuideState.scavTradeInstructionCompleted
- uid: Global.PlayerGuideState.angryWithPlayer*
  commentId: Overload:Global.PlayerGuideState.angryWithPlayer
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_angryWithPlayer
  name: angryWithPlayer
  nameWithType: PlayerGuideState.angryWithPlayer
  fullName: PlayerGuideState.angryWithPlayer
- uid: Global.PlayerGuideState.displayedAnger*
  commentId: Overload:Global.PlayerGuideState.displayedAnger
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_displayedAnger
  name: displayedAnger
  nameWithType: PlayerGuideState.displayedAnger
  fullName: PlayerGuideState.displayedAnger
- uid: Global.PlayerGuideState.guideSymbol*
  commentId: Overload:Global.PlayerGuideState.guideSymbol
  isExternal: true
  href: Global.PlayerGuideState.html#PlayerGuideState_guideSymbol
  name: guideSymbol
  nameWithType: PlayerGuideState.guideSymbol
  fullName: PlayerGuideState.guideSymbol
