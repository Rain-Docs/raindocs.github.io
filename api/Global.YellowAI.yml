### YamlMime:ManagedReference
items:
- uid: Global.YellowAI
  commentId: T:Global.YellowAI
  id: YellowAI
  parent: Global
  children:
  - Global.YellowAI.#ctor(ArtificialIntelligence)
  - Global.YellowAI.TravelPreference(MovementConnection,PathCost)
  - Global.YellowAI.Update
  - Global.YellowAI.commFlicker
  - Global.YellowAI.communicating
  - Global.YellowAI.lizard
  - Global.YellowAI.pack
  langs:
  - csharp
  - vb
  name: YellowAI
  nameWithType: YellowAI
  fullName: YellowAI
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:YellowAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class YellowAI : AIModule'
    content.vb: Public Class YellowAI Inherits AIModule
  inheritance:
  - System.Object
  - Global.AIModule
  inheritedMembers:
  - Global.AIModule.AI
  - Global.AIModule.NewRoom(Room)
  - Global.AIModule.Utility
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.YellowAI.lizard
  commentId: F:Global.YellowAI.lizard
  id: lizard
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: lizard
  nameWithType: YellowAI.lizard
  fullName: YellowAI.lizard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.lizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lizard lizard
    return:
      type: Global.Lizard
    content.vb: Public lizard As Lizard
- uid: Global.YellowAI.pack
  commentId: F:Global.YellowAI.pack
  id: pack
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: pack
  nameWithType: YellowAI.pack
  fullName: YellowAI.pack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.pack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public YellowAI.YellowPack pack
    return:
      type: Global.YellowAI.YellowPack
    content.vb: Public pack As YellowAI.YellowPack
- uid: Global.YellowAI.communicating
  commentId: F:Global.YellowAI.communicating
  id: communicating
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: communicating
  nameWithType: YellowAI.communicating
  fullName: YellowAI.communicating
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.communicating</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int communicating
    return:
      type: System.Int32
    content.vb: Public communicating As Integer
- uid: Global.YellowAI.commFlicker
  commentId: F:Global.YellowAI.commFlicker
  id: commFlicker
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: commFlicker
  nameWithType: YellowAI.commFlicker
  fullName: YellowAI.commFlicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:YellowAI.commFlicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float commFlicker
    return:
      type: System.Single
    content.vb: Public commFlicker As Single
- uid: Global.YellowAI.#ctor(ArtificialIntelligence)
  commentId: M:Global.YellowAI.#ctor(ArtificialIntelligence)
  id: '#ctor(ArtificialIntelligence)'
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: YellowAI(ArtificialIntelligence)
  nameWithType: YellowAI.YellowAI(ArtificialIntelligence)
  fullName: YellowAI.YellowAI(ArtificialIntelligence)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>YellowAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public YellowAI(ArtificialIntelligence AI)
    parameters:
    - id: AI
      type: Global.ArtificialIntelligence
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>AI</parameter>
            <parameter>M:YellowAI.#ctor(ArtificialIntelligence)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(AI As ArtificialIntelligence)
  overload: Global.YellowAI.#ctor*
  nameWithType.vb: YellowAI.New(ArtificialIntelligence)
  fullName.vb: YellowAI.New(ArtificialIntelligence)
  name.vb: New(ArtificialIntelligence)
- uid: Global.YellowAI.Update
  commentId: M:Global.YellowAI.Update
  id: Update
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: YellowAI.Update()
  fullName: YellowAI.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.AIModule.Update
  overload: Global.YellowAI.Update*
- uid: Global.YellowAI.TravelPreference(MovementConnection,PathCost)
  commentId: M:Global.YellowAI.TravelPreference(MovementConnection,PathCost)
  id: TravelPreference(MovementConnection,PathCost)
  parent: Global.YellowAI
  langs:
  - csharp
  - vb
  name: TravelPreference(MovementConnection, PathCost)
  nameWithType: YellowAI.TravelPreference(MovementConnection, PathCost)
  fullName: YellowAI.TravelPreference(MovementConnection, PathCost)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:YellowAI.TravelPreference(MovementConnection,PathCost)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost TravelPreference(MovementConnection connection, PathCost cost)
    parameters:
    - id: connection
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connection</parameter>
            <parameter>M:YellowAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    - id: cost
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cost</parameter>
            <parameter>M:YellowAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:YellowAI.TravelPreference(MovementConnection,PathCost)</parameter>
          </include>
        </markup>
    content.vb: Public Function TravelPreference(connection As MovementConnection, cost As PathCost) As PathCost
  overload: Global.YellowAI.TravelPreference*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.AIModule
  commentId: T:Global.AIModule
  isExternal: true
  href: AIModule.html
  name: AIModule
  nameWithType: AIModule
  fullName: AIModule
- uid: Global.AIModule.AI
  commentId: F:Global.AIModule.AI
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_AI
  name: AI
  nameWithType: AIModule.AI
  fullName: AIModule.AI
- uid: Global.AIModule.NewRoom(Room)
  commentId: M:Global.AIModule.NewRoom(Room)
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: AIModule.NewRoom(Room)
  fullName: AIModule.NewRoom(Room)
  spec.csharp:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.AIModule.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.AIModule.html#AIModule_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.AIModule.Utility
  commentId: M:Global.AIModule.Utility
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Utility
  name: Utility()
  nameWithType: AIModule.Utility()
  fullName: AIModule.Utility()
  spec.csharp:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Utility
    name: Utility
    isExternal: true
    href: Global.AIModule.html#AIModule_Utility
  - name: (
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Lizard
  commentId: T:Global.Lizard
  isExternal: true
  href: Lizard.html
  name: Lizard
  nameWithType: Lizard
  fullName: Lizard
- uid: Global.YellowAI.YellowPack
  commentId: T:Global.YellowAI.YellowPack
  isExternal: true
  href: YellowAI.html
  name: YellowAI.YellowPack
  nameWithType: YellowAI.YellowPack
  fullName: YellowAI.YellowPack
  spec.csharp:
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
  spec.vb:
  - uid: Global.YellowAI
    name: YellowAI
    isExternal: true
    href: YellowAI.html
  - name: .
  - uid: Global.YellowAI.YellowPack
    name: YellowPack
    isExternal: true
    href: YellowAI.YellowPack.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.YellowAI.#ctor*
  commentId: Overload:Global.YellowAI.#ctor
  isExternal: true
  href: Global.YellowAI.html#YellowAI__ctor_ArtificialIntelligence_
  name: YellowAI
  nameWithType: YellowAI.YellowAI
  fullName: YellowAI.YellowAI
  nameWithType.vb: YellowAI.New
  fullName.vb: YellowAI.New
  name.vb: New
- uid: Global.ArtificialIntelligence
  commentId: T:Global.ArtificialIntelligence
  isExternal: true
  href: ArtificialIntelligence.html
  name: ArtificialIntelligence
  nameWithType: ArtificialIntelligence
  fullName: ArtificialIntelligence
- uid: Global.AIModule.Update
  commentId: M:Global.AIModule.Update
  parent: Global.AIModule
  isExternal: true
  href: Global.AIModule.html#AIModule_Update
  name: Update()
  nameWithType: AIModule.Update()
  fullName: AIModule.Update()
  spec.csharp:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.AIModule.Update
    name: Update
    isExternal: true
    href: Global.AIModule.html#AIModule_Update
  - name: (
  - name: )
- uid: Global.YellowAI.Update*
  commentId: Overload:Global.YellowAI.Update
  isExternal: true
  href: Global.YellowAI.html#YellowAI_Update
  name: Update
  nameWithType: YellowAI.Update
  fullName: YellowAI.Update
- uid: Global.YellowAI.TravelPreference*
  commentId: Overload:Global.YellowAI.TravelPreference
  isExternal: true
  href: Global.YellowAI.html#YellowAI_TravelPreference_MovementConnection_PathCost_
  name: TravelPreference
  nameWithType: YellowAI.TravelPreference
  fullName: YellowAI.TravelPreference
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
