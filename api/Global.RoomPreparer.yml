### YamlMime:ManagedReference
items:
- uid: Global.RoomPreparer
  commentId: T:Global.RoomPreparer
  id: RoomPreparer
  parent: Global
  children:
  - Global.RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)
  - Global.RoomPreparer.ReturnRoomConnectivity
  - Global.RoomPreparer.Update
  - Global.RoomPreparer.done
  - Global.RoomPreparer.failed
  - Global.RoomPreparer.falseBake
  - Global.RoomPreparer.finished
  - Global.RoomPreparer.room
  langs:
  - csharp
  - vb
  name: RoomPreparer
  nameWithType: RoomPreparer
  fullName: RoomPreparer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RoomPreparer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RoomPreparer
    content.vb: Public Class RoomPreparer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RoomPreparer.finished
  commentId: F:Global.RoomPreparer.finished
  id: finished
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: finished
  nameWithType: RoomPreparer.finished
  fullName: RoomPreparer.finished
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RoomPreparer.finished</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool finished
    return:
      type: System.Boolean
    content.vb: Public finished As Boolean
- uid: Global.RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)
  id: '#ctor(Room,System.Boolean,System.Boolean,System.Boolean)'
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: RoomPreparer(Room, bool, bool, bool)
  nameWithType: RoomPreparer.RoomPreparer(Room, bool, bool, bool)
  fullName: RoomPreparer.RoomPreparer(Room, bool, bool, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RoomPreparer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomPreparer(Room room, bool loadAiHeatMaps, bool falseBake, bool shortcutsOnly)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loadAiHeatMaps
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loadAiHeatMaps</parameter>
            <parameter>M:RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: falseBake
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>falseBake</parameter>
            <parameter>M:RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: shortcutsOnly
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortcutsOnly</parameter>
            <parameter>M:RoomPreparer.#ctor(Room,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Room, loadAiHeatMaps As Boolean, falseBake As Boolean, shortcutsOnly As Boolean)
  overload: Global.RoomPreparer.#ctor*
  nameWithType.vb: RoomPreparer.New(Room, Boolean, Boolean, Boolean)
  fullName.vb: RoomPreparer.New(Room, Boolean, Boolean, Boolean)
  name.vb: New(Room, Boolean, Boolean, Boolean)
- uid: Global.RoomPreparer.Update
  commentId: M:Global.RoomPreparer.Update
  id: Update
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: RoomPreparer.Update()
  fullName: RoomPreparer.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomPreparer.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.RoomPreparer.Update*
- uid: Global.RoomPreparer.ReturnRoomConnectivity
  commentId: M:Global.RoomPreparer.ReturnRoomConnectivity
  id: ReturnRoomConnectivity
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: ReturnRoomConnectivity()
  nameWithType: RoomPreparer.ReturnRoomConnectivity()
  fullName: RoomPreparer.ReturnRoomConnectivity()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RoomPreparer.ReturnRoomConnectivity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoomNode[] ReturnRoomConnectivity()
    return:
      type: Global.AbstractRoomNode[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RoomPreparer.ReturnRoomConnectivity</parameter>
          </include>
        </markup>
    content.vb: Public Function ReturnRoomConnectivity() As AbstractRoomNode()
  overload: Global.RoomPreparer.ReturnRoomConnectivity*
- uid: Global.RoomPreparer.room
  commentId: P:Global.RoomPreparer.room
  id: room
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: room
  nameWithType: RoomPreparer.room
  fullName: RoomPreparer.room
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomPreparer.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: Public ReadOnly Property room As Room
  overload: Global.RoomPreparer.room*
- uid: Global.RoomPreparer.done
  commentId: P:Global.RoomPreparer.done
  id: done
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: done
  nameWithType: RoomPreparer.done
  fullName: RoomPreparer.done
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomPreparer.done</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool done { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property done As Boolean
  overload: Global.RoomPreparer.done*
- uid: Global.RoomPreparer.falseBake
  commentId: P:Global.RoomPreparer.falseBake
  id: falseBake
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: falseBake
  nameWithType: RoomPreparer.falseBake
  fullName: RoomPreparer.falseBake
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomPreparer.falseBake</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool falseBake { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property falseBake As Boolean
  overload: Global.RoomPreparer.falseBake*
- uid: Global.RoomPreparer.failed
  commentId: P:Global.RoomPreparer.failed
  id: failed
  parent: Global.RoomPreparer
  langs:
  - csharp
  - vb
  name: failed
  nameWithType: RoomPreparer.failed
  fullName: RoomPreparer.failed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RoomPreparer.failed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool failed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property failed As Boolean
  overload: Global.RoomPreparer.failed*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RoomPreparer.#ctor*
  commentId: Overload:Global.RoomPreparer.#ctor
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer__ctor_Room_System_Boolean_System_Boolean_System_Boolean_
  name: RoomPreparer
  nameWithType: RoomPreparer.RoomPreparer
  fullName: RoomPreparer.RoomPreparer
  nameWithType.vb: RoomPreparer.New
  fullName.vb: RoomPreparer.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.RoomPreparer.Update*
  commentId: Overload:Global.RoomPreparer.Update
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_Update
  name: Update
  nameWithType: RoomPreparer.Update
  fullName: RoomPreparer.Update
- uid: Global.RoomPreparer.ReturnRoomConnectivity*
  commentId: Overload:Global.RoomPreparer.ReturnRoomConnectivity
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_ReturnRoomConnectivity
  name: ReturnRoomConnectivity
  nameWithType: RoomPreparer.ReturnRoomConnectivity
  fullName: RoomPreparer.ReturnRoomConnectivity
- uid: Global.AbstractRoomNode[]
  isExternal: true
  href: AbstractRoomNode.html
  name: AbstractRoomNode[]
  nameWithType: AbstractRoomNode[]
  fullName: AbstractRoomNode[]
  nameWithType.vb: AbstractRoomNode()
  fullName.vb: AbstractRoomNode()
  name.vb: AbstractRoomNode()
  spec.csharp:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: (
  - name: )
- uid: Global.RoomPreparer.room*
  commentId: Overload:Global.RoomPreparer.room
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_room
  name: room
  nameWithType: RoomPreparer.room
  fullName: RoomPreparer.room
- uid: Global.RoomPreparer.done*
  commentId: Overload:Global.RoomPreparer.done
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_done
  name: done
  nameWithType: RoomPreparer.done
  fullName: RoomPreparer.done
- uid: Global.RoomPreparer.falseBake*
  commentId: Overload:Global.RoomPreparer.falseBake
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_falseBake
  name: falseBake
  nameWithType: RoomPreparer.falseBake
  fullName: RoomPreparer.falseBake
- uid: Global.RoomPreparer.failed*
  commentId: Overload:Global.RoomPreparer.failed
  isExternal: true
  href: Global.RoomPreparer.html#RoomPreparer_failed
  name: failed
  nameWithType: RoomPreparer.failed
  fullName: RoomPreparer.failed
