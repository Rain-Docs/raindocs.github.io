### YamlMime:ManagedReference
items:
- uid: Global.FContainer
  commentId: T:Global.FContainer
  id: FContainer
  parent: Global
  children:
  - Global.FContainer.#ctor
  - Global.FContainer.AddChild(FNode)
  - Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  - Global.FContainer.GetChildAt(System.Int32)
  - Global.FContainer.GetChildCount
  - Global.FContainer.GetChildIndex(FNode)
  - Global.FContainer.HandleAddedToStage
  - Global.FContainer.HandleRemovedFromStage
  - Global.FContainer.Redraw(System.Boolean,System.Boolean)
  - Global.FContainer.RemoveAllChildren
  - Global.FContainer.RemoveChild(FNode)
  - Global.FContainer._childNodes
  - Global.FContainer.shouldSortByZ
  langs:
  - csharp
  - vb
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class FContainer : FNode'
    content.vb: Public Class FContainer Inherits FNode
  inheritance:
  - System.Object
  - Global.FNode
  derivedClasses:
  - Global.FButton
  - Global.FDebugFrameRateGraph
  - Global.FSliceButton
  - Global.FStage
  inheritedMembers:
  - Global.FNode._x
  - Global.FNode._y
  - Global.FNode._scaleX
  - Global.FNode._scaleY
  - Global.FNode._rotation
  - Global.FNode._meshZ
  - Global.FNode._sortZ
  - Global.FNode._isMatrixDirty
  - Global.FNode._container
  - Global.FNode._matrix
  - Global.FNode._concatenatedMatrix
  - Global.FNode._inverseConcatenatedMatrix
  - Global.FNode._screenConcatenatedMatrix
  - Global.FNode._screenInverseConcatenatedMatrix
  - Global.FNode._needsSpecialMatrices
  - Global.FNode._alpha
  - Global.FNode._concatenatedAlpha
  - Global.FNode._isAlphaDirty
  - Global.FNode._visibleScale
  - Global.FNode._isOnStage
  - Global.FNode._depth
  - Global.FNode._stage
  - Global.FNode._isVisible
  - Global.FNode.data
  - Global.FNode.AddEnabler(FNodeEnabler)
  - Global.FNode.RemoveEnabler(FNodeEnabler)
  - Global.FNode.RemoveEnablerOfType(System.Type)
  - Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  - Global.FNode.RemoveListenForResize
  - Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  - Global.FNode.RemoveListenForOrientationChange
  - Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForUpdate
  - Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForAfterUpdate
  - Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForLateUpdate
  - Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  - Global.FNode.RemoveListenForFixedUpdate
  - Global.FNode.EnableSingleTouch
  - Global.FNode.DisableSingleTouch
  - Global.FNode.EnableMultiTouch
  - Global.FNode.DisableMultiTouch
  - Global.FNode.EnableSmartTouch
  - Global.FNode.DisableSmartTouch
  - Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  - Global.FNode.RemoveListenForAddedOrRemoved
  - Global.FNode.LocalToScreen(UnityEngine.Vector2)
  - Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  - Global.FNode.LocalToStage(UnityEngine.Vector2)
  - Global.FNode.StageToLocal(UnityEngine.Vector2)
  - Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  - Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  - Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  - Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  - Global.FNode.GetLocalMousePosition
  - Global.FNode.GetLocalTouchPosition(FTouch)
  - Global.FNode.UpdateMatrix
  - Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  - Global.FNode.HandleAddedToContainer(FContainer)
  - Global.FNode.HandleRemovedFromContainer
  - Global.FNode.RemoveFromContainer
  - Global.FNode.MoveToFront
  - Global.FNode.MoveToBack
  - Global.FNode.MoveInFrontOfOtherNode(FNode)
  - Global.FNode.MoveBehindOtherNode(FNode)
  - Global.FNode.IsAncestryVisible
  - Global.FNode.CreateSpecialMatrices
  - Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  - Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  - Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  - Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  - Global.FNode.SetPosition(System.Single,System.Single)
  - Global.FNode.SetPosition(UnityEngine.Vector2)
  - Global.FNode.GetPosition
  - Global.FNode.isVisible
  - Global.FNode.x
  - Global.FNode.y
  - Global.FNode.meshZ
  - Global.FNode.sortZ
  - Global.FNode.scaleX
  - Global.FNode.scaleY
  - Global.FNode.scale
  - Global.FNode.rotation
  - Global.FNode.isMatrixDirty
  - Global.FNode.container
  - Global.FNode.depth
  - Global.FNode.touchPriority
  - Global.FNode.matrix
  - Global.FNode.concatenatedMatrix
  - Global.FNode.inverseConcatenatedMatrix
  - Global.FNode.screenConcatenatedMatrix
  - Global.FNode.screenInverseConcatenatedMatrix
  - Global.FNode.alpha
  - Global.FNode.concatenatedAlpha
  - Global.FNode.stage
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FContainer._childNodes
  commentId: F:Global.FContainer._childNodes
  id: _childNodes
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: _childNodes
  nameWithType: FContainer._childNodes
  fullName: FContainer._childNodes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FContainer._childNodes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected List<FNode> _childNodes
    return:
      type: System.Collections.Generic.List{FNode}
    content.vb: Protected _childNodes As List(Of FNode)
- uid: Global.FContainer.#ctor
  commentId: M:Global.FContainer.#ctor
  id: '#ctor'
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: FContainer()
  nameWithType: FContainer.FContainer()
  fullName: FContainer.FContainer()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FContainer()
    content.vb: Public Sub New()
  overload: Global.FContainer.#ctor*
  nameWithType.vb: FContainer.New()
  fullName.vb: FContainer.New()
  name.vb: New()
- uid: Global.FContainer.Redraw(System.Boolean,System.Boolean)
  commentId: M:Global.FContainer.Redraw(System.Boolean,System.Boolean)
  id: Redraw(System.Boolean,System.Boolean)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: Redraw(bool, bool)
  nameWithType: FContainer.Redraw(bool, bool)
  fullName: FContainer.Redraw(bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.Redraw(System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Redraw(bool shouldForceDirty, bool shouldUpdateDepth)
    parameters:
    - id: shouldForceDirty
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shouldForceDirty</parameter>
            <parameter>M:FContainer.Redraw(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: shouldUpdateDepth
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shouldUpdateDepth</parameter>
            <parameter>M:FContainer.Redraw(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Redraw(shouldForceDirty As Boolean, shouldUpdateDepth As Boolean)
  overridden: Global.FNode.Redraw(System.Boolean,System.Boolean)
  overload: Global.FContainer.Redraw*
  nameWithType.vb: FContainer.Redraw(Boolean, Boolean)
  fullName.vb: FContainer.Redraw(Boolean, Boolean)
  name.vb: Redraw(Boolean, Boolean)
- uid: Global.FContainer.HandleAddedToStage
  commentId: M:Global.FContainer.HandleAddedToStage
  id: HandleAddedToStage
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: HandleAddedToStage()
  nameWithType: FContainer.HandleAddedToStage()
  fullName: FContainer.HandleAddedToStage()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.HandleAddedToStage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void HandleAddedToStage()
    content.vb: Public Overrides Sub HandleAddedToStage()
  overridden: Global.FNode.HandleAddedToStage
  overload: Global.FContainer.HandleAddedToStage*
- uid: Global.FContainer.HandleRemovedFromStage
  commentId: M:Global.FContainer.HandleRemovedFromStage
  id: HandleRemovedFromStage
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: HandleRemovedFromStage()
  nameWithType: FContainer.HandleRemovedFromStage()
  fullName: FContainer.HandleRemovedFromStage()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.HandleRemovedFromStage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void HandleRemovedFromStage()
    content.vb: Public Overrides Sub HandleRemovedFromStage()
  overridden: Global.FNode.HandleRemovedFromStage
  overload: Global.FContainer.HandleRemovedFromStage*
- uid: Global.FContainer.AddChild(FNode)
  commentId: M:Global.FContainer.AddChild(FNode)
  id: AddChild(FNode)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: AddChild(FNode)
  nameWithType: FContainer.AddChild(FNode)
  fullName: FContainer.AddChild(FNode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.AddChild(FNode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddChild(FNode node)
    parameters:
    - id: node
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:FContainer.AddChild(FNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddChild(node As FNode)
  overload: Global.FContainer.AddChild*
- uid: Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  commentId: M:Global.FContainer.AddChildAtIndex(FNode,System.Int32)
  id: AddChildAtIndex(FNode,System.Int32)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: AddChildAtIndex(FNode, int)
  nameWithType: FContainer.AddChildAtIndex(FNode, int)
  fullName: FContainer.AddChildAtIndex(FNode, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.AddChildAtIndex(FNode,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddChildAtIndex(FNode node, int newIndex)
    parameters:
    - id: node
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:FContainer.AddChildAtIndex(FNode,System.Int32)</parameter>
          </include>
        </markup>
    - id: newIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newIndex</parameter>
            <parameter>M:FContainer.AddChildAtIndex(FNode,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddChildAtIndex(node As FNode, newIndex As Integer)
  overload: Global.FContainer.AddChildAtIndex*
  nameWithType.vb: FContainer.AddChildAtIndex(FNode, Integer)
  fullName.vb: FContainer.AddChildAtIndex(FNode, Integer)
  name.vb: AddChildAtIndex(FNode, Integer)
- uid: Global.FContainer.RemoveChild(FNode)
  commentId: M:Global.FContainer.RemoveChild(FNode)
  id: RemoveChild(FNode)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: RemoveChild(FNode)
  nameWithType: FContainer.RemoveChild(FNode)
  fullName: FContainer.RemoveChild(FNode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.RemoveChild(FNode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveChild(FNode node)
    parameters:
    - id: node
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:FContainer.RemoveChild(FNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveChild(node As FNode)
  overload: Global.FContainer.RemoveChild*
- uid: Global.FContainer.RemoveAllChildren
  commentId: M:Global.FContainer.RemoveAllChildren
  id: RemoveAllChildren
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: RemoveAllChildren()
  nameWithType: FContainer.RemoveAllChildren()
  fullName: FContainer.RemoveAllChildren()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.RemoveAllChildren</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveAllChildren()
    content.vb: Public Sub RemoveAllChildren()
  overload: Global.FContainer.RemoveAllChildren*
- uid: Global.FContainer.GetChildCount
  commentId: M:Global.FContainer.GetChildCount
  id: GetChildCount
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: GetChildCount()
  nameWithType: FContainer.GetChildCount()
  fullName: FContainer.GetChildCount()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.GetChildCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetChildCount()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FContainer.GetChildCount</parameter>
          </include>
        </markup>
    content.vb: Public Function GetChildCount() As Integer
  overload: Global.FContainer.GetChildCount*
- uid: Global.FContainer.GetChildAt(System.Int32)
  commentId: M:Global.FContainer.GetChildAt(System.Int32)
  id: GetChildAt(System.Int32)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: GetChildAt(int)
  nameWithType: FContainer.GetChildAt(int)
  fullName: FContainer.GetChildAt(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.GetChildAt(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FNode GetChildAt(int childIndex)
    parameters:
    - id: childIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>childIndex</parameter>
            <parameter>M:FContainer.GetChildAt(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FContainer.GetChildAt(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetChildAt(childIndex As Integer) As FNode
  overload: Global.FContainer.GetChildAt*
  nameWithType.vb: FContainer.GetChildAt(Integer)
  fullName.vb: FContainer.GetChildAt(Integer)
  name.vb: GetChildAt(Integer)
- uid: Global.FContainer.GetChildIndex(FNode)
  commentId: M:Global.FContainer.GetChildIndex(FNode)
  id: GetChildIndex(FNode)
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: GetChildIndex(FNode)
  nameWithType: FContainer.GetChildIndex(FNode)
  fullName: FContainer.GetChildIndex(FNode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FContainer.GetChildIndex(FNode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetChildIndex(FNode childNode)
    parameters:
    - id: childNode
      type: Global.FNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>childNode</parameter>
            <parameter>M:FContainer.GetChildIndex(FNode)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FContainer.GetChildIndex(FNode)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetChildIndex(childNode As FNode) As Integer
  overload: Global.FContainer.GetChildIndex*
- uid: Global.FContainer.shouldSortByZ
  commentId: P:Global.FContainer.shouldSortByZ
  id: shouldSortByZ
  parent: Global.FContainer
  langs:
  - csharp
  - vb
  name: shouldSortByZ
  nameWithType: FContainer.shouldSortByZ
  fullName: FContainer.shouldSortByZ
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:FContainer.shouldSortByZ</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool shouldSortByZ { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property shouldSortByZ As Boolean
  overload: Global.FContainer.shouldSortByZ*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.FNode
  commentId: T:Global.FNode
  isExternal: true
  href: FNode.html
  name: FNode
  nameWithType: FNode
  fullName: FNode
- uid: Global.FNode._x
  commentId: F:Global.FNode._x
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__x
  name: _x
  nameWithType: FNode._x
  fullName: FNode._x
- uid: Global.FNode._y
  commentId: F:Global.FNode._y
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__y
  name: _y
  nameWithType: FNode._y
  fullName: FNode._y
- uid: Global.FNode._scaleX
  commentId: F:Global.FNode._scaleX
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__scaleX
  name: _scaleX
  nameWithType: FNode._scaleX
  fullName: FNode._scaleX
- uid: Global.FNode._scaleY
  commentId: F:Global.FNode._scaleY
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__scaleY
  name: _scaleY
  nameWithType: FNode._scaleY
  fullName: FNode._scaleY
- uid: Global.FNode._rotation
  commentId: F:Global.FNode._rotation
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__rotation
  name: _rotation
  nameWithType: FNode._rotation
  fullName: FNode._rotation
- uid: Global.FNode._meshZ
  commentId: F:Global.FNode._meshZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__meshZ
  name: _meshZ
  nameWithType: FNode._meshZ
  fullName: FNode._meshZ
- uid: Global.FNode._sortZ
  commentId: F:Global.FNode._sortZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__sortZ
  name: _sortZ
  nameWithType: FNode._sortZ
  fullName: FNode._sortZ
- uid: Global.FNode._isMatrixDirty
  commentId: F:Global.FNode._isMatrixDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isMatrixDirty
  name: _isMatrixDirty
  nameWithType: FNode._isMatrixDirty
  fullName: FNode._isMatrixDirty
- uid: Global.FNode._container
  commentId: F:Global.FNode._container
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__container
  name: _container
  nameWithType: FNode._container
  fullName: FNode._container
- uid: Global.FNode._matrix
  commentId: F:Global.FNode._matrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__matrix
  name: _matrix
  nameWithType: FNode._matrix
  fullName: FNode._matrix
- uid: Global.FNode._concatenatedMatrix
  commentId: F:Global.FNode._concatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__concatenatedMatrix
  name: _concatenatedMatrix
  nameWithType: FNode._concatenatedMatrix
  fullName: FNode._concatenatedMatrix
- uid: Global.FNode._inverseConcatenatedMatrix
  commentId: F:Global.FNode._inverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__inverseConcatenatedMatrix
  name: _inverseConcatenatedMatrix
  nameWithType: FNode._inverseConcatenatedMatrix
  fullName: FNode._inverseConcatenatedMatrix
- uid: Global.FNode._screenConcatenatedMatrix
  commentId: F:Global.FNode._screenConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__screenConcatenatedMatrix
  name: _screenConcatenatedMatrix
  nameWithType: FNode._screenConcatenatedMatrix
  fullName: FNode._screenConcatenatedMatrix
- uid: Global.FNode._screenInverseConcatenatedMatrix
  commentId: F:Global.FNode._screenInverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__screenInverseConcatenatedMatrix
  name: _screenInverseConcatenatedMatrix
  nameWithType: FNode._screenInverseConcatenatedMatrix
  fullName: FNode._screenInverseConcatenatedMatrix
- uid: Global.FNode._needsSpecialMatrices
  commentId: F:Global.FNode._needsSpecialMatrices
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__needsSpecialMatrices
  name: _needsSpecialMatrices
  nameWithType: FNode._needsSpecialMatrices
  fullName: FNode._needsSpecialMatrices
- uid: Global.FNode._alpha
  commentId: F:Global.FNode._alpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__alpha
  name: _alpha
  nameWithType: FNode._alpha
  fullName: FNode._alpha
- uid: Global.FNode._concatenatedAlpha
  commentId: F:Global.FNode._concatenatedAlpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__concatenatedAlpha
  name: _concatenatedAlpha
  nameWithType: FNode._concatenatedAlpha
  fullName: FNode._concatenatedAlpha
- uid: Global.FNode._isAlphaDirty
  commentId: F:Global.FNode._isAlphaDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isAlphaDirty
  name: _isAlphaDirty
  nameWithType: FNode._isAlphaDirty
  fullName: FNode._isAlphaDirty
- uid: Global.FNode._visibleScale
  commentId: F:Global.FNode._visibleScale
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__visibleScale
  name: _visibleScale
  nameWithType: FNode._visibleScale
  fullName: FNode._visibleScale
- uid: Global.FNode._isOnStage
  commentId: F:Global.FNode._isOnStage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isOnStage
  name: _isOnStage
  nameWithType: FNode._isOnStage
  fullName: FNode._isOnStage
- uid: Global.FNode._depth
  commentId: F:Global.FNode._depth
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__depth
  name: _depth
  nameWithType: FNode._depth
  fullName: FNode._depth
- uid: Global.FNode._stage
  commentId: F:Global.FNode._stage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__stage
  name: _stage
  nameWithType: FNode._stage
  fullName: FNode._stage
- uid: Global.FNode._isVisible
  commentId: F:Global.FNode._isVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode__isVisible
  name: _isVisible
  nameWithType: FNode._isVisible
  fullName: FNode._isVisible
- uid: Global.FNode.data
  commentId: F:Global.FNode.data
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_data
  name: data
  nameWithType: FNode.data
  fullName: FNode.data
- uid: Global.FNode.AddEnabler(FNodeEnabler)
  commentId: M:Global.FNode.AddEnabler(FNodeEnabler)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  name: AddEnabler(FNodeEnabler)
  nameWithType: FNode.AddEnabler(FNodeEnabler)
  fullName: FNode.AddEnabler(FNodeEnabler)
  spec.csharp:
  - uid: Global.FNode.AddEnabler(FNodeEnabler)
    name: AddEnabler
    isExternal: true
    href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
  spec.vb:
  - uid: Global.FNode.AddEnabler(FNodeEnabler)
    name: AddEnabler
    isExternal: true
    href: Global.FNode.html#FNode_AddEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
- uid: Global.FNode.RemoveEnabler(FNodeEnabler)
  commentId: M:Global.FNode.RemoveEnabler(FNodeEnabler)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  name: RemoveEnabler(FNodeEnabler)
  nameWithType: FNode.RemoveEnabler(FNodeEnabler)
  fullName: FNode.RemoveEnabler(FNodeEnabler)
  spec.csharp:
  - uid: Global.FNode.RemoveEnabler(FNodeEnabler)
    name: RemoveEnabler
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveEnabler(FNodeEnabler)
    name: RemoveEnabler
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnabler_FNodeEnabler_
  - name: (
  - uid: Global.FNodeEnabler
    name: FNodeEnabler
    isExternal: true
    href: FNodeEnabler.html
  - name: )
- uid: Global.FNode.RemoveEnablerOfType(System.Type)
  commentId: M:Global.FNode.RemoveEnablerOfType(System.Type)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  name: RemoveEnablerOfType(Type)
  nameWithType: FNode.RemoveEnablerOfType(Type)
  fullName: FNode.RemoveEnablerOfType(System.Type)
  spec.csharp:
  - uid: Global.FNode.RemoveEnablerOfType(System.Type)
    name: RemoveEnablerOfType
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveEnablerOfType(System.Type)
    name: RemoveEnablerOfType
    isExternal: true
    href: Global.FNode.html#FNode_RemoveEnablerOfType_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  commentId: M:Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  name: ListenForResize(ScreenResizeDelegate)
  nameWithType: FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  fullName: FNode.ListenForResize(FScreen.ScreenResizeDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
    name: ListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenResizeDelegate
    name: ScreenResizeDelegate
    isExternal: true
    href: FScreen.ScreenResizeDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForResize(FScreen.ScreenResizeDelegate)
    name: ListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_ListenForResize_FScreen_ScreenResizeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenResizeDelegate
    name: ScreenResizeDelegate
    isExternal: true
    href: FScreen.ScreenResizeDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForResize
  commentId: M:Global.FNode.RemoveListenForResize
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForResize
  name: RemoveListenForResize()
  nameWithType: FNode.RemoveListenForResize()
  fullName: FNode.RemoveListenForResize()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForResize
    name: RemoveListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForResize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForResize
    name: RemoveListenForResize
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForResize
  - name: (
  - name: )
- uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  commentId: M:Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  name: ListenForOrientationChange(ScreenOrientationChangeDelegate)
  nameWithType: FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  fullName: FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
    name: ListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenOrientationChangeDelegate
    name: ScreenOrientationChangeDelegate
    isExternal: true
    href: FScreen.ScreenOrientationChangeDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForOrientationChange(FScreen.ScreenOrientationChangeDelegate)
    name: ListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_ListenForOrientationChange_FScreen_ScreenOrientationChangeDelegate_
  - name: (
  - uid: Global.FScreen.ScreenOrientationChangeDelegate
    name: ScreenOrientationChangeDelegate
    isExternal: true
    href: FScreen.ScreenOrientationChangeDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForOrientationChange
  commentId: M:Global.FNode.RemoveListenForOrientationChange
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  name: RemoveListenForOrientationChange()
  nameWithType: FNode.RemoveListenForOrientationChange()
  fullName: FNode.RemoveListenForOrientationChange()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForOrientationChange
    name: RemoveListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForOrientationChange
    name: RemoveListenForOrientationChange
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForOrientationChange
  - name: (
  - name: )
- uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  name: ListenForUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
    name: ListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForUpdate(Futile.FutileUpdateDelegate)
    name: ListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForUpdate
  commentId: M:Global.FNode.RemoveListenForUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForUpdate
  name: RemoveListenForUpdate()
  nameWithType: FNode.RemoveListenForUpdate()
  fullName: FNode.RemoveListenForUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForUpdate
    name: RemoveListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForUpdate
    name: RemoveListenForUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  name: ListenForAfterUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
    name: ListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForAfterUpdate(Futile.FutileUpdateDelegate)
    name: ListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAfterUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForAfterUpdate
  commentId: M:Global.FNode.RemoveListenForAfterUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  name: RemoveListenForAfterUpdate()
  nameWithType: FNode.RemoveListenForAfterUpdate()
  fullName: FNode.RemoveListenForAfterUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForAfterUpdate
    name: RemoveListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForAfterUpdate
    name: RemoveListenForAfterUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAfterUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  name: ListenForLateUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
    name: ListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForLateUpdate(Futile.FutileUpdateDelegate)
    name: ListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForLateUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForLateUpdate
  commentId: M:Global.FNode.RemoveListenForLateUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  name: RemoveListenForLateUpdate()
  nameWithType: FNode.RemoveListenForLateUpdate()
  fullName: FNode.RemoveListenForLateUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForLateUpdate
    name: RemoveListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForLateUpdate
    name: RemoveListenForLateUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForLateUpdate
  - name: (
  - name: )
- uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  commentId: M:Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  name: ListenForFixedUpdate(FutileUpdateDelegate)
  nameWithType: FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  fullName: FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
  spec.csharp:
  - uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
    name: ListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForFixedUpdate(Futile.FutileUpdateDelegate)
    name: ListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_ListenForFixedUpdate_Futile_FutileUpdateDelegate_
  - name: (
  - uid: Global.Futile.FutileUpdateDelegate
    name: FutileUpdateDelegate
    isExternal: true
    href: Futile.FutileUpdateDelegate.html
  - name: )
- uid: Global.FNode.RemoveListenForFixedUpdate
  commentId: M:Global.FNode.RemoveListenForFixedUpdate
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  name: RemoveListenForFixedUpdate()
  nameWithType: FNode.RemoveListenForFixedUpdate()
  fullName: FNode.RemoveListenForFixedUpdate()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForFixedUpdate
    name: RemoveListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForFixedUpdate
    name: RemoveListenForFixedUpdate
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForFixedUpdate
  - name: (
  - name: )
- uid: Global.FNode.EnableSingleTouch
  commentId: M:Global.FNode.EnableSingleTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableSingleTouch
  name: EnableSingleTouch()
  nameWithType: FNode.EnableSingleTouch()
  fullName: FNode.EnableSingleTouch()
  spec.csharp:
  - uid: Global.FNode.EnableSingleTouch
    name: EnableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSingleTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableSingleTouch
    name: EnableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSingleTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableSingleTouch
  commentId: M:Global.FNode.DisableSingleTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableSingleTouch
  name: DisableSingleTouch()
  nameWithType: FNode.DisableSingleTouch()
  fullName: FNode.DisableSingleTouch()
  spec.csharp:
  - uid: Global.FNode.DisableSingleTouch
    name: DisableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSingleTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableSingleTouch
    name: DisableSingleTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSingleTouch
  - name: (
  - name: )
- uid: Global.FNode.EnableMultiTouch
  commentId: M:Global.FNode.EnableMultiTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableMultiTouch
  name: EnableMultiTouch()
  nameWithType: FNode.EnableMultiTouch()
  fullName: FNode.EnableMultiTouch()
  spec.csharp:
  - uid: Global.FNode.EnableMultiTouch
    name: EnableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableMultiTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableMultiTouch
    name: EnableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableMultiTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableMultiTouch
  commentId: M:Global.FNode.DisableMultiTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableMultiTouch
  name: DisableMultiTouch()
  nameWithType: FNode.DisableMultiTouch()
  fullName: FNode.DisableMultiTouch()
  spec.csharp:
  - uid: Global.FNode.DisableMultiTouch
    name: DisableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableMultiTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableMultiTouch
    name: DisableMultiTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableMultiTouch
  - name: (
  - name: )
- uid: Global.FNode.EnableSmartTouch
  commentId: M:Global.FNode.EnableSmartTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_EnableSmartTouch
  name: EnableSmartTouch()
  nameWithType: FNode.EnableSmartTouch()
  fullName: FNode.EnableSmartTouch()
  spec.csharp:
  - uid: Global.FNode.EnableSmartTouch
    name: EnableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSmartTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.EnableSmartTouch
    name: EnableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_EnableSmartTouch
  - name: (
  - name: )
- uid: Global.FNode.DisableSmartTouch
  commentId: M:Global.FNode.DisableSmartTouch
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_DisableSmartTouch
  name: DisableSmartTouch()
  nameWithType: FNode.DisableSmartTouch()
  fullName: FNode.DisableSmartTouch()
  spec.csharp:
  - uid: Global.FNode.DisableSmartTouch
    name: DisableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSmartTouch
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.DisableSmartTouch
    name: DisableSmartTouch
    isExternal: true
    href: Global.FNode.html#FNode_DisableSmartTouch
  - name: (
  - name: )
- uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  commentId: M:Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  name: ListenForAddedOrRemoved(Delegate)
  nameWithType: FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  fullName: FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
  spec.csharp:
  - uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
    name: ListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  - name: (
  - uid: Global.FNodeEnablerForAddedOrRemoved.Delegate
    name: Delegate
    isExternal: true
    href: FNodeEnablerForAddedOrRemoved.Delegate.html
  - name: )
  spec.vb:
  - uid: Global.FNode.ListenForAddedOrRemoved(FNodeEnablerForAddedOrRemoved.Delegate)
    name: ListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_ListenForAddedOrRemoved_FNodeEnablerForAddedOrRemoved_Delegate_
  - name: (
  - uid: Global.FNodeEnablerForAddedOrRemoved.Delegate
    name: Delegate
    isExternal: true
    href: FNodeEnablerForAddedOrRemoved.Delegate.html
  - name: )
- uid: Global.FNode.RemoveListenForAddedOrRemoved
  commentId: M:Global.FNode.RemoveListenForAddedOrRemoved
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  name: RemoveListenForAddedOrRemoved()
  nameWithType: FNode.RemoveListenForAddedOrRemoved()
  fullName: FNode.RemoveListenForAddedOrRemoved()
  spec.csharp:
  - uid: Global.FNode.RemoveListenForAddedOrRemoved
    name: RemoveListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveListenForAddedOrRemoved
    name: RemoveListenForAddedOrRemoved
    isExternal: true
    href: Global.FNode.html#FNode_RemoveListenForAddedOrRemoved
  - name: (
  - name: )
- uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToScreen(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  name: LocalToScreen(Vector2)
  nameWithType: FNode.LocalToScreen(Vector2)
  fullName: FNode.LocalToScreen(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
    name: LocalToScreen
    isExternal: true
    href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToScreen(UnityEngine.Vector2)
    name: LocalToScreen
    isExternal: true
    href: Global.FNode.html#FNode_LocalToScreen_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.ScreenToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  name: ScreenToLocal(Vector2)
  nameWithType: FNode.ScreenToLocal(Vector2)
  fullName: FNode.ScreenToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
    name: ScreenToLocal
    isExternal: true
    href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.ScreenToLocal(UnityEngine.Vector2)
    name: ScreenToLocal
    isExternal: true
    href: Global.FNode.html#FNode_ScreenToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToStage(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  name: LocalToStage(Vector2)
  nameWithType: FNode.LocalToStage(Vector2)
  fullName: FNode.LocalToStage(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
    name: LocalToStage
    isExternal: true
    href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToStage(UnityEngine.Vector2)
    name: LocalToStage
    isExternal: true
    href: Global.FNode.html#FNode_LocalToStage_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.StageToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  name: StageToLocal(Vector2)
  nameWithType: FNode.StageToLocal(Vector2)
  fullName: FNode.StageToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
    name: StageToLocal
    isExternal: true
    href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.StageToLocal(UnityEngine.Vector2)
    name: StageToLocal
    isExternal: true
    href: Global.FNode.html#FNode_StageToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  commentId: M:Global.FNode.LocalToGlobal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  name: LocalToGlobal(Vector2)
  nameWithType: FNode.LocalToGlobal(Vector2)
  fullName: FNode.LocalToGlobal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
    name: LocalToGlobal
    isExternal: true
    href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToGlobal(UnityEngine.Vector2)
    name: LocalToGlobal
    isExternal: true
    href: Global.FNode.html#FNode_LocalToGlobal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  commentId: M:Global.FNode.GlobalToLocal(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  name: GlobalToLocal(Vector2)
  nameWithType: FNode.GlobalToLocal(Vector2)
  fullName: FNode.GlobalToLocal(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
    name: GlobalToLocal
    isExternal: true
    href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.GlobalToLocal(UnityEngine.Vector2)
    name: GlobalToLocal
    isExternal: true
    href: Global.FNode.html#FNode_GlobalToLocal_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  commentId: M:Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  name: OtherToLocal(FNode, Vector2)
  nameWithType: FNode.OtherToLocal(FNode, Vector2)
  fullName: FNode.OtherToLocal(FNode, UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
    name: OtherToLocal
    isExternal: true
    href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.OtherToLocal(FNode,UnityEngine.Vector2)
    name: OtherToLocal
    isExternal: true
    href: Global.FNode.html#FNode_OtherToLocal_FNode_UnityEngine_Vector2_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  commentId: M:Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  name: LocalToOther(Vector2, FNode)
  nameWithType: FNode.LocalToOther(Vector2, FNode)
  fullName: FNode.LocalToOther(UnityEngine.Vector2, FNode)
  spec.csharp:
  - uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
    name: LocalToOther
    isExternal: true
    href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.LocalToOther(UnityEngine.Vector2,FNode)
    name: LocalToOther
    isExternal: true
    href: Global.FNode.html#FNode_LocalToOther_UnityEngine_Vector2_FNode_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.GetLocalMousePosition
  commentId: M:Global.FNode.GetLocalMousePosition
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetLocalMousePosition
  name: GetLocalMousePosition()
  nameWithType: FNode.GetLocalMousePosition()
  fullName: FNode.GetLocalMousePosition()
  spec.csharp:
  - uid: Global.FNode.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalMousePosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.GetLocalMousePosition
    name: GetLocalMousePosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalMousePosition
  - name: (
  - name: )
- uid: Global.FNode.GetLocalTouchPosition(FTouch)
  commentId: M:Global.FNode.GetLocalTouchPosition(FTouch)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  name: GetLocalTouchPosition(FTouch)
  nameWithType: FNode.GetLocalTouchPosition(FTouch)
  fullName: FNode.GetLocalTouchPosition(FTouch)
  spec.csharp:
  - uid: Global.FNode.GetLocalTouchPosition(FTouch)
    name: GetLocalTouchPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
  spec.vb:
  - uid: Global.FNode.GetLocalTouchPosition(FTouch)
    name: GetLocalTouchPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetLocalTouchPosition_FTouch_
  - name: (
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: )
- uid: Global.FNode.UpdateMatrix
  commentId: M:Global.FNode.UpdateMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_UpdateMatrix
  name: UpdateMatrix()
  nameWithType: FNode.UpdateMatrix()
  fullName: FNode.UpdateMatrix()
  spec.csharp:
  - uid: Global.FNode.UpdateMatrix
    name: UpdateMatrix
    isExternal: true
    href: Global.FNode.html#FNode_UpdateMatrix
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.UpdateMatrix
    name: UpdateMatrix
    isExternal: true
    href: Global.FNode.html#FNode_UpdateMatrix
  - name: (
  - name: )
- uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  commentId: M:Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  name: UpdateDepthMatrixAlpha(bool, bool)
  nameWithType: FNode.UpdateDepthMatrixAlpha(bool, bool)
  fullName: FNode.UpdateDepthMatrixAlpha(bool, bool)
  nameWithType.vb: FNode.UpdateDepthMatrixAlpha(Boolean, Boolean)
  fullName.vb: FNode.UpdateDepthMatrixAlpha(Boolean, Boolean)
  name.vb: UpdateDepthMatrixAlpha(Boolean, Boolean)
  spec.csharp:
  - uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
    name: UpdateDepthMatrixAlpha
    isExternal: true
    href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.FNode.UpdateDepthMatrixAlpha(System.Boolean,System.Boolean)
    name: UpdateDepthMatrixAlpha
    isExternal: true
    href: Global.FNode.html#FNode_UpdateDepthMatrixAlpha_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.FNode.HandleAddedToContainer(FContainer)
  commentId: M:Global.FNode.HandleAddedToContainer(FContainer)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  name: HandleAddedToContainer(FContainer)
  nameWithType: FNode.HandleAddedToContainer(FContainer)
  fullName: FNode.HandleAddedToContainer(FContainer)
  spec.csharp:
  - uid: Global.FNode.HandleAddedToContainer(FContainer)
    name: HandleAddedToContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  - name: (
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleAddedToContainer(FContainer)
    name: HandleAddedToContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToContainer_FContainer_
  - name: (
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FNode.HandleRemovedFromContainer
  commentId: M:Global.FNode.HandleRemovedFromContainer
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleRemovedFromContainer
  name: HandleRemovedFromContainer()
  nameWithType: FNode.HandleRemovedFromContainer()
  fullName: FNode.HandleRemovedFromContainer()
  spec.csharp:
  - uid: Global.FNode.HandleRemovedFromContainer
    name: HandleRemovedFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromContainer
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleRemovedFromContainer
    name: HandleRemovedFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromContainer
  - name: (
  - name: )
- uid: Global.FNode.RemoveFromContainer
  commentId: M:Global.FNode.RemoveFromContainer
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RemoveFromContainer
  name: RemoveFromContainer()
  nameWithType: FNode.RemoveFromContainer()
  fullName: FNode.RemoveFromContainer()
  spec.csharp:
  - uid: Global.FNode.RemoveFromContainer
    name: RemoveFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_RemoveFromContainer
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.RemoveFromContainer
    name: RemoveFromContainer
    isExternal: true
    href: Global.FNode.html#FNode_RemoveFromContainer
  - name: (
  - name: )
- uid: Global.FNode.MoveToFront
  commentId: M:Global.FNode.MoveToFront
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveToFront
  name: MoveToFront()
  nameWithType: FNode.MoveToFront()
  fullName: FNode.MoveToFront()
  spec.csharp:
  - uid: Global.FNode.MoveToFront
    name: MoveToFront
    isExternal: true
    href: Global.FNode.html#FNode_MoveToFront
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveToFront
    name: MoveToFront
    isExternal: true
    href: Global.FNode.html#FNode_MoveToFront
  - name: (
  - name: )
- uid: Global.FNode.MoveToBack
  commentId: M:Global.FNode.MoveToBack
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveToBack
  name: MoveToBack()
  nameWithType: FNode.MoveToBack()
  fullName: FNode.MoveToBack()
  spec.csharp:
  - uid: Global.FNode.MoveToBack
    name: MoveToBack
    isExternal: true
    href: Global.FNode.html#FNode_MoveToBack
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveToBack
    name: MoveToBack
    isExternal: true
    href: Global.FNode.html#FNode_MoveToBack
  - name: (
  - name: )
- uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
  commentId: M:Global.FNode.MoveInFrontOfOtherNode(FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  name: MoveInFrontOfOtherNode(FNode)
  nameWithType: FNode.MoveInFrontOfOtherNode(FNode)
  fullName: FNode.MoveInFrontOfOtherNode(FNode)
  spec.csharp:
  - uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
    name: MoveInFrontOfOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveInFrontOfOtherNode(FNode)
    name: MoveInFrontOfOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveInFrontOfOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.MoveBehindOtherNode(FNode)
  commentId: M:Global.FNode.MoveBehindOtherNode(FNode)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  name: MoveBehindOtherNode(FNode)
  nameWithType: FNode.MoveBehindOtherNode(FNode)
  fullName: FNode.MoveBehindOtherNode(FNode)
  spec.csharp:
  - uid: Global.FNode.MoveBehindOtherNode(FNode)
    name: MoveBehindOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
  spec.vb:
  - uid: Global.FNode.MoveBehindOtherNode(FNode)
    name: MoveBehindOtherNode
    isExternal: true
    href: Global.FNode.html#FNode_MoveBehindOtherNode_FNode_
  - name: (
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: Global.FNode.IsAncestryVisible
  commentId: M:Global.FNode.IsAncestryVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_IsAncestryVisible
  name: IsAncestryVisible()
  nameWithType: FNode.IsAncestryVisible()
  fullName: FNode.IsAncestryVisible()
  spec.csharp:
  - uid: Global.FNode.IsAncestryVisible
    name: IsAncestryVisible
    isExternal: true
    href: Global.FNode.html#FNode_IsAncestryVisible
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.IsAncestryVisible
    name: IsAncestryVisible
    isExternal: true
    href: Global.FNode.html#FNode_IsAncestryVisible
  - name: (
  - name: )
- uid: Global.FNode.CreateSpecialMatrices
  commentId: M:Global.FNode.CreateSpecialMatrices
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_CreateSpecialMatrices
  name: CreateSpecialMatrices()
  nameWithType: FNode.CreateSpecialMatrices()
  fullName: FNode.CreateSpecialMatrices()
  spec.csharp:
  - uid: Global.FNode.CreateSpecialMatrices
    name: CreateSpecialMatrices
    isExternal: true
    href: Global.FNode.html#FNode_CreateSpecialMatrices
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.CreateSpecialMatrices
    name: CreateSpecialMatrices
    isExternal: true
    href: Global.FNode.html#FNode_CreateSpecialMatrices
  - name: (
  - name: )
- uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  commentId: M:Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  name: RotateAroundPointRelative(Vector2, float)
  nameWithType: FNode.RotateAroundPointRelative(Vector2, float)
  fullName: FNode.RotateAroundPointRelative(UnityEngine.Vector2, float)
  nameWithType.vb: FNode.RotateAroundPointRelative(Vector2, Single)
  fullName.vb: FNode.RotateAroundPointRelative(UnityEngine.Vector2, Single)
  name.vb: RotateAroundPointRelative(Vector2, Single)
  spec.csharp:
  - uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.RotateAroundPointRelative(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointRelative_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  commentId: M:Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  name: RotateAroundPointAbsolute(Vector2, float)
  nameWithType: FNode.RotateAroundPointAbsolute(Vector2, float)
  fullName: FNode.RotateAroundPointAbsolute(UnityEngine.Vector2, float)
  nameWithType.vb: FNode.RotateAroundPointAbsolute(Vector2, Single)
  fullName.vb: FNode.RotateAroundPointAbsolute(UnityEngine.Vector2, Single)
  name.vb: RotateAroundPointAbsolute(Vector2, Single)
  spec.csharp:
  - uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.RotateAroundPointAbsolute(UnityEngine.Vector2,System.Single)
    name: RotateAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_RotateAroundPointAbsolute_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  name: ScaleAroundPointRelative(Vector2, float, float)
  nameWithType: FNode.ScaleAroundPointRelative(Vector2, float, float)
  fullName: FNode.ScaleAroundPointRelative(UnityEngine.Vector2, float, float)
  nameWithType.vb: FNode.ScaleAroundPointRelative(Vector2, Single, Single)
  fullName.vb: FNode.ScaleAroundPointRelative(UnityEngine.Vector2, Single, Single)
  name.vb: ScaleAroundPointRelative(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.ScaleAroundPointRelative(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointRelative
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointRelative_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  name: ScaleAroundPointAbsolute(Vector2, float, float)
  nameWithType: FNode.ScaleAroundPointAbsolute(Vector2, float, float)
  fullName: FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2, float, float)
  nameWithType.vb: FNode.ScaleAroundPointAbsolute(Vector2, Single, Single)
  fullName.vb: FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2, Single, Single)
  name.vb: ScaleAroundPointAbsolute(Vector2, Single, Single)
  spec.csharp:
  - uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.ScaleAroundPointAbsolute(UnityEngine.Vector2,System.Single,System.Single)
    name: ScaleAroundPointAbsolute
    isExternal: true
    href: Global.FNode.html#FNode_ScaleAroundPointAbsolute_UnityEngine_Vector2_System_Single_System_Single_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.SetPosition(System.Single,System.Single)
  commentId: M:Global.FNode.SetPosition(System.Single,System.Single)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  name: SetPosition(float, float)
  nameWithType: FNode.SetPosition(float, float)
  fullName: FNode.SetPosition(float, float)
  nameWithType.vb: FNode.SetPosition(Single, Single)
  fullName.vb: FNode.SetPosition(Single, Single)
  name.vb: SetPosition(Single, Single)
  spec.csharp:
  - uid: Global.FNode.SetPosition(System.Single,System.Single)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.FNode.SetPosition(System.Single,System.Single)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_System_Single_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.FNode.SetPosition(UnityEngine.Vector2)
  commentId: M:Global.FNode.SetPosition(UnityEngine.Vector2)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  name: SetPosition(Vector2)
  nameWithType: FNode.SetPosition(Vector2)
  fullName: FNode.SetPosition(UnityEngine.Vector2)
  spec.csharp:
  - uid: Global.FNode.SetPosition(UnityEngine.Vector2)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.FNode.SetPosition(UnityEngine.Vector2)
    name: SetPosition
    isExternal: true
    href: Global.FNode.html#FNode_SetPosition_UnityEngine_Vector2_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.FNode.GetPosition
  commentId: M:Global.FNode.GetPosition
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_GetPosition
  name: GetPosition()
  nameWithType: FNode.GetPosition()
  fullName: FNode.GetPosition()
  spec.csharp:
  - uid: Global.FNode.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetPosition
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.GetPosition
    name: GetPosition
    isExternal: true
    href: Global.FNode.html#FNode_GetPosition
  - name: (
  - name: )
- uid: Global.FNode.isVisible
  commentId: P:Global.FNode.isVisible
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_isVisible
  name: isVisible
  nameWithType: FNode.isVisible
  fullName: FNode.isVisible
- uid: Global.FNode.x
  commentId: P:Global.FNode.x
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_x
  name: x
  nameWithType: FNode.x
  fullName: FNode.x
- uid: Global.FNode.y
  commentId: P:Global.FNode.y
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_y
  name: y
  nameWithType: FNode.y
  fullName: FNode.y
- uid: Global.FNode.meshZ
  commentId: P:Global.FNode.meshZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_meshZ
  name: meshZ
  nameWithType: FNode.meshZ
  fullName: FNode.meshZ
- uid: Global.FNode.sortZ
  commentId: P:Global.FNode.sortZ
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_sortZ
  name: sortZ
  nameWithType: FNode.sortZ
  fullName: FNode.sortZ
- uid: Global.FNode.scaleX
  commentId: P:Global.FNode.scaleX
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scaleX
  name: scaleX
  nameWithType: FNode.scaleX
  fullName: FNode.scaleX
- uid: Global.FNode.scaleY
  commentId: P:Global.FNode.scaleY
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scaleY
  name: scaleY
  nameWithType: FNode.scaleY
  fullName: FNode.scaleY
- uid: Global.FNode.scale
  commentId: P:Global.FNode.scale
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_scale
  name: scale
  nameWithType: FNode.scale
  fullName: FNode.scale
- uid: Global.FNode.rotation
  commentId: P:Global.FNode.rotation
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_rotation
  name: rotation
  nameWithType: FNode.rotation
  fullName: FNode.rotation
- uid: Global.FNode.isMatrixDirty
  commentId: P:Global.FNode.isMatrixDirty
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_isMatrixDirty
  name: isMatrixDirty
  nameWithType: FNode.isMatrixDirty
  fullName: FNode.isMatrixDirty
- uid: Global.FNode.container
  commentId: P:Global.FNode.container
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_container
  name: container
  nameWithType: FNode.container
  fullName: FNode.container
- uid: Global.FNode.depth
  commentId: P:Global.FNode.depth
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_depth
  name: depth
  nameWithType: FNode.depth
  fullName: FNode.depth
- uid: Global.FNode.touchPriority
  commentId: P:Global.FNode.touchPriority
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_touchPriority
  name: touchPriority
  nameWithType: FNode.touchPriority
  fullName: FNode.touchPriority
- uid: Global.FNode.matrix
  commentId: P:Global.FNode.matrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_matrix
  name: matrix
  nameWithType: FNode.matrix
  fullName: FNode.matrix
- uid: Global.FNode.concatenatedMatrix
  commentId: P:Global.FNode.concatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_concatenatedMatrix
  name: concatenatedMatrix
  nameWithType: FNode.concatenatedMatrix
  fullName: FNode.concatenatedMatrix
- uid: Global.FNode.inverseConcatenatedMatrix
  commentId: P:Global.FNode.inverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_inverseConcatenatedMatrix
  name: inverseConcatenatedMatrix
  nameWithType: FNode.inverseConcatenatedMatrix
  fullName: FNode.inverseConcatenatedMatrix
- uid: Global.FNode.screenConcatenatedMatrix
  commentId: P:Global.FNode.screenConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_screenConcatenatedMatrix
  name: screenConcatenatedMatrix
  nameWithType: FNode.screenConcatenatedMatrix
  fullName: FNode.screenConcatenatedMatrix
- uid: Global.FNode.screenInverseConcatenatedMatrix
  commentId: P:Global.FNode.screenInverseConcatenatedMatrix
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_screenInverseConcatenatedMatrix
  name: screenInverseConcatenatedMatrix
  nameWithType: FNode.screenInverseConcatenatedMatrix
  fullName: FNode.screenInverseConcatenatedMatrix
- uid: Global.FNode.alpha
  commentId: P:Global.FNode.alpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_alpha
  name: alpha
  nameWithType: FNode.alpha
  fullName: FNode.alpha
- uid: Global.FNode.concatenatedAlpha
  commentId: P:Global.FNode.concatenatedAlpha
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_concatenatedAlpha
  name: concatenatedAlpha
  nameWithType: FNode.concatenatedAlpha
  fullName: FNode.concatenatedAlpha
- uid: Global.FNode.stage
  commentId: P:Global.FNode.stage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_stage
  name: stage
  nameWithType: FNode.stage
  fullName: FNode.stage
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{FNode}
  commentId: T:System.Collections.Generic.List{FNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FNode>
  nameWithType: List<FNode>
  fullName: System.Collections.Generic.List<FNode>
  nameWithType.vb: List(Of FNode)
  fullName.vb: System.Collections.Generic.List(Of FNode)
  name.vb: List(Of FNode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.FNode
    name: FNode
    isExternal: true
    href: FNode.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.FContainer.#ctor*
  commentId: Overload:Global.FContainer.#ctor
  isExternal: true
  href: Global.FContainer.html#FContainer__ctor
  name: FContainer
  nameWithType: FContainer.FContainer
  fullName: FContainer.FContainer
  nameWithType.vb: FContainer.New
  fullName.vb: FContainer.New
  name.vb: New
- uid: Global.FNode.Redraw(System.Boolean,System.Boolean)
  commentId: M:Global.FNode.Redraw(System.Boolean,System.Boolean)
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_Redraw_System_Boolean_System_Boolean_
  name: Redraw(bool, bool)
  nameWithType: FNode.Redraw(bool, bool)
  fullName: FNode.Redraw(bool, bool)
  nameWithType.vb: FNode.Redraw(Boolean, Boolean)
  fullName.vb: FNode.Redraw(Boolean, Boolean)
  name.vb: Redraw(Boolean, Boolean)
  spec.csharp:
  - uid: Global.FNode.Redraw(System.Boolean,System.Boolean)
    name: Redraw
    isExternal: true
    href: Global.FNode.html#FNode_Redraw_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.FNode.Redraw(System.Boolean,System.Boolean)
    name: Redraw
    isExternal: true
    href: Global.FNode.html#FNode_Redraw_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.FContainer.Redraw*
  commentId: Overload:Global.FContainer.Redraw
  isExternal: true
  href: Global.FContainer.html#FContainer_Redraw_System_Boolean_System_Boolean_
  name: Redraw
  nameWithType: FContainer.Redraw
  fullName: FContainer.Redraw
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FNode.HandleAddedToStage
  commentId: M:Global.FNode.HandleAddedToStage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleAddedToStage
  name: HandleAddedToStage()
  nameWithType: FNode.HandleAddedToStage()
  fullName: FNode.HandleAddedToStage()
  spec.csharp:
  - uid: Global.FNode.HandleAddedToStage
    name: HandleAddedToStage
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToStage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleAddedToStage
    name: HandleAddedToStage
    isExternal: true
    href: Global.FNode.html#FNode_HandleAddedToStage
  - name: (
  - name: )
- uid: Global.FContainer.HandleAddedToStage*
  commentId: Overload:Global.FContainer.HandleAddedToStage
  isExternal: true
  href: Global.FContainer.html#FContainer_HandleAddedToStage
  name: HandleAddedToStage
  nameWithType: FContainer.HandleAddedToStage
  fullName: FContainer.HandleAddedToStage
- uid: Global.FNode.HandleRemovedFromStage
  commentId: M:Global.FNode.HandleRemovedFromStage
  parent: Global.FNode
  isExternal: true
  href: Global.FNode.html#FNode_HandleRemovedFromStage
  name: HandleRemovedFromStage()
  nameWithType: FNode.HandleRemovedFromStage()
  fullName: FNode.HandleRemovedFromStage()
  spec.csharp:
  - uid: Global.FNode.HandleRemovedFromStage
    name: HandleRemovedFromStage
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromStage
  - name: (
  - name: )
  spec.vb:
  - uid: Global.FNode.HandleRemovedFromStage
    name: HandleRemovedFromStage
    isExternal: true
    href: Global.FNode.html#FNode_HandleRemovedFromStage
  - name: (
  - name: )
- uid: Global.FContainer.HandleRemovedFromStage*
  commentId: Overload:Global.FContainer.HandleRemovedFromStage
  isExternal: true
  href: Global.FContainer.html#FContainer_HandleRemovedFromStage
  name: HandleRemovedFromStage
  nameWithType: FContainer.HandleRemovedFromStage
  fullName: FContainer.HandleRemovedFromStage
- uid: Global.FContainer.AddChild*
  commentId: Overload:Global.FContainer.AddChild
  isExternal: true
  href: Global.FContainer.html#FContainer_AddChild_FNode_
  name: AddChild
  nameWithType: FContainer.AddChild
  fullName: FContainer.AddChild
- uid: Global.FContainer.AddChildAtIndex*
  commentId: Overload:Global.FContainer.AddChildAtIndex
  isExternal: true
  href: Global.FContainer.html#FContainer_AddChildAtIndex_FNode_System_Int32_
  name: AddChildAtIndex
  nameWithType: FContainer.AddChildAtIndex
  fullName: FContainer.AddChildAtIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.FContainer.RemoveChild*
  commentId: Overload:Global.FContainer.RemoveChild
  isExternal: true
  href: Global.FContainer.html#FContainer_RemoveChild_FNode_
  name: RemoveChild
  nameWithType: FContainer.RemoveChild
  fullName: FContainer.RemoveChild
- uid: Global.FContainer.RemoveAllChildren*
  commentId: Overload:Global.FContainer.RemoveAllChildren
  isExternal: true
  href: Global.FContainer.html#FContainer_RemoveAllChildren
  name: RemoveAllChildren
  nameWithType: FContainer.RemoveAllChildren
  fullName: FContainer.RemoveAllChildren
- uid: Global.FContainer.GetChildCount*
  commentId: Overload:Global.FContainer.GetChildCount
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildCount
  name: GetChildCount
  nameWithType: FContainer.GetChildCount
  fullName: FContainer.GetChildCount
- uid: Global.FContainer.GetChildAt*
  commentId: Overload:Global.FContainer.GetChildAt
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildAt_System_Int32_
  name: GetChildAt
  nameWithType: FContainer.GetChildAt
  fullName: FContainer.GetChildAt
- uid: Global.FContainer.GetChildIndex*
  commentId: Overload:Global.FContainer.GetChildIndex
  isExternal: true
  href: Global.FContainer.html#FContainer_GetChildIndex_FNode_
  name: GetChildIndex
  nameWithType: FContainer.GetChildIndex
  fullName: FContainer.GetChildIndex
- uid: Global.FContainer.shouldSortByZ*
  commentId: Overload:Global.FContainer.shouldSortByZ
  isExternal: true
  href: Global.FContainer.html#FContainer_shouldSortByZ
  name: shouldSortByZ
  nameWithType: FContainer.shouldSortByZ
  fullName: FContainer.shouldSortByZ
