### YamlMime:ManagedReference
items:
- uid: Global.SSLightRod.LightVessel
  commentId: T:Global.SSLightRod.LightVessel
  id: SSLightRod.LightVessel
  parent: Global
  children:
  - Global.SSLightRod.LightVessel.#ctor(SSLightRod)
  - Global.SSLightRod.LightVessel.Update
  - Global.SSLightRod.LightVessel.light
  - Global.SSLightRod.LightVessel.placedObject
  - Global.SSLightRod.LightVessel.progression
  - Global.SSLightRod.LightVessel.rodData
  - Global.SSLightRod.LightVessel.size
  - Global.SSLightRod.LightVessel.speed
  - Global.SSLightRod.LightVessel.strength
  - Global.SSLightRod.LightVessel.visible
  langs:
  - csharp
  - vb
  name: SSLightRod.LightVessel
  nameWithType: SSLightRod.LightVessel
  fullName: SSLightRod.LightVessel
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SSLightRod.LightVessel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class SSLightRod.LightVessel
    content.vb: Public Class SSLightRod.LightVessel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SSLightRod.LightVessel.light
  commentId: F:Global.SSLightRod.LightVessel.light
  id: light
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: light
  nameWithType: SSLightRod.LightVessel.light
  fullName: SSLightRod.LightVessel.light
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.light</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightSource light
    return:
      type: Global.LightSource
    content.vb: Public light As LightSource
- uid: Global.SSLightRod.LightVessel.progression
  commentId: F:Global.SSLightRod.LightVessel.progression
  id: progression
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: progression
  nameWithType: SSLightRod.LightVessel.progression
  fullName: SSLightRod.LightVessel.progression
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.progression</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float progression
    return:
      type: System.Single
    content.vb: Public progression As Single
- uid: Global.SSLightRod.LightVessel.speed
  commentId: F:Global.SSLightRod.LightVessel.speed
  id: speed
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: speed
  nameWithType: SSLightRod.LightVessel.speed
  fullName: SSLightRod.LightVessel.speed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.speed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float speed
    return:
      type: System.Single
    content.vb: Public speed As Single
- uid: Global.SSLightRod.LightVessel.strength
  commentId: F:Global.SSLightRod.LightVessel.strength
  id: strength
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: strength
  nameWithType: SSLightRod.LightVessel.strength
  fullName: SSLightRod.LightVessel.strength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.strength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float strength
    return:
      type: System.Single
    content.vb: Public strength As Single
- uid: Global.SSLightRod.LightVessel.size
  commentId: F:Global.SSLightRod.LightVessel.size
  id: size
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: size
  nameWithType: SSLightRod.LightVessel.size
  fullName: SSLightRod.LightVessel.size
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.size</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float size
    return:
      type: System.Single
    content.vb: Public size As Single
- uid: Global.SSLightRod.LightVessel.visible
  commentId: F:Global.SSLightRod.LightVessel.visible
  id: visible
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: visible
  nameWithType: SSLightRod.LightVessel.visible
  fullName: SSLightRod.LightVessel.visible
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSLightRod.LightVessel.visible</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float visible
    return:
      type: System.Single
    content.vb: Public visible As Single
- uid: Global.SSLightRod.LightVessel.#ctor(SSLightRod)
  commentId: M:Global.SSLightRod.LightVessel.#ctor(SSLightRod)
  id: '#ctor(SSLightRod)'
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: LightVessel(SSLightRod)
  nameWithType: SSLightRod.LightVessel.LightVessel(SSLightRod)
  fullName: SSLightRod.LightVessel.LightVessel(SSLightRod)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SSLightRod.LightVessel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightVessel(SSLightRod rod)
    parameters:
    - id: rod
      type: Global.SSLightRod
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rod</parameter>
            <parameter>M:SSLightRod.LightVessel.#ctor(SSLightRod)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(rod As SSLightRod)
  overload: Global.SSLightRod.LightVessel.#ctor*
  nameWithType.vb: SSLightRod.LightVessel.New(SSLightRod)
  fullName.vb: SSLightRod.LightVessel.New(SSLightRod)
  name.vb: New(SSLightRod)
- uid: Global.SSLightRod.LightVessel.Update
  commentId: M:Global.SSLightRod.LightVessel.Update
  id: Update
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SSLightRod.LightVessel.Update()
  fullName: SSLightRod.LightVessel.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSLightRod.LightVessel.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.SSLightRod.LightVessel.Update*
- uid: Global.SSLightRod.LightVessel.placedObject
  commentId: P:Global.SSLightRod.LightVessel.placedObject
  id: placedObject
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: placedObject
  nameWithType: SSLightRod.LightVessel.placedObject
  fullName: SSLightRod.LightVessel.placedObject
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SSLightRod.LightVessel.placedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject placedObject { get; }
    parameters: []
    return:
      type: Global.PlacedObject
    content.vb: Public ReadOnly Property placedObject As PlacedObject
  overload: Global.SSLightRod.LightVessel.placedObject*
- uid: Global.SSLightRod.LightVessel.rodData
  commentId: P:Global.SSLightRod.LightVessel.rodData
  id: rodData
  parent: Global.SSLightRod.LightVessel
  langs:
  - csharp
  - vb
  name: rodData
  nameWithType: SSLightRod.LightVessel.rodData
  fullName: SSLightRod.LightVessel.rodData
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SSLightRod.LightVessel.rodData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.SSLightRodData rodData { get; }
    parameters: []
    return:
      type: Global.PlacedObject.SSLightRodData
    content.vb: Public ReadOnly Property rodData As PlacedObject.SSLightRodData
  overload: Global.SSLightRod.LightVessel.rodData*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.LightSource
  commentId: T:Global.LightSource
  isExternal: true
  href: LightSource.html
  name: LightSource
  nameWithType: LightSource
  fullName: LightSource
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SSLightRod.LightVessel.#ctor*
  commentId: Overload:Global.SSLightRod.LightVessel.#ctor
  isExternal: true
  href: Global.SSLightRod.LightVessel.html#SSLightRod_LightVessel__ctor_SSLightRod_
  name: LightVessel
  nameWithType: SSLightRod.LightVessel.LightVessel
  fullName: SSLightRod.LightVessel.LightVessel
  nameWithType.vb: SSLightRod.LightVessel.New
  fullName.vb: SSLightRod.LightVessel.New
  name.vb: New
- uid: Global.SSLightRod
  commentId: T:Global.SSLightRod
  isExternal: true
  href: SSLightRod.html
  name: SSLightRod
  nameWithType: SSLightRod
  fullName: SSLightRod
- uid: Global.SSLightRod.LightVessel.Update*
  commentId: Overload:Global.SSLightRod.LightVessel.Update
  isExternal: true
  href: Global.SSLightRod.LightVessel.html#SSLightRod_LightVessel_Update
  name: Update
  nameWithType: SSLightRod.LightVessel.Update
  fullName: SSLightRod.LightVessel.Update
- uid: Global.SSLightRod.LightVessel.placedObject*
  commentId: Overload:Global.SSLightRod.LightVessel.placedObject
  isExternal: true
  href: Global.SSLightRod.LightVessel.html#SSLightRod_LightVessel_placedObject
  name: placedObject
  nameWithType: SSLightRod.LightVessel.placedObject
  fullName: SSLightRod.LightVessel.placedObject
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Global.SSLightRod.LightVessel.rodData*
  commentId: Overload:Global.SSLightRod.LightVessel.rodData
  isExternal: true
  href: Global.SSLightRod.LightVessel.html#SSLightRod_LightVessel_rodData
  name: rodData
  nameWithType: SSLightRod.LightVessel.rodData
  fullName: SSLightRod.LightVessel.rodData
- uid: Global.PlacedObject.SSLightRodData
  commentId: T:Global.PlacedObject.SSLightRodData
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.SSLightRodData
  nameWithType: PlacedObject.SSLightRodData
  fullName: PlacedObject.SSLightRodData
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.SSLightRodData
    name: SSLightRodData
    isExternal: true
    href: PlacedObject.SSLightRodData.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.SSLightRodData
    name: SSLightRodData
    isExternal: true
    href: PlacedObject.SSLightRodData.html
