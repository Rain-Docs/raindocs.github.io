### YamlMime:ManagedReference
items:
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  id: BodyChunk
  parent: Global
  children:
  - Global.BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)
  - Global.BodyChunk.ContactPoint
  - Global.BodyChunk.HardSetPosition(UnityEngine.Vector2)
  - Global.BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  - Global.BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)
  - Global.BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  - Global.BodyChunk.Rotation
  - Global.BodyChunk.Update
  - Global.BodyChunk.VisibilityBonus(System.Single)
  - Global.BodyChunk.actAsTrigger
  - Global.BodyChunk.buried
  - Global.BodyChunk.burrow
  - Global.BodyChunk.collideWithObjects
  - Global.BodyChunk.collideWithSlopes
  - Global.BodyChunk.collideWithTerrain
  - Global.BodyChunk.defaultRestrictInRoomRange
  - Global.BodyChunk.goThroughFloors
  - Global.BodyChunk.grabsDisableFloors
  - Global.BodyChunk.index
  - Global.BodyChunk.lastBuried
  - Global.BodyChunk.lastContactPoint
  - Global.BodyChunk.lastLastPos
  - Global.BodyChunk.lastPos
  - Global.BodyChunk.loudness
  - Global.BodyChunk.mass
  - Global.BodyChunk.onSlope
  - Global.BodyChunk.owner
  - Global.BodyChunk.pos
  - Global.BodyChunk.rad
  - Global.BodyChunk.restrictInRoomRange
  - Global.BodyChunk.rotationChunk
  - Global.BodyChunk.sandSubmersion
  - Global.BodyChunk.sandSupports
  - Global.BodyChunk.setPos
  - Global.BodyChunk.splashStop
  - Global.BodyChunk.submersion
  - Global.BodyChunk.terrainCurveNormal
  - Global.BodyChunk.terrainSqueeze
  - Global.BodyChunk.vel
  langs:
  - csharp
  - vb
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: A circular hitbox with a radius and a mass.
  example: []
  syntax:
    content: public class BodyChunk
    content.vb: Public Class BodyChunk
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.BodyChunk.pos
  commentId: F:Global.BodyChunk.pos
  id: pos
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: BodyChunk.pos
  fullName: BodyChunk.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Global.BodyChunk.lastPos
  commentId: F:Global.BodyChunk.lastPos
  id: lastPos
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: BodyChunk.lastPos
  fullName: BodyChunk.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: Global.BodyChunk.lastLastPos
  commentId: F:Global.BodyChunk.lastLastPos
  id: lastLastPos
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: lastLastPos
  nameWithType: BodyChunk.lastLastPos
  fullName: BodyChunk.lastLastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.lastLastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastLastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastLastPos As Vector2
- uid: Global.BodyChunk.setPos
  commentId: F:Global.BodyChunk.setPos
  id: setPos
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: setPos
  nameWithType: BodyChunk.setPos
  fullName: BodyChunk.setPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.setPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? setPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public setPos As Vector2?
- uid: Global.BodyChunk.vel
  commentId: F:Global.BodyChunk.vel
  id: vel
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: vel
  nameWithType: BodyChunk.vel
  fullName: BodyChunk.vel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.vel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vel
    return:
      type: UnityEngine.Vector2
    content.vb: Public vel As Vector2
- uid: Global.BodyChunk.rad
  commentId: F:Global.BodyChunk.rad
  id: rad
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: BodyChunk.rad
  fullName: BodyChunk.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: Global.BodyChunk.terrainSqueeze
  commentId: F:Global.BodyChunk.terrainSqueeze
  id: terrainSqueeze
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: terrainSqueeze
  nameWithType: BodyChunk.terrainSqueeze
  fullName: BodyChunk.terrainSqueeze
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.terrainSqueeze</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float terrainSqueeze
    return:
      type: System.Single
    content.vb: Public terrainSqueeze As Single
- uid: Global.BodyChunk.mass
  commentId: F:Global.BodyChunk.mass
  id: mass
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: mass
  nameWithType: BodyChunk.mass
  fullName: BodyChunk.mass
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.mass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float mass
    return:
      type: System.Single
    content.vb: Public mass As Single
- uid: Global.BodyChunk.rotationChunk
  commentId: F:Global.BodyChunk.rotationChunk
  id: rotationChunk
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: rotationChunk
  nameWithType: BodyChunk.rotationChunk
  fullName: BodyChunk.rotationChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.rotationChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk rotationChunk
    return:
      type: Global.BodyChunk
    content.vb: Public rotationChunk As BodyChunk
- uid: Global.BodyChunk.collideWithTerrain
  commentId: F:Global.BodyChunk.collideWithTerrain
  id: collideWithTerrain
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: collideWithTerrain
  nameWithType: BodyChunk.collideWithTerrain
  fullName: BodyChunk.collideWithTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.collideWithTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool collideWithTerrain
    return:
      type: System.Boolean
    content.vb: Public collideWithTerrain As Boolean
- uid: Global.BodyChunk.collideWithSlopes
  commentId: F:Global.BodyChunk.collideWithSlopes
  id: collideWithSlopes
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: collideWithSlopes
  nameWithType: BodyChunk.collideWithSlopes
  fullName: BodyChunk.collideWithSlopes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.collideWithSlopes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool collideWithSlopes
    return:
      type: System.Boolean
    content.vb: Public collideWithSlopes As Boolean
- uid: Global.BodyChunk.collideWithObjects
  commentId: F:Global.BodyChunk.collideWithObjects
  id: collideWithObjects
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: collideWithObjects
  nameWithType: BodyChunk.collideWithObjects
  fullName: BodyChunk.collideWithObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.collideWithObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool collideWithObjects
    return:
      type: System.Boolean
    content.vb: Public collideWithObjects As Boolean
- uid: Global.BodyChunk.loudness
  commentId: F:Global.BodyChunk.loudness
  id: loudness
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: loudness
  nameWithType: BodyChunk.loudness
  fullName: BodyChunk.loudness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.loudness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loudness
    return:
      type: System.Single
    content.vb: Public loudness As Single
- uid: Global.BodyChunk.index
  commentId: F:Global.BodyChunk.index
  id: index
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: index
  nameWithType: BodyChunk.index
  fullName: BodyChunk.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Global.BodyChunk.splashStop
  commentId: F:Global.BodyChunk.splashStop
  id: splashStop
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: splashStop
  nameWithType: BodyChunk.splashStop
  fullName: BodyChunk.splashStop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.splashStop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int splashStop
    return:
      type: System.Int32
    content.vb: Public splashStop As Integer
- uid: Global.BodyChunk.restrictInRoomRange
  commentId: F:Global.BodyChunk.restrictInRoomRange
  id: restrictInRoomRange
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: restrictInRoomRange
  nameWithType: BodyChunk.restrictInRoomRange
  fullName: BodyChunk.restrictInRoomRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.restrictInRoomRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float restrictInRoomRange
    return:
      type: System.Single
    content.vb: Public restrictInRoomRange As Single
- uid: Global.BodyChunk.defaultRestrictInRoomRange
  commentId: F:Global.BodyChunk.defaultRestrictInRoomRange
  id: defaultRestrictInRoomRange
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: defaultRestrictInRoomRange
  nameWithType: BodyChunk.defaultRestrictInRoomRange
  fullName: BodyChunk.defaultRestrictInRoomRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.defaultRestrictInRoomRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float defaultRestrictInRoomRange
    return:
      type: System.Single
    content.vb: Public defaultRestrictInRoomRange As Single
- uid: Global.BodyChunk.lastContactPoint
  commentId: F:Global.BodyChunk.lastContactPoint
  id: lastContactPoint
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: lastContactPoint
  nameWithType: BodyChunk.lastContactPoint
  fullName: BodyChunk.lastContactPoint
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.lastContactPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 lastContactPoint
    return:
      type: RWCustom.IntVector2
    content.vb: Public lastContactPoint As IntVector2
- uid: Global.BodyChunk.actAsTrigger
  commentId: F:Global.BodyChunk.actAsTrigger
  id: actAsTrigger
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: actAsTrigger
  nameWithType: BodyChunk.actAsTrigger
  fullName: BodyChunk.actAsTrigger
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.actAsTrigger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool actAsTrigger
    return:
      type: System.Boolean
    content.vb: Public actAsTrigger As Boolean
- uid: Global.BodyChunk.grabsDisableFloors
  commentId: F:Global.BodyChunk.grabsDisableFloors
  id: grabsDisableFloors
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: grabsDisableFloors
  nameWithType: BodyChunk.grabsDisableFloors
  fullName: BodyChunk.grabsDisableFloors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.grabsDisableFloors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool grabsDisableFloors
    return:
      type: System.Boolean
    content.vb: Public grabsDisableFloors As Boolean
- uid: Global.BodyChunk.burrow
  commentId: F:Global.BodyChunk.burrow
  id: burrow
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: burrow
  nameWithType: BodyChunk.burrow
  fullName: BodyChunk.burrow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.burrow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool burrow
    return:
      type: System.Boolean
    content.vb: Public burrow As Boolean
- uid: Global.BodyChunk.buried
  commentId: F:Global.BodyChunk.buried
  id: buried
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: buried
  nameWithType: BodyChunk.buried
  fullName: BodyChunk.buried
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.buried</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool buried
    return:
      type: System.Boolean
    content.vb: Public buried As Boolean
- uid: Global.BodyChunk.lastBuried
  commentId: F:Global.BodyChunk.lastBuried
  id: lastBuried
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: lastBuried
  nameWithType: BodyChunk.lastBuried
  fullName: BodyChunk.lastBuried
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.lastBuried</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastBuried
    return:
      type: System.Boolean
    content.vb: Public lastBuried As Boolean
- uid: Global.BodyChunk.terrainCurveNormal
  commentId: F:Global.BodyChunk.terrainCurveNormal
  id: terrainCurveNormal
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: terrainCurveNormal
  nameWithType: BodyChunk.terrainCurveNormal
  fullName: BodyChunk.terrainCurveNormal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BodyChunk.terrainCurveNormal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 terrainCurveNormal
    return:
      type: UnityEngine.Vector2
    content.vb: Public terrainCurveNormal As Vector2
- uid: Global.BodyChunk.VisibilityBonus(System.Single)
  commentId: M:Global.BodyChunk.VisibilityBonus(System.Single)
  id: VisibilityBonus(System.Single)
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: VisibilityBonus(float)
  nameWithType: BodyChunk.VisibilityBonus(float)
  fullName: BodyChunk.VisibilityBonus(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.VisibilityBonus(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float VisibilityBonus(float movementBasedVision)
    parameters:
    - id: movementBasedVision
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>movementBasedVision</parameter>
            <parameter>M:BodyChunk.VisibilityBonus(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BodyChunk.VisibilityBonus(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function VisibilityBonus(movementBasedVision As Single) As Single
  overload: Global.BodyChunk.VisibilityBonus*
  nameWithType.vb: BodyChunk.VisibilityBonus(Single)
  fullName.vb: BodyChunk.VisibilityBonus(Single)
  name.vb: VisibilityBonus(Single)
- uid: Global.BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)
  id: '#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)'
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: BodyChunk(PhysicalObject, int, Vector2, float, float)
  nameWithType: BodyChunk.BodyChunk(PhysicalObject, int, Vector2, float, float)
  fullName: BodyChunk.BodyChunk(PhysicalObject, int, UnityEngine.Vector2, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>BodyChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk(PhysicalObject owner, int index, Vector2 pos, float rad, float mass)
    parameters:
    - id: owner
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: mass
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mass</parameter>
            <parameter>M:BodyChunk.#ctor(PhysicalObject,System.Int32,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As PhysicalObject, index As Integer, pos As Vector2, rad As Single, mass As Single)
  overload: Global.BodyChunk.#ctor*
  nameWithType.vb: BodyChunk.New(PhysicalObject, Integer, Vector2, Single, Single)
  fullName.vb: BodyChunk.New(PhysicalObject, Integer, UnityEngine.Vector2, Single, Single)
  name.vb: New(PhysicalObject, Integer, Vector2, Single, Single)
- uid: Global.BodyChunk.Update
  commentId: M:Global.BodyChunk.Update
  id: Update
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BodyChunk.Update()
  fullName: BodyChunk.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.BodyChunk.Update*
- uid: Global.BodyChunk.HardSetPosition(UnityEngine.Vector2)
  commentId: M:Global.BodyChunk.HardSetPosition(UnityEngine.Vector2)
  id: HardSetPosition(UnityEngine.Vector2)
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: HardSetPosition(Vector2)
  nameWithType: BodyChunk.HardSetPosition(Vector2)
  fullName: BodyChunk.HardSetPosition(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.HardSetPosition(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HardSetPosition(Vector2 newPos)
    parameters:
    - id: newPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newPos</parameter>
            <parameter>M:BodyChunk.HardSetPosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HardSetPosition(newPos As Vector2)
  overload: Global.BodyChunk.HardSetPosition*
- uid: Global.BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  commentId: M:Global.BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  id: MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: MoveFromOutsideMyUpdate(bool, Vector2)
  nameWithType: BodyChunk.MoveFromOutsideMyUpdate(bool, Vector2)
  fullName: BodyChunk.MoveFromOutsideMyUpdate(bool, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveFromOutsideMyUpdate(bool eu, Vector2 moveTo)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: moveTo
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>moveTo</parameter>
            <parameter>M:BodyChunk.MoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveFromOutsideMyUpdate(eu As Boolean, moveTo As Vector2)
  overload: Global.BodyChunk.MoveFromOutsideMyUpdate*
  nameWithType.vb: BodyChunk.MoveFromOutsideMyUpdate(Boolean, Vector2)
  fullName.vb: BodyChunk.MoveFromOutsideMyUpdate(Boolean, UnityEngine.Vector2)
  name.vb: MoveFromOutsideMyUpdate(Boolean, Vector2)
- uid: Global.BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  commentId: M:Global.BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  id: RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: RelativeMoveFromOutsideMyUpdate(bool, Vector2)
  nameWithType: BodyChunk.RelativeMoveFromOutsideMyUpdate(bool, Vector2)
  fullName: BodyChunk.RelativeMoveFromOutsideMyUpdate(bool, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RelativeMoveFromOutsideMyUpdate(bool eu, Vector2 move)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: move
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>move</parameter>
            <parameter>M:BodyChunk.RelativeMoveFromOutsideMyUpdate(System.Boolean,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RelativeMoveFromOutsideMyUpdate(eu As Boolean, move As Vector2)
  overload: Global.BodyChunk.RelativeMoveFromOutsideMyUpdate*
  nameWithType.vb: BodyChunk.RelativeMoveFromOutsideMyUpdate(Boolean, Vector2)
  fullName.vb: BodyChunk.RelativeMoveFromOutsideMyUpdate(Boolean, UnityEngine.Vector2)
  name.vb: RelativeMoveFromOutsideMyUpdate(Boolean, Vector2)
- uid: Global.BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)
  commentId: M:Global.BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)
  id: MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: MoveWithOtherObject(bool, BodyChunk, Vector2)
  nameWithType: BodyChunk.MoveWithOtherObject(bool, BodyChunk, Vector2)
  fullName: BodyChunk.MoveWithOtherObject(bool, BodyChunk, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveWithOtherObject(bool eu, BodyChunk otherChunk, Vector2 relativePosition)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: otherChunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherChunk</parameter>
            <parameter>M:BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: relativePosition
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>relativePosition</parameter>
            <parameter>M:BodyChunk.MoveWithOtherObject(System.Boolean,BodyChunk,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveWithOtherObject(eu As Boolean, otherChunk As BodyChunk, relativePosition As Vector2)
  overload: Global.BodyChunk.MoveWithOtherObject*
  nameWithType.vb: BodyChunk.MoveWithOtherObject(Boolean, BodyChunk, Vector2)
  fullName.vb: BodyChunk.MoveWithOtherObject(Boolean, BodyChunk, UnityEngine.Vector2)
  name.vb: MoveWithOtherObject(Boolean, BodyChunk, Vector2)
- uid: Global.BodyChunk.Rotation
  commentId: P:Global.BodyChunk.Rotation
  id: Rotation
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: Rotation
  nameWithType: BodyChunk.Rotation
  fullName: BodyChunk.Rotation
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.Rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 Rotation { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property Rotation As Vector2
  overload: Global.BodyChunk.Rotation*
- uid: Global.BodyChunk.goThroughFloors
  commentId: P:Global.BodyChunk.goThroughFloors
  id: goThroughFloors
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: goThroughFloors
  nameWithType: BodyChunk.goThroughFloors
  fullName: BodyChunk.goThroughFloors
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.goThroughFloors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool goThroughFloors { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property goThroughFloors As Boolean
  overload: Global.BodyChunk.goThroughFloors*
- uid: Global.BodyChunk.ContactPoint
  commentId: P:Global.BodyChunk.ContactPoint
  id: ContactPoint
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: ContactPoint
  nameWithType: BodyChunk.ContactPoint
  fullName: BodyChunk.ContactPoint
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.ContactPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 ContactPoint { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property ContactPoint As IntVector2
  overload: Global.BodyChunk.ContactPoint*
- uid: Global.BodyChunk.onSlope
  commentId: P:Global.BodyChunk.onSlope
  id: onSlope
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: onSlope
  nameWithType: BodyChunk.onSlope
  fullName: BodyChunk.onSlope
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.onSlope</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int onSlope { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property onSlope As Integer
  overload: Global.BodyChunk.onSlope*
- uid: Global.BodyChunk.owner
  commentId: P:Global.BodyChunk.owner
  id: owner
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: BodyChunk.owner
  fullName: BodyChunk.owner
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject owner { get; }
    parameters: []
    return:
      type: Global.PhysicalObject
    content.vb: Public ReadOnly Property owner As PhysicalObject
  overload: Global.BodyChunk.owner*
- uid: Global.BodyChunk.submersion
  commentId: P:Global.BodyChunk.submersion
  id: submersion
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: submersion
  nameWithType: BodyChunk.submersion
  fullName: BodyChunk.submersion
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.submersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float submersion { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property submersion As Single
  overload: Global.BodyChunk.submersion*
- uid: Global.BodyChunk.sandSupports
  commentId: P:Global.BodyChunk.sandSupports
  id: sandSupports
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: sandSupports
  nameWithType: BodyChunk.sandSupports
  fullName: BodyChunk.sandSupports
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.sandSupports</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool sandSupports { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property sandSupports As Boolean
  overload: Global.BodyChunk.sandSupports*
- uid: Global.BodyChunk.sandSubmersion
  commentId: P:Global.BodyChunk.sandSubmersion
  id: sandSubmersion
  parent: Global.BodyChunk
  langs:
  - csharp
  - vb
  name: sandSubmersion
  nameWithType: BodyChunk.sandSubmersion
  fullName: BodyChunk.sandSubmersion
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:BodyChunk.sandSubmersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sandSubmersion { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property sandSubmersion As Single
  overload: Global.BodyChunk.sandSubmersion*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.BodyChunk.VisibilityBonus*
  commentId: Overload:Global.BodyChunk.VisibilityBonus
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_VisibilityBonus_System_Single_
  name: VisibilityBonus
  nameWithType: BodyChunk.VisibilityBonus
  fullName: BodyChunk.VisibilityBonus
- uid: Global.BodyChunk.#ctor*
  commentId: Overload:Global.BodyChunk.#ctor
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk__ctor_PhysicalObject_System_Int32_UnityEngine_Vector2_System_Single_System_Single_
  name: BodyChunk
  nameWithType: BodyChunk.BodyChunk
  fullName: BodyChunk.BodyChunk
  nameWithType.vb: BodyChunk.New
  fullName.vb: BodyChunk.New
  name.vb: New
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.BodyChunk.Update*
  commentId: Overload:Global.BodyChunk.Update
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_Update
  name: Update
  nameWithType: BodyChunk.Update
  fullName: BodyChunk.Update
- uid: Global.BodyChunk.HardSetPosition*
  commentId: Overload:Global.BodyChunk.HardSetPosition
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_HardSetPosition_UnityEngine_Vector2_
  name: HardSetPosition
  nameWithType: BodyChunk.HardSetPosition
  fullName: BodyChunk.HardSetPosition
- uid: Global.BodyChunk.MoveFromOutsideMyUpdate*
  commentId: Overload:Global.BodyChunk.MoveFromOutsideMyUpdate
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_MoveFromOutsideMyUpdate_System_Boolean_UnityEngine_Vector2_
  name: MoveFromOutsideMyUpdate
  nameWithType: BodyChunk.MoveFromOutsideMyUpdate
  fullName: BodyChunk.MoveFromOutsideMyUpdate
- uid: Global.BodyChunk.RelativeMoveFromOutsideMyUpdate*
  commentId: Overload:Global.BodyChunk.RelativeMoveFromOutsideMyUpdate
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_RelativeMoveFromOutsideMyUpdate_System_Boolean_UnityEngine_Vector2_
  name: RelativeMoveFromOutsideMyUpdate
  nameWithType: BodyChunk.RelativeMoveFromOutsideMyUpdate
  fullName: BodyChunk.RelativeMoveFromOutsideMyUpdate
- uid: Global.BodyChunk.MoveWithOtherObject*
  commentId: Overload:Global.BodyChunk.MoveWithOtherObject
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_MoveWithOtherObject_System_Boolean_BodyChunk_UnityEngine_Vector2_
  name: MoveWithOtherObject
  nameWithType: BodyChunk.MoveWithOtherObject
  fullName: BodyChunk.MoveWithOtherObject
- uid: Global.BodyChunk.Rotation*
  commentId: Overload:Global.BodyChunk.Rotation
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_Rotation
  name: Rotation
  nameWithType: BodyChunk.Rotation
  fullName: BodyChunk.Rotation
- uid: Global.BodyChunk.goThroughFloors*
  commentId: Overload:Global.BodyChunk.goThroughFloors
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_goThroughFloors
  name: goThroughFloors
  nameWithType: BodyChunk.goThroughFloors
  fullName: BodyChunk.goThroughFloors
- uid: Global.BodyChunk.ContactPoint*
  commentId: Overload:Global.BodyChunk.ContactPoint
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_ContactPoint
  name: ContactPoint
  nameWithType: BodyChunk.ContactPoint
  fullName: BodyChunk.ContactPoint
- uid: Global.BodyChunk.onSlope*
  commentId: Overload:Global.BodyChunk.onSlope
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_onSlope
  name: onSlope
  nameWithType: BodyChunk.onSlope
  fullName: BodyChunk.onSlope
- uid: Global.BodyChunk.owner*
  commentId: Overload:Global.BodyChunk.owner
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_owner
  name: owner
  nameWithType: BodyChunk.owner
  fullName: BodyChunk.owner
- uid: Global.BodyChunk.submersion*
  commentId: Overload:Global.BodyChunk.submersion
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_submersion
  name: submersion
  nameWithType: BodyChunk.submersion
  fullName: BodyChunk.submersion
- uid: Global.BodyChunk.sandSupports*
  commentId: Overload:Global.BodyChunk.sandSupports
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_sandSupports
  name: sandSupports
  nameWithType: BodyChunk.sandSupports
  fullName: BodyChunk.sandSupports
- uid: Global.BodyChunk.sandSubmersion*
  commentId: Overload:Global.BodyChunk.sandSubmersion
  isExternal: true
  href: Global.BodyChunk.html#BodyChunk_sandSubmersion
  name: sandSubmersion
  nameWithType: BodyChunk.sandSubmersion
  fullName: BodyChunk.sandSubmersion
