### YamlMime:ManagedReference
items:
- uid: Global.PhysicalObject.BodyChunkConnection
  commentId: T:Global.PhysicalObject.BodyChunkConnection
  id: PhysicalObject.BodyChunkConnection
  parent: Global
  children:
  - Global.PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)
  - Global.PhysicalObject.BodyChunkConnection.Update
  - Global.PhysicalObject.BodyChunkConnection.active
  - Global.PhysicalObject.BodyChunkConnection.chunk1
  - Global.PhysicalObject.BodyChunkConnection.chunk2
  - Global.PhysicalObject.BodyChunkConnection.distance
  - Global.PhysicalObject.BodyChunkConnection.elasticity
  - Global.PhysicalObject.BodyChunkConnection.type
  - Global.PhysicalObject.BodyChunkConnection.weightSymmetry
  langs:
  - csharp
  - vb
  name: PhysicalObject.BodyChunkConnection
  nameWithType: PhysicalObject.BodyChunkConnection
  fullName: PhysicalObject.BodyChunkConnection
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PhysicalObject.BodyChunkConnection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class PhysicalObject.BodyChunkConnection
    content.vb: Public Class PhysicalObject.BodyChunkConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PhysicalObject.BodyChunkConnection.chunk1
  commentId: F:Global.PhysicalObject.BodyChunkConnection.chunk1
  id: chunk1
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: chunk1
  nameWithType: PhysicalObject.BodyChunkConnection.chunk1
  fullName: PhysicalObject.BodyChunkConnection.chunk1
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.chunk1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk chunk1
    return:
      type: Global.BodyChunk
    content.vb: Public chunk1 As BodyChunk
- uid: Global.PhysicalObject.BodyChunkConnection.chunk2
  commentId: F:Global.PhysicalObject.BodyChunkConnection.chunk2
  id: chunk2
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: chunk2
  nameWithType: PhysicalObject.BodyChunkConnection.chunk2
  fullName: PhysicalObject.BodyChunkConnection.chunk2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.chunk2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk chunk2
    return:
      type: Global.BodyChunk
    content.vb: Public chunk2 As BodyChunk
- uid: Global.PhysicalObject.BodyChunkConnection.distance
  commentId: F:Global.PhysicalObject.BodyChunkConnection.distance
  id: distance
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: distance
  nameWithType: PhysicalObject.BodyChunkConnection.distance
  fullName: PhysicalObject.BodyChunkConnection.distance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.distance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float distance
    return:
      type: System.Single
    content.vb: Public distance As Single
- uid: Global.PhysicalObject.BodyChunkConnection.elasticity
  commentId: F:Global.PhysicalObject.BodyChunkConnection.elasticity
  id: elasticity
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: elasticity
  nameWithType: PhysicalObject.BodyChunkConnection.elasticity
  fullName: PhysicalObject.BodyChunkConnection.elasticity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.elasticity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float elasticity
    return:
      type: System.Single
    content.vb: Public elasticity As Single
- uid: Global.PhysicalObject.BodyChunkConnection.weightSymmetry
  commentId: F:Global.PhysicalObject.BodyChunkConnection.weightSymmetry
  id: weightSymmetry
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: weightSymmetry
  nameWithType: PhysicalObject.BodyChunkConnection.weightSymmetry
  fullName: PhysicalObject.BodyChunkConnection.weightSymmetry
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.weightSymmetry</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float weightSymmetry
    return:
      type: System.Single
    content.vb: Public weightSymmetry As Single
- uid: Global.PhysicalObject.BodyChunkConnection.active
  commentId: F:Global.PhysicalObject.BodyChunkConnection.active
  id: active
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: active
  nameWithType: PhysicalObject.BodyChunkConnection.active
  fullName: PhysicalObject.BodyChunkConnection.active
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.active</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool active
    return:
      type: System.Boolean
    content.vb: Public active As Boolean
- uid: Global.PhysicalObject.BodyChunkConnection.type
  commentId: F:Global.PhysicalObject.BodyChunkConnection.type
  id: type
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: type
  nameWithType: PhysicalObject.BodyChunkConnection.type
  fullName: PhysicalObject.BodyChunkConnection.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PhysicalObject.BodyChunkConnection.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject.BodyChunkConnection.Type type
    return:
      type: Global.PhysicalObject.BodyChunkConnection.Type
    content.vb: Public type As PhysicalObject.BodyChunkConnection.Type
- uid: Global.PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)
  commentId: M:Global.PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)
  id: '#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)'
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: BodyChunkConnection(BodyChunk, BodyChunk, float, Type, float, float)
  nameWithType: PhysicalObject.BodyChunkConnection.BodyChunkConnection(BodyChunk, BodyChunk, float, PhysicalObject.BodyChunkConnection.Type, float, float)
  fullName: PhysicalObject.BodyChunkConnection.BodyChunkConnection(BodyChunk, BodyChunk, float, PhysicalObject.BodyChunkConnection.Type, float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PhysicalObject.BodyChunkConnection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunkConnection(BodyChunk chunk1, BodyChunk chunk2, float distance, PhysicalObject.BodyChunkConnection.Type type, float elasticity, float weightSymmetry)
    parameters:
    - id: chunk1
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk1</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: chunk2
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk2</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: distance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>distance</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: type
      type: Global.PhysicalObject.BodyChunkConnection.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: elasticity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elasticity</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: weightSymmetry
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>weightSymmetry</parameter>
            <parameter>M:PhysicalObject.BodyChunkConnection.#ctor(BodyChunk,BodyChunk,System.Single,PhysicalObject.BodyChunkConnection.Type,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(chunk1 As BodyChunk, chunk2 As BodyChunk, distance As Single, type As PhysicalObject.BodyChunkConnection.Type, elasticity As Single, weightSymmetry As Single)
  overload: Global.PhysicalObject.BodyChunkConnection.#ctor*
  nameWithType.vb: PhysicalObject.BodyChunkConnection.New(BodyChunk, BodyChunk, Single, PhysicalObject.BodyChunkConnection.Type, Single, Single)
  fullName.vb: PhysicalObject.BodyChunkConnection.New(BodyChunk, BodyChunk, Single, PhysicalObject.BodyChunkConnection.Type, Single, Single)
  name.vb: New(BodyChunk, BodyChunk, Single, Type, Single, Single)
- uid: Global.PhysicalObject.BodyChunkConnection.Update
  commentId: M:Global.PhysicalObject.BodyChunkConnection.Update
  id: Update
  parent: Global.PhysicalObject.BodyChunkConnection
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: PhysicalObject.BodyChunkConnection.Update()
  fullName: PhysicalObject.BodyChunkConnection.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PhysicalObject.BodyChunkConnection.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.PhysicalObject.BodyChunkConnection.Update*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.PhysicalObject.BodyChunkConnection.Type
  commentId: T:Global.PhysicalObject.BodyChunkConnection.Type
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.BodyChunkConnection.Type
  nameWithType: PhysicalObject.BodyChunkConnection.Type
  fullName: PhysicalObject.BodyChunkConnection.Type
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.BodyChunkConnection
    name: BodyChunkConnection
    isExternal: true
    href: PhysicalObject.BodyChunkConnection.html
  - name: .
  - uid: Global.PhysicalObject.BodyChunkConnection.Type
    name: Type
    isExternal: true
    href: PhysicalObject.BodyChunkConnection.Type.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.BodyChunkConnection
    name: BodyChunkConnection
    isExternal: true
    href: PhysicalObject.BodyChunkConnection.html
  - name: .
  - uid: Global.PhysicalObject.BodyChunkConnection.Type
    name: Type
    isExternal: true
    href: PhysicalObject.BodyChunkConnection.Type.html
- uid: Global.PhysicalObject.BodyChunkConnection.#ctor*
  commentId: Overload:Global.PhysicalObject.BodyChunkConnection.#ctor
  isExternal: true
  href: Global.PhysicalObject.BodyChunkConnection.html#PhysicalObject_BodyChunkConnection__ctor_BodyChunk_BodyChunk_System_Single_PhysicalObject_BodyChunkConnection_Type_System_Single_System_Single_
  name: BodyChunkConnection
  nameWithType: PhysicalObject.BodyChunkConnection.BodyChunkConnection
  fullName: PhysicalObject.BodyChunkConnection.BodyChunkConnection
  nameWithType.vb: PhysicalObject.BodyChunkConnection.New
  fullName.vb: PhysicalObject.BodyChunkConnection.New
  name.vb: New
- uid: Global.PhysicalObject.BodyChunkConnection.Update*
  commentId: Overload:Global.PhysicalObject.BodyChunkConnection.Update
  isExternal: true
  href: Global.PhysicalObject.BodyChunkConnection.html#PhysicalObject_BodyChunkConnection_Update
  name: Update
  nameWithType: PhysicalObject.BodyChunkConnection.Update
  fullName: PhysicalObject.BodyChunkConnection.Update
