### YamlMime:ManagedReference
items:
- uid: Global.TriangleMesh.Triangle
  commentId: T:Global.TriangleMesh.Triangle
  id: TriangleMesh.Triangle
  parent: Global
  children:
  - Global.TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)
  - Global.TriangleMesh.Triangle.GetAt(System.Int32)
  - Global.TriangleMesh.Triangle.a
  - Global.TriangleMesh.Triangle.b
  - Global.TriangleMesh.Triangle.c
  langs:
  - csharp
  - vb
  name: TriangleMesh.Triangle
  nameWithType: TriangleMesh.Triangle
  fullName: TriangleMesh.Triangle
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TriangleMesh.Triangle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct TriangleMesh.Triangle
    content.vb: Public Structure TriangleMesh.Triangle
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.TriangleMesh.Triangle.a
  commentId: F:Global.TriangleMesh.Triangle.a
  id: a
  parent: Global.TriangleMesh.Triangle
  langs:
  - csharp
  - vb
  name: a
  nameWithType: TriangleMesh.Triangle.a
  fullName: TriangleMesh.Triangle.a
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TriangleMesh.Triangle.a</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int a
    return:
      type: System.Int32
    content.vb: Public a As Integer
- uid: Global.TriangleMesh.Triangle.b
  commentId: F:Global.TriangleMesh.Triangle.b
  id: b
  parent: Global.TriangleMesh.Triangle
  langs:
  - csharp
  - vb
  name: b
  nameWithType: TriangleMesh.Triangle.b
  fullName: TriangleMesh.Triangle.b
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TriangleMesh.Triangle.b</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int b
    return:
      type: System.Int32
    content.vb: Public b As Integer
- uid: Global.TriangleMesh.Triangle.c
  commentId: F:Global.TriangleMesh.Triangle.c
  id: c
  parent: Global.TriangleMesh.Triangle
  langs:
  - csharp
  - vb
  name: c
  nameWithType: TriangleMesh.Triangle.c
  fullName: TriangleMesh.Triangle.c
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TriangleMesh.Triangle.c</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int c
    return:
      type: System.Int32
    content.vb: Public c As Integer
- uid: Global.TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32)'
  parent: Global.TriangleMesh.Triangle
  langs:
  - csharp
  - vb
  name: Triangle(int, int, int)
  nameWithType: TriangleMesh.Triangle.Triangle(int, int, int)
  fullName: TriangleMesh.Triangle.Triangle(int, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TriangleMesh.Triangle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Triangle(int a, int b, int c)
    parameters:
    - id: a
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: b
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: c
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:TriangleMesh.Triangle.#ctor(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(a As Integer, b As Integer, c As Integer)
  overload: Global.TriangleMesh.Triangle.#ctor*
  nameWithType.vb: TriangleMesh.Triangle.New(Integer, Integer, Integer)
  fullName.vb: TriangleMesh.Triangle.New(Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer)
- uid: Global.TriangleMesh.Triangle.GetAt(System.Int32)
  commentId: M:Global.TriangleMesh.Triangle.GetAt(System.Int32)
  id: GetAt(System.Int32)
  parent: Global.TriangleMesh.Triangle
  langs:
  - csharp
  - vb
  name: GetAt(int)
  nameWithType: TriangleMesh.Triangle.GetAt(int)
  fullName: TriangleMesh.Triangle.GetAt(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:TriangleMesh.Triangle.GetAt(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetAt(int g)
    parameters:
    - id: g
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>g</parameter>
            <parameter>M:TriangleMesh.Triangle.GetAt(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:TriangleMesh.Triangle.GetAt(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAt(g As Integer) As Integer
  overload: Global.TriangleMesh.Triangle.GetAt*
  nameWithType.vb: TriangleMesh.Triangle.GetAt(Integer)
  fullName.vb: TriangleMesh.Triangle.GetAt(Integer)
  name.vb: GetAt(Integer)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.TriangleMesh.Triangle.#ctor*
  commentId: Overload:Global.TriangleMesh.Triangle.#ctor
  isExternal: true
  href: Global.TriangleMesh.Triangle.html#TriangleMesh_Triangle__ctor_System_Int32_System_Int32_System_Int32_
  name: Triangle
  nameWithType: TriangleMesh.Triangle.Triangle
  fullName: TriangleMesh.Triangle.Triangle
  nameWithType.vb: TriangleMesh.Triangle.New
  fullName.vb: TriangleMesh.Triangle.New
  name.vb: New
- uid: Global.TriangleMesh.Triangle.GetAt*
  commentId: Overload:Global.TriangleMesh.Triangle.GetAt
  isExternal: true
  href: Global.TriangleMesh.Triangle.html#TriangleMesh_Triangle_GetAt_System_Int32_
  name: GetAt
  nameWithType: TriangleMesh.Triangle.GetAt
  fullName: TriangleMesh.Triangle.GetAt
