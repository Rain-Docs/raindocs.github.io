### YamlMime:ManagedReference
items:
- uid: Watcher.BigMoth.MothLeg
  commentId: T:Watcher.BigMoth.MothLeg
  id: BigMoth.MothLeg
  parent: Watcher
  children:
  - Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)
  - Watcher.BigMoth.MothLeg.FreeMode
  - Watcher.BigMoth.MothLeg.Reset
  - Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)
  - Watcher.BigMoth.MothLeg.StepMode
  - Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)
  - Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)
  - Watcher.BigMoth.MothLeg.Update
  - Watcher.BigMoth.MothLeg.allowStepToTriggerOther
  - Watcher.BigMoth.MothLeg.backLegs
  - Watcher.BigMoth.MothLeg.backLineSpr
  - Watcher.BigMoth.MothLeg.bug
  - Watcher.BigMoth.MothLeg.conSpr
  - Watcher.BigMoth.MothLeg.connectedChunk
  - Watcher.BigMoth.MothLeg.connectionPos
  - Watcher.BigMoth.MothLeg.footPos
  - Watcher.BigMoth.MothLeg.footSpr
  - Watcher.BigMoth.MothLeg.grabbedChunk
  - Watcher.BigMoth.MothLeg.idealSpr
  - Watcher.BigMoth.MothLeg.idealStepPos
  - Watcher.BigMoth.MothLeg.index
  - Watcher.BigMoth.MothLeg.lastAwareLegExtension
  - Watcher.BigMoth.MothLeg.lastConnectionPos
  - Watcher.BigMoth.MothLeg.lastFootPos
  - Watcher.BigMoth.MothLeg.lastStepDistToNewStep
  - Watcher.BigMoth.MothLeg.legTension
  - Watcher.BigMoth.MothLeg.lineSpr
  - Watcher.BigMoth.MothLeg.maxReach
  - Watcher.BigMoth.MothLeg.pairIndex
  - Watcher.BigMoth.MothLeg.room
  - Watcher.BigMoth.MothLeg.scale
  - Watcher.BigMoth.MothLeg.securedFoot
  - Watcher.BigMoth.MothLeg.stepPos
  - Watcher.BigMoth.MothLeg.stepProgressCounter
  - Watcher.BigMoth.MothLeg.stepRadius
  - Watcher.BigMoth.MothLeg.stretchCounter
  langs:
  - csharp
  - vb
  name: BigMoth.MothLeg
  nameWithType: BigMoth.MothLeg
  fullName: Watcher.BigMoth.MothLeg
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.BigMoth.MothLeg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class BigMoth.MothLeg
    content.vb: Public Class BigMoth.MothLeg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.BigMoth.MothLeg.backLineSpr
  commentId: F:Watcher.BigMoth.MothLeg.backLineSpr
  id: backLineSpr
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: backLineSpr
  nameWithType: BigMoth.MothLeg.backLineSpr
  fullName: Watcher.BigMoth.MothLeg.backLineSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.backLineSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite backLineSpr
    return:
      type: Global.DebugSprite
    content.vb: Public backLineSpr As DebugSprite
- uid: Watcher.BigMoth.MothLeg.lineSpr
  commentId: F:Watcher.BigMoth.MothLeg.lineSpr
  id: lineSpr
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: lineSpr
  nameWithType: BigMoth.MothLeg.lineSpr
  fullName: Watcher.BigMoth.MothLeg.lineSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.lineSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite lineSpr
    return:
      type: Global.DebugSprite
    content.vb: Public lineSpr As DebugSprite
- uid: Watcher.BigMoth.MothLeg.conSpr
  commentId: F:Watcher.BigMoth.MothLeg.conSpr
  id: conSpr
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: conSpr
  nameWithType: BigMoth.MothLeg.conSpr
  fullName: Watcher.BigMoth.MothLeg.conSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.conSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite conSpr
    return:
      type: Global.DebugSprite
    content.vb: Public conSpr As DebugSprite
- uid: Watcher.BigMoth.MothLeg.footSpr
  commentId: F:Watcher.BigMoth.MothLeg.footSpr
  id: footSpr
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: footSpr
  nameWithType: BigMoth.MothLeg.footSpr
  fullName: Watcher.BigMoth.MothLeg.footSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.footSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite footSpr
    return:
      type: Global.DebugSprite
    content.vb: Public footSpr As DebugSprite
- uid: Watcher.BigMoth.MothLeg.idealSpr
  commentId: F:Watcher.BigMoth.MothLeg.idealSpr
  id: idealSpr
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: idealSpr
  nameWithType: BigMoth.MothLeg.idealSpr
  fullName: Watcher.BigMoth.MothLeg.idealSpr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.idealSpr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugSprite idealSpr
    return:
      type: Global.DebugSprite
    content.vb: Public idealSpr As DebugSprite
- uid: Watcher.BigMoth.MothLeg.bug
  commentId: F:Watcher.BigMoth.MothLeg.bug
  id: bug
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: bug
  nameWithType: BigMoth.MothLeg.bug
  fullName: Watcher.BigMoth.MothLeg.bug
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.bug</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BigMoth bug
    return:
      type: Watcher.BigMoth
    content.vb: Public bug As BigMoth
- uid: Watcher.BigMoth.MothLeg.pairIndex
  commentId: F:Watcher.BigMoth.MothLeg.pairIndex
  id: pairIndex
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: pairIndex
  nameWithType: BigMoth.MothLeg.pairIndex
  fullName: Watcher.BigMoth.MothLeg.pairIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.pairIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pairIndex
    return:
      type: System.Int32
    content.vb: Public pairIndex As Integer
- uid: Watcher.BigMoth.MothLeg.index
  commentId: F:Watcher.BigMoth.MothLeg.index
  id: index
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: index
  nameWithType: BigMoth.MothLeg.index
  fullName: Watcher.BigMoth.MothLeg.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Watcher.BigMoth.MothLeg.connectionPos
  commentId: F:Watcher.BigMoth.MothLeg.connectionPos
  id: connectionPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: connectionPos
  nameWithType: BigMoth.MothLeg.connectionPos
  fullName: Watcher.BigMoth.MothLeg.connectionPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.connectionPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 connectionPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public connectionPos As Vector2
- uid: Watcher.BigMoth.MothLeg.lastConnectionPos
  commentId: F:Watcher.BigMoth.MothLeg.lastConnectionPos
  id: lastConnectionPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: lastConnectionPos
  nameWithType: BigMoth.MothLeg.lastConnectionPos
  fullName: Watcher.BigMoth.MothLeg.lastConnectionPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.lastConnectionPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastConnectionPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastConnectionPos As Vector2
- uid: Watcher.BigMoth.MothLeg.footPos
  commentId: F:Watcher.BigMoth.MothLeg.footPos
  id: footPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: footPos
  nameWithType: BigMoth.MothLeg.footPos
  fullName: Watcher.BigMoth.MothLeg.footPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.footPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 footPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public footPos As Vector2
- uid: Watcher.BigMoth.MothLeg.lastFootPos
  commentId: F:Watcher.BigMoth.MothLeg.lastFootPos
  id: lastFootPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: lastFootPos
  nameWithType: BigMoth.MothLeg.lastFootPos
  fullName: Watcher.BigMoth.MothLeg.lastFootPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.lastFootPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastFootPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastFootPos As Vector2
- uid: Watcher.BigMoth.MothLeg.stepPos
  commentId: F:Watcher.BigMoth.MothLeg.stepPos
  id: stepPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: stepPos
  nameWithType: BigMoth.MothLeg.stepPos
  fullName: Watcher.BigMoth.MothLeg.stepPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.stepPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? stepPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public stepPos As Vector2?
- uid: Watcher.BigMoth.MothLeg.idealStepPos
  commentId: F:Watcher.BigMoth.MothLeg.idealStepPos
  id: idealStepPos
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: idealStepPos
  nameWithType: BigMoth.MothLeg.idealStepPos
  fullName: Watcher.BigMoth.MothLeg.idealStepPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.idealStepPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? idealStepPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public idealStepPos As Vector2?
- uid: Watcher.BigMoth.MothLeg.securedFoot
  commentId: F:Watcher.BigMoth.MothLeg.securedFoot
  id: securedFoot
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: securedFoot
  nameWithType: BigMoth.MothLeg.securedFoot
  fullName: Watcher.BigMoth.MothLeg.securedFoot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.securedFoot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool securedFoot
    return:
      type: System.Boolean
    content.vb: Public securedFoot As Boolean
- uid: Watcher.BigMoth.MothLeg.backLegs
  commentId: F:Watcher.BigMoth.MothLeg.backLegs
  id: backLegs
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: backLegs
  nameWithType: BigMoth.MothLeg.backLegs
  fullName: Watcher.BigMoth.MothLeg.backLegs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.backLegs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool backLegs
    return:
      type: System.Boolean
    content.vb: Public backLegs As Boolean
- uid: Watcher.BigMoth.MothLeg.connectedChunk
  commentId: F:Watcher.BigMoth.MothLeg.connectedChunk
  id: connectedChunk
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: connectedChunk
  nameWithType: BigMoth.MothLeg.connectedChunk
  fullName: Watcher.BigMoth.MothLeg.connectedChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.connectedChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int connectedChunk
    return:
      type: System.Int32
    content.vb: Public connectedChunk As Integer
- uid: Watcher.BigMoth.MothLeg.maxReach
  commentId: F:Watcher.BigMoth.MothLeg.maxReach
  id: maxReach
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: maxReach
  nameWithType: BigMoth.MothLeg.maxReach
  fullName: Watcher.BigMoth.MothLeg.maxReach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.maxReach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxReach
    return:
      type: System.Single
    content.vb: Public maxReach As Single
- uid: Watcher.BigMoth.MothLeg.stepRadius
  commentId: F:Watcher.BigMoth.MothLeg.stepRadius
  id: stepRadius
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: stepRadius
  nameWithType: BigMoth.MothLeg.stepRadius
  fullName: Watcher.BigMoth.MothLeg.stepRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.stepRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stepRadius
    return:
      type: System.Single
    content.vb: Public stepRadius As Single
- uid: Watcher.BigMoth.MothLeg.stretchCounter
  commentId: F:Watcher.BigMoth.MothLeg.stretchCounter
  id: stretchCounter
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: stretchCounter
  nameWithType: BigMoth.MothLeg.stretchCounter
  fullName: Watcher.BigMoth.MothLeg.stretchCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.stretchCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stretchCounter
    return:
      type: System.Int32
    content.vb: Public stretchCounter As Integer
- uid: Watcher.BigMoth.MothLeg.legTension
  commentId: F:Watcher.BigMoth.MothLeg.legTension
  id: legTension
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: legTension
  nameWithType: BigMoth.MothLeg.legTension
  fullName: Watcher.BigMoth.MothLeg.legTension
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.legTension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float legTension
    return:
      type: System.Single
    content.vb: Public legTension As Single
- uid: Watcher.BigMoth.MothLeg.lastAwareLegExtension
  commentId: F:Watcher.BigMoth.MothLeg.lastAwareLegExtension
  id: lastAwareLegExtension
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: lastAwareLegExtension
  nameWithType: BigMoth.MothLeg.lastAwareLegExtension
  fullName: Watcher.BigMoth.MothLeg.lastAwareLegExtension
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.lastAwareLegExtension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastAwareLegExtension
    return:
      type: System.Single
    content.vb: Public lastAwareLegExtension As Single
- uid: Watcher.BigMoth.MothLeg.allowStepToTriggerOther
  commentId: F:Watcher.BigMoth.MothLeg.allowStepToTriggerOther
  id: allowStepToTriggerOther
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: allowStepToTriggerOther
  nameWithType: BigMoth.MothLeg.allowStepToTriggerOther
  fullName: Watcher.BigMoth.MothLeg.allowStepToTriggerOther
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.allowStepToTriggerOther</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool allowStepToTriggerOther
    return:
      type: System.Boolean
    content.vb: Public allowStepToTriggerOther As Boolean
- uid: Watcher.BigMoth.MothLeg.lastStepDistToNewStep
  commentId: F:Watcher.BigMoth.MothLeg.lastStepDistToNewStep
  id: lastStepDistToNewStep
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: lastStepDistToNewStep
  nameWithType: BigMoth.MothLeg.lastStepDistToNewStep
  fullName: Watcher.BigMoth.MothLeg.lastStepDistToNewStep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.lastStepDistToNewStep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastStepDistToNewStep
    return:
      type: System.Single
    content.vb: Public lastStepDistToNewStep As Single
- uid: Watcher.BigMoth.MothLeg.stepProgressCounter
  commentId: F:Watcher.BigMoth.MothLeg.stepProgressCounter
  id: stepProgressCounter
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: stepProgressCounter
  nameWithType: BigMoth.MothLeg.stepProgressCounter
  fullName: Watcher.BigMoth.MothLeg.stepProgressCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.stepProgressCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stepProgressCounter
    return:
      type: System.Single
    content.vb: Public stepProgressCounter As Single
- uid: Watcher.BigMoth.MothLeg.grabbedChunk
  commentId: F:Watcher.BigMoth.MothLeg.grabbedChunk
  id: grabbedChunk
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: grabbedChunk
  nameWithType: BigMoth.MothLeg.grabbedChunk
  fullName: Watcher.BigMoth.MothLeg.grabbedChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.BigMoth.MothLeg.grabbedChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk grabbedChunk
    return:
      type: Global.BodyChunk
    content.vb: Public grabbedChunk As BodyChunk
- uid: Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)
  commentId: M:Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)
  id: '#ctor(Watcher.BigMoth,System.Int32,System.Int32)'
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: MothLeg(BigMoth, int, int)
  nameWithType: BigMoth.MothLeg.MothLeg(BigMoth, int, int)
  fullName: Watcher.BigMoth.MothLeg.MothLeg(Watcher.BigMoth, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.BigMoth.MothLeg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MothLeg(BigMoth bug, int pairIndex, int index)
    parameters:
    - id: bug
      type: Watcher.BigMoth
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bug</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: pairIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pairIndex</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.#ctor(Watcher.BigMoth,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(bug As BigMoth, pairIndex As Integer, index As Integer)
  overload: Watcher.BigMoth.MothLeg.#ctor*
  nameWithType.vb: BigMoth.MothLeg.New(BigMoth, Integer, Integer)
  fullName.vb: Watcher.BigMoth.MothLeg.New(Watcher.BigMoth, Integer, Integer)
  name.vb: New(BigMoth, Integer, Integer)
- uid: Watcher.BigMoth.MothLeg.Update
  commentId: M:Watcher.BigMoth.MothLeg.Update
  id: Update
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BigMoth.MothLeg.Update()
  fullName: Watcher.BigMoth.MothLeg.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.BigMoth.MothLeg.Update*
- uid: Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)
  commentId: M:Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)
  id: TryGrab(PhysicalObject)
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: TryGrab(PhysicalObject)
  nameWithType: BigMoth.MothLeg.TryGrab(PhysicalObject)
  fullName: Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool TryGrab(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.TryGrab(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function TryGrab(obj As PhysicalObject) As Boolean
  overload: Watcher.BigMoth.MothLeg.TryGrab*
- uid: Watcher.BigMoth.MothLeg.StepMode
  commentId: M:Watcher.BigMoth.MothLeg.StepMode
  id: StepMode
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: StepMode()
  nameWithType: BigMoth.MothLeg.StepMode()
  fullName: Watcher.BigMoth.MothLeg.StepMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.StepMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StepMode()
    content.vb: Public Sub StepMode()
  overload: Watcher.BigMoth.MothLeg.StepMode*
- uid: Watcher.BigMoth.MothLeg.FreeMode
  commentId: M:Watcher.BigMoth.MothLeg.FreeMode
  id: FreeMode
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: FreeMode()
  nameWithType: BigMoth.MothLeg.FreeMode()
  fullName: Watcher.BigMoth.MothLeg.FreeMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.FreeMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FreeMode()
    content.vb: Public Sub FreeMode()
  overload: Watcher.BigMoth.MothLeg.FreeMode*
- uid: Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)
  commentId: M:Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)
  id: SetIdealStepPos(UnityEngine.Vector2)
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: SetIdealStepPos(Vector2)
  nameWithType: BigMoth.MothLeg.SetIdealStepPos(Vector2)
  fullName: Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetIdealStepPos(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.SetIdealStepPos(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetIdealStepPos(pos As Vector2)
  overload: Watcher.BigMoth.MothLeg.SetIdealStepPos*
- uid: Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)
  commentId: M:Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)
  id: TryPlaceFoot(UnityEngine.Vector2)
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: TryPlaceFoot(Vector2)
  nameWithType: BigMoth.MothLeg.TryPlaceFoot(Vector2)
  fullName: Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool TryPlaceFoot(Vector2 idealPos)
    parameters:
    - id: idealPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>idealPos</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.BigMoth.MothLeg.TryPlaceFoot(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function TryPlaceFoot(idealPos As Vector2) As Boolean
  overload: Watcher.BigMoth.MothLeg.TryPlaceFoot*
- uid: Watcher.BigMoth.MothLeg.Reset
  commentId: M:Watcher.BigMoth.MothLeg.Reset
  id: Reset
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: BigMoth.MothLeg.Reset()
  fullName: Watcher.BigMoth.MothLeg.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.BigMoth.MothLeg.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Watcher.BigMoth.MothLeg.Reset*
- uid: Watcher.BigMoth.MothLeg.scale
  commentId: P:Watcher.BigMoth.MothLeg.scale
  id: scale
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: scale
  nameWithType: BigMoth.MothLeg.scale
  fullName: Watcher.BigMoth.MothLeg.scale
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.BigMoth.MothLeg.scale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scale { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property scale As Single
  overload: Watcher.BigMoth.MothLeg.scale*
- uid: Watcher.BigMoth.MothLeg.room
  commentId: P:Watcher.BigMoth.MothLeg.room
  id: room
  parent: Watcher.BigMoth.MothLeg
  langs:
  - csharp
  - vb
  name: room
  nameWithType: BigMoth.MothLeg.room
  fullName: Watcher.BigMoth.MothLeg.room
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.BigMoth.MothLeg.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: Public ReadOnly Property room As Room
  overload: Watcher.BigMoth.MothLeg.room*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.DebugSprite
  commentId: T:Global.DebugSprite
  isExternal: true
  href: DebugSprite.html
  name: DebugSprite
  nameWithType: DebugSprite
  fullName: DebugSprite
- uid: Watcher.BigMoth
  commentId: T:Watcher.BigMoth
  parent: Watcher
  isExternal: true
  href: Watcher.BigMoth.html
  name: BigMoth
  nameWithType: BigMoth
  fullName: Watcher.BigMoth
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Watcher.BigMoth.MothLeg.#ctor*
  commentId: Overload:Watcher.BigMoth.MothLeg.#ctor
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg__ctor_Watcher_BigMoth_System_Int32_System_Int32_
  name: MothLeg
  nameWithType: BigMoth.MothLeg.MothLeg
  fullName: Watcher.BigMoth.MothLeg.MothLeg
  nameWithType.vb: BigMoth.MothLeg.New
  fullName.vb: Watcher.BigMoth.MothLeg.New
  name.vb: New
- uid: Watcher.BigMoth.MothLeg.Update*
  commentId: Overload:Watcher.BigMoth.MothLeg.Update
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_Update
  name: Update
  nameWithType: BigMoth.MothLeg.Update
  fullName: Watcher.BigMoth.MothLeg.Update
- uid: Watcher.BigMoth.MothLeg.TryGrab*
  commentId: Overload:Watcher.BigMoth.MothLeg.TryGrab
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_TryGrab_PhysicalObject_
  name: TryGrab
  nameWithType: BigMoth.MothLeg.TryGrab
  fullName: Watcher.BigMoth.MothLeg.TryGrab
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Watcher.BigMoth.MothLeg.StepMode*
  commentId: Overload:Watcher.BigMoth.MothLeg.StepMode
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_StepMode
  name: StepMode
  nameWithType: BigMoth.MothLeg.StepMode
  fullName: Watcher.BigMoth.MothLeg.StepMode
- uid: Watcher.BigMoth.MothLeg.FreeMode*
  commentId: Overload:Watcher.BigMoth.MothLeg.FreeMode
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_FreeMode
  name: FreeMode
  nameWithType: BigMoth.MothLeg.FreeMode
  fullName: Watcher.BigMoth.MothLeg.FreeMode
- uid: Watcher.BigMoth.MothLeg.SetIdealStepPos*
  commentId: Overload:Watcher.BigMoth.MothLeg.SetIdealStepPos
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_SetIdealStepPos_UnityEngine_Vector2_
  name: SetIdealStepPos
  nameWithType: BigMoth.MothLeg.SetIdealStepPos
  fullName: Watcher.BigMoth.MothLeg.SetIdealStepPos
- uid: Watcher.BigMoth.MothLeg.TryPlaceFoot*
  commentId: Overload:Watcher.BigMoth.MothLeg.TryPlaceFoot
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_TryPlaceFoot_UnityEngine_Vector2_
  name: TryPlaceFoot
  nameWithType: BigMoth.MothLeg.TryPlaceFoot
  fullName: Watcher.BigMoth.MothLeg.TryPlaceFoot
- uid: Watcher.BigMoth.MothLeg.Reset*
  commentId: Overload:Watcher.BigMoth.MothLeg.Reset
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_Reset
  name: Reset
  nameWithType: BigMoth.MothLeg.Reset
  fullName: Watcher.BigMoth.MothLeg.Reset
- uid: Watcher.BigMoth.MothLeg.scale*
  commentId: Overload:Watcher.BigMoth.MothLeg.scale
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_scale
  name: scale
  nameWithType: BigMoth.MothLeg.scale
  fullName: Watcher.BigMoth.MothLeg.scale
- uid: Watcher.BigMoth.MothLeg.room*
  commentId: Overload:Watcher.BigMoth.MothLeg.room
  isExternal: true
  href: Watcher.BigMoth.MothLeg.html#Watcher_BigMoth_MothLeg_room
  name: room
  nameWithType: BigMoth.MothLeg.room
  fullName: Watcher.BigMoth.MothLeg.room
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
