### YamlMime:ManagedReference
items:
- uid: Global.Region
  commentId: T:Global.Region
  id: Region
  parent: Global
  children:
  - Global.Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)
  - Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)
  - Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)
  - Global.Region.CyclesToDepleteASwarmRoom(System.Int32)
  - Global.Region.EquivalentRegion(System.String,System.String)
  - Global.Region.GetFullRegionOrder
  - Global.Region.GetFullRegionOrder(SlugcatStats.Timeline)
  - Global.Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)
  - Global.Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)
  - Global.Region.GetRegionFullName(System.String,SlugcatStats.Name)
  - Global.Region.GetRegionLandscapeScene(System.String)
  - Global.Region.GetRoomSettingsTemplate(System.String)
  - Global.Region.GetVanillaEquivalentRegionAcronym(System.String)
  - Global.Region.HasSentientRotResistance(System.String)
  - Global.Region.HasWarpFatigueResistance(System.String)
  - Global.Region.IsAncientUrbanRegion(System.String)
  - Global.Region.IsDaemonRegion(System.String)
  - Global.Region.IsRoomInRegion(System.Int32)
  - Global.Region.IsSentientRotRegion(System.String)
  - Global.Region.IsShatteredTerraceRegion(System.String)
  - Global.Region.IsVanillaSentientRotRegion(System.String)
  - Global.Region.IsWatcherVanillaRegion(System.String)
  - Global.Region.LoadAllRegions(SlugcatStats.Name)
  - Global.Region.LoadAllRegions(SlugcatStats.Timeline)
  - Global.Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)
  - Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  - Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)
  - Global.Region.NumberOfRoomsInRegion(System.String)
  - Global.Region.RegionColor(System.String)
  - Global.Region.RegionReadyToWarp
  - Global.Region.ReloadRoomSettingsTemplate(System.String)
  - Global.Region.WarpRegions
  - Global.Region.altSubRegions
  - Global.Region.firstRoomIndex
  - Global.Region.name
  - Global.Region.numberOfRooms
  - Global.Region.propertiesWaterColor
  - Global.Region.regionNumber
  - Global.Region.regionParams
  - Global.Region.roomSettingTemplateNames
  - Global.Region.roomSettingsTemplates
  - Global.Region.subRegions
  langs:
  - csharp
  - vb
  name: Region
  nameWithType: Region
  fullName: Region
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Region
    content.vb: Public Class Region
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Region.name
  commentId: F:Global.Region.name
  id: name
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: name
  nameWithType: Region.name
  fullName: Region.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.Region.numberOfRooms
  commentId: F:Global.Region.numberOfRooms
  id: numberOfRooms
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: numberOfRooms
  nameWithType: Region.numberOfRooms
  fullName: Region.numberOfRooms
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.numberOfRooms</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int numberOfRooms
    return:
      type: System.Int32
    content.vb: Public numberOfRooms As Integer
- uid: Global.Region.firstRoomIndex
  commentId: F:Global.Region.firstRoomIndex
  id: firstRoomIndex
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: firstRoomIndex
  nameWithType: Region.firstRoomIndex
  fullName: Region.firstRoomIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.firstRoomIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int firstRoomIndex
    return:
      type: System.Int32
    content.vb: Public firstRoomIndex As Integer
- uid: Global.Region.regionNumber
  commentId: F:Global.Region.regionNumber
  id: regionNumber
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: regionNumber
  nameWithType: Region.regionNumber
  fullName: Region.regionNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.regionNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int regionNumber
    return:
      type: System.Int32
    content.vb: Public regionNumber As Integer
- uid: Global.Region.roomSettingsTemplates
  commentId: F:Global.Region.roomSettingsTemplates
  id: roomSettingsTemplates
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: roomSettingsTemplates
  nameWithType: Region.roomSettingsTemplates
  fullName: Region.roomSettingsTemplates
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.roomSettingsTemplates</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings[] roomSettingsTemplates
    return:
      type: Global.RoomSettings[]
    content.vb: Public roomSettingsTemplates As RoomSettings()
- uid: Global.Region.roomSettingTemplateNames
  commentId: F:Global.Region.roomSettingTemplateNames
  id: roomSettingTemplateNames
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: roomSettingTemplateNames
  nameWithType: Region.roomSettingTemplateNames
  fullName: Region.roomSettingTemplateNames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.roomSettingTemplateNames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] roomSettingTemplateNames
    return:
      type: System.String[]
    content.vb: Public roomSettingTemplateNames As String()
- uid: Global.Region.regionParams
  commentId: F:Global.Region.regionParams
  id: regionParams
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: regionParams
  nameWithType: Region.regionParams
  fullName: Region.regionParams
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.regionParams</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region.RegionParams regionParams
    return:
      type: Global.Region.RegionParams
    content.vb: Public regionParams As Region.RegionParams
- uid: Global.Region.subRegions
  commentId: F:Global.Region.subRegions
  id: subRegions
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: subRegions
  nameWithType: Region.subRegions
  fullName: Region.subRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.subRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> subRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public subRegions As List(Of String)
- uid: Global.Region.altSubRegions
  commentId: F:Global.Region.altSubRegions
  id: altSubRegions
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: altSubRegions
  nameWithType: Region.altSubRegions
  fullName: Region.altSubRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.altSubRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> altSubRegions
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public altSubRegions As List(Of String)
- uid: Global.Region.propertiesWaterColor
  commentId: F:Global.Region.propertiesWaterColor
  id: propertiesWaterColor
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: propertiesWaterColor
  nameWithType: Region.propertiesWaterColor
  fullName: Region.propertiesWaterColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.propertiesWaterColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color propertiesWaterColor
    return:
      type: UnityEngine.Color
    content.vb: Public propertiesWaterColor As Color
- uid: Global.Region.WarpRegions
  commentId: F:Global.Region.WarpRegions
  id: WarpRegions
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: WarpRegions
  nameWithType: Region.WarpRegions
  fullName: Region.WarpRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.WarpRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Region[] WarpRegions
    return:
      type: Global.Region[]
    content.vb: Public Shared WarpRegions As Region()
- uid: Global.Region.RegionReadyToWarp
  commentId: F:Global.Region.RegionReadyToWarp
  id: RegionReadyToWarp
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: RegionReadyToWarp
  nameWithType: Region.RegionReadyToWarp
  fullName: Region.RegionReadyToWarp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Region.RegionReadyToWarp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RegionReadyToWarp
    return:
      type: System.Boolean
    content.vb: Public Shared RegionReadyToWarp As Boolean
- uid: Global.Region.GetFullRegionOrder(SlugcatStats.Timeline)
  commentId: M:Global.Region.GetFullRegionOrder(SlugcatStats.Timeline)
  id: GetFullRegionOrder(SlugcatStats.Timeline)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetFullRegionOrder(Timeline)
  nameWithType: Region.GetFullRegionOrder(SlugcatStats.Timeline)
  fullName: Region.GetFullRegionOrder(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetFullRegionOrder(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> GetFullRegionOrder(SlugcatStats.Timeline timeline)
    parameters:
    - id: timeline
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeline</parameter>
            <parameter>M:Region.GetFullRegionOrder(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetFullRegionOrder(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetFullRegionOrder(timeline As SlugcatStats.Timeline) As List(Of String)
  overload: Global.Region.GetFullRegionOrder*
- uid: Global.Region.GetFullRegionOrder
  commentId: M:Global.Region.GetFullRegionOrder
  id: GetFullRegionOrder
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetFullRegionOrder()
  nameWithType: Region.GetFullRegionOrder()
  fullName: Region.GetFullRegionOrder()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetFullRegionOrder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> GetFullRegionOrder()
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetFullRegionOrder</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetFullRegionOrder() As List(Of String)
  overload: Global.Region.GetFullRegionOrder*
- uid: Global.Region.GetRegionLandscapeScene(System.String)
  commentId: M:Global.Region.GetRegionLandscapeScene(System.String)
  id: GetRegionLandscapeScene(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetRegionLandscapeScene(string)
  nameWithType: Region.GetRegionLandscapeScene(string)
  fullName: Region.GetRegionLandscapeScene(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetRegionLandscapeScene(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static MenuScene.SceneID GetRegionLandscapeScene(string regionAcro)
    parameters:
    - id: regionAcro
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionAcro</parameter>
            <parameter>M:Region.GetRegionLandscapeScene(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Menu.MenuScene.SceneID
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetRegionLandscapeScene(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetRegionLandscapeScene(regionAcro As String) As MenuScene.SceneID
  overload: Global.Region.GetRegionLandscapeScene*
  nameWithType.vb: Region.GetRegionLandscapeScene(String)
  fullName.vb: Region.GetRegionLandscapeScene(String)
  name.vb: GetRegionLandscapeScene(String)
- uid: Global.Region.RegionColor(System.String)
  commentId: M:Global.Region.RegionColor(System.String)
  id: RegionColor(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: RegionColor(string)
  nameWithType: Region.RegionColor(string)
  fullName: Region.RegionColor(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.RegionColor(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color RegionColor(string regionName)
    parameters:
    - id: regionName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionName</parameter>
            <parameter>M:Region.RegionColor(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.RegionColor(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RegionColor(regionName As String) As Color
  overload: Global.Region.RegionColor*
  nameWithType.vb: Region.RegionColor(String)
  fullName.vb: Region.RegionColor(String)
  name.vb: RegionColor(String)
- uid: Global.Region.EquivalentRegion(System.String,System.String)
  commentId: M:Global.Region.EquivalentRegion(System.String,System.String)
  id: EquivalentRegion(System.String,System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: EquivalentRegion(string, string)
  nameWithType: Region.EquivalentRegion(string, string)
  fullName: Region.EquivalentRegion(string, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.EquivalentRegion(System.String,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool EquivalentRegion(string regionA, string regionB)
    parameters:
    - id: regionA
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionA</parameter>
            <parameter>M:Region.EquivalentRegion(System.String,System.String)</parameter>
          </include>
        </markup>
    - id: regionB
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionB</parameter>
            <parameter>M:Region.EquivalentRegion(System.String,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.EquivalentRegion(System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function EquivalentRegion(regionA As String, regionB As String) As Boolean
  overload: Global.Region.EquivalentRegion*
  nameWithType.vb: Region.EquivalentRegion(String, String)
  fullName.vb: Region.EquivalentRegion(String, String)
  name.vb: EquivalentRegion(String, String)
- uid: Global.Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)
  commentId: M:Global.Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)
  id: GetProperRegionAcronym(SlugcatStats.Name,System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetProperRegionAcronym(Name, string)
  nameWithType: Region.GetProperRegionAcronym(SlugcatStats.Name, string)
  fullName: Region.GetProperRegionAcronym(SlugcatStats.Name, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public static string GetProperRegionAcronym(SlugcatStats.Name character, string baseAcronym)
    parameters:
    - id: character
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>character</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    - id: baseAcronym
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseAcronym</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Shared Function GetProperRegionAcronym(character As SlugcatStats.Name, baseAcronym As String) As String
  overload: Global.Region.GetProperRegionAcronym*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
  nameWithType.vb: Region.GetProperRegionAcronym(SlugcatStats.Name, String)
  fullName.vb: Region.GetProperRegionAcronym(SlugcatStats.Name, String)
  name.vb: GetProperRegionAcronym(Name, String)
- uid: Global.Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)
  commentId: M:Global.Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)
  id: GetProperRegionAcronym(SlugcatStats.Timeline,System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetProperRegionAcronym(Timeline, string)
  nameWithType: Region.GetProperRegionAcronym(SlugcatStats.Timeline, string)
  fullName: Region.GetProperRegionAcronym(SlugcatStats.Timeline, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetProperRegionAcronym(SlugcatStats.Timeline time, string baseAcronym)
    parameters:
    - id: time
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)</parameter>
          </include>
        </markup>
    - id: baseAcronym
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseAcronym</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetProperRegionAcronym(SlugcatStats.Timeline,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetProperRegionAcronym(time As SlugcatStats.Timeline, baseAcronym As String) As String
  overload: Global.Region.GetProperRegionAcronym*
  nameWithType.vb: Region.GetProperRegionAcronym(SlugcatStats.Timeline, String)
  fullName.vb: Region.GetProperRegionAcronym(SlugcatStats.Timeline, String)
  name.vb: GetProperRegionAcronym(Timeline, String)
- uid: Global.Region.GetVanillaEquivalentRegionAcronym(System.String)
  commentId: M:Global.Region.GetVanillaEquivalentRegionAcronym(System.String)
  id: GetVanillaEquivalentRegionAcronym(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetVanillaEquivalentRegionAcronym(string)
  nameWithType: Region.GetVanillaEquivalentRegionAcronym(string)
  fullName: Region.GetVanillaEquivalentRegionAcronym(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetVanillaEquivalentRegionAcronym(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetVanillaEquivalentRegionAcronym(string baseAcronym)
    parameters:
    - id: baseAcronym
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseAcronym</parameter>
            <parameter>M:Region.GetVanillaEquivalentRegionAcronym(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetVanillaEquivalentRegionAcronym(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetVanillaEquivalentRegionAcronym(baseAcronym As String) As String
  overload: Global.Region.GetVanillaEquivalentRegionAcronym*
  nameWithType.vb: Region.GetVanillaEquivalentRegionAcronym(String)
  fullName.vb: Region.GetVanillaEquivalentRegionAcronym(String)
  name.vb: GetVanillaEquivalentRegionAcronym(String)
- uid: Global.Region.GetRegionFullName(System.String,SlugcatStats.Name)
  commentId: M:Global.Region.GetRegionFullName(System.String,SlugcatStats.Name)
  id: GetRegionFullName(System.String,SlugcatStats.Name)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetRegionFullName(string, Name)
  nameWithType: Region.GetRegionFullName(string, SlugcatStats.Name)
  fullName: Region.GetRegionFullName(string, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetRegionFullName(System.String,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetRegionFullName(string regionAcro, SlugcatStats.Name slugcatIndex)
    parameters:
    - id: regionAcro
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionAcro</parameter>
            <parameter>M:Region.GetRegionFullName(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: slugcatIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcatIndex</parameter>
            <parameter>M:Region.GetRegionFullName(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetRegionFullName(System.String,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetRegionFullName(regionAcro As String, slugcatIndex As SlugcatStats.Name) As String
  overload: Global.Region.GetRegionFullName*
  nameWithType.vb: Region.GetRegionFullName(String, SlugcatStats.Name)
  fullName.vb: Region.GetRegionFullName(String, SlugcatStats.Name)
  name.vb: GetRegionFullName(String, Name)
- uid: Global.Region.NumberOfRoomsInRegion(System.String)
  commentId: M:Global.Region.NumberOfRoomsInRegion(System.String)
  id: NumberOfRoomsInRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: NumberOfRoomsInRegion(string)
  nameWithType: Region.NumberOfRoomsInRegion(string)
  fullName: Region.NumberOfRoomsInRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.NumberOfRoomsInRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int NumberOfRoomsInRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.NumberOfRoomsInRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.NumberOfRoomsInRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function NumberOfRoomsInRegion(name As String) As Integer
  overload: Global.Region.NumberOfRoomsInRegion*
  nameWithType.vb: Region.NumberOfRoomsInRegion(String)
  fullName.vb: Region.NumberOfRoomsInRegion(String)
  name.vb: NumberOfRoomsInRegion(String)
- uid: Global.Region.IsVanillaSentientRotRegion(System.String)
  commentId: M:Global.Region.IsVanillaSentientRotRegion(System.String)
  id: IsVanillaSentientRotRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsVanillaSentientRotRegion(string)
  nameWithType: Region.IsVanillaSentientRotRegion(string)
  fullName: Region.IsVanillaSentientRotRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsVanillaSentientRotRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsVanillaSentientRotRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsVanillaSentientRotRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsVanillaSentientRotRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsVanillaSentientRotRegion(name As String) As Boolean
  overload: Global.Region.IsVanillaSentientRotRegion*
  nameWithType.vb: Region.IsVanillaSentientRotRegion(String)
  fullName.vb: Region.IsVanillaSentientRotRegion(String)
  name.vb: IsVanillaSentientRotRegion(String)
- uid: Global.Region.IsSentientRotRegion(System.String)
  commentId: M:Global.Region.IsSentientRotRegion(System.String)
  id: IsSentientRotRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsSentientRotRegion(string)
  nameWithType: Region.IsSentientRotRegion(string)
  fullName: Region.IsSentientRotRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsSentientRotRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsSentientRotRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsSentientRotRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsSentientRotRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsSentientRotRegion(name As String) As Boolean
  overload: Global.Region.IsSentientRotRegion*
  nameWithType.vb: Region.IsSentientRotRegion(String)
  fullName.vb: Region.IsSentientRotRegion(String)
  name.vb: IsSentientRotRegion(String)
- uid: Global.Region.IsAncientUrbanRegion(System.String)
  commentId: M:Global.Region.IsAncientUrbanRegion(System.String)
  id: IsAncientUrbanRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsAncientUrbanRegion(string)
  nameWithType: Region.IsAncientUrbanRegion(string)
  fullName: Region.IsAncientUrbanRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsAncientUrbanRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsAncientUrbanRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsAncientUrbanRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsAncientUrbanRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsAncientUrbanRegion(name As String) As Boolean
  overload: Global.Region.IsAncientUrbanRegion*
  nameWithType.vb: Region.IsAncientUrbanRegion(String)
  fullName.vb: Region.IsAncientUrbanRegion(String)
  name.vb: IsAncientUrbanRegion(String)
- uid: Global.Region.IsShatteredTerraceRegion(System.String)
  commentId: M:Global.Region.IsShatteredTerraceRegion(System.String)
  id: IsShatteredTerraceRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsShatteredTerraceRegion(string)
  nameWithType: Region.IsShatteredTerraceRegion(string)
  fullName: Region.IsShatteredTerraceRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsShatteredTerraceRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsShatteredTerraceRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsShatteredTerraceRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsShatteredTerraceRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsShatteredTerraceRegion(name As String) As Boolean
  overload: Global.Region.IsShatteredTerraceRegion*
  nameWithType.vb: Region.IsShatteredTerraceRegion(String)
  fullName.vb: Region.IsShatteredTerraceRegion(String)
  name.vb: IsShatteredTerraceRegion(String)
- uid: Global.Region.IsDaemonRegion(System.String)
  commentId: M:Global.Region.IsDaemonRegion(System.String)
  id: IsDaemonRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsDaemonRegion(string)
  nameWithType: Region.IsDaemonRegion(string)
  fullName: Region.IsDaemonRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsDaemonRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsDaemonRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsDaemonRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsDaemonRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsDaemonRegion(name As String) As Boolean
  overload: Global.Region.IsDaemonRegion*
  nameWithType.vb: Region.IsDaemonRegion(String)
  fullName.vb: Region.IsDaemonRegion(String)
  name.vb: IsDaemonRegion(String)
- uid: Global.Region.IsWatcherVanillaRegion(System.String)
  commentId: M:Global.Region.IsWatcherVanillaRegion(System.String)
  id: IsWatcherVanillaRegion(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsWatcherVanillaRegion(string)
  nameWithType: Region.IsWatcherVanillaRegion(string)
  fullName: Region.IsWatcherVanillaRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsWatcherVanillaRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsWatcherVanillaRegion(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.IsWatcherVanillaRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsWatcherVanillaRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsWatcherVanillaRegion(name As String) As Boolean
  overload: Global.Region.IsWatcherVanillaRegion*
  nameWithType.vb: Region.IsWatcherVanillaRegion(String)
  fullName.vb: Region.IsWatcherVanillaRegion(String)
  name.vb: IsWatcherVanillaRegion(String)
- uid: Global.Region.HasWarpFatigueResistance(System.String)
  commentId: M:Global.Region.HasWarpFatigueResistance(System.String)
  id: HasWarpFatigueResistance(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: HasWarpFatigueResistance(string)
  nameWithType: Region.HasWarpFatigueResistance(string)
  fullName: Region.HasWarpFatigueResistance(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.HasWarpFatigueResistance(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool HasWarpFatigueResistance(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.HasWarpFatigueResistance(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.HasWarpFatigueResistance(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HasWarpFatigueResistance(name As String) As Boolean
  overload: Global.Region.HasWarpFatigueResistance*
  nameWithType.vb: Region.HasWarpFatigueResistance(String)
  fullName.vb: Region.HasWarpFatigueResistance(String)
  name.vb: HasWarpFatigueResistance(String)
- uid: Global.Region.HasSentientRotResistance(System.String)
  commentId: M:Global.Region.HasSentientRotResistance(System.String)
  id: HasSentientRotResistance(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: HasSentientRotResistance(string)
  nameWithType: Region.HasSentientRotResistance(string)
  fullName: Region.HasSentientRotResistance(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.HasSentientRotResistance(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool HasSentientRotResistance(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.HasSentientRotResistance(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.HasSentientRotResistance(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HasSentientRotResistance(name As String) As Boolean
  overload: Global.Region.HasSentientRotResistance*
  nameWithType.vb: Region.HasSentientRotResistance(String)
  fullName.vb: Region.HasSentientRotResistance(String)
  name.vb: HasSentientRotResistance(String)
- uid: Global.Region.LoadAllRegions(SlugcatStats.Name)
  commentId: M:Global.Region.LoadAllRegions(SlugcatStats.Name)
  id: LoadAllRegions(SlugcatStats.Name)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: LoadAllRegions(Name)
  nameWithType: Region.LoadAllRegions(SlugcatStats.Name)
  fullName: Region.LoadAllRegions(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.LoadAllRegions(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter function instead.")]

      public static Region[] LoadAllRegions(SlugcatStats.Name storyIndex)
    parameters:
    - id: storyIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>storyIndex</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter function instead.")>

      Public Shared Function LoadAllRegions(storyIndex As SlugcatStats.Name) As Region()
  overload: Global.Region.LoadAllRegions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter function instead.
- uid: Global.Region.LoadAllRegions(SlugcatStats.Timeline)
  commentId: M:Global.Region.LoadAllRegions(SlugcatStats.Timeline)
  id: LoadAllRegions(SlugcatStats.Timeline)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: LoadAllRegions(Timeline)
  nameWithType: Region.LoadAllRegions(SlugcatStats.Timeline)
  fullName: Region.LoadAllRegions(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use RainWorldGame parameter constructor instead.")]

      public static Region[] LoadAllRegions(SlugcatStats.Timeline timelineIndex)
    parameters:
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use RainWorldGame parameter constructor instead.")>

      Public Shared Function LoadAllRegions(timelineIndex As SlugcatStats.Timeline) As Region()
  overload: Global.Region.LoadAllRegions*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use RainWorldGame parameter constructor instead.
- uid: Global.Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)
  commentId: M:Global.Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)
  id: LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: LoadAllRegions(Timeline, RainWorldGame)
  nameWithType: Region.LoadAllRegions(SlugcatStats.Timeline, RainWorldGame)
  fullName: Region.LoadAllRegions(SlugcatStats.Timeline, RainWorldGame)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Region[] LoadAllRegions(SlugcatStats.Timeline timelineIndex, RainWorldGame game)
    parameters:
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    return:
      type: Global.Region[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.LoadAllRegions(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LoadAllRegions(timelineIndex As SlugcatStats.Timeline, game As RainWorldGame) As Region()
  overload: Global.Region.LoadAllRegions*
- uid: Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  commentId: M:Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  id: LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: LoadAllRegionsCoroutine(Timeline)
  nameWithType: Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  fullName: Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [IteratorStateMachine(typeof(Region.<LoadAllRegionsCoroutine>d__33))]

      [Obsolete("Use RainWorldGame parameter constructor instead.")]

      public static IEnumerator LoadAllRegionsCoroutine(SlugcatStats.Timeline timelineIndex)
    parameters:
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.IEnumerator
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: >-
      <IteratorStateMachine(GetType(Region.<LoadAllRegionsCoroutine>d__33))>

      <Obsolete("Use RainWorldGame parameter constructor instead.")>

      Public Shared Function LoadAllRegionsCoroutine(timelineIndex As SlugcatStats.Timeline) As IEnumerator
  overload: Global.Region.LoadAllRegionsCoroutine*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use RainWorldGame parameter constructor instead.
- uid: Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)
  commentId: M:Global.Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)
  id: LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: LoadAllRegionsCoroutine(Timeline, RainWorldGame)
  nameWithType: Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline, RainWorldGame)
  fullName: Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline, RainWorldGame)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [IteratorStateMachine(typeof(Region.<LoadAllRegionsCoroutine>d__34))]

      public static IEnumerator LoadAllRegionsCoroutine(SlugcatStats.Timeline timelineIndex, RainWorldGame game)
    parameters:
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.IEnumerator
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.LoadAllRegionsCoroutine(SlugcatStats.Timeline,RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: >-
      <IteratorStateMachine(GetType(Region.<LoadAllRegionsCoroutine>d__34))>

      Public Shared Function LoadAllRegionsCoroutine(timelineIndex As SlugcatStats.Timeline, game As RainWorldGame) As IEnumerator
  overload: Global.Region.LoadAllRegionsCoroutine*
- uid: Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)
  commentId: M:Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)
  id: '#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)'
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: Region(string, int, int, Name)
  nameWithType: Region.Region(string, int, int, SlugcatStats.Name)
  fullName: Region.Region(string, int, int, SlugcatStats.Name)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use timeline parameter constructor instead.")]

      public Region(string name, int firstRoomIndex, int regionNumber, SlugcatStats.Name storyIndex)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: firstRoomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstRoomIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: regionNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionNumber</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: storyIndex
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>storyIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use timeline parameter constructor instead.")>

      Public Sub New(name As String, firstRoomIndex As Integer, regionNumber As Integer, storyIndex As SlugcatStats.Name)
  overload: Global.Region.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use timeline parameter constructor instead.
  nameWithType.vb: Region.New(String, Integer, Integer, SlugcatStats.Name)
  fullName.vb: Region.New(String, Integer, Integer, SlugcatStats.Name)
  name.vb: New(String, Integer, Integer, Name)
- uid: Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)
  commentId: M:Global.Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)
  id: '#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)'
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: Region(string, int, int, Timeline)
  nameWithType: Region.Region(string, int, int, SlugcatStats.Timeline)
  fullName: Region.Region(string, int, int, SlugcatStats.Timeline)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use RainWorldGame parameter constructor instead.")]

      public Region(string name, int firstRoomIndex, int regionNumber, SlugcatStats.Timeline timelineIndex)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: firstRoomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstRoomIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: regionNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionNumber</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use RainWorldGame parameter constructor instead.")>

      Public Sub New(name As String, firstRoomIndex As Integer, regionNumber As Integer, timelineIndex As SlugcatStats.Timeline)
  overload: Global.Region.#ctor*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use RainWorldGame parameter constructor instead.
  nameWithType.vb: Region.New(String, Integer, Integer, SlugcatStats.Timeline)
  fullName.vb: Region.New(String, Integer, Integer, SlugcatStats.Timeline)
  name.vb: New(String, Integer, Integer, Timeline)
- uid: Global.Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)
  commentId: M:Global.Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)
  id: '#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)'
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: Region(string, int, int, RainWorldGame, Timeline)
  nameWithType: Region.Region(string, int, int, RainWorldGame, SlugcatStats.Timeline)
  fullName: Region.Region(string, int, int, RainWorldGame, SlugcatStats.Timeline)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region(string name, int firstRoomIndex, int regionNumber, RainWorldGame game, SlugcatStats.Timeline timelineIndex)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: firstRoomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstRoomIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: regionNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionNumber</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    - id: timelineIndex
      type: Global.SlugcatStats.Timeline
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timelineIndex</parameter>
            <parameter>M:Region.#ctor(System.String,System.Int32,System.Int32,RainWorldGame,SlugcatStats.Timeline)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String, firstRoomIndex As Integer, regionNumber As Integer, game As RainWorldGame, timelineIndex As SlugcatStats.Timeline)
  overload: Global.Region.#ctor*
  nameWithType.vb: Region.New(String, Integer, Integer, RainWorldGame, SlugcatStats.Timeline)
  fullName.vb: Region.New(String, Integer, Integer, RainWorldGame, SlugcatStats.Timeline)
  name.vb: New(String, Integer, Integer, RainWorldGame, Timeline)
- uid: Global.Region.GetRoomSettingsTemplate(System.String)
  commentId: M:Global.Region.GetRoomSettingsTemplate(System.String)
  id: GetRoomSettingsTemplate(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: GetRoomSettingsTemplate(string)
  nameWithType: Region.GetRoomSettingsTemplate(string)
  fullName: Region.GetRoomSettingsTemplate(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.GetRoomSettingsTemplate(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings GetRoomSettingsTemplate(string templateName)
    parameters:
    - id: templateName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>templateName</parameter>
            <parameter>M:Region.GetRoomSettingsTemplate(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.RoomSettings
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.GetRoomSettingsTemplate(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetRoomSettingsTemplate(templateName As String) As RoomSettings
  overload: Global.Region.GetRoomSettingsTemplate*
  nameWithType.vb: Region.GetRoomSettingsTemplate(String)
  fullName.vb: Region.GetRoomSettingsTemplate(String)
  name.vb: GetRoomSettingsTemplate(String)
- uid: Global.Region.ReloadRoomSettingsTemplate(System.String)
  commentId: M:Global.Region.ReloadRoomSettingsTemplate(System.String)
  id: ReloadRoomSettingsTemplate(System.String)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: ReloadRoomSettingsTemplate(string)
  nameWithType: Region.ReloadRoomSettingsTemplate(string)
  fullName: Region.ReloadRoomSettingsTemplate(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.ReloadRoomSettingsTemplate(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReloadRoomSettingsTemplate(string templateName)
    parameters:
    - id: templateName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>templateName</parameter>
            <parameter>M:Region.ReloadRoomSettingsTemplate(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReloadRoomSettingsTemplate(templateName As String)
  overload: Global.Region.ReloadRoomSettingsTemplate*
  nameWithType.vb: Region.ReloadRoomSettingsTemplate(String)
  fullName.vb: Region.ReloadRoomSettingsTemplate(String)
  name.vb: ReloadRoomSettingsTemplate(String)
- uid: Global.Region.IsRoomInRegion(System.Int32)
  commentId: M:Global.Region.IsRoomInRegion(System.Int32)
  id: IsRoomInRegion(System.Int32)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: IsRoomInRegion(int)
  nameWithType: Region.IsRoomInRegion(int)
  fullName: Region.IsRoomInRegion(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.IsRoomInRegion(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsRoomInRegion(int roomIndex)
    parameters:
    - id: roomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomIndex</parameter>
            <parameter>M:Region.IsRoomInRegion(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.IsRoomInRegion(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsRoomInRegion(roomIndex As Integer) As Boolean
  overload: Global.Region.IsRoomInRegion*
  nameWithType.vb: Region.IsRoomInRegion(Integer)
  fullName.vb: Region.IsRoomInRegion(Integer)
  name.vb: IsRoomInRegion(Integer)
- uid: Global.Region.CyclesToDepleteASwarmRoom(System.Int32)
  commentId: M:Global.Region.CyclesToDepleteASwarmRoom(System.Int32)
  id: CyclesToDepleteASwarmRoom(System.Int32)
  parent: Global.Region
  langs:
  - csharp
  - vb
  name: CyclesToDepleteASwarmRoom(int)
  nameWithType: Region.CyclesToDepleteASwarmRoom(int)
  fullName: Region.CyclesToDepleteASwarmRoom(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Region.CyclesToDepleteASwarmRoom(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CyclesToDepleteASwarmRoom(int activeOnesInRegion)
    parameters:
    - id: activeOnesInRegion
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>activeOnesInRegion</parameter>
            <parameter>M:Region.CyclesToDepleteASwarmRoom(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Region.CyclesToDepleteASwarmRoom(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function CyclesToDepleteASwarmRoom(activeOnesInRegion As Integer) As Integer
  overload: Global.Region.CyclesToDepleteASwarmRoom*
  nameWithType.vb: Region.CyclesToDepleteASwarmRoom(Integer)
  fullName.vb: Region.CyclesToDepleteASwarmRoom(Integer)
  name.vb: CyclesToDepleteASwarmRoom(Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.RoomSettings[]
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings[]
  nameWithType: RoomSettings[]
  fullName: RoomSettings[]
  nameWithType.vb: RoomSettings()
  fullName.vb: RoomSettings()
  name.vb: RoomSettings()
  spec.csharp:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.RoomSettings
    name: RoomSettings
    isExternal: true
    href: RoomSettings.html
  - name: (
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.Region.RegionParams
  commentId: T:Global.Region.RegionParams
  isExternal: true
  href: Region.html
  name: Region.RegionParams
  nameWithType: Region.RegionParams
  fullName: Region.RegionParams
  spec.csharp:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: .
  - uid: Global.Region.RegionParams
    name: RegionParams
    isExternal: true
    href: Region.RegionParams.html
  spec.vb:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: .
  - uid: Global.Region.RegionParams
    name: RegionParams
    isExternal: true
    href: Region.RegionParams.html
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.Region[]
  isExternal: true
  href: Region.html
  name: Region[]
  nameWithType: Region[]
  fullName: Region[]
  nameWithType.vb: Region()
  fullName.vb: Region()
  name.vb: Region()
  spec.csharp:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Region
    name: Region
    isExternal: true
    href: Region.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Region.GetFullRegionOrder*
  commentId: Overload:Global.Region.GetFullRegionOrder
  isExternal: true
  href: Global.Region.html#Region_GetFullRegionOrder_SlugcatStats_Timeline_
  name: GetFullRegionOrder
  nameWithType: Region.GetFullRegionOrder
  fullName: Region.GetFullRegionOrder
- uid: Global.SlugcatStats.Timeline
  commentId: T:Global.SlugcatStats.Timeline
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Timeline
  nameWithType: SlugcatStats.Timeline
  fullName: SlugcatStats.Timeline
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Timeline
    name: Timeline
    isExternal: true
    href: SlugcatStats.Timeline.html
- uid: Global.Region.GetRegionLandscapeScene*
  commentId: Overload:Global.Region.GetRegionLandscapeScene
  isExternal: true
  href: Global.Region.html#Region_GetRegionLandscapeScene_System_String_
  name: GetRegionLandscapeScene
  nameWithType: Region.GetRegionLandscapeScene
  fullName: Region.GetRegionLandscapeScene
- uid: Menu.MenuScene.SceneID
  commentId: T:Menu.MenuScene.SceneID
  parent: Menu
  isExternal: true
  href: Menu.MenuScene.html
  name: MenuScene.SceneID
  nameWithType: MenuScene.SceneID
  fullName: Menu.MenuScene.SceneID
  spec.csharp:
  - uid: Menu.MenuScene
    name: MenuScene
    isExternal: true
    href: Menu.MenuScene.html
  - name: .
  - uid: Menu.MenuScene.SceneID
    name: SceneID
    isExternal: true
    href: Menu.MenuScene.SceneID.html
  spec.vb:
  - uid: Menu.MenuScene
    name: MenuScene
    isExternal: true
    href: Menu.MenuScene.html
  - name: .
  - uid: Menu.MenuScene.SceneID
    name: SceneID
    isExternal: true
    href: Menu.MenuScene.SceneID.html
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: Global.Region.RegionColor*
  commentId: Overload:Global.Region.RegionColor
  isExternal: true
  href: Global.Region.html#Region_RegionColor_System_String_
  name: RegionColor
  nameWithType: Region.RegionColor
  fullName: Region.RegionColor
- uid: Global.Region.EquivalentRegion*
  commentId: Overload:Global.Region.EquivalentRegion
  isExternal: true
  href: Global.Region.html#Region_EquivalentRegion_System_String_System_String_
  name: EquivalentRegion
  nameWithType: Region.EquivalentRegion
  fullName: Region.EquivalentRegion
- uid: Global.Region.GetProperRegionAcronym*
  commentId: Overload:Global.Region.GetProperRegionAcronym
  isExternal: true
  href: Global.Region.html#Region_GetProperRegionAcronym_SlugcatStats_Name_System_String_
  name: GetProperRegionAcronym
  nameWithType: Region.GetProperRegionAcronym
  fullName: Region.GetProperRegionAcronym
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.Region.GetVanillaEquivalentRegionAcronym*
  commentId: Overload:Global.Region.GetVanillaEquivalentRegionAcronym
  isExternal: true
  href: Global.Region.html#Region_GetVanillaEquivalentRegionAcronym_System_String_
  name: GetVanillaEquivalentRegionAcronym
  nameWithType: Region.GetVanillaEquivalentRegionAcronym
  fullName: Region.GetVanillaEquivalentRegionAcronym
- uid: Global.Region.GetRegionFullName*
  commentId: Overload:Global.Region.GetRegionFullName
  isExternal: true
  href: Global.Region.html#Region_GetRegionFullName_System_String_SlugcatStats_Name_
  name: GetRegionFullName
  nameWithType: Region.GetRegionFullName
  fullName: Region.GetRegionFullName
- uid: Global.Region.NumberOfRoomsInRegion*
  commentId: Overload:Global.Region.NumberOfRoomsInRegion
  isExternal: true
  href: Global.Region.html#Region_NumberOfRoomsInRegion_System_String_
  name: NumberOfRoomsInRegion
  nameWithType: Region.NumberOfRoomsInRegion
  fullName: Region.NumberOfRoomsInRegion
- uid: Global.Region.IsVanillaSentientRotRegion*
  commentId: Overload:Global.Region.IsVanillaSentientRotRegion
  isExternal: true
  href: Global.Region.html#Region_IsVanillaSentientRotRegion_System_String_
  name: IsVanillaSentientRotRegion
  nameWithType: Region.IsVanillaSentientRotRegion
  fullName: Region.IsVanillaSentientRotRegion
- uid: Global.Region.IsSentientRotRegion*
  commentId: Overload:Global.Region.IsSentientRotRegion
  isExternal: true
  href: Global.Region.html#Region_IsSentientRotRegion_System_String_
  name: IsSentientRotRegion
  nameWithType: Region.IsSentientRotRegion
  fullName: Region.IsSentientRotRegion
- uid: Global.Region.IsAncientUrbanRegion*
  commentId: Overload:Global.Region.IsAncientUrbanRegion
  isExternal: true
  href: Global.Region.html#Region_IsAncientUrbanRegion_System_String_
  name: IsAncientUrbanRegion
  nameWithType: Region.IsAncientUrbanRegion
  fullName: Region.IsAncientUrbanRegion
- uid: Global.Region.IsShatteredTerraceRegion*
  commentId: Overload:Global.Region.IsShatteredTerraceRegion
  isExternal: true
  href: Global.Region.html#Region_IsShatteredTerraceRegion_System_String_
  name: IsShatteredTerraceRegion
  nameWithType: Region.IsShatteredTerraceRegion
  fullName: Region.IsShatteredTerraceRegion
- uid: Global.Region.IsDaemonRegion*
  commentId: Overload:Global.Region.IsDaemonRegion
  isExternal: true
  href: Global.Region.html#Region_IsDaemonRegion_System_String_
  name: IsDaemonRegion
  nameWithType: Region.IsDaemonRegion
  fullName: Region.IsDaemonRegion
- uid: Global.Region.IsWatcherVanillaRegion*
  commentId: Overload:Global.Region.IsWatcherVanillaRegion
  isExternal: true
  href: Global.Region.html#Region_IsWatcherVanillaRegion_System_String_
  name: IsWatcherVanillaRegion
  nameWithType: Region.IsWatcherVanillaRegion
  fullName: Region.IsWatcherVanillaRegion
- uid: Global.Region.HasWarpFatigueResistance*
  commentId: Overload:Global.Region.HasWarpFatigueResistance
  isExternal: true
  href: Global.Region.html#Region_HasWarpFatigueResistance_System_String_
  name: HasWarpFatigueResistance
  nameWithType: Region.HasWarpFatigueResistance
  fullName: Region.HasWarpFatigueResistance
- uid: Global.Region.HasSentientRotResistance*
  commentId: Overload:Global.Region.HasSentientRotResistance
  isExternal: true
  href: Global.Region.html#Region_HasSentientRotResistance_System_String_
  name: HasSentientRotResistance
  nameWithType: Region.HasSentientRotResistance
  fullName: Region.HasSentientRotResistance
- uid: Global.Region.LoadAllRegions*
  commentId: Overload:Global.Region.LoadAllRegions
  isExternal: true
  href: Global.Region.html#Region_LoadAllRegions_SlugcatStats_Name_
  name: LoadAllRegions
  nameWithType: Region.LoadAllRegions
  fullName: Region.LoadAllRegions
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.Region.LoadAllRegionsCoroutine*
  commentId: Overload:Global.Region.LoadAllRegionsCoroutine
  isExternal: true
  href: Global.Region.html#Region_LoadAllRegionsCoroutine_SlugcatStats_Timeline_
  name: LoadAllRegionsCoroutine
  nameWithType: Region.LoadAllRegionsCoroutine
  fullName: Region.LoadAllRegionsCoroutine
- uid: System.Collections.IEnumerator
  commentId: T:System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerator
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Global.Region.#ctor*
  commentId: Overload:Global.Region.#ctor
  isExternal: true
  href: Global.Region.html#Region__ctor_System_String_System_Int32_System_Int32_SlugcatStats_Name_
  name: Region
  nameWithType: Region.Region
  fullName: Region.Region
  nameWithType.vb: Region.New
  fullName.vb: Region.New
  name.vb: New
- uid: Global.Region.GetRoomSettingsTemplate*
  commentId: Overload:Global.Region.GetRoomSettingsTemplate
  isExternal: true
  href: Global.Region.html#Region_GetRoomSettingsTemplate_System_String_
  name: GetRoomSettingsTemplate
  nameWithType: Region.GetRoomSettingsTemplate
  fullName: Region.GetRoomSettingsTemplate
- uid: Global.RoomSettings
  commentId: T:Global.RoomSettings
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings
  nameWithType: RoomSettings
  fullName: RoomSettings
- uid: Global.Region.ReloadRoomSettingsTemplate*
  commentId: Overload:Global.Region.ReloadRoomSettingsTemplate
  isExternal: true
  href: Global.Region.html#Region_ReloadRoomSettingsTemplate_System_String_
  name: ReloadRoomSettingsTemplate
  nameWithType: Region.ReloadRoomSettingsTemplate
  fullName: Region.ReloadRoomSettingsTemplate
- uid: Global.Region.IsRoomInRegion*
  commentId: Overload:Global.Region.IsRoomInRegion
  isExternal: true
  href: Global.Region.html#Region_IsRoomInRegion_System_Int32_
  name: IsRoomInRegion
  nameWithType: Region.IsRoomInRegion
  fullName: Region.IsRoomInRegion
- uid: Global.Region.CyclesToDepleteASwarmRoom*
  commentId: Overload:Global.Region.CyclesToDepleteASwarmRoom
  isExternal: true
  href: Global.Region.html#Region_CyclesToDepleteASwarmRoom_System_Int32_
  name: CyclesToDepleteASwarmRoom
  nameWithType: Region.CyclesToDepleteASwarmRoom
  fullName: Region.CyclesToDepleteASwarmRoom
