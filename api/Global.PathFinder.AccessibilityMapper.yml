### YamlMime:ManagedReference
items:
- uid: Global.PathFinder.AccessibilityMapper
  commentId: T:Global.PathFinder.AccessibilityMapper
  id: PathFinder.AccessibilityMapper
  parent: Global
  children:
  - Global.PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)
  - Global.PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)
  - Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)
  - Global.PathFinder.AccessibilityMapper.CullClients(PathFinder)
  - Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
  - Global.PathFinder.AccessibilityMapper.clients
  - Global.PathFinder.AccessibilityMapper.finished
  - Global.PathFinder.AccessibilityMapper.mapAccessibilityMode
  - Global.PathFinder.AccessibilityMapper.mappingRoom
  - Global.PathFinder.AccessibilityMapper.taintedByForbiddenNode
  langs:
  - csharp
  - vb
  name: PathFinder.AccessibilityMapper
  nameWithType: PathFinder.AccessibilityMapper
  fullName: PathFinder.AccessibilityMapper
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PathFinder.AccessibilityMapper</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected class PathFinder.AccessibilityMapper
    content.vb: Protected Class PathFinder.AccessibilityMapper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.PathFinder.AccessibilityMapper.clients
  commentId: F:Global.PathFinder.AccessibilityMapper.clients
  id: clients
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: clients
  nameWithType: PathFinder.AccessibilityMapper.clients
  fullName: PathFinder.AccessibilityMapper.clients
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.AccessibilityMapper.clients</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PathFinder> clients
    return:
      type: System.Collections.Generic.List{PathFinder}
    content.vb: Public clients As List(Of PathFinder)
- uid: Global.PathFinder.AccessibilityMapper.mapAccessibilityMode
  commentId: F:Global.PathFinder.AccessibilityMapper.mapAccessibilityMode
  id: mapAccessibilityMode
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: mapAccessibilityMode
  nameWithType: PathFinder.AccessibilityMapper.mapAccessibilityMode
  fullName: PathFinder.AccessibilityMapper.mapAccessibilityMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.AccessibilityMapper.mapAccessibilityMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected int mapAccessibilityMode
    return:
      type: System.Int32
    content.vb: Protected mapAccessibilityMode As Integer
- uid: Global.PathFinder.AccessibilityMapper.finished
  commentId: F:Global.PathFinder.AccessibilityMapper.finished
  id: finished
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: finished
  nameWithType: PathFinder.AccessibilityMapper.finished
  fullName: PathFinder.AccessibilityMapper.finished
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.AccessibilityMapper.finished</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool finished
    return:
      type: System.Boolean
    content.vb: Public finished As Boolean
- uid: Global.PathFinder.AccessibilityMapper.taintedByForbiddenNode
  commentId: F:Global.PathFinder.AccessibilityMapper.taintedByForbiddenNode
  id: taintedByForbiddenNode
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: taintedByForbiddenNode
  nameWithType: PathFinder.AccessibilityMapper.taintedByForbiddenNode
  fullName: PathFinder.AccessibilityMapper.taintedByForbiddenNode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.AccessibilityMapper.taintedByForbiddenNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool taintedByForbiddenNode
    return:
      type: System.Boolean
    content.vb: Public taintedByForbiddenNode As Boolean
- uid: Global.PathFinder.AccessibilityMapper.mappingRoom
  commentId: F:Global.PathFinder.AccessibilityMapper.mappingRoom
  id: mappingRoom
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: mappingRoom
  nameWithType: PathFinder.AccessibilityMapper.mappingRoom
  fullName: PathFinder.AccessibilityMapper.mappingRoom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:PathFinder.AccessibilityMapper.mappingRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room mappingRoom
    return:
      type: Global.Room
    content.vb: Public mappingRoom As Room
- uid: Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)
  commentId: M:Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)
  id: CreaturesPathingIdentical(AbstractCreature,AbstractCreature)
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: CreaturesPathingIdentical(AbstractCreature, AbstractCreature)
  nameWithType: PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature, AbstractCreature)
  fullName: PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature, AbstractCreature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CreaturesPathingIdentical(AbstractCreature A, AbstractCreature B)
    parameters:
    - id: A
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)</parameter>
          </include>
        </markup>
    - id: B
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.CreaturesPathingIdentical(AbstractCreature,AbstractCreature)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CreaturesPathingIdentical(A As AbstractCreature, B As AbstractCreature) As Boolean
  overload: Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical*
- uid: Global.PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)
  commentId: M:Global.PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)
  id: '#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)'
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: AccessibilityMapper(PathFinder, WorldCoordinate, IntVector2[], bool)
  nameWithType: PathFinder.AccessibilityMapper.AccessibilityMapper(PathFinder, WorldCoordinate, IntVector2[], bool)
  fullName: PathFinder.AccessibilityMapper.AccessibilityMapper(PathFinder, WorldCoordinate, RWCustom.IntVector2[], bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>PathFinder.AccessibilityMapper</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AccessibilityMapper(PathFinder initiator, WorldCoordinate accessibilityCenter, IntVector2[] alreadyCheckedTiles, bool taintedByForbiddenNode)
    parameters:
    - id: initiator
      type: Global.PathFinder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initiator</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)</parameter>
          </include>
        </markup>
    - id: accessibilityCenter
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>accessibilityCenter</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)</parameter>
          </include>
        </markup>
    - id: alreadyCheckedTiles
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alreadyCheckedTiles</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)</parameter>
          </include>
        </markup>
    - id: taintedByForbiddenNode
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>taintedByForbiddenNode</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.#ctor(PathFinder,WorldCoordinate,RWCustom.IntVector2[],System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(initiator As PathFinder, accessibilityCenter As WorldCoordinate, alreadyCheckedTiles As IntVector2(), taintedByForbiddenNode As Boolean)
  overload: Global.PathFinder.AccessibilityMapper.#ctor*
  nameWithType.vb: PathFinder.AccessibilityMapper.New(PathFinder, WorldCoordinate, IntVector2(), Boolean)
  fullName.vb: PathFinder.AccessibilityMapper.New(PathFinder, WorldCoordinate, RWCustom.IntVector2(), Boolean)
  name.vb: New(PathFinder, WorldCoordinate, IntVector2(), Boolean)
- uid: Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
  commentId: M:Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
  id: UpdateAccessibilityMapping
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: UpdateAccessibilityMapping()
  nameWithType: PathFinder.AccessibilityMapper.UpdateAccessibilityMapping()
  fullName: PathFinder.AccessibilityMapper.UpdateAccessibilityMapping()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AccessibilityMapper.UpdateAccessibilityMapping</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateAccessibilityMapping()
    content.vb: Public Sub UpdateAccessibilityMapping()
  overload: Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping*
- uid: Global.PathFinder.AccessibilityMapper.CullClients(PathFinder)
  commentId: M:Global.PathFinder.AccessibilityMapper.CullClients(PathFinder)
  id: CullClients(PathFinder)
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: CullClients(PathFinder)
  nameWithType: PathFinder.AccessibilityMapper.CullClients(PathFinder)
  fullName: PathFinder.AccessibilityMapper.CullClients(PathFinder)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AccessibilityMapper.CullClients(PathFinder)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CullClients(PathFinder dontReInitiateMe)
    parameters:
    - id: dontReInitiateMe
      type: Global.PathFinder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dontReInitiateMe</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.CullClients(PathFinder)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CullClients(dontReInitiateMe As PathFinder)
  overload: Global.PathFinder.AccessibilityMapper.CullClients*
- uid: Global.PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)
  commentId: M:Global.PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)
  id: AddFreshClient(PathFinder)
  parent: Global.PathFinder.AccessibilityMapper
  langs:
  - csharp
  - vb
  name: AddFreshClient(PathFinder)
  nameWithType: PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)
  fullName: PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddFreshClient(PathFinder newClient)
    parameters:
    - id: newClient
      type: Global.PathFinder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newClient</parameter>
            <parameter>M:PathFinder.AccessibilityMapper.AddFreshClient(PathFinder)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddFreshClient(newClient As PathFinder)
  overload: Global.PathFinder.AccessibilityMapper.AddFreshClient*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{PathFinder}
  commentId: T:System.Collections.Generic.List{PathFinder}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PathFinder>
  nameWithType: List<PathFinder>
  fullName: System.Collections.Generic.List<PathFinder>
  nameWithType.vb: List(Of PathFinder)
  fullName.vb: System.Collections.Generic.List(Of PathFinder)
  name.vb: List(Of PathFinder)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PathFinder
    name: PathFinder
    isExternal: true
    href: PathFinder.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical*
  commentId: Overload:Global.PathFinder.AccessibilityMapper.CreaturesPathingIdentical
  isExternal: true
  href: Global.PathFinder.AccessibilityMapper.html#PathFinder_AccessibilityMapper_CreaturesPathingIdentical_AbstractCreature_AbstractCreature_
  name: CreaturesPathingIdentical
  nameWithType: PathFinder.AccessibilityMapper.CreaturesPathingIdentical
  fullName: PathFinder.AccessibilityMapper.CreaturesPathingIdentical
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.PathFinder.AccessibilityMapper.#ctor*
  commentId: Overload:Global.PathFinder.AccessibilityMapper.#ctor
  isExternal: true
  href: Global.PathFinder.AccessibilityMapper.html#PathFinder_AccessibilityMapper__ctor_PathFinder_WorldCoordinate_RWCustom_IntVector2___System_Boolean_
  name: AccessibilityMapper
  nameWithType: PathFinder.AccessibilityMapper.AccessibilityMapper
  fullName: PathFinder.AccessibilityMapper.AccessibilityMapper
  nameWithType.vb: PathFinder.AccessibilityMapper.New
  fullName.vb: PathFinder.AccessibilityMapper.New
  name.vb: New
- uid: Global.PathFinder
  commentId: T:Global.PathFinder
  isExternal: true
  href: PathFinder.html
  name: PathFinder
  nameWithType: PathFinder
  fullName: PathFinder
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping*
  commentId: Overload:Global.PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
  isExternal: true
  href: Global.PathFinder.AccessibilityMapper.html#PathFinder_AccessibilityMapper_UpdateAccessibilityMapping
  name: UpdateAccessibilityMapping
  nameWithType: PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
  fullName: PathFinder.AccessibilityMapper.UpdateAccessibilityMapping
- uid: Global.PathFinder.AccessibilityMapper.CullClients*
  commentId: Overload:Global.PathFinder.AccessibilityMapper.CullClients
  isExternal: true
  href: Global.PathFinder.AccessibilityMapper.html#PathFinder_AccessibilityMapper_CullClients_PathFinder_
  name: CullClients
  nameWithType: PathFinder.AccessibilityMapper.CullClients
  fullName: PathFinder.AccessibilityMapper.CullClients
- uid: Global.PathFinder.AccessibilityMapper.AddFreshClient*
  commentId: Overload:Global.PathFinder.AccessibilityMapper.AddFreshClient
  isExternal: true
  href: Global.PathFinder.AccessibilityMapper.html#PathFinder_AccessibilityMapper_AddFreshClient_PathFinder_
  name: AddFreshClient
  nameWithType: PathFinder.AccessibilityMapper.AddFreshClient
  fullName: PathFinder.AccessibilityMapper.AddFreshClient
