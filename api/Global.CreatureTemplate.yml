### YamlMime:ManagedReference
items:
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  id: CreatureTemplate
  parent: Global
  children:
  - Global.CreatureTemplate.#ctor(CreatureTemplate)
  - Global.CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)
  - Global.CreatureTemplate.AI
  - Global.CreatureTemplate.AbstractSubmersionLegal(System.Boolean)
  - Global.CreatureTemplate.AccessibilityResistance(AItile.Accessibility)
  - Global.CreatureTemplate.BlizzardAdapted
  - Global.CreatureTemplate.BlizzardWanderer
  - Global.CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)
  - Global.CreatureTemplate.CreatureRelationship(Creature)
  - Global.CreatureTemplate.CreatureRelationship(CreatureTemplate)
  - Global.CreatureTemplate.IsCicada
  - Global.CreatureTemplate.IsLizard
  - Global.CreatureTemplate.IsVulture
  - Global.CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)
  - Global.CreatureTemplate.NPCTravelAversion
  - Global.CreatureTemplate.PreBakedPathingIndex
  - Global.CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)
  - Global.CreatureTemplate.TopAncestor
  - Global.CreatureTemplate.UseAnyRoomBorderExit
  - Global.CreatureTemplate.abstractImmobile
  - Global.CreatureTemplate.abstractedLaziness
  - Global.CreatureTemplate.ancestor
  - Global.CreatureTemplate.baseDamageResistance
  - Global.CreatureTemplate.baseStunResistance
  - Global.CreatureTemplate.bodySize
  - Global.CreatureTemplate.breedParameters
  - Global.CreatureTemplate.canFly
  - Global.CreatureTemplate.canSwim
  - Global.CreatureTemplate.communityID
  - Global.CreatureTemplate.communityInfluence
  - Global.CreatureTemplate.countsAsAKill
  - Global.CreatureTemplate.daddyCorruptionImmune
  - Global.CreatureTemplate.damageRestistances
  - Global.CreatureTemplate.dangerousToPlayer
  - Global.CreatureTemplate.deliciousness
  - Global.CreatureTemplate.doPreBakedPathing
  - Global.CreatureTemplate.doesNotUseDens
  - Global.CreatureTemplate.doubleReachUpConnectionParams
  - Global.CreatureTemplate.forbidStandardShortcutEntry
  - Global.CreatureTemplate.grasps
  - Global.CreatureTemplate.hibernateOffScreen
  - Global.CreatureTemplate.index
  - Global.CreatureTemplate.instantDeathDamageLimit
  - Global.CreatureTemplate.interestInOtherAncestorsCatches
  - Global.CreatureTemplate.interestInOtherCreaturesCatches
  - Global.CreatureTemplate.jumpAction
  - Global.CreatureTemplate.lungCapacity
  - Global.CreatureTemplate.mappedNodeTypes
  - Global.CreatureTemplate.maxAccessibleTerrain
  - Global.CreatureTemplate.meatPoints
  - Global.CreatureTemplate.movementBasedVision
  - Global.CreatureTemplate.name
  - Global.CreatureTemplate.offScreenSpeed
  - Global.CreatureTemplate.pathingPreferencesConnections
  - Global.CreatureTemplate.pathingPreferencesTiles
  - Global.CreatureTemplate.pickupAction
  - Global.CreatureTemplate.preBakedPathingAncestor
  - Global.CreatureTemplate.quantified
  - Global.CreatureTemplate.quantifiedIndex
  - Global.CreatureTemplate.quickDeath
  - Global.CreatureTemplate.relationships
  - Global.CreatureTemplate.requireAImap
  - Global.CreatureTemplate.roamBetweenRoomsChance
  - Global.CreatureTemplate.roamInRoomChance
  - Global.CreatureTemplate.saveCreature
  - Global.CreatureTemplate.scaryness
  - Global.CreatureTemplate.shortcutAversion
  - Global.CreatureTemplate.shortcutColor
  - Global.CreatureTemplate.shortcutSegments
  - Global.CreatureTemplate.smallCreature
  - Global.CreatureTemplate.socialMemory
  - Global.CreatureTemplate.stowFoodInDen
  - Global.CreatureTemplate.throughSurfaceVision
  - Global.CreatureTemplate.throwAction
  - Global.CreatureTemplate.type
  - Global.CreatureTemplate.usesCreatureHoles
  - Global.CreatureTemplate.usesNPCTransportation
  - Global.CreatureTemplate.usesRegionTransportation
  - Global.CreatureTemplate.virtualCreature
  - Global.CreatureTemplate.visualRadius
  - Global.CreatureTemplate.waterPathingResistance
  - Global.CreatureTemplate.waterRelationship
  - Global.CreatureTemplate.waterVision
  - Global.CreatureTemplate.wormGrassImmune
  - Global.CreatureTemplate.wormgrassTilesIgnored
  langs:
  - csharp
  - vb
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CreatureTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class CreatureTemplate
    content.vb: Public Class CreatureTemplate
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CreatureTemplate.type
  commentId: F:Global.CreatureTemplate.type
  id: type
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: type
  nameWithType: CreatureTemplate.type
  fullName: CreatureTemplate.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Type type
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public type As CreatureTemplate.Type
- uid: Global.CreatureTemplate.name
  commentId: F:Global.CreatureTemplate.name
  id: name
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: name
  nameWithType: CreatureTemplate.name
  fullName: CreatureTemplate.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.CreatureTemplate.ancestor
  commentId: F:Global.CreatureTemplate.ancestor
  id: ancestor
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: ancestor
  nameWithType: CreatureTemplate.ancestor
  fullName: CreatureTemplate.ancestor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.ancestor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate ancestor
    return:
      type: Global.CreatureTemplate
    content.vb: Public ancestor As CreatureTemplate
- uid: Global.CreatureTemplate.preBakedPathingAncestor
  commentId: F:Global.CreatureTemplate.preBakedPathingAncestor
  id: preBakedPathingAncestor
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: preBakedPathingAncestor
  nameWithType: CreatureTemplate.preBakedPathingAncestor
  fullName: CreatureTemplate.preBakedPathingAncestor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.preBakedPathingAncestor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate preBakedPathingAncestor
    return:
      type: Global.CreatureTemplate
    content.vb: Public preBakedPathingAncestor As CreatureTemplate
- uid: Global.CreatureTemplate.index
  commentId: F:Global.CreatureTemplate.index
  id: index
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: index
  nameWithType: CreatureTemplate.index
  fullName: CreatureTemplate.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Global.CreatureTemplate.virtualCreature
  commentId: F:Global.CreatureTemplate.virtualCreature
  id: virtualCreature
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: virtualCreature
  nameWithType: CreatureTemplate.virtualCreature
  fullName: CreatureTemplate.virtualCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.virtualCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool virtualCreature
    return:
      type: System.Boolean
    content.vb: Public virtualCreature As Boolean
- uid: Global.CreatureTemplate.doPreBakedPathing
  commentId: F:Global.CreatureTemplate.doPreBakedPathing
  id: doPreBakedPathing
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: doPreBakedPathing
  nameWithType: CreatureTemplate.doPreBakedPathing
  fullName: CreatureTemplate.doPreBakedPathing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.doPreBakedPathing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool doPreBakedPathing
    return:
      type: System.Boolean
    content.vb: Public doPreBakedPathing As Boolean
- uid: Global.CreatureTemplate.pathingPreferencesTiles
  commentId: F:Global.CreatureTemplate.pathingPreferencesTiles
  id: pathingPreferencesTiles
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: pathingPreferencesTiles
  nameWithType: CreatureTemplate.pathingPreferencesTiles
  fullName: CreatureTemplate.pathingPreferencesTiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.pathingPreferencesTiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost[] pathingPreferencesTiles
    return:
      type: Global.PathCost[]
    content.vb: Public pathingPreferencesTiles As PathCost()
- uid: Global.CreatureTemplate.pathingPreferencesConnections
  commentId: F:Global.CreatureTemplate.pathingPreferencesConnections
  id: pathingPreferencesConnections
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: pathingPreferencesConnections
  nameWithType: CreatureTemplate.pathingPreferencesConnections
  fullName: CreatureTemplate.pathingPreferencesConnections
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.pathingPreferencesConnections</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost[] pathingPreferencesConnections
    return:
      type: Global.PathCost[]
    content.vb: Public pathingPreferencesConnections As PathCost()
- uid: Global.CreatureTemplate.baseDamageResistance
  commentId: F:Global.CreatureTemplate.baseDamageResistance
  id: baseDamageResistance
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: baseDamageResistance
  nameWithType: CreatureTemplate.baseDamageResistance
  fullName: CreatureTemplate.baseDamageResistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.baseDamageResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float baseDamageResistance
    return:
      type: System.Single
    content.vb: Public baseDamageResistance As Single
- uid: Global.CreatureTemplate.baseStunResistance
  commentId: F:Global.CreatureTemplate.baseStunResistance
  id: baseStunResistance
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: baseStunResistance
  nameWithType: CreatureTemplate.baseStunResistance
  fullName: CreatureTemplate.baseStunResistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.baseStunResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float baseStunResistance
    return:
      type: System.Single
    content.vb: Public baseStunResistance As Single
- uid: Global.CreatureTemplate.instantDeathDamageLimit
  commentId: F:Global.CreatureTemplate.instantDeathDamageLimit
  id: instantDeathDamageLimit
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: instantDeathDamageLimit
  nameWithType: CreatureTemplate.instantDeathDamageLimit
  fullName: CreatureTemplate.instantDeathDamageLimit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.instantDeathDamageLimit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float instantDeathDamageLimit
    return:
      type: System.Single
    content.vb: Public instantDeathDamageLimit As Single
- uid: Global.CreatureTemplate.damageRestistances
  commentId: F:Global.CreatureTemplate.damageRestistances
  id: damageRestistances
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: damageRestistances
  nameWithType: CreatureTemplate.damageRestistances
  fullName: CreatureTemplate.damageRestistances
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.damageRestistances</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] damageRestistances
    return:
      type: System.Single[,]
    content.vb: Public damageRestistances As Single(,)
- uid: Global.CreatureTemplate.maxAccessibleTerrain
  commentId: F:Global.CreatureTemplate.maxAccessibleTerrain
  id: maxAccessibleTerrain
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: maxAccessibleTerrain
  nameWithType: CreatureTemplate.maxAccessibleTerrain
  fullName: CreatureTemplate.maxAccessibleTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.maxAccessibleTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxAccessibleTerrain
    return:
      type: System.Int32
    content.vb: Public maxAccessibleTerrain As Integer
- uid: Global.CreatureTemplate.AI
  commentId: F:Global.CreatureTemplate.AI
  id: AI
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: AI
  nameWithType: CreatureTemplate.AI
  fullName: CreatureTemplate.AI
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.AI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AI
    return:
      type: System.Boolean
    content.vb: Public AI As Boolean
- uid: Global.CreatureTemplate.requireAImap
  commentId: F:Global.CreatureTemplate.requireAImap
  id: requireAImap
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: requireAImap
  nameWithType: CreatureTemplate.requireAImap
  fullName: CreatureTemplate.requireAImap
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.requireAImap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool requireAImap
    return:
      type: System.Boolean
    content.vb: Public requireAImap As Boolean
- uid: Global.CreatureTemplate.quantified
  commentId: F:Global.CreatureTemplate.quantified
  id: quantified
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: quantified
  nameWithType: CreatureTemplate.quantified
  fullName: CreatureTemplate.quantified
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.quantified</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool quantified
    return:
      type: System.Boolean
    content.vb: Public quantified As Boolean
- uid: Global.CreatureTemplate.offScreenSpeed
  commentId: F:Global.CreatureTemplate.offScreenSpeed
  id: offScreenSpeed
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: offScreenSpeed
  nameWithType: CreatureTemplate.offScreenSpeed
  fullName: CreatureTemplate.offScreenSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.offScreenSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float offScreenSpeed
    return:
      type: System.Single
    content.vb: Public offScreenSpeed As Single
- uid: Global.CreatureTemplate.abstractedLaziness
  commentId: F:Global.CreatureTemplate.abstractedLaziness
  id: abstractedLaziness
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: abstractedLaziness
  nameWithType: CreatureTemplate.abstractedLaziness
  fullName: CreatureTemplate.abstractedLaziness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.abstractedLaziness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int abstractedLaziness
    return:
      type: System.Int32
    content.vb: Public abstractedLaziness As Integer
- uid: Global.CreatureTemplate.breedParameters
  commentId: F:Global.CreatureTemplate.breedParameters
  id: breedParameters
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: breedParameters
  nameWithType: CreatureTemplate.breedParameters
  fullName: CreatureTemplate.breedParameters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.breedParameters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BreedParameters breedParameters
    return:
      type: Global.BreedParameters
    content.vb: Public breedParameters As BreedParameters
- uid: Global.CreatureTemplate.canFly
  commentId: F:Global.CreatureTemplate.canFly
  id: canFly
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: canFly
  nameWithType: CreatureTemplate.canFly
  fullName: CreatureTemplate.canFly
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.canFly</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool canFly
    return:
      type: System.Boolean
    content.vb: Public canFly As Boolean
- uid: Global.CreatureTemplate.grasps
  commentId: F:Global.CreatureTemplate.grasps
  id: grasps
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: grasps
  nameWithType: CreatureTemplate.grasps
  fullName: CreatureTemplate.grasps
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.grasps</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int grasps
    return:
      type: System.Int32
    content.vb: Public grasps As Integer
- uid: Global.CreatureTemplate.stowFoodInDen
  commentId: F:Global.CreatureTemplate.stowFoodInDen
  id: stowFoodInDen
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: stowFoodInDen
  nameWithType: CreatureTemplate.stowFoodInDen
  fullName: CreatureTemplate.stowFoodInDen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.stowFoodInDen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stowFoodInDen
    return:
      type: System.Boolean
    content.vb: Public stowFoodInDen As Boolean
- uid: Global.CreatureTemplate.smallCreature
  commentId: F:Global.CreatureTemplate.smallCreature
  id: smallCreature
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: smallCreature
  nameWithType: CreatureTemplate.smallCreature
  fullName: CreatureTemplate.smallCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.smallCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool smallCreature
    return:
      type: System.Boolean
    content.vb: Public smallCreature As Boolean
- uid: Global.CreatureTemplate.dangerousToPlayer
  commentId: F:Global.CreatureTemplate.dangerousToPlayer
  id: dangerousToPlayer
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: dangerousToPlayer
  nameWithType: CreatureTemplate.dangerousToPlayer
  fullName: CreatureTemplate.dangerousToPlayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.dangerousToPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dangerousToPlayer
    return:
      type: System.Single
    content.vb: Public dangerousToPlayer As Single
- uid: Global.CreatureTemplate.roamInRoomChance
  commentId: F:Global.CreatureTemplate.roamInRoomChance
  id: roamInRoomChance
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: roamInRoomChance
  nameWithType: CreatureTemplate.roamInRoomChance
  fullName: CreatureTemplate.roamInRoomChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.roamInRoomChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float roamInRoomChance
    return:
      type: System.Single
    content.vb: Public roamInRoomChance As Single
- uid: Global.CreatureTemplate.roamBetweenRoomsChance
  commentId: F:Global.CreatureTemplate.roamBetweenRoomsChance
  id: roamBetweenRoomsChance
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: roamBetweenRoomsChance
  nameWithType: CreatureTemplate.roamBetweenRoomsChance
  fullName: CreatureTemplate.roamBetweenRoomsChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.roamBetweenRoomsChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float roamBetweenRoomsChance
    return:
      type: System.Single
    content.vb: Public roamBetweenRoomsChance As Single
- uid: Global.CreatureTemplate.visualRadius
  commentId: F:Global.CreatureTemplate.visualRadius
  id: visualRadius
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: visualRadius
  nameWithType: CreatureTemplate.visualRadius
  fullName: CreatureTemplate.visualRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.visualRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float visualRadius
    return:
      type: System.Single
    content.vb: Public visualRadius As Single
- uid: Global.CreatureTemplate.waterVision
  commentId: F:Global.CreatureTemplate.waterVision
  id: waterVision
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: waterVision
  nameWithType: CreatureTemplate.waterVision
  fullName: CreatureTemplate.waterVision
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.waterVision</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterVision
    return:
      type: System.Single
    content.vb: Public waterVision As Single
- uid: Global.CreatureTemplate.throughSurfaceVision
  commentId: F:Global.CreatureTemplate.throughSurfaceVision
  id: throughSurfaceVision
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: throughSurfaceVision
  nameWithType: CreatureTemplate.throughSurfaceVision
  fullName: CreatureTemplate.throughSurfaceVision
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.throughSurfaceVision</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float throughSurfaceVision
    return:
      type: System.Single
    content.vb: Public throughSurfaceVision As Single
- uid: Global.CreatureTemplate.movementBasedVision
  commentId: F:Global.CreatureTemplate.movementBasedVision
  id: movementBasedVision
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: movementBasedVision
  nameWithType: CreatureTemplate.movementBasedVision
  fullName: CreatureTemplate.movementBasedVision
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.movementBasedVision</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float movementBasedVision
    return:
      type: System.Single
    content.vb: Public movementBasedVision As Single
- uid: Global.CreatureTemplate.communityID
  commentId: F:Global.CreatureTemplate.communityID
  id: communityID
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: communityID
  nameWithType: CreatureTemplate.communityID
  fullName: CreatureTemplate.communityID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.communityID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureCommunities.CommunityID communityID
    return:
      type: Global.CreatureCommunities.CommunityID
    content.vb: Public communityID As CreatureCommunities.CommunityID
- uid: Global.CreatureTemplate.communityInfluence
  commentId: F:Global.CreatureTemplate.communityInfluence
  id: communityInfluence
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: communityInfluence
  nameWithType: CreatureTemplate.communityInfluence
  fullName: CreatureTemplate.communityInfluence
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.communityInfluence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float communityInfluence
    return:
      type: System.Single
    content.vb: Public communityInfluence As Single
- uid: Global.CreatureTemplate.countsAsAKill
  commentId: F:Global.CreatureTemplate.countsAsAKill
  id: countsAsAKill
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: countsAsAKill
  nameWithType: CreatureTemplate.countsAsAKill
  fullName: CreatureTemplate.countsAsAKill
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.countsAsAKill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int countsAsAKill
    return:
      type: System.Int32
    content.vb: Public countsAsAKill As Integer
- uid: Global.CreatureTemplate.meatPoints
  commentId: F:Global.CreatureTemplate.meatPoints
  id: meatPoints
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: meatPoints
  nameWithType: CreatureTemplate.meatPoints
  fullName: CreatureTemplate.meatPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.meatPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int meatPoints
    return:
      type: System.Int32
    content.vb: Public meatPoints As Integer
- uid: Global.CreatureTemplate.lungCapacity
  commentId: F:Global.CreatureTemplate.lungCapacity
  id: lungCapacity
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: lungCapacity
  nameWithType: CreatureTemplate.lungCapacity
  fullName: CreatureTemplate.lungCapacity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.lungCapacity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lungCapacity
    return:
      type: System.Single
    content.vb: Public lungCapacity As Single
- uid: Global.CreatureTemplate.quickDeath
  commentId: F:Global.CreatureTemplate.quickDeath
  id: quickDeath
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: quickDeath
  nameWithType: CreatureTemplate.quickDeath
  fullName: CreatureTemplate.quickDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.quickDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool quickDeath
    return:
      type: System.Boolean
    content.vb: Public quickDeath As Boolean
- uid: Global.CreatureTemplate.wormGrassImmune
  commentId: F:Global.CreatureTemplate.wormGrassImmune
  id: wormGrassImmune
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: wormGrassImmune
  nameWithType: CreatureTemplate.wormGrassImmune
  fullName: CreatureTemplate.wormGrassImmune
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.wormGrassImmune</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool wormGrassImmune
    return:
      type: System.Boolean
    content.vb: Public wormGrassImmune As Boolean
- uid: Global.CreatureTemplate.daddyCorruptionImmune
  commentId: F:Global.CreatureTemplate.daddyCorruptionImmune
  id: daddyCorruptionImmune
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: daddyCorruptionImmune
  nameWithType: CreatureTemplate.daddyCorruptionImmune
  fullName: CreatureTemplate.daddyCorruptionImmune
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.daddyCorruptionImmune</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool daddyCorruptionImmune
    return:
      type: System.Boolean
    content.vb: Public daddyCorruptionImmune As Boolean
- uid: Global.CreatureTemplate.saveCreature
  commentId: F:Global.CreatureTemplate.saveCreature
  id: saveCreature
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: saveCreature
  nameWithType: CreatureTemplate.saveCreature
  fullName: CreatureTemplate.saveCreature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.saveCreature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool saveCreature
    return:
      type: System.Boolean
    content.vb: Public saveCreature As Boolean
- uid: Global.CreatureTemplate.hibernateOffScreen
  commentId: F:Global.CreatureTemplate.hibernateOffScreen
  id: hibernateOffScreen
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: hibernateOffScreen
  nameWithType: CreatureTemplate.hibernateOffScreen
  fullName: CreatureTemplate.hibernateOffScreen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.hibernateOffScreen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hibernateOffScreen
    return:
      type: System.Boolean
    content.vb: Public hibernateOffScreen As Boolean
- uid: Global.CreatureTemplate.mappedNodeTypes
  commentId: F:Global.CreatureTemplate.mappedNodeTypes
  id: mappedNodeTypes
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: mappedNodeTypes
  nameWithType: CreatureTemplate.mappedNodeTypes
  fullName: CreatureTemplate.mappedNodeTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.mappedNodeTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] mappedNodeTypes
    return:
      type: System.Boolean[]
    content.vb: Public mappedNodeTypes As Boolean()
- uid: Global.CreatureTemplate.shortcutAversion
  commentId: F:Global.CreatureTemplate.shortcutAversion
  id: shortcutAversion
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: shortcutAversion
  nameWithType: CreatureTemplate.shortcutAversion
  fullName: CreatureTemplate.shortcutAversion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.shortcutAversion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost shortcutAversion
    return:
      type: Global.PathCost
    content.vb: Public shortcutAversion As PathCost
- uid: Global.CreatureTemplate.NPCTravelAversion
  commentId: F:Global.CreatureTemplate.NPCTravelAversion
  id: NPCTravelAversion
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: NPCTravelAversion
  nameWithType: CreatureTemplate.NPCTravelAversion
  fullName: CreatureTemplate.NPCTravelAversion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.NPCTravelAversion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost NPCTravelAversion
    return:
      type: Global.PathCost
    content.vb: Public NPCTravelAversion As PathCost
- uid: Global.CreatureTemplate.bodySize
  commentId: F:Global.CreatureTemplate.bodySize
  id: bodySize
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: bodySize
  nameWithType: CreatureTemplate.bodySize
  fullName: CreatureTemplate.bodySize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.bodySize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodySize
    return:
      type: System.Single
    content.vb: Public bodySize As Single
- uid: Global.CreatureTemplate.scaryness
  commentId: F:Global.CreatureTemplate.scaryness
  id: scaryness
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: scaryness
  nameWithType: CreatureTemplate.scaryness
  fullName: CreatureTemplate.scaryness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.scaryness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scaryness
    return:
      type: System.Single
    content.vb: Public scaryness As Single
- uid: Global.CreatureTemplate.deliciousness
  commentId: F:Global.CreatureTemplate.deliciousness
  id: deliciousness
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: deliciousness
  nameWithType: CreatureTemplate.deliciousness
  fullName: CreatureTemplate.deliciousness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.deliciousness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deliciousness
    return:
      type: System.Single
    content.vb: Public deliciousness As Single
- uid: Global.CreatureTemplate.shortcutColor
  commentId: F:Global.CreatureTemplate.shortcutColor
  id: shortcutColor
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: shortcutColor
  nameWithType: CreatureTemplate.shortcutColor
  fullName: CreatureTemplate.shortcutColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.shortcutColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color shortcutColor
    return:
      type: UnityEngine.Color
    content.vb: Public shortcutColor As Color
- uid: Global.CreatureTemplate.shortcutSegments
  commentId: F:Global.CreatureTemplate.shortcutSegments
  id: shortcutSegments
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: shortcutSegments
  nameWithType: CreatureTemplate.shortcutSegments
  fullName: CreatureTemplate.shortcutSegments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.shortcutSegments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int shortcutSegments
    return:
      type: System.Int32
    content.vb: Public shortcutSegments As Integer
- uid: Global.CreatureTemplate.relationships
  commentId: F:Global.CreatureTemplate.relationships
  id: relationships
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: relationships
  nameWithType: CreatureTemplate.relationships
  fullName: CreatureTemplate.relationships
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.relationships</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Relationship[] relationships
    return:
      type: Global.CreatureTemplate.Relationship[]
    content.vb: Public relationships As CreatureTemplate.Relationship()
- uid: Global.CreatureTemplate.quantifiedIndex
  commentId: F:Global.CreatureTemplate.quantifiedIndex
  id: quantifiedIndex
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: quantifiedIndex
  nameWithType: CreatureTemplate.quantifiedIndex
  fullName: CreatureTemplate.quantifiedIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.quantifiedIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int quantifiedIndex
    return:
      type: System.Int32
    content.vb: Public quantifiedIndex As Integer
- uid: Global.CreatureTemplate.waterRelationship
  commentId: F:Global.CreatureTemplate.waterRelationship
  id: waterRelationship
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: waterRelationship
  nameWithType: CreatureTemplate.waterRelationship
  fullName: CreatureTemplate.waterRelationship
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.waterRelationship</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.WaterRelationship waterRelationship
    return:
      type: Global.CreatureTemplate.WaterRelationship
    content.vb: Public waterRelationship As CreatureTemplate.WaterRelationship
- uid: Global.CreatureTemplate.waterPathingResistance
  commentId: F:Global.CreatureTemplate.waterPathingResistance
  id: waterPathingResistance
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: waterPathingResistance
  nameWithType: CreatureTemplate.waterPathingResistance
  fullName: CreatureTemplate.waterPathingResistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.waterPathingResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterPathingResistance
    return:
      type: System.Single
    content.vb: Public waterPathingResistance As Single
- uid: Global.CreatureTemplate.canSwim
  commentId: F:Global.CreatureTemplate.canSwim
  id: canSwim
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: canSwim
  nameWithType: CreatureTemplate.canSwim
  fullName: CreatureTemplate.canSwim
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.canSwim</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool canSwim
    return:
      type: System.Boolean
    content.vb: Public canSwim As Boolean
- uid: Global.CreatureTemplate.socialMemory
  commentId: F:Global.CreatureTemplate.socialMemory
  id: socialMemory
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: socialMemory
  nameWithType: CreatureTemplate.socialMemory
  fullName: CreatureTemplate.socialMemory
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.socialMemory</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool socialMemory
    return:
      type: System.Boolean
    content.vb: Public socialMemory As Boolean
- uid: Global.CreatureTemplate.doubleReachUpConnectionParams
  commentId: F:Global.CreatureTemplate.doubleReachUpConnectionParams
  id: doubleReachUpConnectionParams
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: doubleReachUpConnectionParams
  nameWithType: CreatureTemplate.doubleReachUpConnectionParams
  fullName: CreatureTemplate.doubleReachUpConnectionParams
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.doubleReachUpConnectionParams</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] doubleReachUpConnectionParams
    return:
      type: System.Int32[]
    content.vb: Public doubleReachUpConnectionParams As Integer()
- uid: Global.CreatureTemplate.BlizzardAdapted
  commentId: F:Global.CreatureTemplate.BlizzardAdapted
  id: BlizzardAdapted
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: BlizzardAdapted
  nameWithType: CreatureTemplate.BlizzardAdapted
  fullName: CreatureTemplate.BlizzardAdapted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.BlizzardAdapted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BlizzardAdapted
    return:
      type: System.Boolean
    content.vb: Public BlizzardAdapted As Boolean
- uid: Global.CreatureTemplate.BlizzardWanderer
  commentId: F:Global.CreatureTemplate.BlizzardWanderer
  id: BlizzardWanderer
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: BlizzardWanderer
  nameWithType: CreatureTemplate.BlizzardWanderer
  fullName: CreatureTemplate.BlizzardWanderer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.BlizzardWanderer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BlizzardWanderer
    return:
      type: System.Boolean
    content.vb: Public BlizzardWanderer As Boolean
- uid: Global.CreatureTemplate.usesNPCTransportation
  commentId: F:Global.CreatureTemplate.usesNPCTransportation
  id: usesNPCTransportation
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: usesNPCTransportation
  nameWithType: CreatureTemplate.usesNPCTransportation
  fullName: CreatureTemplate.usesNPCTransportation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.usesNPCTransportation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool usesNPCTransportation
    return:
      type: System.Boolean
    content.vb: Public usesNPCTransportation As Boolean
- uid: Global.CreatureTemplate.usesRegionTransportation
  commentId: F:Global.CreatureTemplate.usesRegionTransportation
  id: usesRegionTransportation
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: usesRegionTransportation
  nameWithType: CreatureTemplate.usesRegionTransportation
  fullName: CreatureTemplate.usesRegionTransportation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.usesRegionTransportation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool usesRegionTransportation
    return:
      type: System.Boolean
    content.vb: Public usesRegionTransportation As Boolean
- uid: Global.CreatureTemplate.usesCreatureHoles
  commentId: F:Global.CreatureTemplate.usesCreatureHoles
  id: usesCreatureHoles
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: usesCreatureHoles
  nameWithType: CreatureTemplate.usesCreatureHoles
  fullName: CreatureTemplate.usesCreatureHoles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.usesCreatureHoles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool usesCreatureHoles
    return:
      type: System.Boolean
    content.vb: Public usesCreatureHoles As Boolean
- uid: Global.CreatureTemplate.pickupAction
  commentId: F:Global.CreatureTemplate.pickupAction
  id: pickupAction
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: pickupAction
  nameWithType: CreatureTemplate.pickupAction
  fullName: CreatureTemplate.pickupAction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.pickupAction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string pickupAction
    return:
      type: System.String
    content.vb: Public pickupAction As String
- uid: Global.CreatureTemplate.throwAction
  commentId: F:Global.CreatureTemplate.throwAction
  id: throwAction
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: throwAction
  nameWithType: CreatureTemplate.throwAction
  fullName: CreatureTemplate.throwAction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.throwAction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string throwAction
    return:
      type: System.String
    content.vb: Public throwAction As String
- uid: Global.CreatureTemplate.jumpAction
  commentId: F:Global.CreatureTemplate.jumpAction
  id: jumpAction
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: jumpAction
  nameWithType: CreatureTemplate.jumpAction
  fullName: CreatureTemplate.jumpAction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.jumpAction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string jumpAction
    return:
      type: System.String
    content.vb: Public jumpAction As String
- uid: Global.CreatureTemplate.wormgrassTilesIgnored
  commentId: F:Global.CreatureTemplate.wormgrassTilesIgnored
  id: wormgrassTilesIgnored
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: wormgrassTilesIgnored
  nameWithType: CreatureTemplate.wormgrassTilesIgnored
  fullName: CreatureTemplate.wormgrassTilesIgnored
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.wormgrassTilesIgnored</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool wormgrassTilesIgnored
    return:
      type: System.Boolean
    content.vb: Public wormgrassTilesIgnored As Boolean
- uid: Global.CreatureTemplate.doesNotUseDens
  commentId: F:Global.CreatureTemplate.doesNotUseDens
  id: doesNotUseDens
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: doesNotUseDens
  nameWithType: CreatureTemplate.doesNotUseDens
  fullName: CreatureTemplate.doesNotUseDens
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.doesNotUseDens</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool doesNotUseDens
    return:
      type: System.Boolean
    content.vb: Public doesNotUseDens As Boolean
- uid: Global.CreatureTemplate.abstractImmobile
  commentId: F:Global.CreatureTemplate.abstractImmobile
  id: abstractImmobile
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: abstractImmobile
  nameWithType: CreatureTemplate.abstractImmobile
  fullName: CreatureTemplate.abstractImmobile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.abstractImmobile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool abstractImmobile
    return:
      type: System.Boolean
    content.vb: Public abstractImmobile As Boolean
- uid: Global.CreatureTemplate.interestInOtherCreaturesCatches
  commentId: F:Global.CreatureTemplate.interestInOtherCreaturesCatches
  id: interestInOtherCreaturesCatches
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: interestInOtherCreaturesCatches
  nameWithType: CreatureTemplate.interestInOtherCreaturesCatches
  fullName: CreatureTemplate.interestInOtherCreaturesCatches
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.interestInOtherCreaturesCatches</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float interestInOtherCreaturesCatches
    return:
      type: System.Single
    content.vb: Public interestInOtherCreaturesCatches As Single
- uid: Global.CreatureTemplate.interestInOtherAncestorsCatches
  commentId: F:Global.CreatureTemplate.interestInOtherAncestorsCatches
  id: interestInOtherAncestorsCatches
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: interestInOtherAncestorsCatches
  nameWithType: CreatureTemplate.interestInOtherAncestorsCatches
  fullName: CreatureTemplate.interestInOtherAncestorsCatches
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.interestInOtherAncestorsCatches</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float interestInOtherAncestorsCatches
    return:
      type: System.Single
    content.vb: Public interestInOtherAncestorsCatches As Single
- uid: Global.CreatureTemplate.forbidStandardShortcutEntry
  commentId: F:Global.CreatureTemplate.forbidStandardShortcutEntry
  id: forbidStandardShortcutEntry
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: forbidStandardShortcutEntry
  nameWithType: CreatureTemplate.forbidStandardShortcutEntry
  fullName: CreatureTemplate.forbidStandardShortcutEntry
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.forbidStandardShortcutEntry</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool forbidStandardShortcutEntry
    return:
      type: System.Boolean
    content.vb: Public forbidStandardShortcutEntry As Boolean
- uid: Global.CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)
  commentId: M:Global.CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)
  id: '#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)'
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: CreatureTemplate(Type, CreatureTemplate, List<TileTypeResistance>, List<TileConnectionResistance>, Relationship)
  nameWithType: CreatureTemplate.CreatureTemplate(CreatureTemplate.Type, CreatureTemplate, List<TileTypeResistance>, List<TileConnectionResistance>, CreatureTemplate.Relationship)
  fullName: CreatureTemplate.CreatureTemplate(CreatureTemplate.Type, CreatureTemplate, System.Collections.Generic.List<TileTypeResistance>, System.Collections.Generic.List<TileConnectionResistance>, CreatureTemplate.Relationship)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate(CreatureTemplate.Type type, CreatureTemplate ancestor, List<TileTypeResistance> tileResistances, List<TileConnectionResistance> connectionResistances, CreatureTemplate.Relationship defaultRelationship)
    parameters:
    - id: type
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: ancestor
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ancestor</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: tileResistances
      type: System.Collections.Generic.List{TileTypeResistance}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tileResistances</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: connectionResistances
      type: System.Collections.Generic.List{TileConnectionResistance}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>connectionResistances</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: defaultRelationship
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defaultRelationship</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate.Type,CreatureTemplate,System.Collections.Generic.List{TileTypeResistance},System.Collections.Generic.List{TileConnectionResistance},CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As CreatureTemplate.Type, ancestor As CreatureTemplate, tileResistances As List(Of TileTypeResistance), connectionResistances As List(Of TileConnectionResistance), defaultRelationship As CreatureTemplate.Relationship)
  overload: Global.CreatureTemplate.#ctor*
  nameWithType.vb: CreatureTemplate.New(CreatureTemplate.Type, CreatureTemplate, List(Of TileTypeResistance), List(Of TileConnectionResistance), CreatureTemplate.Relationship)
  fullName.vb: CreatureTemplate.New(CreatureTemplate.Type, CreatureTemplate, System.Collections.Generic.List(Of TileTypeResistance), System.Collections.Generic.List(Of TileConnectionResistance), CreatureTemplate.Relationship)
  name.vb: New(Type, CreatureTemplate, List(Of TileTypeResistance), List(Of TileConnectionResistance), Relationship)
- uid: Global.CreatureTemplate.#ctor(CreatureTemplate)
  commentId: M:Global.CreatureTemplate.#ctor(CreatureTemplate)
  id: '#ctor(CreatureTemplate)'
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: CreatureTemplate(CreatureTemplate)
  nameWithType: CreatureTemplate.CreatureTemplate(CreatureTemplate)
  fullName: CreatureTemplate.CreatureTemplate(CreatureTemplate)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureTemplate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate(CreatureTemplate copy)
    parameters:
    - id: copy
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>copy</parameter>
            <parameter>M:CreatureTemplate.#ctor(CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(copy As CreatureTemplate)
  overload: Global.CreatureTemplate.#ctor*
  nameWithType.vb: CreatureTemplate.New(CreatureTemplate)
  fullName.vb: CreatureTemplate.New(CreatureTemplate)
  name.vb: New(CreatureTemplate)
- uid: Global.CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)
  commentId: M:Global.CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)
  id: SetNodeType(AbstractRoomNode.Type,System.Boolean)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: SetNodeType(Type, bool)
  nameWithType: CreatureTemplate.SetNodeType(AbstractRoomNode.Type, bool)
  fullName: CreatureTemplate.SetNodeType(AbstractRoomNode.Type, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetNodeType(AbstractRoomNode.Type tp, bool b)
    parameters:
    - id: tp
      type: Global.AbstractRoomNode.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tp</parameter>
            <parameter>M:CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)</parameter>
          </include>
        </markup>
    - id: b
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:CreatureTemplate.SetNodeType(AbstractRoomNode.Type,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetNodeType(tp As AbstractRoomNode.Type, b As Boolean)
  overload: Global.CreatureTemplate.SetNodeType*
  nameWithType.vb: CreatureTemplate.SetNodeType(AbstractRoomNode.Type, Boolean)
  fullName.vb: CreatureTemplate.SetNodeType(AbstractRoomNode.Type, Boolean)
  name.vb: SetNodeType(Type, Boolean)
- uid: Global.CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)
  commentId: M:Global.CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)
  id: ConnectionResistance(MovementConnection.MovementType)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: ConnectionResistance(MovementType)
  nameWithType: CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)
  fullName: CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost ConnectionResistance(MovementConnection.MovementType v)
    parameters:
    - id: v
      type: Global.MovementConnection.MovementType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>v</parameter>
            <parameter>M:CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.ConnectionResistance(MovementConnection.MovementType)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionResistance(v As MovementConnection.MovementType) As PathCost
  overload: Global.CreatureTemplate.ConnectionResistance*
- uid: Global.CreatureTemplate.AccessibilityResistance(AItile.Accessibility)
  commentId: M:Global.CreatureTemplate.AccessibilityResistance(AItile.Accessibility)
  id: AccessibilityResistance(AItile.Accessibility)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: AccessibilityResistance(Accessibility)
  nameWithType: CreatureTemplate.AccessibilityResistance(AItile.Accessibility)
  fullName: CreatureTemplate.AccessibilityResistance(AItile.Accessibility)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.AccessibilityResistance(AItile.Accessibility)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost AccessibilityResistance(AItile.Accessibility v)
    parameters:
    - id: v
      type: Global.AItile.Accessibility
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>v</parameter>
            <parameter>M:CreatureTemplate.AccessibilityResistance(AItile.Accessibility)</parameter>
          </include>
        </markup>
    return:
      type: Global.PathCost
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.AccessibilityResistance(AItile.Accessibility)</parameter>
          </include>
        </markup>
    content.vb: Public Function AccessibilityResistance(v As AItile.Accessibility) As PathCost
  overload: Global.CreatureTemplate.AccessibilityResistance*
- uid: Global.CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)
  commentId: M:Global.CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)
  id: MovementLegalInRelationToWater(System.Boolean,System.Boolean)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: MovementLegalInRelationToWater(bool, bool)
  nameWithType: CreatureTemplate.MovementLegalInRelationToWater(bool, bool)
  fullName: CreatureTemplate.MovementLegalInRelationToWater(bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MovementLegalInRelationToWater(bool deepWater, bool waterSurface)
    parameters:
    - id: deepWater
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deepWater</parameter>
            <parameter>M:CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: waterSurface
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>waterSurface</parameter>
            <parameter>M:CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.MovementLegalInRelationToWater(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function MovementLegalInRelationToWater(deepWater As Boolean, waterSurface As Boolean) As Boolean
  overload: Global.CreatureTemplate.MovementLegalInRelationToWater*
  nameWithType.vb: CreatureTemplate.MovementLegalInRelationToWater(Boolean, Boolean)
  fullName.vb: CreatureTemplate.MovementLegalInRelationToWater(Boolean, Boolean)
  name.vb: MovementLegalInRelationToWater(Boolean, Boolean)
- uid: Global.CreatureTemplate.AbstractSubmersionLegal(System.Boolean)
  commentId: M:Global.CreatureTemplate.AbstractSubmersionLegal(System.Boolean)
  id: AbstractSubmersionLegal(System.Boolean)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: AbstractSubmersionLegal(bool)
  nameWithType: CreatureTemplate.AbstractSubmersionLegal(bool)
  fullName: CreatureTemplate.AbstractSubmersionLegal(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.AbstractSubmersionLegal(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AbstractSubmersionLegal(bool nodeSubmerged)
    parameters:
    - id: nodeSubmerged
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nodeSubmerged</parameter>
            <parameter>M:CreatureTemplate.AbstractSubmersionLegal(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.AbstractSubmersionLegal(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function AbstractSubmersionLegal(nodeSubmerged As Boolean) As Boolean
  overload: Global.CreatureTemplate.AbstractSubmersionLegal*
  nameWithType.vb: CreatureTemplate.AbstractSubmersionLegal(Boolean)
  fullName.vb: CreatureTemplate.AbstractSubmersionLegal(Boolean)
  name.vb: AbstractSubmersionLegal(Boolean)
- uid: Global.CreatureTemplate.TopAncestor
  commentId: M:Global.CreatureTemplate.TopAncestor
  id: TopAncestor
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: TopAncestor()
  nameWithType: CreatureTemplate.TopAncestor()
  fullName: CreatureTemplate.TopAncestor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.TopAncestor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate TopAncestor()
    return:
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.TopAncestor</parameter>
          </include>
        </markup>
    content.vb: Public Function TopAncestor() As CreatureTemplate
  overload: Global.CreatureTemplate.TopAncestor*
- uid: Global.CreatureTemplate.CreatureRelationship(Creature)
  commentId: M:Global.CreatureTemplate.CreatureRelationship(Creature)
  id: CreatureRelationship(Creature)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: CreatureRelationship(Creature)
  nameWithType: CreatureTemplate.CreatureRelationship(Creature)
  fullName: CreatureTemplate.CreatureRelationship(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.CreatureRelationship(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Relationship CreatureRelationship(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:CreatureTemplate.CreatureRelationship(Creature)</parameter>
          </include>
        </markup>
    return:
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.CreatureRelationship(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatureRelationship(crit As Creature) As CreatureTemplate.Relationship
  overload: Global.CreatureTemplate.CreatureRelationship*
- uid: Global.CreatureTemplate.CreatureRelationship(CreatureTemplate)
  commentId: M:Global.CreatureTemplate.CreatureRelationship(CreatureTemplate)
  id: CreatureRelationship(CreatureTemplate)
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: CreatureRelationship(CreatureTemplate)
  nameWithType: CreatureTemplate.CreatureRelationship(CreatureTemplate)
  fullName: CreatureTemplate.CreatureRelationship(CreatureTemplate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.CreatureRelationship(CreatureTemplate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Relationship CreatureRelationship(CreatureTemplate crit)
    parameters:
    - id: crit
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:CreatureTemplate.CreatureRelationship(CreatureTemplate)</parameter>
          </include>
        </markup>
    return:
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.CreatureRelationship(CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreatureRelationship(crit As CreatureTemplate) As CreatureTemplate.Relationship
  overload: Global.CreatureTemplate.CreatureRelationship*
- uid: Global.CreatureTemplate.UseAnyRoomBorderExit
  commentId: P:Global.CreatureTemplate.UseAnyRoomBorderExit
  id: UseAnyRoomBorderExit
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: UseAnyRoomBorderExit
  nameWithType: CreatureTemplate.UseAnyRoomBorderExit
  fullName: CreatureTemplate.UseAnyRoomBorderExit
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.UseAnyRoomBorderExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool UseAnyRoomBorderExit { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property UseAnyRoomBorderExit As Boolean
  overload: Global.CreatureTemplate.UseAnyRoomBorderExit*
- uid: Global.CreatureTemplate.IsCicada
  commentId: P:Global.CreatureTemplate.IsCicada
  id: IsCicada
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: IsCicada
  nameWithType: CreatureTemplate.IsCicada
  fullName: CreatureTemplate.IsCicada
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.IsCicada</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCicada { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCicada As Boolean
  overload: Global.CreatureTemplate.IsCicada*
- uid: Global.CreatureTemplate.IsLizard
  commentId: P:Global.CreatureTemplate.IsLizard
  id: IsLizard
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: IsLizard
  nameWithType: CreatureTemplate.IsLizard
  fullName: CreatureTemplate.IsLizard
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.IsLizard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsLizard { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsLizard As Boolean
  overload: Global.CreatureTemplate.IsLizard*
- uid: Global.CreatureTemplate.IsVulture
  commentId: P:Global.CreatureTemplate.IsVulture
  id: IsVulture
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: IsVulture
  nameWithType: CreatureTemplate.IsVulture
  fullName: CreatureTemplate.IsVulture
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.IsVulture</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsVulture { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsVulture As Boolean
  overload: Global.CreatureTemplate.IsVulture*
- uid: Global.CreatureTemplate.PreBakedPathingIndex
  commentId: P:Global.CreatureTemplate.PreBakedPathingIndex
  id: PreBakedPathingIndex
  parent: Global.CreatureTemplate
  langs:
  - csharp
  - vb
  name: PreBakedPathingIndex
  nameWithType: CreatureTemplate.PreBakedPathingIndex
  fullName: CreatureTemplate.PreBakedPathingIndex
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.PreBakedPathingIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int PreBakedPathingIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PreBakedPathingIndex As Integer
  overload: Global.CreatureTemplate.PreBakedPathingIndex*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.PathCost[]
  isExternal: true
  href: PathCost.html
  name: PathCost[]
  nameWithType: PathCost[]
  fullName: PathCost[]
  nameWithType.vb: PathCost()
  fullName.vb: PathCost()
  name.vb: PathCost()
  spec.csharp:
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: Global.BreedParameters
  commentId: T:Global.BreedParameters
  isExternal: true
  href: BreedParameters.html
  name: BreedParameters
  nameWithType: BreedParameters
  fullName: BreedParameters
- uid: Global.CreatureCommunities.CommunityID
  commentId: T:Global.CreatureCommunities.CommunityID
  isExternal: true
  href: CreatureCommunities.html
  name: CreatureCommunities.CommunityID
  nameWithType: CreatureCommunities.CommunityID
  fullName: CreatureCommunities.CommunityID
  spec.csharp:
  - uid: Global.CreatureCommunities
    name: CreatureCommunities
    isExternal: true
    href: CreatureCommunities.html
  - name: .
  - uid: Global.CreatureCommunities.CommunityID
    name: CommunityID
    isExternal: true
    href: CreatureCommunities.CommunityID.html
  spec.vb:
  - uid: Global.CreatureCommunities
    name: CreatureCommunities
    isExternal: true
    href: CreatureCommunities.html
  - name: .
  - uid: Global.CreatureCommunities.CommunityID
    name: CommunityID
    isExternal: true
    href: CreatureCommunities.CommunityID.html
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.CreatureTemplate.Relationship[]
  isExternal: true
  href: CreatureTemplate.Relationship.html
  name: Relationship[]
  nameWithType: CreatureTemplate.Relationship[]
  fullName: CreatureTemplate.Relationship[]
  nameWithType.vb: CreatureTemplate.Relationship()
  fullName.vb: CreatureTemplate.Relationship()
  name.vb: Relationship()
  spec.csharp:
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  - name: (
  - name: )
- uid: Global.CreatureTemplate.WaterRelationship
  commentId: T:Global.CreatureTemplate.WaterRelationship
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.WaterRelationship
  nameWithType: CreatureTemplate.WaterRelationship
  fullName: CreatureTemplate.WaterRelationship
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.WaterRelationship
    name: WaterRelationship
    isExternal: true
    href: CreatureTemplate.WaterRelationship.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.WaterRelationship
    name: WaterRelationship
    isExternal: true
    href: CreatureTemplate.WaterRelationship.html
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.CreatureTemplate.#ctor*
  commentId: Overload:Global.CreatureTemplate.#ctor
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate__ctor_CreatureTemplate_Type_CreatureTemplate_System_Collections_Generic_List_TileTypeResistance__System_Collections_Generic_List_TileConnectionResistance__CreatureTemplate_Relationship_
  name: CreatureTemplate
  nameWithType: CreatureTemplate.CreatureTemplate
  fullName: CreatureTemplate.CreatureTemplate
  nameWithType.vb: CreatureTemplate.New
  fullName.vb: CreatureTemplate.New
  name.vb: New
- uid: System.Collections.Generic.List{TileTypeResistance}
  commentId: T:System.Collections.Generic.List{TileTypeResistance}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TileTypeResistance>
  nameWithType: List<TileTypeResistance>
  fullName: System.Collections.Generic.List<TileTypeResistance>
  nameWithType.vb: List(Of TileTypeResistance)
  fullName.vb: System.Collections.Generic.List(Of TileTypeResistance)
  name.vb: List(Of TileTypeResistance)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.TileTypeResistance
    name: TileTypeResistance
    isExternal: true
    href: TileTypeResistance.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.TileTypeResistance
    name: TileTypeResistance
    isExternal: true
    href: TileTypeResistance.html
  - name: )
- uid: System.Collections.Generic.List{TileConnectionResistance}
  commentId: T:System.Collections.Generic.List{TileConnectionResistance}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<TileConnectionResistance>
  nameWithType: List<TileConnectionResistance>
  fullName: System.Collections.Generic.List<TileConnectionResistance>
  nameWithType.vb: List(Of TileConnectionResistance)
  fullName.vb: System.Collections.Generic.List(Of TileConnectionResistance)
  name.vb: List(Of TileConnectionResistance)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.TileConnectionResistance
    name: TileConnectionResistance
    isExternal: true
    href: TileConnectionResistance.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.TileConnectionResistance
    name: TileConnectionResistance
    isExternal: true
    href: TileConnectionResistance.html
  - name: )
- uid: Global.CreatureTemplate.Relationship
  commentId: T:Global.CreatureTemplate.Relationship
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Relationship
  nameWithType: CreatureTemplate.Relationship
  fullName: CreatureTemplate.Relationship
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.CreatureTemplate.SetNodeType*
  commentId: Overload:Global.CreatureTemplate.SetNodeType
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_SetNodeType_AbstractRoomNode_Type_System_Boolean_
  name: SetNodeType
  nameWithType: CreatureTemplate.SetNodeType
  fullName: CreatureTemplate.SetNodeType
- uid: Global.AbstractRoomNode.Type
  commentId: T:Global.AbstractRoomNode.Type
  isExternal: true
  href: AbstractRoomNode.html
  name: AbstractRoomNode.Type
  nameWithType: AbstractRoomNode.Type
  fullName: AbstractRoomNode.Type
  spec.csharp:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
  spec.vb:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
- uid: Global.CreatureTemplate.ConnectionResistance*
  commentId: Overload:Global.CreatureTemplate.ConnectionResistance
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_ConnectionResistance_MovementConnection_MovementType_
  name: ConnectionResistance
  nameWithType: CreatureTemplate.ConnectionResistance
  fullName: CreatureTemplate.ConnectionResistance
- uid: Global.MovementConnection.MovementType
  commentId: T:Global.MovementConnection.MovementType
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection.MovementType
  nameWithType: MovementConnection.MovementType
  fullName: MovementConnection.MovementType
  spec.csharp:
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: .
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  spec.vb:
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: .
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
- uid: Global.CreatureTemplate.AccessibilityResistance*
  commentId: Overload:Global.CreatureTemplate.AccessibilityResistance
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_AccessibilityResistance_AItile_Accessibility_
  name: AccessibilityResistance
  nameWithType: CreatureTemplate.AccessibilityResistance
  fullName: CreatureTemplate.AccessibilityResistance
- uid: Global.AItile.Accessibility
  commentId: T:Global.AItile.Accessibility
  isExternal: true
  href: AItile.html
  name: AItile.Accessibility
  nameWithType: AItile.Accessibility
  fullName: AItile.Accessibility
  spec.csharp:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
  spec.vb:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
- uid: Global.CreatureTemplate.MovementLegalInRelationToWater*
  commentId: Overload:Global.CreatureTemplate.MovementLegalInRelationToWater
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_MovementLegalInRelationToWater_System_Boolean_System_Boolean_
  name: MovementLegalInRelationToWater
  nameWithType: CreatureTemplate.MovementLegalInRelationToWater
  fullName: CreatureTemplate.MovementLegalInRelationToWater
- uid: Global.CreatureTemplate.AbstractSubmersionLegal*
  commentId: Overload:Global.CreatureTemplate.AbstractSubmersionLegal
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_AbstractSubmersionLegal_System_Boolean_
  name: AbstractSubmersionLegal
  nameWithType: CreatureTemplate.AbstractSubmersionLegal
  fullName: CreatureTemplate.AbstractSubmersionLegal
- uid: Global.CreatureTemplate.TopAncestor*
  commentId: Overload:Global.CreatureTemplate.TopAncestor
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_TopAncestor
  name: TopAncestor
  nameWithType: CreatureTemplate.TopAncestor
  fullName: CreatureTemplate.TopAncestor
- uid: Global.CreatureTemplate.CreatureRelationship*
  commentId: Overload:Global.CreatureTemplate.CreatureRelationship
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_CreatureRelationship_Creature_
  name: CreatureRelationship
  nameWithType: CreatureTemplate.CreatureRelationship
  fullName: CreatureTemplate.CreatureRelationship
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Global.CreatureTemplate.UseAnyRoomBorderExit*
  commentId: Overload:Global.CreatureTemplate.UseAnyRoomBorderExit
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_UseAnyRoomBorderExit
  name: UseAnyRoomBorderExit
  nameWithType: CreatureTemplate.UseAnyRoomBorderExit
  fullName: CreatureTemplate.UseAnyRoomBorderExit
- uid: Global.CreatureTemplate.IsCicada*
  commentId: Overload:Global.CreatureTemplate.IsCicada
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_IsCicada
  name: IsCicada
  nameWithType: CreatureTemplate.IsCicada
  fullName: CreatureTemplate.IsCicada
- uid: Global.CreatureTemplate.IsLizard*
  commentId: Overload:Global.CreatureTemplate.IsLizard
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_IsLizard
  name: IsLizard
  nameWithType: CreatureTemplate.IsLizard
  fullName: CreatureTemplate.IsLizard
- uid: Global.CreatureTemplate.IsVulture*
  commentId: Overload:Global.CreatureTemplate.IsVulture
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_IsVulture
  name: IsVulture
  nameWithType: CreatureTemplate.IsVulture
  fullName: CreatureTemplate.IsVulture
- uid: Global.CreatureTemplate.PreBakedPathingIndex*
  commentId: Overload:Global.CreatureTemplate.PreBakedPathingIndex
  isExternal: true
  href: Global.CreatureTemplate.html#CreatureTemplate_PreBakedPathingIndex
  name: PreBakedPathingIndex
  nameWithType: CreatureTemplate.PreBakedPathingIndex
  fullName: CreatureTemplate.PreBakedPathingIndex
