### YamlMime:ManagedReference
items:
- uid: Watcher.ICallForHelp
  commentId: T:Watcher.ICallForHelp
  id: ICallForHelp
  parent: Watcher
  children:
  - Watcher.ICallForHelp.AggreToHelp
  - Watcher.ICallForHelp.CanAcceptHelp
  - Watcher.ICallForHelp.CanLetGo
  - Watcher.ICallForHelp.HelpEntranceVec
  - Watcher.ICallForHelp.HelpPoint
  - Watcher.ICallForHelp.HelpPriority
  - Watcher.ICallForHelp.IsHelpComing
  - Watcher.ICallForHelp.NeedsHelp
  - Watcher.ICallForHelp.RecieveHelp
  langs:
  - csharp
  - vb
  name: ICallForHelp
  nameWithType: ICallForHelp
  fullName: Watcher.ICallForHelp
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.ICallForHelp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface ICallForHelp
    content.vb: Public Interface ICallForHelp
- uid: Watcher.ICallForHelp.NeedsHelp
  commentId: M:Watcher.ICallForHelp.NeedsHelp
  id: NeedsHelp
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: NeedsHelp()
  nameWithType: ICallForHelp.NeedsHelp()
  fullName: Watcher.ICallForHelp.NeedsHelp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.NeedsHelp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool NeedsHelp()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.NeedsHelp</parameter>
          </include>
        </markup>
    content.vb: Function NeedsHelp() As Boolean
  overload: Watcher.ICallForHelp.NeedsHelp*
- uid: Watcher.ICallForHelp.RecieveHelp
  commentId: M:Watcher.ICallForHelp.RecieveHelp
  id: RecieveHelp
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: RecieveHelp()
  nameWithType: ICallForHelp.RecieveHelp()
  fullName: Watcher.ICallForHelp.RecieveHelp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.RecieveHelp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void RecieveHelp()
    content.vb: Sub RecieveHelp()
  overload: Watcher.ICallForHelp.RecieveHelp*
- uid: Watcher.ICallForHelp.HelpPriority
  commentId: M:Watcher.ICallForHelp.HelpPriority
  id: HelpPriority
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: HelpPriority()
  nameWithType: ICallForHelp.HelpPriority()
  fullName: Watcher.ICallForHelp.HelpPriority()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.HelpPriority</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: float HelpPriority()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.HelpPriority</parameter>
          </include>
        </markup>
    content.vb: Function HelpPriority() As Single
  overload: Watcher.ICallForHelp.HelpPriority*
- uid: Watcher.ICallForHelp.CanLetGo
  commentId: M:Watcher.ICallForHelp.CanLetGo
  id: CanLetGo
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: CanLetGo()
  nameWithType: ICallForHelp.CanLetGo()
  fullName: Watcher.ICallForHelp.CanLetGo()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.CanLetGo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool CanLetGo()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.CanLetGo</parameter>
          </include>
        </markup>
    content.vb: Function CanLetGo() As Boolean
  overload: Watcher.ICallForHelp.CanLetGo*
- uid: Watcher.ICallForHelp.CanAcceptHelp
  commentId: M:Watcher.ICallForHelp.CanAcceptHelp
  id: CanAcceptHelp
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: CanAcceptHelp()
  nameWithType: ICallForHelp.CanAcceptHelp()
  fullName: Watcher.ICallForHelp.CanAcceptHelp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.CanAcceptHelp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool CanAcceptHelp()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.CanAcceptHelp</parameter>
          </include>
        </markup>
    content.vb: Function CanAcceptHelp() As Boolean
  overload: Watcher.ICallForHelp.CanAcceptHelp*
- uid: Watcher.ICallForHelp.AggreToHelp
  commentId: M:Watcher.ICallForHelp.AggreToHelp
  id: AggreToHelp
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: AggreToHelp()
  nameWithType: ICallForHelp.AggreToHelp()
  fullName: Watcher.ICallForHelp.AggreToHelp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.AggreToHelp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void AggreToHelp()
    content.vb: Sub AggreToHelp()
  overload: Watcher.ICallForHelp.AggreToHelp*
- uid: Watcher.ICallForHelp.IsHelpComing
  commentId: M:Watcher.ICallForHelp.IsHelpComing
  id: IsHelpComing
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: IsHelpComing()
  nameWithType: ICallForHelp.IsHelpComing()
  fullName: Watcher.ICallForHelp.IsHelpComing()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.IsHelpComing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: bool IsHelpComing()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.IsHelpComing</parameter>
          </include>
        </markup>
    content.vb: Function IsHelpComing() As Boolean
  overload: Watcher.ICallForHelp.IsHelpComing*
- uid: Watcher.ICallForHelp.HelpPoint
  commentId: M:Watcher.ICallForHelp.HelpPoint
  id: HelpPoint
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: HelpPoint()
  nameWithType: ICallForHelp.HelpPoint()
  fullName: Watcher.ICallForHelp.HelpPoint()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.HelpPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 HelpPoint()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.HelpPoint</parameter>
          </include>
        </markup>
    content.vb: Function HelpPoint() As Vector2
  overload: Watcher.ICallForHelp.HelpPoint*
- uid: Watcher.ICallForHelp.HelpEntranceVec
  commentId: M:Watcher.ICallForHelp.HelpEntranceVec
  id: HelpEntranceVec
  parent: Watcher.ICallForHelp
  langs:
  - csharp
  - vb
  name: HelpEntranceVec()
  nameWithType: ICallForHelp.HelpEntranceVec()
  fullName: Watcher.ICallForHelp.HelpEntranceVec()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.ICallForHelp.HelpEntranceVec</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 HelpEntranceVec()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Watcher.ICallForHelp.HelpEntranceVec</parameter>
          </include>
        </markup>
    content.vb: Function HelpEntranceVec() As Vector2
  overload: Watcher.ICallForHelp.HelpEntranceVec*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: Watcher.ICallForHelp.NeedsHelp*
  commentId: Overload:Watcher.ICallForHelp.NeedsHelp
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_NeedsHelp
  name: NeedsHelp
  nameWithType: ICallForHelp.NeedsHelp
  fullName: Watcher.ICallForHelp.NeedsHelp
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Watcher.ICallForHelp.RecieveHelp*
  commentId: Overload:Watcher.ICallForHelp.RecieveHelp
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_RecieveHelp
  name: RecieveHelp
  nameWithType: ICallForHelp.RecieveHelp
  fullName: Watcher.ICallForHelp.RecieveHelp
- uid: Watcher.ICallForHelp.HelpPriority*
  commentId: Overload:Watcher.ICallForHelp.HelpPriority
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_HelpPriority
  name: HelpPriority
  nameWithType: ICallForHelp.HelpPriority
  fullName: Watcher.ICallForHelp.HelpPriority
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Watcher.ICallForHelp.CanLetGo*
  commentId: Overload:Watcher.ICallForHelp.CanLetGo
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_CanLetGo
  name: CanLetGo
  nameWithType: ICallForHelp.CanLetGo
  fullName: Watcher.ICallForHelp.CanLetGo
- uid: Watcher.ICallForHelp.CanAcceptHelp*
  commentId: Overload:Watcher.ICallForHelp.CanAcceptHelp
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_CanAcceptHelp
  name: CanAcceptHelp
  nameWithType: ICallForHelp.CanAcceptHelp
  fullName: Watcher.ICallForHelp.CanAcceptHelp
- uid: Watcher.ICallForHelp.AggreToHelp*
  commentId: Overload:Watcher.ICallForHelp.AggreToHelp
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_AggreToHelp
  name: AggreToHelp
  nameWithType: ICallForHelp.AggreToHelp
  fullName: Watcher.ICallForHelp.AggreToHelp
- uid: Watcher.ICallForHelp.IsHelpComing*
  commentId: Overload:Watcher.ICallForHelp.IsHelpComing
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_IsHelpComing
  name: IsHelpComing
  nameWithType: ICallForHelp.IsHelpComing
  fullName: Watcher.ICallForHelp.IsHelpComing
- uid: Watcher.ICallForHelp.HelpPoint*
  commentId: Overload:Watcher.ICallForHelp.HelpPoint
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_HelpPoint
  name: HelpPoint
  nameWithType: ICallForHelp.HelpPoint
  fullName: Watcher.ICallForHelp.HelpPoint
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Watcher.ICallForHelp.HelpEntranceVec*
  commentId: Overload:Watcher.ICallForHelp.HelpEntranceVec
  isExternal: true
  href: Watcher.ICallForHelp.html#Watcher_ICallForHelp_HelpEntranceVec
  name: HelpEntranceVec
  nameWithType: ICallForHelp.HelpEntranceVec
  fullName: Watcher.ICallForHelp.HelpEntranceVec
