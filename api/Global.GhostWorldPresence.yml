### YamlMime:ManagedReference
items:
- uid: Global.GhostWorldPresence
  commentId: T:Global.GhostWorldPresence
  id: GhostWorldPresence
  parent: Global
  children:
  - Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID)
  - Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)
  - Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  - Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  - Global.GhostWorldPresence.CleanSeperationDistance
  - Global.GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)
  - Global.GhostWorldPresence.GetGhostID(System.String)
  - Global.GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)
  - Global.GhostWorldPresence.GhostMode(Room,System.Int32)
  - Global.GhostWorldPresence.LaughMode(AbstractRoom)
  - Global.GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)
  - Global.GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)
  - Global.GhostWorldPresence.ghostID
  - Global.GhostWorldPresence.ghostRoom
  - Global.GhostWorldPresence.songName
  - Global.GhostWorldPresence.spinningTopSpawnId
  - Global.GhostWorldPresence.world
  langs:
  - csharp
  - vb
  name: GhostWorldPresence
  nameWithType: GhostWorldPresence
  fullName: GhostWorldPresence
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:GhostWorldPresence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class GhostWorldPresence : World.IMigrationInfluence'
    content.vb: Public Class GhostWorldPresence Implements World.IMigrationInfluence
  inheritance:
  - System.Object
  implements:
  - Global.World.IMigrationInfluence
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.GhostWorldPresence.world
  commentId: F:Global.GhostWorldPresence.world
  id: world
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: world
  nameWithType: GhostWorldPresence.world
  fullName: GhostWorldPresence.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GhostWorldPresence.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.GhostWorldPresence.ghostRoom
  commentId: F:Global.GhostWorldPresence.ghostRoom
  id: ghostRoom
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: ghostRoom
  nameWithType: GhostWorldPresence.ghostRoom
  fullName: GhostWorldPresence.ghostRoom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GhostWorldPresence.ghostRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoom ghostRoom
    return:
      type: Global.AbstractRoom
    content.vb: Public ghostRoom As AbstractRoom
- uid: Global.GhostWorldPresence.spinningTopSpawnId
  commentId: F:Global.GhostWorldPresence.spinningTopSpawnId
  id: spinningTopSpawnId
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: spinningTopSpawnId
  nameWithType: GhostWorldPresence.spinningTopSpawnId
  fullName: GhostWorldPresence.spinningTopSpawnId
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GhostWorldPresence.spinningTopSpawnId</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int spinningTopSpawnId
    return:
      type: System.Int32
    content.vb: Public spinningTopSpawnId As Integer
- uid: Global.GhostWorldPresence.ghostID
  commentId: F:Global.GhostWorldPresence.ghostID
  id: ghostID
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: ghostID
  nameWithType: GhostWorldPresence.ghostID
  fullName: GhostWorldPresence.ghostID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GhostWorldPresence.ghostID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GhostWorldPresence.GhostID ghostID
    return:
      type: Global.GhostWorldPresence.GhostID
    content.vb: Public ghostID As GhostWorldPresence.GhostID
- uid: Global.GhostWorldPresence.songName
  commentId: F:Global.GhostWorldPresence.songName
  id: songName
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: songName
  nameWithType: GhostWorldPresence.songName
  fullName: GhostWorldPresence.songName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:GhostWorldPresence.songName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string songName
    return:
      type: System.String
    content.vb: Public songName As String
- uid: Global.GhostWorldPresence.GetGhostID(System.String)
  commentId: M:Global.GhostWorldPresence.GetGhostID(System.String)
  id: GetGhostID(System.String)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: GetGhostID(string)
  nameWithType: GhostWorldPresence.GetGhostID(string)
  fullName: GhostWorldPresence.GetGhostID(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.GetGhostID(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static GhostWorldPresence.GhostID GetGhostID(string regionName)
    parameters:
    - id: regionName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>regionName</parameter>
            <parameter>M:GhostWorldPresence.GetGhostID(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.GhostWorldPresence.GhostID
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.GetGhostID(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetGhostID(regionName As String) As GhostWorldPresence.GhostID
  overload: Global.GhostWorldPresence.GetGhostID*
  nameWithType.vb: GhostWorldPresence.GetGhostID(String)
  fullName.vb: GhostWorldPresence.GetGhostID(String)
  name.vb: GetGhostID(String)
- uid: Global.GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)
  commentId: M:Global.GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)
  id: PassageAchievementID(GhostWorldPresence.GhostID)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: PassageAchievementID(GhostID)
  nameWithType: GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)
  fullName: GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static RainWorld.AchievementID PassageAchievementID(GhostWorldPresence.GhostID ghostID)
    parameters:
    - id: ghostID
      type: Global.GhostWorldPresence.GhostID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostID</parameter>
            <parameter>M:GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)</parameter>
          </include>
        </markup>
    return:
      type: Global.RainWorld.AchievementID
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.PassageAchievementID(GhostWorldPresence.GhostID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PassageAchievementID(ghostID As GhostWorldPresence.GhostID) As RainWorld.AchievementID
  overload: Global.GhostWorldPresence.PassageAchievementID*
- uid: Global.GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)
  commentId: M:Global.GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)
  id: SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: SpawnGhost(GhostID, int, int, int, bool)
  nameWithType: GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID, int, int, int, bool)
  fullName: GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID, int, int, int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool SpawnGhost(GhostWorldPresence.GhostID ghostID, int karma, int karmaCap, int ghostPreviouslyEncountered, bool playingAsRed)
    parameters:
    - id: ghostID
      type: Global.GhostWorldPresence.GhostID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostID</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: karma
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>karma</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: karmaCap
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>karmaCap</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: ghostPreviouslyEncountered
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostPreviouslyEncountered</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: playingAsRed
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playingAsRed</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID,System.Int32,System.Int32,System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpawnGhost(ghostID As GhostWorldPresence.GhostID, karma As Integer, karmaCap As Integer, ghostPreviouslyEncountered As Integer, playingAsRed As Boolean) As Boolean
  overload: Global.GhostWorldPresence.SpawnGhost*
  nameWithType.vb: GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID, Integer, Integer, Integer, Boolean)
  fullName.vb: GhostWorldPresence.SpawnGhost(GhostWorldPresence.GhostID, Integer, Integer, Integer, Boolean)
  name.vb: SpawnGhost(GhostID, Integer, Integer, Integer, Boolean)
- uid: Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID)
  commentId: M:Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID)
  id: '#ctor(World,GhostWorldPresence.GhostID)'
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: GhostWorldPresence(World, GhostID)
  nameWithType: GhostWorldPresence.GhostWorldPresence(World, GhostWorldPresence.GhostID)
  fullName: GhostWorldPresence.GhostWorldPresence(World, GhostWorldPresence.GhostID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>GhostWorldPresence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GhostWorldPresence(World world, GhostWorldPresence.GhostID ghostID)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID)</parameter>
          </include>
        </markup>
    - id: ghostID
      type: Global.GhostWorldPresence.GhostID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostID</parameter>
            <parameter>M:GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, ghostID As GhostWorldPresence.GhostID)
  overload: Global.GhostWorldPresence.#ctor*
  nameWithType.vb: GhostWorldPresence.New(World, GhostWorldPresence.GhostID)
  fullName.vb: GhostWorldPresence.New(World, GhostWorldPresence.GhostID)
  name.vb: New(World, GhostID)
- uid: Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)
  commentId: M:Global.GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)
  id: '#ctor(World,GhostWorldPresence.GhostID,System.Int32)'
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: GhostWorldPresence(World, GhostID, int)
  nameWithType: GhostWorldPresence.GhostWorldPresence(World, GhostWorldPresence.GhostID, int)
  fullName: GhostWorldPresence.GhostWorldPresence(World, GhostWorldPresence.GhostID, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>GhostWorldPresence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GhostWorldPresence(World world, GhostWorldPresence.GhostID ghostID, int spinningTopSpawnId)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)</parameter>
          </include>
        </markup>
    - id: ghostID
      type: Global.GhostWorldPresence.GhostID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ghostID</parameter>
            <parameter>M:GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)</parameter>
          </include>
        </markup>
    - id: spinningTopSpawnId
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spinningTopSpawnId</parameter>
            <parameter>M:GhostWorldPresence.#ctor(World,GhostWorldPresence.GhostID,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, ghostID As GhostWorldPresence.GhostID, spinningTopSpawnId As Integer)
  overload: Global.GhostWorldPresence.#ctor*
  nameWithType.vb: GhostWorldPresence.New(World, GhostWorldPresence.GhostID, Integer)
  fullName.vb: GhostWorldPresence.New(World, GhostWorldPresence.GhostID, Integer)
  name.vb: New(World, GhostID, Integer)
- uid: Global.GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)
  commentId: M:Global.GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)
  id: CreaturesSleepInRoom(AbstractRoom)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: CreaturesSleepInRoom(AbstractRoom)
  nameWithType: GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)
  fullName: GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CreaturesSleepInRoom(AbstractRoom room)
    parameters:
    - id: room
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.CreaturesSleepInRoom(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Function CreaturesSleepInRoom(room As AbstractRoom) As Boolean
  overload: Global.GhostWorldPresence.CreaturesSleepInRoom*
- uid: Global.GhostWorldPresence.GhostMode(Room,System.Int32)
  commentId: M:Global.GhostWorldPresence.GhostMode(Room,System.Int32)
  id: GhostMode(Room,System.Int32)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: GhostMode(Room, int)
  nameWithType: GhostWorldPresence.GhostMode(Room, int)
  fullName: GhostWorldPresence.GhostMode(Room, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.GhostMode(Room,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GhostMode(Room room, int camPos)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(Room,System.Int32)</parameter>
          </include>
        </markup>
    - id: camPos
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(Room,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(Room,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GhostMode(room As Room, camPos As Integer) As Single
  overload: Global.GhostWorldPresence.GhostMode*
  nameWithType.vb: GhostWorldPresence.GhostMode(Room, Integer)
  fullName.vb: GhostWorldPresence.GhostMode(Room, Integer)
  name.vb: GhostMode(Room, Integer)
- uid: Global.GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)
  commentId: M:Global.GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)
  id: GhostMode(AbstractRoom,UnityEngine.Vector2)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: GhostMode(AbstractRoom, Vector2)
  nameWithType: GhostWorldPresence.GhostMode(AbstractRoom, Vector2)
  fullName: GhostWorldPresence.GhostMode(AbstractRoom, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GhostMode(AbstractRoom testRoom, Vector2 worldPos)
    parameters:
    - id: testRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>testRoom</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: worldPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>worldPos</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.GhostMode(AbstractRoom,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GhostMode(testRoom As AbstractRoom, worldPos As Vector2) As Single
  overload: Global.GhostWorldPresence.GhostMode*
- uid: Global.GhostWorldPresence.LaughMode(AbstractRoom)
  commentId: M:Global.GhostWorldPresence.LaughMode(AbstractRoom)
  id: LaughMode(AbstractRoom)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: LaughMode(AbstractRoom)
  nameWithType: GhostWorldPresence.LaughMode(AbstractRoom)
  fullName: GhostWorldPresence.LaughMode(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.LaughMode(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LaughMode(AbstractRoom testRoom)
    parameters:
    - id: testRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>testRoom</parameter>
            <parameter>M:GhostWorldPresence.LaughMode(AbstractRoom)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.LaughMode(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Function LaughMode(testRoom As AbstractRoom) As Single
  overload: Global.GhostWorldPresence.LaughMode*
- uid: Global.GhostWorldPresence.CleanSeperationDistance
  commentId: M:Global.GhostWorldPresence.CleanSeperationDistance
  id: CleanSeperationDistance
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: CleanSeperationDistance()
  nameWithType: GhostWorldPresence.CleanSeperationDistance()
  fullName: GhostWorldPresence.CleanSeperationDistance()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.CleanSeperationDistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CleanSeperationDistance()
    content.vb: Public Sub CleanSeperationDistance()
  overload: Global.GhostWorldPresence.CleanSeperationDistance*
- uid: Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  commentId: M:Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  id: AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: AttractionValueForCreature(AbstractRoom, Type, float)
  nameWithType: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, float)
  fullName: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float AttractionValueForCreature(AbstractRoom room, CreatureTemplate.Type tp, float defValue)
    parameters:
    - id: room
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)</parameter>
          </include>
        </markup>
    - id: tp
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tp</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)</parameter>
          </include>
        </markup>
    - id: defValue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defValue</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function AttractionValueForCreature(room As AbstractRoom, tp As CreatureTemplate.Type, defValue As Single) As Single
  overload: Global.GhostWorldPresence.AttractionValueForCreature*
  implements:
  - Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  nameWithType.vb: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, Single)
  fullName.vb: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, Single)
  name.vb: AttractionValueForCreature(AbstractRoom, Type, Single)
- uid: Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  commentId: M:Global.GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  id: AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  parent: Global.GhostWorldPresence
  langs:
  - csharp
  - vb
  name: AttractionValueForCreature(AbstractRoom, string, float)
  nameWithType: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, string, float)
  fullName: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, string, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float AttractionValueForCreature(AbstractRoom room, string namedAttr, float defValue)
    parameters:
    - id: room
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)</parameter>
          </include>
        </markup>
    - id: namedAttr
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>namedAttr</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)</parameter>
          </include>
        </markup>
    - id: defValue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>defValue</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:GhostWorldPresence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function AttractionValueForCreature(room As AbstractRoom, namedAttr As String, defValue As Single) As Single
  overload: Global.GhostWorldPresence.AttractionValueForCreature*
  implements:
  - Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  nameWithType.vb: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, String, Single)
  fullName.vb: GhostWorldPresence.AttractionValueForCreature(AbstractRoom, String, Single)
  name.vb: AttractionValueForCreature(AbstractRoom, String, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.World.IMigrationInfluence
  commentId: T:Global.World.IMigrationInfluence
  isExternal: true
  href: World.html
  name: World.IMigrationInfluence
  nameWithType: World.IMigrationInfluence
  fullName: World.IMigrationInfluence
  spec.csharp:
  - uid: Global.World
    name: World
    isExternal: true
    href: World.html
  - name: .
  - uid: Global.World.IMigrationInfluence
    name: IMigrationInfluence
    isExternal: true
    href: World.IMigrationInfluence.html
  spec.vb:
  - uid: Global.World
    name: World
    isExternal: true
    href: World.html
  - name: .
  - uid: Global.World.IMigrationInfluence
    name: IMigrationInfluence
    isExternal: true
    href: World.IMigrationInfluence.html
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.GhostWorldPresence.GhostID
  commentId: T:Global.GhostWorldPresence.GhostID
  isExternal: true
  href: GhostWorldPresence.html
  name: GhostWorldPresence.GhostID
  nameWithType: GhostWorldPresence.GhostID
  fullName: GhostWorldPresence.GhostID
  spec.csharp:
  - uid: Global.GhostWorldPresence
    name: GhostWorldPresence
    isExternal: true
    href: GhostWorldPresence.html
  - name: .
  - uid: Global.GhostWorldPresence.GhostID
    name: GhostID
    isExternal: true
    href: GhostWorldPresence.GhostID.html
  spec.vb:
  - uid: Global.GhostWorldPresence
    name: GhostWorldPresence
    isExternal: true
    href: GhostWorldPresence.html
  - name: .
  - uid: Global.GhostWorldPresence.GhostID
    name: GhostID
    isExternal: true
    href: GhostWorldPresence.GhostID.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.GhostWorldPresence.GetGhostID*
  commentId: Overload:Global.GhostWorldPresence.GetGhostID
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_GetGhostID_System_String_
  name: GetGhostID
  nameWithType: GhostWorldPresence.GetGhostID
  fullName: GhostWorldPresence.GetGhostID
- uid: Global.GhostWorldPresence.PassageAchievementID*
  commentId: Overload:Global.GhostWorldPresence.PassageAchievementID
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_PassageAchievementID_GhostWorldPresence_GhostID_
  name: PassageAchievementID
  nameWithType: GhostWorldPresence.PassageAchievementID
  fullName: GhostWorldPresence.PassageAchievementID
- uid: Global.RainWorld.AchievementID
  commentId: T:Global.RainWorld.AchievementID
  isExternal: true
  href: RainWorld.html
  name: RainWorld.AchievementID
  nameWithType: RainWorld.AchievementID
  fullName: RainWorld.AchievementID
  spec.csharp:
  - uid: Global.RainWorld
    name: RainWorld
    isExternal: true
    href: RainWorld.html
  - name: .
  - uid: Global.RainWorld.AchievementID
    name: AchievementID
    isExternal: true
    href: RainWorld.AchievementID.html
  spec.vb:
  - uid: Global.RainWorld
    name: RainWorld
    isExternal: true
    href: RainWorld.html
  - name: .
  - uid: Global.RainWorld.AchievementID
    name: AchievementID
    isExternal: true
    href: RainWorld.AchievementID.html
- uid: Global.GhostWorldPresence.SpawnGhost*
  commentId: Overload:Global.GhostWorldPresence.SpawnGhost
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_SpawnGhost_GhostWorldPresence_GhostID_System_Int32_System_Int32_System_Int32_System_Boolean_
  name: SpawnGhost
  nameWithType: GhostWorldPresence.SpawnGhost
  fullName: GhostWorldPresence.SpawnGhost
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.GhostWorldPresence.#ctor*
  commentId: Overload:Global.GhostWorldPresence.#ctor
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence__ctor_World_GhostWorldPresence_GhostID_
  name: GhostWorldPresence
  nameWithType: GhostWorldPresence.GhostWorldPresence
  fullName: GhostWorldPresence.GhostWorldPresence
  nameWithType.vb: GhostWorldPresence.New
  fullName.vb: GhostWorldPresence.New
  name.vb: New
- uid: Global.GhostWorldPresence.CreaturesSleepInRoom*
  commentId: Overload:Global.GhostWorldPresence.CreaturesSleepInRoom
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_CreaturesSleepInRoom_AbstractRoom_
  name: CreaturesSleepInRoom
  nameWithType: GhostWorldPresence.CreaturesSleepInRoom
  fullName: GhostWorldPresence.CreaturesSleepInRoom
- uid: Global.GhostWorldPresence.GhostMode*
  commentId: Overload:Global.GhostWorldPresence.GhostMode
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_GhostMode_Room_System_Int32_
  name: GhostMode
  nameWithType: GhostWorldPresence.GhostMode
  fullName: GhostWorldPresence.GhostMode
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.GhostWorldPresence.LaughMode*
  commentId: Overload:Global.GhostWorldPresence.LaughMode
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_LaughMode_AbstractRoom_
  name: LaughMode
  nameWithType: GhostWorldPresence.LaughMode
  fullName: GhostWorldPresence.LaughMode
- uid: Global.GhostWorldPresence.CleanSeperationDistance*
  commentId: Overload:Global.GhostWorldPresence.CleanSeperationDistance
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_CleanSeperationDistance
  name: CleanSeperationDistance
  nameWithType: GhostWorldPresence.CleanSeperationDistance
  fullName: GhostWorldPresence.CleanSeperationDistance
- uid: Global.GhostWorldPresence.AttractionValueForCreature*
  commentId: Overload:Global.GhostWorldPresence.AttractionValueForCreature
  isExternal: true
  href: Global.GhostWorldPresence.html#GhostWorldPresence_AttractionValueForCreature_AbstractRoom_CreatureTemplate_Type_System_Single_
  name: AttractionValueForCreature
  nameWithType: GhostWorldPresence.AttractionValueForCreature
  fullName: GhostWorldPresence.AttractionValueForCreature
- uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  commentId: M:Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
  parent: Global.World.IMigrationInfluence
  isExternal: true
  href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_CreatureTemplate_Type_System_Single_
  name: AttractionValueForCreature(AbstractRoom, Type, float)
  nameWithType: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, float)
  fullName: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, float)
  nameWithType.vb: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, Single)
  fullName.vb: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, CreatureTemplate.Type, Single)
  name.vb: AttractionValueForCreature(AbstractRoom, Type, Single)
  spec.csharp:
  - uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
    name: AttractionValueForCreature
    isExternal: true
    href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_CreatureTemplate_Type_System_Single_
  - name: (
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: ','
  - name: " "
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,CreatureTemplate.Type,System.Single)
    name: AttractionValueForCreature
    isExternal: true
    href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_CreatureTemplate_Type_System_Single_
  - name: (
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: ','
  - name: " "
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  commentId: M:Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
  parent: Global.World.IMigrationInfluence
  isExternal: true
  href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_System_String_System_Single_
  name: AttractionValueForCreature(AbstractRoom, string, float)
  nameWithType: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, string, float)
  fullName: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, string, float)
  nameWithType.vb: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, String, Single)
  fullName.vb: World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom, String, Single)
  name.vb: AttractionValueForCreature(AbstractRoom, String, Single)
  spec.csharp:
  - uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
    name: AttractionValueForCreature
    isExternal: true
    href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_System_String_System_Single_
  - name: (
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.World.IMigrationInfluence.AttractionValueForCreature(AbstractRoom,System.String,System.Single)
    name: AttractionValueForCreature
    isExternal: true
    href: Global.World.IMigrationInfluence.html#World_IMigrationInfluence_AttractionValueForCreature_AbstractRoom_System_String_System_Single_
  - name: (
  - uid: Global.AbstractRoom
    name: AbstractRoom
    isExternal: true
    href: AbstractRoom.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
