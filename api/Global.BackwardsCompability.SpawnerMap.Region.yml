### YamlMime:ManagedReference
items:
- uid: Global.BackwardsCompability.SpawnerMap.Region
  commentId: T:Global.BackwardsCompability.SpawnerMap.Region
  id: BackwardsCompability.SpawnerMap.Region
  parent: Global
  children:
  - Global.BackwardsCompability.SpawnerMap.Region.#ctor(System.Int32)
  - Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)
  - Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)
  - Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)
  - Global.BackwardsCompability.SpawnerMap.Region.addressInNewLineages
  - Global.BackwardsCompability.SpawnerMap.Region.addressInNewSpawners
  - Global.BackwardsCompability.SpawnerMap.Region.index
  - Global.BackwardsCompability.SpawnerMap.Region.newLineages
  - Global.BackwardsCompability.SpawnerMap.Region.newSpawners
  - Global.BackwardsCompability.SpawnerMap.Region.oldLineages
  - Global.BackwardsCompability.SpawnerMap.Region.oldSpawners
  langs:
  - csharp
  - vb
  name: BackwardsCompability.SpawnerMap.Region
  nameWithType: BackwardsCompability.SpawnerMap.Region
  fullName: BackwardsCompability.SpawnerMap.Region
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:BackwardsCompability.SpawnerMap.Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class BackwardsCompability.SpawnerMap.Region
    content.vb: Public Class BackwardsCompability.SpawnerMap.Region
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.BackwardsCompability.SpawnerMap.Region.index
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.index
  id: index
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: index
  nameWithType: BackwardsCompability.SpawnerMap.Region.index
  fullName: BackwardsCompability.SpawnerMap.Region.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Global.BackwardsCompability.SpawnerMap.Region.oldSpawners
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.oldSpawners
  id: oldSpawners
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: oldSpawners
  nameWithType: BackwardsCompability.SpawnerMap.Region.oldSpawners
  fullName: BackwardsCompability.SpawnerMap.Region.oldSpawners
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.oldSpawners</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> oldSpawners
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public oldSpawners As List(Of String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.newSpawners
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.newSpawners
  id: newSpawners
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: newSpawners
  nameWithType: BackwardsCompability.SpawnerMap.Region.newSpawners
  fullName: BackwardsCompability.SpawnerMap.Region.newSpawners
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.newSpawners</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> newSpawners
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public newSpawners As List(Of String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.addressInNewSpawners
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.addressInNewSpawners
  id: addressInNewSpawners
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: addressInNewSpawners
  nameWithType: BackwardsCompability.SpawnerMap.Region.addressInNewSpawners
  fullName: BackwardsCompability.SpawnerMap.Region.addressInNewSpawners
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.addressInNewSpawners</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<int> addressInNewSpawners
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public addressInNewSpawners As List(Of Integer)
- uid: Global.BackwardsCompability.SpawnerMap.Region.oldLineages
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.oldLineages
  id: oldLineages
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: oldLineages
  nameWithType: BackwardsCompability.SpawnerMap.Region.oldLineages
  fullName: BackwardsCompability.SpawnerMap.Region.oldLineages
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.oldLineages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> oldLineages
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public oldLineages As List(Of String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.newLineages
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.newLineages
  id: newLineages
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: newLineages
  nameWithType: BackwardsCompability.SpawnerMap.Region.newLineages
  fullName: BackwardsCompability.SpawnerMap.Region.newLineages
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.newLineages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> newLineages
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public newLineages As List(Of String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.addressInNewLineages
  commentId: F:Global.BackwardsCompability.SpawnerMap.Region.addressInNewLineages
  id: addressInNewLineages
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: addressInNewLineages
  nameWithType: BackwardsCompability.SpawnerMap.Region.addressInNewLineages
  fullName: BackwardsCompability.SpawnerMap.Region.addressInNewLineages
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:BackwardsCompability.SpawnerMap.Region.addressInNewLineages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<int> addressInNewLineages
    return:
      type: System.Collections.Generic.List{System.Int32}
    content.vb: Public addressInNewLineages As List(Of Integer)
- uid: Global.BackwardsCompability.SpawnerMap.Region.#ctor(System.Int32)
  commentId: M:Global.BackwardsCompability.SpawnerMap.Region.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: Region(int)
  nameWithType: BackwardsCompability.SpawnerMap.Region.Region(int)
  fullName: BackwardsCompability.SpawnerMap.Region.Region(int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>BackwardsCompability.SpawnerMap.Region</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Region(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.#ctor(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(index As Integer)
  overload: Global.BackwardsCompability.SpawnerMap.Region.#ctor*
  nameWithType.vb: BackwardsCompability.SpawnerMap.Region.New(Integer)
  fullName.vb: BackwardsCompability.SpawnerMap.Region.New(Integer)
  name.vb: New(Integer)
- uid: Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)
  commentId: M:Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)
  id: FeedOldSpawner(SlugcatStats.Name,System.String)
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: FeedOldSpawner(Name, string)
  nameWithType: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name, string)
  fullName: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FeedOldSpawner(SlugcatStats.Name slugcat, string s)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FeedOldSpawner(slugcat As SlugcatStats.Name, s As String)
  overload: Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner*
  nameWithType.vb: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name, String)
  fullName.vb: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner(SlugcatStats.Name, String)
  name.vb: FeedOldSpawner(Name, String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)
  commentId: M:Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)
  id: FeedNewSpawner(SlugcatStats.Name,System.String)
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: FeedNewSpawner(Name, string)
  nameWithType: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name, string)
  fullName: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FeedNewSpawner(SlugcatStats.Name slugcat, string s)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FeedNewSpawner(slugcat As SlugcatStats.Name, s As String)
  overload: Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner*
  nameWithType.vb: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name, String)
  fullName.vb: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner(SlugcatStats.Name, String)
  name.vb: FeedNewSpawner(Name, String)
- uid: Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)
  commentId: M:Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)
  id: TranslateSpawner(System.Int32)
  parent: Global.BackwardsCompability.SpawnerMap.Region
  langs:
  - csharp
  - vb
  name: TranslateSpawner(int)
  nameWithType: BackwardsCompability.SpawnerMap.Region.TranslateSpawner(int)
  fullName: BackwardsCompability.SpawnerMap.Region.TranslateSpawner(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TranslateSpawner(int spawnerNumber)
    parameters:
    - id: spawnerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spawnerNumber</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:BackwardsCompability.SpawnerMap.Region.TranslateSpawner(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function TranslateSpawner(spawnerNumber As Integer) As Integer
  overload: Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner*
  nameWithType.vb: BackwardsCompability.SpawnerMap.Region.TranslateSpawner(Integer)
  fullName.vb: BackwardsCompability.SpawnerMap.Region.TranslateSpawner(Integer)
  name.vb: TranslateSpawner(Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<int>
  nameWithType: List<int>
  fullName: System.Collections.Generic.List<int>
  nameWithType.vb: List(Of Integer)
  fullName.vb: System.Collections.Generic.List(Of Integer)
  name.vb: List(Of Integer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.BackwardsCompability.SpawnerMap.Region.#ctor*
  commentId: Overload:Global.BackwardsCompability.SpawnerMap.Region.#ctor
  isExternal: true
  href: Global.BackwardsCompability.SpawnerMap.Region.html#BackwardsCompability_SpawnerMap_Region__ctor_System_Int32_
  name: Region
  nameWithType: BackwardsCompability.SpawnerMap.Region.Region
  fullName: BackwardsCompability.SpawnerMap.Region.Region
  nameWithType.vb: BackwardsCompability.SpawnerMap.Region.New
  fullName.vb: BackwardsCompability.SpawnerMap.Region.New
  name.vb: New
- uid: Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner*
  commentId: Overload:Global.BackwardsCompability.SpawnerMap.Region.FeedOldSpawner
  isExternal: true
  href: Global.BackwardsCompability.SpawnerMap.Region.html#BackwardsCompability_SpawnerMap_Region_FeedOldSpawner_SlugcatStats_Name_System_String_
  name: FeedOldSpawner
  nameWithType: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner
  fullName: BackwardsCompability.SpawnerMap.Region.FeedOldSpawner
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner*
  commentId: Overload:Global.BackwardsCompability.SpawnerMap.Region.FeedNewSpawner
  isExternal: true
  href: Global.BackwardsCompability.SpawnerMap.Region.html#BackwardsCompability_SpawnerMap_Region_FeedNewSpawner_SlugcatStats_Name_System_String_
  name: FeedNewSpawner
  nameWithType: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner
  fullName: BackwardsCompability.SpawnerMap.Region.FeedNewSpawner
- uid: Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner*
  commentId: Overload:Global.BackwardsCompability.SpawnerMap.Region.TranslateSpawner
  isExternal: true
  href: Global.BackwardsCompability.SpawnerMap.Region.html#BackwardsCompability_SpawnerMap_Region_TranslateSpawner_System_Int32_
  name: TranslateSpawner
  nameWithType: BackwardsCompability.SpawnerMap.Region.TranslateSpawner
  fullName: BackwardsCompability.SpawnerMap.Region.TranslateSpawner
