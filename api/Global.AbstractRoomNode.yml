### YamlMime:ManagedReference
items:
- uid: Global.AbstractRoomNode
  commentId: T:Global.AbstractRoomNode
  id: AbstractRoomNode
  parent: Global
  children:
  - Global.AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)
  - Global.AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)
  - Global.AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)
  - Global.AbstractRoomNode.borderExit
  - Global.AbstractRoomNode.connectivity
  - Global.AbstractRoomNode.entranceWidth
  - Global.AbstractRoomNode.shortCutLength
  - Global.AbstractRoomNode.submerged
  - Global.AbstractRoomNode.type
  - Global.AbstractRoomNode.viewedByCamera
  langs:
  - csharp
  - vb
  name: AbstractRoomNode
  nameWithType: AbstractRoomNode
  fullName: AbstractRoomNode
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AbstractRoomNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct AbstractRoomNode
    content.vb: Public Structure AbstractRoomNode
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.AbstractRoomNode.type
  commentId: F:Global.AbstractRoomNode.type
  id: type
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: type
  nameWithType: AbstractRoomNode.type
  fullName: AbstractRoomNode.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoomNode.Type type
    return:
      type: Global.AbstractRoomNode.Type
    content.vb: Public type As AbstractRoomNode.Type
- uid: Global.AbstractRoomNode.borderExit
  commentId: F:Global.AbstractRoomNode.borderExit
  id: borderExit
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: borderExit
  nameWithType: AbstractRoomNode.borderExit
  fullName: AbstractRoomNode.borderExit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.borderExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool borderExit
    return:
      type: System.Boolean
    content.vb: Public borderExit As Boolean
- uid: Global.AbstractRoomNode.shortCutLength
  commentId: F:Global.AbstractRoomNode.shortCutLength
  id: shortCutLength
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: shortCutLength
  nameWithType: AbstractRoomNode.shortCutLength
  fullName: AbstractRoomNode.shortCutLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.shortCutLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int shortCutLength
    return:
      type: System.Int32
    content.vb: Public shortCutLength As Integer
- uid: Global.AbstractRoomNode.connectivity
  commentId: F:Global.AbstractRoomNode.connectivity
  id: connectivity
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: connectivity
  nameWithType: AbstractRoomNode.connectivity
  fullName: AbstractRoomNode.connectivity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.connectivity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[,,] connectivity
    return:
      type: System.Int32[,,]
    content.vb: Public connectivity As Integer(,,)
- uid: Global.AbstractRoomNode.submerged
  commentId: F:Global.AbstractRoomNode.submerged
  id: submerged
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: submerged
  nameWithType: AbstractRoomNode.submerged
  fullName: AbstractRoomNode.submerged
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.submerged</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool submerged
    return:
      type: System.Boolean
    content.vb: Public submerged As Boolean
- uid: Global.AbstractRoomNode.viewedByCamera
  commentId: F:Global.AbstractRoomNode.viewedByCamera
  id: viewedByCamera
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: viewedByCamera
  nameWithType: AbstractRoomNode.viewedByCamera
  fullName: AbstractRoomNode.viewedByCamera
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.viewedByCamera</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int viewedByCamera
    return:
      type: System.Int32
    content.vb: Public viewedByCamera As Integer
- uid: Global.AbstractRoomNode.entranceWidth
  commentId: F:Global.AbstractRoomNode.entranceWidth
  id: entranceWidth
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: entranceWidth
  nameWithType: AbstractRoomNode.entranceWidth
  fullName: AbstractRoomNode.entranceWidth
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AbstractRoomNode.entranceWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int entranceWidth
    return:
      type: System.Int32
    content.vb: Public entranceWidth As Integer
- uid: Global.AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)
  commentId: M:Global.AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)
  id: '#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)'
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: AbstractRoomNode(Type, int, int, bool, int, int)
  nameWithType: AbstractRoomNode.AbstractRoomNode(AbstractRoomNode.Type, int, int, bool, int, int)
  fullName: AbstractRoomNode.AbstractRoomNode(AbstractRoomNode.Type, int, int, bool, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AbstractRoomNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoomNode(AbstractRoomNode.Type type, int shortCutLength, int totalNumberOfNodes, bool submerged, int viewedByCamera, int entranceWidth)
    parameters:
    - id: type
      type: Global.AbstractRoomNode.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: shortCutLength
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortCutLength</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: totalNumberOfNodes
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>totalNumberOfNodes</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: submerged
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>submerged</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: viewedByCamera
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>viewedByCamera</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: entranceWidth
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>entranceWidth</parameter>
            <parameter>M:AbstractRoomNode.#ctor(AbstractRoomNode.Type,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As AbstractRoomNode.Type, shortCutLength As Integer, totalNumberOfNodes As Integer, submerged As Boolean, viewedByCamera As Integer, entranceWidth As Integer)
  overload: Global.AbstractRoomNode.#ctor*
  nameWithType.vb: AbstractRoomNode.New(AbstractRoomNode.Type, Integer, Integer, Boolean, Integer, Integer)
  fullName.vb: AbstractRoomNode.New(AbstractRoomNode.Type, Integer, Integer, Boolean, Integer, Integer)
  name.vb: New(Type, Integer, Integer, Boolean, Integer, Integer)
- uid: Global.AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)
  commentId: M:Global.AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)
  id: ConnectionCost(System.Int32,CreatureTemplate)
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: ConnectionCost(int, CreatureTemplate)
  nameWithType: AbstractRoomNode.ConnectionCost(int, CreatureTemplate)
  fullName: AbstractRoomNode.ConnectionCost(int, CreatureTemplate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ConnectionCost(int otherNode, CreatureTemplate creatureType)
    parameters:
    - id: otherNode
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherNode</parameter>
            <parameter>M:AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: creatureType
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatureType</parameter>
            <parameter>M:AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractRoomNode.ConnectionCost(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionCost(otherNode As Integer, creatureType As CreatureTemplate) As Integer
  overload: Global.AbstractRoomNode.ConnectionCost*
  nameWithType.vb: AbstractRoomNode.ConnectionCost(Integer, CreatureTemplate)
  fullName.vb: AbstractRoomNode.ConnectionCost(Integer, CreatureTemplate)
  name.vb: ConnectionCost(Integer, CreatureTemplate)
- uid: Global.AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)
  commentId: M:Global.AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)
  id: ConnectionLength(System.Int32,CreatureTemplate)
  parent: Global.AbstractRoomNode
  langs:
  - csharp
  - vb
  name: ConnectionLength(int, CreatureTemplate)
  nameWithType: AbstractRoomNode.ConnectionLength(int, CreatureTemplate)
  fullName: AbstractRoomNode.ConnectionLength(int, CreatureTemplate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ConnectionLength(int otherNode, CreatureTemplate creatureType)
    parameters:
    - id: otherNode
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherNode</parameter>
            <parameter>M:AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    - id: creatureType
      type: Global.CreatureTemplate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatureType</parameter>
            <parameter>M:AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:AbstractRoomNode.ConnectionLength(System.Int32,CreatureTemplate)</parameter>
          </include>
        </markup>
    content.vb: Public Function ConnectionLength(otherNode As Integer, creatureType As CreatureTemplate) As Integer
  overload: Global.AbstractRoomNode.ConnectionLength*
  nameWithType.vb: AbstractRoomNode.ConnectionLength(Integer, CreatureTemplate)
  fullName.vb: AbstractRoomNode.ConnectionLength(Integer, CreatureTemplate)
  name.vb: ConnectionLength(Integer, CreatureTemplate)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AbstractRoomNode.Type
  commentId: T:Global.AbstractRoomNode.Type
  isExternal: true
  href: AbstractRoomNode.html
  name: AbstractRoomNode.Type
  nameWithType: AbstractRoomNode.Type
  fullName: AbstractRoomNode.Type
  spec.csharp:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
  spec.vb:
  - uid: Global.AbstractRoomNode
    name: AbstractRoomNode
    isExternal: true
    href: AbstractRoomNode.html
  - name: .
  - uid: Global.AbstractRoomNode.Type
    name: Type
    isExternal: true
    href: AbstractRoomNode.Type.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int32[,,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[,,]
  nameWithType: int[,,]
  fullName: int[,,]
  nameWithType.vb: Integer(,,)
  fullName.vb: Integer(,,)
  name.vb: Integer(,,)
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ','
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: ','
  - name: ','
  - name: )
- uid: Global.AbstractRoomNode.#ctor*
  commentId: Overload:Global.AbstractRoomNode.#ctor
  isExternal: true
  href: Global.AbstractRoomNode.html#AbstractRoomNode__ctor_AbstractRoomNode_Type_System_Int32_System_Int32_System_Boolean_System_Int32_System_Int32_
  name: AbstractRoomNode
  nameWithType: AbstractRoomNode.AbstractRoomNode
  fullName: AbstractRoomNode.AbstractRoomNode
  nameWithType.vb: AbstractRoomNode.New
  fullName.vb: AbstractRoomNode.New
  name.vb: New
- uid: Global.AbstractRoomNode.ConnectionCost*
  commentId: Overload:Global.AbstractRoomNode.ConnectionCost
  isExternal: true
  href: Global.AbstractRoomNode.html#AbstractRoomNode_ConnectionCost_System_Int32_CreatureTemplate_
  name: ConnectionCost
  nameWithType: AbstractRoomNode.ConnectionCost
  fullName: AbstractRoomNode.ConnectionCost
- uid: Global.CreatureTemplate
  commentId: T:Global.CreatureTemplate
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate
  nameWithType: CreatureTemplate
  fullName: CreatureTemplate
- uid: Global.AbstractRoomNode.ConnectionLength*
  commentId: Overload:Global.AbstractRoomNode.ConnectionLength
  isExternal: true
  href: Global.AbstractRoomNode.html#AbstractRoomNode_ConnectionLength_System_Int32_CreatureTemplate_
  name: ConnectionLength
  nameWithType: AbstractRoomNode.ConnectionLength
  fullName: AbstractRoomNode.ConnectionLength
