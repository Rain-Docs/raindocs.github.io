### YamlMime:ManagedReference
items:
- uid: Global.RopeGraphic
  commentId: T:Global.RopeGraphic
  id: RopeGraphic
  parent: Global
  children:
  - Global.RopeGraphic.#ctor(System.Int32)
  - Global.RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)
  - Global.RopeGraphic.AlignAndConnect(System.Int32)
  - Global.RopeGraphic.AlignRope(System.Single,System.Int32)
  - Global.RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.RopeGraphic.ConnectPhase(System.Single)
  - Global.RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)
  - Global.RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.RopeGraphic.Reset(UnityEngine.Vector2)
  - Global.RopeGraphic.Update
  - Global.RopeGraphic.airFricition
  - Global.RopeGraphic.positionsList
  - Global.RopeGraphic.positionsListCount
  - Global.RopeGraphic.segments
  langs:
  - csharp
  - vb
  name: RopeGraphic
  nameWithType: RopeGraphic
  fullName: RopeGraphic
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RopeGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RopeGraphic
    content.vb: Public Class RopeGraphic
  inheritance:
  - System.Object
  derivedClasses:
  - Global.DaddyCorruption.CorruptionTube.TubeGraphic
  - Global.DaddyGraphics.DaddyTubeGraphic
  - Global.PoleMimicGraphics.PoleMimicRopeGraphics
  - Global.TentaclePlantGraphics.TentaclePlantRopeGraphics
  - MoreSlugcats.InspectorGraphics.InspectorHeadRopeGraphics
  - MoreSlugcats.StowawayBugGraphics.StowawayRopeGraphics
  - MoreSlugcats.Vine.VineGraphic
  - MoreSlugcats.VoidChain.ChainGraphic
  - Watcher.LoachGraphics.LoachTentacleGraphic
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RopeGraphic.segments
  commentId: F:Global.RopeGraphic.segments
  id: segments
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: RopeGraphic.segments
  fullName: RopeGraphic.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RopeGraphic.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RopeGraphic.Segment[] segments
    return:
      type: Global.RopeGraphic.Segment[]
    content.vb: Public segments As RopeGraphic.Segment()
- uid: Global.RopeGraphic.airFricition
  commentId: F:Global.RopeGraphic.airFricition
  id: airFricition
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: airFricition
  nameWithType: RopeGraphic.airFricition
  fullName: RopeGraphic.airFricition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RopeGraphic.airFricition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float airFricition
    return:
      type: System.Single
    content.vb: Public airFricition As Single
- uid: Global.RopeGraphic.positionsList
  commentId: F:Global.RopeGraphic.positionsList
  id: positionsList
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: positionsList
  nameWithType: RopeGraphic.positionsList
  fullName: RopeGraphic.positionsList
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RopeGraphic.positionsList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2> positionsList
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2}
    content.vb: Public positionsList As List(Of Vector2)
- uid: Global.RopeGraphic.positionsListCount
  commentId: F:Global.RopeGraphic.positionsListCount
  id: positionsListCount
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: positionsListCount
  nameWithType: RopeGraphic.positionsListCount
  fullName: RopeGraphic.positionsListCount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RopeGraphic.positionsListCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int positionsListCount
    return:
      type: System.Int32
    content.vb: Public positionsListCount As Integer
- uid: Global.RopeGraphic.#ctor(System.Int32)
  commentId: M:Global.RopeGraphic.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: RopeGraphic(int)
  nameWithType: RopeGraphic.RopeGraphic(int)
  fullName: RopeGraphic.RopeGraphic(int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RopeGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RopeGraphic(int segs)
    parameters:
    - id: segs
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segs</parameter>
            <parameter>M:RopeGraphic.#ctor(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(segs As Integer)
  overload: Global.RopeGraphic.#ctor*
  nameWithType.vb: RopeGraphic.New(Integer)
  fullName.vb: RopeGraphic.New(Integer)
  name.vb: New(Integer)
- uid: Global.RopeGraphic.Reset(UnityEngine.Vector2)
  commentId: M:Global.RopeGraphic.Reset(UnityEngine.Vector2)
  id: Reset(UnityEngine.Vector2)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: Reset(Vector2)
  nameWithType: RopeGraphic.Reset(Vector2)
  fullName: RopeGraphic.Reset(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.Reset(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Reset(Vector2 ps)
    parameters:
    - id: ps
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:RopeGraphic.Reset(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Reset(ps As Vector2)
  overload: Global.RopeGraphic.Reset*
- uid: Global.RopeGraphic.Update
  commentId: M:Global.RopeGraphic.Update
  id: Update
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: RopeGraphic.Update()
  fullName: RopeGraphic.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Global.RopeGraphic.Update*
- uid: Global.RopeGraphic.AlignAndConnect(System.Int32)
  commentId: M:Global.RopeGraphic.AlignAndConnect(System.Int32)
  id: AlignAndConnect(System.Int32)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: AlignAndConnect(int)
  nameWithType: RopeGraphic.AlignAndConnect(int)
  fullName: RopeGraphic.AlignAndConnect(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.AlignAndConnect(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AlignAndConnect(int listCount)
    parameters:
    - id: listCount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>listCount</parameter>
            <parameter>M:RopeGraphic.AlignAndConnect(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AlignAndConnect(listCount As Integer)
  overload: Global.RopeGraphic.AlignAndConnect*
  nameWithType.vb: RopeGraphic.AlignAndConnect(Integer)
  fullName.vb: RopeGraphic.AlignAndConnect(Integer)
  name.vb: AlignAndConnect(Integer)
- uid: Global.RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)
  commentId: M:Global.RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)
  id: AddToPositionsList(System.Int32,UnityEngine.Vector2)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: AddToPositionsList(int, Vector2)
  nameWithType: RopeGraphic.AddToPositionsList(int, Vector2)
  fullName: RopeGraphic.AddToPositionsList(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToPositionsList(int index, Vector2 pos)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:RopeGraphic.AddToPositionsList(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToPositionsList(index As Integer, pos As Vector2)
  overload: Global.RopeGraphic.AddToPositionsList*
  nameWithType.vb: RopeGraphic.AddToPositionsList(Integer, Vector2)
  fullName.vb: RopeGraphic.AddToPositionsList(Integer, UnityEngine.Vector2)
  name.vb: AddToPositionsList(Integer, Vector2)
- uid: Global.RopeGraphic.ConnectPhase(System.Single)
  commentId: M:Global.RopeGraphic.ConnectPhase(System.Single)
  id: ConnectPhase(System.Single)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: ConnectPhase(float)
  nameWithType: RopeGraphic.ConnectPhase(float)
  fullName: RopeGraphic.ConnectPhase(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.ConnectPhase(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ConnectPhase(float totalRopeLength)
    parameters:
    - id: totalRopeLength
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>totalRopeLength</parameter>
            <parameter>M:RopeGraphic.ConnectPhase(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ConnectPhase(totalRopeLength As Single)
  overload: Global.RopeGraphic.ConnectPhase*
  nameWithType.vb: RopeGraphic.ConnectPhase(Single)
  fullName.vb: RopeGraphic.ConnectPhase(Single)
  name.vb: ConnectPhase(Single)
- uid: Global.RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)
  commentId: M:Global.RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)
  id: ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: ConnectRopeSegments(int, int, float, float)
  nameWithType: RopeGraphic.ConnectRopeSegments(int, int, float, float)
  fullName: RopeGraphic.ConnectRopeSegments(int, int, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void ConnectRopeSegments(int A, int B, float idealDist, float elastic)
    parameters:
    - id: A
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: B
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: idealDist
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>idealDist</parameter>
            <parameter>M:RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: elastic
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elastic</parameter>
            <parameter>M:RopeGraphic.ConnectRopeSegments(System.Int32,System.Int32,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub ConnectRopeSegments(A As Integer, B As Integer, idealDist As Single, elastic As Single)
  overload: Global.RopeGraphic.ConnectRopeSegments*
  nameWithType.vb: RopeGraphic.ConnectRopeSegments(Integer, Integer, Single, Single)
  fullName.vb: RopeGraphic.ConnectRopeSegments(Integer, Integer, Single, Single)
  name.vb: ConnectRopeSegments(Integer, Integer, Single, Single)
- uid: Global.RopeGraphic.AlignRope(System.Single,System.Int32)
  commentId: M:Global.RopeGraphic.AlignRope(System.Single,System.Int32)
  id: AlignRope(System.Single,System.Int32)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: AlignRope(float, int)
  nameWithType: RopeGraphic.AlignRope(float, int)
  fullName: RopeGraphic.AlignRope(float, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.AlignRope(System.Single,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void AlignRope(float f, int alignPos)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:RopeGraphic.AlignRope(System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: alignPos
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alignPos</parameter>
            <parameter>M:RopeGraphic.AlignRope(System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub AlignRope(f As Single, alignPos As Integer)
  overload: Global.RopeGraphic.AlignRope*
  nameWithType.vb: RopeGraphic.AlignRope(Single, Integer)
  fullName.vb: RopeGraphic.AlignRope(Single, Integer)
  name.vb: AlignRope(Single, Integer)
- uid: Global.RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:RopeGraphic.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.RopeGraphic.InitiateSprites*
- uid: Global.RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: DrawSprite(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void DrawSprite(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub DrawSprite(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.RopeGraphic.DrawSprite*
  nameWithType.vb: RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: RopeGraphic.DrawSprite(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprite(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:RopeGraphic.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.RopeGraphic.ApplyPalette*
- uid: Global.RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)
  id: MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.RopeGraphic
  langs:
  - csharp
  - vb
  name: MoveSegment(int, Vector2, Vector2)
  nameWithType: RopeGraphic.MoveSegment(int, Vector2, Vector2)
  fullName: RopeGraphic.MoveSegment(int, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void MoveSegment(int segment, Vector2 goalPos, Vector2 smoothedGoalPos)
    parameters:
    - id: segment
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segment</parameter>
            <parameter>M:RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: goalPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goalPos</parameter>
            <parameter>M:RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: smoothedGoalPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>smoothedGoalPos</parameter>
            <parameter>M:RopeGraphic.MoveSegment(System.Int32,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub MoveSegment(segment As Integer, goalPos As Vector2, smoothedGoalPos As Vector2)
  overload: Global.RopeGraphic.MoveSegment*
  nameWithType.vb: RopeGraphic.MoveSegment(Integer, Vector2, Vector2)
  fullName.vb: RopeGraphic.MoveSegment(Integer, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: MoveSegment(Integer, Vector2, Vector2)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RopeGraphic.Segment[]
  isExternal: true
  href: RopeGraphic.Segment.html
  name: Segment[]
  nameWithType: RopeGraphic.Segment[]
  fullName: RopeGraphic.Segment[]
  nameWithType.vb: RopeGraphic.Segment()
  fullName.vb: RopeGraphic.Segment()
  name.vb: Segment()
  spec.csharp:
  - uid: Global.RopeGraphic.Segment
    name: Segment
    isExternal: true
    href: RopeGraphic.Segment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.RopeGraphic.Segment
    name: Segment
    isExternal: true
    href: RopeGraphic.Segment.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Collections.Generic.List{UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.RopeGraphic.#ctor*
  commentId: Overload:Global.RopeGraphic.#ctor
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic__ctor_System_Int32_
  name: RopeGraphic
  nameWithType: RopeGraphic.RopeGraphic
  fullName: RopeGraphic.RopeGraphic
  nameWithType.vb: RopeGraphic.New
  fullName.vb: RopeGraphic.New
  name.vb: New
- uid: Global.RopeGraphic.Reset*
  commentId: Overload:Global.RopeGraphic.Reset
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_Reset_UnityEngine_Vector2_
  name: Reset
  nameWithType: RopeGraphic.Reset
  fullName: RopeGraphic.Reset
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.RopeGraphic.Update*
  commentId: Overload:Global.RopeGraphic.Update
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_Update
  name: Update
  nameWithType: RopeGraphic.Update
  fullName: RopeGraphic.Update
- uid: Global.RopeGraphic.AlignAndConnect*
  commentId: Overload:Global.RopeGraphic.AlignAndConnect
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_AlignAndConnect_System_Int32_
  name: AlignAndConnect
  nameWithType: RopeGraphic.AlignAndConnect
  fullName: RopeGraphic.AlignAndConnect
- uid: Global.RopeGraphic.AddToPositionsList*
  commentId: Overload:Global.RopeGraphic.AddToPositionsList
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_AddToPositionsList_System_Int32_UnityEngine_Vector2_
  name: AddToPositionsList
  nameWithType: RopeGraphic.AddToPositionsList
  fullName: RopeGraphic.AddToPositionsList
- uid: Global.RopeGraphic.ConnectPhase*
  commentId: Overload:Global.RopeGraphic.ConnectPhase
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_ConnectPhase_System_Single_
  name: ConnectPhase
  nameWithType: RopeGraphic.ConnectPhase
  fullName: RopeGraphic.ConnectPhase
- uid: Global.RopeGraphic.ConnectRopeSegments*
  commentId: Overload:Global.RopeGraphic.ConnectRopeSegments
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_ConnectRopeSegments_System_Int32_System_Int32_System_Single_System_Single_
  name: ConnectRopeSegments
  nameWithType: RopeGraphic.ConnectRopeSegments
  fullName: RopeGraphic.ConnectRopeSegments
- uid: Global.RopeGraphic.AlignRope*
  commentId: Overload:Global.RopeGraphic.AlignRope
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_AlignRope_System_Single_System_Int32_
  name: AlignRope
  nameWithType: RopeGraphic.AlignRope
  fullName: RopeGraphic.AlignRope
- uid: Global.RopeGraphic.InitiateSprites*
  commentId: Overload:Global.RopeGraphic.InitiateSprites
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: RopeGraphic.InitiateSprites
  fullName: RopeGraphic.InitiateSprites
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.RopeGraphic.DrawSprite*
  commentId: Overload:Global.RopeGraphic.DrawSprite
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_DrawSprite_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprite
  nameWithType: RopeGraphic.DrawSprite
  fullName: RopeGraphic.DrawSprite
- uid: Global.RopeGraphic.ApplyPalette*
  commentId: Overload:Global.RopeGraphic.ApplyPalette
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: RopeGraphic.ApplyPalette
  fullName: RopeGraphic.ApplyPalette
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.RopeGraphic.MoveSegment*
  commentId: Overload:Global.RopeGraphic.MoveSegment
  isExternal: true
  href: Global.RopeGraphic.html#RopeGraphic_MoveSegment_System_Int32_UnityEngine_Vector2_UnityEngine_Vector2_
  name: MoveSegment
  nameWithType: RopeGraphic.MoveSegment
  fullName: RopeGraphic.MoveSegment
