### YamlMime:ManagedReference
items:
- uid: Menu.Menu
  commentId: T:Menu.Menu
  id: Menu
  parent: Menu
  children:
  - Menu.Menu.#ctor(ProcessManager,ProcessManager.ProcessID)
  - Menu.Menu.Active
  - Menu.Menu.AllowDialogs
  - Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  - Menu.Menu.CurrLang
  - Menu.Menu.ForceNoMouseMode
  - Menu.Menu.FreezeMenuFunctions
  - Menu.Menu.GetFreezeMenuFunctions
  - Menu.Menu.GrafUpdate(System.Single)
  - Menu.Menu.HoldButtonDisregardingFreeze
  - Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  - Menu.Menu.Init
  - Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  - Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  - Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  - Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  - Menu.Menu.NonMouseInputDisregardingFreeze
  - Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  - Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  - Menu.Menu.PlaySound(SoundID)
  - Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  - Menu.Menu.ResetSelection
  - Menu.Menu.ShowCursor
  - Menu.Menu.ShutDownProcess
  - Menu.Menu.Singal(Menu.MenuObject,System.String)
  - Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  - Menu.Menu.Translate(System.String)
  - Menu.Menu.Translate(System.String,System.Int32)
  - Menu.Menu.Update
  - Menu.Menu.UpdateInfoText
  - Menu.Menu.ValueOfSlider(Menu.Slider)
  - Menu.Menu.backObject
  - Menu.Menu.container
  - Menu.Menu.currentPage
  - Menu.Menu.cursorContainer
  - Menu.Menu.gradientsContainer
  - Menu.Menu.holdButton
  - Menu.Menu.infoLabel
  - Menu.Menu.infoLabelFade
  - Menu.Menu.infoLabelSin
  - Menu.Menu.infolabelDirty
  - Menu.Menu.init
  - Menu.Menu.input
  - Menu.Menu.lastHoldButton
  - Menu.Menu.lastInfoLabelFade
  - Menu.Menu.lastInput
  - Menu.Menu.lastMouseDown
  - Menu.Menu.lastMousePos
  - Menu.Menu.mouseDown
  - Menu.Menu.mousePosition
  - Menu.Menu.mouseScrollWheelMovement
  - Menu.Menu.mySoundLoopID
  - Menu.Menu.mySoundLoopName
  - Menu.Menu.pages
  - Menu.Menu.pressButton
  - Menu.Menu.scene
  - Menu.Menu.selectedObject
  - Menu.Menu.soundLoop
  langs:
  - csharp
  - vb
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Menu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public abstract class Menu : MainLoopProcess'
    content.vb: Public MustInherit Class Menu Inherits MainLoopProcess
  inheritance:
  - System.Object
  - Global.MainLoopProcess
  derivedClasses:
  - Menu.BackupManager
  - Menu.CustomEndGameScreen
  - Menu.Dialog
  - Menu.DreamScreen
  - Menu.EndCredits
  - Menu.ExpeditionGameOver
  - Menu.ExpeditionJukebox
  - Menu.ExpeditionMenu
  - Menu.ExpeditionWinScreen
  - Menu.FastTravelScreen
  - Menu.InitializationScreen
  - Menu.InputOptionsMenu
  - Menu.IntroRoll
  - Menu.KarmaLadderScreen
  - Menu.MainMenu
  - Menu.ModdingMenu
  - Menu.MultiplayerMenu
  - Menu.OptionsMenu
  - Menu.PauseMenu
  - Menu.PlayerResultMenu
  - Menu.RegionSelectMenu
  - Menu.SandboxOverlay
  - Menu.SlideShow
  - Menu.SlugcatSelectMenu
  - Menu.TutorialControlsPage
  - MoreSlugcats.BackgroundOptionsMenu
  - MoreSlugcats.CollectionsMenu
  - MoreSlugcats.DatingSim
  - MoreSlugcats.DemoEndScreen
  - MoreSlugcats.ScribbleDreamScreen
  - MoreSlugcats.ScribbleDreamScreenOld
  - MoreSlugcats.SpecialUnlockScreen
  - MoreSlugcats.TipScreen
  inheritedMembers:
  - Global.MainLoopProcess.manager
  - Global.MainLoopProcess.ID
  - Global.MainLoopProcess.framesPerSecond
  - Global.MainLoopProcess.processActive
  - Global.MainLoopProcess.RawUpdate(System.Single)
  - Global.MainLoopProcess.TimeSpeedFac
  - Global.MainLoopProcess.FadeInTime
  - Global.MainLoopProcess.InitialBlackSeconds
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Menu.pages
  commentId: F:Menu.Menu.pages
  id: pages
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: pages
  nameWithType: Menu.pages
  fullName: Menu.Menu.pages
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.pages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Page> pages
    return:
      type: System.Collections.Generic.List{Menu.Page}
    content.vb: Public pages As List(Of Page)
- uid: Menu.Menu.mousePosition
  commentId: F:Menu.Menu.mousePosition
  id: mousePosition
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: mousePosition
  nameWithType: Menu.mousePosition
  fullName: Menu.Menu.mousePosition
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.mousePosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 mousePosition
    return:
      type: UnityEngine.Vector2
    content.vb: Public mousePosition As Vector2
- uid: Menu.Menu.lastMousePos
  commentId: F:Menu.Menu.lastMousePos
  id: lastMousePos
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: lastMousePos
  nameWithType: Menu.lastMousePos
  fullName: Menu.Menu.lastMousePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.lastMousePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastMousePos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastMousePos As Vector2
- uid: Menu.Menu.container
  commentId: F:Menu.Menu.container
  id: container
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: container
  nameWithType: Menu.container
  fullName: Menu.Menu.container
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.container</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FContainer container
    return:
      type: Global.FContainer
    content.vb: Public container As FContainer
- uid: Menu.Menu.cursorContainer
  commentId: F:Menu.Menu.cursorContainer
  id: cursorContainer
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: cursorContainer
  nameWithType: Menu.cursorContainer
  fullName: Menu.Menu.cursorContainer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.cursorContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FContainer cursorContainer
    return:
      type: Global.FContainer
    content.vb: Public cursorContainer As FContainer
- uid: Menu.Menu.scene
  commentId: F:Menu.Menu.scene
  id: scene
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: scene
  nameWithType: Menu.scene
  fullName: Menu.Menu.scene
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.scene</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuScene scene
    return:
      type: Menu.MenuScene
    content.vb: Public scene As MenuScene
- uid: Menu.Menu.mouseDown
  commentId: F:Menu.Menu.mouseDown
  id: mouseDown
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: mouseDown
  nameWithType: Menu.mouseDown
  fullName: Menu.Menu.mouseDown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.mouseDown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool mouseDown
    return:
      type: System.Boolean
    content.vb: Public mouseDown As Boolean
- uid: Menu.Menu.lastMouseDown
  commentId: F:Menu.Menu.lastMouseDown
  id: lastMouseDown
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: lastMouseDown
  nameWithType: Menu.lastMouseDown
  fullName: Menu.Menu.lastMouseDown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.lastMouseDown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastMouseDown
    return:
      type: System.Boolean
    content.vb: Public lastMouseDown As Boolean
- uid: Menu.Menu.selectedObject
  commentId: F:Menu.Menu.selectedObject
  id: selectedObject
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: selectedObject
  nameWithType: Menu.selectedObject
  fullName: Menu.Menu.selectedObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.selectedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuObject selectedObject
    return:
      type: Menu.MenuObject
    content.vb: Public selectedObject As MenuObject
- uid: Menu.Menu.backObject
  commentId: F:Menu.Menu.backObject
  id: backObject
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: backObject
  nameWithType: Menu.backObject
  fullName: Menu.Menu.backObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.backObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuObject backObject
    return:
      type: Menu.MenuObject
    content.vb: Public backObject As MenuObject
- uid: Menu.Menu.pressButton
  commentId: F:Menu.Menu.pressButton
  id: pressButton
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: pressButton
  nameWithType: Menu.pressButton
  fullName: Menu.Menu.pressButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.pressButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool pressButton
    return:
      type: System.Boolean
    content.vb: Public pressButton As Boolean
- uid: Menu.Menu.holdButton
  commentId: F:Menu.Menu.holdButton
  id: holdButton
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: holdButton
  nameWithType: Menu.holdButton
  fullName: Menu.Menu.holdButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.holdButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool holdButton
    return:
      type: System.Boolean
    content.vb: Public holdButton As Boolean
- uid: Menu.Menu.lastHoldButton
  commentId: F:Menu.Menu.lastHoldButton
  id: lastHoldButton
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: lastHoldButton
  nameWithType: Menu.lastHoldButton
  fullName: Menu.Menu.lastHoldButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.lastHoldButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lastHoldButton
    return:
      type: System.Boolean
    content.vb: Public lastHoldButton As Boolean
- uid: Menu.Menu.input
  commentId: F:Menu.Menu.input
  id: input
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: input
  nameWithType: Menu.input
  fullName: Menu.Menu.input
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.input</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage input
    return:
      type: Global.Player.InputPackage
    content.vb: Public input As Player.InputPackage
- uid: Menu.Menu.lastInput
  commentId: F:Menu.Menu.lastInput
  id: lastInput
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: lastInput
  nameWithType: Menu.lastInput
  fullName: Menu.Menu.lastInput
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.lastInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage lastInput
    return:
      type: Global.Player.InputPackage
    content.vb: Public lastInput As Player.InputPackage
- uid: Menu.Menu.currentPage
  commentId: F:Menu.Menu.currentPage
  id: currentPage
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: currentPage
  nameWithType: Menu.currentPage
  fullName: Menu.Menu.currentPage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.currentPage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int currentPage
    return:
      type: System.Int32
    content.vb: Public currentPage As Integer
- uid: Menu.Menu.soundLoop
  commentId: F:Menu.Menu.soundLoop
  id: soundLoop
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: Menu.soundLoop
  fullName: Menu.Menu.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuMicrophone.MenuSoundLoop soundLoop
    return:
      type: Global.MenuMicrophone.MenuSoundLoop
    content.vb: Public soundLoop As MenuMicrophone.MenuSoundLoop
- uid: Menu.Menu.mySoundLoopID
  commentId: F:Menu.Menu.mySoundLoopID
  id: mySoundLoopID
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: mySoundLoopID
  nameWithType: Menu.mySoundLoopID
  fullName: Menu.Menu.mySoundLoopID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.mySoundLoopID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID mySoundLoopID
    return:
      type: Global.SoundID
    content.vb: Public mySoundLoopID As SoundID
- uid: Menu.Menu.mySoundLoopName
  commentId: F:Menu.Menu.mySoundLoopName
  id: mySoundLoopName
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: mySoundLoopName
  nameWithType: Menu.mySoundLoopName
  fullName: Menu.Menu.mySoundLoopName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.mySoundLoopName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string mySoundLoopName
    return:
      type: System.String
    content.vb: Public mySoundLoopName As String
- uid: Menu.Menu.infolabelDirty
  commentId: F:Menu.Menu.infolabelDirty
  id: infolabelDirty
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: infolabelDirty
  nameWithType: Menu.infolabelDirty
  fullName: Menu.Menu.infolabelDirty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.infolabelDirty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool infolabelDirty
    return:
      type: System.Boolean
    content.vb: Protected infolabelDirty As Boolean
- uid: Menu.Menu.infoLabel
  commentId: F:Menu.Menu.infoLabel
  id: infoLabel
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: infoLabel
  nameWithType: Menu.infoLabel
  fullName: Menu.Menu.infoLabel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.infoLabel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FLabel infoLabel
    return:
      type: Global.FLabel
    content.vb: Public infoLabel As FLabel
- uid: Menu.Menu.infoLabelFade
  commentId: F:Menu.Menu.infoLabelFade
  id: infoLabelFade
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: infoLabelFade
  nameWithType: Menu.infoLabelFade
  fullName: Menu.Menu.infoLabelFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.infoLabelFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float infoLabelFade
    return:
      type: System.Single
    content.vb: Public infoLabelFade As Single
- uid: Menu.Menu.lastInfoLabelFade
  commentId: F:Menu.Menu.lastInfoLabelFade
  id: lastInfoLabelFade
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: lastInfoLabelFade
  nameWithType: Menu.lastInfoLabelFade
  fullName: Menu.Menu.lastInfoLabelFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.lastInfoLabelFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastInfoLabelFade
    return:
      type: System.Single
    content.vb: Public lastInfoLabelFade As Single
- uid: Menu.Menu.infoLabelSin
  commentId: F:Menu.Menu.infoLabelSin
  id: infoLabelSin
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: infoLabelSin
  nameWithType: Menu.infoLabelSin
  fullName: Menu.Menu.infoLabelSin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.infoLabelSin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float infoLabelSin
    return:
      type: System.Single
    content.vb: Public infoLabelSin As Single
- uid: Menu.Menu.gradientsContainer
  commentId: F:Menu.Menu.gradientsContainer
  id: gradientsContainer
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: gradientsContainer
  nameWithType: Menu.gradientsContainer
  fullName: Menu.Menu.gradientsContainer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.gradientsContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GradientsContainer gradientsContainer
    return:
      type: Menu.GradientsContainer
    content.vb: Public gradientsContainer As GradientsContainer
- uid: Menu.Menu.mouseScrollWheelMovement
  commentId: F:Menu.Menu.mouseScrollWheelMovement
  id: mouseScrollWheelMovement
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: mouseScrollWheelMovement
  nameWithType: Menu.mouseScrollWheelMovement
  fullName: Menu.Menu.mouseScrollWheelMovement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.mouseScrollWheelMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int mouseScrollWheelMovement
    return:
      type: System.Int32
    content.vb: Public mouseScrollWheelMovement As Integer
- uid: Menu.Menu.init
  commentId: F:Menu.Menu.init
  id: init
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: init
  nameWithType: Menu.init
  fullName: Menu.Menu.init
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Menu.init</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool init
    return:
      type: System.Boolean
    content.vb: Public init As Boolean
- uid: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  commentId: M:Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  id: HorizontalMoveToGetCentered(ProcessManager)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: HorizontalMoveToGetCentered(ProcessManager)
  nameWithType: Menu.HorizontalMoveToGetCentered(ProcessManager)
  fullName: Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float HorizontalMoveToGetCentered(ProcessManager manager)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.HorizontalMoveToGetCentered(ProcessManager)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HorizontalMoveToGetCentered(manager As ProcessManager) As Single
  overload: Menu.Menu.HorizontalMoveToGetCentered*
- uid: Menu.Menu.GetFreezeMenuFunctions
  commentId: M:Menu.Menu.GetFreezeMenuFunctions
  id: GetFreezeMenuFunctions
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: GetFreezeMenuFunctions()
  nameWithType: Menu.GetFreezeMenuFunctions()
  fullName: Menu.Menu.GetFreezeMenuFunctions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.GetFreezeMenuFunctions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool GetFreezeMenuFunctions()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.GetFreezeMenuFunctions</parameter>
          </include>
        </markup>
    content.vb: Public Function GetFreezeMenuFunctions() As Boolean
  overload: Menu.Menu.GetFreezeMenuFunctions*
- uid: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  commentId: M:Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  id: MenuColor(Menu.Menu.MenuColors)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: MenuColor(MenuColors)
  nameWithType: Menu.MenuColor(Menu.MenuColors)
  fullName: Menu.Menu.MenuColor(Menu.Menu.MenuColors)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.MenuColor(Menu.Menu.MenuColors)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor MenuColor(Menu.MenuColors col)
    parameters:
    - id: col
      type: Menu.Menu.MenuColors
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:Menu.Menu.MenuColor(Menu.Menu.MenuColors)</parameter>
          </include>
        </markup>
    return:
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.MenuColor(Menu.Menu.MenuColors)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MenuColor(col As Menu.MenuColors) As HSLColor
  overload: Menu.Menu.MenuColor*
- uid: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  commentId: M:Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  id: MenuRGB(Menu.Menu.MenuColors)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: MenuRGB(MenuColors)
  nameWithType: Menu.MenuRGB(Menu.MenuColors)
  fullName: Menu.Menu.MenuRGB(Menu.Menu.MenuColors)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.MenuRGB(Menu.Menu.MenuColors)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color MenuRGB(Menu.MenuColors col)
    parameters:
    - id: col
      type: Menu.Menu.MenuColors
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>col</parameter>
            <parameter>M:Menu.Menu.MenuRGB(Menu.Menu.MenuColors)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.MenuRGB(Menu.Menu.MenuColors)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MenuRGB(col As Menu.MenuColors) As Color
  overload: Menu.Menu.MenuRGB*
- uid: Menu.Menu.#ctor(ProcessManager,ProcessManager.ProcessID)
  commentId: M:Menu.Menu.#ctor(ProcessManager,ProcessManager.ProcessID)
  id: '#ctor(ProcessManager,ProcessManager.ProcessID)'
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Menu(ProcessManager, ProcessID)
  nameWithType: Menu.Menu(ProcessManager, ProcessManager.ProcessID)
  fullName: Menu.Menu.Menu(ProcessManager, ProcessManager.ProcessID)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Menu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Menu(ProcessManager manager, ProcessManager.ProcessID ID)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:Menu.Menu.#ctor(ProcessManager,ProcessManager.ProcessID)</parameter>
          </include>
        </markup>
    - id: ID
      type: Global.ProcessManager.ProcessID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:Menu.Menu.#ctor(ProcessManager,ProcessManager.ProcessID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(manager As ProcessManager, ID As ProcessManager.ProcessID)
  overload: Menu.Menu.#ctor*
  nameWithType.vb: Menu.New(ProcessManager, ProcessManager.ProcessID)
  fullName.vb: Menu.Menu.New(ProcessManager, ProcessManager.ProcessID)
  name.vb: New(ProcessManager, ProcessID)
- uid: Menu.Menu.Translate(System.String)
  commentId: M:Menu.Menu.Translate(System.String)
  id: Translate(System.String)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Translate(string)
  nameWithType: Menu.Translate(string)
  fullName: Menu.Menu.Translate(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.Translate(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string Translate(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:Menu.Menu.Translate(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.Translate(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function Translate(s As String) As String
  overload: Menu.Menu.Translate*
  nameWithType.vb: Menu.Translate(String)
  fullName.vb: Menu.Menu.Translate(String)
  name.vb: Translate(String)
- uid: Menu.Menu.Translate(System.String,System.Int32)
  commentId: M:Menu.Menu.Translate(System.String,System.Int32)
  id: Translate(System.String,System.Int32)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Translate(string, int)
  nameWithType: Menu.Translate(string, int)
  fullName: Menu.Menu.Translate(string, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.Translate(System.String,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string Translate(string s, int evenSplits)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:Menu.Menu.Translate(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: evenSplits
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>evenSplits</parameter>
            <parameter>M:Menu.Menu.Translate(System.String,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.Translate(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function Translate(s As String, evenSplits As Integer) As String
  overload: Menu.Menu.Translate*
  nameWithType.vb: Menu.Translate(String, Integer)
  fullName.vb: Menu.Menu.Translate(String, Integer)
  name.vb: Translate(String, Integer)
- uid: Menu.Menu.Init
  commentId: M:Menu.Menu.Init
  id: Init
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: Menu.Init()
  fullName: Menu.Menu.Init()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.Init</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Init()
    content.vb: Protected Overridable Sub Init()
  overload: Menu.Menu.Init*
- uid: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  commentId: M:Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  id: MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: MutualHorizontalButtonBind(MenuObject, MenuObject)
  nameWithType: Menu.MutualHorizontalButtonBind(MenuObject, MenuObject)
  fullName: Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject, Menu.MenuObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void MutualHorizontalButtonBind(MenuObject left, MenuObject right)
    parameters:
    - id: left
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
          </include>
        </markup>
    - id: right
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:Menu.Menu.MutualHorizontalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub MutualHorizontalButtonBind(left As MenuObject, right As MenuObject)
  overload: Menu.Menu.MutualHorizontalButtonBind*
- uid: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  commentId: M:Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  id: MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: MutualVerticalButtonBind(MenuObject, MenuObject)
  nameWithType: Menu.MutualVerticalButtonBind(MenuObject, MenuObject)
  fullName: Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject, Menu.MenuObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void MutualVerticalButtonBind(MenuObject bottom, MenuObject top)
    parameters:
    - id: bottom
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bottom</parameter>
            <parameter>M:Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
          </include>
        </markup>
    - id: top
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>top</parameter>
            <parameter>M:Menu.Menu.MutualVerticalButtonBind(Menu.MenuObject,Menu.MenuObject)</parameter>
          </include>
        </markup>
    content.vb: Protected Sub MutualVerticalButtonBind(bottom As MenuObject, top As MenuObject)
  overload: Menu.Menu.MutualVerticalButtonBind*
- uid: Menu.Menu.Update
  commentId: M:Menu.Menu.Update
  id: Update
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Menu.Update()
  fullName: Menu.Menu.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Global.MainLoopProcess.Update
  overload: Menu.Menu.Update*
- uid: Menu.Menu.ResetSelection
  commentId: M:Menu.Menu.ResetSelection
  id: ResetSelection
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: ResetSelection()
  nameWithType: Menu.ResetSelection()
  fullName: Menu.Menu.ResetSelection()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.ResetSelection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ResetSelection()
    content.vb: Public Sub ResetSelection()
  overload: Menu.Menu.ResetSelection*
- uid: Menu.Menu.GrafUpdate(System.Single)
  commentId: M:Menu.Menu.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: Menu.GrafUpdate(float)
  fullName: Menu.Menu.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.Menu.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GrafUpdate(timeStacker As Single)
  overridden: Global.MainLoopProcess.GrafUpdate(System.Single)
  overload: Menu.Menu.GrafUpdate*
  nameWithType.vb: Menu.GrafUpdate(Single)
  fullName.vb: Menu.Menu.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.Menu.UpdateInfoText
  commentId: M:Menu.Menu.UpdateInfoText
  id: UpdateInfoText
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: UpdateInfoText()
  nameWithType: Menu.UpdateInfoText()
  fullName: Menu.Menu.UpdateInfoText()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.UpdateInfoText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string UpdateInfoText()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.UpdateInfoText</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function UpdateInfoText() As String
  overload: Menu.Menu.UpdateInfoText*
- uid: Menu.Menu.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.Menu.Singal(Menu.MenuObject,System.String)
  id: Singal(Menu.MenuObject,System.String)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Singal(MenuObject, string)
  nameWithType: Menu.Singal(MenuObject, string)
  fullName: Menu.Menu.Singal(Menu.MenuObject, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.Singal(Menu.MenuObject,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Singal(MenuObject sender, string message)
    parameters:
    - id: sender
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sender</parameter>
            <parameter>M:Menu.Menu.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    - id: message
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>message</parameter>
            <parameter>M:Menu.Menu.Singal(Menu.MenuObject,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub Singal(sender As MenuObject, message As String)
  overload: Menu.Menu.Singal*
  nameWithType.vb: Menu.Singal(MenuObject, String)
  fullName.vb: Menu.Menu.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
- uid: Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  commentId: M:Menu.Menu.SliderSetValue(Menu.Slider,System.Single)
  id: SliderSetValue(Menu.Slider,System.Single)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: SliderSetValue(Slider, float)
  nameWithType: Menu.SliderSetValue(Slider, float)
  fullName: Menu.Menu.SliderSetValue(Menu.Slider, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.SliderSetValue(Menu.Slider,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void SliderSetValue(Slider slider, float f)
    parameters:
    - id: slider
      type: Menu.Slider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slider</parameter>
            <parameter>M:Menu.Menu.SliderSetValue(Menu.Slider,System.Single)</parameter>
          </include>
        </markup>
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:Menu.Menu.SliderSetValue(Menu.Slider,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub SliderSetValue(slider As Slider, f As Single)
  overload: Menu.Menu.SliderSetValue*
  nameWithType.vb: Menu.SliderSetValue(Slider, Single)
  fullName.vb: Menu.Menu.SliderSetValue(Menu.Slider, Single)
  name.vb: SliderSetValue(Slider, Single)
- uid: Menu.Menu.ValueOfSlider(Menu.Slider)
  commentId: M:Menu.Menu.ValueOfSlider(Menu.Slider)
  id: ValueOfSlider(Menu.Slider)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: ValueOfSlider(Slider)
  nameWithType: Menu.ValueOfSlider(Slider)
  fullName: Menu.Menu.ValueOfSlider(Menu.Slider)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.ValueOfSlider(Menu.Slider)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual float ValueOfSlider(Slider slider)
    parameters:
    - id: slider
      type: Menu.Slider
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slider</parameter>
            <parameter>M:Menu.Menu.ValueOfSlider(Menu.Slider)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.ValueOfSlider(Menu.Slider)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function ValueOfSlider(slider As Slider) As Single
  overload: Menu.Menu.ValueOfSlider*
- uid: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  commentId: M:Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  id: CommunicateWithUpcomingProcess(MainLoopProcess)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: CommunicateWithUpcomingProcess(MainLoopProcess)
  nameWithType: Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  fullName: Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void CommunicateWithUpcomingProcess(MainLoopProcess nextProcess)
    parameters:
    - id: nextProcess
      type: Global.MainLoopProcess
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nextProcess</parameter>
            <parameter>M:Menu.Menu.CommunicateWithUpcomingProcess(MainLoopProcess)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub CommunicateWithUpcomingProcess(nextProcess As MainLoopProcess)
  overridden: Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  overload: Menu.Menu.CommunicateWithUpcomingProcess*
- uid: Menu.Menu.ShutDownProcess
  commentId: M:Menu.Menu.ShutDownProcess
  id: ShutDownProcess
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: ShutDownProcess()
  nameWithType: Menu.ShutDownProcess()
  fullName: Menu.Menu.ShutDownProcess()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.ShutDownProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ShutDownProcess()
    content.vb: Public Overrides Sub ShutDownProcess()
  overridden: Global.MainLoopProcess.ShutDownProcess
  overload: Menu.Menu.ShutDownProcess*
- uid: Menu.Menu.PlaySound(SoundID)
  commentId: M:Menu.Menu.PlaySound(SoundID)
  id: PlaySound(SoundID)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID)
  nameWithType: Menu.PlaySound(SoundID)
  fullName: Menu.Menu.PlaySound(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.PlaySound(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Menu.Menu.PlaySound(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundID As SoundID)
  overload: Menu.Menu.PlaySound*
- uid: Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)
  id: PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, float, float, float)
  nameWithType: Menu.PlaySound(SoundID, float, float, float)
  fullName: Menu.Menu.PlaySound(SoundID, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundID, float pan, float vol, float pitch)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Menu.Menu.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundID As SoundID, pan As Single, vol As Single, pitch As Single)
  overload: Menu.Menu.PlaySound*
  nameWithType.vb: Menu.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: Menu.Menu.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
- uid: Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  id: PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: PlayLoop(SoundID, float, float, float, bool)
  nameWithType: Menu.PlayLoop(SoundID, float, float, float, bool)
  fullName: Menu.Menu.PlayLoop(SoundID, float, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuMicrophone.MenuSoundLoop PlayLoop(SoundID soundID, float pan, float vol, float pitch, bool isBkgLoop)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: isBkgLoop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isBkgLoop</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.MenuMicrophone.MenuSoundLoop
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.PlayLoop(SoundID,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayLoop(soundID As SoundID, pan As Single, vol As Single, pitch As Single, isBkgLoop As Boolean) As MenuMicrophone.MenuSoundLoop
  overload: Menu.Menu.PlayLoop*
  nameWithType.vb: Menu.PlayLoop(SoundID, Single, Single, Single, Boolean)
  fullName.vb: Menu.Menu.PlayLoop(SoundID, Single, Single, Single, Boolean)
  name.vb: PlayLoop(SoundID, Single, Single, Single, Boolean)
- uid: Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  commentId: M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  id: PlaySoundCustom(System.String,System.Single,System.Single,System.Single)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: PlaySoundCustom(string, float, float, float)
  nameWithType: Menu.PlaySoundCustom(string, float, float, float)
  fullName: Menu.Menu.PlaySoundCustom(string, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySoundCustom(string soundName, float pan, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Menu.Menu.PlaySoundCustom(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySoundCustom(soundName As String, pan As Single, vol As Single, pitch As Single)
  overload: Menu.Menu.PlaySoundCustom*
  nameWithType.vb: Menu.PlaySoundCustom(String, Single, Single, Single)
  fullName.vb: Menu.Menu.PlaySoundCustom(String, Single, Single, Single)
  name.vb: PlaySoundCustom(String, Single, Single, Single)
- uid: Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  commentId: M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  id: PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: PlayLoopCustom(string, float, float, float, bool)
  nameWithType: Menu.PlayLoopCustom(string, float, float, float, bool)
  fullName: Menu.Menu.PlayLoopCustom(string, float, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuMicrophone.MenuSoundLoop PlayLoopCustom(string soundName, float pan, float vol, float pitch, bool isBkgLoop)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: isBkgLoop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isBkgLoop</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.MenuMicrophone.MenuSoundLoop
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Menu.PlayLoopCustom(System.String,System.Single,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayLoopCustom(soundName As String, pan As Single, vol As Single, pitch As Single, isBkgLoop As Boolean) As MenuMicrophone.MenuSoundLoop
  overload: Menu.Menu.PlayLoopCustom*
  nameWithType.vb: Menu.PlayLoopCustom(String, Single, Single, Single, Boolean)
  fullName.vb: Menu.Menu.PlayLoopCustom(String, Single, Single, Single, Boolean)
  name.vb: PlayLoopCustom(String, Single, Single, Single, Boolean)
- uid: Menu.Menu.AllowDialogs
  commentId: P:Menu.Menu.AllowDialogs
  id: AllowDialogs
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: AllowDialogs
  nameWithType: Menu.AllowDialogs
  fullName: Menu.Menu.AllowDialogs
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.AllowDialogs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool AllowDialogs { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overrides ReadOnly Property AllowDialogs As Boolean
  overridden: Global.MainLoopProcess.AllowDialogs
  overload: Menu.Menu.AllowDialogs*
- uid: Menu.Menu.ShowCursor
  commentId: P:Menu.Menu.ShowCursor
  id: ShowCursor
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: ShowCursor
  nameWithType: Menu.ShowCursor
  fullName: Menu.Menu.ShowCursor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.ShowCursor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool ShowCursor { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property ShowCursor As Boolean
  overload: Menu.Menu.ShowCursor*
- uid: Menu.Menu.ForceNoMouseMode
  commentId: P:Menu.Menu.ForceNoMouseMode
  id: ForceNoMouseMode
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: ForceNoMouseMode
  nameWithType: Menu.ForceNoMouseMode
  fullName: Menu.Menu.ForceNoMouseMode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.ForceNoMouseMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool ForceNoMouseMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property ForceNoMouseMode As Boolean
  overload: Menu.Menu.ForceNoMouseMode*
- uid: Menu.Menu.Active
  commentId: P:Menu.Menu.Active
  id: Active
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: Menu.Active
  fullName: Menu.Menu.Active
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.Active</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Active { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Active As Boolean
  overload: Menu.Menu.Active*
- uid: Menu.Menu.HoldButtonDisregardingFreeze
  commentId: P:Menu.Menu.HoldButtonDisregardingFreeze
  id: HoldButtonDisregardingFreeze
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: HoldButtonDisregardingFreeze
  nameWithType: Menu.HoldButtonDisregardingFreeze
  fullName: Menu.Menu.HoldButtonDisregardingFreeze
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.HoldButtonDisregardingFreeze</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HoldButtonDisregardingFreeze { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HoldButtonDisregardingFreeze As Boolean
  overload: Menu.Menu.HoldButtonDisregardingFreeze*
- uid: Menu.Menu.NonMouseInputDisregardingFreeze
  commentId: P:Menu.Menu.NonMouseInputDisregardingFreeze
  id: NonMouseInputDisregardingFreeze
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: NonMouseInputDisregardingFreeze
  nameWithType: Menu.NonMouseInputDisregardingFreeze
  fullName: Menu.Menu.NonMouseInputDisregardingFreeze
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.NonMouseInputDisregardingFreeze</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage NonMouseInputDisregardingFreeze { get; }
    parameters: []
    return:
      type: Global.Player.InputPackage
    content.vb: Public ReadOnly Property NonMouseInputDisregardingFreeze As Player.InputPackage
  overload: Menu.Menu.NonMouseInputDisregardingFreeze*
- uid: Menu.Menu.FreezeMenuFunctions
  commentId: P:Menu.Menu.FreezeMenuFunctions
  id: FreezeMenuFunctions
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: FreezeMenuFunctions
  nameWithType: Menu.FreezeMenuFunctions
  fullName: Menu.Menu.FreezeMenuFunctions
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.FreezeMenuFunctions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual bool FreezeMenuFunctions { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property FreezeMenuFunctions As Boolean
  overload: Menu.Menu.FreezeMenuFunctions*
- uid: Menu.Menu.CurrLang
  commentId: P:Menu.Menu.CurrLang
  id: CurrLang
  parent: Menu.Menu
  langs:
  - csharp
  - vb
  name: CurrLang
  nameWithType: Menu.CurrLang
  fullName: Menu.Menu.CurrLang
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Menu.CurrLang</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InGameTranslator.LanguageID CurrLang { get; }
    parameters: []
    return:
      type: Global.InGameTranslator.LanguageID
    content.vb: Public ReadOnly Property CurrLang As InGameTranslator.LanguageID
  overload: Menu.Menu.CurrLang*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.MainLoopProcess
  commentId: T:Global.MainLoopProcess
  isExternal: true
  href: MainLoopProcess.html
  name: MainLoopProcess
  nameWithType: MainLoopProcess
  fullName: MainLoopProcess
- uid: Global.MainLoopProcess.manager
  commentId: F:Global.MainLoopProcess.manager
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_manager
  name: manager
  nameWithType: MainLoopProcess.manager
  fullName: MainLoopProcess.manager
- uid: Global.MainLoopProcess.ID
  commentId: F:Global.MainLoopProcess.ID
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_ID
  name: ID
  nameWithType: MainLoopProcess.ID
  fullName: MainLoopProcess.ID
- uid: Global.MainLoopProcess.framesPerSecond
  commentId: F:Global.MainLoopProcess.framesPerSecond
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_framesPerSecond
  name: framesPerSecond
  nameWithType: MainLoopProcess.framesPerSecond
  fullName: MainLoopProcess.framesPerSecond
- uid: Global.MainLoopProcess.processActive
  commentId: F:Global.MainLoopProcess.processActive
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_processActive
  name: processActive
  nameWithType: MainLoopProcess.processActive
  fullName: MainLoopProcess.processActive
- uid: Global.MainLoopProcess.RawUpdate(System.Single)
  commentId: M:Global.MainLoopProcess.RawUpdate(System.Single)
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  name: RawUpdate(float)
  nameWithType: MainLoopProcess.RawUpdate(float)
  fullName: MainLoopProcess.RawUpdate(float)
  nameWithType.vb: MainLoopProcess.RawUpdate(Single)
  fullName.vb: MainLoopProcess.RawUpdate(Single)
  name.vb: RawUpdate(Single)
  spec.csharp:
  - uid: Global.MainLoopProcess.RawUpdate(System.Single)
    name: RawUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.RawUpdate(System.Single)
    name: RawUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_RawUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.MainLoopProcess.TimeSpeedFac
  commentId: P:Global.MainLoopProcess.TimeSpeedFac
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_TimeSpeedFac
  name: TimeSpeedFac
  nameWithType: MainLoopProcess.TimeSpeedFac
  fullName: MainLoopProcess.TimeSpeedFac
- uid: Global.MainLoopProcess.FadeInTime
  commentId: P:Global.MainLoopProcess.FadeInTime
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_FadeInTime
  name: FadeInTime
  nameWithType: MainLoopProcess.FadeInTime
  fullName: MainLoopProcess.FadeInTime
- uid: Global.MainLoopProcess.InitialBlackSeconds
  commentId: P:Global.MainLoopProcess.InitialBlackSeconds
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_InitialBlackSeconds
  name: InitialBlackSeconds
  nameWithType: MainLoopProcess.InitialBlackSeconds
  fullName: MainLoopProcess.InitialBlackSeconds
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{Menu.Page}
  commentId: T:System.Collections.Generic.List{Menu.Page}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Page>
  nameWithType: List<Page>
  fullName: System.Collections.Generic.List<Menu.Page>
  nameWithType.vb: List(Of Page)
  fullName.vb: System.Collections.Generic.List(Of Menu.Page)
  name.vb: List(Of Page)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Menu.Page
    name: Page
    isExternal: true
    href: Menu.Page.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.Page
    name: Page
    isExternal: true
    href: Menu.Page.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Menu.MenuScene
  commentId: T:Menu.MenuScene
  parent: Menu
  isExternal: true
  href: Menu.MenuScene.html
  name: MenuScene
  nameWithType: MenuScene
  fullName: Menu.MenuScene
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Global.Player.InputPackage
  commentId: T:Global.Player.InputPackage
  isExternal: true
  href: Player.html
  name: Player.InputPackage
  nameWithType: Player.InputPackage
  fullName: Player.InputPackage
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.MenuMicrophone.MenuSoundLoop
  commentId: T:Global.MenuMicrophone.MenuSoundLoop
  isExternal: true
  href: MenuMicrophone.html
  name: MenuMicrophone.MenuSoundLoop
  nameWithType: MenuMicrophone.MenuSoundLoop
  fullName: MenuMicrophone.MenuSoundLoop
  spec.csharp:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
  spec.vb:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Menu.GradientsContainer
  commentId: T:Menu.GradientsContainer
  parent: Menu
  isExternal: true
  href: Menu.GradientsContainer.html
  name: GradientsContainer
  nameWithType: GradientsContainer
  fullName: Menu.GradientsContainer
- uid: Menu.Menu.HorizontalMoveToGetCentered*
  commentId: Overload:Menu.Menu.HorizontalMoveToGetCentered
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_HorizontalMoveToGetCentered_ProcessManager_
  name: HorizontalMoveToGetCentered
  nameWithType: Menu.HorizontalMoveToGetCentered
  fullName: Menu.Menu.HorizontalMoveToGetCentered
- uid: Global.ProcessManager
  commentId: T:Global.ProcessManager
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager
  nameWithType: ProcessManager
  fullName: ProcessManager
- uid: Menu.Menu.GetFreezeMenuFunctions*
  commentId: Overload:Menu.Menu.GetFreezeMenuFunctions
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_GetFreezeMenuFunctions
  name: GetFreezeMenuFunctions
  nameWithType: Menu.GetFreezeMenuFunctions
  fullName: Menu.Menu.GetFreezeMenuFunctions
- uid: Menu.Menu.MenuColor*
  commentId: Overload:Menu.Menu.MenuColor
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MenuColor_Menu_Menu_MenuColors_
  name: MenuColor
  nameWithType: Menu.MenuColor
  fullName: Menu.Menu.MenuColor
- uid: Menu.Menu.MenuColors
  commentId: T:Menu.Menu.MenuColors
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu.MenuColors
  nameWithType: Menu.MenuColors
  fullName: Menu.Menu.MenuColors
  spec.csharp:
  - uid: Menu.Menu
    name: Menu
    isExternal: true
    href: Menu.Menu.html
  - name: .
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
  spec.vb:
  - uid: Menu.Menu
    name: Menu
    isExternal: true
    href: Menu.Menu.html
  - name: .
  - uid: Menu.Menu.MenuColors
    name: MenuColors
    isExternal: true
    href: Menu.Menu.MenuColors.html
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  isExternal: true
  href: HSLColor.html
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
- uid: Menu.Menu.MenuRGB*
  commentId: Overload:Menu.Menu.MenuRGB
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MenuRGB_Menu_Menu_MenuColors_
  name: MenuRGB
  nameWithType: Menu.MenuRGB
  fullName: Menu.Menu.MenuRGB
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Menu.Menu.#ctor*
  commentId: Overload:Menu.Menu.#ctor
  isExternal: true
  href: Menu.Menu.html#Menu_Menu__ctor_ProcessManager_ProcessManager_ProcessID_
  name: Menu
  nameWithType: Menu.Menu
  fullName: Menu.Menu.Menu
  nameWithType.vb: Menu.New
  fullName.vb: Menu.Menu.New
  name.vb: New
- uid: Global.ProcessManager.ProcessID
  commentId: T:Global.ProcessManager.ProcessID
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager.ProcessID
  nameWithType: ProcessManager.ProcessID
  fullName: ProcessManager.ProcessID
  spec.csharp:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
  spec.vb:
  - uid: Global.ProcessManager
    name: ProcessManager
    isExternal: true
    href: ProcessManager.html
  - name: .
  - uid: Global.ProcessManager.ProcessID
    name: ProcessID
    isExternal: true
    href: ProcessManager.ProcessID.html
- uid: Menu.Menu.Translate*
  commentId: Overload:Menu.Menu.Translate
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Translate_System_String_
  name: Translate
  nameWithType: Menu.Translate
  fullName: Menu.Menu.Translate
- uid: Menu.Menu.Init*
  commentId: Overload:Menu.Menu.Init
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Init
  name: Init
  nameWithType: Menu.Init
  fullName: Menu.Menu.Init
- uid: Menu.Menu.MutualHorizontalButtonBind*
  commentId: Overload:Menu.Menu.MutualHorizontalButtonBind
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MutualHorizontalButtonBind_Menu_MenuObject_Menu_MenuObject_
  name: MutualHorizontalButtonBind
  nameWithType: Menu.MutualHorizontalButtonBind
  fullName: Menu.Menu.MutualHorizontalButtonBind
- uid: Menu.Menu.MutualVerticalButtonBind*
  commentId: Overload:Menu.Menu.MutualVerticalButtonBind
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_MutualVerticalButtonBind_Menu_MenuObject_Menu_MenuObject_
  name: MutualVerticalButtonBind
  nameWithType: Menu.MutualVerticalButtonBind
  fullName: Menu.Menu.MutualVerticalButtonBind
- uid: Global.MainLoopProcess.Update
  commentId: M:Global.MainLoopProcess.Update
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_Update
  name: Update()
  nameWithType: MainLoopProcess.Update()
  fullName: MainLoopProcess.Update()
  spec.csharp:
  - uid: Global.MainLoopProcess.Update
    name: Update
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.Update
    name: Update
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_Update
  - name: (
  - name: )
- uid: Menu.Menu.Update*
  commentId: Overload:Menu.Menu.Update
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Update
  name: Update
  nameWithType: Menu.Update
  fullName: Menu.Menu.Update
- uid: Menu.Menu.ResetSelection*
  commentId: Overload:Menu.Menu.ResetSelection
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ResetSelection
  name: ResetSelection
  nameWithType: Menu.ResetSelection
  fullName: Menu.Menu.ResetSelection
- uid: Global.MainLoopProcess.GrafUpdate(System.Single)
  commentId: M:Global.MainLoopProcess.GrafUpdate(System.Single)
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_GrafUpdate_System_Single_
  name: GrafUpdate(float)
  nameWithType: MainLoopProcess.GrafUpdate(float)
  fullName: MainLoopProcess.GrafUpdate(float)
  nameWithType.vb: MainLoopProcess.GrafUpdate(Single)
  fullName.vb: MainLoopProcess.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Global.MainLoopProcess.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.Menu.GrafUpdate*
  commentId: Overload:Menu.Menu.GrafUpdate
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: Menu.GrafUpdate
  fullName: Menu.Menu.GrafUpdate
- uid: Menu.Menu.UpdateInfoText*
  commentId: Overload:Menu.Menu.UpdateInfoText
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_UpdateInfoText
  name: UpdateInfoText
  nameWithType: Menu.UpdateInfoText
  fullName: Menu.Menu.UpdateInfoText
- uid: Menu.Menu.Singal*
  commentId: Overload:Menu.Menu.Singal
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Singal_Menu_MenuObject_System_String_
  name: Singal
  nameWithType: Menu.Singal
  fullName: Menu.Menu.Singal
- uid: Menu.Menu.SliderSetValue*
  commentId: Overload:Menu.Menu.SliderSetValue
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_SliderSetValue_Menu_Slider_System_Single_
  name: SliderSetValue
  nameWithType: Menu.SliderSetValue
  fullName: Menu.Menu.SliderSetValue
- uid: Menu.Slider
  commentId: T:Menu.Slider
  parent: Menu
  isExternal: true
  href: Menu.Slider.html
  name: Slider
  nameWithType: Slider
  fullName: Menu.Slider
- uid: Menu.Menu.ValueOfSlider*
  commentId: Overload:Menu.Menu.ValueOfSlider
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ValueOfSlider_Menu_Slider_
  name: ValueOfSlider
  nameWithType: Menu.ValueOfSlider
  fullName: Menu.Menu.ValueOfSlider
- uid: Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  commentId: M:Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_CommunicateWithUpcomingProcess_MainLoopProcess_
  name: CommunicateWithUpcomingProcess(MainLoopProcess)
  nameWithType: MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  fullName: MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
  spec.csharp:
  - uid: Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
    name: CommunicateWithUpcomingProcess
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_CommunicateWithUpcomingProcess_MainLoopProcess_
  - name: (
  - uid: Global.MainLoopProcess
    name: MainLoopProcess
    isExternal: true
    href: MainLoopProcess.html
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.CommunicateWithUpcomingProcess(MainLoopProcess)
    name: CommunicateWithUpcomingProcess
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_CommunicateWithUpcomingProcess_MainLoopProcess_
  - name: (
  - uid: Global.MainLoopProcess
    name: MainLoopProcess
    isExternal: true
    href: MainLoopProcess.html
  - name: )
- uid: Menu.Menu.CommunicateWithUpcomingProcess*
  commentId: Overload:Menu.Menu.CommunicateWithUpcomingProcess
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_CommunicateWithUpcomingProcess_MainLoopProcess_
  name: CommunicateWithUpcomingProcess
  nameWithType: Menu.CommunicateWithUpcomingProcess
  fullName: Menu.Menu.CommunicateWithUpcomingProcess
- uid: Global.MainLoopProcess.ShutDownProcess
  commentId: M:Global.MainLoopProcess.ShutDownProcess
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_ShutDownProcess
  name: ShutDownProcess()
  nameWithType: MainLoopProcess.ShutDownProcess()
  fullName: MainLoopProcess.ShutDownProcess()
  spec.csharp:
  - uid: Global.MainLoopProcess.ShutDownProcess
    name: ShutDownProcess
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_ShutDownProcess
  - name: (
  - name: )
  spec.vb:
  - uid: Global.MainLoopProcess.ShutDownProcess
    name: ShutDownProcess
    isExternal: true
    href: Global.MainLoopProcess.html#MainLoopProcess_ShutDownProcess
  - name: (
  - name: )
- uid: Menu.Menu.ShutDownProcess*
  commentId: Overload:Menu.Menu.ShutDownProcess
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ShutDownProcess
  name: ShutDownProcess
  nameWithType: Menu.ShutDownProcess
  fullName: Menu.Menu.ShutDownProcess
- uid: Menu.Menu.PlaySound*
  commentId: Overload:Menu.Menu.PlaySound
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlaySound_SoundID_
  name: PlaySound
  nameWithType: Menu.PlaySound
  fullName: Menu.Menu.PlaySound
- uid: Menu.Menu.PlayLoop*
  commentId: Overload:Menu.Menu.PlayLoop
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlayLoop_SoundID_System_Single_System_Single_System_Single_System_Boolean_
  name: PlayLoop
  nameWithType: Menu.PlayLoop
  fullName: Menu.Menu.PlayLoop
- uid: Menu.Menu.PlaySoundCustom*
  commentId: Overload:Menu.Menu.PlaySoundCustom
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlaySoundCustom_System_String_System_Single_System_Single_System_Single_
  name: PlaySoundCustom
  nameWithType: Menu.PlaySoundCustom
  fullName: Menu.Menu.PlaySoundCustom
- uid: Menu.Menu.PlayLoopCustom*
  commentId: Overload:Menu.Menu.PlayLoopCustom
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_PlayLoopCustom_System_String_System_Single_System_Single_System_Single_System_Boolean_
  name: PlayLoopCustom
  nameWithType: Menu.PlayLoopCustom
  fullName: Menu.Menu.PlayLoopCustom
- uid: Global.MainLoopProcess.AllowDialogs
  commentId: P:Global.MainLoopProcess.AllowDialogs
  parent: Global.MainLoopProcess
  isExternal: true
  href: Global.MainLoopProcess.html#MainLoopProcess_AllowDialogs
  name: AllowDialogs
  nameWithType: MainLoopProcess.AllowDialogs
  fullName: MainLoopProcess.AllowDialogs
- uid: Menu.Menu.AllowDialogs*
  commentId: Overload:Menu.Menu.AllowDialogs
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_AllowDialogs
  name: AllowDialogs
  nameWithType: Menu.AllowDialogs
  fullName: Menu.Menu.AllowDialogs
- uid: Menu.Menu.ShowCursor*
  commentId: Overload:Menu.Menu.ShowCursor
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ShowCursor
  name: ShowCursor
  nameWithType: Menu.ShowCursor
  fullName: Menu.Menu.ShowCursor
- uid: Menu.Menu.ForceNoMouseMode*
  commentId: Overload:Menu.Menu.ForceNoMouseMode
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_ForceNoMouseMode
  name: ForceNoMouseMode
  nameWithType: Menu.ForceNoMouseMode
  fullName: Menu.Menu.ForceNoMouseMode
- uid: Menu.Menu.Active*
  commentId: Overload:Menu.Menu.Active
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_Active
  name: Active
  nameWithType: Menu.Active
  fullName: Menu.Menu.Active
- uid: Menu.Menu.HoldButtonDisregardingFreeze*
  commentId: Overload:Menu.Menu.HoldButtonDisregardingFreeze
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_HoldButtonDisregardingFreeze
  name: HoldButtonDisregardingFreeze
  nameWithType: Menu.HoldButtonDisregardingFreeze
  fullName: Menu.Menu.HoldButtonDisregardingFreeze
- uid: Menu.Menu.NonMouseInputDisregardingFreeze*
  commentId: Overload:Menu.Menu.NonMouseInputDisregardingFreeze
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_NonMouseInputDisregardingFreeze
  name: NonMouseInputDisregardingFreeze
  nameWithType: Menu.NonMouseInputDisregardingFreeze
  fullName: Menu.Menu.NonMouseInputDisregardingFreeze
- uid: Menu.Menu.FreezeMenuFunctions*
  commentId: Overload:Menu.Menu.FreezeMenuFunctions
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_FreezeMenuFunctions
  name: FreezeMenuFunctions
  nameWithType: Menu.FreezeMenuFunctions
  fullName: Menu.Menu.FreezeMenuFunctions
- uid: Menu.Menu.CurrLang*
  commentId: Overload:Menu.Menu.CurrLang
  isExternal: true
  href: Menu.Menu.html#Menu_Menu_CurrLang
  name: CurrLang
  nameWithType: Menu.CurrLang
  fullName: Menu.Menu.CurrLang
- uid: Global.InGameTranslator.LanguageID
  commentId: T:Global.InGameTranslator.LanguageID
  isExternal: true
  href: InGameTranslator.html
  name: InGameTranslator.LanguageID
  nameWithType: InGameTranslator.LanguageID
  fullName: InGameTranslator.LanguageID
  spec.csharp:
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
  spec.vb:
  - uid: Global.InGameTranslator
    name: InGameTranslator
    isExternal: true
    href: InGameTranslator.html
  - name: .
  - uid: Global.InGameTranslator.LanguageID
    name: LanguageID
    isExternal: true
    href: InGameTranslator.LanguageID.html
