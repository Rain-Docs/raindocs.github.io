### YamlMime:ManagedReference
items:
- uid: Global.ModManager.Mod
  commentId: T:Global.ModManager.Mod
  id: ModManager.Mod
  parent: Global
  children:
  - Global.ModManager.Mod.#ctor
  - Global.ModManager.Mod.DLCMissing
  - Global.ModManager.Mod.DownpourMissing
  - Global.ModManager.Mod.GetThumbnailPath
  - Global.ModManager.Mod.LocalizedDescription
  - Global.ModManager.Mod.LocalizedName
  - Global.ModManager.Mod.NewestPath
  - Global.ModManager.Mod.TargetedPath
  - Global.ModManager.Mod.WatcherMissing
  - Global.ModManager.Mod.authorBlank
  - Global.ModManager.Mod.authors
  - Global.ModManager.Mod.basePath
  - Global.ModManager.Mod.checksum
  - Global.ModManager.Mod.checksumChanged
  - Global.ModManager.Mod.checksumOverrideVersion
  - Global.ModManager.Mod.descBlank
  - Global.ModManager.Mod.description
  - Global.ModManager.Mod.enabled
  - Global.ModManager.Mod.hasDLL
  - Global.ModManager.Mod.hasNewestFolder
  - Global.ModManager.Mod.hasTargetedVersionFolder
  - Global.ModManager.Mod.hideVersion
  - Global.ModManager.Mod.id
  - Global.ModManager.Mod.loadOrder
  - Global.ModManager.Mod.modifiesRegions
  - Global.ModManager.Mod.name
  - Global.ModManager.Mod.path
  - Global.ModManager.Mod.priorities
  - Global.ModManager.Mod.requirements
  - Global.ModManager.Mod.requirementsNames
  - Global.ModManager.Mod.tags
  - Global.ModManager.Mod.targetGameVersion
  - Global.ModManager.Mod.trailerID
  - Global.ModManager.Mod.version
  - Global.ModManager.Mod.workshopId
  - Global.ModManager.Mod.workshopMod
  langs:
  - csharp
  - vb
  name: ModManager.Mod
  nameWithType: ModManager.Mod
  fullName: ModManager.Mod
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ModManager.Mod</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ModManager.Mod
    content.vb: Public Class ModManager.Mod
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ModManager.Mod.id
  commentId: F:Global.ModManager.Mod.id
  id: id
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: id
  nameWithType: ModManager.Mod.id
  fullName: ModManager.Mod.id
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.id</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string id
    return:
      type: System.String
    content.vb: Public id As String
- uid: Global.ModManager.Mod.name
  commentId: F:Global.ModManager.Mod.name
  id: name
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ModManager.Mod.name
  fullName: ModManager.Mod.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.ModManager.Mod.path
  commentId: F:Global.ModManager.Mod.path
  id: path
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: path
  nameWithType: ModManager.Mod.path
  fullName: ModManager.Mod.path
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.path</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string path
    return:
      type: System.String
    content.vb: Public path As String
- uid: Global.ModManager.Mod.basePath
  commentId: F:Global.ModManager.Mod.basePath
  id: basePath
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: basePath
  nameWithType: ModManager.Mod.basePath
  fullName: ModManager.Mod.basePath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.basePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string basePath
    return:
      type: System.String
    content.vb: Public basePath As String
- uid: Global.ModManager.Mod.version
  commentId: F:Global.ModManager.Mod.version
  id: version
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: version
  nameWithType: ModManager.Mod.version
  fullName: ModManager.Mod.version
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.version</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string version
    return:
      type: System.String
    content.vb: Public version As String
- uid: Global.ModManager.Mod.targetGameVersion
  commentId: F:Global.ModManager.Mod.targetGameVersion
  id: targetGameVersion
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: targetGameVersion
  nameWithType: ModManager.Mod.targetGameVersion
  fullName: ModManager.Mod.targetGameVersion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.targetGameVersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string targetGameVersion
    return:
      type: System.String
    content.vb: Public targetGameVersion As String
- uid: Global.ModManager.Mod.authors
  commentId: F:Global.ModManager.Mod.authors
  id: authors
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: authors
  nameWithType: ModManager.Mod.authors
  fullName: ModManager.Mod.authors
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.authors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string authors
    return:
      type: System.String
    content.vb: Public authors As String
- uid: Global.ModManager.Mod.description
  commentId: F:Global.ModManager.Mod.description
  id: description
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: description
  nameWithType: ModManager.Mod.description
  fullName: ModManager.Mod.description
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.description</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string description
    return:
      type: System.String
    content.vb: Public description As String
- uid: Global.ModManager.Mod.descBlank
  commentId: F:Global.ModManager.Mod.descBlank
  id: descBlank
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: descBlank
  nameWithType: ModManager.Mod.descBlank
  fullName: ModManager.Mod.descBlank
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.descBlank</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string descBlank
    return:
      type: System.String
    content.vb: Public descBlank As String
- uid: Global.ModManager.Mod.trailerID
  commentId: F:Global.ModManager.Mod.trailerID
  id: trailerID
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: trailerID
  nameWithType: ModManager.Mod.trailerID
  fullName: ModManager.Mod.trailerID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.trailerID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string trailerID
    return:
      type: System.String
    content.vb: Public trailerID As String
- uid: Global.ModManager.Mod.requirements
  commentId: F:Global.ModManager.Mod.requirements
  id: requirements
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: requirements
  nameWithType: ModManager.Mod.requirements
  fullName: ModManager.Mod.requirements
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.requirements</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] requirements
    return:
      type: System.String[]
    content.vb: Public requirements As String()
- uid: Global.ModManager.Mod.requirementsNames
  commentId: F:Global.ModManager.Mod.requirementsNames
  id: requirementsNames
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: requirementsNames
  nameWithType: ModManager.Mod.requirementsNames
  fullName: ModManager.Mod.requirementsNames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.requirementsNames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] requirementsNames
    return:
      type: System.String[]
    content.vb: Public requirementsNames As String()
- uid: Global.ModManager.Mod.tags
  commentId: F:Global.ModManager.Mod.tags
  id: tags
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: tags
  nameWithType: ModManager.Mod.tags
  fullName: ModManager.Mod.tags
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.tags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] tags
    return:
      type: System.String[]
    content.vb: Public tags As String()
- uid: Global.ModManager.Mod.priorities
  commentId: F:Global.ModManager.Mod.priorities
  id: priorities
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: priorities
  nameWithType: ModManager.Mod.priorities
  fullName: ModManager.Mod.priorities
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.priorities</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] priorities
    return:
      type: System.String[]
    content.vb: Public priorities As String()
- uid: Global.ModManager.Mod.enabled
  commentId: F:Global.ModManager.Mod.enabled
  id: enabled
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: enabled
  nameWithType: ModManager.Mod.enabled
  fullName: ModManager.Mod.enabled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.enabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool enabled
    return:
      type: System.Boolean
    content.vb: Public enabled As Boolean
- uid: Global.ModManager.Mod.checksum
  commentId: F:Global.ModManager.Mod.checksum
  id: checksum
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: checksum
  nameWithType: ModManager.Mod.checksum
  fullName: ModManager.Mod.checksum
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.checksum</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string checksum
    return:
      type: System.String
    content.vb: Public checksum As String
- uid: Global.ModManager.Mod.checksumChanged
  commentId: F:Global.ModManager.Mod.checksumChanged
  id: checksumChanged
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: checksumChanged
  nameWithType: ModManager.Mod.checksumChanged
  fullName: ModManager.Mod.checksumChanged
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.checksumChanged</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool checksumChanged
    return:
      type: System.Boolean
    content.vb: Public checksumChanged As Boolean
- uid: Global.ModManager.Mod.checksumOverrideVersion
  commentId: F:Global.ModManager.Mod.checksumOverrideVersion
  id: checksumOverrideVersion
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: checksumOverrideVersion
  nameWithType: ModManager.Mod.checksumOverrideVersion
  fullName: ModManager.Mod.checksumOverrideVersion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.checksumOverrideVersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool checksumOverrideVersion
    return:
      type: System.Boolean
    content.vb: Public checksumOverrideVersion As Boolean
- uid: Global.ModManager.Mod.hideVersion
  commentId: F:Global.ModManager.Mod.hideVersion
  id: hideVersion
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: hideVersion
  nameWithType: ModManager.Mod.hideVersion
  fullName: ModManager.Mod.hideVersion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.hideVersion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hideVersion
    return:
      type: System.Boolean
    content.vb: Public hideVersion As Boolean
- uid: Global.ModManager.Mod.loadOrder
  commentId: F:Global.ModManager.Mod.loadOrder
  id: loadOrder
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: loadOrder
  nameWithType: ModManager.Mod.loadOrder
  fullName: ModManager.Mod.loadOrder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.loadOrder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int loadOrder
    return:
      type: System.Int32
    content.vb: Public loadOrder As Integer
- uid: Global.ModManager.Mod.modifiesRegions
  commentId: F:Global.ModManager.Mod.modifiesRegions
  id: modifiesRegions
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: modifiesRegions
  nameWithType: ModManager.Mod.modifiesRegions
  fullName: ModManager.Mod.modifiesRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.modifiesRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool modifiesRegions
    return:
      type: System.Boolean
    content.vb: Public modifiesRegions As Boolean
- uid: Global.ModManager.Mod.workshopMod
  commentId: F:Global.ModManager.Mod.workshopMod
  id: workshopMod
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: workshopMod
  nameWithType: ModManager.Mod.workshopMod
  fullName: ModManager.Mod.workshopMod
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.workshopMod</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool workshopMod
    return:
      type: System.Boolean
    content.vb: Public workshopMod As Boolean
- uid: Global.ModManager.Mod.workshopId
  commentId: F:Global.ModManager.Mod.workshopId
  id: workshopId
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: workshopId
  nameWithType: ModManager.Mod.workshopId
  fullName: ModManager.Mod.workshopId
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.workshopId</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ulong workshopId
    return:
      type: System.UInt64
    content.vb: Public workshopId As ULong
- uid: Global.ModManager.Mod.hasDLL
  commentId: F:Global.ModManager.Mod.hasDLL
  id: hasDLL
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: hasDLL
  nameWithType: ModManager.Mod.hasDLL
  fullName: ModManager.Mod.hasDLL
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.hasDLL</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasDLL
    return:
      type: System.Boolean
    content.vb: Public hasDLL As Boolean
- uid: Global.ModManager.Mod.hasNewestFolder
  commentId: F:Global.ModManager.Mod.hasNewestFolder
  id: hasNewestFolder
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: hasNewestFolder
  nameWithType: ModManager.Mod.hasNewestFolder
  fullName: ModManager.Mod.hasNewestFolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.hasNewestFolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasNewestFolder
    return:
      type: System.Boolean
    content.vb: Public hasNewestFolder As Boolean
- uid: Global.ModManager.Mod.hasTargetedVersionFolder
  commentId: F:Global.ModManager.Mod.hasTargetedVersionFolder
  id: hasTargetedVersionFolder
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: hasTargetedVersionFolder
  nameWithType: ModManager.Mod.hasTargetedVersionFolder
  fullName: ModManager.Mod.hasTargetedVersionFolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.hasTargetedVersionFolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasTargetedVersionFolder
    return:
      type: System.Boolean
    content.vb: Public hasTargetedVersionFolder As Boolean
- uid: Global.ModManager.Mod.authorBlank
  commentId: F:Global.ModManager.Mod.authorBlank
  id: authorBlank
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: authorBlank
  nameWithType: ModManager.Mod.authorBlank
  fullName: ModManager.Mod.authorBlank
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.Mod.authorBlank</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const string authorBlank = "Unknown"
    return:
      type: System.String
    content.vb: Public Const authorBlank As String = "Unknown"
- uid: Global.ModManager.Mod.GetThumbnailPath
  commentId: M:Global.ModManager.Mod.GetThumbnailPath
  id: GetThumbnailPath
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: GetThumbnailPath()
  nameWithType: ModManager.Mod.GetThumbnailPath()
  fullName: ModManager.Mod.GetThumbnailPath()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.Mod.GetThumbnailPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string GetThumbnailPath()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.Mod.GetThumbnailPath</parameter>
          </include>
        </markup>
    content.vb: Public Function GetThumbnailPath() As String
  overload: Global.ModManager.Mod.GetThumbnailPath*
- uid: Global.ModManager.Mod.#ctor
  commentId: M:Global.ModManager.Mod.#ctor
  id: '#ctor'
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: Mod()
  nameWithType: ModManager.Mod.Mod()
  fullName: ModManager.Mod.Mod()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ModManager.Mod</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Mod()
    content.vb: Public Sub New()
  overload: Global.ModManager.Mod.#ctor*
  nameWithType.vb: ModManager.Mod.New()
  fullName.vb: ModManager.Mod.New()
  name.vb: New()
- uid: Global.ModManager.Mod.LocalizedName
  commentId: P:Global.ModManager.Mod.LocalizedName
  id: LocalizedName
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: LocalizedName
  nameWithType: ModManager.Mod.LocalizedName
  fullName: ModManager.Mod.LocalizedName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.LocalizedName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string LocalizedName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocalizedName As String
  overload: Global.ModManager.Mod.LocalizedName*
- uid: Global.ModManager.Mod.LocalizedDescription
  commentId: P:Global.ModManager.Mod.LocalizedDescription
  id: LocalizedDescription
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: LocalizedDescription
  nameWithType: ModManager.Mod.LocalizedDescription
  fullName: ModManager.Mod.LocalizedDescription
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.LocalizedDescription</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string LocalizedDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property LocalizedDescription As String
  overload: Global.ModManager.Mod.LocalizedDescription*
- uid: Global.ModManager.Mod.TargetedPath
  commentId: P:Global.ModManager.Mod.TargetedPath
  id: TargetedPath
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: TargetedPath
  nameWithType: ModManager.Mod.TargetedPath
  fullName: ModManager.Mod.TargetedPath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.TargetedPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string TargetedPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TargetedPath As String
  overload: Global.ModManager.Mod.TargetedPath*
- uid: Global.ModManager.Mod.NewestPath
  commentId: P:Global.ModManager.Mod.NewestPath
  id: NewestPath
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: NewestPath
  nameWithType: ModManager.Mod.NewestPath
  fullName: ModManager.Mod.NewestPath
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.NewestPath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string NewestPath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property NewestPath As String
  overload: Global.ModManager.Mod.NewestPath*
- uid: Global.ModManager.Mod.DLCMissing
  commentId: P:Global.ModManager.Mod.DLCMissing
  id: DLCMissing
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: DLCMissing
  nameWithType: ModManager.Mod.DLCMissing
  fullName: ModManager.Mod.DLCMissing
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.DLCMissing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DLCMissing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DLCMissing As Boolean
  overload: Global.ModManager.Mod.DLCMissing*
- uid: Global.ModManager.Mod.DownpourMissing
  commentId: P:Global.ModManager.Mod.DownpourMissing
  id: DownpourMissing
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: DownpourMissing
  nameWithType: ModManager.Mod.DownpourMissing
  fullName: ModManager.Mod.DownpourMissing
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.DownpourMissing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DownpourMissing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DownpourMissing As Boolean
  overload: Global.ModManager.Mod.DownpourMissing*
- uid: Global.ModManager.Mod.WatcherMissing
  commentId: P:Global.ModManager.Mod.WatcherMissing
  id: WatcherMissing
  parent: Global.ModManager.Mod
  langs:
  - csharp
  - vb
  name: WatcherMissing
  nameWithType: ModManager.Mod.WatcherMissing
  fullName: ModManager.Mod.WatcherMissing
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.Mod.WatcherMissing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WatcherMissing { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WatcherMissing As Boolean
  overload: Global.ModManager.Mod.WatcherMissing*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: Global.ModManager.Mod.GetThumbnailPath*
  commentId: Overload:Global.ModManager.Mod.GetThumbnailPath
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_GetThumbnailPath
  name: GetThumbnailPath
  nameWithType: ModManager.Mod.GetThumbnailPath
  fullName: ModManager.Mod.GetThumbnailPath
- uid: Global.ModManager.Mod.#ctor*
  commentId: Overload:Global.ModManager.Mod.#ctor
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod__ctor
  name: Mod
  nameWithType: ModManager.Mod.Mod
  fullName: ModManager.Mod.Mod
  nameWithType.vb: ModManager.Mod.New
  fullName.vb: ModManager.Mod.New
  name.vb: New
- uid: Global.ModManager.Mod.LocalizedName*
  commentId: Overload:Global.ModManager.Mod.LocalizedName
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_LocalizedName
  name: LocalizedName
  nameWithType: ModManager.Mod.LocalizedName
  fullName: ModManager.Mod.LocalizedName
- uid: Global.ModManager.Mod.LocalizedDescription*
  commentId: Overload:Global.ModManager.Mod.LocalizedDescription
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_LocalizedDescription
  name: LocalizedDescription
  nameWithType: ModManager.Mod.LocalizedDescription
  fullName: ModManager.Mod.LocalizedDescription
- uid: Global.ModManager.Mod.TargetedPath*
  commentId: Overload:Global.ModManager.Mod.TargetedPath
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_TargetedPath
  name: TargetedPath
  nameWithType: ModManager.Mod.TargetedPath
  fullName: ModManager.Mod.TargetedPath
- uid: Global.ModManager.Mod.NewestPath*
  commentId: Overload:Global.ModManager.Mod.NewestPath
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_NewestPath
  name: NewestPath
  nameWithType: ModManager.Mod.NewestPath
  fullName: ModManager.Mod.NewestPath
- uid: Global.ModManager.Mod.DLCMissing*
  commentId: Overload:Global.ModManager.Mod.DLCMissing
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_DLCMissing
  name: DLCMissing
  nameWithType: ModManager.Mod.DLCMissing
  fullName: ModManager.Mod.DLCMissing
- uid: Global.ModManager.Mod.DownpourMissing*
  commentId: Overload:Global.ModManager.Mod.DownpourMissing
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_DownpourMissing
  name: DownpourMissing
  nameWithType: ModManager.Mod.DownpourMissing
  fullName: ModManager.Mod.DownpourMissing
- uid: Global.ModManager.Mod.WatcherMissing*
  commentId: Overload:Global.ModManager.Mod.WatcherMissing
  isExternal: true
  href: Global.ModManager.Mod.html#ModManager_Mod_WatcherMissing
  name: WatcherMissing
  nameWithType: ModManager.Mod.WatcherMissing
  fullName: ModManager.Mod.WatcherMissing
