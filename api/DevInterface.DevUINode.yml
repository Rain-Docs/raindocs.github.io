### YamlMime:ManagedReference
items:
- uid: DevInterface.DevUINode
  commentId: T:DevInterface.DevUINode
  id: DevUINode
  parent: DevInterface
  children:
  - DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)
  - DevInterface.DevUINode.ClearSprites
  - DevInterface.DevUINode.IDstring
  - DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  - DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  - DevInterface.DevUINode.Page
  - DevInterface.DevUINode.Refresh
  - DevInterface.DevUINode.RoomSettings
  - DevInterface.DevUINode.TopNode
  - DevInterface.DevUINode.Update
  - DevInterface.DevUINode.fLabels
  - DevInterface.DevUINode.fSprites
  - DevInterface.DevUINode.owner
  - DevInterface.DevUINode.parentNode
  - DevInterface.DevUINode.subNodes
  langs:
  - csharp
  - vb
  name: DevUINode
  nameWithType: DevUINode
  fullName: DevInterface.DevUINode
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DevInterface.DevUINode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class DevUINode
    content.vb: Public MustInherit Class DevUINode
  inheritance:
  - System.Object
  derivedClasses:
  - DevInterface.MapRenderDefaultMaterial
  - DevInterface.Page
  - DevInterface.PositionedDevUINode
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: DevInterface.DevUINode.owner
  commentId: F:DevInterface.DevUINode.owner
  id: owner
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: DevUINode.owner
  fullName: DevInterface.DevUINode.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DevUI owner
    return:
      type: DevInterface.DevUI
    content.vb: Public owner As DevUI
- uid: DevInterface.DevUINode.parentNode
  commentId: F:DevInterface.DevUINode.parentNode
  id: parentNode
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: parentNode
  nameWithType: DevUINode.parentNode
  fullName: DevInterface.DevUINode.parentNode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.parentNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DevUINode parentNode
    return:
      type: DevInterface.DevUINode
    content.vb: Public parentNode As DevUINode
- uid: DevInterface.DevUINode.IDstring
  commentId: F:DevInterface.DevUINode.IDstring
  id: IDstring
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: IDstring
  nameWithType: DevUINode.IDstring
  fullName: DevInterface.DevUINode.IDstring
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.IDstring</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string IDstring
    return:
      type: System.String
    content.vb: Public ReadOnly IDstring As String
- uid: DevInterface.DevUINode.subNodes
  commentId: F:DevInterface.DevUINode.subNodes
  id: subNodes
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: subNodes
  nameWithType: DevUINode.subNodes
  fullName: DevInterface.DevUINode.subNodes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.subNodes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<DevUINode> subNodes
    return:
      type: System.Collections.Generic.List{DevInterface.DevUINode}
    content.vb: Public subNodes As List(Of DevUINode)
- uid: DevInterface.DevUINode.fSprites
  commentId: F:DevInterface.DevUINode.fSprites
  id: fSprites
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: fSprites
  nameWithType: DevUINode.fSprites
  fullName: DevInterface.DevUINode.fSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.fSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<FSprite> fSprites
    return:
      type: System.Collections.Generic.List{FSprite}
    content.vb: Public fSprites As List(Of FSprite)
- uid: DevInterface.DevUINode.fLabels
  commentId: F:DevInterface.DevUINode.fLabels
  id: fLabels
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: fLabels
  nameWithType: DevUINode.fLabels
  fullName: DevInterface.DevUINode.fLabels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:DevInterface.DevUINode.fLabels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<FLabel> fLabels
    return:
      type: System.Collections.Generic.List{FLabel}
    content.vb: Public fLabels As List(Of FLabel)
- uid: DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)
  commentId: M:DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)
  id: '#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)'
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: DevUINode(DevUI, string, DevUINode)
  nameWithType: DevUINode.DevUINode(DevUI, string, DevUINode)
  fullName: DevInterface.DevUINode.DevUINode(DevInterface.DevUI, string, DevInterface.DevUINode)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>DevInterface.DevUINode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DevUINode(DevUI owner, string IDstring, DevUINode parentNode)
    parameters:
    - id: owner
      type: DevInterface.DevUI
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)</parameter>
          </include>
        </markup>
    - id: IDstring
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>IDstring</parameter>
            <parameter>M:DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)</parameter>
          </include>
        </markup>
    - id: parentNode
      type: DevInterface.DevUINode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>parentNode</parameter>
            <parameter>M:DevInterface.DevUINode.#ctor(DevInterface.DevUI,System.String,DevInterface.DevUINode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As DevUI, IDstring As String, parentNode As DevUINode)
  overload: DevInterface.DevUINode.#ctor*
  nameWithType.vb: DevUINode.New(DevUI, String, DevUINode)
  fullName.vb: DevInterface.DevUINode.New(DevInterface.DevUI, String, DevInterface.DevUINode)
  name.vb: New(DevUI, String, DevUINode)
- uid: DevInterface.DevUINode.Update
  commentId: M:DevInterface.DevUINode.Update
  id: Update
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: DevUINode.Update()
  fullName: DevInterface.DevUINode.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.DevUINode.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: DevInterface.DevUINode.Update*
- uid: DevInterface.DevUINode.ClearSprites
  commentId: M:DevInterface.DevUINode.ClearSprites
  id: ClearSprites
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: ClearSprites()
  nameWithType: DevUINode.ClearSprites()
  fullName: DevInterface.DevUINode.ClearSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.DevUINode.ClearSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ClearSprites()
    content.vb: Public Overridable Sub ClearSprites()
  overload: DevInterface.DevUINode.ClearSprites*
- uid: DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  commentId: M:DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)
  id: MoveSprite(System.Int32,UnityEngine.Vector2)
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: MoveSprite(int, Vector2)
  nameWithType: DevUINode.MoveSprite(int, Vector2)
  fullName: DevInterface.DevUINode.MoveSprite(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveSprite(int sprite, Vector2 newPos)
    parameters:
    - id: sprite
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sprite</parameter>
            <parameter>M:DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: newPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newPos</parameter>
            <parameter>M:DevInterface.DevUINode.MoveSprite(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveSprite(sprite As Integer, newPos As Vector2)
  overload: DevInterface.DevUINode.MoveSprite*
  nameWithType.vb: DevUINode.MoveSprite(Integer, Vector2)
  fullName.vb: DevInterface.DevUINode.MoveSprite(Integer, UnityEngine.Vector2)
  name.vb: MoveSprite(Integer, Vector2)
- uid: DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  commentId: M:DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)
  id: MoveLabel(System.Int32,UnityEngine.Vector2)
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: MoveLabel(int, Vector2)
  nameWithType: DevUINode.MoveLabel(int, Vector2)
  fullName: DevInterface.DevUINode.MoveLabel(int, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveLabel(int label, Vector2 newPos)
    parameters:
    - id: label
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>label</parameter>
            <parameter>M:DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: newPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newPos</parameter>
            <parameter>M:DevInterface.DevUINode.MoveLabel(System.Int32,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveLabel(label As Integer, newPos As Vector2)
  overload: DevInterface.DevUINode.MoveLabel*
  nameWithType.vb: DevUINode.MoveLabel(Integer, Vector2)
  fullName.vb: DevInterface.DevUINode.MoveLabel(Integer, UnityEngine.Vector2)
  name.vb: MoveLabel(Integer, Vector2)
- uid: DevInterface.DevUINode.Refresh
  commentId: M:DevInterface.DevUINode.Refresh
  id: Refresh
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: Refresh()
  nameWithType: DevUINode.Refresh()
  fullName: DevInterface.DevUINode.Refresh()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:DevInterface.DevUINode.Refresh</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Refresh()
    content.vb: Public Overridable Sub Refresh()
  overload: DevInterface.DevUINode.Refresh*
- uid: DevInterface.DevUINode.RoomSettings
  commentId: P:DevInterface.DevUINode.RoomSettings
  id: RoomSettings
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: RoomSettings
  nameWithType: DevUINode.RoomSettings
  fullName: DevInterface.DevUINode.RoomSettings
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DevInterface.DevUINode.RoomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings RoomSettings { get; }
    parameters: []
    return:
      type: Global.RoomSettings
    content.vb: Public ReadOnly Property RoomSettings As RoomSettings
  overload: DevInterface.DevUINode.RoomSettings*
- uid: DevInterface.DevUINode.TopNode
  commentId: P:DevInterface.DevUINode.TopNode
  id: TopNode
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: TopNode
  nameWithType: DevUINode.TopNode
  fullName: DevInterface.DevUINode.TopNode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DevInterface.DevUINode.TopNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DevUINode TopNode { get; }
    parameters: []
    return:
      type: DevInterface.DevUINode
    content.vb: Public ReadOnly Property TopNode As DevUINode
  overload: DevInterface.DevUINode.TopNode*
- uid: DevInterface.DevUINode.Page
  commentId: P:DevInterface.DevUINode.Page
  id: Page
  parent: DevInterface.DevUINode
  langs:
  - csharp
  - vb
  name: Page
  nameWithType: DevUINode.Page
  fullName: DevInterface.DevUINode.Page
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: DevInterface
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DevInterface.DevUINode.Page</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Page Page { get; }
    parameters: []
    return:
      type: DevInterface.Page
    content.vb: Public ReadOnly Property Page As Page
  overload: DevInterface.DevUINode.Page*
references:
- uid: DevInterface
  commentId: N:DevInterface
  isExternal: true
  href: DevInterface.html
  name: DevInterface
  nameWithType: DevInterface
  fullName: DevInterface
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: DevInterface.DevUI
  commentId: T:DevInterface.DevUI
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUI.html
  name: DevUI
  nameWithType: DevUI
  fullName: DevInterface.DevUI
- uid: DevInterface.DevUINode
  commentId: T:DevInterface.DevUINode
  parent: DevInterface
  isExternal: true
  href: DevInterface.DevUINode.html
  name: DevUINode
  nameWithType: DevUINode
  fullName: DevInterface.DevUINode
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{DevInterface.DevUINode}
  commentId: T:System.Collections.Generic.List{DevInterface.DevUINode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<DevUINode>
  nameWithType: List<DevUINode>
  fullName: System.Collections.Generic.List<DevInterface.DevUINode>
  nameWithType.vb: List(Of DevUINode)
  fullName.vb: System.Collections.Generic.List(Of DevInterface.DevUINode)
  name.vb: List(Of DevUINode)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: DevInterface.DevUINode
    name: DevUINode
    isExternal: true
    href: DevInterface.DevUINode.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{FSprite}
  commentId: T:System.Collections.Generic.List{FSprite}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FSprite>
  nameWithType: List<FSprite>
  fullName: System.Collections.Generic.List<FSprite>
  nameWithType.vb: List(Of FSprite)
  fullName.vb: System.Collections.Generic.List(Of FSprite)
  name.vb: List(Of FSprite)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: )
- uid: System.Collections.Generic.List{FLabel}
  commentId: T:System.Collections.Generic.List{FLabel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<FLabel>
  nameWithType: List<FLabel>
  fullName: System.Collections.Generic.List<FLabel>
  nameWithType.vb: List(Of FLabel)
  fullName.vb: System.Collections.Generic.List(Of FLabel)
  name.vb: List(Of FLabel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.FLabel
    name: FLabel
    isExternal: true
    href: FLabel.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.FLabel
    name: FLabel
    isExternal: true
    href: FLabel.html
  - name: )
- uid: DevInterface.DevUINode.#ctor*
  commentId: Overload:DevInterface.DevUINode.#ctor
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode__ctor_DevInterface_DevUI_System_String_DevInterface_DevUINode_
  name: DevUINode
  nameWithType: DevUINode.DevUINode
  fullName: DevInterface.DevUINode.DevUINode
  nameWithType.vb: DevUINode.New
  fullName.vb: DevInterface.DevUINode.New
  name.vb: New
- uid: DevInterface.DevUINode.Update*
  commentId: Overload:DevInterface.DevUINode.Update
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_Update
  name: Update
  nameWithType: DevUINode.Update
  fullName: DevInterface.DevUINode.Update
- uid: DevInterface.DevUINode.ClearSprites*
  commentId: Overload:DevInterface.DevUINode.ClearSprites
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_ClearSprites
  name: ClearSprites
  nameWithType: DevUINode.ClearSprites
  fullName: DevInterface.DevUINode.ClearSprites
- uid: DevInterface.DevUINode.MoveSprite*
  commentId: Overload:DevInterface.DevUINode.MoveSprite
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveSprite_System_Int32_UnityEngine_Vector2_
  name: MoveSprite
  nameWithType: DevUINode.MoveSprite
  fullName: DevInterface.DevUINode.MoveSprite
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: DevInterface.DevUINode.MoveLabel*
  commentId: Overload:DevInterface.DevUINode.MoveLabel
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_MoveLabel_System_Int32_UnityEngine_Vector2_
  name: MoveLabel
  nameWithType: DevUINode.MoveLabel
  fullName: DevInterface.DevUINode.MoveLabel
- uid: DevInterface.DevUINode.Refresh*
  commentId: Overload:DevInterface.DevUINode.Refresh
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_Refresh
  name: Refresh
  nameWithType: DevUINode.Refresh
  fullName: DevInterface.DevUINode.Refresh
- uid: DevInterface.DevUINode.RoomSettings*
  commentId: Overload:DevInterface.DevUINode.RoomSettings
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_RoomSettings
  name: RoomSettings
  nameWithType: DevUINode.RoomSettings
  fullName: DevInterface.DevUINode.RoomSettings
- uid: Global.RoomSettings
  commentId: T:Global.RoomSettings
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings
  nameWithType: RoomSettings
  fullName: RoomSettings
- uid: DevInterface.DevUINode.TopNode*
  commentId: Overload:DevInterface.DevUINode.TopNode
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_TopNode
  name: TopNode
  nameWithType: DevUINode.TopNode
  fullName: DevInterface.DevUINode.TopNode
- uid: DevInterface.DevUINode.Page*
  commentId: Overload:DevInterface.DevUINode.Page
  isExternal: true
  href: DevInterface.DevUINode.html#DevInterface_DevUINode_Page
  name: Page
  nameWithType: DevUINode.Page
  fullName: DevInterface.DevUINode.Page
- uid: DevInterface.Page
  commentId: T:DevInterface.Page
  parent: DevInterface
  isExternal: true
  href: DevInterface.Page.html
  name: Page
  nameWithType: Page
  fullName: DevInterface.Page
