### YamlMime:ManagedReference
items:
- uid: Global.LizardBreedParams
  commentId: T:Global.LizardBreedParams
  id: LizardBreedParams
  parent: Global
  children:
  - Global.LizardBreedParams.#ctor(CreatureTemplate.Type)
  - Global.LizardBreedParams.TerrainSpeed(AItile.Accessibility)
  - Global.LizardBreedParams.WallClimber
  - Global.LizardBreedParams.aggressionCurveExponent
  - Global.LizardBreedParams.attemptBiteRadius
  - Global.LizardBreedParams.baseSpeed
  - Global.LizardBreedParams.baseSpeedMultiplier
  - Global.LizardBreedParams.biteChance
  - Global.LizardBreedParams.biteDamage
  - Global.LizardBreedParams.biteDamageChance
  - Global.LizardBreedParams.biteDelay
  - Global.LizardBreedParams.biteDominance
  - Global.LizardBreedParams.biteHomingSpeed
  - Global.LizardBreedParams.biteInFront
  - Global.LizardBreedParams.biteRadBonus
  - Global.LizardBreedParams.bodyLengthFac
  - Global.LizardBreedParams.bodyMass
  - Global.LizardBreedParams.bodyRadFac
  - Global.LizardBreedParams.bodySizeFac
  - Global.LizardBreedParams.bodyStiffnes
  - Global.LizardBreedParams.canExitLounge
  - Global.LizardBreedParams.canExitLoungeWarmUp
  - Global.LizardBreedParams.danger
  - Global.LizardBreedParams.feetDown
  - Global.LizardBreedParams.findLoungeDirection
  - Global.LizardBreedParams.floorLeverage
  - Global.LizardBreedParams.framesBetweenLookFocusChange
  - Global.LizardBreedParams.getFreeBiteChance
  - Global.LizardBreedParams.headGraphics
  - Global.LizardBreedParams.headShieldAngle
  - Global.LizardBreedParams.headSize
  - Global.LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos
  - Global.LizardBreedParams.jawOpenAngle
  - Global.LizardBreedParams.jawOpenLowerJawFac
  - Global.LizardBreedParams.jawOpenMoveJawsApart
  - Global.LizardBreedParams.legPairDisplacement
  - Global.LizardBreedParams.liftFeet
  - Global.LizardBreedParams.limbGripDelay
  - Global.LizardBreedParams.limbQuickness
  - Global.LizardBreedParams.limbSize
  - Global.LizardBreedParams.limbSpeed
  - Global.LizardBreedParams.limbThickness
  - Global.LizardBreedParams.loungeDelay
  - Global.LizardBreedParams.loungeDistance
  - Global.LizardBreedParams.loungeJumpyness
  - Global.LizardBreedParams.loungeMaximumFrames
  - Global.LizardBreedParams.loungePropulsionFrames
  - Global.LizardBreedParams.loungeSpeed
  - Global.LizardBreedParams.loungeTendensy
  - Global.LizardBreedParams.maxMusclePower
  - Global.LizardBreedParams.neckStiffness
  - Global.LizardBreedParams.noGripSpeed
  - Global.LizardBreedParams.perfectVisionAngle
  - Global.LizardBreedParams.periferalVisionAngle
  - Global.LizardBreedParams.postLoungeStun
  - Global.LizardBreedParams.preLoungeCrouch
  - Global.LizardBreedParams.preLoungeCrouchMovement
  - Global.LizardBreedParams.pullDownFac
  - Global.LizardBreedParams.regainFootingCounter
  - Global.LizardBreedParams.riskOfDoubleLoungeDelay
  - Global.LizardBreedParams.shakePrey
  - Global.LizardBreedParams.smoothenLegMovement
  - Global.LizardBreedParams.standardColor
  - Global.LizardBreedParams.stepLength
  - Global.LizardBreedParams.stunToughness
  - Global.LizardBreedParams.swimSpeed
  - Global.LizardBreedParams.tailColorationExponent
  - Global.LizardBreedParams.tailColorationStart
  - Global.LizardBreedParams.tailLengthFactor
  - Global.LizardBreedParams.tailSegments
  - Global.LizardBreedParams.tailStiffness
  - Global.LizardBreedParams.tailStiffnessDecline
  - Global.LizardBreedParams.tamingDifficulty
  - Global.LizardBreedParams.template
  - Global.LizardBreedParams.terrainSpeeds
  - Global.LizardBreedParams.tongue
  - Global.LizardBreedParams.tongueAttackRange
  - Global.LizardBreedParams.tongueChance
  - Global.LizardBreedParams.tongueSegments
  - Global.LizardBreedParams.tongueWarmUp
  - Global.LizardBreedParams.toughness
  - Global.LizardBreedParams.walkBob
  - Global.LizardBreedParams.wiggleDelay
  - Global.LizardBreedParams.wiggleSpeed
  langs:
  - csharp
  - vb
  name: LizardBreedParams
  nameWithType: LizardBreedParams
  fullName: LizardBreedParams
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LizardBreedParams</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class LizardBreedParams : BreedParameters'
    content.vb: Public Class LizardBreedParams Inherits BreedParameters
  inheritance:
  - System.Object
  - Global.BreedParameters
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LizardBreedParams.template
  commentId: F:Global.LizardBreedParams.template
  id: template
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: template
  nameWithType: LizardBreedParams.template
  fullName: LizardBreedParams.template
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.template</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Type template
    return:
      type: Global.CreatureTemplate.Type
    content.vb: Public template As CreatureTemplate.Type
- uid: Global.LizardBreedParams.toughness
  commentId: F:Global.LizardBreedParams.toughness
  id: toughness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: toughness
  nameWithType: LizardBreedParams.toughness
  fullName: LizardBreedParams.toughness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.toughness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float toughness
    return:
      type: System.Single
    content.vb: Public toughness As Single
- uid: Global.LizardBreedParams.stunToughness
  commentId: F:Global.LizardBreedParams.stunToughness
  id: stunToughness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: stunToughness
  nameWithType: LizardBreedParams.stunToughness
  fullName: LizardBreedParams.stunToughness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.stunToughness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stunToughness
    return:
      type: System.Single
    content.vb: Public stunToughness As Single
- uid: Global.LizardBreedParams.biteDamage
  commentId: F:Global.LizardBreedParams.biteDamage
  id: biteDamage
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteDamage
  nameWithType: LizardBreedParams.biteDamage
  fullName: LizardBreedParams.biteDamage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteDamage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteDamage
    return:
      type: System.Single
    content.vb: Public biteDamage As Single
- uid: Global.LizardBreedParams.biteDamageChance
  commentId: F:Global.LizardBreedParams.biteDamageChance
  id: biteDamageChance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteDamageChance
  nameWithType: LizardBreedParams.biteDamageChance
  fullName: LizardBreedParams.biteDamageChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteDamageChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteDamageChance
    return:
      type: System.Single
    content.vb: Public biteDamageChance As Single
- uid: Global.LizardBreedParams.aggressionCurveExponent
  commentId: F:Global.LizardBreedParams.aggressionCurveExponent
  id: aggressionCurveExponent
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: aggressionCurveExponent
  nameWithType: LizardBreedParams.aggressionCurveExponent
  fullName: LizardBreedParams.aggressionCurveExponent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.aggressionCurveExponent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float aggressionCurveExponent
    return:
      type: System.Single
    content.vb: Public aggressionCurveExponent As Single
- uid: Global.LizardBreedParams.danger
  commentId: F:Global.LizardBreedParams.danger
  id: danger
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: danger
  nameWithType: LizardBreedParams.danger
  fullName: LizardBreedParams.danger
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.danger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float danger
    return:
      type: System.Single
    content.vb: Public danger As Single
- uid: Global.LizardBreedParams.biteDelay
  commentId: F:Global.LizardBreedParams.biteDelay
  id: biteDelay
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteDelay
  nameWithType: LizardBreedParams.biteDelay
  fullName: LizardBreedParams.biteDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int biteDelay
    return:
      type: System.Int32
    content.vb: Public biteDelay As Integer
- uid: Global.LizardBreedParams.baseSpeed
  commentId: F:Global.LizardBreedParams.baseSpeed
  id: baseSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: baseSpeed
  nameWithType: LizardBreedParams.baseSpeed
  fullName: LizardBreedParams.baseSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.baseSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float baseSpeed
    return:
      type: System.Single
    content.vb: Public baseSpeed As Single
- uid: Global.LizardBreedParams.biteInFront
  commentId: F:Global.LizardBreedParams.biteInFront
  id: biteInFront
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteInFront
  nameWithType: LizardBreedParams.biteInFront
  fullName: LizardBreedParams.biteInFront
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteInFront</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteInFront
    return:
      type: System.Single
    content.vb: Public biteInFront As Single
- uid: Global.LizardBreedParams.biteRadBonus
  commentId: F:Global.LizardBreedParams.biteRadBonus
  id: biteRadBonus
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteRadBonus
  nameWithType: LizardBreedParams.biteRadBonus
  fullName: LizardBreedParams.biteRadBonus
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteRadBonus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteRadBonus
    return:
      type: System.Single
    content.vb: Public biteRadBonus As Single
- uid: Global.LizardBreedParams.biteHomingSpeed
  commentId: F:Global.LizardBreedParams.biteHomingSpeed
  id: biteHomingSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteHomingSpeed
  nameWithType: LizardBreedParams.biteHomingSpeed
  fullName: LizardBreedParams.biteHomingSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteHomingSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteHomingSpeed
    return:
      type: System.Single
    content.vb: Public biteHomingSpeed As Single
- uid: Global.LizardBreedParams.biteChance
  commentId: F:Global.LizardBreedParams.biteChance
  id: biteChance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteChance
  nameWithType: LizardBreedParams.biteChance
  fullName: LizardBreedParams.biteChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteChance
    return:
      type: System.Single
    content.vb: Public biteChance As Single
- uid: Global.LizardBreedParams.attemptBiteRadius
  commentId: F:Global.LizardBreedParams.attemptBiteRadius
  id: attemptBiteRadius
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: attemptBiteRadius
  nameWithType: LizardBreedParams.attemptBiteRadius
  fullName: LizardBreedParams.attemptBiteRadius
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.attemptBiteRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float attemptBiteRadius
    return:
      type: System.Single
    content.vb: Public attemptBiteRadius As Single
- uid: Global.LizardBreedParams.getFreeBiteChance
  commentId: F:Global.LizardBreedParams.getFreeBiteChance
  id: getFreeBiteChance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: getFreeBiteChance
  nameWithType: LizardBreedParams.getFreeBiteChance
  fullName: LizardBreedParams.getFreeBiteChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.getFreeBiteChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float getFreeBiteChance
    return:
      type: System.Single
    content.vb: Public getFreeBiteChance As Single
- uid: Global.LizardBreedParams.baseSpeedMultiplier
  commentId: F:Global.LizardBreedParams.baseSpeedMultiplier
  id: baseSpeedMultiplier
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: baseSpeedMultiplier
  nameWithType: LizardBreedParams.baseSpeedMultiplier
  fullName: LizardBreedParams.baseSpeedMultiplier
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.baseSpeedMultiplier</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardBreedParams.SpeedMultiplier baseSpeedMultiplier
    return:
      type: Global.LizardBreedParams.SpeedMultiplier
    content.vb: Public baseSpeedMultiplier As LizardBreedParams.SpeedMultiplier
- uid: Global.LizardBreedParams.standardColor
  commentId: F:Global.LizardBreedParams.standardColor
  id: standardColor
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: standardColor
  nameWithType: LizardBreedParams.standardColor
  fullName: LizardBreedParams.standardColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.standardColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color standardColor
    return:
      type: UnityEngine.Color
    content.vb: Public standardColor As Color
- uid: Global.LizardBreedParams.regainFootingCounter
  commentId: F:Global.LizardBreedParams.regainFootingCounter
  id: regainFootingCounter
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: regainFootingCounter
  nameWithType: LizardBreedParams.regainFootingCounter
  fullName: LizardBreedParams.regainFootingCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.regainFootingCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int regainFootingCounter
    return:
      type: System.Int32
    content.vb: Public regainFootingCounter As Integer
- uid: Global.LizardBreedParams.bodyMass
  commentId: F:Global.LizardBreedParams.bodyMass
  id: bodyMass
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: bodyMass
  nameWithType: LizardBreedParams.bodyMass
  fullName: LizardBreedParams.bodyMass
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.bodyMass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyMass
    return:
      type: System.Single
    content.vb: Public bodyMass As Single
- uid: Global.LizardBreedParams.bodySizeFac
  commentId: F:Global.LizardBreedParams.bodySizeFac
  id: bodySizeFac
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: bodySizeFac
  nameWithType: LizardBreedParams.bodySizeFac
  fullName: LizardBreedParams.bodySizeFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.bodySizeFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodySizeFac
    return:
      type: System.Single
    content.vb: Public bodySizeFac As Single
- uid: Global.LizardBreedParams.bodyLengthFac
  commentId: F:Global.LizardBreedParams.bodyLengthFac
  id: bodyLengthFac
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: bodyLengthFac
  nameWithType: LizardBreedParams.bodyLengthFac
  fullName: LizardBreedParams.bodyLengthFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.bodyLengthFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyLengthFac
    return:
      type: System.Single
    content.vb: Public bodyLengthFac As Single
- uid: Global.LizardBreedParams.bodyRadFac
  commentId: F:Global.LizardBreedParams.bodyRadFac
  id: bodyRadFac
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: bodyRadFac
  nameWithType: LizardBreedParams.bodyRadFac
  fullName: LizardBreedParams.bodyRadFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.bodyRadFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyRadFac
    return:
      type: System.Single
    content.vb: Public bodyRadFac As Single
- uid: Global.LizardBreedParams.pullDownFac
  commentId: F:Global.LizardBreedParams.pullDownFac
  id: pullDownFac
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: pullDownFac
  nameWithType: LizardBreedParams.pullDownFac
  fullName: LizardBreedParams.pullDownFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.pullDownFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pullDownFac
    return:
      type: System.Single
    content.vb: Public pullDownFac As Single
- uid: Global.LizardBreedParams.floorLeverage
  commentId: F:Global.LizardBreedParams.floorLeverage
  id: floorLeverage
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: floorLeverage
  nameWithType: LizardBreedParams.floorLeverage
  fullName: LizardBreedParams.floorLeverage
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.floorLeverage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float floorLeverage
    return:
      type: System.Single
    content.vb: Public floorLeverage As Single
- uid: Global.LizardBreedParams.maxMusclePower
  commentId: F:Global.LizardBreedParams.maxMusclePower
  id: maxMusclePower
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: maxMusclePower
  nameWithType: LizardBreedParams.maxMusclePower
  fullName: LizardBreedParams.maxMusclePower
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.maxMusclePower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxMusclePower
    return:
      type: System.Single
    content.vb: Public maxMusclePower As Single
- uid: Global.LizardBreedParams.terrainSpeeds
  commentId: F:Global.LizardBreedParams.terrainSpeeds
  id: terrainSpeeds
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: terrainSpeeds
  nameWithType: LizardBreedParams.terrainSpeeds
  fullName: LizardBreedParams.terrainSpeeds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.terrainSpeeds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardBreedParams.SpeedMultiplier[] terrainSpeeds
    return:
      type: Global.LizardBreedParams.SpeedMultiplier[]
    content.vb: Public terrainSpeeds As LizardBreedParams.SpeedMultiplier()
- uid: Global.LizardBreedParams.wiggleSpeed
  commentId: F:Global.LizardBreedParams.wiggleSpeed
  id: wiggleSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: wiggleSpeed
  nameWithType: LizardBreedParams.wiggleSpeed
  fullName: LizardBreedParams.wiggleSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.wiggleSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wiggleSpeed
    return:
      type: System.Single
    content.vb: Public wiggleSpeed As Single
- uid: Global.LizardBreedParams.wiggleDelay
  commentId: F:Global.LizardBreedParams.wiggleDelay
  id: wiggleDelay
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: wiggleDelay
  nameWithType: LizardBreedParams.wiggleDelay
  fullName: LizardBreedParams.wiggleDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.wiggleDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wiggleDelay
    return:
      type: System.Int32
    content.vb: Public wiggleDelay As Integer
- uid: Global.LizardBreedParams.bodyStiffnes
  commentId: F:Global.LizardBreedParams.bodyStiffnes
  id: bodyStiffnes
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: bodyStiffnes
  nameWithType: LizardBreedParams.bodyStiffnes
  fullName: LizardBreedParams.bodyStiffnes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.bodyStiffnes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bodyStiffnes
    return:
      type: System.Single
    content.vb: Public bodyStiffnes As Single
- uid: Global.LizardBreedParams.swimSpeed
  commentId: F:Global.LizardBreedParams.swimSpeed
  id: swimSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: swimSpeed
  nameWithType: LizardBreedParams.swimSpeed
  fullName: LizardBreedParams.swimSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.swimSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimSpeed
    return:
      type: System.Single
    content.vb: Public swimSpeed As Single
- uid: Global.LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos
  commentId: F:Global.LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos
  id: idleCounterSubtractWhenCloseToIdlePos
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: idleCounterSubtractWhenCloseToIdlePos
  nameWithType: LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos
  fullName: LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.idleCounterSubtractWhenCloseToIdlePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int idleCounterSubtractWhenCloseToIdlePos
    return:
      type: System.Int32
    content.vb: Public idleCounterSubtractWhenCloseToIdlePos As Integer
- uid: Global.LizardBreedParams.headShieldAngle
  commentId: F:Global.LizardBreedParams.headShieldAngle
  id: headShieldAngle
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: headShieldAngle
  nameWithType: LizardBreedParams.headShieldAngle
  fullName: LizardBreedParams.headShieldAngle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.headShieldAngle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float headShieldAngle
    return:
      type: System.Single
    content.vb: Public headShieldAngle As Single
- uid: Global.LizardBreedParams.canExitLounge
  commentId: F:Global.LizardBreedParams.canExitLounge
  id: canExitLounge
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: canExitLounge
  nameWithType: LizardBreedParams.canExitLounge
  fullName: LizardBreedParams.canExitLounge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.canExitLounge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool canExitLounge
    return:
      type: System.Boolean
    content.vb: Public canExitLounge As Boolean
- uid: Global.LizardBreedParams.canExitLoungeWarmUp
  commentId: F:Global.LizardBreedParams.canExitLoungeWarmUp
  id: canExitLoungeWarmUp
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: canExitLoungeWarmUp
  nameWithType: LizardBreedParams.canExitLoungeWarmUp
  fullName: LizardBreedParams.canExitLoungeWarmUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.canExitLoungeWarmUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool canExitLoungeWarmUp
    return:
      type: System.Boolean
    content.vb: Public canExitLoungeWarmUp As Boolean
- uid: Global.LizardBreedParams.findLoungeDirection
  commentId: F:Global.LizardBreedParams.findLoungeDirection
  id: findLoungeDirection
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: findLoungeDirection
  nameWithType: LizardBreedParams.findLoungeDirection
  fullName: LizardBreedParams.findLoungeDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.findLoungeDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float findLoungeDirection
    return:
      type: System.Single
    content.vb: Public findLoungeDirection As Single
- uid: Global.LizardBreedParams.loungeDistance
  commentId: F:Global.LizardBreedParams.loungeDistance
  id: loungeDistance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeDistance
  nameWithType: LizardBreedParams.loungeDistance
  fullName: LizardBreedParams.loungeDistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeDistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loungeDistance
    return:
      type: System.Single
    content.vb: Public loungeDistance As Single
- uid: Global.LizardBreedParams.preLoungeCrouch
  commentId: F:Global.LizardBreedParams.preLoungeCrouch
  id: preLoungeCrouch
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: preLoungeCrouch
  nameWithType: LizardBreedParams.preLoungeCrouch
  fullName: LizardBreedParams.preLoungeCrouch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.preLoungeCrouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int preLoungeCrouch
    return:
      type: System.Int32
    content.vb: Public preLoungeCrouch As Integer
- uid: Global.LizardBreedParams.preLoungeCrouchMovement
  commentId: F:Global.LizardBreedParams.preLoungeCrouchMovement
  id: preLoungeCrouchMovement
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: preLoungeCrouchMovement
  nameWithType: LizardBreedParams.preLoungeCrouchMovement
  fullName: LizardBreedParams.preLoungeCrouchMovement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.preLoungeCrouchMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float preLoungeCrouchMovement
    return:
      type: System.Single
    content.vb: Public preLoungeCrouchMovement As Single
- uid: Global.LizardBreedParams.loungeSpeed
  commentId: F:Global.LizardBreedParams.loungeSpeed
  id: loungeSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeSpeed
  nameWithType: LizardBreedParams.loungeSpeed
  fullName: LizardBreedParams.loungeSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loungeSpeed
    return:
      type: System.Single
    content.vb: Public loungeSpeed As Single
- uid: Global.LizardBreedParams.loungePropulsionFrames
  commentId: F:Global.LizardBreedParams.loungePropulsionFrames
  id: loungePropulsionFrames
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungePropulsionFrames
  nameWithType: LizardBreedParams.loungePropulsionFrames
  fullName: LizardBreedParams.loungePropulsionFrames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungePropulsionFrames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int loungePropulsionFrames
    return:
      type: System.Int32
    content.vb: Public loungePropulsionFrames As Integer
- uid: Global.LizardBreedParams.loungeMaximumFrames
  commentId: F:Global.LizardBreedParams.loungeMaximumFrames
  id: loungeMaximumFrames
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeMaximumFrames
  nameWithType: LizardBreedParams.loungeMaximumFrames
  fullName: LizardBreedParams.loungeMaximumFrames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeMaximumFrames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int loungeMaximumFrames
    return:
      type: System.Int32
    content.vb: Public loungeMaximumFrames As Integer
- uid: Global.LizardBreedParams.loungeJumpyness
  commentId: F:Global.LizardBreedParams.loungeJumpyness
  id: loungeJumpyness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeJumpyness
  nameWithType: LizardBreedParams.loungeJumpyness
  fullName: LizardBreedParams.loungeJumpyness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeJumpyness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loungeJumpyness
    return:
      type: System.Single
    content.vb: Public loungeJumpyness As Single
- uid: Global.LizardBreedParams.loungeDelay
  commentId: F:Global.LizardBreedParams.loungeDelay
  id: loungeDelay
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeDelay
  nameWithType: LizardBreedParams.loungeDelay
  fullName: LizardBreedParams.loungeDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int loungeDelay
    return:
      type: System.Int32
    content.vb: Public loungeDelay As Integer
- uid: Global.LizardBreedParams.riskOfDoubleLoungeDelay
  commentId: F:Global.LizardBreedParams.riskOfDoubleLoungeDelay
  id: riskOfDoubleLoungeDelay
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: riskOfDoubleLoungeDelay
  nameWithType: LizardBreedParams.riskOfDoubleLoungeDelay
  fullName: LizardBreedParams.riskOfDoubleLoungeDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.riskOfDoubleLoungeDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float riskOfDoubleLoungeDelay
    return:
      type: System.Single
    content.vb: Public riskOfDoubleLoungeDelay As Single
- uid: Global.LizardBreedParams.postLoungeStun
  commentId: F:Global.LizardBreedParams.postLoungeStun
  id: postLoungeStun
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: postLoungeStun
  nameWithType: LizardBreedParams.postLoungeStun
  fullName: LizardBreedParams.postLoungeStun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.postLoungeStun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int postLoungeStun
    return:
      type: System.Int32
    content.vb: Public postLoungeStun As Integer
- uid: Global.LizardBreedParams.loungeTendensy
  commentId: F:Global.LizardBreedParams.loungeTendensy
  id: loungeTendensy
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: loungeTendensy
  nameWithType: LizardBreedParams.loungeTendensy
  fullName: LizardBreedParams.loungeTendensy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.loungeTendensy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float loungeTendensy
    return:
      type: System.Single
    content.vb: Public loungeTendensy As Single
- uid: Global.LizardBreedParams.perfectVisionAngle
  commentId: F:Global.LizardBreedParams.perfectVisionAngle
  id: perfectVisionAngle
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: perfectVisionAngle
  nameWithType: LizardBreedParams.perfectVisionAngle
  fullName: LizardBreedParams.perfectVisionAngle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.perfectVisionAngle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float perfectVisionAngle
    return:
      type: System.Single
    content.vb: Public perfectVisionAngle As Single
- uid: Global.LizardBreedParams.periferalVisionAngle
  commentId: F:Global.LizardBreedParams.periferalVisionAngle
  id: periferalVisionAngle
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: periferalVisionAngle
  nameWithType: LizardBreedParams.periferalVisionAngle
  fullName: LizardBreedParams.periferalVisionAngle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.periferalVisionAngle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float periferalVisionAngle
    return:
      type: System.Single
    content.vb: Public periferalVisionAngle As Single
- uid: Global.LizardBreedParams.shakePrey
  commentId: F:Global.LizardBreedParams.shakePrey
  id: shakePrey
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: shakePrey
  nameWithType: LizardBreedParams.shakePrey
  fullName: LizardBreedParams.shakePrey
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.shakePrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int shakePrey
    return:
      type: System.Int32
    content.vb: Public shakePrey As Integer
- uid: Global.LizardBreedParams.biteDominance
  commentId: F:Global.LizardBreedParams.biteDominance
  id: biteDominance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: biteDominance
  nameWithType: LizardBreedParams.biteDominance
  fullName: LizardBreedParams.biteDominance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.biteDominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float biteDominance
    return:
      type: System.Single
    content.vb: Public biteDominance As Single
- uid: Global.LizardBreedParams.limbSize
  commentId: F:Global.LizardBreedParams.limbSize
  id: limbSize
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: limbSize
  nameWithType: LizardBreedParams.limbSize
  fullName: LizardBreedParams.limbSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.limbSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float limbSize
    return:
      type: System.Single
    content.vb: Public limbSize As Single
- uid: Global.LizardBreedParams.limbThickness
  commentId: F:Global.LizardBreedParams.limbThickness
  id: limbThickness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: limbThickness
  nameWithType: LizardBreedParams.limbThickness
  fullName: LizardBreedParams.limbThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.limbThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float limbThickness
    return:
      type: System.Single
    content.vb: Public limbThickness As Single
- uid: Global.LizardBreedParams.stepLength
  commentId: F:Global.LizardBreedParams.stepLength
  id: stepLength
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: stepLength
  nameWithType: LizardBreedParams.stepLength
  fullName: LizardBreedParams.stepLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.stepLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float stepLength
    return:
      type: System.Single
    content.vb: Public stepLength As Single
- uid: Global.LizardBreedParams.liftFeet
  commentId: F:Global.LizardBreedParams.liftFeet
  id: liftFeet
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: liftFeet
  nameWithType: LizardBreedParams.liftFeet
  fullName: LizardBreedParams.liftFeet
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.liftFeet</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float liftFeet
    return:
      type: System.Single
    content.vb: Public liftFeet As Single
- uid: Global.LizardBreedParams.feetDown
  commentId: F:Global.LizardBreedParams.feetDown
  id: feetDown
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: feetDown
  nameWithType: LizardBreedParams.feetDown
  fullName: LizardBreedParams.feetDown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.feetDown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float feetDown
    return:
      type: System.Single
    content.vb: Public feetDown As Single
- uid: Global.LizardBreedParams.noGripSpeed
  commentId: F:Global.LizardBreedParams.noGripSpeed
  id: noGripSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: noGripSpeed
  nameWithType: LizardBreedParams.noGripSpeed
  fullName: LizardBreedParams.noGripSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.noGripSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float noGripSpeed
    return:
      type: System.Single
    content.vb: Public noGripSpeed As Single
- uid: Global.LizardBreedParams.limbSpeed
  commentId: F:Global.LizardBreedParams.limbSpeed
  id: limbSpeed
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: limbSpeed
  nameWithType: LizardBreedParams.limbSpeed
  fullName: LizardBreedParams.limbSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.limbSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float limbSpeed
    return:
      type: System.Single
    content.vb: Public limbSpeed As Single
- uid: Global.LizardBreedParams.limbQuickness
  commentId: F:Global.LizardBreedParams.limbQuickness
  id: limbQuickness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: limbQuickness
  nameWithType: LizardBreedParams.limbQuickness
  fullName: LizardBreedParams.limbQuickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.limbQuickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float limbQuickness
    return:
      type: System.Single
    content.vb: Public limbQuickness As Single
- uid: Global.LizardBreedParams.limbGripDelay
  commentId: F:Global.LizardBreedParams.limbGripDelay
  id: limbGripDelay
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: limbGripDelay
  nameWithType: LizardBreedParams.limbGripDelay
  fullName: LizardBreedParams.limbGripDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.limbGripDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int limbGripDelay
    return:
      type: System.Int32
    content.vb: Public limbGripDelay As Integer
- uid: Global.LizardBreedParams.smoothenLegMovement
  commentId: F:Global.LizardBreedParams.smoothenLegMovement
  id: smoothenLegMovement
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: smoothenLegMovement
  nameWithType: LizardBreedParams.smoothenLegMovement
  fullName: LizardBreedParams.smoothenLegMovement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.smoothenLegMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool smoothenLegMovement
    return:
      type: System.Boolean
    content.vb: Public smoothenLegMovement As Boolean
- uid: Global.LizardBreedParams.legPairDisplacement
  commentId: F:Global.LizardBreedParams.legPairDisplacement
  id: legPairDisplacement
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: legPairDisplacement
  nameWithType: LizardBreedParams.legPairDisplacement
  fullName: LizardBreedParams.legPairDisplacement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.legPairDisplacement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float legPairDisplacement
    return:
      type: System.Single
    content.vb: Public legPairDisplacement As Single
- uid: Global.LizardBreedParams.walkBob
  commentId: F:Global.LizardBreedParams.walkBob
  id: walkBob
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: walkBob
  nameWithType: LizardBreedParams.walkBob
  fullName: LizardBreedParams.walkBob
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.walkBob</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float walkBob
    return:
      type: System.Single
    content.vb: Public walkBob As Single
- uid: Global.LizardBreedParams.tailSegments
  commentId: F:Global.LizardBreedParams.tailSegments
  id: tailSegments
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailSegments
  nameWithType: LizardBreedParams.tailSegments
  fullName: LizardBreedParams.tailSegments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailSegments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tailSegments
    return:
      type: System.Int32
    content.vb: Public tailSegments As Integer
- uid: Global.LizardBreedParams.tailStiffness
  commentId: F:Global.LizardBreedParams.tailStiffness
  id: tailStiffness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailStiffness
  nameWithType: LizardBreedParams.tailStiffness
  fullName: LizardBreedParams.tailStiffness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailStiffness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailStiffness
    return:
      type: System.Single
    content.vb: Public tailStiffness As Single
- uid: Global.LizardBreedParams.tailStiffnessDecline
  commentId: F:Global.LizardBreedParams.tailStiffnessDecline
  id: tailStiffnessDecline
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailStiffnessDecline
  nameWithType: LizardBreedParams.tailStiffnessDecline
  fullName: LizardBreedParams.tailStiffnessDecline
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailStiffnessDecline</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailStiffnessDecline
    return:
      type: System.Single
    content.vb: Public tailStiffnessDecline As Single
- uid: Global.LizardBreedParams.tailLengthFactor
  commentId: F:Global.LizardBreedParams.tailLengthFactor
  id: tailLengthFactor
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailLengthFactor
  nameWithType: LizardBreedParams.tailLengthFactor
  fullName: LizardBreedParams.tailLengthFactor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailLengthFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailLengthFactor
    return:
      type: System.Single
    content.vb: Public tailLengthFactor As Single
- uid: Global.LizardBreedParams.tailColorationStart
  commentId: F:Global.LizardBreedParams.tailColorationStart
  id: tailColorationStart
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailColorationStart
  nameWithType: LizardBreedParams.tailColorationStart
  fullName: LizardBreedParams.tailColorationStart
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailColorationStart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailColorationStart
    return:
      type: System.Single
    content.vb: Public tailColorationStart As Single
- uid: Global.LizardBreedParams.tailColorationExponent
  commentId: F:Global.LizardBreedParams.tailColorationExponent
  id: tailColorationExponent
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tailColorationExponent
  nameWithType: LizardBreedParams.tailColorationExponent
  fullName: LizardBreedParams.tailColorationExponent
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tailColorationExponent</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tailColorationExponent
    return:
      type: System.Single
    content.vb: Public tailColorationExponent As Single
- uid: Global.LizardBreedParams.headSize
  commentId: F:Global.LizardBreedParams.headSize
  id: headSize
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: headSize
  nameWithType: LizardBreedParams.headSize
  fullName: LizardBreedParams.headSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.headSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float headSize
    return:
      type: System.Single
    content.vb: Public headSize As Single
- uid: Global.LizardBreedParams.neckStiffness
  commentId: F:Global.LizardBreedParams.neckStiffness
  id: neckStiffness
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: neckStiffness
  nameWithType: LizardBreedParams.neckStiffness
  fullName: LizardBreedParams.neckStiffness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.neckStiffness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float neckStiffness
    return:
      type: System.Single
    content.vb: Public neckStiffness As Single
- uid: Global.LizardBreedParams.jawOpenAngle
  commentId: F:Global.LizardBreedParams.jawOpenAngle
  id: jawOpenAngle
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: jawOpenAngle
  nameWithType: LizardBreedParams.jawOpenAngle
  fullName: LizardBreedParams.jawOpenAngle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.jawOpenAngle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float jawOpenAngle
    return:
      type: System.Single
    content.vb: Public jawOpenAngle As Single
- uid: Global.LizardBreedParams.jawOpenLowerJawFac
  commentId: F:Global.LizardBreedParams.jawOpenLowerJawFac
  id: jawOpenLowerJawFac
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: jawOpenLowerJawFac
  nameWithType: LizardBreedParams.jawOpenLowerJawFac
  fullName: LizardBreedParams.jawOpenLowerJawFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.jawOpenLowerJawFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float jawOpenLowerJawFac
    return:
      type: System.Single
    content.vb: Public jawOpenLowerJawFac As Single
- uid: Global.LizardBreedParams.jawOpenMoveJawsApart
  commentId: F:Global.LizardBreedParams.jawOpenMoveJawsApart
  id: jawOpenMoveJawsApart
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: jawOpenMoveJawsApart
  nameWithType: LizardBreedParams.jawOpenMoveJawsApart
  fullName: LizardBreedParams.jawOpenMoveJawsApart
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.jawOpenMoveJawsApart</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float jawOpenMoveJawsApart
    return:
      type: System.Single
    content.vb: Public jawOpenMoveJawsApart As Single
- uid: Global.LizardBreedParams.headGraphics
  commentId: F:Global.LizardBreedParams.headGraphics
  id: headGraphics
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: headGraphics
  nameWithType: LizardBreedParams.headGraphics
  fullName: LizardBreedParams.headGraphics
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.headGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int[] headGraphics
    return:
      type: System.Int32[]
    content.vb: Public headGraphics As Integer()
- uid: Global.LizardBreedParams.framesBetweenLookFocusChange
  commentId: F:Global.LizardBreedParams.framesBetweenLookFocusChange
  id: framesBetweenLookFocusChange
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: framesBetweenLookFocusChange
  nameWithType: LizardBreedParams.framesBetweenLookFocusChange
  fullName: LizardBreedParams.framesBetweenLookFocusChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.framesBetweenLookFocusChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int framesBetweenLookFocusChange
    return:
      type: System.Int32
    content.vb: Public framesBetweenLookFocusChange As Integer
- uid: Global.LizardBreedParams.tongue
  commentId: F:Global.LizardBreedParams.tongue
  id: tongue
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tongue
  nameWithType: LizardBreedParams.tongue
  fullName: LizardBreedParams.tongue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tongue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool tongue
    return:
      type: System.Boolean
    content.vb: Public tongue As Boolean
- uid: Global.LizardBreedParams.tongueAttackRange
  commentId: F:Global.LizardBreedParams.tongueAttackRange
  id: tongueAttackRange
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tongueAttackRange
  nameWithType: LizardBreedParams.tongueAttackRange
  fullName: LizardBreedParams.tongueAttackRange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tongueAttackRange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tongueAttackRange
    return:
      type: System.Single
    content.vb: Public tongueAttackRange As Single
- uid: Global.LizardBreedParams.tongueWarmUp
  commentId: F:Global.LizardBreedParams.tongueWarmUp
  id: tongueWarmUp
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tongueWarmUp
  nameWithType: LizardBreedParams.tongueWarmUp
  fullName: LizardBreedParams.tongueWarmUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tongueWarmUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tongueWarmUp
    return:
      type: System.Int32
    content.vb: Public tongueWarmUp As Integer
- uid: Global.LizardBreedParams.tongueSegments
  commentId: F:Global.LizardBreedParams.tongueSegments
  id: tongueSegments
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tongueSegments
  nameWithType: LizardBreedParams.tongueSegments
  fullName: LizardBreedParams.tongueSegments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tongueSegments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tongueSegments
    return:
      type: System.Int32
    content.vb: Public tongueSegments As Integer
- uid: Global.LizardBreedParams.tongueChance
  commentId: F:Global.LizardBreedParams.tongueChance
  id: tongueChance
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tongueChance
  nameWithType: LizardBreedParams.tongueChance
  fullName: LizardBreedParams.tongueChance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tongueChance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tongueChance
    return:
      type: System.Single
    content.vb: Public tongueChance As Single
- uid: Global.LizardBreedParams.tamingDifficulty
  commentId: F:Global.LizardBreedParams.tamingDifficulty
  id: tamingDifficulty
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: tamingDifficulty
  nameWithType: LizardBreedParams.tamingDifficulty
  fullName: LizardBreedParams.tamingDifficulty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LizardBreedParams.tamingDifficulty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tamingDifficulty
    return:
      type: System.Single
    content.vb: Public tamingDifficulty As Single
- uid: Global.LizardBreedParams.#ctor(CreatureTemplate.Type)
  commentId: M:Global.LizardBreedParams.#ctor(CreatureTemplate.Type)
  id: '#ctor(CreatureTemplate.Type)'
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: LizardBreedParams(Type)
  nameWithType: LizardBreedParams.LizardBreedParams(CreatureTemplate.Type)
  fullName: LizardBreedParams.LizardBreedParams(CreatureTemplate.Type)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LizardBreedParams</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardBreedParams(CreatureTemplate.Type template)
    parameters:
    - id: template
      type: Global.CreatureTemplate.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>template</parameter>
            <parameter>M:LizardBreedParams.#ctor(CreatureTemplate.Type)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(template As CreatureTemplate.Type)
  overload: Global.LizardBreedParams.#ctor*
  nameWithType.vb: LizardBreedParams.New(CreatureTemplate.Type)
  fullName.vb: LizardBreedParams.New(CreatureTemplate.Type)
  name.vb: New(Type)
- uid: Global.LizardBreedParams.TerrainSpeed(AItile.Accessibility)
  commentId: M:Global.LizardBreedParams.TerrainSpeed(AItile.Accessibility)
  id: TerrainSpeed(AItile.Accessibility)
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: TerrainSpeed(Accessibility)
  nameWithType: LizardBreedParams.TerrainSpeed(AItile.Accessibility)
  fullName: LizardBreedParams.TerrainSpeed(AItile.Accessibility)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LizardBreedParams.TerrainSpeed(AItile.Accessibility)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LizardBreedParams.SpeedMultiplier TerrainSpeed(AItile.Accessibility acc)
    parameters:
    - id: acc
      type: Global.AItile.Accessibility
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>acc</parameter>
            <parameter>M:LizardBreedParams.TerrainSpeed(AItile.Accessibility)</parameter>
          </include>
        </markup>
    return:
      type: Global.LizardBreedParams.SpeedMultiplier
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LizardBreedParams.TerrainSpeed(AItile.Accessibility)</parameter>
          </include>
        </markup>
    content.vb: Public Function TerrainSpeed(acc As AItile.Accessibility) As LizardBreedParams.SpeedMultiplier
  overload: Global.LizardBreedParams.TerrainSpeed*
- uid: Global.LizardBreedParams.WallClimber
  commentId: P:Global.LizardBreedParams.WallClimber
  id: WallClimber
  parent: Global.LizardBreedParams
  langs:
  - csharp
  - vb
  name: WallClimber
  nameWithType: LizardBreedParams.WallClimber
  fullName: LizardBreedParams.WallClimber
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LizardBreedParams.WallClimber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WallClimber { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WallClimber As Boolean
  overload: Global.LizardBreedParams.WallClimber*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.BreedParameters
  commentId: T:Global.BreedParameters
  isExternal: true
  href: BreedParameters.html
  name: BreedParameters
  nameWithType: BreedParameters
  fullName: BreedParameters
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate.Type
  commentId: T:Global.CreatureTemplate.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Type
  nameWithType: CreatureTemplate.Type
  fullName: CreatureTemplate.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Type.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.LizardBreedParams.SpeedMultiplier
  commentId: T:Global.LizardBreedParams.SpeedMultiplier
  isExternal: true
  href: LizardBreedParams.html
  name: LizardBreedParams.SpeedMultiplier
  nameWithType: LizardBreedParams.SpeedMultiplier
  fullName: LizardBreedParams.SpeedMultiplier
  spec.csharp:
  - uid: Global.LizardBreedParams
    name: LizardBreedParams
    isExternal: true
    href: LizardBreedParams.html
  - name: .
  - uid: Global.LizardBreedParams.SpeedMultiplier
    name: SpeedMultiplier
    isExternal: true
    href: LizardBreedParams.SpeedMultiplier.html
  spec.vb:
  - uid: Global.LizardBreedParams
    name: LizardBreedParams
    isExternal: true
    href: LizardBreedParams.html
  - name: .
  - uid: Global.LizardBreedParams.SpeedMultiplier
    name: SpeedMultiplier
    isExternal: true
    href: LizardBreedParams.SpeedMultiplier.html
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.LizardBreedParams.SpeedMultiplier[]
  isExternal: true
  href: LizardBreedParams.SpeedMultiplier.html
  name: SpeedMultiplier[]
  nameWithType: LizardBreedParams.SpeedMultiplier[]
  fullName: LizardBreedParams.SpeedMultiplier[]
  nameWithType.vb: LizardBreedParams.SpeedMultiplier()
  fullName.vb: LizardBreedParams.SpeedMultiplier()
  name.vb: SpeedMultiplier()
  spec.csharp:
  - uid: Global.LizardBreedParams.SpeedMultiplier
    name: SpeedMultiplier
    isExternal: true
    href: LizardBreedParams.SpeedMultiplier.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.LizardBreedParams.SpeedMultiplier
    name: SpeedMultiplier
    isExternal: true
    href: LizardBreedParams.SpeedMultiplier.html
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.LizardBreedParams.#ctor*
  commentId: Overload:Global.LizardBreedParams.#ctor
  isExternal: true
  href: Global.LizardBreedParams.html#LizardBreedParams__ctor_CreatureTemplate_Type_
  name: LizardBreedParams
  nameWithType: LizardBreedParams.LizardBreedParams
  fullName: LizardBreedParams.LizardBreedParams
  nameWithType.vb: LizardBreedParams.New
  fullName.vb: LizardBreedParams.New
  name.vb: New
- uid: Global.LizardBreedParams.TerrainSpeed*
  commentId: Overload:Global.LizardBreedParams.TerrainSpeed
  isExternal: true
  href: Global.LizardBreedParams.html#LizardBreedParams_TerrainSpeed_AItile_Accessibility_
  name: TerrainSpeed
  nameWithType: LizardBreedParams.TerrainSpeed
  fullName: LizardBreedParams.TerrainSpeed
- uid: Global.AItile.Accessibility
  commentId: T:Global.AItile.Accessibility
  isExternal: true
  href: AItile.html
  name: AItile.Accessibility
  nameWithType: AItile.Accessibility
  fullName: AItile.Accessibility
  spec.csharp:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
  spec.vb:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
- uid: Global.LizardBreedParams.WallClimber*
  commentId: Overload:Global.LizardBreedParams.WallClimber
  isExternal: true
  href: Global.LizardBreedParams.html#LizardBreedParams_WallClimber
  name: WallClimber
  nameWithType: LizardBreedParams.WallClimber
  fullName: LizardBreedParams.WallClimber
