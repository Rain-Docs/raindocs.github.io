### YamlMime:ManagedReference
items:
- uid: Global.ConfigAcceptableRange`1
  commentId: T:Global.ConfigAcceptableRange`1
  id: ConfigAcceptableRange`1
  parent: Global
  children:
  - Global.ConfigAcceptableRange`1.#ctor(`0,`0)
  - Global.ConfigAcceptableRange`1.Clamp(System.Object)
  - Global.ConfigAcceptableRange`1.IsValid(System.Object)
  - Global.ConfigAcceptableRange`1.MaxValue
  - Global.ConfigAcceptableRange`1.MinValue
  - Global.ConfigAcceptableRange`1.ToDescriptionString
  langs:
  - csharp
  - vb
  name: ConfigAcceptableRange<T>
  nameWithType: ConfigAcceptableRange<T>
  fullName: ConfigAcceptableRange<T>
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ConfigAcceptableRange`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ConfigAcceptableRange<T> : ConfigAcceptableBase where T : IComparable'
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>T:ConfigAcceptableRange`1</parameter>
          </include>
        </markup>
    content.vb: Public Class ConfigAcceptableRange(Of T As IComparable) Inherits ConfigAcceptableBase
  inheritance:
  - System.Object
  - Global.ConfigAcceptableBase
  inheritedMembers:
  - Global.ConfigAcceptableBase.ValueType
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  nameWithType.vb: ConfigAcceptableRange(Of T)
  fullName.vb: ConfigAcceptableRange(Of T)
  name.vb: ConfigAcceptableRange(Of T)
- uid: Global.ConfigAcceptableRange`1.#ctor(`0,`0)
  commentId: M:Global.ConfigAcceptableRange`1.#ctor(`0,`0)
  id: '#ctor(`0,`0)'
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: ConfigAcceptableRange(T, T)
  nameWithType: ConfigAcceptableRange<T>.ConfigAcceptableRange(T, T)
  fullName: ConfigAcceptableRange<T>.ConfigAcceptableRange(T, T)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ConfigAcceptableRange`1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ConfigAcceptableRange(T minValue, T maxValue)
    parameters:
    - id: minValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minValue</parameter>
            <parameter>M:ConfigAcceptableRange`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
    - id: maxValue
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxValue</parameter>
            <parameter>M:ConfigAcceptableRange`1.#ctor(`0,`0)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(minValue As T, maxValue As T)
  overload: Global.ConfigAcceptableRange`1.#ctor*
  nameWithType.vb: ConfigAcceptableRange(Of T).New(T, T)
  fullName.vb: ConfigAcceptableRange(Of T).New(T, T)
  name.vb: New(T, T)
- uid: Global.ConfigAcceptableRange`1.Clamp(System.Object)
  commentId: M:Global.ConfigAcceptableRange`1.Clamp(System.Object)
  id: Clamp(System.Object)
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: Clamp(object)
  nameWithType: ConfigAcceptableRange<T>.Clamp(object)
  fullName: ConfigAcceptableRange<T>.Clamp(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableRange`1.Clamp(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override object Clamp(object value)
    parameters:
    - id: value
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ConfigAcceptableRange`1.Clamp(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableRange`1.Clamp(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Clamp(value As Object) As Object
  overridden: Global.ConfigAcceptableBase.Clamp(System.Object)
  overload: Global.ConfigAcceptableRange`1.Clamp*
  nameWithType.vb: ConfigAcceptableRange(Of T).Clamp(Object)
  fullName.vb: ConfigAcceptableRange(Of T).Clamp(Object)
  name.vb: Clamp(Object)
- uid: Global.ConfigAcceptableRange`1.IsValid(System.Object)
  commentId: M:Global.ConfigAcceptableRange`1.IsValid(System.Object)
  id: IsValid(System.Object)
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: IsValid(object)
  nameWithType: ConfigAcceptableRange<T>.IsValid(object)
  fullName: ConfigAcceptableRange<T>.IsValid(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableRange`1.IsValid(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool IsValid(object value)
    parameters:
    - id: value
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ConfigAcceptableRange`1.IsValid(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableRange`1.IsValid(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function IsValid(value As Object) As Boolean
  overridden: Global.ConfigAcceptableBase.IsValid(System.Object)
  overload: Global.ConfigAcceptableRange`1.IsValid*
  nameWithType.vb: ConfigAcceptableRange(Of T).IsValid(Object)
  fullName.vb: ConfigAcceptableRange(Of T).IsValid(Object)
  name.vb: IsValid(Object)
- uid: Global.ConfigAcceptableRange`1.ToDescriptionString
  commentId: M:Global.ConfigAcceptableRange`1.ToDescriptionString
  id: ToDescriptionString
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: ToDescriptionString()
  nameWithType: ConfigAcceptableRange<T>.ToDescriptionString()
  fullName: ConfigAcceptableRange<T>.ToDescriptionString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigAcceptableRange`1.ToDescriptionString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToDescriptionString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigAcceptableRange`1.ToDescriptionString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToDescriptionString() As String
  overridden: Global.ConfigAcceptableBase.ToDescriptionString
  overload: Global.ConfigAcceptableRange`1.ToDescriptionString*
  nameWithType.vb: ConfigAcceptableRange(Of T).ToDescriptionString()
  fullName.vb: ConfigAcceptableRange(Of T).ToDescriptionString()
- uid: Global.ConfigAcceptableRange`1.MinValue
  commentId: P:Global.ConfigAcceptableRange`1.MinValue
  id: MinValue
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: ConfigAcceptableRange<T>.MinValue
  fullName: ConfigAcceptableRange<T>.MinValue
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigAcceptableRange`1.MinValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual T MinValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Overridable ReadOnly Property MinValue As T
  overload: Global.ConfigAcceptableRange`1.MinValue*
  nameWithType.vb: ConfigAcceptableRange(Of T).MinValue
  fullName.vb: ConfigAcceptableRange(Of T).MinValue
- uid: Global.ConfigAcceptableRange`1.MaxValue
  commentId: P:Global.ConfigAcceptableRange`1.MaxValue
  id: MaxValue
  parent: Global.ConfigAcceptableRange`1
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: ConfigAcceptableRange<T>.MaxValue
  fullName: ConfigAcceptableRange<T>.MaxValue
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigAcceptableRange`1.MaxValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual T MaxValue { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Overridable ReadOnly Property MaxValue As T
  overload: Global.ConfigAcceptableRange`1.MaxValue*
  nameWithType.vb: ConfigAcceptableRange(Of T).MaxValue
  fullName.vb: ConfigAcceptableRange(Of T).MaxValue
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.ConfigAcceptableBase
  commentId: T:Global.ConfigAcceptableBase
  isExternal: true
  href: ConfigAcceptableBase.html
  name: ConfigAcceptableBase
  nameWithType: ConfigAcceptableBase
  fullName: ConfigAcceptableBase
- uid: Global.ConfigAcceptableBase.ValueType
  commentId: F:Global.ConfigAcceptableBase.ValueType
  parent: Global.ConfigAcceptableBase
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_ValueType
  name: ValueType
  nameWithType: ConfigAcceptableBase.ValueType
  fullName: ConfigAcceptableBase.ValueType
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ConfigAcceptableRange`1.#ctor*
  commentId: Overload:Global.ConfigAcceptableRange`1.#ctor
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1__ctor__0__0_
  name: ConfigAcceptableRange
  nameWithType: ConfigAcceptableRange<T>.ConfigAcceptableRange
  fullName: ConfigAcceptableRange<T>.ConfigAcceptableRange
  nameWithType.vb: ConfigAcceptableRange(Of T).New
  fullName.vb: ConfigAcceptableRange(Of T).New
  name.vb: New
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ConfigAcceptableBase.Clamp(System.Object)
  commentId: M:Global.ConfigAcceptableBase.Clamp(System.Object)
  parent: Global.ConfigAcceptableBase
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_Clamp_System_Object_
  name: Clamp(object)
  nameWithType: ConfigAcceptableBase.Clamp(object)
  fullName: ConfigAcceptableBase.Clamp(object)
  nameWithType.vb: ConfigAcceptableBase.Clamp(Object)
  fullName.vb: ConfigAcceptableBase.Clamp(Object)
  name.vb: Clamp(Object)
  spec.csharp:
  - uid: Global.ConfigAcceptableBase.Clamp(System.Object)
    name: Clamp
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_Clamp_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ConfigAcceptableBase.Clamp(System.Object)
    name: Clamp
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_Clamp_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ConfigAcceptableRange`1.Clamp*
  commentId: Overload:Global.ConfigAcceptableRange`1.Clamp
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1_Clamp_System_Object_
  name: Clamp
  nameWithType: ConfigAcceptableRange<T>.Clamp
  fullName: ConfigAcceptableRange<T>.Clamp
  nameWithType.vb: ConfigAcceptableRange(Of T).Clamp
  fullName.vb: ConfigAcceptableRange(Of T).Clamp
- uid: Global.ConfigAcceptableBase.IsValid(System.Object)
  commentId: M:Global.ConfigAcceptableBase.IsValid(System.Object)
  parent: Global.ConfigAcceptableBase
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_IsValid_System_Object_
  name: IsValid(object)
  nameWithType: ConfigAcceptableBase.IsValid(object)
  fullName: ConfigAcceptableBase.IsValid(object)
  nameWithType.vb: ConfigAcceptableBase.IsValid(Object)
  fullName.vb: ConfigAcceptableBase.IsValid(Object)
  name.vb: IsValid(Object)
  spec.csharp:
  - uid: Global.ConfigAcceptableBase.IsValid(System.Object)
    name: IsValid
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_IsValid_System_Object_
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: Global.ConfigAcceptableBase.IsValid(System.Object)
    name: IsValid
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_IsValid_System_Object_
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.ConfigAcceptableRange`1.IsValid*
  commentId: Overload:Global.ConfigAcceptableRange`1.IsValid
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1_IsValid_System_Object_
  name: IsValid
  nameWithType: ConfigAcceptableRange<T>.IsValid
  fullName: ConfigAcceptableRange<T>.IsValid
  nameWithType.vb: ConfigAcceptableRange(Of T).IsValid
  fullName.vb: ConfigAcceptableRange(Of T).IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ConfigAcceptableBase.ToDescriptionString
  commentId: M:Global.ConfigAcceptableBase.ToDescriptionString
  parent: Global.ConfigAcceptableBase
  isExternal: true
  href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_ToDescriptionString
  name: ToDescriptionString()
  nameWithType: ConfigAcceptableBase.ToDescriptionString()
  fullName: ConfigAcceptableBase.ToDescriptionString()
  spec.csharp:
  - uid: Global.ConfigAcceptableBase.ToDescriptionString
    name: ToDescriptionString
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_ToDescriptionString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.ConfigAcceptableBase.ToDescriptionString
    name: ToDescriptionString
    isExternal: true
    href: Global.ConfigAcceptableBase.html#ConfigAcceptableBase_ToDescriptionString
  - name: (
  - name: )
- uid: Global.ConfigAcceptableRange`1.ToDescriptionString*
  commentId: Overload:Global.ConfigAcceptableRange`1.ToDescriptionString
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1_ToDescriptionString
  name: ToDescriptionString
  nameWithType: ConfigAcceptableRange<T>.ToDescriptionString
  fullName: ConfigAcceptableRange<T>.ToDescriptionString
  nameWithType.vb: ConfigAcceptableRange(Of T).ToDescriptionString
  fullName.vb: ConfigAcceptableRange(Of T).ToDescriptionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ConfigAcceptableRange`1.MinValue*
  commentId: Overload:Global.ConfigAcceptableRange`1.MinValue
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1_MinValue
  name: MinValue
  nameWithType: ConfigAcceptableRange<T>.MinValue
  fullName: ConfigAcceptableRange<T>.MinValue
  nameWithType.vb: ConfigAcceptableRange(Of T).MinValue
  fullName.vb: ConfigAcceptableRange(Of T).MinValue
- uid: Global.ConfigAcceptableRange`1.MaxValue*
  commentId: Overload:Global.ConfigAcceptableRange`1.MaxValue
  isExternal: true
  href: Global.ConfigAcceptableRange-1.html#ConfigAcceptableRange_1_MaxValue
  name: MaxValue
  nameWithType: ConfigAcceptableRange<T>.MaxValue
  fullName: ConfigAcceptableRange<T>.MaxValue
  nameWithType.vb: ConfigAcceptableRange(Of T).MaxValue
  fullName.vb: ConfigAcceptableRange(Of T).MaxValue
