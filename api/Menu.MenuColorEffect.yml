### YamlMime:ManagedReference
items:
- uid: Menu.MenuColorEffect
  commentId: T:Menu.MenuColorEffect
  id: MenuColorEffect
  parent: Menu
  children:
  - Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)
  - Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)
  - Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)
  - Menu.MenuColorEffect.Greyscale(UnityEngine.Color)
  - Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)
  - Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)
  - Menu.MenuColorEffect.HexToColor(System.String)
  - Menu.MenuColorEffect.IsStringHexColor(System.String)
  - Menu.MenuColorEffect.MidToDark(UnityEngine.Color)
  - Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)
  - Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D@)
  - Menu.MenuColorEffect.rgbBlack
  - Menu.MenuColorEffect.rgbColored
  - Menu.MenuColorEffect.rgbDarkGrey
  - Menu.MenuColorEffect.rgbDarkRed
  - Menu.MenuColorEffect.rgbMediumGrey
  - Menu.MenuColorEffect.rgbVeryDarkGrey
  - Menu.MenuColorEffect.rgbWhite
  langs:
  - csharp
  - vb
  name: MenuColorEffect
  nameWithType: MenuColorEffect
  fullName: Menu.MenuColorEffect
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.MenuColorEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class MenuColorEffect
    content.vb: Public Module MenuColorEffect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.MenuColorEffect.rgbWhite
  commentId: F:Menu.MenuColorEffect.rgbWhite
  id: rgbWhite
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbWhite
  nameWithType: MenuColorEffect.rgbWhite
  fullName: Menu.MenuColorEffect.rgbWhite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbWhite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbWhite
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbWhite As Color
- uid: Menu.MenuColorEffect.rgbMediumGrey
  commentId: F:Menu.MenuColorEffect.rgbMediumGrey
  id: rgbMediumGrey
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbMediumGrey
  nameWithType: MenuColorEffect.rgbMediumGrey
  fullName: Menu.MenuColorEffect.rgbMediumGrey
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbMediumGrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbMediumGrey
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbMediumGrey As Color
- uid: Menu.MenuColorEffect.rgbDarkGrey
  commentId: F:Menu.MenuColorEffect.rgbDarkGrey
  id: rgbDarkGrey
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbDarkGrey
  nameWithType: MenuColorEffect.rgbDarkGrey
  fullName: Menu.MenuColorEffect.rgbDarkGrey
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbDarkGrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbDarkGrey
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbDarkGrey As Color
- uid: Menu.MenuColorEffect.rgbVeryDarkGrey
  commentId: F:Menu.MenuColorEffect.rgbVeryDarkGrey
  id: rgbVeryDarkGrey
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbVeryDarkGrey
  nameWithType: MenuColorEffect.rgbVeryDarkGrey
  fullName: Menu.MenuColorEffect.rgbVeryDarkGrey
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbVeryDarkGrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbVeryDarkGrey
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbVeryDarkGrey As Color
- uid: Menu.MenuColorEffect.rgbColored
  commentId: F:Menu.MenuColorEffect.rgbColored
  id: rgbColored
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbColored
  nameWithType: MenuColorEffect.rgbColored
  fullName: Menu.MenuColorEffect.rgbColored
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbColored</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbColored
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbColored As Color
- uid: Menu.MenuColorEffect.rgbBlack
  commentId: F:Menu.MenuColorEffect.rgbBlack
  id: rgbBlack
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbBlack
  nameWithType: MenuColorEffect.rgbBlack
  fullName: Menu.MenuColorEffect.rgbBlack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbBlack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbBlack
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbBlack As Color
- uid: Menu.MenuColorEffect.rgbDarkRed
  commentId: F:Menu.MenuColorEffect.rgbDarkRed
  id: rgbDarkRed
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: rgbDarkRed
  nameWithType: MenuColorEffect.rgbDarkRed
  fullName: Menu.MenuColorEffect.rgbDarkRed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.MenuColorEffect.rgbDarkRed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color rgbDarkRed
    return:
      type: UnityEngine.Color
    content.vb: Public Shared rgbDarkRed As Color
- uid: Menu.MenuColorEffect.MidToDark(UnityEngine.Color)
  commentId: M:Menu.MenuColorEffect.MidToDark(UnityEngine.Color)
  id: MidToDark(UnityEngine.Color)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: MidToDark(Color)
  nameWithType: MenuColorEffect.MidToDark(Color)
  fullName: Menu.MenuColorEffect.MidToDark(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.MidToDark(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color MidToDark(Color mid)
    parameters:
    - id: mid
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mid</parameter>
            <parameter>M:Menu.MenuColorEffect.MidToDark(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.MidToDark(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MidToDark(mid As Color) As Color
  overload: Menu.MenuColorEffect.MidToDark*
- uid: Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)
  commentId: M:Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)
  id: MidToVeryDark(UnityEngine.Color)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: MidToVeryDark(Color)
  nameWithType: MenuColorEffect.MidToVeryDark(Color)
  fullName: Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color MidToVeryDark(Color mid)
    parameters:
    - id: mid
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mid</parameter>
            <parameter>M:Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.MidToVeryDark(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MidToVeryDark(mid As Color) As Color
  overload: Menu.MenuColorEffect.MidToVeryDark*
- uid: Menu.MenuColorEffect.Greyscale(UnityEngine.Color)
  commentId: M:Menu.MenuColorEffect.Greyscale(UnityEngine.Color)
  id: Greyscale(UnityEngine.Color)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: Greyscale(Color)
  nameWithType: MenuColorEffect.Greyscale(Color)
  fullName: Menu.MenuColorEffect.Greyscale(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.Greyscale(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color Greyscale(Color orig)
    parameters:
    - id: orig
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>orig</parameter>
            <parameter>M:Menu.MenuColorEffect.Greyscale(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.Greyscale(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Greyscale(orig As Color) As Color
  overload: Menu.MenuColorEffect.Greyscale*
- uid: Menu.MenuColorEffect.HexToColor(System.String)
  commentId: M:Menu.MenuColorEffect.HexToColor(System.String)
  id: HexToColor(System.String)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: HexToColor(string)
  nameWithType: MenuColorEffect.HexToColor(string)
  fullName: Menu.MenuColorEffect.HexToColor(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.HexToColor(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color HexToColor(string hex)
    parameters:
    - id: hex
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hex</parameter>
            <parameter>M:Menu.MenuColorEffect.HexToColor(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.HexToColor(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HexToColor(hex As String) As Color
  overload: Menu.MenuColorEffect.HexToColor*
  nameWithType.vb: MenuColorEffect.HexToColor(String)
  fullName.vb: Menu.MenuColorEffect.HexToColor(String)
  name.vb: HexToColor(String)
- uid: Menu.MenuColorEffect.IsStringHexColor(System.String)
  commentId: M:Menu.MenuColorEffect.IsStringHexColor(System.String)
  id: IsStringHexColor(System.String)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: IsStringHexColor(string)
  nameWithType: MenuColorEffect.IsStringHexColor(string)
  fullName: Menu.MenuColorEffect.IsStringHexColor(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.IsStringHexColor(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool IsStringHexColor(string test)
    parameters:
    - id: test
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>test</parameter>
            <parameter>M:Menu.MenuColorEffect.IsStringHexColor(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.IsStringHexColor(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function IsStringHexColor(test As String) As Boolean
  overload: Menu.MenuColorEffect.IsStringHexColor*
  nameWithType.vb: MenuColorEffect.IsStringHexColor(String)
  fullName.vb: Menu.MenuColorEffect.IsStringHexColor(String)
  name.vb: IsStringHexColor(String)
- uid: Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)
  commentId: M:Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)
  id: ColorToHex(UnityEngine.Color)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: ColorToHex(Color)
  nameWithType: MenuColorEffect.ColorToHex(Color)
  fullName: Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ColorToHex(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.ColorToHex(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorToHex(color As Color) As String
  overload: Menu.MenuColorEffect.ColorToHex*
- uid: Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)
  commentId: M:Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)
  id: HSLtoRGB(RXColorHSL)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: HSLtoRGB(RXColorHSL)
  nameWithType: MenuColorEffect.HSLtoRGB(RXColorHSL)
  fullName: Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color HSLtoRGB(RXColorHSL hslColor)
    parameters:
    - id: hslColor
      type: Global.RXColorHSL
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hslColor</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(RXColorHSL)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HSLtoRGB(hslColor As RXColorHSL) As Color
  overload: Menu.MenuColorEffect.HSLtoRGB*
- uid: Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)
  commentId: M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)
  id: HSLtoRGB(System.Single,System.Single,System.Single)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: HSLtoRGB(float, float, float)
  nameWithType: MenuColorEffect.HSLtoRGB(float, float, float)
  fullName: Menu.MenuColorEffect.HSLtoRGB(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color HSLtoRGB(float hue, float saturation, float luminosity)
    parameters:
    - id: hue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: saturation
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saturation</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: luminosity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>luminosity</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.HSLtoRGB(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HSLtoRGB(hue As Single, saturation As Single, luminosity As Single) As Color
  overload: Menu.MenuColorEffect.HSLtoRGB*
  nameWithType.vb: MenuColorEffect.HSLtoRGB(Single, Single, Single)
  fullName.vb: Menu.MenuColorEffect.HSLtoRGB(Single, Single, Single)
  name.vb: HSLtoRGB(Single, Single, Single)
- uid: Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)
  commentId: M:Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)
  id: ColorToHSL(UnityEngine.Color)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: ColorToHSL(Color)
  nameWithType: MenuColorEffect.ColorToHSL(Color)
  fullName: Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static RXColorHSL ColorToHSL(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: Global.RXColorHSL
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.ColorToHSL(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorToHSL(color As Color) As RXColorHSL
  overload: Menu.MenuColorEffect.ColorToHSL*
- uid: Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D@)
  commentId: M:Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D@)
  id: TextureGreyscale(UnityEngine.Texture2D@)
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: TextureGreyscale(ref Texture2D)
  nameWithType: MenuColorEffect.TextureGreyscale(ref Texture2D)
  fullName: Menu.MenuColorEffect.TextureGreyscale(ref UnityEngine.Texture2D)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void TextureGreyscale(ref Texture2D texture)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub TextureGreyscale(texture As Texture2D)
  overload: Menu.MenuColorEffect.TextureGreyscale*
  nameWithType.vb: MenuColorEffect.TextureGreyscale(Texture2D)
  fullName.vb: Menu.MenuColorEffect.TextureGreyscale(UnityEngine.Texture2D)
  name.vb: TextureGreyscale(Texture2D)
- uid: Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)
  commentId: M:Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)
  id: Clone(UnityEngine.Texture2D)
  isExtensionMethod: true
  parent: Menu.MenuColorEffect
  langs:
  - csharp
  - vb
  name: Clone(Texture2D)
  nameWithType: MenuColorEffect.Clone(Texture2D)
  fullName: Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Texture2D Clone(this Texture2D self)
    parameters:
    - id: self
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>self</parameter>
            <parameter>M:Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.MenuColorEffect.Clone(UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Clone(self As Texture2D) As Texture2D
  overload: Menu.MenuColorEffect.Clone*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Menu.MenuColorEffect.MidToDark*
  commentId: Overload:Menu.MenuColorEffect.MidToDark
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_MidToDark_UnityEngine_Color_
  name: MidToDark
  nameWithType: MenuColorEffect.MidToDark
  fullName: Menu.MenuColorEffect.MidToDark
- uid: Menu.MenuColorEffect.MidToVeryDark*
  commentId: Overload:Menu.MenuColorEffect.MidToVeryDark
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_MidToVeryDark_UnityEngine_Color_
  name: MidToVeryDark
  nameWithType: MenuColorEffect.MidToVeryDark
  fullName: Menu.MenuColorEffect.MidToVeryDark
- uid: Menu.MenuColorEffect.Greyscale*
  commentId: Overload:Menu.MenuColorEffect.Greyscale
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_Greyscale_UnityEngine_Color_
  name: Greyscale
  nameWithType: MenuColorEffect.Greyscale
  fullName: Menu.MenuColorEffect.Greyscale
- uid: Menu.MenuColorEffect.HexToColor*
  commentId: Overload:Menu.MenuColorEffect.HexToColor
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_HexToColor_System_String_
  name: HexToColor
  nameWithType: MenuColorEffect.HexToColor
  fullName: Menu.MenuColorEffect.HexToColor
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Menu.MenuColorEffect.IsStringHexColor*
  commentId: Overload:Menu.MenuColorEffect.IsStringHexColor
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_IsStringHexColor_System_String_
  name: IsStringHexColor
  nameWithType: MenuColorEffect.IsStringHexColor
  fullName: Menu.MenuColorEffect.IsStringHexColor
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.MenuColorEffect.ColorToHex*
  commentId: Overload:Menu.MenuColorEffect.ColorToHex
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_ColorToHex_UnityEngine_Color_
  name: ColorToHex
  nameWithType: MenuColorEffect.ColorToHex
  fullName: Menu.MenuColorEffect.ColorToHex
- uid: Menu.MenuColorEffect.HSLtoRGB*
  commentId: Overload:Menu.MenuColorEffect.HSLtoRGB
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_HSLtoRGB_RXColorHSL_
  name: HSLtoRGB
  nameWithType: MenuColorEffect.HSLtoRGB
  fullName: Menu.MenuColorEffect.HSLtoRGB
- uid: Global.RXColorHSL
  commentId: T:Global.RXColorHSL
  isExternal: true
  href: RXColorHSL.html
  name: RXColorHSL
  nameWithType: RXColorHSL
  fullName: RXColorHSL
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Menu.MenuColorEffect.ColorToHSL*
  commentId: Overload:Menu.MenuColorEffect.ColorToHSL
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_ColorToHSL_UnityEngine_Color_
  name: ColorToHSL
  nameWithType: MenuColorEffect.ColorToHSL
  fullName: Menu.MenuColorEffect.ColorToHSL
- uid: Menu.MenuColorEffect.TextureGreyscale*
  commentId: Overload:Menu.MenuColorEffect.TextureGreyscale
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_TextureGreyscale_UnityEngine_Texture2D__
  name: TextureGreyscale
  nameWithType: MenuColorEffect.TextureGreyscale
  fullName: Menu.MenuColorEffect.TextureGreyscale
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Menu.MenuColorEffect.Clone*
  commentId: Overload:Menu.MenuColorEffect.Clone
  isExternal: true
  href: Menu.MenuColorEffect.html#Menu_MenuColorEffect_Clone_UnityEngine_Texture2D_
  name: Clone
  nameWithType: MenuColorEffect.Clone
  fullName: Menu.MenuColorEffect.Clone
