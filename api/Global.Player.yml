### YamlMime:ManagedReference
items:
- uid: Global.Player
  commentId: T:Global.Player
  id: Player
  parent: Global
  children:
  - Global.Player.#ctor(AbstractCreature,World)
  - Global.Player.AI
  - Global.Player.ActivateAscension
  - Global.Player.AddFood(System.Int32)
  - Global.Player.AddQuarterFood
  - Global.Player.Adrenaline
  - Global.Player.AerobicIncrease(System.Single)
  - Global.Player.AllowGrabbingBatflys
  - Global.Player.ApplyWarpFatigue(RainWorldGame)
  - Global.Player.BadWarpExitPrimed
  - Global.Player.Blink(System.Int32)
  - Global.Player.CameraInputDelay
  - Global.Player.CanBeGrabbed(Creature)
  - Global.Player.CanBeSwallowed(PhysicalObject)
  - Global.Player.CanEatMeat(Creature)
  - Global.Player.CanIPickThisUp(PhysicalObject)
  - Global.Player.CanIPutDeadSlugOnBack(Player)
  - Global.Player.CanLevitate
  - Global.Player.CanMaulCreature(Creature)
  - Global.Player.CanPutSlugToBack
  - Global.Player.CanPutSpearToBack
  - Global.Player.CanRetrieveSlugFromBack
  - Global.Player.CanRetrieveSpearFromBack
  - Global.Player.CanSpawnDynamicWarpPoints
  - Global.Player.ClassMechanicsArtificer
  - Global.Player.ClassMechanicsGourmand
  - Global.Player.ClassMechanicsSaint
  - Global.Player.ClassMechanicsSpearmaster
  - Global.Player.Collide(PhysicalObject,System.Int32,System.Int32)
  - Global.Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)
  - Global.Player.CraftingResults
  - Global.Player.CurrentFood
  - Global.Player.DangerGraspPickup(System.Boolean)
  - Global.Player.DeactivateAscension
  - Global.Player.Deafen(System.Int32)
  - Global.Player.DeathByBiteMultiplier
  - Global.Player.Destroy
  - Global.Player.DestroyTransitionRipple
  - Global.Player.Die
  - Global.Player.DreamState
  - Global.Player.EatMeatOmnivoreGreenList(Creature)
  - Global.Player.EatMeatUpdate(System.Int32)
  - Global.Player.EffectiveRoomGravity
  - Global.Player.FoodCountDownDone
  - Global.Player.FoodInRoom(Room,System.Boolean)
  - Global.Player.FoodInRoom(System.Boolean)
  - Global.Player.FoodInStomach
  - Global.Player.FreeHand
  - Global.Player.GetHeldItemDirection(System.Int32)
  - Global.Player.GetInitialSlugcatClass
  - Global.Player.GetOwnerType
  - Global.Player.GetPlayerStates
  - Global.Player.GrabUpdate(System.Boolean)
  - Global.Player.Grabbed(Creature.Grasp)
  - Global.Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  - Global.Player.GraspWiggle
  - Global.Player.GraspsCanBeCrafted
  - Global.Player.HeavyCarry(PhysicalObject)
  - Global.Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)
  - Global.Player.InitVoidWormCutscene
  - Global.Player.InitialShortcutWaitTime
  - Global.Player.InitiateDissolve
  - Global.Player.InitiateGraphicsModule
  - Global.Player.InjectedPoisonColor
  - Global.Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)
  - Global.Player.IsCreatureImmuneToPlayerGrabStun(Creature)
  - Global.Player.IsCreatureLegalToHoldWithoutStun(Creature)
  - Global.Player.IsJollyPlayer
  - Global.Player.JollyEmoteUpdate
  - Global.Player.JollyFoodUpdate
  - Global.Player.JollyOption
  - Global.Player.JollyPointUpdate
  - Global.Player.JollyUpdate(System.Boolean)
  - Global.Player.Jump
  - Global.Player.JumpOnChunk
  - Global.Player.Karma
  - Global.Player.KarmaCap
  - Global.Player.KarmaIsReinforced
  - Global.Player.Malnourished
  - Global.Player.MapDiscoveryActive
  - Global.Player.MapInput
  - Global.Player.MapOwnerInRoomPosition
  - Global.Player.MapOwnerRoom
  - Global.Player.MaulingUpdate(System.Int32)
  - Global.Player.MaxFoodInStomach
  - Global.Player.MovementUpdate(System.Boolean)
  - Global.Player.NPCForceGrab(PhysicalObject)
  - Global.Player.NPCGrabCheck(PhysicalObject)
  - Global.Player.NewRoom(Room)
  - Global.Player.ObjectEaten(IPlayerEdible)
  - Global.Player.OneWayPlacement(UnityEngine.Vector2)
  - Global.Player.OneWayWarpExit
  - Global.Player.PainJumps
  - Global.Player.PermaDie
  - Global.Player.PlaceKarmaFlower
  - Global.Player.PlayHUDSound(SoundID)
  - Global.Player.PointDir
  - Global.Player.PrimeOneWayExit(Room)
  - Global.Player.ProcessChatLog
  - Global.Player.ProcessConsoleDebugInputs
  - Global.Player.ProcessDebugInputs
  - Global.Player.PyroDeath
  - Global.Player.PyroDeathThreshold(RainWorldGame)
  - Global.Player.ReadyForStarveJolly
  - Global.Player.ReadyForWinJolly
  - Global.Player.Regurgitate
  - Global.Player.ReleaseGrasp(System.Int32)
  - Global.Player.RemoveGraphicsModule
  - Global.Player.RevealMap
  - Global.Player.RippleAbilityActivationButtonCondition
  - Global.Player.RippleSpawnInteractions
  - Global.Player.RoomBlacklistedFromRippleTears(Room)
  - Global.Player.SaintStagger(System.Int32)
  - Global.Player.SaintTongueCheck
  - Global.Player.SaveStomachObjectInPlayerState
  - Global.Player.SessionRecord
  - Global.Player.SetMalnourished(System.Boolean)
  - Global.Player.ShortCutColor
  - Global.Player.Sleeping
  - Global.Player.SlugCatClass
  - Global.Player.SlugSlamConditions(PhysicalObject)
  - Global.Player.SlugcatGrab(PhysicalObject,System.Int32)
  - Global.Player.Sneak
  - Global.Player.SpawnDynamicWarpPoint
  - Global.Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)
  - Global.Player.SpawnWatcherMechanicRipple
  - Global.Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  - Global.Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  - Global.Player.SpitUpCraftedObject
  - Global.Player.StomachGlowLightColor
  - Global.Player.StopLevitation
  - Global.Player.Stun(System.Int32)
  - Global.Player.SubtractFood(System.Int32)
  - Global.Player.SuperHardSetPosition(UnityEngine.Vector2)
  - Global.Player.SwallowObject(System.Int32)
  - Global.Player.SwimDir(System.Boolean)
  - Global.Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  - Global.Player.ThrowDirection
  - Global.Player.ThrowObject(System.Int32,System.Boolean)
  - Global.Player.ThrowToGetFree(System.Boolean)
  - Global.Player.TickLevitation(System.Boolean)
  - Global.Player.ToggleCamo
  - Global.Player.TongueUpdate
  - Global.Player.TransitionRippleUpdate
  - Global.Player.TriggerCameraSwitch
  - Global.Player.Update(System.Boolean)
  - Global.Player.UpdateAnimation
  - Global.Player.UpdateBodyMode
  - Global.Player.UpdateMSC
  - Global.Player.VisibilityBonus
  - Global.Player.WallJump(System.Int32)
  - Global.Player.WarpSpawningUpdate
  - Global.Player.WatcherUpdate
  - Global.Player.Wiggle
  - Global.Player.Wounded
  - Global.Player.activateCamoTimer
  - Global.Player.activateDynamicWarpDuration
  - Global.Player.activateDynamicWarpTimer
  - Global.Player.addedSpawnRoomToDiscovery
  - Global.Player.adrenalineEffect
  - Global.Player.aerobicLevel
  - Global.Player.airInLungs
  - Global.Player.allowOutOfBounds
  - Global.Player.allowRoll
  - Global.Player.animation
  - Global.Player.animationFrame
  - Global.Player.bodyMode
  - Global.Player.burstVelX
  - Global.Player.burstVelY
  - Global.Player.burstX
  - Global.Player.burstY
  - Global.Player.camoCharge
  - Global.Player.camoDirectionSoundID
  - Global.Player.camoInputsNeedReset
  - Global.Player.camoLimit
  - Global.Player.camoProgress
  - Global.Player.camoRechargePenalty
  - Global.Player.canJump
  - Global.Player.canWallJump
  - Global.Player.cancelCamoCooldown
  - Global.Player.chatlog
  - Global.Player.chatlogCounter
  - Global.Player.chatlogID
  - Global.Player.checkInput
  - Global.Player.circuitSwimResistance
  - Global.Player.consistentDownDiagonal
  - Global.Player.consumedRippleFood
  - Global.Player.controller
  - Global.Player.craftingObject
  - Global.Player.craftingTutorial
  - Global.Player.curcuitJumpMeter
  - Global.Player.customPlayerGravity
  - Global.Player.dangerGrasp
  - Global.Player.dangerGraspLastThrowButton
  - Global.Player.dangerGraspPickupButton
  - Global.Player.dangerGraspTime
  - Global.Player.deafLoopHolder
  - Global.Player.deathEffect
  - Global.Player.devMaxLevelRipple
  - Global.Player.devMaxLevelRippleValue
  - Global.Player.dissolved
  - Global.Player.diveForce
  - Global.Player.dontEatExternalFoodSourceCounter
  - Global.Player.dropGrabTile
  - Global.Player.drown
  - Global.Player.dynamicWarpCooldown
  - Global.Player.eatCounter
  - Global.Player.eatExternalFoodSourceCounter
  - Global.Player.eatMeat
  - Global.Player.exhausted
  - Global.Player.exitsToBeDiscovered
  - Global.Player.externalFoodSourceRotten
  - Global.Player.eyesClosedTime
  - Global.Player.flipDirection
  - Global.Player.flipFromSlide
  - Global.Player.forceBurst
  - Global.Player.forceFeetToHorizontalBeamTile
  - Global.Player.forceSleepCounter
  - Global.Player.glowing
  - Global.Player.godDeactiveTimer
  - Global.Player.godRecharging
  - Global.Player.godTimer
  - Global.Player.godWarmup
  - Global.Player.gourmandAttackNegateTime
  - Global.Player.gourmandExhausted
  - Global.Player.handOnExternalFoodSource
  - Global.Player.hideGodPips
  - Global.Player.inCamoTime
  - Global.Player.inVoidSea
  - Global.Player.initRunSpeedFac
  - Global.Player.initSlideCounter
  - Global.Player.injectedPoisonColor
  - Global.Player.input
  - Global.Player.isCamo
  - Global.Player.isGourmand
  - Global.Player.isNPC
  - Global.Player.isRivulet
  - Global.Player.isSlugpup
  - Global.Player.jumpBoost
  - Global.Player.jumpChunk
  - Global.Player.jumpChunkCounter
  - Global.Player.jumpStun
  - Global.Player.karmaCharging
  - Global.Player.karmaFlowerGrowPos
  - Global.Player.killFac
  - Global.Player.killPressed
  - Global.Player.killWait
  - Global.Player.lastFlipDirection
  - Global.Player.lastGoodTrackerSpawnCoord
  - Global.Player.lastGoodTrackerSpawnRegion
  - Global.Player.lastGoodTrackerSpawnRoom
  - Global.Player.lastGroundY
  - Global.Player.lastKillFac
  - Global.Player.lastKillWait
  - Global.Player.lastPingRegion
  - Global.Player.lastPositions
  - Global.Player.leftFoot
  - Global.Player.levitationActive
  - Global.Player.levitationNeedsCooldown
  - Global.Player.levivationCooldown
  - Global.Player.longBellySlide
  - Global.Player.lowerBodyFramesOffGround
  - Global.Player.lowerBodyFramesOnGround
  - Global.Player.lungsExhausted
  - Global.Player.mapInput
  - Global.Player.maulTimer
  - Global.Player.maxGodTime
  - Global.Player.maxRippleLevel
  - Global.Player.monkAscension
  - Global.Player.mushroomCounter
  - Global.Player.mushroomEffect
  - Global.Player.myRobot
  - Global.Player.noPickUpOnRelease
  - Global.Player.npcStats
  - Global.Player.objectInStomach
  - Global.Player.objectPointed
  - Global.Player.onBack
  - Global.Player.outOfCamoTime
  - Global.Player.performingActivationTimer
  - Global.Player.playerInAntlers
  - Global.Player.playerState
  - Global.Player.pullupSoftlockSafety
  - Global.Player.pyroJumpCooldown
  - Global.Player.pyroJumpCounter
  - Global.Player.pyroJumpDropLock
  - Global.Player.pyroJumpped
  - Global.Player.pyroParryCooldown
  - Global.Player.readyForWin
  - Global.Player.redsIllness
  - Global.Player.reloadCounter
  - Global.Player.requestedCameraWithoutInput
  - Global.Player.ripRep
  - Global.Player.ripple
  - Global.Player.rippleActivating
  - Global.Player.rippleAnimationIntensityTarget
  - Global.Player.rippleAnimationJitterTimer
  - Global.Player.rippleDeathIntensity
  - Global.Player.rippleDeathSoundLoop
  - Global.Player.rippleDeathTime
  - Global.Player.rippleLevel
  - Global.Player.rocketJumpFromBellySlide
  - Global.Player.rollCounter
  - Global.Player.rollDirection
  - Global.Player.saintWeakness
  - Global.Player.scavengerImmunity
  - Global.Player.sceneFlag
  - Global.Player.setPupStatus(System.Boolean)
  - Global.Player.shootUpCounter
  - Global.Player.showKarmaFoodRainTime
  - Global.Player.showedBadWarpTutorialThisCycle
  - Global.Player.showedStableWarpTutorialThisCycle
  - Global.Player.showedWarpExhausionTutorialThisCycle
  - Global.Player.showedWarpFatigueTutorialThisCycle
  - Global.Player.sleepCounter
  - Global.Player.sleepCurlUp
  - Global.Player.sleepWhenStill
  - Global.Player.slideCounter
  - Global.Player.slideDirection
  - Global.Player.slideLoop
  - Global.Player.slideLoopSound
  - Global.Player.slideUpPole
  - Global.Player.slowMovementStun
  - Global.Player.slugOnBack
  - Global.Player.slugcatStats
  - Global.Player.smSpearSoundReady
  - Global.Player.sofCooldown
  - Global.Player.spearOnBack
  - Global.Player.sporeParticleTicks
  - Global.Player.standStillOnMapButton
  - Global.Player.standing
  - Global.Player.standingInWarpPointProtectionTime
  - Global.Player.stillInStartShelter
  - Global.Player.stopRollingCounter
  - Global.Player.submerged
  - Global.Player.superLaunchJump
  - Global.Player.swallowAndRegurgitateCounter
  - Global.Player.swimBits
  - Global.Player.swimCycle
  - Global.Player.switchHandsCounter
  - Global.Player.switchHandsProcess
  - Global.Player.timeSinceSpawned
  - Global.Player.tongue
  - Global.Player.tongueAttachTime
  - Global.Player.touchedNoInputCounter
  - Global.Player.transitionRipple
  - Global.Player.tubeWorm
  - Global.Player.upperBodyFramesOffGround
  - Global.Player.upperBodyFramesOnGround
  - Global.Player.usableCamoLimit
  - Global.Player.useLevitationAirResistance
  - Global.Player.useLevitationGravity
  - Global.Player.vineClimbCursor
  - Global.Player.vineGrabDelay
  - Global.Player.vinePos
  - Global.Player.voidSceneTimer
  - Global.Player.wallSlideCounter
  - Global.Player.wantToGrab
  - Global.Player.wantToJump
  - Global.Player.warpExhausionTime
  - Global.Player.warpFatigueEffect
  - Global.Player.warpFatigueTutorialConditionTimer
  - Global.Player.warpPointCooldown
  - Global.Player.warpPointToRestore
  - Global.Player.warpSpawningRipple
  - Global.Player.warpTutorialConditionTimer
  - Global.Player.watcherAbilitySoundID
  - Global.Player.watcherAbilitySoundLoop
  - Global.Player.watcherDynamicWarpInput
  - Global.Player.whiplashJump
  - Global.Player.windAffectiveness
  - Global.Player.wormCutsceneLockon
  - Global.Player.wormCutsceneTarget
  - Global.Player.zeroGPoleGrabDir
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: Player
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: A realized Slugcat (or Slugpup) player or NPC.
  example: []
  syntax:
    content: 'public class Player : Creature, IOwnAHUD, IHaveInjectedPoisonColor'
    content.vb: Public Class Player Inherits Creature Implements IOwnAHUD, IHaveInjectedPoisonColor
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  - Global.PhysicalObject
  - Global.Creature
  implements:
  - HUD.IOwnAHUD
  - Watcher.IHaveInjectedPoisonColor
  inheritedMembers:
  - Global.Creature.blind
  - Global.Creature.deaf
  - Global.Creature.killTag
  - Global.Creature.killTagCounter
  - Global.Creature.leechedOut
  - Global.Creature.newToRoomInvinsibility
  - Global.Creature.rainDeath
  - Global.Creature.shortcutDelay
  - Global.Creature.enteringShortCut
  - Global.Creature.NPCTransportationDestination
  - Global.Creature.lastCoord
  - Global.Creature.lavaContact
  - Global.Creature.lavaContactCount
  - Global.Creature.rippleTransferCooldown
  - Global.Creature.repelLocusts
  - Global.Creature.muddy
  - Global.Creature.mudColor
  - Global.Creature.injectedPoison
  - Global.Creature.GrabbedByDaddyCorruption
  - Global.Creature.stunDamageType
  - Global.Creature.HypothermiaGain
  - Global.Creature.HypothermiaExposure
  - Global.Creature.inputWithoutDiagonals
  - Global.Creature.lastInputWithoutDiagonals
  - Global.Creature.inputWithDiagonals
  - Global.Creature.lastInputWithDiagonals
  - Global.Creature.freezeControls
  - Global.Creature.protectDeathRecursionFlag
  - Global.Creature.RecreateSticksFromAbstract
  - Global.Creature.PlaceInRoom(Room)
  - Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  - Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  - Global.Creature.NewTile
  - Global.Creature.RippleViolenceCheck(BodyChunk)
  - Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  - Global.Creature.SetKillTag(AbstractCreature)
  - Global.Creature.Blind(System.Int32)
  - Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  - Global.Creature.FlyAwayFromRoom(System.Boolean)
  - Global.Creature.Abstractize
  - Global.Creature.LoseAllGrasps
  - Global.Creature.BodyPartByIndex(System.Int32)
  - Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  - Global.Creature.UpdateGraspIndexes
  - Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  - Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  - Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  - Global.Creature.HeardNoise(Noise.InGameNoise)
  - Global.Creature.ToString
  - Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  - Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  - Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  - Global.Creature.SafariControlInputUpdate(System.Int32)
  - Global.Creature.stun
  - Global.Creature.Stunned
  - Global.Creature.Blinded
  - Global.Creature.Deaf
  - Global.Creature.mainBodyChunkIndex
  - Global.Creature.mainBodyChunk
  - Global.Creature.dead
  - Global.Creature.Consious
  - Global.Creature.VisionPoint
  - Global.Creature.inShortcut
  - Global.Creature.grasps
  - Global.Creature.DangerPos
  - Global.Creature.abstractCreature
  - Global.Creature.Template
  - Global.Creature.State
  - Global.Creature.coord
  - Global.Creature.safariControlled
  - Global.Creature.Hypothermia
  - Global.Creature.WormGrassGooduckyImmune
  - Global.PhysicalObject.bodyChunkConnections
  - Global.PhysicalObject.grabbedBy
  - Global.PhysicalObject.collisionRange
  - Global.PhysicalObject.collisionLayer
  - Global.PhysicalObject.abstractPhysicalObject
  - Global.PhysicalObject.surfaceFriction
  - Global.PhysicalObject.bounce
  - Global.PhysicalObject.impactTreshhold
  - Global.PhysicalObject.waterRetardationImmunity
  - Global.PhysicalObject.burrowFriction
  - Global.PhysicalObject.sticksRespawned
  - Global.PhysicalObject.appendages
  - Global.PhysicalObject.canBeHitByWeapons
  - Global.PhysicalObject.jollyBeingPointedCounter
  - Global.PhysicalObject.FirstChunk
  - Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  - Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  - Global.PhysicalObject.HitByWeapon(Weapon)
  - Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  - Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  - Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  - Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  - Global.PhysicalObject.SetLocalGravity(System.Single)
  - Global.PhysicalObject.GetLocalGravity
  - Global.PhysicalObject.SetLocalAirFriction(System.Single)
  - Global.PhysicalObject.WeatherInertia
  - Global.PhysicalObject.DisposeGraphicsModule
  - Global.PhysicalObject.bodyChunks
  - Global.PhysicalObject.graphicsModule
  - Global.PhysicalObject.firstChunk
  - Global.PhysicalObject.TotalMass
  - Global.PhysicalObject.RandomChunk
  - Global.PhysicalObject.gravity
  - Global.PhysicalObject.airFriction
  - Global.PhysicalObject.waterFriction
  - Global.PhysicalObject.buoyancy
  - Global.PhysicalObject.GoThroughFloors
  - Global.PhysicalObject.CollideWithTerrain
  - Global.PhysicalObject.CollideWithSlopes
  - Global.PhysicalObject.CollideWithObjects
  - Global.PhysicalObject.Buried
  - Global.PhysicalObject.WantsToBurrow
  - Global.PhysicalObject.Submersion
  - Global.PhysicalObject.SandstormImmune
  - Global.PhysicalObject.LickedByPlayer
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Player.objectPointed
  commentId: F:Global.Player.objectPointed
  id: objectPointed
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: objectPointed
  nameWithType: Player.objectPointed
  fullName: Player.objectPointed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.objectPointed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PhysicalObject objectPointed
    return:
      type: Global.PhysicalObject
    content.vb: Public objectPointed As PhysicalObject
- uid: Global.Player.requestedCameraWithoutInput
  commentId: F:Global.Player.requestedCameraWithoutInput
  id: requestedCameraWithoutInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: requestedCameraWithoutInput
  nameWithType: Player.requestedCameraWithoutInput
  fullName: Player.requestedCameraWithoutInput
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.requestedCameraWithoutInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool requestedCameraWithoutInput
    return:
      type: System.Boolean
    content.vb: Public requestedCameraWithoutInput As Boolean
- uid: Global.Player.maulTimer
  commentId: F:Global.Player.maulTimer
  id: maulTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: maulTimer
  nameWithType: Player.maulTimer
  fullName: Player.maulTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.maulTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maulTimer
    return:
      type: System.Int32
    content.vb: Public maulTimer As Integer
- uid: Global.Player.scavengerImmunity
  commentId: F:Global.Player.scavengerImmunity
  id: scavengerImmunity
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: scavengerImmunity
  nameWithType: Player.scavengerImmunity
  fullName: Player.scavengerImmunity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.scavengerImmunity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int scavengerImmunity
    return:
      type: System.Int32
    content.vb: Public scavengerImmunity As Integer
- uid: Global.Player.pyroJumpped
  commentId: F:Global.Player.pyroJumpped
  id: pyroJumpped
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pyroJumpped
  nameWithType: Player.pyroJumpped
  fullName: Player.pyroJumpped
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pyroJumpped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool pyroJumpped
    return:
      type: System.Boolean
    content.vb: Public pyroJumpped As Boolean
- uid: Global.Player.pyroJumpCounter
  commentId: F:Global.Player.pyroJumpCounter
  id: pyroJumpCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pyroJumpCounter
  nameWithType: Player.pyroJumpCounter
  fullName: Player.pyroJumpCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pyroJumpCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pyroJumpCounter
    return:
      type: System.Int32
    content.vb: Public pyroJumpCounter As Integer
- uid: Global.Player.pyroJumpCooldown
  commentId: F:Global.Player.pyroJumpCooldown
  id: pyroJumpCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pyroJumpCooldown
  nameWithType: Player.pyroJumpCooldown
  fullName: Player.pyroJumpCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pyroJumpCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pyroJumpCooldown
    return:
      type: System.Single
    content.vb: Public pyroJumpCooldown As Single
- uid: Global.Player.pyroParryCooldown
  commentId: F:Global.Player.pyroParryCooldown
  id: pyroParryCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pyroParryCooldown
  nameWithType: Player.pyroParryCooldown
  fullName: Player.pyroParryCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pyroParryCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pyroParryCooldown
    return:
      type: System.Single
    content.vb: Public pyroParryCooldown As Single
- uid: Global.Player.pyroJumpDropLock
  commentId: F:Global.Player.pyroJumpDropLock
  id: pyroJumpDropLock
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pyroJumpDropLock
  nameWithType: Player.pyroJumpDropLock
  fullName: Player.pyroJumpDropLock
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pyroJumpDropLock</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pyroJumpDropLock
    return:
      type: System.Int32
    content.vb: Public pyroJumpDropLock As Integer
- uid: Global.Player.myRobot
  commentId: F:Global.Player.myRobot
  id: myRobot
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: myRobot
  nameWithType: Player.myRobot
  fullName: Player.myRobot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.myRobot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AncientBot myRobot
    return:
      type: MoreSlugcats.AncientBot
    content.vb: Public myRobot As AncientBot
- uid: Global.Player.monkAscension
  commentId: F:Global.Player.monkAscension
  id: monkAscension
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: monkAscension
  nameWithType: Player.monkAscension
  fullName: Player.monkAscension
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.monkAscension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool monkAscension
    return:
      type: System.Boolean
    content.vb: Public monkAscension As Boolean
- uid: Global.Player.maxGodTime
  commentId: F:Global.Player.maxGodTime
  id: maxGodTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: maxGodTime
  nameWithType: Player.maxGodTime
  fullName: Player.maxGodTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.maxGodTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxGodTime
    return:
      type: System.Single
    content.vb: Public maxGodTime As Single
- uid: Global.Player.godTimer
  commentId: F:Global.Player.godTimer
  id: godTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: godTimer
  nameWithType: Player.godTimer
  fullName: Player.godTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.godTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float godTimer
    return:
      type: System.Single
    content.vb: Public godTimer As Single
- uid: Global.Player.godDeactiveTimer
  commentId: F:Global.Player.godDeactiveTimer
  id: godDeactiveTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: godDeactiveTimer
  nameWithType: Player.godDeactiveTimer
  fullName: Player.godDeactiveTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.godDeactiveTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float godDeactiveTimer
    return:
      type: System.Single
    content.vb: Public godDeactiveTimer As Single
- uid: Global.Player.godRecharging
  commentId: F:Global.Player.godRecharging
  id: godRecharging
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: godRecharging
  nameWithType: Player.godRecharging
  fullName: Player.godRecharging
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.godRecharging</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool godRecharging
    return:
      type: System.Boolean
    content.vb: Public godRecharging As Boolean
- uid: Global.Player.godWarmup
  commentId: F:Global.Player.godWarmup
  id: godWarmup
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: godWarmup
  nameWithType: Player.godWarmup
  fullName: Player.godWarmup
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.godWarmup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float godWarmup
    return:
      type: System.Single
    content.vb: Public godWarmup As Single
- uid: Global.Player.hideGodPips
  commentId: F:Global.Player.hideGodPips
  id: hideGodPips
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: hideGodPips
  nameWithType: Player.hideGodPips
  fullName: Player.hideGodPips
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.hideGodPips</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hideGodPips
    return:
      type: System.Boolean
    content.vb: Public hideGodPips As Boolean
- uid: Global.Player.killFac
  commentId: F:Global.Player.killFac
  id: killFac
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: killFac
  nameWithType: Player.killFac
  fullName: Player.killFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.killFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float killFac
    return:
      type: System.Single
    content.vb: Public killFac As Single
- uid: Global.Player.lastKillFac
  commentId: F:Global.Player.lastKillFac
  id: lastKillFac
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastKillFac
  nameWithType: Player.lastKillFac
  fullName: Player.lastKillFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastKillFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastKillFac
    return:
      type: System.Single
    content.vb: Public lastKillFac As Single
- uid: Global.Player.killWait
  commentId: F:Global.Player.killWait
  id: killWait
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: killWait
  nameWithType: Player.killWait
  fullName: Player.killWait
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.killWait</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float killWait
    return:
      type: System.Single
    content.vb: Public killWait As Single
- uid: Global.Player.lastKillWait
  commentId: F:Global.Player.lastKillWait
  id: lastKillWait
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastKillWait
  nameWithType: Player.lastKillWait
  fullName: Player.lastKillWait
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastKillWait</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastKillWait
    return:
      type: System.Single
    content.vb: Public lastKillWait As Single
- uid: Global.Player.killPressed
  commentId: F:Global.Player.killPressed
  id: killPressed
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: killPressed
  nameWithType: Player.killPressed
  fullName: Player.killPressed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.killPressed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool killPressed
    return:
      type: System.Boolean
    content.vb: Public killPressed As Boolean
- uid: Global.Player.burstVelX
  commentId: F:Global.Player.burstVelX
  id: burstVelX
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: burstVelX
  nameWithType: Player.burstVelX
  fullName: Player.burstVelX
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.burstVelX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float burstVelX
    return:
      type: System.Single
    content.vb: Public burstVelX As Single
- uid: Global.Player.burstVelY
  commentId: F:Global.Player.burstVelY
  id: burstVelY
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: burstVelY
  nameWithType: Player.burstVelY
  fullName: Player.burstVelY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.burstVelY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float burstVelY
    return:
      type: System.Single
    content.vb: Public burstVelY As Single
- uid: Global.Player.burstX
  commentId: F:Global.Player.burstX
  id: burstX
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: burstX
  nameWithType: Player.burstX
  fullName: Player.burstX
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.burstX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float burstX
    return:
      type: System.Single
    content.vb: Public burstX As Single
- uid: Global.Player.burstY
  commentId: F:Global.Player.burstY
  id: burstY
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: burstY
  nameWithType: Player.burstY
  fullName: Player.burstY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.burstY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float burstY
    return:
      type: System.Single
    content.vb: Public burstY As Single
- uid: Global.Player.tongue
  commentId: F:Global.Player.tongue
  id: tongue
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: tongue
  nameWithType: Player.tongue
  fullName: Player.tongue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.tongue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.Tongue tongue
    return:
      type: Global.Player.Tongue
    content.vb: Public tongue As Player.Tongue
- uid: Global.Player.tongueAttachTime
  commentId: F:Global.Player.tongueAttachTime
  id: tongueAttachTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: tongueAttachTime
  nameWithType: Player.tongueAttachTime
  fullName: Player.tongueAttachTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.tongueAttachTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int tongueAttachTime
    return:
      type: System.Int32
    content.vb: Public tongueAttachTime As Integer
- uid: Global.Player.voidSceneTimer
  commentId: F:Global.Player.voidSceneTimer
  id: voidSceneTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: voidSceneTimer
  nameWithType: Player.voidSceneTimer
  fullName: Player.voidSceneTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.voidSceneTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int voidSceneTimer
    return:
      type: System.Int32
    content.vb: Public voidSceneTimer As Integer
- uid: Global.Player.wormCutsceneTarget
  commentId: F:Global.Player.wormCutsceneTarget
  id: wormCutsceneTarget
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wormCutsceneTarget
  nameWithType: Player.wormCutsceneTarget
  fullName: Player.wormCutsceneTarget
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.wormCutsceneTarget</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 wormCutsceneTarget
    return:
      type: UnityEngine.Vector2
    content.vb: Public wormCutsceneTarget As Vector2
- uid: Global.Player.forceBurst
  commentId: F:Global.Player.forceBurst
  id: forceBurst
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: forceBurst
  nameWithType: Player.forceBurst
  fullName: Player.forceBurst
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.forceBurst</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool forceBurst
    return:
      type: System.Boolean
    content.vb: Public forceBurst As Boolean
- uid: Global.Player.wormCutsceneLockon
  commentId: F:Global.Player.wormCutsceneLockon
  id: wormCutsceneLockon
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wormCutsceneLockon
  nameWithType: Player.wormCutsceneLockon
  fullName: Player.wormCutsceneLockon
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.wormCutsceneLockon</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool wormCutsceneLockon
    return:
      type: System.Boolean
    content.vb: Public wormCutsceneLockon As Boolean
- uid: Global.Player.saintWeakness
  commentId: F:Global.Player.saintWeakness
  id: saintWeakness
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: saintWeakness
  nameWithType: Player.saintWeakness
  fullName: Player.saintWeakness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.saintWeakness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int saintWeakness
    return:
      type: System.Int32
    content.vb: Public saintWeakness As Integer
- uid: Global.Player.lastPingRegion
  commentId: F:Global.Player.lastPingRegion
  id: lastPingRegion
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastPingRegion
  nameWithType: Player.lastPingRegion
  fullName: Player.lastPingRegion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastPingRegion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string lastPingRegion
    return:
      type: System.String
    content.vb: Public lastPingRegion As String
- uid: Global.Player.dissolved
  commentId: F:Global.Player.dissolved
  id: dissolved
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dissolved
  nameWithType: Player.dissolved
  fullName: Player.dissolved
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dissolved</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float dissolved
    return:
      type: System.Single
    content.vb: Public dissolved As Single
- uid: Global.Player.inVoidSea
  commentId: F:Global.Player.inVoidSea
  id: inVoidSea
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: inVoidSea
  nameWithType: Player.inVoidSea
  fullName: Player.inVoidSea
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.inVoidSea</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool inVoidSea
    return:
      type: System.Boolean
    content.vb: Public inVoidSea As Boolean
- uid: Global.Player.karmaCharging
  commentId: F:Global.Player.karmaCharging
  id: karmaCharging
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: karmaCharging
  nameWithType: Player.karmaCharging
  fullName: Player.karmaCharging
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.karmaCharging</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int karmaCharging
    return:
      type: System.Int32
    content.vb: Public karmaCharging As Integer
- uid: Global.Player.npcStats
  commentId: F:Global.Player.npcStats
  id: npcStats
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: npcStats
  nameWithType: Player.npcStats
  fullName: Player.npcStats
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.npcStats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.NPCStats npcStats
    return:
      type: Global.Player.NPCStats
    content.vb: Public npcStats As Player.NPCStats
- uid: Global.Player.slugOnBack
  commentId: F:Global.Player.slugOnBack
  id: slugOnBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slugOnBack
  nameWithType: Player.slugOnBack
  fullName: Player.slugOnBack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slugOnBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.SlugOnBack slugOnBack
    return:
      type: Global.Player.SlugOnBack
    content.vb: Public slugOnBack As Player.SlugOnBack
- uid: Global.Player.onBack
  commentId: F:Global.Player.onBack
  id: onBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: onBack
  nameWithType: Player.onBack
  fullName: Player.onBack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.onBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player onBack
    return:
      type: Global.Player
    content.vb: Public onBack As Player
- uid: Global.Player.smSpearSoundReady
  commentId: F:Global.Player.smSpearSoundReady
  id: smSpearSoundReady
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: smSpearSoundReady
  nameWithType: Player.smSpearSoundReady
  fullName: Player.smSpearSoundReady
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.smSpearSoundReady</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool smSpearSoundReady
    return:
      type: System.Boolean
    content.vb: Public smSpearSoundReady As Boolean
- uid: Global.Player.controller
  commentId: F:Global.Player.controller
  id: controller
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: controller
  nameWithType: Player.controller
  fullName: Player.controller
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.controller</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.PlayerController controller
    return:
      type: Global.Player.PlayerController
    content.vb: Public controller As Player.PlayerController
- uid: Global.Player.lastPositions
  commentId: F:Global.Player.lastPositions
  id: lastPositions
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastPositions
  nameWithType: Player.lastPositions
  fullName: Player.lastPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] lastPositions
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public lastPositions As Vector2()
- uid: Global.Player.redsIllness
  commentId: F:Global.Player.redsIllness
  id: redsIllness
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: redsIllness
  nameWithType: Player.redsIllness
  fullName: Player.redsIllness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.redsIllness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RedsIllness redsIllness
    return:
      type: Global.RedsIllness
    content.vb: Public redsIllness As RedsIllness
- uid: Global.Player.standStillOnMapButton
  commentId: F:Global.Player.standStillOnMapButton
  id: standStillOnMapButton
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: standStillOnMapButton
  nameWithType: Player.standStillOnMapButton
  fullName: Player.standStillOnMapButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.standStillOnMapButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool standStillOnMapButton
    return:
      type: System.Boolean
    content.vb: Public standStillOnMapButton As Boolean
- uid: Global.Player.sporeParticleTicks
  commentId: F:Global.Player.sporeParticleTicks
  id: sporeParticleTicks
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sporeParticleTicks
  nameWithType: Player.sporeParticleTicks
  fullName: Player.sporeParticleTicks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sporeParticleTicks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sporeParticleTicks
    return:
      type: System.Int32
    content.vb: Public sporeParticleTicks As Integer
- uid: Global.Player.slowMovementStun
  commentId: F:Global.Player.slowMovementStun
  id: slowMovementStun
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slowMovementStun
  nameWithType: Player.slowMovementStun
  fullName: Player.slowMovementStun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slowMovementStun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int slowMovementStun
    return:
      type: System.Int32
    content.vb: Public slowMovementStun As Integer
- uid: Global.Player.stillInStartShelter
  commentId: F:Global.Player.stillInStartShelter
  id: stillInStartShelter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: stillInStartShelter
  nameWithType: Player.stillInStartShelter
  fullName: Player.stillInStartShelter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.stillInStartShelter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool stillInStartShelter
    return:
      type: System.Boolean
    content.vb: Public stillInStartShelter As Boolean
- uid: Global.Player.readyForWin
  commentId: F:Global.Player.readyForWin
  id: readyForWin
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: readyForWin
  nameWithType: Player.readyForWin
  fullName: Player.readyForWin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.readyForWin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyForWin
    return:
      type: System.Boolean
    content.vb: Public readyForWin As Boolean
- uid: Global.Player.jumpStun
  commentId: F:Global.Player.jumpStun
  id: jumpStun
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: jumpStun
  nameWithType: Player.jumpStun
  fullName: Player.jumpStun
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.jumpStun</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int jumpStun
    return:
      type: System.Int32
    content.vb: Public jumpStun As Integer
- uid: Global.Player.jumpBoost
  commentId: F:Global.Player.jumpBoost
  id: jumpBoost
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: jumpBoost
  nameWithType: Player.jumpBoost
  fullName: Player.jumpBoost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.jumpBoost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float jumpBoost
    return:
      type: System.Single
    content.vb: Public jumpBoost As Single
- uid: Global.Player.superLaunchJump
  commentId: F:Global.Player.superLaunchJump
  id: superLaunchJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: superLaunchJump
  nameWithType: Player.superLaunchJump
  fullName: Player.superLaunchJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.superLaunchJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int superLaunchJump
    return:
      type: System.Int32
    content.vb: Public superLaunchJump As Integer
- uid: Global.Player.wallSlideCounter
  commentId: F:Global.Player.wallSlideCounter
  id: wallSlideCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wallSlideCounter
  nameWithType: Player.wallSlideCounter
  fullName: Player.wallSlideCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.wallSlideCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wallSlideCounter
    return:
      type: System.Int32
    content.vb: Public wallSlideCounter As Integer
- uid: Global.Player.touchedNoInputCounter
  commentId: F:Global.Player.touchedNoInputCounter
  id: touchedNoInputCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: touchedNoInputCounter
  nameWithType: Player.touchedNoInputCounter
  fullName: Player.touchedNoInputCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.touchedNoInputCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int touchedNoInputCounter
    return:
      type: System.Int32
    content.vb: Public touchedNoInputCounter As Integer
- uid: Global.Player.forceSleepCounter
  commentId: F:Global.Player.forceSleepCounter
  id: forceSleepCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: forceSleepCounter
  nameWithType: Player.forceSleepCounter
  fullName: Player.forceSleepCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.forceSleepCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int forceSleepCounter
    return:
      type: System.Int32
    content.vb: Public forceSleepCounter As Integer
- uid: Global.Player.eatExternalFoodSourceCounter
  commentId: F:Global.Player.eatExternalFoodSourceCounter
  id: eatExternalFoodSourceCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: eatExternalFoodSourceCounter
  nameWithType: Player.eatExternalFoodSourceCounter
  fullName: Player.eatExternalFoodSourceCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.eatExternalFoodSourceCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eatExternalFoodSourceCounter
    return:
      type: System.Int32
    content.vb: Public eatExternalFoodSourceCounter As Integer
- uid: Global.Player.dontEatExternalFoodSourceCounter
  commentId: F:Global.Player.dontEatExternalFoodSourceCounter
  id: dontEatExternalFoodSourceCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dontEatExternalFoodSourceCounter
  nameWithType: Player.dontEatExternalFoodSourceCounter
  fullName: Player.dontEatExternalFoodSourceCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dontEatExternalFoodSourceCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dontEatExternalFoodSourceCounter
    return:
      type: System.Int32
    content.vb: Public dontEatExternalFoodSourceCounter As Integer
- uid: Global.Player.handOnExternalFoodSource
  commentId: F:Global.Player.handOnExternalFoodSource
  id: handOnExternalFoodSource
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: handOnExternalFoodSource
  nameWithType: Player.handOnExternalFoodSource
  fullName: Player.handOnExternalFoodSource
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.handOnExternalFoodSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? handOnExternalFoodSource
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public handOnExternalFoodSource As Vector2?
- uid: Global.Player.externalFoodSourceRotten
  commentId: F:Global.Player.externalFoodSourceRotten
  id: externalFoodSourceRotten
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: externalFoodSourceRotten
  nameWithType: Player.externalFoodSourceRotten
  fullName: Player.externalFoodSourceRotten
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.externalFoodSourceRotten</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool externalFoodSourceRotten
    return:
      type: System.Boolean
    content.vb: Public externalFoodSourceRotten As Boolean
- uid: Global.Player.shootUpCounter
  commentId: F:Global.Player.shootUpCounter
  id: shootUpCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: shootUpCounter
  nameWithType: Player.shootUpCounter
  fullName: Player.shootUpCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.shootUpCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int shootUpCounter
    return:
      type: System.Int32
    content.vb: Public shootUpCounter As Integer
- uid: Global.Player.consistentDownDiagonal
  commentId: F:Global.Player.consistentDownDiagonal
  id: consistentDownDiagonal
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: consistentDownDiagonal
  nameWithType: Player.consistentDownDiagonal
  fullName: Player.consistentDownDiagonal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.consistentDownDiagonal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int consistentDownDiagonal
    return:
      type: System.Int32
    content.vb: Public consistentDownDiagonal As Integer
- uid: Global.Player.allowOutOfBounds
  commentId: F:Global.Player.allowOutOfBounds
  id: allowOutOfBounds
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: allowOutOfBounds
  nameWithType: Player.allowOutOfBounds
  fullName: Player.allowOutOfBounds
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.allowOutOfBounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool allowOutOfBounds
    return:
      type: System.Boolean
    content.vb: Public allowOutOfBounds As Boolean
- uid: Global.Player.mushroomCounter
  commentId: F:Global.Player.mushroomCounter
  id: mushroomCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: mushroomCounter
  nameWithType: Player.mushroomCounter
  fullName: Player.mushroomCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.mushroomCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int mushroomCounter
    return:
      type: System.Int32
    content.vb: Public mushroomCounter As Integer
- uid: Global.Player.mushroomEffect
  commentId: F:Global.Player.mushroomEffect
  id: mushroomEffect
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: mushroomEffect
  nameWithType: Player.mushroomEffect
  fullName: Player.mushroomEffect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.mushroomEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float mushroomEffect
    return:
      type: System.Single
    content.vb: Public mushroomEffect As Single
- uid: Global.Player.adrenalineEffect
  commentId: F:Global.Player.adrenalineEffect
  id: adrenalineEffect
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: adrenalineEffect
  nameWithType: Player.adrenalineEffect
  fullName: Player.adrenalineEffect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.adrenalineEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AdrenalineEffect adrenalineEffect
    return:
      type: Global.AdrenalineEffect
    content.vb: Public adrenalineEffect As AdrenalineEffect
- uid: Global.Player.slideLoop
  commentId: F:Global.Player.slideLoop
  id: slideLoop
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slideLoop
  nameWithType: Player.slideLoop
  fullName: Player.slideLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slideLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter slideLoop
    return:
      type: Global.ChunkSoundEmitter
    content.vb: Public slideLoop As ChunkSoundEmitter
- uid: Global.Player.slideLoopSound
  commentId: F:Global.Player.slideLoopSound
  id: slideLoopSound
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slideLoopSound
  nameWithType: Player.slideLoopSound
  fullName: Player.slideLoopSound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slideLoopSound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID slideLoopSound
    return:
      type: Global.SoundID
    content.vb: Public slideLoopSound As SoundID
- uid: Global.Player.deafLoopHolder
  commentId: F:Global.Player.deafLoopHolder
  id: deafLoopHolder
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: deafLoopHolder
  nameWithType: Player.deafLoopHolder
  fullName: Player.deafLoopHolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.deafLoopHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DeafLoopHolder deafLoopHolder
    return:
      type: Global.DeafLoopHolder
    content.vb: Public deafLoopHolder As DeafLoopHolder
- uid: Global.Player.jumpChunk
  commentId: F:Global.Player.jumpChunk
  id: jumpChunk
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: jumpChunk
  nameWithType: Player.jumpChunk
  fullName: Player.jumpChunk
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.jumpChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BodyChunk jumpChunk
    return:
      type: Global.BodyChunk
    content.vb: Public jumpChunk As BodyChunk
- uid: Global.Player.jumpChunkCounter
  commentId: F:Global.Player.jumpChunkCounter
  id: jumpChunkCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: jumpChunkCounter
  nameWithType: Player.jumpChunkCounter
  fullName: Player.jumpChunkCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.jumpChunkCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int jumpChunkCounter
    return:
      type: System.Int32
    content.vb: Public jumpChunkCounter As Integer
- uid: Global.Player.addedSpawnRoomToDiscovery
  commentId: F:Global.Player.addedSpawnRoomToDiscovery
  id: addedSpawnRoomToDiscovery
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: addedSpawnRoomToDiscovery
  nameWithType: Player.addedSpawnRoomToDiscovery
  fullName: Player.addedSpawnRoomToDiscovery
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.addedSpawnRoomToDiscovery</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool addedSpawnRoomToDiscovery
    return:
      type: System.Boolean
    content.vb: Public addedSpawnRoomToDiscovery As Boolean
- uid: Global.Player.initRunSpeedFac
  commentId: F:Global.Player.initRunSpeedFac
  id: initRunSpeedFac
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: initRunSpeedFac
  nameWithType: Player.initRunSpeedFac
  fullName: Player.initRunSpeedFac
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.initRunSpeedFac</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float initRunSpeedFac
    return:
      type: System.Single
    content.vb: Public initRunSpeedFac As Single
- uid: Global.Player.warpPointCooldown
  commentId: F:Global.Player.warpPointCooldown
  id: warpPointCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpPointCooldown
  nameWithType: Player.warpPointCooldown
  fullName: Player.warpPointCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpPointCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int warpPointCooldown
    return:
      type: System.Int32
    content.vb: Public warpPointCooldown As Integer
- uid: Global.Player.standingInWarpPointProtectionTime
  commentId: F:Global.Player.standingInWarpPointProtectionTime
  id: standingInWarpPointProtectionTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: standingInWarpPointProtectionTime
  nameWithType: Player.standingInWarpPointProtectionTime
  fullName: Player.standingInWarpPointProtectionTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.standingInWarpPointProtectionTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int standingInWarpPointProtectionTime
    return:
      type: System.Int32
    content.vb: Public standingInWarpPointProtectionTime As Integer
- uid: Global.Player.exhausted
  commentId: F:Global.Player.exhausted
  id: exhausted
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: exhausted
  nameWithType: Player.exhausted
  fullName: Player.exhausted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.exhausted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool exhausted
    return:
      type: System.Boolean
    content.vb: Public exhausted As Boolean
- uid: Global.Player.dangerGrasp
  commentId: F:Global.Player.dangerGrasp
  id: dangerGrasp
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dangerGrasp
  nameWithType: Player.dangerGrasp
  fullName: Player.dangerGrasp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dangerGrasp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature.Grasp dangerGrasp
    return:
      type: Global.Creature.Grasp
    content.vb: Public dangerGrasp As Creature.Grasp
- uid: Global.Player.dangerGraspTime
  commentId: F:Global.Player.dangerGraspTime
  id: dangerGraspTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dangerGraspTime
  nameWithType: Player.dangerGraspTime
  fullName: Player.dangerGraspTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dangerGraspTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dangerGraspTime
    return:
      type: System.Int32
    content.vb: Public dangerGraspTime As Integer
- uid: Global.Player.dangerGraspLastThrowButton
  commentId: F:Global.Player.dangerGraspLastThrowButton
  id: dangerGraspLastThrowButton
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dangerGraspLastThrowButton
  nameWithType: Player.dangerGraspLastThrowButton
  fullName: Player.dangerGraspLastThrowButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dangerGraspLastThrowButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dangerGraspLastThrowButton
    return:
      type: System.Boolean
    content.vb: Public dangerGraspLastThrowButton As Boolean
- uid: Global.Player.dangerGraspPickupButton
  commentId: F:Global.Player.dangerGraspPickupButton
  id: dangerGraspPickupButton
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dangerGraspPickupButton
  nameWithType: Player.dangerGraspPickupButton
  fullName: Player.dangerGraspPickupButton
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dangerGraspPickupButton</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dangerGraspPickupButton
    return:
      type: System.Boolean
    content.vb: Public dangerGraspPickupButton As Boolean
- uid: Global.Player.wantToJump
  commentId: F:Global.Player.wantToJump
  id: wantToJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wantToJump
  nameWithType: Player.wantToJump
  fullName: Player.wantToJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.wantToJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wantToJump
    return:
      type: System.Int32
    content.vb: Public wantToJump As Integer
- uid: Global.Player.canJump
  commentId: F:Global.Player.canJump
  id: canJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: canJump
  nameWithType: Player.canJump
  fullName: Player.canJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.canJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int canJump
    return:
      type: System.Int32
    content.vb: Public canJump As Integer
- uid: Global.Player.wantToGrab
  commentId: F:Global.Player.wantToGrab
  id: wantToGrab
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: wantToGrab
  nameWithType: Player.wantToGrab
  fullName: Player.wantToGrab
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.wantToGrab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wantToGrab
    return:
      type: System.Int32
    content.vb: Public wantToGrab As Integer
- uid: Global.Player.canWallJump
  commentId: F:Global.Player.canWallJump
  id: canWallJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: canWallJump
  nameWithType: Player.canWallJump
  fullName: Player.canWallJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.canWallJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int canWallJump
    return:
      type: System.Int32
    content.vb: Public canWallJump As Integer
- uid: Global.Player.swimCycle
  commentId: F:Global.Player.swimCycle
  id: swimCycle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: swimCycle
  nameWithType: Player.swimCycle
  fullName: Player.swimCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.swimCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float swimCycle
    return:
      type: System.Single
    content.vb: Public swimCycle As Single
- uid: Global.Player.diveForce
  commentId: F:Global.Player.diveForce
  id: diveForce
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: diveForce
  nameWithType: Player.diveForce
  fullName: Player.diveForce
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.diveForce</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float diveForce
    return:
      type: System.Single
    content.vb: Public diveForce As Single
- uid: Global.Player.sleepCurlUp
  commentId: F:Global.Player.sleepCurlUp
  id: sleepCurlUp
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sleepCurlUp
  nameWithType: Player.sleepCurlUp
  fullName: Player.sleepCurlUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sleepCurlUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sleepCurlUp
    return:
      type: System.Single
    content.vb: Public sleepCurlUp As Single
- uid: Global.Player.sleepCounter
  commentId: F:Global.Player.sleepCounter
  id: sleepCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sleepCounter
  nameWithType: Player.sleepCounter
  fullName: Player.sleepCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sleepCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sleepCounter
    return:
      type: System.Int32
    content.vb: Public sleepCounter As Integer
- uid: Global.Player.sleepWhenStill
  commentId: F:Global.Player.sleepWhenStill
  id: sleepWhenStill
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sleepWhenStill
  nameWithType: Player.sleepWhenStill
  fullName: Player.sleepWhenStill
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sleepWhenStill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool sleepWhenStill
    return:
      type: System.Boolean
    content.vb: Public sleepWhenStill As Boolean
- uid: Global.Player.allowRoll
  commentId: F:Global.Player.allowRoll
  id: allowRoll
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: allowRoll
  nameWithType: Player.allowRoll
  fullName: Player.allowRoll
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.allowRoll</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int allowRoll
    return:
      type: System.Int32
    content.vb: Public allowRoll As Integer
- uid: Global.Player.rollDirection
  commentId: F:Global.Player.rollDirection
  id: rollDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rollDirection
  nameWithType: Player.rollDirection
  fullName: Player.rollDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rollDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rollDirection
    return:
      type: System.Int32
    content.vb: Public rollDirection As Integer
- uid: Global.Player.rollCounter
  commentId: F:Global.Player.rollCounter
  id: rollCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rollCounter
  nameWithType: Player.rollCounter
  fullName: Player.rollCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rollCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rollCounter
    return:
      type: System.Int32
    content.vb: Public rollCounter As Integer
- uid: Global.Player.rocketJumpFromBellySlide
  commentId: F:Global.Player.rocketJumpFromBellySlide
  id: rocketJumpFromBellySlide
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rocketJumpFromBellySlide
  nameWithType: Player.rocketJumpFromBellySlide
  fullName: Player.rocketJumpFromBellySlide
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rocketJumpFromBellySlide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rocketJumpFromBellySlide
    return:
      type: System.Boolean
    content.vb: Public rocketJumpFromBellySlide As Boolean
- uid: Global.Player.flipFromSlide
  commentId: F:Global.Player.flipFromSlide
  id: flipFromSlide
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: flipFromSlide
  nameWithType: Player.flipFromSlide
  fullName: Player.flipFromSlide
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.flipFromSlide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool flipFromSlide
    return:
      type: System.Boolean
    content.vb: Public flipFromSlide As Boolean
- uid: Global.Player.initSlideCounter
  commentId: F:Global.Player.initSlideCounter
  id: initSlideCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: initSlideCounter
  nameWithType: Player.initSlideCounter
  fullName: Player.initSlideCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.initSlideCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int initSlideCounter
    return:
      type: System.Int32
    content.vb: Public initSlideCounter As Integer
- uid: Global.Player.slideCounter
  commentId: F:Global.Player.slideCounter
  id: slideCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slideCounter
  nameWithType: Player.slideCounter
  fullName: Player.slideCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slideCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int slideCounter
    return:
      type: System.Int32
    content.vb: Public slideCounter As Integer
- uid: Global.Player.slideDirection
  commentId: F:Global.Player.slideDirection
  id: slideDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slideDirection
  nameWithType: Player.slideDirection
  fullName: Player.slideDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slideDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int slideDirection
    return:
      type: System.Int32
    content.vb: Public slideDirection As Integer
- uid: Global.Player.eatCounter
  commentId: F:Global.Player.eatCounter
  id: eatCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: eatCounter
  nameWithType: Player.eatCounter
  fullName: Player.eatCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.eatCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eatCounter
    return:
      type: System.Int32
    content.vb: Public eatCounter As Integer
- uid: Global.Player.eyesClosedTime
  commentId: F:Global.Player.eyesClosedTime
  id: eyesClosedTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: eyesClosedTime
  nameWithType: Player.eyesClosedTime
  fullName: Player.eyesClosedTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.eyesClosedTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eyesClosedTime
    return:
      type: System.Int32
    content.vb: Public eyesClosedTime As Integer
- uid: Global.Player.karmaFlowerGrowPos
  commentId: F:Global.Player.karmaFlowerGrowPos
  id: karmaFlowerGrowPos
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: karmaFlowerGrowPos
  nameWithType: Player.karmaFlowerGrowPos
  fullName: Player.karmaFlowerGrowPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.karmaFlowerGrowPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate? karmaFlowerGrowPos
    return:
      type: System.Nullable{WorldCoordinate}
    content.vb: Public karmaFlowerGrowPos As WorldCoordinate?
- uid: Global.Player.forceFeetToHorizontalBeamTile
  commentId: F:Global.Player.forceFeetToHorizontalBeamTile
  id: forceFeetToHorizontalBeamTile
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: forceFeetToHorizontalBeamTile
  nameWithType: Player.forceFeetToHorizontalBeamTile
  fullName: Player.forceFeetToHorizontalBeamTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.forceFeetToHorizontalBeamTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int forceFeetToHorizontalBeamTile
    return:
      type: System.Int32
    content.vb: Public forceFeetToHorizontalBeamTile As Integer
- uid: Global.Player.glowing
  commentId: F:Global.Player.glowing
  id: glowing
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: glowing
  nameWithType: Player.glowing
  fullName: Player.glowing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.glowing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool glowing
    return:
      type: System.Boolean
    content.vb: Public glowing As Boolean
- uid: Global.Player.aerobicLevel
  commentId: F:Global.Player.aerobicLevel
  id: aerobicLevel
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: aerobicLevel
  nameWithType: Player.aerobicLevel
  fullName: Player.aerobicLevel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.aerobicLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float aerobicLevel
    return:
      type: System.Single
    content.vb: Public aerobicLevel As Single
- uid: Global.Player.standing
  commentId: F:Global.Player.standing
  id: standing
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: standing
  nameWithType: Player.standing
  fullName: Player.standing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.standing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool standing
    return:
      type: System.Boolean
    content.vb: Public standing As Boolean
- uid: Global.Player.playerInAntlers
  commentId: F:Global.Player.playerInAntlers
  id: playerInAntlers
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: playerInAntlers
  nameWithType: Player.playerInAntlers
  fullName: Player.playerInAntlers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.playerInAntlers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Deer.PlayerInAntlers playerInAntlers
    return:
      type: Global.Deer.PlayerInAntlers
    content.vb: Public playerInAntlers As Deer.PlayerInAntlers
- uid: Global.Player.tubeWorm
  commentId: F:Global.Player.tubeWorm
  id: tubeWorm
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: tubeWorm
  nameWithType: Player.tubeWorm
  fullName: Player.tubeWorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.tubeWorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TubeWorm tubeWorm
    return:
      type: Global.TubeWorm
    content.vb: Public tubeWorm As TubeWorm
- uid: Global.Player.swimBits
  commentId: F:Global.Player.swimBits
  id: swimBits
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: swimBits
  nameWithType: Player.swimBits
  fullName: Player.swimBits
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.swimBits</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CoralCircuit.CircuitBit[] swimBits
    return:
      type: CoralBrain.CoralCircuit.CircuitBit[]
    content.vb: Public swimBits As CoralCircuit.CircuitBit()
- uid: Global.Player.circuitSwimResistance
  commentId: F:Global.Player.circuitSwimResistance
  id: circuitSwimResistance
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: circuitSwimResistance
  nameWithType: Player.circuitSwimResistance
  fullName: Player.circuitSwimResistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.circuitSwimResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float circuitSwimResistance
    return:
      type: System.Single
    content.vb: Public circuitSwimResistance As Single
- uid: Global.Player.curcuitJumpMeter
  commentId: F:Global.Player.curcuitJumpMeter
  id: curcuitJumpMeter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: curcuitJumpMeter
  nameWithType: Player.curcuitJumpMeter
  fullName: Player.curcuitJumpMeter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.curcuitJumpMeter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float curcuitJumpMeter
    return:
      type: System.Single
    content.vb: Public curcuitJumpMeter As Single
- uid: Global.Player.exitsToBeDiscovered
  commentId: F:Global.Player.exitsToBeDiscovered
  id: exitsToBeDiscovered
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: exitsToBeDiscovered
  nameWithType: Player.exitsToBeDiscovered
  fullName: Player.exitsToBeDiscovered
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.exitsToBeDiscovered</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2> exitsToBeDiscovered
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2}
    content.vb: Public exitsToBeDiscovered As List(Of Vector2)
- uid: Global.Player.injectedPoisonColor
  commentId: F:Global.Player.injectedPoisonColor
  id: injectedPoisonColor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: injectedPoisonColor
  nameWithType: Player.injectedPoisonColor
  fullName: Player.injectedPoisonColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.injectedPoisonColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color injectedPoisonColor
    return:
      type: UnityEngine.Color
    content.vb: Public injectedPoisonColor As Color
- uid: Global.Player.mapInput
  commentId: F:Global.Player.mapInput
  id: mapInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: mapInput
  nameWithType: Player.mapInput
  fullName: Player.mapInput
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.mapInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage mapInput
    return:
      type: Global.Player.InputPackage
    content.vb: Public mapInput As Player.InputPackage
- uid: Global.Player.airInLungs
  commentId: F:Global.Player.airInLungs
  id: airInLungs
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: airInLungs
  nameWithType: Player.airInLungs
  fullName: Player.airInLungs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.airInLungs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float airInLungs
    return:
      type: System.Single
    content.vb: Public airInLungs As Single
- uid: Global.Player.lungsExhausted
  commentId: F:Global.Player.lungsExhausted
  id: lungsExhausted
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lungsExhausted
  nameWithType: Player.lungsExhausted
  fullName: Player.lungsExhausted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lungsExhausted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool lungsExhausted
    return:
      type: System.Boolean
    content.vb: Public lungsExhausted As Boolean
- uid: Global.Player.submerged
  commentId: F:Global.Player.submerged
  id: submerged
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: submerged
  nameWithType: Player.submerged
  fullName: Player.submerged
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.submerged</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool submerged
    return:
      type: System.Boolean
    content.vb: Public submerged As Boolean
- uid: Global.Player.drown
  commentId: F:Global.Player.drown
  id: drown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: drown
  nameWithType: Player.drown
  fullName: Player.drown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.drown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float drown
    return:
      type: System.Single
    content.vb: Public drown As Single
- uid: Global.Player.ripple
  commentId: F:Global.Player.ripple
  id: ripple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ripple
  nameWithType: Player.ripple
  fullName: Player.ripple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.ripple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CosmeticRipple ripple
    return:
      type: Watcher.CosmeticRipple
    content.vb: Public ripple As CosmeticRipple
- uid: Global.Player.ripRep
  commentId: F:Global.Player.ripRep
  id: ripRep
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ripRep
  nameWithType: Player.ripRep
  fullName: Player.ripRep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.ripRep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CosmeticRippleRepresentation ripRep
    return:
      type: Watcher.CosmeticRippleRepresentation
    content.vb: Public ripRep As CosmeticRippleRepresentation
- uid: Global.Player.BadWarpExitPrimed
  commentId: F:Global.Player.BadWarpExitPrimed
  id: BadWarpExitPrimed
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: BadWarpExitPrimed
  nameWithType: Player.BadWarpExitPrimed
  fullName: Player.BadWarpExitPrimed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.BadWarpExitPrimed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BadWarpExitPrimed
    return:
      type: System.Boolean
    content.vb: Public BadWarpExitPrimed As Boolean
- uid: Global.Player.gourmandExhausted
  commentId: F:Global.Player.gourmandExhausted
  id: gourmandExhausted
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: gourmandExhausted
  nameWithType: Player.gourmandExhausted
  fullName: Player.gourmandExhausted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.gourmandExhausted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool gourmandExhausted
    return:
      type: System.Boolean
    content.vb: Public gourmandExhausted As Boolean
- uid: Global.Player.chatlog
  commentId: F:Global.Player.chatlog
  id: chatlog
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: chatlog
  nameWithType: Player.chatlog
  fullName: Player.chatlog
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.chatlog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool chatlog
    return:
      type: System.Boolean
    content.vb: Public chatlog As Boolean
- uid: Global.Player.chatlogID
  commentId: F:Global.Player.chatlogID
  id: chatlogID
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: chatlogID
  nameWithType: Player.chatlogID
  fullName: Player.chatlogID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.chatlogID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChatlogData.ChatlogID chatlogID
    return:
      type: MoreSlugcats.ChatlogData.ChatlogID
    content.vb: Public chatlogID As ChatlogData.ChatlogID
- uid: Global.Player.chatlogCounter
  commentId: F:Global.Player.chatlogCounter
  id: chatlogCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: chatlogCounter
  nameWithType: Player.chatlogCounter
  fullName: Player.chatlogCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.chatlogCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int chatlogCounter
    return:
      type: System.Int32
    content.vb: Public chatlogCounter As Integer
- uid: Global.Player.SlugCatClass
  commentId: F:Global.Player.SlugCatClass
  id: SlugCatClass
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SlugCatClass
  nameWithType: Player.SlugCatClass
  fullName: Player.SlugCatClass
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.SlugCatClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Name SlugCatClass
    return:
      type: Global.SlugcatStats.Name
    content.vb: Public SlugCatClass As SlugcatStats.Name
- uid: Global.Player.timeSinceSpawned
  commentId: F:Global.Player.timeSinceSpawned
  id: timeSinceSpawned
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: timeSinceSpawned
  nameWithType: Player.timeSinceSpawned
  fullName: Player.timeSinceSpawned
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.timeSinceSpawned</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeSinceSpawned
    return:
      type: System.Int32
    content.vb: Public timeSinceSpawned As Integer
- uid: Global.Player.customPlayerGravity
  commentId: F:Global.Player.customPlayerGravity
  id: customPlayerGravity
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: customPlayerGravity
  nameWithType: Player.customPlayerGravity
  fullName: Player.customPlayerGravity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.customPlayerGravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float customPlayerGravity
    return:
      type: System.Single
    content.vb: Public customPlayerGravity As Single
- uid: Global.Player.reloadCounter
  commentId: F:Global.Player.reloadCounter
  id: reloadCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: reloadCounter
  nameWithType: Player.reloadCounter
  fullName: Player.reloadCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.reloadCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int reloadCounter
    return:
      type: System.Int32
    content.vb: Public reloadCounter As Integer
- uid: Global.Player.lastGroundY
  commentId: F:Global.Player.lastGroundY
  id: lastGroundY
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastGroundY
  nameWithType: Player.lastGroundY
  fullName: Player.lastGroundY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastGroundY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastGroundY
    return:
      type: System.Single
    content.vb: Public lastGroundY As Single
- uid: Global.Player.craftingObject
  commentId: F:Global.Player.craftingObject
  id: craftingObject
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: craftingObject
  nameWithType: Player.craftingObject
  fullName: Player.craftingObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.craftingObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool craftingObject
    return:
      type: System.Boolean
    content.vb: Public craftingObject As Boolean
- uid: Global.Player.sofCooldown
  commentId: F:Global.Player.sofCooldown
  id: sofCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sofCooldown
  nameWithType: Player.sofCooldown
  fullName: Player.sofCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sofCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sofCooldown
    return:
      type: System.Int32
    content.vb: Public sofCooldown As Integer
- uid: Global.Player.sceneFlag
  commentId: F:Global.Player.sceneFlag
  id: sceneFlag
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: sceneFlag
  nameWithType: Player.sceneFlag
  fullName: Player.sceneFlag
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.sceneFlag</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool sceneFlag
    return:
      type: System.Boolean
    content.vb: Public sceneFlag As Boolean
- uid: Global.Player.craftingTutorial
  commentId: F:Global.Player.craftingTutorial
  id: craftingTutorial
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: craftingTutorial
  nameWithType: Player.craftingTutorial
  fullName: Player.craftingTutorial
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.craftingTutorial</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool craftingTutorial
    return:
      type: System.Boolean
    content.vb: Public craftingTutorial As Boolean
- uid: Global.Player.showKarmaFoodRainTime
  commentId: F:Global.Player.showKarmaFoodRainTime
  id: showKarmaFoodRainTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showKarmaFoodRainTime
  nameWithType: Player.showKarmaFoodRainTime
  fullName: Player.showKarmaFoodRainTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.showKarmaFoodRainTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int showKarmaFoodRainTime
    return:
      type: System.Int32
    content.vb: Public showKarmaFoodRainTime As Integer
- uid: Global.Player.gourmandAttackNegateTime
  commentId: F:Global.Player.gourmandAttackNegateTime
  id: gourmandAttackNegateTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: gourmandAttackNegateTime
  nameWithType: Player.gourmandAttackNegateTime
  fullName: Player.gourmandAttackNegateTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.gourmandAttackNegateTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int gourmandAttackNegateTime
    return:
      type: System.Int32
    content.vb: Public gourmandAttackNegateTime As Integer
- uid: Global.Player.pullupSoftlockSafety
  commentId: F:Global.Player.pullupSoftlockSafety
  id: pullupSoftlockSafety
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: pullupSoftlockSafety
  nameWithType: Player.pullupSoftlockSafety
  fullName: Player.pullupSoftlockSafety
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.pullupSoftlockSafety</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pullupSoftlockSafety
    return:
      type: System.Int32
    content.vb: Public pullupSoftlockSafety As Integer
- uid: Global.Player.lastGoodTrackerSpawnRoom
  commentId: F:Global.Player.lastGoodTrackerSpawnRoom
  id: lastGoodTrackerSpawnRoom
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastGoodTrackerSpawnRoom
  nameWithType: Player.lastGoodTrackerSpawnRoom
  fullName: Player.lastGoodTrackerSpawnRoom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastGoodTrackerSpawnRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string lastGoodTrackerSpawnRoom
    return:
      type: System.String
    content.vb: Public lastGoodTrackerSpawnRoom As String
- uid: Global.Player.lastGoodTrackerSpawnRegion
  commentId: F:Global.Player.lastGoodTrackerSpawnRegion
  id: lastGoodTrackerSpawnRegion
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastGoodTrackerSpawnRegion
  nameWithType: Player.lastGoodTrackerSpawnRegion
  fullName: Player.lastGoodTrackerSpawnRegion
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastGoodTrackerSpawnRegion</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string lastGoodTrackerSpawnRegion
    return:
      type: System.String
    content.vb: Public lastGoodTrackerSpawnRegion As String
- uid: Global.Player.lastGoodTrackerSpawnCoord
  commentId: F:Global.Player.lastGoodTrackerSpawnCoord
  id: lastGoodTrackerSpawnCoord
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastGoodTrackerSpawnCoord
  nameWithType: Player.lastGoodTrackerSpawnCoord
  fullName: Player.lastGoodTrackerSpawnCoord
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lastGoodTrackerSpawnCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate lastGoodTrackerSpawnCoord
    return:
      type: Global.WorldCoordinate
    content.vb: Public lastGoodTrackerSpawnCoord As WorldCoordinate
- uid: Global.Player.zeroGPoleGrabDir
  commentId: F:Global.Player.zeroGPoleGrabDir
  id: zeroGPoleGrabDir
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: zeroGPoleGrabDir
  nameWithType: Player.zeroGPoleGrabDir
  fullName: Player.zeroGPoleGrabDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.zeroGPoleGrabDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 zeroGPoleGrabDir
    return:
      type: RWCustom.IntVector2
    content.vb: Public zeroGPoleGrabDir As IntVector2
- uid: Global.Player.animation
  commentId: F:Global.Player.animation
  id: animation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: animation
  nameWithType: Player.animation
  fullName: Player.animation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.animation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.AnimationIndex animation
    return:
      type: Global.Player.AnimationIndex
    content.vb: Public animation As Player.AnimationIndex
- uid: Global.Player.whiplashJump
  commentId: F:Global.Player.whiplashJump
  id: whiplashJump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: whiplashJump
  nameWithType: Player.whiplashJump
  fullName: Player.whiplashJump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.whiplashJump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool whiplashJump
    return:
      type: System.Boolean
    content.vb: Public whiplashJump As Boolean
- uid: Global.Player.longBellySlide
  commentId: F:Global.Player.longBellySlide
  id: longBellySlide
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: longBellySlide
  nameWithType: Player.longBellySlide
  fullName: Player.longBellySlide
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.longBellySlide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool longBellySlide
    return:
      type: System.Boolean
    content.vb: Public longBellySlide As Boolean
- uid: Global.Player.stopRollingCounter
  commentId: F:Global.Player.stopRollingCounter
  id: stopRollingCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: stopRollingCounter
  nameWithType: Player.stopRollingCounter
  fullName: Player.stopRollingCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.stopRollingCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int stopRollingCounter
    return:
      type: System.Int32
    content.vb: Public stopRollingCounter As Integer
- uid: Global.Player.slideUpPole
  commentId: F:Global.Player.slideUpPole
  id: slideUpPole
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slideUpPole
  nameWithType: Player.slideUpPole
  fullName: Player.slideUpPole
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.slideUpPole</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int slideUpPole
    return:
      type: System.Int32
    content.vb: Public slideUpPole As Integer
- uid: Global.Player.vinePos
  commentId: F:Global.Player.vinePos
  id: vinePos
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: vinePos
  nameWithType: Player.vinePos
  fullName: Player.vinePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.vinePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ClimbableVinesSystem.VinePosition vinePos
    return:
      type: Global.ClimbableVinesSystem.VinePosition
    content.vb: Public vinePos As ClimbableVinesSystem.VinePosition
- uid: Global.Player.vineClimbCursor
  commentId: F:Global.Player.vineClimbCursor
  id: vineClimbCursor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: vineClimbCursor
  nameWithType: Player.vineClimbCursor
  fullName: Player.vineClimbCursor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.vineClimbCursor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 vineClimbCursor
    return:
      type: UnityEngine.Vector2
    content.vb: Public vineClimbCursor As Vector2
- uid: Global.Player.vineGrabDelay
  commentId: F:Global.Player.vineGrabDelay
  id: vineGrabDelay
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: vineGrabDelay
  nameWithType: Player.vineGrabDelay
  fullName: Player.vineGrabDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.vineGrabDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int vineGrabDelay
    return:
      type: System.Int32
    content.vb: Public vineGrabDelay As Integer
- uid: Global.Player.bodyMode
  commentId: F:Global.Player.bodyMode
  id: bodyMode
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: bodyMode
  nameWithType: Player.bodyMode
  fullName: Player.bodyMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.bodyMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.BodyModeIndex bodyMode
    return:
      type: Global.Player.BodyModeIndex
    content.vb: Public bodyMode As Player.BodyModeIndex
- uid: Global.Player.leftFoot
  commentId: F:Global.Player.leftFoot
  id: leftFoot
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: leftFoot
  nameWithType: Player.leftFoot
  fullName: Player.leftFoot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.leftFoot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool leftFoot
    return:
      type: System.Boolean
    content.vb: Public leftFoot As Boolean
- uid: Global.Player.lowerBodyFramesOnGround
  commentId: F:Global.Player.lowerBodyFramesOnGround
  id: lowerBodyFramesOnGround
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lowerBodyFramesOnGround
  nameWithType: Player.lowerBodyFramesOnGround
  fullName: Player.lowerBodyFramesOnGround
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lowerBodyFramesOnGround</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lowerBodyFramesOnGround
    return:
      type: System.Int32
    content.vb: Public lowerBodyFramesOnGround As Integer
- uid: Global.Player.lowerBodyFramesOffGround
  commentId: F:Global.Player.lowerBodyFramesOffGround
  id: lowerBodyFramesOffGround
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lowerBodyFramesOffGround
  nameWithType: Player.lowerBodyFramesOffGround
  fullName: Player.lowerBodyFramesOffGround
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.lowerBodyFramesOffGround</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lowerBodyFramesOffGround
    return:
      type: System.Int32
    content.vb: Public lowerBodyFramesOffGround As Integer
- uid: Global.Player.upperBodyFramesOnGround
  commentId: F:Global.Player.upperBodyFramesOnGround
  id: upperBodyFramesOnGround
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: upperBodyFramesOnGround
  nameWithType: Player.upperBodyFramesOnGround
  fullName: Player.upperBodyFramesOnGround
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.upperBodyFramesOnGround</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int upperBodyFramesOnGround
    return:
      type: System.Int32
    content.vb: Public upperBodyFramesOnGround As Integer
- uid: Global.Player.upperBodyFramesOffGround
  commentId: F:Global.Player.upperBodyFramesOffGround
  id: upperBodyFramesOffGround
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: upperBodyFramesOffGround
  nameWithType: Player.upperBodyFramesOffGround
  fullName: Player.upperBodyFramesOffGround
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.upperBodyFramesOffGround</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int upperBodyFramesOffGround
    return:
      type: System.Int32
    content.vb: Public upperBodyFramesOffGround As Integer
- uid: Global.Player.dropGrabTile
  commentId: F:Global.Player.dropGrabTile
  id: dropGrabTile
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dropGrabTile
  nameWithType: Player.dropGrabTile
  fullName: Player.dropGrabTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dropGrabTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2? dropGrabTile
    return:
      type: System.Nullable{RWCustom.IntVector2}
    content.vb: Public dropGrabTile As IntVector2?
- uid: Global.Player.switchHandsCounter
  commentId: F:Global.Player.switchHandsCounter
  id: switchHandsCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: switchHandsCounter
  nameWithType: Player.switchHandsCounter
  fullName: Player.switchHandsCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.switchHandsCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int switchHandsCounter
    return:
      type: System.Int32
    content.vb: Public switchHandsCounter As Integer
- uid: Global.Player.noPickUpOnRelease
  commentId: F:Global.Player.noPickUpOnRelease
  id: noPickUpOnRelease
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: noPickUpOnRelease
  nameWithType: Player.noPickUpOnRelease
  fullName: Player.noPickUpOnRelease
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.noPickUpOnRelease</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int noPickUpOnRelease
    return:
      type: System.Int32
    content.vb: Public noPickUpOnRelease As Integer
- uid: Global.Player.switchHandsProcess
  commentId: F:Global.Player.switchHandsProcess
  id: switchHandsProcess
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: switchHandsProcess
  nameWithType: Player.switchHandsProcess
  fullName: Player.switchHandsProcess
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.switchHandsProcess</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float switchHandsProcess
    return:
      type: System.Single
    content.vb: Public switchHandsProcess As Single
- uid: Global.Player.swallowAndRegurgitateCounter
  commentId: F:Global.Player.swallowAndRegurgitateCounter
  id: swallowAndRegurgitateCounter
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: swallowAndRegurgitateCounter
  nameWithType: Player.swallowAndRegurgitateCounter
  fullName: Player.swallowAndRegurgitateCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.swallowAndRegurgitateCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int swallowAndRegurgitateCounter
    return:
      type: System.Int32
    content.vb: Public swallowAndRegurgitateCounter As Integer
- uid: Global.Player.objectInStomach
  commentId: F:Global.Player.objectInStomach
  id: objectInStomach
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: objectInStomach
  nameWithType: Player.objectInStomach
  fullName: Player.objectInStomach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.objectInStomach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject objectInStomach
    return:
      type: Global.AbstractPhysicalObject
    content.vb: Public objectInStomach As AbstractPhysicalObject
- uid: Global.Player.eatMeat
  commentId: F:Global.Player.eatMeat
  id: eatMeat
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: eatMeat
  nameWithType: Player.eatMeat
  fullName: Player.eatMeat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.eatMeat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int eatMeat
    return:
      type: System.Int32
    content.vb: Public eatMeat As Integer
- uid: Global.Player.spearOnBack
  commentId: F:Global.Player.spearOnBack
  id: spearOnBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: spearOnBack
  nameWithType: Player.spearOnBack
  fullName: Player.spearOnBack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.spearOnBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.SpearOnBack spearOnBack
    return:
      type: Global.Player.SpearOnBack
    content.vb: Public spearOnBack As Player.SpearOnBack
- uid: Global.Player.camoProgress
  commentId: F:Global.Player.camoProgress
  id: camoProgress
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoProgress
  nameWithType: Player.camoProgress
  fullName: Player.camoProgress
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.camoProgress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float camoProgress
    return:
      type: System.Single
    content.vb: Public camoProgress As Single
- uid: Global.Player.isCamo
  commentId: F:Global.Player.isCamo
  id: isCamo
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isCamo
  nameWithType: Player.isCamo
  fullName: Player.isCamo
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.isCamo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isCamo
    return:
      type: System.Boolean
    content.vb: Public isCamo As Boolean
- uid: Global.Player.inCamoTime
  commentId: F:Global.Player.inCamoTime
  id: inCamoTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: inCamoTime
  nameWithType: Player.inCamoTime
  fullName: Player.inCamoTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.inCamoTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int inCamoTime
    return:
      type: System.Int32
    content.vb: Public inCamoTime As Integer
- uid: Global.Player.outOfCamoTime
  commentId: F:Global.Player.outOfCamoTime
  id: outOfCamoTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: outOfCamoTime
  nameWithType: Player.outOfCamoTime
  fullName: Player.outOfCamoTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.outOfCamoTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int outOfCamoTime
    return:
      type: System.Int32
    content.vb: Public outOfCamoTime As Integer
- uid: Global.Player.camoCharge
  commentId: F:Global.Player.camoCharge
  id: camoCharge
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoCharge
  nameWithType: Player.camoCharge
  fullName: Player.camoCharge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.camoCharge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float camoCharge
    return:
      type: System.Single
    content.vb: Public camoCharge As Single
- uid: Global.Player.camoRechargePenalty
  commentId: F:Global.Player.camoRechargePenalty
  id: camoRechargePenalty
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoRechargePenalty
  nameWithType: Player.camoRechargePenalty
  fullName: Player.camoRechargePenalty
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.camoRechargePenalty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int camoRechargePenalty
    return:
      type: System.Int32
    content.vb: Public camoRechargePenalty As Integer
- uid: Global.Player.transitionRipple
  commentId: F:Global.Player.transitionRipple
  id: transitionRipple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: transitionRipple
  nameWithType: Player.transitionRipple
  fullName: Player.transitionRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.transitionRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CosmeticRipple transitionRipple
    return:
      type: Watcher.CosmeticRipple
    content.vb: Public transitionRipple As CosmeticRipple
- uid: Global.Player.warpSpawningRipple
  commentId: F:Global.Player.warpSpawningRipple
  id: warpSpawningRipple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpSpawningRipple
  nameWithType: Player.warpSpawningRipple
  fullName: Player.warpSpawningRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpSpawningRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WarpSpawningRipple warpSpawningRipple
    return:
      type: Watcher.WarpSpawningRipple
    content.vb: Public warpSpawningRipple As WarpSpawningRipple
- uid: Global.Player.activateCamoTimer
  commentId: F:Global.Player.activateCamoTimer
  id: activateCamoTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: activateCamoTimer
  nameWithType: Player.activateCamoTimer
  fullName: Player.activateCamoTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.activateCamoTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int activateCamoTimer
    return:
      type: System.Int32
    content.vb: Public activateCamoTimer As Integer
- uid: Global.Player.performingActivationTimer
  commentId: F:Global.Player.performingActivationTimer
  id: performingActivationTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: performingActivationTimer
  nameWithType: Player.performingActivationTimer
  fullName: Player.performingActivationTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.performingActivationTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int performingActivationTimer
    return:
      type: System.Int32
    content.vb: Public performingActivationTimer As Integer
- uid: Global.Player.cancelCamoCooldown
  commentId: F:Global.Player.cancelCamoCooldown
  id: cancelCamoCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: cancelCamoCooldown
  nameWithType: Player.cancelCamoCooldown
  fullName: Player.cancelCamoCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.cancelCamoCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int cancelCamoCooldown
    return:
      type: System.Int32
    content.vb: Public cancelCamoCooldown As Integer
- uid: Global.Player.camoInputsNeedReset
  commentId: F:Global.Player.camoInputsNeedReset
  id: camoInputsNeedReset
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoInputsNeedReset
  nameWithType: Player.camoInputsNeedReset
  fullName: Player.camoInputsNeedReset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.camoInputsNeedReset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool camoInputsNeedReset
    return:
      type: System.Boolean
    content.vb: Public camoInputsNeedReset As Boolean
- uid: Global.Player.rippleAnimationJitterTimer
  commentId: F:Global.Player.rippleAnimationJitterTimer
  id: rippleAnimationJitterTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleAnimationJitterTimer
  nameWithType: Player.rippleAnimationJitterTimer
  fullName: Player.rippleAnimationJitterTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleAnimationJitterTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rippleAnimationJitterTimer
    return:
      type: System.Int32
    content.vb: Public rippleAnimationJitterTimer As Integer
- uid: Global.Player.rippleAnimationIntensityTarget
  commentId: F:Global.Player.rippleAnimationIntensityTarget
  id: rippleAnimationIntensityTarget
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleAnimationIntensityTarget
  nameWithType: Player.rippleAnimationIntensityTarget
  fullName: Player.rippleAnimationIntensityTarget
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleAnimationIntensityTarget</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rippleAnimationIntensityTarget
    return:
      type: System.Single
    content.vb: Public rippleAnimationIntensityTarget As Single
- uid: Global.Player.rippleActivating
  commentId: F:Global.Player.rippleActivating
  id: rippleActivating
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleActivating
  nameWithType: Player.rippleActivating
  fullName: Player.rippleActivating
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleActivating</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rippleActivating
    return:
      type: System.Boolean
    content.vb: Public rippleActivating As Boolean
- uid: Global.Player.showedStableWarpTutorialThisCycle
  commentId: F:Global.Player.showedStableWarpTutorialThisCycle
  id: showedStableWarpTutorialThisCycle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showedStableWarpTutorialThisCycle
  nameWithType: Player.showedStableWarpTutorialThisCycle
  fullName: Player.showedStableWarpTutorialThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.showedStableWarpTutorialThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool showedStableWarpTutorialThisCycle
    return:
      type: System.Boolean
    content.vb: Public showedStableWarpTutorialThisCycle As Boolean
- uid: Global.Player.showedBadWarpTutorialThisCycle
  commentId: F:Global.Player.showedBadWarpTutorialThisCycle
  id: showedBadWarpTutorialThisCycle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showedBadWarpTutorialThisCycle
  nameWithType: Player.showedBadWarpTutorialThisCycle
  fullName: Player.showedBadWarpTutorialThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.showedBadWarpTutorialThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool showedBadWarpTutorialThisCycle
    return:
      type: System.Boolean
    content.vb: Public showedBadWarpTutorialThisCycle As Boolean
- uid: Global.Player.showedWarpFatigueTutorialThisCycle
  commentId: F:Global.Player.showedWarpFatigueTutorialThisCycle
  id: showedWarpFatigueTutorialThisCycle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showedWarpFatigueTutorialThisCycle
  nameWithType: Player.showedWarpFatigueTutorialThisCycle
  fullName: Player.showedWarpFatigueTutorialThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.showedWarpFatigueTutorialThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool showedWarpFatigueTutorialThisCycle
    return:
      type: System.Boolean
    content.vb: Public showedWarpFatigueTutorialThisCycle As Boolean
- uid: Global.Player.showedWarpExhausionTutorialThisCycle
  commentId: F:Global.Player.showedWarpExhausionTutorialThisCycle
  id: showedWarpExhausionTutorialThisCycle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: showedWarpExhausionTutorialThisCycle
  nameWithType: Player.showedWarpExhausionTutorialThisCycle
  fullName: Player.showedWarpExhausionTutorialThisCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.showedWarpExhausionTutorialThisCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool showedWarpExhausionTutorialThisCycle
    return:
      type: System.Boolean
    content.vb: Public showedWarpExhausionTutorialThisCycle As Boolean
- uid: Global.Player.warpTutorialConditionTimer
  commentId: F:Global.Player.warpTutorialConditionTimer
  id: warpTutorialConditionTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpTutorialConditionTimer
  nameWithType: Player.warpTutorialConditionTimer
  fullName: Player.warpTutorialConditionTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpTutorialConditionTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int warpTutorialConditionTimer
    return:
      type: System.Int32
    content.vb: Public warpTutorialConditionTimer As Integer
- uid: Global.Player.warpFatigueTutorialConditionTimer
  commentId: F:Global.Player.warpFatigueTutorialConditionTimer
  id: warpFatigueTutorialConditionTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpFatigueTutorialConditionTimer
  nameWithType: Player.warpFatigueTutorialConditionTimer
  fullName: Player.warpFatigueTutorialConditionTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpFatigueTutorialConditionTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int warpFatigueTutorialConditionTimer
    return:
      type: System.Int32
    content.vb: Public warpFatigueTutorialConditionTimer As Integer
- uid: Global.Player.activateDynamicWarpTimer
  commentId: F:Global.Player.activateDynamicWarpTimer
  id: activateDynamicWarpTimer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: activateDynamicWarpTimer
  nameWithType: Player.activateDynamicWarpTimer
  fullName: Player.activateDynamicWarpTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.activateDynamicWarpTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int activateDynamicWarpTimer
    return:
      type: System.Int32
    content.vb: Public activateDynamicWarpTimer As Integer
- uid: Global.Player.dynamicWarpCooldown
  commentId: F:Global.Player.dynamicWarpCooldown
  id: dynamicWarpCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: dynamicWarpCooldown
  nameWithType: Player.dynamicWarpCooldown
  fullName: Player.dynamicWarpCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.dynamicWarpCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dynamicWarpCooldown
    return:
      type: System.Int32
    content.vb: Public dynamicWarpCooldown As Integer
- uid: Global.Player.deathEffect
  commentId: F:Global.Player.deathEffect
  id: deathEffect
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: deathEffect
  nameWithType: Player.deathEffect
  fullName: Player.deathEffect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.deathEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RippleDeathEffect deathEffect
    return:
      type: Watcher.RippleDeathEffect
    content.vb: Public deathEffect As RippleDeathEffect
- uid: Global.Player.rippleDeathIntensity
  commentId: F:Global.Player.rippleDeathIntensity
  id: rippleDeathIntensity
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleDeathIntensity
  nameWithType: Player.rippleDeathIntensity
  fullName: Player.rippleDeathIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleDeathIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rippleDeathIntensity
    return:
      type: System.Single
    content.vb: Public rippleDeathIntensity As Single
- uid: Global.Player.rippleDeathTime
  commentId: F:Global.Player.rippleDeathTime
  id: rippleDeathTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleDeathTime
  nameWithType: Player.rippleDeathTime
  fullName: Player.rippleDeathTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleDeathTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rippleDeathTime
    return:
      type: System.Int32
    content.vb: Public rippleDeathTime As Integer
- uid: Global.Player.warpExhausionTime
  commentId: F:Global.Player.warpExhausionTime
  id: warpExhausionTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpExhausionTime
  nameWithType: Player.warpExhausionTime
  fullName: Player.warpExhausionTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpExhausionTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int warpExhausionTime
    return:
      type: System.Int32
    content.vb: Public warpExhausionTime As Integer
- uid: Global.Player.warpFatigueEffect
  commentId: F:Global.Player.warpFatigueEffect
  id: warpFatigueEffect
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpFatigueEffect
  nameWithType: Player.warpFatigueEffect
  fullName: Player.warpFatigueEffect
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpFatigueEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float warpFatigueEffect
    return:
      type: System.Single
    content.vb: Public warpFatigueEffect As Single
- uid: Global.Player.consumedRippleFood
  commentId: F:Global.Player.consumedRippleFood
  id: consumedRippleFood
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: consumedRippleFood
  nameWithType: Player.consumedRippleFood
  fullName: Player.consumedRippleFood
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.consumedRippleFood</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int consumedRippleFood
    return:
      type: System.Int32
    content.vb: Public consumedRippleFood As Integer
- uid: Global.Player.rippleDeathSoundLoop
  commentId: F:Global.Player.rippleDeathSoundLoop
  id: rippleDeathSoundLoop
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleDeathSoundLoop
  nameWithType: Player.rippleDeathSoundLoop
  fullName: Player.rippleDeathSoundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.rippleDeathSoundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DisembodiedDynamicSoundLoop rippleDeathSoundLoop
    return:
      type: Global.DisembodiedDynamicSoundLoop
    content.vb: Public rippleDeathSoundLoop As DisembodiedDynamicSoundLoop
- uid: Global.Player.watcherAbilitySoundLoop
  commentId: F:Global.Player.watcherAbilitySoundLoop
  id: watcherAbilitySoundLoop
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: watcherAbilitySoundLoop
  nameWithType: Player.watcherAbilitySoundLoop
  fullName: Player.watcherAbilitySoundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.watcherAbilitySoundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public StaticSoundLoop watcherAbilitySoundLoop
    return:
      type: Global.StaticSoundLoop
    content.vb: Public watcherAbilitySoundLoop As StaticSoundLoop
- uid: Global.Player.watcherAbilitySoundID
  commentId: F:Global.Player.watcherAbilitySoundID
  id: watcherAbilitySoundID
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: watcherAbilitySoundID
  nameWithType: Player.watcherAbilitySoundID
  fullName: Player.watcherAbilitySoundID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.watcherAbilitySoundID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID watcherAbilitySoundID
    return:
      type: Global.SoundID
    content.vb: Public watcherAbilitySoundID As SoundID
- uid: Global.Player.camoDirectionSoundID
  commentId: F:Global.Player.camoDirectionSoundID
  id: camoDirectionSoundID
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoDirectionSoundID
  nameWithType: Player.camoDirectionSoundID
  fullName: Player.camoDirectionSoundID
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.camoDirectionSoundID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundID camoDirectionSoundID
    return:
      type: Global.SoundID
    content.vb: Public camoDirectionSoundID As SoundID
- uid: Global.Player.warpPointToRestore
  commentId: F:Global.Player.warpPointToRestore
  id: warpPointToRestore
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: warpPointToRestore
  nameWithType: Player.warpPointToRestore
  fullName: Player.warpPointToRestore
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.warpPointToRestore</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WarpPoint.WarpPointData warpPointToRestore
    return:
      type: Watcher.WarpPoint.WarpPointData
    content.vb: Public warpPointToRestore As WarpPoint.WarpPointData
- uid: Global.Player.devMaxLevelRipple
  commentId: F:Global.Player.devMaxLevelRipple
  id: devMaxLevelRipple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: devMaxLevelRipple
  nameWithType: Player.devMaxLevelRipple
  fullName: Player.devMaxLevelRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.devMaxLevelRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool devMaxLevelRipple
    return:
      type: System.Boolean
    content.vb: Public devMaxLevelRipple As Boolean
- uid: Global.Player.devMaxLevelRippleValue
  commentId: F:Global.Player.devMaxLevelRippleValue
  id: devMaxLevelRippleValue
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: devMaxLevelRippleValue
  nameWithType: Player.devMaxLevelRippleValue
  fullName: Player.devMaxLevelRippleValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.devMaxLevelRippleValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float devMaxLevelRippleValue
    return:
      type: System.Single
    content.vb: Public Shared devMaxLevelRippleValue As Single
- uid: Global.Player.useLevitationGravity
  commentId: F:Global.Player.useLevitationGravity
  id: useLevitationGravity
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: useLevitationGravity
  nameWithType: Player.useLevitationGravity
  fullName: Player.useLevitationGravity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.useLevitationGravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float useLevitationGravity
    return:
      type: System.Single
    content.vb: Public useLevitationGravity As Single
- uid: Global.Player.useLevitationAirResistance
  commentId: F:Global.Player.useLevitationAirResistance
  id: useLevitationAirResistance
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: useLevitationAirResistance
  nameWithType: Player.useLevitationAirResistance
  fullName: Player.useLevitationAirResistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.useLevitationAirResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float useLevitationAirResistance
    return:
      type: System.Single
    content.vb: Public useLevitationAirResistance As Single
- uid: Global.Player.levivationCooldown
  commentId: F:Global.Player.levivationCooldown
  id: levivationCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: levivationCooldown
  nameWithType: Player.levivationCooldown
  fullName: Player.levivationCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.levivationCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float levivationCooldown
    return:
      type: System.Single
    content.vb: Public levivationCooldown As Single
- uid: Global.Player.levitationActive
  commentId: F:Global.Player.levitationActive
  id: levitationActive
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: levitationActive
  nameWithType: Player.levitationActive
  fullName: Player.levitationActive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.levitationActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool levitationActive
    return:
      type: System.Boolean
    content.vb: Public levitationActive As Boolean
- uid: Global.Player.levitationNeedsCooldown
  commentId: F:Global.Player.levitationNeedsCooldown
  id: levitationNeedsCooldown
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: levitationNeedsCooldown
  nameWithType: Player.levitationNeedsCooldown
  fullName: Player.levitationNeedsCooldown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Player.levitationNeedsCooldown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool levitationNeedsCooldown
    return:
      type: System.Boolean
    content.vb: Public levitationNeedsCooldown As Boolean
- uid: Global.Player.PermaDie
  commentId: M:Global.Player.PermaDie
  id: PermaDie
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PermaDie()
  nameWithType: Player.PermaDie()
  fullName: Player.PermaDie()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PermaDie</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PermaDie()
    content.vb: Public Sub PermaDie()
  overload: Global.Player.PermaDie*
- uid: Global.Player.JollyUpdate(System.Boolean)
  commentId: M:Global.Player.JollyUpdate(System.Boolean)
  id: JollyUpdate(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JollyUpdate(bool)
  nameWithType: Player.JollyUpdate(bool)
  fullName: Player.JollyUpdate(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.JollyUpdate(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JollyUpdate(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.JollyUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub JollyUpdate(eu As Boolean)
  overload: Global.Player.JollyUpdate*
  nameWithType.vb: Player.JollyUpdate(Boolean)
  fullName.vb: Player.JollyUpdate(Boolean)
  name.vb: JollyUpdate(Boolean)
- uid: Global.Player.TriggerCameraSwitch
  commentId: M:Global.Player.TriggerCameraSwitch
  id: TriggerCameraSwitch
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TriggerCameraSwitch()
  nameWithType: Player.TriggerCameraSwitch()
  fullName: Player.TriggerCameraSwitch()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.TriggerCameraSwitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TriggerCameraSwitch()
    content.vb: Public Sub TriggerCameraSwitch()
  overload: Global.Player.TriggerCameraSwitch*
- uid: Global.Player.PointDir
  commentId: M:Global.Player.PointDir
  id: PointDir
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PointDir()
  nameWithType: Player.PointDir()
  fullName: Player.PointDir()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PointDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 PointDir()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.PointDir</parameter>
          </include>
        </markup>
    content.vb: Public Function PointDir() As Vector2
  overload: Global.Player.PointDir*
- uid: Global.Player.JollyEmoteUpdate
  commentId: M:Global.Player.JollyEmoteUpdate
  id: JollyEmoteUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JollyEmoteUpdate()
  nameWithType: Player.JollyEmoteUpdate()
  fullName: Player.JollyEmoteUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.JollyEmoteUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JollyEmoteUpdate()
    content.vb: Public Sub JollyEmoteUpdate()
  overload: Global.Player.JollyEmoteUpdate*
- uid: Global.Player.JollyFoodUpdate
  commentId: M:Global.Player.JollyFoodUpdate
  id: JollyFoodUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JollyFoodUpdate()
  nameWithType: Player.JollyFoodUpdate()
  fullName: Player.JollyFoodUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.JollyFoodUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JollyFoodUpdate()
    content.vb: Public Sub JollyFoodUpdate()
  overload: Global.Player.JollyFoodUpdate*
- uid: Global.Player.SaveStomachObjectInPlayerState
  commentId: M:Global.Player.SaveStomachObjectInPlayerState
  id: SaveStomachObjectInPlayerState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SaveStomachObjectInPlayerState()
  nameWithType: Player.SaveStomachObjectInPlayerState()
  fullName: Player.SaveStomachObjectInPlayerState()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SaveStomachObjectInPlayerState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveStomachObjectInPlayerState()
    content.vb: Public Sub SaveStomachObjectInPlayerState()
  overload: Global.Player.SaveStomachObjectInPlayerState*
- uid: Global.Player.Destroy
  commentId: M:Global.Player.Destroy
  id: Destroy
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: Player.Destroy()
  fullName: Player.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy()
  overridden: Global.UpdatableAndDeletable.Destroy
  overload: Global.Player.Destroy*
- uid: Global.Player.JollyPointUpdate
  commentId: M:Global.Player.JollyPointUpdate
  id: JollyPointUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JollyPointUpdate()
  nameWithType: Player.JollyPointUpdate()
  fullName: Player.JollyPointUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.JollyPointUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JollyPointUpdate()
    content.vb: Public Sub JollyPointUpdate()
  overload: Global.Player.JollyPointUpdate*
- uid: Global.Player.ClassMechanicsArtificer
  commentId: M:Global.Player.ClassMechanicsArtificer
  id: ClassMechanicsArtificer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ClassMechanicsArtificer()
  nameWithType: Player.ClassMechanicsArtificer()
  fullName: Player.ClassMechanicsArtificer()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ClassMechanicsArtificer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClassMechanicsArtificer()
    content.vb: Public Sub ClassMechanicsArtificer()
  overload: Global.Player.ClassMechanicsArtificer*
- uid: Global.Player.CanMaulCreature(Creature)
  commentId: M:Global.Player.CanMaulCreature(Creature)
  id: CanMaulCreature(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanMaulCreature(Creature)
  nameWithType: Player.CanMaulCreature(Creature)
  fullName: Player.CanMaulCreature(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanMaulCreature(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanMaulCreature(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Player.CanMaulCreature(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanMaulCreature(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanMaulCreature(crit As Creature) As Boolean
  overload: Global.Player.CanMaulCreature*
- uid: Global.Player.MaulingUpdate(System.Int32)
  commentId: M:Global.Player.MaulingUpdate(System.Int32)
  id: MaulingUpdate(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MaulingUpdate(int)
  nameWithType: Player.MaulingUpdate(int)
  fullName: Player.MaulingUpdate(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.MaulingUpdate(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MaulingUpdate(int graspIndex)
    parameters:
    - id: graspIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>graspIndex</parameter>
            <parameter>M:Player.MaulingUpdate(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MaulingUpdate(graspIndex As Integer)
  overload: Global.Player.MaulingUpdate*
  nameWithType.vb: Player.MaulingUpdate(Integer)
  fullName.vb: Player.MaulingUpdate(Integer)
  name.vb: MaulingUpdate(Integer)
- uid: Global.Player.PyroDeath
  commentId: M:Global.Player.PyroDeath
  id: PyroDeath
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PyroDeath()
  nameWithType: Player.PyroDeath()
  fullName: Player.PyroDeath()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PyroDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PyroDeath()
    content.vb: Public Sub PyroDeath()
  overload: Global.Player.PyroDeath*
- uid: Global.Player.ClassMechanicsGourmand
  commentId: M:Global.Player.ClassMechanicsGourmand
  id: ClassMechanicsGourmand
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ClassMechanicsGourmand()
  nameWithType: Player.ClassMechanicsGourmand()
  fullName: Player.ClassMechanicsGourmand()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ClassMechanicsGourmand</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClassMechanicsGourmand()
    content.vb: Public Sub ClassMechanicsGourmand()
  overload: Global.Player.ClassMechanicsGourmand*
- uid: Global.Player.SlugSlamConditions(PhysicalObject)
  commentId: M:Global.Player.SlugSlamConditions(PhysicalObject)
  id: SlugSlamConditions(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SlugSlamConditions(PhysicalObject)
  nameWithType: Player.SlugSlamConditions(PhysicalObject)
  fullName: Player.SlugSlamConditions(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SlugSlamConditions(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SlugSlamConditions(PhysicalObject otherObject)
    parameters:
    - id: otherObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherObject</parameter>
            <parameter>M:Player.SlugSlamConditions(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.SlugSlamConditions(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function SlugSlamConditions(otherObject As PhysicalObject) As Boolean
  overload: Global.Player.SlugSlamConditions*
- uid: Global.Player.CraftingResults
  commentId: M:Global.Player.CraftingResults
  id: CraftingResults
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CraftingResults()
  nameWithType: Player.CraftingResults()
  fullName: Player.CraftingResults()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CraftingResults</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject.AbstractObjectType CraftingResults()
    return:
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CraftingResults</parameter>
          </include>
        </markup>
    content.vb: Public Function CraftingResults() As AbstractPhysicalObject.AbstractObjectType
  overload: Global.Player.CraftingResults*
- uid: Global.Player.GraspsCanBeCrafted
  commentId: M:Global.Player.GraspsCanBeCrafted
  id: GraspsCanBeCrafted
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GraspsCanBeCrafted()
  nameWithType: Player.GraspsCanBeCrafted()
  fullName: Player.GraspsCanBeCrafted()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GraspsCanBeCrafted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool GraspsCanBeCrafted()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.GraspsCanBeCrafted</parameter>
          </include>
        </markup>
    content.vb: Public Function GraspsCanBeCrafted() As Boolean
  overload: Global.Player.GraspsCanBeCrafted*
- uid: Global.Player.SpitUpCraftedObject
  commentId: M:Global.Player.SpitUpCraftedObject
  id: SpitUpCraftedObject
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpitUpCraftedObject()
  nameWithType: Player.SpitUpCraftedObject()
  fullName: Player.SpitUpCraftedObject()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpitUpCraftedObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpitUpCraftedObject()
    content.vb: Public Sub SpitUpCraftedObject()
  overload: Global.Player.SpitUpCraftedObject*
- uid: Global.Player.SaintTongueCheck
  commentId: M:Global.Player.SaintTongueCheck
  id: SaintTongueCheck
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SaintTongueCheck()
  nameWithType: Player.SaintTongueCheck()
  fullName: Player.SaintTongueCheck()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SaintTongueCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SaintTongueCheck()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.SaintTongueCheck</parameter>
          </include>
        </markup>
    content.vb: Public Function SaintTongueCheck() As Boolean
  overload: Global.Player.SaintTongueCheck*
- uid: Global.Player.SaintStagger(System.Int32)
  commentId: M:Global.Player.SaintStagger(System.Int32)
  id: SaintStagger(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SaintStagger(int)
  nameWithType: Player.SaintStagger(int)
  fullName: Player.SaintStagger(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SaintStagger(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaintStagger(int time)
    parameters:
    - id: time
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>time</parameter>
            <parameter>M:Player.SaintStagger(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SaintStagger(time As Integer)
  overload: Global.Player.SaintStagger*
  nameWithType.vb: Player.SaintStagger(Integer)
  fullName.vb: Player.SaintStagger(Integer)
  name.vb: SaintStagger(Integer)
- uid: Global.Player.ActivateAscension
  commentId: M:Global.Player.ActivateAscension
  id: ActivateAscension
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ActivateAscension()
  nameWithType: Player.ActivateAscension()
  fullName: Player.ActivateAscension()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ActivateAscension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ActivateAscension()
    content.vb: Public Sub ActivateAscension()
  overload: Global.Player.ActivateAscension*
- uid: Global.Player.DeactivateAscension
  commentId: M:Global.Player.DeactivateAscension
  id: DeactivateAscension
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DeactivateAscension()
  nameWithType: Player.DeactivateAscension()
  fullName: Player.DeactivateAscension()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.DeactivateAscension</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DeactivateAscension()
    content.vb: Public Sub DeactivateAscension()
  overload: Global.Player.DeactivateAscension*
- uid: Global.Player.InitVoidWormCutscene
  commentId: M:Global.Player.InitVoidWormCutscene
  id: InitVoidWormCutscene
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InitVoidWormCutscene()
  nameWithType: Player.InitVoidWormCutscene()
  fullName: Player.InitVoidWormCutscene()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.InitVoidWormCutscene</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitVoidWormCutscene()
    content.vb: Public Sub InitVoidWormCutscene()
  overload: Global.Player.InitVoidWormCutscene*
- uid: Global.Player.InitiateDissolve
  commentId: M:Global.Player.InitiateDissolve
  id: InitiateDissolve
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InitiateDissolve()
  nameWithType: Player.InitiateDissolve()
  fullName: Player.InitiateDissolve()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.InitiateDissolve</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateDissolve()
    content.vb: Public Sub InitiateDissolve()
  overload: Global.Player.InitiateDissolve*
- uid: Global.Player.ClassMechanicsSaint
  commentId: M:Global.Player.ClassMechanicsSaint
  id: ClassMechanicsSaint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ClassMechanicsSaint()
  nameWithType: Player.ClassMechanicsSaint()
  fullName: Player.ClassMechanicsSaint()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ClassMechanicsSaint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClassMechanicsSaint()
    content.vb: Public Sub ClassMechanicsSaint()
  overload: Global.Player.ClassMechanicsSaint*
- uid: Global.Player.TongueUpdate
  commentId: M:Global.Player.TongueUpdate
  id: TongueUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TongueUpdate()
  nameWithType: Player.TongueUpdate()
  fullName: Player.TongueUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.TongueUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TongueUpdate()
    content.vb: Public Sub TongueUpdate()
  overload: Global.Player.TongueUpdate*
- uid: Global.Player.CanIPutDeadSlugOnBack(Player)
  commentId: M:Global.Player.CanIPutDeadSlugOnBack(Player)
  id: CanIPutDeadSlugOnBack(Player)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanIPutDeadSlugOnBack(Player)
  nameWithType: Player.CanIPutDeadSlugOnBack(Player)
  fullName: Player.CanIPutDeadSlugOnBack(Player)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanIPutDeadSlugOnBack(Player)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanIPutDeadSlugOnBack(Player pickUpCandidate)
    parameters:
    - id: pickUpCandidate
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pickUpCandidate</parameter>
            <parameter>M:Player.CanIPutDeadSlugOnBack(Player)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanIPutDeadSlugOnBack(Player)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanIPutDeadSlugOnBack(pickUpCandidate As Player) As Boolean
  overload: Global.Player.CanIPutDeadSlugOnBack*
- uid: Global.Player.setPupStatus(System.Boolean)
  commentId: M:Global.Player.setPupStatus(System.Boolean)
  id: setPupStatus(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: setPupStatus(bool)
  nameWithType: Player.setPupStatus(bool)
  fullName: Player.setPupStatus(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.setPupStatus(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void setPupStatus(bool set)
    parameters:
    - id: set
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>set</parameter>
            <parameter>M:Player.setPupStatus(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub setPupStatus([set] As Boolean)
  overload: Global.Player.setPupStatus*
  nameWithType.vb: Player.setPupStatus(Boolean)
  fullName.vb: Player.setPupStatus(Boolean)
  name.vb: setPupStatus(Boolean)
- uid: Global.Player.NPCForceGrab(PhysicalObject)
  commentId: M:Global.Player.NPCForceGrab(PhysicalObject)
  id: NPCForceGrab(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: NPCForceGrab(PhysicalObject)
  nameWithType: Player.NPCForceGrab(PhysicalObject)
  fullName: Player.NPCForceGrab(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.NPCForceGrab(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NPCForceGrab(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Player.NPCForceGrab(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NPCForceGrab(obj As PhysicalObject)
  overload: Global.Player.NPCForceGrab*
- uid: Global.Player.NPCGrabCheck(PhysicalObject)
  commentId: M:Global.Player.NPCGrabCheck(PhysicalObject)
  id: NPCGrabCheck(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: NPCGrabCheck(PhysicalObject)
  nameWithType: Player.NPCGrabCheck(PhysicalObject)
  fullName: Player.NPCGrabCheck(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.NPCGrabCheck(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool NPCGrabCheck(PhysicalObject item)
    parameters:
    - id: item
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:Player.NPCGrabCheck(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.NPCGrabCheck(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function NPCGrabCheck(item As PhysicalObject) As Boolean
  overload: Global.Player.NPCGrabCheck*
- uid: Global.Player.ClassMechanicsSpearmaster
  commentId: M:Global.Player.ClassMechanicsSpearmaster
  id: ClassMechanicsSpearmaster
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ClassMechanicsSpearmaster()
  nameWithType: Player.ClassMechanicsSpearmaster()
  fullName: Player.ClassMechanicsSpearmaster()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ClassMechanicsSpearmaster</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClassMechanicsSpearmaster()
    content.vb: Public Sub ClassMechanicsSpearmaster()
  overload: Global.Player.ClassMechanicsSpearmaster*
- uid: Global.Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)
  commentId: M:Global.Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)
  id: InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InitChatLog(ChatlogID)
  nameWithType: Player.InitChatLog(ChatlogData.ChatlogID)
  fullName: Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitChatLog(ChatlogData.ChatlogID id)
    parameters:
    - id: id
      type: MoreSlugcats.ChatlogData.ChatlogID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Player.InitChatLog(MoreSlugcats.ChatlogData.ChatlogID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitChatLog(id As ChatlogData.ChatlogID)
  overload: Global.Player.InitChatLog*
- uid: Global.Player.ProcessChatLog
  commentId: M:Global.Player.ProcessChatLog
  id: ProcessChatLog
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ProcessChatLog()
  nameWithType: Player.ProcessChatLog()
  fullName: Player.ProcessChatLog()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ProcessChatLog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ProcessChatLog()
    content.vb: Public Sub ProcessChatLog()
  overload: Global.Player.ProcessChatLog*
- uid: Global.Player.CanBeGrabbed(Creature)
  commentId: M:Global.Player.CanBeGrabbed(Creature)
  id: CanBeGrabbed(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanBeGrabbed(Creature)
  nameWithType: Player.CanBeGrabbed(Creature)
  fullName: Player.CanBeGrabbed(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanBeGrabbed(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool CanBeGrabbed(Creature grabber)
    parameters:
    - id: grabber
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabber</parameter>
            <parameter>M:Player.CanBeGrabbed(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanBeGrabbed(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function CanBeGrabbed(grabber As Creature) As Boolean
  overridden: Global.Creature.CanBeGrabbed(Creature)
  overload: Global.Player.CanBeGrabbed*
- uid: Global.Player.SetMalnourished(System.Boolean)
  commentId: M:Global.Player.SetMalnourished(System.Boolean)
  id: SetMalnourished(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SetMalnourished(bool)
  nameWithType: Player.SetMalnourished(bool)
  fullName: Player.SetMalnourished(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SetMalnourished(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetMalnourished(bool m)
    parameters:
    - id: m
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>m</parameter>
            <parameter>M:Player.SetMalnourished(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetMalnourished(m As Boolean)
  overload: Global.Player.SetMalnourished*
  nameWithType.vb: Player.SetMalnourished(Boolean)
  fullName.vb: Player.SetMalnourished(Boolean)
  name.vb: SetMalnourished(Boolean)
- uid: Global.Player.AddFood(System.Int32)
  commentId: M:Global.Player.AddFood(System.Int32)
  id: AddFood(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AddFood(int)
  nameWithType: Player.AddFood(int)
  fullName: Player.AddFood(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.AddFood(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddFood(int add)
    parameters:
    - id: add
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>add</parameter>
            <parameter>M:Player.AddFood(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddFood(add As Integer)
  overload: Global.Player.AddFood*
  nameWithType.vb: Player.AddFood(Integer)
  fullName.vb: Player.AddFood(Integer)
  name.vb: AddFood(Integer)
- uid: Global.Player.FoodInRoom(System.Boolean)
  commentId: M:Global.Player.FoodInRoom(System.Boolean)
  id: FoodInRoom(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FoodInRoom(bool)
  nameWithType: Player.FoodInRoom(bool)
  fullName: Player.FoodInRoom(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.FoodInRoom(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FoodInRoom(bool eatAndDestroy)
    parameters:
    - id: eatAndDestroy
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eatAndDestroy</parameter>
            <parameter>M:Player.FoodInRoom(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.FoodInRoom(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function FoodInRoom(eatAndDestroy As Boolean) As Integer
  overload: Global.Player.FoodInRoom*
  nameWithType.vb: Player.FoodInRoom(Boolean)
  fullName.vb: Player.FoodInRoom(Boolean)
  name.vb: FoodInRoom(Boolean)
- uid: Global.Player.FoodInRoom(Room,System.Boolean)
  commentId: M:Global.Player.FoodInRoom(Room,System.Boolean)
  id: FoodInRoom(Room,System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FoodInRoom(Room, bool)
  nameWithType: Player.FoodInRoom(Room, bool)
  fullName: Player.FoodInRoom(Room, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.FoodInRoom(Room,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FoodInRoom(Room checkRoom, bool eatAndDestroy)
    parameters:
    - id: checkRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkRoom</parameter>
            <parameter>M:Player.FoodInRoom(Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eatAndDestroy
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eatAndDestroy</parameter>
            <parameter>M:Player.FoodInRoom(Room,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.FoodInRoom(Room,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function FoodInRoom(checkRoom As Room, eatAndDestroy As Boolean) As Integer
  overload: Global.Player.FoodInRoom*
  nameWithType.vb: Player.FoodInRoom(Room, Boolean)
  fullName.vb: Player.FoodInRoom(Room, Boolean)
  name.vb: FoodInRoom(Room, Boolean)
- uid: Global.Player.AerobicIncrease(System.Single)
  commentId: M:Global.Player.AerobicIncrease(System.Single)
  id: AerobicIncrease(System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AerobicIncrease(float)
  nameWithType: Player.AerobicIncrease(float)
  fullName: Player.AerobicIncrease(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.AerobicIncrease(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AerobicIncrease(float f)
    parameters:
    - id: f
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>f</parameter>
            <parameter>M:Player.AerobicIncrease(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AerobicIncrease(f As Single)
  overload: Global.Player.AerobicIncrease*
  nameWithType.vb: Player.AerobicIncrease(Single)
  fullName.vb: Player.AerobicIncrease(Single)
  name.vb: AerobicIncrease(Single)
- uid: Global.Player.#ctor(AbstractCreature,World)
  commentId: M:Global.Player.#ctor(AbstractCreature,World)
  id: '#ctor(AbstractCreature,World)'
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Player(AbstractCreature, World)
  nameWithType: Player.Player(AbstractCreature, World)
  fullName: Player.Player(AbstractCreature, World)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Player</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player(AbstractCreature abstractCreature, World world)
    parameters:
    - id: abstractCreature
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractCreature</parameter>
            <parameter>M:Player.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:Player.#ctor(AbstractCreature,World)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(abstractCreature As AbstractCreature, world As World)
  overload: Global.Player.#ctor*
  nameWithType.vb: Player.New(AbstractCreature, World)
  fullName.vb: Player.New(AbstractCreature, World)
  name.vb: New(AbstractCreature, World)
- uid: Global.Player.InitiateGraphicsModule
  commentId: M:Global.Player.InitiateGraphicsModule
  id: InitiateGraphicsModule
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InitiateGraphicsModule()
  nameWithType: Player.InitiateGraphicsModule()
  fullName: Player.InitiateGraphicsModule()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.InitiateGraphicsModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void InitiateGraphicsModule()
    content.vb: Public Overrides Sub InitiateGraphicsModule()
  overridden: Global.PhysicalObject.InitiateGraphicsModule
  overload: Global.Player.InitiateGraphicsModule*
- uid: Global.Player.RemoveGraphicsModule
  commentId: M:Global.Player.RemoveGraphicsModule
  id: RemoveGraphicsModule
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RemoveGraphicsModule()
  nameWithType: Player.RemoveGraphicsModule()
  fullName: Player.RemoveGraphicsModule()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.RemoveGraphicsModule</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void RemoveGraphicsModule()
    content.vb: Public Overrides Sub RemoveGraphicsModule()
  overridden: Global.PhysicalObject.RemoveGraphicsModule
  overload: Global.Player.RemoveGraphicsModule*
- uid: Global.Player.Deafen(System.Int32)
  commentId: M:Global.Player.Deafen(System.Int32)
  id: Deafen(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Deafen(int)
  nameWithType: Player.Deafen(int)
  fullName: Player.Deafen(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Deafen(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Deafen(int df)
    parameters:
    - id: df
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>df</parameter>
            <parameter>M:Player.Deafen(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Deafen(df As Integer)
  overridden: Global.Creature.Deafen(System.Int32)
  overload: Global.Player.Deafen*
  nameWithType.vb: Player.Deafen(Integer)
  fullName.vb: Player.Deafen(Integer)
  name.vb: Deafen(Integer)
- uid: Global.Player.Update(System.Boolean)
  commentId: M:Global.Player.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Player.Update(bool)
  fullName: Player.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.Creature.Update(System.Boolean)
  overload: Global.Player.Update*
  nameWithType.vb: Player.Update(Boolean)
  fullName.vb: Player.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  id: GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: Player.GraphicsModuleUpdated(bool, bool)
  fullName: Player.GraphicsModuleUpdated(bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GraphicsModuleUpdated(bool actuallyViewed, bool eu)
    parameters:
    - id: actuallyViewed
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>actuallyViewed</parameter>
            <parameter>M:Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.GraphicsModuleUpdated(System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GraphicsModuleUpdated(actuallyViewed As Boolean, eu As Boolean)
  overridden: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  overload: Global.Player.GraphicsModuleUpdated*
  nameWithType.vb: Player.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: Player.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
- uid: Global.Player.GetHeldItemDirection(System.Int32)
  commentId: M:Global.Player.GetHeldItemDirection(System.Int32)
  id: GetHeldItemDirection(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetHeldItemDirection(int)
  nameWithType: Player.GetHeldItemDirection(int)
  fullName: Player.GetHeldItemDirection(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GetHeldItemDirection(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GetHeldItemDirection(int hand)
    parameters:
    - id: hand
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hand</parameter>
            <parameter>M:Player.GetHeldItemDirection(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.GetHeldItemDirection(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetHeldItemDirection(hand As Integer) As Vector2
  overload: Global.Player.GetHeldItemDirection*
  nameWithType.vb: Player.GetHeldItemDirection(Integer)
  fullName.vb: Player.GetHeldItemDirection(Integer)
  name.vb: GetHeldItemDirection(Integer)
- uid: Global.Player.checkInput
  commentId: M:Global.Player.checkInput
  id: checkInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: checkInput()
  nameWithType: Player.checkInput()
  fullName: Player.checkInput()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.checkInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void checkInput()
    content.vb: Public Sub checkInput()
  overload: Global.Player.checkInput*
- uid: Global.Player.Blink(System.Int32)
  commentId: M:Global.Player.Blink(System.Int32)
  id: Blink(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Blink(int)
  nameWithType: Player.Blink(int)
  fullName: Player.Blink(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Blink(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Blink(int blink)
    parameters:
    - id: blink
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>blink</parameter>
            <parameter>M:Player.Blink(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Blink(blink As Integer)
  overload: Global.Player.Blink*
  nameWithType.vb: Player.Blink(Integer)
  fullName.vb: Player.Blink(Integer)
  name.vb: Blink(Integer)
- uid: Global.Player.PyroDeathThreshold(RainWorldGame)
  commentId: M:Global.Player.PyroDeathThreshold(RainWorldGame)
  id: PyroDeathThreshold(RainWorldGame)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PyroDeathThreshold(RainWorldGame)
  nameWithType: Player.PyroDeathThreshold(RainWorldGame)
  fullName: Player.PyroDeathThreshold(RainWorldGame)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PyroDeathThreshold(RainWorldGame)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float PyroDeathThreshold(RainWorldGame game)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Player.PyroDeathThreshold(RainWorldGame)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.PyroDeathThreshold(RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PyroDeathThreshold(game As RainWorldGame) As Single
  overload: Global.Player.PyroDeathThreshold*
- uid: Global.Player.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.Player.Collide(PhysicalObject,System.Int32,System.Int32)
  id: Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Collide(PhysicalObject, int, int)
  nameWithType: Player.Collide(PhysicalObject, int, int)
  fullName: Player.Collide(PhysicalObject, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Collide(PhysicalObject otherObject, int myChunk, int otherChunk)
    parameters:
    - id: otherObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherObject</parameter>
            <parameter>M:Player.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: myChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>myChunk</parameter>
            <parameter>M:Player.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: otherChunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherChunk</parameter>
            <parameter>M:Player.Collide(PhysicalObject,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Collide(otherObject As PhysicalObject, myChunk As Integer, otherChunk As Integer)
  overridden: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  overload: Global.Player.Collide*
  nameWithType.vb: Player.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: Player.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
- uid: Global.Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  id: TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: Player.TerrainImpact(int, IntVector2, float, bool)
  fullName: Player.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void TerrainImpact(int chunk, IntVector2 direction, float speed, bool firstContact)
    parameters:
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: firstContact
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstContact</parameter>
            <parameter>M:Player.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub TerrainImpact(chunk As Integer, direction As IntVector2, speed As Single, firstContact As Boolean)
  overridden: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  overload: Global.Player.TerrainImpact*
  nameWithType.vb: Player.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: Player.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
- uid: Global.Player.OneWayWarpExit
  commentId: M:Global.Player.OneWayWarpExit
  id: OneWayWarpExit
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OneWayWarpExit()
  nameWithType: Player.OneWayWarpExit()
  fullName: Player.OneWayWarpExit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.OneWayWarpExit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void OneWayWarpExit()
    content.vb: Public Sub OneWayWarpExit()
  overload: Global.Player.OneWayWarpExit*
- uid: Global.Player.PrimeOneWayExit(Room)
  commentId: M:Global.Player.PrimeOneWayExit(Room)
  id: PrimeOneWayExit(Room)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PrimeOneWayExit(Room)
  nameWithType: Player.PrimeOneWayExit(Room)
  fullName: Player.PrimeOneWayExit(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PrimeOneWayExit(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PrimeOneWayExit(Room room)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Player.PrimeOneWayExit(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PrimeOneWayExit(room As Room)
  overload: Global.Player.PrimeOneWayExit*
- uid: Global.Player.OneWayPlacement(UnityEngine.Vector2)
  commentId: M:Global.Player.OneWayPlacement(UnityEngine.Vector2)
  id: OneWayPlacement(UnityEngine.Vector2)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: OneWayPlacement(Vector2)
  nameWithType: Player.OneWayPlacement(Vector2)
  fullName: Player.OneWayPlacement(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.OneWayPlacement(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void OneWayPlacement(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Player.OneWayPlacement(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub OneWayPlacement(pos As Vector2)
  overload: Global.Player.OneWayPlacement*
- uid: Global.Player.Die
  commentId: M:Global.Player.Die
  id: Die
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Die()
  nameWithType: Player.Die()
  fullName: Player.Die()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Die</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Die()
    content.vb: Public Overrides Sub Die()
  overridden: Global.Creature.Die
  overload: Global.Player.Die*
- uid: Global.Player.Grabbed(Creature.Grasp)
  commentId: M:Global.Player.Grabbed(Creature.Grasp)
  id: Grabbed(Creature.Grasp)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Grabbed(Grasp)
  nameWithType: Player.Grabbed(Creature.Grasp)
  fullName: Player.Grabbed(Creature.Grasp)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Grabbed(Creature.Grasp)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Grabbed(Creature.Grasp grasp)
    parameters:
    - id: grasp
      type: Global.Creature.Grasp
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Player.Grabbed(Creature.Grasp)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Grabbed(grasp As Creature.Grasp)
  overridden: Global.PhysicalObject.Grabbed(Creature.Grasp)
  overload: Global.Player.Grabbed*
- uid: Global.Player.Stun(System.Int32)
  commentId: M:Global.Player.Stun(System.Int32)
  id: Stun(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Stun(int)
  nameWithType: Player.Stun(int)
  fullName: Player.Stun(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Stun(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Stun(int st)
    parameters:
    - id: st
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>st</parameter>
            <parameter>M:Player.Stun(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Stun(st As Integer)
  overridden: Global.Creature.Stun(System.Int32)
  overload: Global.Player.Stun*
  nameWithType.vb: Player.Stun(Integer)
  fullName.vb: Player.Stun(Integer)
  name.vb: Stun(Integer)
- uid: Global.Player.AddQuarterFood
  commentId: M:Global.Player.AddQuarterFood
  id: AddQuarterFood
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AddQuarterFood()
  nameWithType: Player.AddQuarterFood()
  fullName: Player.AddQuarterFood()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.AddQuarterFood</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddQuarterFood()
    content.vb: Public Sub AddQuarterFood()
  overload: Global.Player.AddQuarterFood*
- uid: Global.Player.ShortCutColor
  commentId: M:Global.Player.ShortCutColor
  id: ShortCutColor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ShortCutColor()
  nameWithType: Player.ShortCutColor()
  fullName: Player.ShortCutColor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ShortCutColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override Color ShortCutColor()
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.ShortCutColor</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ShortCutColor() As Color
  overridden: Global.Creature.ShortCutColor
  overload: Global.Player.ShortCutColor*
- uid: Global.Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  commentId: M:Global.Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  id: SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpitOutOfShortCut(IntVector2, Room, bool)
  nameWithType: Player.SpitOutOfShortCut(IntVector2, Room, bool)
  fullName: Player.SpitOutOfShortCut(RWCustom.IntVector2, Room, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void SpitOutOfShortCut(IntVector2 pos, Room newRoom, bool spitOutAllSticks)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: spitOutAllSticks
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spitOutAllSticks</parameter>
            <parameter>M:Player.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub SpitOutOfShortCut(pos As IntVector2, newRoom As Room, spitOutAllSticks As Boolean)
  overridden: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  overload: Global.Player.SpitOutOfShortCut*
  nameWithType.vb: Player.SpitOutOfShortCut(IntVector2, Room, Boolean)
  fullName.vb: Player.SpitOutOfShortCut(RWCustom.IntVector2, Room, Boolean)
  name.vb: SpitOutOfShortCut(IntVector2, Room, Boolean)
- uid: Global.Player.GetOwnerType
  commentId: M:Global.Player.GetOwnerType
  id: GetOwnerType
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetOwnerType()
  nameWithType: Player.GetOwnerType()
  fullName: Player.GetOwnerType()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GetOwnerType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUD.OwnerType GetOwnerType()
    return:
      type: HUD.HUD.OwnerType
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.GetOwnerType</parameter>
          </include>
        </markup>
    content.vb: Public Function GetOwnerType() As HUD.OwnerType
  overload: Global.Player.GetOwnerType*
  implements:
  - HUD.IOwnAHUD.GetOwnerType
- uid: Global.Player.PlayHUDSound(SoundID)
  commentId: M:Global.Player.PlayHUDSound(SoundID)
  id: PlayHUDSound(SoundID)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PlayHUDSound(SoundID)
  nameWithType: Player.PlayHUDSound(SoundID)
  fullName: Player.PlayHUDSound(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.PlayHUDSound(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayHUDSound(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Player.PlayHUDSound(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayHUDSound(soundID As SoundID)
  overload: Global.Player.PlayHUDSound*
  implements:
  - HUD.IOwnAHUD.PlayHUDSound(SoundID)
- uid: Global.Player.FoodCountDownDone
  commentId: M:Global.Player.FoodCountDownDone
  id: FoodCountDownDone
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FoodCountDownDone()
  nameWithType: Player.FoodCountDownDone()
  fullName: Player.FoodCountDownDone()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.FoodCountDownDone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FoodCountDownDone()
    content.vb: Public Sub FoodCountDownDone()
  overload: Global.Player.FoodCountDownDone*
  implements:
  - HUD.IOwnAHUD.FoodCountDownDone
- uid: Global.Player.NewRoom(Room)
  commentId: M:Global.Player.NewRoom(Room)
  id: NewRoom(Room)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: NewRoom(Room)
  nameWithType: Player.NewRoom(Room)
  fullName: Player.NewRoom(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.NewRoom(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void NewRoom(Room newRoom)
    parameters:
    - id: newRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:Player.NewRoom(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub NewRoom(newRoom As Room)
  overridden: Global.Creature.NewRoom(Room)
  overload: Global.Player.NewRoom*
- uid: Global.Player.UpdateMSC
  commentId: M:Global.Player.UpdateMSC
  id: UpdateMSC
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: UpdateMSC()
  nameWithType: Player.UpdateMSC()
  fullName: Player.UpdateMSC()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.UpdateMSC</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateMSC()
    content.vb: Public Sub UpdateMSC()
  overload: Global.Player.UpdateMSC*
- uid: Global.Player.GetInitialSlugcatClass
  commentId: M:Global.Player.GetInitialSlugcatClass
  id: GetInitialSlugcatClass
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetInitialSlugcatClass()
  nameWithType: Player.GetInitialSlugcatClass()
  fullName: Player.GetInitialSlugcatClass()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GetInitialSlugcatClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GetInitialSlugcatClass()
    content.vb: Public Sub GetInitialSlugcatClass()
  overload: Global.Player.GetInitialSlugcatClass*
- uid: Global.Player.SubtractFood(System.Int32)
  commentId: M:Global.Player.SubtractFood(System.Int32)
  id: SubtractFood(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SubtractFood(int)
  nameWithType: Player.SubtractFood(int)
  fullName: Player.SubtractFood(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SubtractFood(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SubtractFood(int sub)
    parameters:
    - id: sub
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sub</parameter>
            <parameter>M:Player.SubtractFood(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SubtractFood([sub] As Integer)
  overload: Global.Player.SubtractFood*
  nameWithType.vb: Player.SubtractFood(Integer)
  fullName.vb: Player.SubtractFood(Integer)
  name.vb: SubtractFood(Integer)
- uid: Global.Player.DeathByBiteMultiplier
  commentId: M:Global.Player.DeathByBiteMultiplier
  id: DeathByBiteMultiplier
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DeathByBiteMultiplier()
  nameWithType: Player.DeathByBiteMultiplier()
  fullName: Player.DeathByBiteMultiplier()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.DeathByBiteMultiplier</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DeathByBiteMultiplier()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.DeathByBiteMultiplier</parameter>
          </include>
        </markup>
    content.vb: Public Function DeathByBiteMultiplier() As Single
  overload: Global.Player.DeathByBiteMultiplier*
- uid: Global.Player.AllowGrabbingBatflys
  commentId: M:Global.Player.AllowGrabbingBatflys
  id: AllowGrabbingBatflys
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AllowGrabbingBatflys()
  nameWithType: Player.AllowGrabbingBatflys()
  fullName: Player.AllowGrabbingBatflys()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.AllowGrabbingBatflys</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AllowGrabbingBatflys()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.AllowGrabbingBatflys</parameter>
          </include>
        </markup>
    content.vb: Public Function AllowGrabbingBatflys() As Boolean
  overload: Global.Player.AllowGrabbingBatflys*
- uid: Global.Player.IsCreatureLegalToHoldWithoutStun(Creature)
  commentId: M:Global.Player.IsCreatureLegalToHoldWithoutStun(Creature)
  id: IsCreatureLegalToHoldWithoutStun(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: IsCreatureLegalToHoldWithoutStun(Creature)
  nameWithType: Player.IsCreatureLegalToHoldWithoutStun(Creature)
  fullName: Player.IsCreatureLegalToHoldWithoutStun(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.IsCreatureLegalToHoldWithoutStun(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCreatureLegalToHoldWithoutStun(Creature grabCheck)
    parameters:
    - id: grabCheck
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabCheck</parameter>
            <parameter>M:Player.IsCreatureLegalToHoldWithoutStun(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.IsCreatureLegalToHoldWithoutStun(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsCreatureLegalToHoldWithoutStun(grabCheck As Creature) As Boolean
  overload: Global.Player.IsCreatureLegalToHoldWithoutStun*
- uid: Global.Player.IsCreatureImmuneToPlayerGrabStun(Creature)
  commentId: M:Global.Player.IsCreatureImmuneToPlayerGrabStun(Creature)
  id: IsCreatureImmuneToPlayerGrabStun(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: IsCreatureImmuneToPlayerGrabStun(Creature)
  nameWithType: Player.IsCreatureImmuneToPlayerGrabStun(Creature)
  fullName: Player.IsCreatureImmuneToPlayerGrabStun(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.IsCreatureImmuneToPlayerGrabStun(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCreatureImmuneToPlayerGrabStun(Creature grabCheck)
    parameters:
    - id: grabCheck
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grabCheck</parameter>
            <parameter>M:Player.IsCreatureImmuneToPlayerGrabStun(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.IsCreatureImmuneToPlayerGrabStun(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsCreatureImmuneToPlayerGrabStun(grabCheck As Creature) As Boolean
  overload: Global.Player.IsCreatureImmuneToPlayerGrabStun*
- uid: Global.Player.StomachGlowLightColor
  commentId: M:Global.Player.StomachGlowLightColor
  id: StomachGlowLightColor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: StomachGlowLightColor()
  nameWithType: Player.StomachGlowLightColor()
  fullName: Player.StomachGlowLightColor()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.StomachGlowLightColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color? StomachGlowLightColor()
    return:
      type: System.Nullable{UnityEngine.Color}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.StomachGlowLightColor</parameter>
          </include>
        </markup>
    content.vb: Public Function StomachGlowLightColor() As Color?
  overload: Global.Player.StomachGlowLightColor*
- uid: Global.Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Global.Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  id: SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpearStick(Weapon, float, BodyChunk, Pos, Vector2)
  nameWithType: Player.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName: Player.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool SpearStick(Weapon source, float dmg, BodyChunk chunk, PhysicalObject.Appendage.Pos appPos, Vector2 direction)
    parameters:
    - id: source
      type: Global.Weapon
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: dmg
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dmg</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: appPos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>appPos</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: direction
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function SpearStick(source As Weapon, dmg As Single, chunk As BodyChunk, appPos As PhysicalObject.Appendage.Pos, direction As Vector2) As Boolean
  overridden: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  overload: Global.Player.SpearStick*
  nameWithType.vb: Player.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName.vb: Player.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  name.vb: SpearStick(Weapon, Single, BodyChunk, Pos, Vector2)
- uid: Global.Player.SuperHardSetPosition(UnityEngine.Vector2)
  commentId: M:Global.Player.SuperHardSetPosition(UnityEngine.Vector2)
  id: SuperHardSetPosition(UnityEngine.Vector2)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SuperHardSetPosition(Vector2)
  nameWithType: Player.SuperHardSetPosition(Vector2)
  fullName: Player.SuperHardSetPosition(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SuperHardSetPosition(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SuperHardSetPosition(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Player.SuperHardSetPosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SuperHardSetPosition(pos As Vector2)
  overload: Global.Player.SuperHardSetPosition*
- uid: Global.Player.ProcessConsoleDebugInputs
  commentId: M:Global.Player.ProcessConsoleDebugInputs
  id: ProcessConsoleDebugInputs
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ProcessConsoleDebugInputs()
  nameWithType: Player.ProcessConsoleDebugInputs()
  fullName: Player.ProcessConsoleDebugInputs()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ProcessConsoleDebugInputs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ProcessConsoleDebugInputs()
    content.vb: Public Sub ProcessConsoleDebugInputs()
  overload: Global.Player.ProcessConsoleDebugInputs*
- uid: Global.Player.ProcessDebugInputs
  commentId: M:Global.Player.ProcessDebugInputs
  id: ProcessDebugInputs
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ProcessDebugInputs()
  nameWithType: Player.ProcessDebugInputs()
  fullName: Player.ProcessDebugInputs()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ProcessDebugInputs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ProcessDebugInputs()
    content.vb: Public Sub ProcessDebugInputs()
  overload: Global.Player.ProcessDebugInputs*
- uid: Global.Player.UpdateAnimation
  commentId: M:Global.Player.UpdateAnimation
  id: UpdateAnimation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: UpdateAnimation()
  nameWithType: Player.UpdateAnimation()
  fullName: Player.UpdateAnimation()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.UpdateAnimation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateAnimation()
    content.vb: Public Sub UpdateAnimation()
  overload: Global.Player.UpdateAnimation*
- uid: Global.Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)
  commentId: M:Global.Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)
  id: CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CollideWithCoralCircuitBit(int, CircuitBit, float)
  nameWithType: Player.CollideWithCoralCircuitBit(int, CoralCircuit.CircuitBit, float)
  fullName: Player.CollideWithCoralCircuitBit(int, CoralBrain.CoralCircuit.CircuitBit, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CollideWithCoralCircuitBit(int chunk, CoralCircuit.CircuitBit bit, float overLapFac)
    parameters:
    - id: chunk
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)</parameter>
          </include>
        </markup>
    - id: bit
      type: CoralBrain.CoralCircuit.CircuitBit
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bit</parameter>
            <parameter>M:Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)</parameter>
          </include>
        </markup>
    - id: overLapFac
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>overLapFac</parameter>
            <parameter>M:Player.CollideWithCoralCircuitBit(System.Int32,CoralBrain.CoralCircuit.CircuitBit,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub CollideWithCoralCircuitBit(chunk As Integer, bit As CoralCircuit.CircuitBit, overLapFac As Single)
  overload: Global.Player.CollideWithCoralCircuitBit*
  nameWithType.vb: Player.CollideWithCoralCircuitBit(Integer, CoralCircuit.CircuitBit, Single)
  fullName.vb: Player.CollideWithCoralCircuitBit(Integer, CoralBrain.CoralCircuit.CircuitBit, Single)
  name.vb: CollideWithCoralCircuitBit(Integer, CircuitBit, Single)
- uid: Global.Player.SwimDir(System.Boolean)
  commentId: M:Global.Player.SwimDir(System.Boolean)
  id: SwimDir(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SwimDir(bool)
  nameWithType: Player.SwimDir(bool)
  fullName: Player.SwimDir(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SwimDir(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 SwimDir(bool normalize)
    parameters:
    - id: normalize
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>normalize</parameter>
            <parameter>M:Player.SwimDir(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.SwimDir(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function SwimDir(normalize As Boolean) As Vector2
  overload: Global.Player.SwimDir*
  nameWithType.vb: Player.SwimDir(Boolean)
  fullName.vb: Player.SwimDir(Boolean)
  name.vb: SwimDir(Boolean)
- uid: Global.Player.UpdateBodyMode
  commentId: M:Global.Player.UpdateBodyMode
  id: UpdateBodyMode
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: UpdateBodyMode()
  nameWithType: Player.UpdateBodyMode()
  fullName: Player.UpdateBodyMode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.UpdateBodyMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateBodyMode()
    content.vb: Public Sub UpdateBodyMode()
  overload: Global.Player.UpdateBodyMode*
- uid: Global.Player.ReleaseGrasp(System.Int32)
  commentId: M:Global.Player.ReleaseGrasp(System.Int32)
  id: ReleaseGrasp(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ReleaseGrasp(int)
  nameWithType: Player.ReleaseGrasp(int)
  fullName: Player.ReleaseGrasp(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ReleaseGrasp(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void ReleaseGrasp(int grasp)
    parameters:
    - id: grasp
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Player.ReleaseGrasp(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub ReleaseGrasp(grasp As Integer)
  overridden: Global.Creature.ReleaseGrasp(System.Int32)
  overload: Global.Player.ReleaseGrasp*
  nameWithType.vb: Player.ReleaseGrasp(Integer)
  fullName.vb: Player.ReleaseGrasp(Integer)
  name.vb: ReleaseGrasp(Integer)
- uid: Global.Player.ObjectEaten(IPlayerEdible)
  commentId: M:Global.Player.ObjectEaten(IPlayerEdible)
  id: ObjectEaten(IPlayerEdible)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ObjectEaten(IPlayerEdible)
  nameWithType: Player.ObjectEaten(IPlayerEdible)
  fullName: Player.ObjectEaten(IPlayerEdible)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ObjectEaten(IPlayerEdible)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ObjectEaten(IPlayerEdible edible)
    parameters:
    - id: edible
      type: Global.IPlayerEdible
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>edible</parameter>
            <parameter>M:Player.ObjectEaten(IPlayerEdible)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ObjectEaten(edible As IPlayerEdible)
  overload: Global.Player.ObjectEaten*
- uid: Global.Player.GrabUpdate(System.Boolean)
  commentId: M:Global.Player.GrabUpdate(System.Boolean)
  id: GrabUpdate(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GrabUpdate(bool)
  nameWithType: Player.GrabUpdate(bool)
  fullName: Player.GrabUpdate(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.GrabUpdate(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GrabUpdate(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.GrabUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GrabUpdate(eu As Boolean)
  overload: Global.Player.GrabUpdate*
  nameWithType.vb: Player.GrabUpdate(Boolean)
  fullName.vb: Player.GrabUpdate(Boolean)
  name.vb: GrabUpdate(Boolean)
- uid: Global.Player.SlugcatGrab(PhysicalObject,System.Int32)
  commentId: M:Global.Player.SlugcatGrab(PhysicalObject,System.Int32)
  id: SlugcatGrab(PhysicalObject,System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SlugcatGrab(PhysicalObject, int)
  nameWithType: Player.SlugcatGrab(PhysicalObject, int)
  fullName: Player.SlugcatGrab(PhysicalObject, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SlugcatGrab(PhysicalObject,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SlugcatGrab(PhysicalObject obj, int graspUsed)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Player.SlugcatGrab(PhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    - id: graspUsed
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>graspUsed</parameter>
            <parameter>M:Player.SlugcatGrab(PhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SlugcatGrab(obj As PhysicalObject, graspUsed As Integer)
  overload: Global.Player.SlugcatGrab*
  nameWithType.vb: Player.SlugcatGrab(PhysicalObject, Integer)
  fullName.vb: Player.SlugcatGrab(PhysicalObject, Integer)
  name.vb: SlugcatGrab(PhysicalObject, Integer)
- uid: Global.Player.CanIPickThisUp(PhysicalObject)
  commentId: M:Global.Player.CanIPickThisUp(PhysicalObject)
  id: CanIPickThisUp(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanIPickThisUp(PhysicalObject)
  nameWithType: Player.CanIPickThisUp(PhysicalObject)
  fullName: Player.CanIPickThisUp(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanIPickThisUp(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanIPickThisUp(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Player.CanIPickThisUp(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanIPickThisUp(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanIPickThisUp(obj As PhysicalObject) As Boolean
  overload: Global.Player.CanIPickThisUp*
- uid: Global.Player.HeavyCarry(PhysicalObject)
  commentId: M:Global.Player.HeavyCarry(PhysicalObject)
  id: HeavyCarry(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: HeavyCarry(PhysicalObject)
  nameWithType: Player.HeavyCarry(PhysicalObject)
  fullName: Player.HeavyCarry(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.HeavyCarry(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HeavyCarry(PhysicalObject obj)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Player.HeavyCarry(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.HeavyCarry(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function HeavyCarry(obj As PhysicalObject) As Boolean
  overload: Global.Player.HeavyCarry*
- uid: Global.Player.FreeHand
  commentId: M:Global.Player.FreeHand
  id: FreeHand
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FreeHand()
  nameWithType: Player.FreeHand()
  fullName: Player.FreeHand()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.FreeHand</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FreeHand()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.FreeHand</parameter>
          </include>
        </markup>
    content.vb: Public Function FreeHand() As Integer
  overload: Global.Player.FreeHand*
- uid: Global.Player.ThrowObject(System.Int32,System.Boolean)
  commentId: M:Global.Player.ThrowObject(System.Int32,System.Boolean)
  id: ThrowObject(System.Int32,System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ThrowObject(int, bool)
  nameWithType: Player.ThrowObject(int, bool)
  fullName: Player.ThrowObject(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ThrowObject(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ThrowObject(int grasp, bool eu)
    parameters:
    - id: grasp
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Player.ThrowObject(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.ThrowObject(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ThrowObject(grasp As Integer, eu As Boolean)
  overload: Global.Player.ThrowObject*
  nameWithType.vb: Player.ThrowObject(Integer, Boolean)
  fullName.vb: Player.ThrowObject(Integer, Boolean)
  name.vb: ThrowObject(Integer, Boolean)
- uid: Global.Player.ThrowToGetFree(System.Boolean)
  commentId: M:Global.Player.ThrowToGetFree(System.Boolean)
  id: ThrowToGetFree(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ThrowToGetFree(bool)
  nameWithType: Player.ThrowToGetFree(bool)
  fullName: Player.ThrowToGetFree(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ThrowToGetFree(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ThrowToGetFree(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.ThrowToGetFree(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ThrowToGetFree(eu As Boolean)
  overload: Global.Player.ThrowToGetFree*
  nameWithType.vb: Player.ThrowToGetFree(Boolean)
  fullName.vb: Player.ThrowToGetFree(Boolean)
  name.vb: ThrowToGetFree(Boolean)
- uid: Global.Player.DangerGraspPickup(System.Boolean)
  commentId: M:Global.Player.DangerGraspPickup(System.Boolean)
  id: DangerGraspPickup(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DangerGraspPickup(bool)
  nameWithType: Player.DangerGraspPickup(bool)
  fullName: Player.DangerGraspPickup(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.DangerGraspPickup(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DangerGraspPickup(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.DangerGraspPickup(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DangerGraspPickup(eu As Boolean)
  overload: Global.Player.DangerGraspPickup*
  nameWithType.vb: Player.DangerGraspPickup(Boolean)
  fullName.vb: Player.DangerGraspPickup(Boolean)
  name.vb: DangerGraspPickup(Boolean)
- uid: Global.Player.CanBeSwallowed(PhysicalObject)
  commentId: M:Global.Player.CanBeSwallowed(PhysicalObject)
  id: CanBeSwallowed(PhysicalObject)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanBeSwallowed(PhysicalObject)
  nameWithType: Player.CanBeSwallowed(PhysicalObject)
  fullName: Player.CanBeSwallowed(PhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanBeSwallowed(PhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanBeSwallowed(PhysicalObject testObj)
    parameters:
    - id: testObj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>testObj</parameter>
            <parameter>M:Player.CanBeSwallowed(PhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanBeSwallowed(PhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanBeSwallowed(testObj As PhysicalObject) As Boolean
  overload: Global.Player.CanBeSwallowed*
- uid: Global.Player.EatMeatOmnivoreGreenList(Creature)
  commentId: M:Global.Player.EatMeatOmnivoreGreenList(Creature)
  id: EatMeatOmnivoreGreenList(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EatMeatOmnivoreGreenList(Creature)
  nameWithType: Player.EatMeatOmnivoreGreenList(Creature)
  fullName: Player.EatMeatOmnivoreGreenList(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.EatMeatOmnivoreGreenList(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool EatMeatOmnivoreGreenList(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Player.EatMeatOmnivoreGreenList(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.EatMeatOmnivoreGreenList(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function EatMeatOmnivoreGreenList(crit As Creature) As Boolean
  overload: Global.Player.EatMeatOmnivoreGreenList*
- uid: Global.Player.CanEatMeat(Creature)
  commentId: M:Global.Player.CanEatMeat(Creature)
  id: CanEatMeat(Creature)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanEatMeat(Creature)
  nameWithType: Player.CanEatMeat(Creature)
  fullName: Player.CanEatMeat(Creature)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.CanEatMeat(Creature)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanEatMeat(Creature crit)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Player.CanEatMeat(Creature)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.CanEatMeat(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Function CanEatMeat(crit As Creature) As Boolean
  overload: Global.Player.CanEatMeat*
- uid: Global.Player.SwallowObject(System.Int32)
  commentId: M:Global.Player.SwallowObject(System.Int32)
  id: SwallowObject(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SwallowObject(int)
  nameWithType: Player.SwallowObject(int)
  fullName: Player.SwallowObject(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SwallowObject(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SwallowObject(int grasp)
    parameters:
    - id: grasp
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>grasp</parameter>
            <parameter>M:Player.SwallowObject(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SwallowObject(grasp As Integer)
  overload: Global.Player.SwallowObject*
  nameWithType.vb: Player.SwallowObject(Integer)
  fullName.vb: Player.SwallowObject(Integer)
  name.vb: SwallowObject(Integer)
- uid: Global.Player.Regurgitate
  commentId: M:Global.Player.Regurgitate
  id: Regurgitate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Regurgitate()
  nameWithType: Player.Regurgitate()
  fullName: Player.Regurgitate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Regurgitate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Regurgitate()
    content.vb: Public Sub Regurgitate()
  overload: Global.Player.Regurgitate*
- uid: Global.Player.EatMeatUpdate(System.Int32)
  commentId: M:Global.Player.EatMeatUpdate(System.Int32)
  id: EatMeatUpdate(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EatMeatUpdate(int)
  nameWithType: Player.EatMeatUpdate(int)
  fullName: Player.EatMeatUpdate(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.EatMeatUpdate(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void EatMeatUpdate(int graspIndex)
    parameters:
    - id: graspIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>graspIndex</parameter>
            <parameter>M:Player.EatMeatUpdate(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub EatMeatUpdate(graspIndex As Integer)
  overload: Global.Player.EatMeatUpdate*
  nameWithType.vb: Player.EatMeatUpdate(Integer)
  fullName.vb: Player.EatMeatUpdate(Integer)
  name.vb: EatMeatUpdate(Integer)
- uid: Global.Player.MovementUpdate(System.Boolean)
  commentId: M:Global.Player.MovementUpdate(System.Boolean)
  id: MovementUpdate(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MovementUpdate(bool)
  nameWithType: Player.MovementUpdate(bool)
  fullName: Player.MovementUpdate(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.MovementUpdate(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MovementUpdate(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Player.MovementUpdate(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MovementUpdate(eu As Boolean)
  overload: Global.Player.MovementUpdate*
  nameWithType.vb: Player.MovementUpdate(Boolean)
  fullName.vb: Player.MovementUpdate(Boolean)
  name.vb: MovementUpdate(Boolean)
- uid: Global.Player.WallJump(System.Int32)
  commentId: M:Global.Player.WallJump(System.Int32)
  id: WallJump(System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WallJump(int)
  nameWithType: Player.WallJump(int)
  fullName: Player.WallJump(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.WallJump(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WallJump(int direction)
    parameters:
    - id: direction
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Player.WallJump(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub WallJump(direction As Integer)
  overload: Global.Player.WallJump*
  nameWithType.vb: Player.WallJump(Integer)
  fullName.vb: Player.WallJump(Integer)
  name.vb: WallJump(Integer)
- uid: Global.Player.Jump
  commentId: M:Global.Player.Jump
  id: Jump
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Jump()
  nameWithType: Player.Jump()
  fullName: Player.Jump()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.Jump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Jump()
    content.vb: Public Sub Jump()
  overload: Global.Player.Jump*
- uid: Global.Player.JumpOnChunk
  commentId: M:Global.Player.JumpOnChunk
  id: JumpOnChunk
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JumpOnChunk()
  nameWithType: Player.JumpOnChunk()
  fullName: Player.JumpOnChunk()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.JumpOnChunk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void JumpOnChunk()
    content.vb: Public Sub JumpOnChunk()
  overload: Global.Player.JumpOnChunk*
- uid: Global.Player.WatcherUpdate
  commentId: M:Global.Player.WatcherUpdate
  id: WatcherUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WatcherUpdate()
  nameWithType: Player.WatcherUpdate()
  fullName: Player.WatcherUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.WatcherUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WatcherUpdate()
    content.vb: Public Sub WatcherUpdate()
  overload: Global.Player.WatcherUpdate*
- uid: Global.Player.ApplyWarpFatigue(RainWorldGame)
  commentId: M:Global.Player.ApplyWarpFatigue(RainWorldGame)
  id: ApplyWarpFatigue(RainWorldGame)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ApplyWarpFatigue(RainWorldGame)
  nameWithType: Player.ApplyWarpFatigue(RainWorldGame)
  fullName: Player.ApplyWarpFatigue(RainWorldGame)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ApplyWarpFatigue(RainWorldGame)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyWarpFatigue(RainWorldGame game)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Player.ApplyWarpFatigue(RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyWarpFatigue(game As RainWorldGame)
  overload: Global.Player.ApplyWarpFatigue*
- uid: Global.Player.TickLevitation(System.Boolean)
  commentId: M:Global.Player.TickLevitation(System.Boolean)
  id: TickLevitation(System.Boolean)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TickLevitation(bool)
  nameWithType: Player.TickLevitation(bool)
  fullName: Player.TickLevitation(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.TickLevitation(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TickLevitation(bool levitateUp)
    parameters:
    - id: levitateUp
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>levitateUp</parameter>
            <parameter>M:Player.TickLevitation(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub TickLevitation(levitateUp As Boolean)
  overload: Global.Player.TickLevitation*
  nameWithType.vb: Player.TickLevitation(Boolean)
  fullName.vb: Player.TickLevitation(Boolean)
  name.vb: TickLevitation(Boolean)
- uid: Global.Player.StopLevitation
  commentId: M:Global.Player.StopLevitation
  id: StopLevitation
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: StopLevitation()
  nameWithType: Player.StopLevitation()
  fullName: Player.StopLevitation()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.StopLevitation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StopLevitation()
    content.vb: Public Sub StopLevitation()
  overload: Global.Player.StopLevitation*
- uid: Global.Player.RippleSpawnInteractions
  commentId: M:Global.Player.RippleSpawnInteractions
  id: RippleSpawnInteractions
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RippleSpawnInteractions()
  nameWithType: Player.RippleSpawnInteractions()
  fullName: Player.RippleSpawnInteractions()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.RippleSpawnInteractions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RippleSpawnInteractions()
    content.vb: Public Sub RippleSpawnInteractions()
  overload: Global.Player.RippleSpawnInteractions*
- uid: Global.Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)
  commentId: M:Global.Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)
  id: IsBlacklistedRoomFromDynamicWarpPoints(Room)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: IsBlacklistedRoomFromDynamicWarpPoints(Room)
  nameWithType: Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)
  fullName: Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.BlackListReason IsBlacklistedRoomFromDynamicWarpPoints(Room rm)
    parameters:
    - id: rm
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rm</parameter>
            <parameter>M:Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)</parameter>
          </include>
        </markup>
    return:
      type: Global.Player.BlackListReason
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.IsBlacklistedRoomFromDynamicWarpPoints(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsBlacklistedRoomFromDynamicWarpPoints(rm As Room) As Player.BlackListReason
  overload: Global.Player.IsBlacklistedRoomFromDynamicWarpPoints*
- uid: Global.Player.SpawnDynamicWarpPoint
  commentId: M:Global.Player.SpawnDynamicWarpPoint
  id: SpawnDynamicWarpPoint
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpawnDynamicWarpPoint()
  nameWithType: Player.SpawnDynamicWarpPoint()
  fullName: Player.SpawnDynamicWarpPoint()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpawnDynamicWarpPoint</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpawnDynamicWarpPoint()
    content.vb: Public Sub SpawnDynamicWarpPoint()
  overload: Global.Player.SpawnDynamicWarpPoint*
- uid: Global.Player.RoomBlacklistedFromRippleTears(Room)
  commentId: M:Global.Player.RoomBlacklistedFromRippleTears(Room)
  id: RoomBlacklistedFromRippleTears(Room)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RoomBlacklistedFromRippleTears(Room)
  nameWithType: Player.RoomBlacklistedFromRippleTears(Room)
  fullName: Player.RoomBlacklistedFromRippleTears(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.RoomBlacklistedFromRippleTears(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RoomBlacklistedFromRippleTears(Room rm)
    parameters:
    - id: rm
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rm</parameter>
            <parameter>M:Player.RoomBlacklistedFromRippleTears(Room)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.RoomBlacklistedFromRippleTears(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Function RoomBlacklistedFromRippleTears(rm As Room) As Boolean
  overload: Global.Player.RoomBlacklistedFromRippleTears*
- uid: Global.Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)
  commentId: M:Global.Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)
  id: SpawnPersistentRipple(System.Single,System.Single,System.Int32)
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpawnPersistentRipple(float, float, int)
  nameWithType: Player.SpawnPersistentRipple(float, float, int)
  fullName: Player.SpawnPersistentRipple(float, float, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpawnPersistentRipple(float minRadius, float maxRadius, int cycleExpiry)
    parameters:
    - id: minRadius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minRadius</parameter>
            <parameter>M:Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: maxRadius
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxRadius</parameter>
            <parameter>M:Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: cycleExpiry
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cycleExpiry</parameter>
            <parameter>M:Player.SpawnPersistentRipple(System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SpawnPersistentRipple(minRadius As Single, maxRadius As Single, cycleExpiry As Integer)
  overload: Global.Player.SpawnPersistentRipple*
  nameWithType.vb: Player.SpawnPersistentRipple(Single, Single, Integer)
  fullName.vb: Player.SpawnPersistentRipple(Single, Single, Integer)
  name.vb: SpawnPersistentRipple(Single, Single, Integer)
- uid: Global.Player.SpawnWatcherMechanicRipple
  commentId: M:Global.Player.SpawnWatcherMechanicRipple
  id: SpawnWatcherMechanicRipple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SpawnWatcherMechanicRipple()
  nameWithType: Player.SpawnWatcherMechanicRipple()
  fullName: Player.SpawnWatcherMechanicRipple()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.SpawnWatcherMechanicRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CosmeticRipple SpawnWatcherMechanicRipple()
    return:
      type: Watcher.CosmeticRipple
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Player.SpawnWatcherMechanicRipple</parameter>
          </include>
        </markup>
    content.vb: Public Function SpawnWatcherMechanicRipple() As CosmeticRipple
  overload: Global.Player.SpawnWatcherMechanicRipple*
- uid: Global.Player.DestroyTransitionRipple
  commentId: M:Global.Player.DestroyTransitionRipple
  id: DestroyTransitionRipple
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DestroyTransitionRipple()
  nameWithType: Player.DestroyTransitionRipple()
  fullName: Player.DestroyTransitionRipple()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.DestroyTransitionRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DestroyTransitionRipple()
    content.vb: Public Sub DestroyTransitionRipple()
  overload: Global.Player.DestroyTransitionRipple*
- uid: Global.Player.TransitionRippleUpdate
  commentId: M:Global.Player.TransitionRippleUpdate
  id: TransitionRippleUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: TransitionRippleUpdate()
  nameWithType: Player.TransitionRippleUpdate()
  fullName: Player.TransitionRippleUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.TransitionRippleUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TransitionRippleUpdate()
    content.vb: Public Sub TransitionRippleUpdate()
  overload: Global.Player.TransitionRippleUpdate*
- uid: Global.Player.WarpSpawningUpdate
  commentId: M:Global.Player.WarpSpawningUpdate
  id: WarpSpawningUpdate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: WarpSpawningUpdate()
  nameWithType: Player.WarpSpawningUpdate()
  fullName: Player.WarpSpawningUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.WarpSpawningUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void WarpSpawningUpdate()
    content.vb: Public Sub WarpSpawningUpdate()
  overload: Global.Player.WarpSpawningUpdate*
- uid: Global.Player.ToggleCamo
  commentId: M:Global.Player.ToggleCamo
  id: ToggleCamo
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ToggleCamo()
  nameWithType: Player.ToggleCamo()
  fullName: Player.ToggleCamo()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Player.ToggleCamo</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ToggleCamo()
    content.vb: Public Sub ToggleCamo()
  overload: Global.Player.ToggleCamo*
- uid: Global.Player.ReadyForStarveJolly
  commentId: P:Global.Player.ReadyForStarveJolly
  id: ReadyForStarveJolly
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ReadyForStarveJolly
  nameWithType: Player.ReadyForStarveJolly
  fullName: Player.ReadyForStarveJolly
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.ReadyForStarveJolly</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReadyForStarveJolly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadyForStarveJolly As Boolean
  overload: Global.Player.ReadyForStarveJolly*
- uid: Global.Player.ReadyForWinJolly
  commentId: P:Global.Player.ReadyForWinJolly
  id: ReadyForWinJolly
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ReadyForWinJolly
  nameWithType: Player.ReadyForWinJolly
  fullName: Player.ReadyForWinJolly
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.ReadyForWinJolly</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReadyForWinJolly { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadyForWinJolly As Boolean
  overload: Global.Player.ReadyForWinJolly*
- uid: Global.Player.IsJollyPlayer
  commentId: P:Global.Player.IsJollyPlayer
  id: IsJollyPlayer
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: IsJollyPlayer
  nameWithType: Player.IsJollyPlayer
  fullName: Player.IsJollyPlayer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.IsJollyPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsJollyPlayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsJollyPlayer As Boolean
  overload: Global.Player.IsJollyPlayer*
- uid: Global.Player.JollyOption
  commentId: P:Global.Player.JollyOption
  id: JollyOption
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: JollyOption
  nameWithType: Player.JollyOption
  fullName: Player.JollyOption
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.JollyOption</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public JollyPlayerOptions JollyOption { get; }
    parameters: []
    return:
      type: JollyCoop.JollyMenu.JollyPlayerOptions
    content.vb: Public ReadOnly Property JollyOption As JollyPlayerOptions
  overload: Global.Player.JollyOption*
- uid: Global.Player.GetPlayerStates
  commentId: P:Global.Player.GetPlayerStates
  id: GetPlayerStates
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GetPlayerStates
  nameWithType: Player.GetPlayerStates
  fullName: Player.GetPlayerStates
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.GetPlayerStates</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlayerState> GetPlayerStates { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{PlayerState}
    content.vb: Public ReadOnly Property GetPlayerStates As List(Of PlayerState)
  overload: Global.Player.GetPlayerStates*
- uid: Global.Player.InitialShortcutWaitTime
  commentId: P:Global.Player.InitialShortcutWaitTime
  id: InitialShortcutWaitTime
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InitialShortcutWaitTime
  nameWithType: Player.InitialShortcutWaitTime
  fullName: Player.InitialShortcutWaitTime
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.InitialShortcutWaitTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int InitialShortcutWaitTime { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property InitialShortcutWaitTime As Integer
  overload: Global.Player.InitialShortcutWaitTime*
- uid: Global.Player.CameraInputDelay
  commentId: P:Global.Player.CameraInputDelay
  id: CameraInputDelay
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CameraInputDelay
  nameWithType: Player.CameraInputDelay
  fullName: Player.CameraInputDelay
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CameraInputDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CameraInputDelay { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CameraInputDelay As Integer
  overload: Global.Player.CameraInputDelay*
- uid: Global.Player.DreamState
  commentId: P:Global.Player.DreamState
  id: DreamState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: DreamState
  nameWithType: Player.DreamState
  fullName: Player.DreamState
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.DreamState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DreamState { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DreamState As Boolean
  overload: Global.Player.DreamState*
- uid: Global.Player.isNPC
  commentId: P:Global.Player.isNPC
  id: isNPC
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isNPC
  nameWithType: Player.isNPC
  fullName: Player.isNPC
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.isNPC</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isNPC { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isNPC As Boolean
  overload: Global.Player.isNPC*
- uid: Global.Player.AI
  commentId: P:Global.Player.AI
  id: AI
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: AI
  nameWithType: Player.AI
  fullName: Player.AI
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.AI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugNPCAI AI { get; }
    parameters: []
    return:
      type: MoreSlugcats.SlugNPCAI
    content.vb: Public ReadOnly Property AI As SlugNPCAI
  overload: Global.Player.AI*
- uid: Global.Player.CanPutSlugToBack
  commentId: P:Global.Player.CanPutSlugToBack
  id: CanPutSlugToBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanPutSlugToBack
  nameWithType: Player.CanPutSlugToBack
  fullName: Player.CanPutSlugToBack
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanPutSlugToBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanPutSlugToBack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanPutSlugToBack As Boolean
  overload: Global.Player.CanPutSlugToBack*
- uid: Global.Player.CanRetrieveSlugFromBack
  commentId: P:Global.Player.CanRetrieveSlugFromBack
  id: CanRetrieveSlugFromBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanRetrieveSlugFromBack
  nameWithType: Player.CanRetrieveSlugFromBack
  fullName: Player.CanRetrieveSlugFromBack
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanRetrieveSlugFromBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanRetrieveSlugFromBack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanRetrieveSlugFromBack As Boolean
  overload: Global.Player.CanRetrieveSlugFromBack*
- uid: Global.Player.input
  commentId: P:Global.Player.input
  id: input
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: input
  nameWithType: Player.input
  fullName: Player.input
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.input</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage[] input { get; }
    parameters: []
    return:
      type: Global.Player.InputPackage[]
    content.vb: Public ReadOnly Property input As Player.InputPackage()
  overload: Global.Player.input*
- uid: Global.Player.flipDirection
  commentId: P:Global.Player.flipDirection
  id: flipDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: flipDirection
  nameWithType: Player.flipDirection
  fullName: Player.flipDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.flipDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int flipDirection { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property flipDirection As Integer
  overload: Global.Player.flipDirection*
- uid: Global.Player.lastFlipDirection
  commentId: P:Global.Player.lastFlipDirection
  id: lastFlipDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: lastFlipDirection
  nameWithType: Player.lastFlipDirection
  fullName: Player.lastFlipDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.lastFlipDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastFlipDirection { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property lastFlipDirection As Integer
  overload: Global.Player.lastFlipDirection*
- uid: Global.Player.Adrenaline
  commentId: P:Global.Player.Adrenaline
  id: Adrenaline
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Adrenaline
  nameWithType: Player.Adrenaline
  fullName: Player.Adrenaline
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Adrenaline</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Adrenaline { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Adrenaline As Single
  overload: Global.Player.Adrenaline*
- uid: Global.Player.Wiggle
  commentId: P:Global.Player.Wiggle
  id: Wiggle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Wiggle
  nameWithType: Player.Wiggle
  fullName: Player.Wiggle
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Wiggle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Wiggle { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Wiggle As Single
  overload: Global.Player.Wiggle*
- uid: Global.Player.GraspWiggle
  commentId: P:Global.Player.GraspWiggle
  id: GraspWiggle
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: GraspWiggle
  nameWithType: Player.GraspWiggle
  fullName: Player.GraspWiggle
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.GraspWiggle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float GraspWiggle { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property GraspWiggle As Single
  overload: Global.Player.GraspWiggle*
- uid: Global.Player.slugcatStats
  commentId: P:Global.Player.slugcatStats
  id: slugcatStats
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: slugcatStats
  nameWithType: Player.slugcatStats
  fullName: Player.slugcatStats
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.slugcatStats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats slugcatStats { get; }
    parameters: []
    return:
      type: Global.SlugcatStats
    content.vb: Public ReadOnly Property slugcatStats As SlugcatStats
  overload: Global.Player.slugcatStats*
- uid: Global.Player.Malnourished
  commentId: P:Global.Player.Malnourished
  id: Malnourished
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Malnourished
  nameWithType: Player.Malnourished
  fullName: Player.Malnourished
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Malnourished</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Malnourished { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Malnourished As Boolean
  overload: Global.Player.Malnourished*
- uid: Global.Player.Sleeping
  commentId: P:Global.Player.Sleeping
  id: Sleeping
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Sleeping
  nameWithType: Player.Sleeping
  fullName: Player.Sleeping
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Sleeping</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Sleeping { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Sleeping As Boolean
  overload: Global.Player.Sleeping*
- uid: Global.Player.FoodInStomach
  commentId: P:Global.Player.FoodInStomach
  id: FoodInStomach
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: FoodInStomach
  nameWithType: Player.FoodInStomach
  fullName: Player.FoodInStomach
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.FoodInStomach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FoodInStomach { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FoodInStomach As Integer
  overload: Global.Player.FoodInStomach*
- uid: Global.Player.MaxFoodInStomach
  commentId: P:Global.Player.MaxFoodInStomach
  id: MaxFoodInStomach
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MaxFoodInStomach
  nameWithType: Player.MaxFoodInStomach
  fullName: Player.MaxFoodInStomach
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.MaxFoodInStomach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int MaxFoodInStomach { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MaxFoodInStomach As Integer
  overload: Global.Player.MaxFoodInStomach*
- uid: Global.Player.Karma
  commentId: P:Global.Player.Karma
  id: Karma
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Karma
  nameWithType: Player.Karma
  fullName: Player.Karma
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Karma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Karma { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Karma As Integer
  overload: Global.Player.Karma*
- uid: Global.Player.KarmaCap
  commentId: P:Global.Player.KarmaCap
  id: KarmaCap
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: KarmaCap
  nameWithType: Player.KarmaCap
  fullName: Player.KarmaCap
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.KarmaCap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int KarmaCap { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property KarmaCap As Integer
  overload: Global.Player.KarmaCap*
- uid: Global.Player.KarmaIsReinforced
  commentId: P:Global.Player.KarmaIsReinforced
  id: KarmaIsReinforced
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: KarmaIsReinforced
  nameWithType: Player.KarmaIsReinforced
  fullName: Player.KarmaIsReinforced
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.KarmaIsReinforced</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool KarmaIsReinforced { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property KarmaIsReinforced As Boolean
  overload: Global.Player.KarmaIsReinforced*
- uid: Global.Player.PlaceKarmaFlower
  commentId: P:Global.Player.PlaceKarmaFlower
  id: PlaceKarmaFlower
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PlaceKarmaFlower
  nameWithType: Player.PlaceKarmaFlower
  fullName: Player.PlaceKarmaFlower
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.PlaceKarmaFlower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PlaceKarmaFlower { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PlaceKarmaFlower As Boolean
  overload: Global.Player.PlaceKarmaFlower*
- uid: Global.Player.SessionRecord
  commentId: P:Global.Player.SessionRecord
  id: SessionRecord
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: SessionRecord
  nameWithType: Player.SessionRecord
  fullName: Player.SessionRecord
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.SessionRecord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerSessionRecord SessionRecord { get; }
    parameters: []
    return:
      type: Global.PlayerSessionRecord
    content.vb: Public ReadOnly Property SessionRecord As PlayerSessionRecord
  overload: Global.Player.SessionRecord*
- uid: Global.Player.Sneak
  commentId: P:Global.Player.Sneak
  id: Sneak
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Sneak
  nameWithType: Player.Sneak
  fullName: Player.Sneak
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Sneak</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Sneak { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property Sneak As Single
  overload: Global.Player.Sneak*
- uid: Global.Player.playerState
  commentId: P:Global.Player.playerState
  id: playerState
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: playerState
  nameWithType: Player.playerState
  fullName: Player.playerState
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.playerState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlayerState playerState { get; }
    parameters: []
    return:
      type: Global.PlayerState
    content.vb: Public ReadOnly Property playerState As PlayerState
  overload: Global.Player.playerState*
- uid: Global.Player.ThrowDirection
  commentId: P:Global.Player.ThrowDirection
  id: ThrowDirection
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: ThrowDirection
  nameWithType: Player.ThrowDirection
  fullName: Player.ThrowDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.ThrowDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ThrowDirection { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ThrowDirection As Integer
  overload: Global.Player.ThrowDirection*
- uid: Global.Player.animationFrame
  commentId: P:Global.Player.animationFrame
  id: animationFrame
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: animationFrame
  nameWithType: Player.animationFrame
  fullName: Player.animationFrame
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.animationFrame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int animationFrame { get; protected set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property animationFrame As Integer
  overload: Global.Player.animationFrame*
- uid: Global.Player.windAffectiveness
  commentId: P:Global.Player.windAffectiveness
  id: windAffectiveness
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: windAffectiveness
  nameWithType: Player.windAffectiveness
  fullName: Player.windAffectiveness
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.windAffectiveness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override float windAffectiveness { get; protected set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides Property windAffectiveness As Single
  overridden: Global.PhysicalObject.windAffectiveness
  overload: Global.Player.windAffectiveness*
- uid: Global.Player.VisibilityBonus
  commentId: P:Global.Player.VisibilityBonus
  id: VisibilityBonus
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: VisibilityBonus
  nameWithType: Player.VisibilityBonus
  fullName: Player.VisibilityBonus
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.VisibilityBonus</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override float VisibilityBonus { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides ReadOnly Property VisibilityBonus As Single
  overridden: Global.PhysicalObject.VisibilityBonus
  overload: Global.Player.VisibilityBonus*
- uid: Global.Player.InjectedPoisonColor
  commentId: P:Global.Player.InjectedPoisonColor
  id: InjectedPoisonColor
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: InjectedPoisonColor
  nameWithType: Player.InjectedPoisonColor
  fullName: Player.InjectedPoisonColor
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.InjectedPoisonColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color InjectedPoisonColor { get; set; }
    parameters: []
    return:
      type: UnityEngine.Color
    content.vb: Public Property InjectedPoisonColor As Color
  overload: Global.Player.InjectedPoisonColor*
  implements:
  - Watcher.IHaveInjectedPoisonColor.InjectedPoisonColor
- uid: Global.Player.CurrentFood
  commentId: P:Global.Player.CurrentFood
  id: CurrentFood
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CurrentFood
  nameWithType: Player.CurrentFood
  fullName: Player.CurrentFood
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CurrentFood</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CurrentFood { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CurrentFood As Integer
  overload: Global.Player.CurrentFood*
  implements:
  - HUD.IOwnAHUD.CurrentFood
- uid: Global.Player.MapInput
  commentId: P:Global.Player.MapInput
  id: MapInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MapInput
  nameWithType: Player.MapInput
  fullName: Player.MapInput
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.MapInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage MapInput { get; }
    parameters: []
    return:
      type: Global.Player.InputPackage
    content.vb: Public ReadOnly Property MapInput As Player.InputPackage
  overload: Global.Player.MapInput*
  implements:
  - HUD.IOwnAHUD.MapInput
- uid: Global.Player.RevealMap
  commentId: P:Global.Player.RevealMap
  id: RevealMap
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RevealMap
  nameWithType: Player.RevealMap
  fullName: Player.RevealMap
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.RevealMap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RevealMap { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RevealMap As Boolean
  overload: Global.Player.RevealMap*
  implements:
  - HUD.IOwnAHUD.RevealMap
- uid: Global.Player.MapOwnerInRoomPosition
  commentId: P:Global.Player.MapOwnerInRoomPosition
  id: MapOwnerInRoomPosition
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MapOwnerInRoomPosition
  nameWithType: Player.MapOwnerInRoomPosition
  fullName: Player.MapOwnerInRoomPosition
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.MapOwnerInRoomPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MapOwnerInRoomPosition { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property MapOwnerInRoomPosition As Vector2
  overload: Global.Player.MapOwnerInRoomPosition*
  implements:
  - HUD.IOwnAHUD.MapOwnerInRoomPosition
- uid: Global.Player.MapOwnerRoom
  commentId: P:Global.Player.MapOwnerRoom
  id: MapOwnerRoom
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MapOwnerRoom
  nameWithType: Player.MapOwnerRoom
  fullName: Player.MapOwnerRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.MapOwnerRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int MapOwnerRoom { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MapOwnerRoom As Integer
  overload: Global.Player.MapOwnerRoom*
  implements:
  - HUD.IOwnAHUD.MapOwnerRoom
- uid: Global.Player.MapDiscoveryActive
  commentId: P:Global.Player.MapDiscoveryActive
  id: MapDiscoveryActive
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: MapDiscoveryActive
  nameWithType: Player.MapDiscoveryActive
  fullName: Player.MapDiscoveryActive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.MapDiscoveryActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MapDiscoveryActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MapDiscoveryActive As Boolean
  overload: Global.Player.MapDiscoveryActive*
  implements:
  - HUD.IOwnAHUD.MapDiscoveryActive
- uid: Global.Player.EffectiveRoomGravity
  commentId: P:Global.Player.EffectiveRoomGravity
  id: EffectiveRoomGravity
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: EffectiveRoomGravity
  nameWithType: Player.EffectiveRoomGravity
  fullName: Player.EffectiveRoomGravity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.EffectiveRoomGravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override float EffectiveRoomGravity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Overrides ReadOnly Property EffectiveRoomGravity As Single
  overridden: Global.PhysicalObject.EffectiveRoomGravity
  overload: Global.Player.EffectiveRoomGravity*
- uid: Global.Player.Wounded
  commentId: P:Global.Player.Wounded
  id: Wounded
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: Wounded
  nameWithType: Player.Wounded
  fullName: Player.Wounded
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.Wounded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Wounded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Wounded As Boolean
  overload: Global.Player.Wounded*
- uid: Global.Player.isRivulet
  commentId: P:Global.Player.isRivulet
  id: isRivulet
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isRivulet
  nameWithType: Player.isRivulet
  fullName: Player.isRivulet
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.isRivulet</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isRivulet { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isRivulet As Boolean
  overload: Global.Player.isRivulet*
- uid: Global.Player.isGourmand
  commentId: P:Global.Player.isGourmand
  id: isGourmand
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isGourmand
  nameWithType: Player.isGourmand
  fullName: Player.isGourmand
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.isGourmand</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isGourmand { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isGourmand As Boolean
  overload: Global.Player.isGourmand*
- uid: Global.Player.isSlugpup
  commentId: P:Global.Player.isSlugpup
  id: isSlugpup
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: isSlugpup
  nameWithType: Player.isSlugpup
  fullName: Player.isSlugpup
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.isSlugpup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isSlugpup { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isSlugpup As Boolean
  overload: Global.Player.isSlugpup*
- uid: Global.Player.PainJumps
  commentId: P:Global.Player.PainJumps
  id: PainJumps
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: PainJumps
  nameWithType: Player.PainJumps
  fullName: Player.PainJumps
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.PainJumps</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PainJumps { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property PainJumps As Boolean
  overload: Global.Player.PainJumps*
- uid: Global.Player.CanPutSpearToBack
  commentId: P:Global.Player.CanPutSpearToBack
  id: CanPutSpearToBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanPutSpearToBack
  nameWithType: Player.CanPutSpearToBack
  fullName: Player.CanPutSpearToBack
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanPutSpearToBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanPutSpearToBack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanPutSpearToBack As Boolean
  overload: Global.Player.CanPutSpearToBack*
- uid: Global.Player.CanRetrieveSpearFromBack
  commentId: P:Global.Player.CanRetrieveSpearFromBack
  id: CanRetrieveSpearFromBack
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanRetrieveSpearFromBack
  nameWithType: Player.CanRetrieveSpearFromBack
  fullName: Player.CanRetrieveSpearFromBack
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanRetrieveSpearFromBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanRetrieveSpearFromBack { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanRetrieveSpearFromBack As Boolean
  overload: Global.Player.CanRetrieveSpearFromBack*
- uid: Global.Player.activateDynamicWarpDuration
  commentId: P:Global.Player.activateDynamicWarpDuration
  id: activateDynamicWarpDuration
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: activateDynamicWarpDuration
  nameWithType: Player.activateDynamicWarpDuration
  fullName: Player.activateDynamicWarpDuration
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.activateDynamicWarpDuration</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int activateDynamicWarpDuration { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property activateDynamicWarpDuration As Integer
  overload: Global.Player.activateDynamicWarpDuration*
- uid: Global.Player.rippleLevel
  commentId: P:Global.Player.rippleLevel
  id: rippleLevel
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: rippleLevel
  nameWithType: Player.rippleLevel
  fullName: Player.rippleLevel
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.rippleLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rippleLevel { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property rippleLevel As Single
  overload: Global.Player.rippleLevel*
- uid: Global.Player.maxRippleLevel
  commentId: P:Global.Player.maxRippleLevel
  id: maxRippleLevel
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: maxRippleLevel
  nameWithType: Player.maxRippleLevel
  fullName: Player.maxRippleLevel
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.maxRippleLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float maxRippleLevel { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property maxRippleLevel As Single
  overload: Global.Player.maxRippleLevel*
- uid: Global.Player.CanLevitate
  commentId: P:Global.Player.CanLevitate
  id: CanLevitate
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanLevitate
  nameWithType: Player.CanLevitate
  fullName: Player.CanLevitate
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanLevitate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanLevitate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanLevitate As Boolean
  overload: Global.Player.CanLevitate*
- uid: Global.Player.CanSpawnDynamicWarpPoints
  commentId: P:Global.Player.CanSpawnDynamicWarpPoints
  id: CanSpawnDynamicWarpPoints
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: CanSpawnDynamicWarpPoints
  nameWithType: Player.CanSpawnDynamicWarpPoints
  fullName: Player.CanSpawnDynamicWarpPoints
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.CanSpawnDynamicWarpPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CanSpawnDynamicWarpPoints { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property CanSpawnDynamicWarpPoints As Boolean
  overload: Global.Player.CanSpawnDynamicWarpPoints*
- uid: Global.Player.camoLimit
  commentId: P:Global.Player.camoLimit
  id: camoLimit
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: camoLimit
  nameWithType: Player.camoLimit
  fullName: Player.camoLimit
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.camoLimit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float camoLimit { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property camoLimit As Single
  overload: Global.Player.camoLimit*
- uid: Global.Player.usableCamoLimit
  commentId: P:Global.Player.usableCamoLimit
  id: usableCamoLimit
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: usableCamoLimit
  nameWithType: Player.usableCamoLimit
  fullName: Player.usableCamoLimit
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.usableCamoLimit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float usableCamoLimit { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property usableCamoLimit As Single
  overload: Global.Player.usableCamoLimit*
- uid: Global.Player.watcherDynamicWarpInput
  commentId: P:Global.Player.watcherDynamicWarpInput
  id: watcherDynamicWarpInput
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: watcherDynamicWarpInput
  nameWithType: Player.watcherDynamicWarpInput
  fullName: Player.watcherDynamicWarpInput
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.watcherDynamicWarpInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool watcherDynamicWarpInput { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property watcherDynamicWarpInput As Boolean
  overload: Global.Player.watcherDynamicWarpInput*
- uid: Global.Player.RippleAbilityActivationButtonCondition
  commentId: P:Global.Player.RippleAbilityActivationButtonCondition
  id: RippleAbilityActivationButtonCondition
  parent: Global.Player
  langs:
  - csharp
  - vb
  name: RippleAbilityActivationButtonCondition
  nameWithType: Player.RippleAbilityActivationButtonCondition
  fullName: Player.RippleAbilityActivationButtonCondition
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Player.RippleAbilityActivationButtonCondition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RippleAbilityActivationButtonCondition { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RippleAbilityActivationButtonCondition As Boolean
  overload: Global.Player.RippleAbilityActivationButtonCondition*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: HUD.IOwnAHUD
  commentId: T:HUD.IOwnAHUD
  parent: HUD
  isExternal: true
  href: HUD.IOwnAHUD.html
  name: IOwnAHUD
  nameWithType: IOwnAHUD
  fullName: HUD.IOwnAHUD
- uid: Watcher.IHaveInjectedPoisonColor
  commentId: T:Watcher.IHaveInjectedPoisonColor
  parent: Watcher
  isExternal: true
  href: Watcher.IHaveInjectedPoisonColor.html
  name: IHaveInjectedPoisonColor
  nameWithType: IHaveInjectedPoisonColor
  fullName: Watcher.IHaveInjectedPoisonColor
- uid: Global.Creature.blind
  commentId: F:Global.Creature.blind
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_blind
  name: blind
  nameWithType: Creature.blind
  fullName: Creature.blind
- uid: Global.Creature.deaf
  commentId: F:Global.Creature.deaf
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_deaf
  name: deaf
  nameWithType: Creature.deaf
  fullName: Creature.deaf
- uid: Global.Creature.killTag
  commentId: F:Global.Creature.killTag
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_killTag
  name: killTag
  nameWithType: Creature.killTag
  fullName: Creature.killTag
- uid: Global.Creature.killTagCounter
  commentId: F:Global.Creature.killTagCounter
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_killTagCounter
  name: killTagCounter
  nameWithType: Creature.killTagCounter
  fullName: Creature.killTagCounter
- uid: Global.Creature.leechedOut
  commentId: F:Global.Creature.leechedOut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_leechedOut
  name: leechedOut
  nameWithType: Creature.leechedOut
  fullName: Creature.leechedOut
- uid: Global.Creature.newToRoomInvinsibility
  commentId: F:Global.Creature.newToRoomInvinsibility
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_newToRoomInvinsibility
  name: newToRoomInvinsibility
  nameWithType: Creature.newToRoomInvinsibility
  fullName: Creature.newToRoomInvinsibility
- uid: Global.Creature.rainDeath
  commentId: F:Global.Creature.rainDeath
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_rainDeath
  name: rainDeath
  nameWithType: Creature.rainDeath
  fullName: Creature.rainDeath
- uid: Global.Creature.shortcutDelay
  commentId: F:Global.Creature.shortcutDelay
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_shortcutDelay
  name: shortcutDelay
  nameWithType: Creature.shortcutDelay
  fullName: Creature.shortcutDelay
- uid: Global.Creature.enteringShortCut
  commentId: F:Global.Creature.enteringShortCut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_enteringShortCut
  name: enteringShortCut
  nameWithType: Creature.enteringShortCut
  fullName: Creature.enteringShortCut
- uid: Global.Creature.NPCTransportationDestination
  commentId: F:Global.Creature.NPCTransportationDestination
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NPCTransportationDestination
  name: NPCTransportationDestination
  nameWithType: Creature.NPCTransportationDestination
  fullName: Creature.NPCTransportationDestination
- uid: Global.Creature.lastCoord
  commentId: F:Global.Creature.lastCoord
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastCoord
  name: lastCoord
  nameWithType: Creature.lastCoord
  fullName: Creature.lastCoord
- uid: Global.Creature.lavaContact
  commentId: F:Global.Creature.lavaContact
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lavaContact
  name: lavaContact
  nameWithType: Creature.lavaContact
  fullName: Creature.lavaContact
- uid: Global.Creature.lavaContactCount
  commentId: F:Global.Creature.lavaContactCount
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lavaContactCount
  name: lavaContactCount
  nameWithType: Creature.lavaContactCount
  fullName: Creature.lavaContactCount
- uid: Global.Creature.rippleTransferCooldown
  commentId: F:Global.Creature.rippleTransferCooldown
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_rippleTransferCooldown
  name: rippleTransferCooldown
  nameWithType: Creature.rippleTransferCooldown
  fullName: Creature.rippleTransferCooldown
- uid: Global.Creature.repelLocusts
  commentId: F:Global.Creature.repelLocusts
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_repelLocusts
  name: repelLocusts
  nameWithType: Creature.repelLocusts
  fullName: Creature.repelLocusts
- uid: Global.Creature.muddy
  commentId: F:Global.Creature.muddy
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_muddy
  name: muddy
  nameWithType: Creature.muddy
  fullName: Creature.muddy
- uid: Global.Creature.mudColor
  commentId: F:Global.Creature.mudColor
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mudColor
  name: mudColor
  nameWithType: Creature.mudColor
  fullName: Creature.mudColor
- uid: Global.Creature.injectedPoison
  commentId: F:Global.Creature.injectedPoison
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_injectedPoison
  name: injectedPoison
  nameWithType: Creature.injectedPoison
  fullName: Creature.injectedPoison
- uid: Global.Creature.GrabbedByDaddyCorruption
  commentId: F:Global.Creature.GrabbedByDaddyCorruption
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_GrabbedByDaddyCorruption
  name: GrabbedByDaddyCorruption
  nameWithType: Creature.GrabbedByDaddyCorruption
  fullName: Creature.GrabbedByDaddyCorruption
- uid: Global.Creature.stunDamageType
  commentId: F:Global.Creature.stunDamageType
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_stunDamageType
  name: stunDamageType
  nameWithType: Creature.stunDamageType
  fullName: Creature.stunDamageType
- uid: Global.Creature.HypothermiaGain
  commentId: F:Global.Creature.HypothermiaGain
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaGain
  name: HypothermiaGain
  nameWithType: Creature.HypothermiaGain
  fullName: Creature.HypothermiaGain
- uid: Global.Creature.HypothermiaExposure
  commentId: F:Global.Creature.HypothermiaExposure
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaExposure
  name: HypothermiaExposure
  nameWithType: Creature.HypothermiaExposure
  fullName: Creature.HypothermiaExposure
- uid: Global.Creature.inputWithoutDiagonals
  commentId: F:Global.Creature.inputWithoutDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inputWithoutDiagonals
  name: inputWithoutDiagonals
  nameWithType: Creature.inputWithoutDiagonals
  fullName: Creature.inputWithoutDiagonals
- uid: Global.Creature.lastInputWithoutDiagonals
  commentId: F:Global.Creature.lastInputWithoutDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastInputWithoutDiagonals
  name: lastInputWithoutDiagonals
  nameWithType: Creature.lastInputWithoutDiagonals
  fullName: Creature.lastInputWithoutDiagonals
- uid: Global.Creature.inputWithDiagonals
  commentId: F:Global.Creature.inputWithDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inputWithDiagonals
  name: inputWithDiagonals
  nameWithType: Creature.inputWithDiagonals
  fullName: Creature.inputWithDiagonals
- uid: Global.Creature.lastInputWithDiagonals
  commentId: F:Global.Creature.lastInputWithDiagonals
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_lastInputWithDiagonals
  name: lastInputWithDiagonals
  nameWithType: Creature.lastInputWithDiagonals
  fullName: Creature.lastInputWithDiagonals
- uid: Global.Creature.freezeControls
  commentId: F:Global.Creature.freezeControls
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_freezeControls
  name: freezeControls
  nameWithType: Creature.freezeControls
  fullName: Creature.freezeControls
- uid: Global.Creature.protectDeathRecursionFlag
  commentId: F:Global.Creature.protectDeathRecursionFlag
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_protectDeathRecursionFlag
  name: protectDeathRecursionFlag
  nameWithType: Creature.protectDeathRecursionFlag
  fullName: Creature.protectDeathRecursionFlag
- uid: Global.Creature.RecreateSticksFromAbstract
  commentId: M:Global.Creature.RecreateSticksFromAbstract
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  name: RecreateSticksFromAbstract()
  nameWithType: Creature.RecreateSticksFromAbstract()
  fullName: Creature.RecreateSticksFromAbstract()
  spec.csharp:
  - uid: Global.Creature.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.RecreateSticksFromAbstract
    name: RecreateSticksFromAbstract
    isExternal: true
    href: Global.Creature.html#Creature_RecreateSticksFromAbstract
  - name: (
  - name: )
- uid: Global.Creature.PlaceInRoom(Room)
  commentId: M:Global.Creature.PlaceInRoom(Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_PlaceInRoom_Room_
  name: PlaceInRoom(Room)
  nameWithType: Creature.PlaceInRoom(Room)
  fullName: Creature.PlaceInRoom(Room)
  spec.csharp:
  - uid: Global.Creature.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.Creature.html#Creature_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.PlaceInRoom(Room)
    name: PlaceInRoom
    isExternal: true
    href: Global.Creature.html#Creature_PlaceInRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  commentId: M:Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  name: InjectPoison(float, Color)
  nameWithType: Creature.InjectPoison(float, Color)
  fullName: Creature.InjectPoison(float, UnityEngine.Color)
  nameWithType.vb: Creature.InjectPoison(Single, Color)
  fullName.vb: Creature.InjectPoison(Single, UnityEngine.Color)
  name.vb: InjectPoison(Single, Color)
  spec.csharp:
  - uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
    name: InjectPoison
    isExternal: true
    href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.InjectPoison(System.Single,UnityEngine.Color)
    name: InjectPoison
    isExternal: true
    href: Global.Creature.html#Creature_InjectPoison_System_Single_UnityEngine_Color_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  commentId: M:Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  name: AddMud(int, int, Color)
  nameWithType: Creature.AddMud(int, int, Color)
  fullName: Creature.AddMud(int, int, UnityEngine.Color)
  nameWithType.vb: Creature.AddMud(Integer, Integer, Color)
  fullName.vb: Creature.AddMud(Integer, Integer, UnityEngine.Color)
  name.vb: AddMud(Integer, Integer, Color)
  spec.csharp:
  - uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
    name: AddMud
    isExternal: true
    href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.AddMud(System.Int32,System.Int32,UnityEngine.Color)
    name: AddMud
    isExternal: true
    href: Global.Creature.html#Creature_AddMud_System_Int32_System_Int32_UnityEngine_Color_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: )
- uid: Global.Creature.NewTile
  commentId: M:Global.Creature.NewTile
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NewTile
  name: NewTile()
  nameWithType: Creature.NewTile()
  fullName: Creature.NewTile()
  spec.csharp:
  - uid: Global.Creature.NewTile
    name: NewTile
    isExternal: true
    href: Global.Creature.html#Creature_NewTile
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.NewTile
    name: NewTile
    isExternal: true
    href: Global.Creature.html#Creature_NewTile
  - name: (
  - name: )
- uid: Global.Creature.RippleViolenceCheck(BodyChunk)
  commentId: M:Global.Creature.RippleViolenceCheck(BodyChunk)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  name: RippleViolenceCheck(BodyChunk)
  nameWithType: Creature.RippleViolenceCheck(BodyChunk)
  fullName: Creature.RippleViolenceCheck(BodyChunk)
  spec.csharp:
  - uid: Global.Creature.RippleViolenceCheck(BodyChunk)
    name: RippleViolenceCheck
    isExternal: true
    href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
  spec.vb:
  - uid: Global.Creature.RippleViolenceCheck(BodyChunk)
    name: RippleViolenceCheck
    isExternal: true
    href: Global.Creature.html#Creature_RippleViolenceCheck_BodyChunk_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: )
- uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  commentId: M:Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  name: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, float, float)
  nameWithType: Creature.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  fullName: Creature.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, float, float)
  nameWithType.vb: Creature.Violence(BodyChunk, Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  fullName.vb: Creature.Violence(BodyChunk, UnityEngine.Vector2?, BodyChunk, PhysicalObject.Appendage.Pos, Creature.DamageType, Single, Single)
  name.vb: Violence(BodyChunk, Vector2?, BodyChunk, Pos, DamageType, Single, Single)
  spec.csharp:
  - uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
    name: Violence
    isExternal: true
    href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.Creature.Violence(BodyChunk,System.Nullable{UnityEngine.Vector2},BodyChunk,PhysicalObject.Appendage.Pos,Creature.DamageType,System.Single,System.Single)
    name: Violence
    isExternal: true
    href: Global.Creature.html#Creature_Violence_BodyChunk_System_Nullable_UnityEngine_Vector2__BodyChunk_PhysicalObject_Appendage_Pos_Creature_DamageType_System_Single_System_Single_
  - name: (
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: Global.Creature.DamageType
    name: DamageType
    isExternal: true
    href: Creature.DamageType.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.Creature.SetKillTag(AbstractCreature)
  commentId: M:Global.Creature.SetKillTag(AbstractCreature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  name: SetKillTag(AbstractCreature)
  nameWithType: Creature.SetKillTag(AbstractCreature)
  fullName: Creature.SetKillTag(AbstractCreature)
  spec.csharp:
  - uid: Global.Creature.SetKillTag(AbstractCreature)
    name: SetKillTag
    isExternal: true
    href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.SetKillTag(AbstractCreature)
    name: SetKillTag
    isExternal: true
    href: Global.Creature.html#Creature_SetKillTag_AbstractCreature_
  - name: (
  - uid: Global.AbstractCreature
    name: AbstractCreature
    isExternal: true
    href: AbstractCreature.html
  - name: )
- uid: Global.Creature.Blind(System.Int32)
  commentId: M:Global.Creature.Blind(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Blind_System_Int32_
  name: Blind(int)
  nameWithType: Creature.Blind(int)
  fullName: Creature.Blind(int)
  nameWithType.vb: Creature.Blind(Integer)
  fullName.vb: Creature.Blind(Integer)
  name.vb: Blind(Integer)
  spec.csharp:
  - uid: Global.Creature.Blind(System.Int32)
    name: Blind
    isExternal: true
    href: Global.Creature.html#Creature_Blind_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Blind(System.Int32)
    name: Blind
    isExternal: true
    href: Global.Creature.html#Creature_Blind_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  commentId: M:Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  name: FlyIntoRoom(WorldCoordinate, Room)
  nameWithType: Creature.FlyIntoRoom(WorldCoordinate, Room)
  fullName: Creature.FlyIntoRoom(WorldCoordinate, Room)
  spec.csharp:
  - uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
    name: FlyIntoRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.FlyIntoRoom(WorldCoordinate,Room)
    name: FlyIntoRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyIntoRoom_WorldCoordinate_Room_
  - name: (
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
  commentId: M:Global.Creature.FlyAwayFromRoom(System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  name: FlyAwayFromRoom(bool)
  nameWithType: Creature.FlyAwayFromRoom(bool)
  fullName: Creature.FlyAwayFromRoom(bool)
  nameWithType.vb: Creature.FlyAwayFromRoom(Boolean)
  fullName.vb: Creature.FlyAwayFromRoom(Boolean)
  name.vb: FlyAwayFromRoom(Boolean)
  spec.csharp:
  - uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
    name: FlyAwayFromRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.FlyAwayFromRoom(System.Boolean)
    name: FlyAwayFromRoom
    isExternal: true
    href: Global.Creature.html#Creature_FlyAwayFromRoom_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Creature.Abstractize
  commentId: M:Global.Creature.Abstractize
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Abstractize
  name: Abstractize()
  nameWithType: Creature.Abstractize()
  fullName: Creature.Abstractize()
  spec.csharp:
  - uid: Global.Creature.Abstractize
    name: Abstractize
    isExternal: true
    href: Global.Creature.html#Creature_Abstractize
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.Abstractize
    name: Abstractize
    isExternal: true
    href: Global.Creature.html#Creature_Abstractize
  - name: (
  - name: )
- uid: Global.Creature.LoseAllGrasps
  commentId: M:Global.Creature.LoseAllGrasps
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_LoseAllGrasps
  name: LoseAllGrasps()
  nameWithType: Creature.LoseAllGrasps()
  fullName: Creature.LoseAllGrasps()
  spec.csharp:
  - uid: Global.Creature.LoseAllGrasps
    name: LoseAllGrasps
    isExternal: true
    href: Global.Creature.html#Creature_LoseAllGrasps
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.LoseAllGrasps
    name: LoseAllGrasps
    isExternal: true
    href: Global.Creature.html#Creature_LoseAllGrasps
  - name: (
  - name: )
- uid: Global.Creature.BodyPartByIndex(System.Int32)
  commentId: M:Global.Creature.BodyPartByIndex(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  name: BodyPartByIndex(int)
  nameWithType: Creature.BodyPartByIndex(int)
  fullName: Creature.BodyPartByIndex(int)
  nameWithType.vb: Creature.BodyPartByIndex(Integer)
  fullName.vb: Creature.BodyPartByIndex(Integer)
  name.vb: BodyPartByIndex(Integer)
  spec.csharp:
  - uid: Global.Creature.BodyPartByIndex(System.Int32)
    name: BodyPartByIndex
    isExternal: true
    href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.BodyPartByIndex(System.Int32)
    name: BodyPartByIndex
    isExternal: true
    href: Global.Creature.html#Creature_BodyPartByIndex_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  commentId: M:Global.Creature.SwitchGrasps(System.Int32,System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  name: SwitchGrasps(int, int)
  nameWithType: Creature.SwitchGrasps(int, int)
  fullName: Creature.SwitchGrasps(int, int)
  nameWithType.vb: Creature.SwitchGrasps(Integer, Integer)
  fullName.vb: Creature.SwitchGrasps(Integer, Integer)
  name.vb: SwitchGrasps(Integer, Integer)
  spec.csharp:
  - uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
    name: SwitchGrasps
    isExternal: true
    href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.SwitchGrasps(System.Int32,System.Int32)
    name: SwitchGrasps
    isExternal: true
    href: Global.Creature.html#Creature_SwitchGrasps_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.UpdateGraspIndexes
  commentId: M:Global.Creature.UpdateGraspIndexes
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_UpdateGraspIndexes
  name: UpdateGraspIndexes()
  nameWithType: Creature.UpdateGraspIndexes()
  fullName: Creature.UpdateGraspIndexes()
  spec.csharp:
  - uid: Global.Creature.UpdateGraspIndexes
    name: UpdateGraspIndexes
    isExternal: true
    href: Global.Creature.html#Creature_UpdateGraspIndexes
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.UpdateGraspIndexes
    name: UpdateGraspIndexes
    isExternal: true
    href: Global.Creature.html#Creature_UpdateGraspIndexes
  - name: (
  - name: )
- uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  commentId: M:Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  name: Grab(PhysicalObject, int, int, Shareability, float, bool, bool)
  nameWithType: Creature.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  fullName: Creature.Grab(PhysicalObject, int, int, Creature.Grasp.Shareability, float, bool, bool)
  nameWithType.vb: Creature.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  fullName.vb: Creature.Grab(PhysicalObject, Integer, Integer, Creature.Grasp.Shareability, Single, Boolean, Boolean)
  name.vb: Grab(PhysicalObject, Integer, Integer, Shareability, Single, Boolean, Boolean)
  spec.csharp:
  - uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
    name: Grab
    isExternal: true
    href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.Grab(PhysicalObject,System.Int32,System.Int32,Creature.Grasp.Shareability,System.Single,System.Boolean,System.Boolean)
    name: Grab
    isExternal: true
    href: Global.Creature.html#Creature_Grab_PhysicalObject_System_Int32_System_Int32_Creature_Grasp_Shareability_System_Single_System_Boolean_System_Boolean_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: Global.Creature.Grasp.Shareability
    name: Shareability
    isExternal: true
    href: Creature.Grasp.Shareability.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  commentId: M:Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  name: GrabbedObjectSnatched(PhysicalObject, Creature)
  nameWithType: Creature.GrabbedObjectSnatched(PhysicalObject, Creature)
  fullName: Creature.GrabbedObjectSnatched(PhysicalObject, Creature)
  spec.csharp:
  - uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
    name: GrabbedObjectSnatched
    isExternal: true
    href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.GrabbedObjectSnatched(PhysicalObject,Creature)
    name: GrabbedObjectSnatched
    isExternal: true
    href: Global.Creature.html#Creature_GrabbedObjectSnatched_PhysicalObject_Creature_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  commentId: M:Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  name: PushOutOf(Vector2, float, int)
  nameWithType: Creature.PushOutOf(Vector2, float, int)
  fullName: Creature.PushOutOf(UnityEngine.Vector2, float, int)
  nameWithType.vb: Creature.PushOutOf(Vector2, Single, Integer)
  fullName.vb: Creature.PushOutOf(UnityEngine.Vector2, Single, Integer)
  name.vb: PushOutOf(Vector2, Single, Integer)
  spec.csharp:
  - uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.PushOutOf(UnityEngine.Vector2,System.Single,System.Int32)
    name: PushOutOf
    isExternal: true
    href: Global.Creature.html#Creature_PushOutOf_UnityEngine_Vector2_System_Single_System_Int32_
  - name: (
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.HeardNoise(Noise.InGameNoise)
  commentId: M:Global.Creature.HeardNoise(Noise.InGameNoise)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  name: HeardNoise(InGameNoise)
  nameWithType: Creature.HeardNoise(InGameNoise)
  fullName: Creature.HeardNoise(Noise.InGameNoise)
  spec.csharp:
  - uid: Global.Creature.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
  spec.vb:
  - uid: Global.Creature.HeardNoise(Noise.InGameNoise)
    name: HeardNoise
    isExternal: true
    href: Global.Creature.html#Creature_HeardNoise_Noise_InGameNoise_
  - name: (
  - uid: Noise.InGameNoise
    name: InGameNoise
    isExternal: true
    href: Noise.InGameNoise.html
  - name: )
- uid: Global.Creature.ToString
  commentId: M:Global.Creature.ToString
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ToString
  name: ToString()
  nameWithType: Creature.ToString()
  fullName: Creature.ToString()
  spec.csharp:
  - uid: Global.Creature.ToString
    name: ToString
    isExternal: true
    href: Global.Creature.html#Creature_ToString
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.ToString
    name: ToString
    isExternal: true
    href: Global.Creature.html#Creature_ToString
  - name: (
  - name: )
- uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  commentId: M:Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  name: ReleaseDoorForbiddenCreatures(bool, bool)
  nameWithType: Creature.ReleaseDoorForbiddenCreatures(bool, bool)
  fullName: Creature.ReleaseDoorForbiddenCreatures(bool, bool)
  nameWithType.vb: Creature.ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  fullName.vb: Creature.ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  name.vb: ReleaseDoorForbiddenCreatures(Boolean, Boolean)
  spec.csharp:
  - uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
    name: ReleaseDoorForbiddenCreatures
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.ReleaseDoorForbiddenCreatures(System.Boolean,System.Boolean)
    name: ReleaseDoorForbiddenCreatures
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseDoorForbiddenCreatures_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  commentId: M:Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  name: AllowableControlledAIOverride(MovementType)
  nameWithType: Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  fullName: Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
  spec.csharp:
  - uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
    name: AllowableControlledAIOverride
    isExternal: true
    href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  - name: (
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  - name: )
  spec.vb:
  - uid: Global.Creature.AllowableControlledAIOverride(MovementConnection.MovementType)
    name: AllowableControlledAIOverride
    isExternal: true
    href: Global.Creature.html#Creature_AllowableControlledAIOverride_MovementConnection_MovementType_
  - name: (
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  - name: )
- uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  commentId: M:Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  name: HypothermiaBodyContactWarmup(Creature, Creature)
  nameWithType: Creature.HypothermiaBodyContactWarmup(Creature, Creature)
  fullName: Creature.HypothermiaBodyContactWarmup(Creature, Creature)
  spec.csharp:
  - uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
    name: HypothermiaBodyContactWarmup
    isExternal: true
    href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.HypothermiaBodyContactWarmup(Creature,Creature)
    name: HypothermiaBodyContactWarmup
    isExternal: true
    href: Global.Creature.html#Creature_HypothermiaBodyContactWarmup_Creature_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: ','
  - name: " "
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Creature.SafariControlInputUpdate(System.Int32)
  commentId: M:Global.Creature.SafariControlInputUpdate(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  name: SafariControlInputUpdate(int)
  nameWithType: Creature.SafariControlInputUpdate(int)
  fullName: Creature.SafariControlInputUpdate(int)
  nameWithType.vb: Creature.SafariControlInputUpdate(Integer)
  fullName.vb: Creature.SafariControlInputUpdate(Integer)
  name.vb: SafariControlInputUpdate(Integer)
  spec.csharp:
  - uid: Global.Creature.SafariControlInputUpdate(System.Int32)
    name: SafariControlInputUpdate
    isExternal: true
    href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.SafariControlInputUpdate(System.Int32)
    name: SafariControlInputUpdate
    isExternal: true
    href: Global.Creature.html#Creature_SafariControlInputUpdate_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Creature.stun
  commentId: P:Global.Creature.stun
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_stun
  name: stun
  nameWithType: Creature.stun
  fullName: Creature.stun
- uid: Global.Creature.Stunned
  commentId: P:Global.Creature.Stunned
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Stunned
  name: Stunned
  nameWithType: Creature.Stunned
  fullName: Creature.Stunned
- uid: Global.Creature.Blinded
  commentId: P:Global.Creature.Blinded
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Blinded
  name: Blinded
  nameWithType: Creature.Blinded
  fullName: Creature.Blinded
- uid: Global.Creature.Deaf
  commentId: P:Global.Creature.Deaf
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Deaf
  name: Deaf
  nameWithType: Creature.Deaf
  fullName: Creature.Deaf
- uid: Global.Creature.mainBodyChunkIndex
  commentId: P:Global.Creature.mainBodyChunkIndex
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mainBodyChunkIndex
  name: mainBodyChunkIndex
  nameWithType: Creature.mainBodyChunkIndex
  fullName: Creature.mainBodyChunkIndex
- uid: Global.Creature.mainBodyChunk
  commentId: P:Global.Creature.mainBodyChunk
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_mainBodyChunk
  name: mainBodyChunk
  nameWithType: Creature.mainBodyChunk
  fullName: Creature.mainBodyChunk
- uid: Global.Creature.dead
  commentId: P:Global.Creature.dead
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_dead
  name: dead
  nameWithType: Creature.dead
  fullName: Creature.dead
- uid: Global.Creature.Consious
  commentId: P:Global.Creature.Consious
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Consious
  name: Consious
  nameWithType: Creature.Consious
  fullName: Creature.Consious
- uid: Global.Creature.VisionPoint
  commentId: P:Global.Creature.VisionPoint
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_VisionPoint
  name: VisionPoint
  nameWithType: Creature.VisionPoint
  fullName: Creature.VisionPoint
- uid: Global.Creature.inShortcut
  commentId: P:Global.Creature.inShortcut
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_inShortcut
  name: inShortcut
  nameWithType: Creature.inShortcut
  fullName: Creature.inShortcut
- uid: Global.Creature.grasps
  commentId: P:Global.Creature.grasps
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_grasps
  name: grasps
  nameWithType: Creature.grasps
  fullName: Creature.grasps
- uid: Global.Creature.DangerPos
  commentId: P:Global.Creature.DangerPos
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_DangerPos
  name: DangerPos
  nameWithType: Creature.DangerPos
  fullName: Creature.DangerPos
- uid: Global.Creature.abstractCreature
  commentId: P:Global.Creature.abstractCreature
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_abstractCreature
  name: abstractCreature
  nameWithType: Creature.abstractCreature
  fullName: Creature.abstractCreature
- uid: Global.Creature.Template
  commentId: P:Global.Creature.Template
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Template
  name: Template
  nameWithType: Creature.Template
  fullName: Creature.Template
- uid: Global.Creature.State
  commentId: P:Global.Creature.State
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_State
  name: State
  nameWithType: Creature.State
  fullName: Creature.State
- uid: Global.Creature.coord
  commentId: P:Global.Creature.coord
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_coord
  name: coord
  nameWithType: Creature.coord
  fullName: Creature.coord
- uid: Global.Creature.safariControlled
  commentId: P:Global.Creature.safariControlled
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_safariControlled
  name: safariControlled
  nameWithType: Creature.safariControlled
  fullName: Creature.safariControlled
- uid: Global.Creature.Hypothermia
  commentId: P:Global.Creature.Hypothermia
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Hypothermia
  name: Hypothermia
  nameWithType: Creature.Hypothermia
  fullName: Creature.Hypothermia
- uid: Global.Creature.WormGrassGooduckyImmune
  commentId: P:Global.Creature.WormGrassGooduckyImmune
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_WormGrassGooduckyImmune
  name: WormGrassGooduckyImmune
  nameWithType: Creature.WormGrassGooduckyImmune
  fullName: Creature.WormGrassGooduckyImmune
- uid: Global.PhysicalObject.bodyChunkConnections
  commentId: F:Global.PhysicalObject.bodyChunkConnections
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunkConnections
  name: bodyChunkConnections
  nameWithType: PhysicalObject.bodyChunkConnections
  fullName: PhysicalObject.bodyChunkConnections
- uid: Global.PhysicalObject.grabbedBy
  commentId: F:Global.PhysicalObject.grabbedBy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_grabbedBy
  name: grabbedBy
  nameWithType: PhysicalObject.grabbedBy
  fullName: PhysicalObject.grabbedBy
- uid: Global.PhysicalObject.collisionRange
  commentId: F:Global.PhysicalObject.collisionRange
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionRange
  name: collisionRange
  nameWithType: PhysicalObject.collisionRange
  fullName: PhysicalObject.collisionRange
- uid: Global.PhysicalObject.collisionLayer
  commentId: F:Global.PhysicalObject.collisionLayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_collisionLayer
  name: collisionLayer
  nameWithType: PhysicalObject.collisionLayer
  fullName: PhysicalObject.collisionLayer
- uid: Global.PhysicalObject.abstractPhysicalObject
  commentId: F:Global.PhysicalObject.abstractPhysicalObject
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_abstractPhysicalObject
  name: abstractPhysicalObject
  nameWithType: PhysicalObject.abstractPhysicalObject
  fullName: PhysicalObject.abstractPhysicalObject
- uid: Global.PhysicalObject.surfaceFriction
  commentId: F:Global.PhysicalObject.surfaceFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_surfaceFriction
  name: surfaceFriction
  nameWithType: PhysicalObject.surfaceFriction
  fullName: PhysicalObject.surfaceFriction
- uid: Global.PhysicalObject.bounce
  commentId: F:Global.PhysicalObject.bounce
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bounce
  name: bounce
  nameWithType: PhysicalObject.bounce
  fullName: PhysicalObject.bounce
- uid: Global.PhysicalObject.impactTreshhold
  commentId: F:Global.PhysicalObject.impactTreshhold
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_impactTreshhold
  name: impactTreshhold
  nameWithType: PhysicalObject.impactTreshhold
  fullName: PhysicalObject.impactTreshhold
- uid: Global.PhysicalObject.waterRetardationImmunity
  commentId: F:Global.PhysicalObject.waterRetardationImmunity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterRetardationImmunity
  name: waterRetardationImmunity
  nameWithType: PhysicalObject.waterRetardationImmunity
  fullName: PhysicalObject.waterRetardationImmunity
- uid: Global.PhysicalObject.burrowFriction
  commentId: F:Global.PhysicalObject.burrowFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_burrowFriction
  name: burrowFriction
  nameWithType: PhysicalObject.burrowFriction
  fullName: PhysicalObject.burrowFriction
- uid: Global.PhysicalObject.sticksRespawned
  commentId: F:Global.PhysicalObject.sticksRespawned
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_sticksRespawned
  name: sticksRespawned
  nameWithType: PhysicalObject.sticksRespawned
  fullName: PhysicalObject.sticksRespawned
- uid: Global.PhysicalObject.appendages
  commentId: F:Global.PhysicalObject.appendages
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_appendages
  name: appendages
  nameWithType: PhysicalObject.appendages
  fullName: PhysicalObject.appendages
- uid: Global.PhysicalObject.canBeHitByWeapons
  commentId: F:Global.PhysicalObject.canBeHitByWeapons
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_canBeHitByWeapons
  name: canBeHitByWeapons
  nameWithType: PhysicalObject.canBeHitByWeapons
  fullName: PhysicalObject.canBeHitByWeapons
- uid: Global.PhysicalObject.jollyBeingPointedCounter
  commentId: F:Global.PhysicalObject.jollyBeingPointedCounter
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_jollyBeingPointedCounter
  name: jollyBeingPointedCounter
  nameWithType: PhysicalObject.jollyBeingPointedCounter
  fullName: PhysicalObject.jollyBeingPointedCounter
- uid: Global.PhysicalObject.FirstChunk
  commentId: M:Global.PhysicalObject.FirstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  name: FirstChunk()
  nameWithType: PhysicalObject.FirstChunk()
  fullName: PhysicalObject.FirstChunk()
  spec.csharp:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.FirstChunk
    name: FirstChunk
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_FirstChunk
  - name: (
  - name: )
- uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  name: ChangeCollisionLayer(int)
  nameWithType: PhysicalObject.ChangeCollisionLayer(int)
  fullName: PhysicalObject.ChangeCollisionLayer(int)
  nameWithType.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  fullName.vb: PhysicalObject.ChangeCollisionLayer(Integer)
  name.vb: ChangeCollisionLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeCollisionLayer(System.Int32)
    name: ChangeCollisionLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeCollisionLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  commentId: M:Global.PhysicalObject.ChangeRippleLayer(System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  name: ChangeRippleLayer(int)
  nameWithType: PhysicalObject.ChangeRippleLayer(int)
  fullName: PhysicalObject.ChangeRippleLayer(int)
  nameWithType.vb: PhysicalObject.ChangeRippleLayer(Integer)
  fullName.vb: PhysicalObject.ChangeRippleLayer(Integer)
  name.vb: ChangeRippleLayer(Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.ChangeRippleLayer(System.Int32)
    name: ChangeRippleLayer
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_ChangeRippleLayer_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.HitByWeapon(Weapon)
  commentId: M:Global.PhysicalObject.HitByWeapon(Weapon)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  name: HitByWeapon(Weapon)
  nameWithType: PhysicalObject.HitByWeapon(Weapon)
  fullName: PhysicalObject.HitByWeapon(Weapon)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByWeapon(Weapon)
    name: HitByWeapon
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByWeapon_Weapon_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: )
- uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  name: IsTileSolid(int, int, int)
  nameWithType: PhysicalObject.IsTileSolid(int, int, int)
  fullName: PhysicalObject.IsTileSolid(int, int, int)
  nameWithType.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  fullName.vb: PhysicalObject.IsTileSolid(Integer, Integer, Integer)
  name.vb: IsTileSolid(Integer, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.IsTileSolid(System.Int32,System.Int32,System.Int32)
    name: IsTileSolid
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_IsTileSolid_System_Int32_System_Int32_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  commentId: M:Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  name: AllGraspsLetGoOfThisObject(bool)
  nameWithType: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  fullName: PhysicalObject.AllGraspsLetGoOfThisObject(bool)
  nameWithType.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  fullName.vb: PhysicalObject.AllGraspsLetGoOfThisObject(Boolean)
  name.vb: AllGraspsLetGoOfThisObject(Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.AllGraspsLetGoOfThisObject(System.Boolean)
    name: AllGraspsLetGoOfThisObject
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_AllGraspsLetGoOfThisObject_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  commentId: M:Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  name: WeightedPush(int, int, Vector2, float)
  nameWithType: PhysicalObject.WeightedPush(int, int, Vector2, float)
  fullName: PhysicalObject.WeightedPush(int, int, UnityEngine.Vector2, float)
  nameWithType.vb: PhysicalObject.WeightedPush(Integer, Integer, Vector2, Single)
  fullName.vb: PhysicalObject.WeightedPush(Integer, Integer, UnityEngine.Vector2, Single)
  name.vb: WeightedPush(Integer, Integer, Vector2, Single)
  spec.csharp:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeightedPush(System.Int32,System.Int32,UnityEngine.Vector2,System.Single)
    name: WeightedPush
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeightedPush_System_Int32_System_Int32_UnityEngine_Vector2_System_Single_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  commentId: M:Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  name: HitByExplosion(float, Explosion, int)
  nameWithType: PhysicalObject.HitByExplosion(float, Explosion, int)
  fullName: PhysicalObject.HitByExplosion(float, Explosion, int)
  nameWithType.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  fullName.vb: PhysicalObject.HitByExplosion(Single, Explosion, Integer)
  name.vb: HitByExplosion(Single, Explosion, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.HitByExplosion(System.Single,Explosion,System.Int32)
    name: HitByExplosion
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_HitByExplosion_System_Single_Explosion_System_Int32_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.Explosion
    name: Explosion
    isExternal: true
    href: Explosion.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.PhysicalObject.SetLocalGravity(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalGravity(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  name: SetLocalGravity(float)
  nameWithType: PhysicalObject.SetLocalGravity(float)
  fullName: PhysicalObject.SetLocalGravity(float)
  nameWithType.vb: PhysicalObject.SetLocalGravity(Single)
  fullName.vb: PhysicalObject.SetLocalGravity(Single)
  name.vb: SetLocalGravity(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalGravity(System.Single)
    name: SetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalGravity_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.GetLocalGravity
  commentId: M:Global.PhysicalObject.GetLocalGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  name: GetLocalGravity()
  nameWithType: PhysicalObject.GetLocalGravity()
  fullName: PhysicalObject.GetLocalGravity()
  spec.csharp:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GetLocalGravity
    name: GetLocalGravity
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GetLocalGravity
  - name: (
  - name: )
- uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
  commentId: M:Global.PhysicalObject.SetLocalAirFriction(System.Single)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  name: SetLocalAirFriction(float)
  nameWithType: PhysicalObject.SetLocalAirFriction(float)
  fullName: PhysicalObject.SetLocalAirFriction(float)
  nameWithType.vb: PhysicalObject.SetLocalAirFriction(Single)
  fullName.vb: PhysicalObject.SetLocalAirFriction(Single)
  name.vb: SetLocalAirFriction(Single)
  spec.csharp:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.SetLocalAirFriction(System.Single)
    name: SetLocalAirFriction
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_SetLocalAirFriction_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Global.PhysicalObject.WeatherInertia
  commentId: M:Global.PhysicalObject.WeatherInertia
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  name: WeatherInertia()
  nameWithType: PhysicalObject.WeatherInertia()
  fullName: PhysicalObject.WeatherInertia()
  spec.csharp:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.WeatherInertia
    name: WeatherInertia
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_WeatherInertia
  - name: (
  - name: )
- uid: Global.PhysicalObject.DisposeGraphicsModule
  commentId: M:Global.PhysicalObject.DisposeGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  name: DisposeGraphicsModule()
  nameWithType: PhysicalObject.DisposeGraphicsModule()
  fullName: PhysicalObject.DisposeGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.DisposeGraphicsModule
    name: DisposeGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_DisposeGraphicsModule
  - name: (
  - name: )
- uid: Global.PhysicalObject.bodyChunks
  commentId: P:Global.PhysicalObject.bodyChunks
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_bodyChunks
  name: bodyChunks
  nameWithType: PhysicalObject.bodyChunks
  fullName: PhysicalObject.bodyChunks
- uid: Global.PhysicalObject.graphicsModule
  commentId: P:Global.PhysicalObject.graphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_graphicsModule
  name: graphicsModule
  nameWithType: PhysicalObject.graphicsModule
  fullName: PhysicalObject.graphicsModule
- uid: Global.PhysicalObject.firstChunk
  commentId: P:Global.PhysicalObject.firstChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_firstChunk
  name: firstChunk
  nameWithType: PhysicalObject.firstChunk
  fullName: PhysicalObject.firstChunk
- uid: Global.PhysicalObject.TotalMass
  commentId: P:Global.PhysicalObject.TotalMass
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_TotalMass
  name: TotalMass
  nameWithType: PhysicalObject.TotalMass
  fullName: PhysicalObject.TotalMass
- uid: Global.PhysicalObject.RandomChunk
  commentId: P:Global.PhysicalObject.RandomChunk
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RandomChunk
  name: RandomChunk
  nameWithType: PhysicalObject.RandomChunk
  fullName: PhysicalObject.RandomChunk
- uid: Global.PhysicalObject.gravity
  commentId: P:Global.PhysicalObject.gravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_gravity
  name: gravity
  nameWithType: PhysicalObject.gravity
  fullName: PhysicalObject.gravity
- uid: Global.PhysicalObject.airFriction
  commentId: P:Global.PhysicalObject.airFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_airFriction
  name: airFriction
  nameWithType: PhysicalObject.airFriction
  fullName: PhysicalObject.airFriction
- uid: Global.PhysicalObject.waterFriction
  commentId: P:Global.PhysicalObject.waterFriction
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_waterFriction
  name: waterFriction
  nameWithType: PhysicalObject.waterFriction
  fullName: PhysicalObject.waterFriction
- uid: Global.PhysicalObject.buoyancy
  commentId: P:Global.PhysicalObject.buoyancy
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_buoyancy
  name: buoyancy
  nameWithType: PhysicalObject.buoyancy
  fullName: PhysicalObject.buoyancy
- uid: Global.PhysicalObject.GoThroughFloors
  commentId: P:Global.PhysicalObject.GoThroughFloors
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GoThroughFloors
  name: GoThroughFloors
  nameWithType: PhysicalObject.GoThroughFloors
  fullName: PhysicalObject.GoThroughFloors
- uid: Global.PhysicalObject.CollideWithTerrain
  commentId: P:Global.PhysicalObject.CollideWithTerrain
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithTerrain
  name: CollideWithTerrain
  nameWithType: PhysicalObject.CollideWithTerrain
  fullName: PhysicalObject.CollideWithTerrain
- uid: Global.PhysicalObject.CollideWithSlopes
  commentId: P:Global.PhysicalObject.CollideWithSlopes
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithSlopes
  name: CollideWithSlopes
  nameWithType: PhysicalObject.CollideWithSlopes
  fullName: PhysicalObject.CollideWithSlopes
- uid: Global.PhysicalObject.CollideWithObjects
  commentId: P:Global.PhysicalObject.CollideWithObjects
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_CollideWithObjects
  name: CollideWithObjects
  nameWithType: PhysicalObject.CollideWithObjects
  fullName: PhysicalObject.CollideWithObjects
- uid: Global.PhysicalObject.Buried
  commentId: P:Global.PhysicalObject.Buried
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Buried
  name: Buried
  nameWithType: PhysicalObject.Buried
  fullName: PhysicalObject.Buried
- uid: Global.PhysicalObject.WantsToBurrow
  commentId: P:Global.PhysicalObject.WantsToBurrow
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_WantsToBurrow
  name: WantsToBurrow
  nameWithType: PhysicalObject.WantsToBurrow
  fullName: PhysicalObject.WantsToBurrow
- uid: Global.PhysicalObject.Submersion
  commentId: P:Global.PhysicalObject.Submersion
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Submersion
  name: Submersion
  nameWithType: PhysicalObject.Submersion
  fullName: PhysicalObject.Submersion
- uid: Global.PhysicalObject.SandstormImmune
  commentId: P:Global.PhysicalObject.SandstormImmune
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_SandstormImmune
  name: SandstormImmune
  nameWithType: PhysicalObject.SandstormImmune
  fullName: PhysicalObject.SandstormImmune
- uid: Global.PhysicalObject.LickedByPlayer
  commentId: P:Global.PhysicalObject.LickedByPlayer
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_LickedByPlayer
  name: LickedByPlayer
  nameWithType: PhysicalObject.LickedByPlayer
  fullName: PhysicalObject.LickedByPlayer
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MoreSlugcats.AncientBot
  commentId: T:MoreSlugcats.AncientBot
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.AncientBot.html
  name: AncientBot
  nameWithType: AncientBot
  fullName: MoreSlugcats.AncientBot
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: Global.Player.Tongue
  commentId: T:Global.Player.Tongue
  isExternal: true
  href: Player.html
  name: Player.Tongue
  nameWithType: Player.Tongue
  fullName: Player.Tongue
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.Tongue
    name: Tongue
    isExternal: true
    href: Player.Tongue.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.Tongue
    name: Tongue
    isExternal: true
    href: Player.Tongue.html
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Player.NPCStats
  commentId: T:Global.Player.NPCStats
  isExternal: true
  href: Player.html
  name: Player.NPCStats
  nameWithType: Player.NPCStats
  fullName: Player.NPCStats
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.NPCStats
    name: NPCStats
    isExternal: true
    href: Player.NPCStats.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.NPCStats
    name: NPCStats
    isExternal: true
    href: Player.NPCStats.html
- uid: Global.Player.SlugOnBack
  commentId: T:Global.Player.SlugOnBack
  isExternal: true
  href: Player.html
  name: Player.SlugOnBack
  nameWithType: Player.SlugOnBack
  fullName: Player.SlugOnBack
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.SlugOnBack
    name: SlugOnBack
    isExternal: true
    href: Player.SlugOnBack.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.SlugOnBack
    name: SlugOnBack
    isExternal: true
    href: Player.SlugOnBack.html
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Player.PlayerController
  commentId: T:Global.Player.PlayerController
  isExternal: true
  href: Player.html
  name: Player.PlayerController
  nameWithType: Player.PlayerController
  fullName: Player.PlayerController
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.PlayerController
    name: PlayerController
    isExternal: true
    href: Player.PlayerController.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.PlayerController
    name: PlayerController
    isExternal: true
    href: Player.PlayerController.html
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Global.RedsIllness
  commentId: T:Global.RedsIllness
  isExternal: true
  href: RedsIllness.html
  name: RedsIllness
  nameWithType: RedsIllness
  fullName: RedsIllness
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.AdrenalineEffect
  commentId: T:Global.AdrenalineEffect
  isExternal: true
  href: AdrenalineEffect.html
  name: AdrenalineEffect
  nameWithType: AdrenalineEffect
  fullName: AdrenalineEffect
- uid: Global.ChunkSoundEmitter
  commentId: T:Global.ChunkSoundEmitter
  isExternal: true
  href: ChunkSoundEmitter.html
  name: ChunkSoundEmitter
  nameWithType: ChunkSoundEmitter
  fullName: ChunkSoundEmitter
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: Global.DeafLoopHolder
  commentId: T:Global.DeafLoopHolder
  isExternal: true
  href: DeafLoopHolder.html
  name: DeafLoopHolder
  nameWithType: DeafLoopHolder
  fullName: DeafLoopHolder
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.Creature.Grasp
  commentId: T:Global.Creature.Grasp
  isExternal: true
  href: Creature.html
  name: Creature.Grasp
  nameWithType: Creature.Grasp
  fullName: Creature.Grasp
  spec.csharp:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  spec.vb:
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: .
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
- uid: System.Nullable{WorldCoordinate}
  commentId: T:System.Nullable{WorldCoordinate}
  parent: System
  definition: System.Nullable`1
  href: WorldCoordinate.html
  name: WorldCoordinate?
  nameWithType: WorldCoordinate?
  fullName: WorldCoordinate?
  spec.csharp:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
  spec.vb:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
- uid: Global.Deer.PlayerInAntlers
  commentId: T:Global.Deer.PlayerInAntlers
  isExternal: true
  href: Deer.html
  name: Deer.PlayerInAntlers
  nameWithType: Deer.PlayerInAntlers
  fullName: Deer.PlayerInAntlers
  spec.csharp:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
  spec.vb:
  - uid: Global.Deer
    name: Deer
    isExternal: true
    href: Deer.html
  - name: .
  - uid: Global.Deer.PlayerInAntlers
    name: PlayerInAntlers
    isExternal: true
    href: Deer.PlayerInAntlers.html
- uid: Global.TubeWorm
  commentId: T:Global.TubeWorm
  isExternal: true
  href: TubeWorm.html
  name: TubeWorm
  nameWithType: TubeWorm
  fullName: TubeWorm
- uid: CoralBrain.CoralCircuit.CircuitBit[]
  isExternal: true
  href: CoralBrain.CoralCircuit.CircuitBit.html
  name: CircuitBit[]
  nameWithType: CoralCircuit.CircuitBit[]
  fullName: CoralBrain.CoralCircuit.CircuitBit[]
  nameWithType.vb: CoralCircuit.CircuitBit()
  fullName.vb: CoralBrain.CoralCircuit.CircuitBit()
  name.vb: CircuitBit()
  spec.csharp:
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.Player.InputPackage
  commentId: T:Global.Player.InputPackage
  isExternal: true
  href: Player.html
  name: Player.InputPackage
  nameWithType: Player.InputPackage
  fullName: Player.InputPackage
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
- uid: Watcher.CosmeticRipple
  commentId: T:Watcher.CosmeticRipple
  parent: Watcher
  isExternal: true
  href: Watcher.CosmeticRipple.html
  name: CosmeticRipple
  nameWithType: CosmeticRipple
  fullName: Watcher.CosmeticRipple
- uid: Watcher.CosmeticRippleRepresentation
  commentId: T:Watcher.CosmeticRippleRepresentation
  parent: Watcher
  isExternal: true
  href: Watcher.CosmeticRippleRepresentation.html
  name: CosmeticRippleRepresentation
  nameWithType: CosmeticRippleRepresentation
  fullName: Watcher.CosmeticRippleRepresentation
- uid: MoreSlugcats.ChatlogData.ChatlogID
  commentId: T:MoreSlugcats.ChatlogData.ChatlogID
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.ChatlogData.html
  name: ChatlogData.ChatlogID
  nameWithType: ChatlogData.ChatlogID
  fullName: MoreSlugcats.ChatlogData.ChatlogID
  spec.csharp:
  - uid: MoreSlugcats.ChatlogData
    name: ChatlogData
    isExternal: true
    href: MoreSlugcats.ChatlogData.html
  - name: .
  - uid: MoreSlugcats.ChatlogData.ChatlogID
    name: ChatlogID
    isExternal: true
    href: MoreSlugcats.ChatlogData.ChatlogID.html
  spec.vb:
  - uid: MoreSlugcats.ChatlogData
    name: ChatlogData
    isExternal: true
    href: MoreSlugcats.ChatlogData.html
  - name: .
  - uid: MoreSlugcats.ChatlogData.ChatlogID
    name: ChatlogID
    isExternal: true
    href: MoreSlugcats.ChatlogData.ChatlogID.html
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.Player.AnimationIndex
  commentId: T:Global.Player.AnimationIndex
  isExternal: true
  href: Player.html
  name: Player.AnimationIndex
  nameWithType: Player.AnimationIndex
  fullName: Player.AnimationIndex
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.AnimationIndex
    name: AnimationIndex
    isExternal: true
    href: Player.AnimationIndex.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.AnimationIndex
    name: AnimationIndex
    isExternal: true
    href: Player.AnimationIndex.html
- uid: Global.ClimbableVinesSystem.VinePosition
  commentId: T:Global.ClimbableVinesSystem.VinePosition
  isExternal: true
  href: ClimbableVinesSystem.html
  name: ClimbableVinesSystem.VinePosition
  nameWithType: ClimbableVinesSystem.VinePosition
  fullName: ClimbableVinesSystem.VinePosition
  spec.csharp:
  - uid: Global.ClimbableVinesSystem
    name: ClimbableVinesSystem
    isExternal: true
    href: ClimbableVinesSystem.html
  - name: .
  - uid: Global.ClimbableVinesSystem.VinePosition
    name: VinePosition
    isExternal: true
    href: ClimbableVinesSystem.VinePosition.html
  spec.vb:
  - uid: Global.ClimbableVinesSystem
    name: ClimbableVinesSystem
    isExternal: true
    href: ClimbableVinesSystem.html
  - name: .
  - uid: Global.ClimbableVinesSystem.VinePosition
    name: VinePosition
    isExternal: true
    href: ClimbableVinesSystem.VinePosition.html
- uid: Global.Player.BodyModeIndex
  commentId: T:Global.Player.BodyModeIndex
  isExternal: true
  href: Player.html
  name: Player.BodyModeIndex
  nameWithType: Player.BodyModeIndex
  fullName: Player.BodyModeIndex
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.BodyModeIndex
    name: BodyModeIndex
    isExternal: true
    href: Player.BodyModeIndex.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.BodyModeIndex
    name: BodyModeIndex
    isExternal: true
    href: Player.BodyModeIndex.html
- uid: System.Nullable{RWCustom.IntVector2}
  commentId: T:System.Nullable{RWCustom.IntVector2}
  parent: System
  definition: System.Nullable`1
  href: RWCustom.IntVector2.html
  name: IntVector2?
  nameWithType: IntVector2?
  fullName: RWCustom.IntVector2?
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.Player.SpearOnBack
  commentId: T:Global.Player.SpearOnBack
  isExternal: true
  href: Player.html
  name: Player.SpearOnBack
  nameWithType: Player.SpearOnBack
  fullName: Player.SpearOnBack
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.SpearOnBack
    name: SpearOnBack
    isExternal: true
    href: Player.SpearOnBack.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.SpearOnBack
    name: SpearOnBack
    isExternal: true
    href: Player.SpearOnBack.html
- uid: Watcher.WarpSpawningRipple
  commentId: T:Watcher.WarpSpawningRipple
  parent: Watcher
  isExternal: true
  href: Watcher.WarpSpawningRipple.html
  name: WarpSpawningRipple
  nameWithType: WarpSpawningRipple
  fullName: Watcher.WarpSpawningRipple
- uid: Watcher.RippleDeathEffect
  commentId: T:Watcher.RippleDeathEffect
  parent: Watcher
  isExternal: true
  href: Watcher.RippleDeathEffect.html
  name: RippleDeathEffect
  nameWithType: RippleDeathEffect
  fullName: Watcher.RippleDeathEffect
- uid: Global.DisembodiedDynamicSoundLoop
  commentId: T:Global.DisembodiedDynamicSoundLoop
  isExternal: true
  href: DisembodiedDynamicSoundLoop.html
  name: DisembodiedDynamicSoundLoop
  nameWithType: DisembodiedDynamicSoundLoop
  fullName: DisembodiedDynamicSoundLoop
- uid: Global.StaticSoundLoop
  commentId: T:Global.StaticSoundLoop
  isExternal: true
  href: StaticSoundLoop.html
  name: StaticSoundLoop
  nameWithType: StaticSoundLoop
  fullName: StaticSoundLoop
- uid: Watcher.WarpPoint.WarpPointData
  commentId: T:Watcher.WarpPoint.WarpPointData
  parent: Watcher
  isExternal: true
  href: Watcher.WarpPoint.html
  name: WarpPoint.WarpPointData
  nameWithType: WarpPoint.WarpPointData
  fullName: Watcher.WarpPoint.WarpPointData
  spec.csharp:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
  spec.vb:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
- uid: Global.Player.PermaDie*
  commentId: Overload:Global.Player.PermaDie
  isExternal: true
  href: Global.Player.html#Player_PermaDie
  name: PermaDie
  nameWithType: Player.PermaDie
  fullName: Player.PermaDie
- uid: Global.Player.JollyUpdate*
  commentId: Overload:Global.Player.JollyUpdate
  isExternal: true
  href: Global.Player.html#Player_JollyUpdate_System_Boolean_
  name: JollyUpdate
  nameWithType: Player.JollyUpdate
  fullName: Player.JollyUpdate
- uid: Global.Player.TriggerCameraSwitch*
  commentId: Overload:Global.Player.TriggerCameraSwitch
  isExternal: true
  href: Global.Player.html#Player_TriggerCameraSwitch
  name: TriggerCameraSwitch
  nameWithType: Player.TriggerCameraSwitch
  fullName: Player.TriggerCameraSwitch
- uid: Global.Player.PointDir*
  commentId: Overload:Global.Player.PointDir
  isExternal: true
  href: Global.Player.html#Player_PointDir
  name: PointDir
  nameWithType: Player.PointDir
  fullName: Player.PointDir
- uid: Global.Player.JollyEmoteUpdate*
  commentId: Overload:Global.Player.JollyEmoteUpdate
  isExternal: true
  href: Global.Player.html#Player_JollyEmoteUpdate
  name: JollyEmoteUpdate
  nameWithType: Player.JollyEmoteUpdate
  fullName: Player.JollyEmoteUpdate
- uid: Global.Player.JollyFoodUpdate*
  commentId: Overload:Global.Player.JollyFoodUpdate
  isExternal: true
  href: Global.Player.html#Player_JollyFoodUpdate
  name: JollyFoodUpdate
  nameWithType: Player.JollyFoodUpdate
  fullName: Player.JollyFoodUpdate
- uid: Global.Player.SaveStomachObjectInPlayerState*
  commentId: Overload:Global.Player.SaveStomachObjectInPlayerState
  isExternal: true
  href: Global.Player.html#Player_SaveStomachObjectInPlayerState
  name: SaveStomachObjectInPlayerState
  nameWithType: Player.SaveStomachObjectInPlayerState
  fullName: Player.SaveStomachObjectInPlayerState
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.Player.Destroy*
  commentId: Overload:Global.Player.Destroy
  isExternal: true
  href: Global.Player.html#Player_Destroy
  name: Destroy
  nameWithType: Player.Destroy
  fullName: Player.Destroy
- uid: Global.Player.JollyPointUpdate*
  commentId: Overload:Global.Player.JollyPointUpdate
  isExternal: true
  href: Global.Player.html#Player_JollyPointUpdate
  name: JollyPointUpdate
  nameWithType: Player.JollyPointUpdate
  fullName: Player.JollyPointUpdate
- uid: Global.Player.ClassMechanicsArtificer*
  commentId: Overload:Global.Player.ClassMechanicsArtificer
  isExternal: true
  href: Global.Player.html#Player_ClassMechanicsArtificer
  name: ClassMechanicsArtificer
  nameWithType: Player.ClassMechanicsArtificer
  fullName: Player.ClassMechanicsArtificer
- uid: Global.Player.CanMaulCreature*
  commentId: Overload:Global.Player.CanMaulCreature
  isExternal: true
  href: Global.Player.html#Player_CanMaulCreature_Creature_
  name: CanMaulCreature
  nameWithType: Player.CanMaulCreature
  fullName: Player.CanMaulCreature
- uid: Global.Player.MaulingUpdate*
  commentId: Overload:Global.Player.MaulingUpdate
  isExternal: true
  href: Global.Player.html#Player_MaulingUpdate_System_Int32_
  name: MaulingUpdate
  nameWithType: Player.MaulingUpdate
  fullName: Player.MaulingUpdate
- uid: Global.Player.PyroDeath*
  commentId: Overload:Global.Player.PyroDeath
  isExternal: true
  href: Global.Player.html#Player_PyroDeath
  name: PyroDeath
  nameWithType: Player.PyroDeath
  fullName: Player.PyroDeath
- uid: Global.Player.ClassMechanicsGourmand*
  commentId: Overload:Global.Player.ClassMechanicsGourmand
  isExternal: true
  href: Global.Player.html#Player_ClassMechanicsGourmand
  name: ClassMechanicsGourmand
  nameWithType: Player.ClassMechanicsGourmand
  fullName: Player.ClassMechanicsGourmand
- uid: Global.Player.SlugSlamConditions*
  commentId: Overload:Global.Player.SlugSlamConditions
  isExternal: true
  href: Global.Player.html#Player_SlugSlamConditions_PhysicalObject_
  name: SlugSlamConditions
  nameWithType: Player.SlugSlamConditions
  fullName: Player.SlugSlamConditions
- uid: Global.Player.CraftingResults*
  commentId: Overload:Global.Player.CraftingResults
  isExternal: true
  href: Global.Player.html#Player_CraftingResults
  name: CraftingResults
  nameWithType: Player.CraftingResults
  fullName: Player.CraftingResults
- uid: Global.AbstractPhysicalObject.AbstractObjectType
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectType
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectType
  nameWithType: AbstractPhysicalObject.AbstractObjectType
  fullName: AbstractPhysicalObject.AbstractObjectType
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
- uid: Global.Player.GraspsCanBeCrafted*
  commentId: Overload:Global.Player.GraspsCanBeCrafted
  isExternal: true
  href: Global.Player.html#Player_GraspsCanBeCrafted
  name: GraspsCanBeCrafted
  nameWithType: Player.GraspsCanBeCrafted
  fullName: Player.GraspsCanBeCrafted
- uid: Global.Player.SpitUpCraftedObject*
  commentId: Overload:Global.Player.SpitUpCraftedObject
  isExternal: true
  href: Global.Player.html#Player_SpitUpCraftedObject
  name: SpitUpCraftedObject
  nameWithType: Player.SpitUpCraftedObject
  fullName: Player.SpitUpCraftedObject
- uid: Global.Player.SaintTongueCheck*
  commentId: Overload:Global.Player.SaintTongueCheck
  isExternal: true
  href: Global.Player.html#Player_SaintTongueCheck
  name: SaintTongueCheck
  nameWithType: Player.SaintTongueCheck
  fullName: Player.SaintTongueCheck
- uid: Global.Player.SaintStagger*
  commentId: Overload:Global.Player.SaintStagger
  isExternal: true
  href: Global.Player.html#Player_SaintStagger_System_Int32_
  name: SaintStagger
  nameWithType: Player.SaintStagger
  fullName: Player.SaintStagger
- uid: Global.Player.ActivateAscension*
  commentId: Overload:Global.Player.ActivateAscension
  isExternal: true
  href: Global.Player.html#Player_ActivateAscension
  name: ActivateAscension
  nameWithType: Player.ActivateAscension
  fullName: Player.ActivateAscension
- uid: Global.Player.DeactivateAscension*
  commentId: Overload:Global.Player.DeactivateAscension
  isExternal: true
  href: Global.Player.html#Player_DeactivateAscension
  name: DeactivateAscension
  nameWithType: Player.DeactivateAscension
  fullName: Player.DeactivateAscension
- uid: Global.Player.InitVoidWormCutscene*
  commentId: Overload:Global.Player.InitVoidWormCutscene
  isExternal: true
  href: Global.Player.html#Player_InitVoidWormCutscene
  name: InitVoidWormCutscene
  nameWithType: Player.InitVoidWormCutscene
  fullName: Player.InitVoidWormCutscene
- uid: Global.Player.InitiateDissolve*
  commentId: Overload:Global.Player.InitiateDissolve
  isExternal: true
  href: Global.Player.html#Player_InitiateDissolve
  name: InitiateDissolve
  nameWithType: Player.InitiateDissolve
  fullName: Player.InitiateDissolve
- uid: Global.Player.ClassMechanicsSaint*
  commentId: Overload:Global.Player.ClassMechanicsSaint
  isExternal: true
  href: Global.Player.html#Player_ClassMechanicsSaint
  name: ClassMechanicsSaint
  nameWithType: Player.ClassMechanicsSaint
  fullName: Player.ClassMechanicsSaint
- uid: Global.Player.TongueUpdate*
  commentId: Overload:Global.Player.TongueUpdate
  isExternal: true
  href: Global.Player.html#Player_TongueUpdate
  name: TongueUpdate
  nameWithType: Player.TongueUpdate
  fullName: Player.TongueUpdate
- uid: Global.Player.CanIPutDeadSlugOnBack*
  commentId: Overload:Global.Player.CanIPutDeadSlugOnBack
  isExternal: true
  href: Global.Player.html#Player_CanIPutDeadSlugOnBack_Player_
  name: CanIPutDeadSlugOnBack
  nameWithType: Player.CanIPutDeadSlugOnBack
  fullName: Player.CanIPutDeadSlugOnBack
- uid: Global.Player.setPupStatus*
  commentId: Overload:Global.Player.setPupStatus
  isExternal: true
  href: Global.Player.html#Player_setPupStatus_System_Boolean_
  name: setPupStatus
  nameWithType: Player.setPupStatus
  fullName: Player.setPupStatus
- uid: Global.Player.NPCForceGrab*
  commentId: Overload:Global.Player.NPCForceGrab
  isExternal: true
  href: Global.Player.html#Player_NPCForceGrab_PhysicalObject_
  name: NPCForceGrab
  nameWithType: Player.NPCForceGrab
  fullName: Player.NPCForceGrab
- uid: Global.Player.NPCGrabCheck*
  commentId: Overload:Global.Player.NPCGrabCheck
  isExternal: true
  href: Global.Player.html#Player_NPCGrabCheck_PhysicalObject_
  name: NPCGrabCheck
  nameWithType: Player.NPCGrabCheck
  fullName: Player.NPCGrabCheck
- uid: Global.Player.ClassMechanicsSpearmaster*
  commentId: Overload:Global.Player.ClassMechanicsSpearmaster
  isExternal: true
  href: Global.Player.html#Player_ClassMechanicsSpearmaster
  name: ClassMechanicsSpearmaster
  nameWithType: Player.ClassMechanicsSpearmaster
  fullName: Player.ClassMechanicsSpearmaster
- uid: Global.Player.InitChatLog*
  commentId: Overload:Global.Player.InitChatLog
  isExternal: true
  href: Global.Player.html#Player_InitChatLog_MoreSlugcats_ChatlogData_ChatlogID_
  name: InitChatLog
  nameWithType: Player.InitChatLog
  fullName: Player.InitChatLog
- uid: Global.Player.ProcessChatLog*
  commentId: Overload:Global.Player.ProcessChatLog
  isExternal: true
  href: Global.Player.html#Player_ProcessChatLog
  name: ProcessChatLog
  nameWithType: Player.ProcessChatLog
  fullName: Player.ProcessChatLog
- uid: Global.Creature.CanBeGrabbed(Creature)
  commentId: M:Global.Creature.CanBeGrabbed(Creature)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  name: CanBeGrabbed(Creature)
  nameWithType: Creature.CanBeGrabbed(Creature)
  fullName: Creature.CanBeGrabbed(Creature)
  spec.csharp:
  - uid: Global.Creature.CanBeGrabbed(Creature)
    name: CanBeGrabbed
    isExternal: true
    href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
  spec.vb:
  - uid: Global.Creature.CanBeGrabbed(Creature)
    name: CanBeGrabbed
    isExternal: true
    href: Global.Creature.html#Creature_CanBeGrabbed_Creature_
  - name: (
  - uid: Global.Creature
    name: Creature
    isExternal: true
    href: Creature.html
  - name: )
- uid: Global.Player.CanBeGrabbed*
  commentId: Overload:Global.Player.CanBeGrabbed
  isExternal: true
  href: Global.Player.html#Player_CanBeGrabbed_Creature_
  name: CanBeGrabbed
  nameWithType: Player.CanBeGrabbed
  fullName: Player.CanBeGrabbed
- uid: Global.Player.SetMalnourished*
  commentId: Overload:Global.Player.SetMalnourished
  isExternal: true
  href: Global.Player.html#Player_SetMalnourished_System_Boolean_
  name: SetMalnourished
  nameWithType: Player.SetMalnourished
  fullName: Player.SetMalnourished
- uid: Global.Player.AddFood*
  commentId: Overload:Global.Player.AddFood
  isExternal: true
  href: Global.Player.html#Player_AddFood_System_Int32_
  name: AddFood
  nameWithType: Player.AddFood
  fullName: Player.AddFood
- uid: Global.Player.FoodInRoom*
  commentId: Overload:Global.Player.FoodInRoom
  isExternal: true
  href: Global.Player.html#Player_FoodInRoom_System_Boolean_
  name: FoodInRoom
  nameWithType: Player.FoodInRoom
  fullName: Player.FoodInRoom
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Player.AerobicIncrease*
  commentId: Overload:Global.Player.AerobicIncrease
  isExternal: true
  href: Global.Player.html#Player_AerobicIncrease_System_Single_
  name: AerobicIncrease
  nameWithType: Player.AerobicIncrease
  fullName: Player.AerobicIncrease
- uid: Global.Player.#ctor*
  commentId: Overload:Global.Player.#ctor
  isExternal: true
  href: Global.Player.html#Player__ctor_AbstractCreature_World_
  name: Player
  nameWithType: Player.Player
  fullName: Player.Player
  nameWithType.vb: Player.New
  fullName.vb: Player.New
  name.vb: New
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.PhysicalObject.InitiateGraphicsModule
  commentId: M:Global.PhysicalObject.InitiateGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  name: InitiateGraphicsModule()
  nameWithType: PhysicalObject.InitiateGraphicsModule()
  fullName: PhysicalObject.InitiateGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.InitiateGraphicsModule
    name: InitiateGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_InitiateGraphicsModule
  - name: (
  - name: )
- uid: Global.Player.InitiateGraphicsModule*
  commentId: Overload:Global.Player.InitiateGraphicsModule
  isExternal: true
  href: Global.Player.html#Player_InitiateGraphicsModule
  name: InitiateGraphicsModule
  nameWithType: Player.InitiateGraphicsModule
  fullName: Player.InitiateGraphicsModule
- uid: Global.PhysicalObject.RemoveGraphicsModule
  commentId: M:Global.PhysicalObject.RemoveGraphicsModule
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  name: RemoveGraphicsModule()
  nameWithType: PhysicalObject.RemoveGraphicsModule()
  fullName: PhysicalObject.RemoveGraphicsModule()
  spec.csharp:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.RemoveGraphicsModule
    name: RemoveGraphicsModule
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_RemoveGraphicsModule
  - name: (
  - name: )
- uid: Global.Player.RemoveGraphicsModule*
  commentId: Overload:Global.Player.RemoveGraphicsModule
  isExternal: true
  href: Global.Player.html#Player_RemoveGraphicsModule
  name: RemoveGraphicsModule
  nameWithType: Player.RemoveGraphicsModule
  fullName: Player.RemoveGraphicsModule
- uid: Global.Creature.Deafen(System.Int32)
  commentId: M:Global.Creature.Deafen(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Deafen_System_Int32_
  name: Deafen(int)
  nameWithType: Creature.Deafen(int)
  fullName: Creature.Deafen(int)
  nameWithType.vb: Creature.Deafen(Integer)
  fullName.vb: Creature.Deafen(Integer)
  name.vb: Deafen(Integer)
  spec.csharp:
  - uid: Global.Creature.Deafen(System.Int32)
    name: Deafen
    isExternal: true
    href: Global.Creature.html#Creature_Deafen_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Deafen(System.Int32)
    name: Deafen
    isExternal: true
    href: Global.Creature.html#Creature_Deafen_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Player.Deafen*
  commentId: Overload:Global.Player.Deafen
  isExternal: true
  href: Global.Player.html#Player_Deafen_System_Int32_
  name: Deafen
  nameWithType: Player.Deafen
  fullName: Player.Deafen
- uid: Global.Creature.Update(System.Boolean)
  commentId: M:Global.Creature.Update(System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Update_System_Boolean_
  name: Update(bool)
  nameWithType: Creature.Update(bool)
  fullName: Creature.Update(bool)
  nameWithType.vb: Creature.Update(Boolean)
  fullName.vb: Creature.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.Creature.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.Creature.html#Creature_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.Creature.html#Creature_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Player.Update*
  commentId: Overload:Global.Player.Update
  isExternal: true
  href: Global.Player.html#Player_Update_System_Boolean_
  name: Update
  nameWithType: Player.Update
  fullName: Player.Update
- uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  commentId: M:Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated(bool, bool)
  nameWithType: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  fullName: PhysicalObject.GraphicsModuleUpdated(bool, bool)
  nameWithType.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  fullName.vb: PhysicalObject.GraphicsModuleUpdated(Boolean, Boolean)
  name.vb: GraphicsModuleUpdated(Boolean, Boolean)
  spec.csharp:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.GraphicsModuleUpdated(System.Boolean,System.Boolean)
    name: GraphicsModuleUpdated
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Player.GraphicsModuleUpdated*
  commentId: Overload:Global.Player.GraphicsModuleUpdated
  isExternal: true
  href: Global.Player.html#Player_GraphicsModuleUpdated_System_Boolean_System_Boolean_
  name: GraphicsModuleUpdated
  nameWithType: Player.GraphicsModuleUpdated
  fullName: Player.GraphicsModuleUpdated
- uid: Global.Player.GetHeldItemDirection*
  commentId: Overload:Global.Player.GetHeldItemDirection
  isExternal: true
  href: Global.Player.html#Player_GetHeldItemDirection_System_Int32_
  name: GetHeldItemDirection
  nameWithType: Player.GetHeldItemDirection
  fullName: Player.GetHeldItemDirection
- uid: Global.Player.checkInput*
  commentId: Overload:Global.Player.checkInput
  isExternal: true
  href: Global.Player.html#Player_checkInput
  name: checkInput
  nameWithType: Player.checkInput
  fullName: Player.checkInput
- uid: Global.Player.Blink*
  commentId: Overload:Global.Player.Blink
  isExternal: true
  href: Global.Player.html#Player_Blink_System_Int32_
  name: Blink
  nameWithType: Player.Blink
  fullName: Player.Blink
- uid: Global.Player.PyroDeathThreshold*
  commentId: Overload:Global.Player.PyroDeathThreshold
  isExternal: true
  href: Global.Player.html#Player_PyroDeathThreshold_RainWorldGame_
  name: PyroDeathThreshold
  nameWithType: Player.PyroDeathThreshold
  fullName: Player.PyroDeathThreshold
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide(PhysicalObject, int, int)
  nameWithType: PhysicalObject.Collide(PhysicalObject, int, int)
  fullName: PhysicalObject.Collide(PhysicalObject, int, int)
  nameWithType.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  fullName.vb: PhysicalObject.Collide(PhysicalObject, Integer, Integer)
  name.vb: Collide(PhysicalObject, Integer, Integer)
  spec.csharp:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Collide(PhysicalObject,System.Int32,System.Int32)
    name: Collide
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Collide_PhysicalObject_System_Int32_System_Int32_
  - name: (
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Player.Collide*
  commentId: Overload:Global.Player.Collide
  isExternal: true
  href: Global.Player.html#Player_Collide_PhysicalObject_System_Int32_System_Int32_
  name: Collide
  nameWithType: Player.Collide
  fullName: Player.Collide
- uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  commentId: M:Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact(int, IntVector2, float, bool)
  nameWithType: Creature.TerrainImpact(int, IntVector2, float, bool)
  fullName: Creature.TerrainImpact(int, RWCustom.IntVector2, float, bool)
  nameWithType.vb: Creature.TerrainImpact(Integer, IntVector2, Single, Boolean)
  fullName.vb: Creature.TerrainImpact(Integer, RWCustom.IntVector2, Single, Boolean)
  name.vb: TerrainImpact(Integer, IntVector2, Single, Boolean)
  spec.csharp:
  - uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.TerrainImpact(System.Int32,RWCustom.IntVector2,System.Single,System.Boolean)
    name: TerrainImpact
    isExternal: true
    href: Global.Creature.html#Creature_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Player.TerrainImpact*
  commentId: Overload:Global.Player.TerrainImpact
  isExternal: true
  href: Global.Player.html#Player_TerrainImpact_System_Int32_RWCustom_IntVector2_System_Single_System_Boolean_
  name: TerrainImpact
  nameWithType: Player.TerrainImpact
  fullName: Player.TerrainImpact
- uid: Global.Player.OneWayWarpExit*
  commentId: Overload:Global.Player.OneWayWarpExit
  isExternal: true
  href: Global.Player.html#Player_OneWayWarpExit
  name: OneWayWarpExit
  nameWithType: Player.OneWayWarpExit
  fullName: Player.OneWayWarpExit
- uid: Global.Player.PrimeOneWayExit*
  commentId: Overload:Global.Player.PrimeOneWayExit
  isExternal: true
  href: Global.Player.html#Player_PrimeOneWayExit_Room_
  name: PrimeOneWayExit
  nameWithType: Player.PrimeOneWayExit
  fullName: Player.PrimeOneWayExit
- uid: Global.Player.OneWayPlacement*
  commentId: Overload:Global.Player.OneWayPlacement
  isExternal: true
  href: Global.Player.html#Player_OneWayPlacement_UnityEngine_Vector2_
  name: OneWayPlacement
  nameWithType: Player.OneWayPlacement
  fullName: Player.OneWayPlacement
- uid: Global.Creature.Die
  commentId: M:Global.Creature.Die
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Die
  name: Die()
  nameWithType: Creature.Die()
  fullName: Creature.Die()
  spec.csharp:
  - uid: Global.Creature.Die
    name: Die
    isExternal: true
    href: Global.Creature.html#Creature_Die
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.Die
    name: Die
    isExternal: true
    href: Global.Creature.html#Creature_Die
  - name: (
  - name: )
- uid: Global.Player.Die*
  commentId: Overload:Global.Player.Die
  isExternal: true
  href: Global.Player.html#Player_Die
  name: Die
  nameWithType: Player.Die
  fullName: Player.Die
- uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
  commentId: M:Global.PhysicalObject.Grabbed(Creature.Grasp)
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  name: Grabbed(Grasp)
  nameWithType: PhysicalObject.Grabbed(Creature.Grasp)
  fullName: PhysicalObject.Grabbed(Creature.Grasp)
  spec.csharp:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
  spec.vb:
  - uid: Global.PhysicalObject.Grabbed(Creature.Grasp)
    name: Grabbed
    isExternal: true
    href: Global.PhysicalObject.html#PhysicalObject_Grabbed_Creature_Grasp_
  - name: (
  - uid: Global.Creature.Grasp
    name: Grasp
    isExternal: true
    href: Creature.Grasp.html
  - name: )
- uid: Global.Player.Grabbed*
  commentId: Overload:Global.Player.Grabbed
  isExternal: true
  href: Global.Player.html#Player_Grabbed_Creature_Grasp_
  name: Grabbed
  nameWithType: Player.Grabbed
  fullName: Player.Grabbed
- uid: Global.Creature.Stun(System.Int32)
  commentId: M:Global.Creature.Stun(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_Stun_System_Int32_
  name: Stun(int)
  nameWithType: Creature.Stun(int)
  fullName: Creature.Stun(int)
  nameWithType.vb: Creature.Stun(Integer)
  fullName.vb: Creature.Stun(Integer)
  name.vb: Stun(Integer)
  spec.csharp:
  - uid: Global.Creature.Stun(System.Int32)
    name: Stun
    isExternal: true
    href: Global.Creature.html#Creature_Stun_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.Stun(System.Int32)
    name: Stun
    isExternal: true
    href: Global.Creature.html#Creature_Stun_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Player.Stun*
  commentId: Overload:Global.Player.Stun
  isExternal: true
  href: Global.Player.html#Player_Stun_System_Int32_
  name: Stun
  nameWithType: Player.Stun
  fullName: Player.Stun
- uid: Global.Player.AddQuarterFood*
  commentId: Overload:Global.Player.AddQuarterFood
  isExternal: true
  href: Global.Player.html#Player_AddQuarterFood
  name: AddQuarterFood
  nameWithType: Player.AddQuarterFood
  fullName: Player.AddQuarterFood
- uid: Global.Creature.ShortCutColor
  commentId: M:Global.Creature.ShortCutColor
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ShortCutColor
  name: ShortCutColor()
  nameWithType: Creature.ShortCutColor()
  fullName: Creature.ShortCutColor()
  spec.csharp:
  - uid: Global.Creature.ShortCutColor
    name: ShortCutColor
    isExternal: true
    href: Global.Creature.html#Creature_ShortCutColor
  - name: (
  - name: )
  spec.vb:
  - uid: Global.Creature.ShortCutColor
    name: ShortCutColor
    isExternal: true
    href: Global.Creature.html#Creature_ShortCutColor
  - name: (
  - name: )
- uid: Global.Player.ShortCutColor*
  commentId: Overload:Global.Player.ShortCutColor
  isExternal: true
  href: Global.Player.html#Player_ShortCutColor
  name: ShortCutColor
  nameWithType: Player.ShortCutColor
  fullName: Player.ShortCutColor
- uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  commentId: M:Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  name: SpitOutOfShortCut(IntVector2, Room, bool)
  nameWithType: Creature.SpitOutOfShortCut(IntVector2, Room, bool)
  fullName: Creature.SpitOutOfShortCut(RWCustom.IntVector2, Room, bool)
  nameWithType.vb: Creature.SpitOutOfShortCut(IntVector2, Room, Boolean)
  fullName.vb: Creature.SpitOutOfShortCut(RWCustom.IntVector2, Room, Boolean)
  name.vb: SpitOutOfShortCut(IntVector2, Room, Boolean)
  spec.csharp:
  - uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
    name: SpitOutOfShortCut
    isExternal: true
    href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.Creature.SpitOutOfShortCut(RWCustom.IntVector2,Room,System.Boolean)
    name: SpitOutOfShortCut
    isExternal: true
    href: Global.Creature.html#Creature_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  - name: (
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Player.SpitOutOfShortCut*
  commentId: Overload:Global.Player.SpitOutOfShortCut
  isExternal: true
  href: Global.Player.html#Player_SpitOutOfShortCut_RWCustom_IntVector2_Room_System_Boolean_
  name: SpitOutOfShortCut
  nameWithType: Player.SpitOutOfShortCut
  fullName: Player.SpitOutOfShortCut
- uid: Global.Player.GetOwnerType*
  commentId: Overload:Global.Player.GetOwnerType
  isExternal: true
  href: Global.Player.html#Player_GetOwnerType
  name: GetOwnerType
  nameWithType: Player.GetOwnerType
  fullName: Player.GetOwnerType
- uid: HUD.IOwnAHUD.GetOwnerType
  commentId: M:HUD.IOwnAHUD.GetOwnerType
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_GetOwnerType
  name: GetOwnerType()
  nameWithType: IOwnAHUD.GetOwnerType()
  fullName: HUD.IOwnAHUD.GetOwnerType()
  spec.csharp:
  - uid: HUD.IOwnAHUD.GetOwnerType
    name: GetOwnerType
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_GetOwnerType
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.IOwnAHUD.GetOwnerType
    name: GetOwnerType
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_GetOwnerType
  - name: (
  - name: )
- uid: HUD.HUD.OwnerType
  commentId: T:HUD.HUD.OwnerType
  parent: HUD
  isExternal: true
  href: HUD.HUD.html
  name: HUD.OwnerType
  nameWithType: HUD.OwnerType
  fullName: HUD.HUD.OwnerType
  spec.csharp:
  - uid: HUD.HUD
    name: HUD
    isExternal: true
    href: HUD.HUD.html
  - name: .
  - uid: HUD.HUD.OwnerType
    name: OwnerType
    isExternal: true
    href: HUD.HUD.OwnerType.html
  spec.vb:
  - uid: HUD.HUD
    name: HUD
    isExternal: true
    href: HUD.HUD.html
  - name: .
  - uid: HUD.HUD.OwnerType
    name: OwnerType
    isExternal: true
    href: HUD.HUD.OwnerType.html
- uid: Global.Player.PlayHUDSound*
  commentId: Overload:Global.Player.PlayHUDSound
  isExternal: true
  href: Global.Player.html#Player_PlayHUDSound_SoundID_
  name: PlayHUDSound
  nameWithType: Player.PlayHUDSound
  fullName: Player.PlayHUDSound
- uid: HUD.IOwnAHUD.PlayHUDSound(SoundID)
  commentId: M:HUD.IOwnAHUD.PlayHUDSound(SoundID)
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_PlayHUDSound_SoundID_
  name: PlayHUDSound(SoundID)
  nameWithType: IOwnAHUD.PlayHUDSound(SoundID)
  fullName: HUD.IOwnAHUD.PlayHUDSound(SoundID)
  spec.csharp:
  - uid: HUD.IOwnAHUD.PlayHUDSound(SoundID)
    name: PlayHUDSound
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_PlayHUDSound_SoundID_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: )
  spec.vb:
  - uid: HUD.IOwnAHUD.PlayHUDSound(SoundID)
    name: PlayHUDSound
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_PlayHUDSound_SoundID_
  - name: (
  - uid: Global.SoundID
    name: SoundID
    isExternal: true
    href: SoundID.html
  - name: )
- uid: Global.Player.FoodCountDownDone*
  commentId: Overload:Global.Player.FoodCountDownDone
  isExternal: true
  href: Global.Player.html#Player_FoodCountDownDone
  name: FoodCountDownDone
  nameWithType: Player.FoodCountDownDone
  fullName: Player.FoodCountDownDone
- uid: HUD.IOwnAHUD.FoodCountDownDone
  commentId: M:HUD.IOwnAHUD.FoodCountDownDone
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_FoodCountDownDone
  name: FoodCountDownDone()
  nameWithType: IOwnAHUD.FoodCountDownDone()
  fullName: HUD.IOwnAHUD.FoodCountDownDone()
  spec.csharp:
  - uid: HUD.IOwnAHUD.FoodCountDownDone
    name: FoodCountDownDone
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_FoodCountDownDone
  - name: (
  - name: )
  spec.vb:
  - uid: HUD.IOwnAHUD.FoodCountDownDone
    name: FoodCountDownDone
    isExternal: true
    href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_FoodCountDownDone
  - name: (
  - name: )
- uid: Global.Creature.NewRoom(Room)
  commentId: M:Global.Creature.NewRoom(Room)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_NewRoom_Room_
  name: NewRoom(Room)
  nameWithType: Creature.NewRoom(Room)
  fullName: Creature.NewRoom(Room)
  spec.csharp:
  - uid: Global.Creature.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Creature.html#Creature_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
  spec.vb:
  - uid: Global.Creature.NewRoom(Room)
    name: NewRoom
    isExternal: true
    href: Global.Creature.html#Creature_NewRoom_Room_
  - name: (
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: )
- uid: Global.Player.NewRoom*
  commentId: Overload:Global.Player.NewRoom
  isExternal: true
  href: Global.Player.html#Player_NewRoom_Room_
  name: NewRoom
  nameWithType: Player.NewRoom
  fullName: Player.NewRoom
- uid: Global.Player.UpdateMSC*
  commentId: Overload:Global.Player.UpdateMSC
  isExternal: true
  href: Global.Player.html#Player_UpdateMSC
  name: UpdateMSC
  nameWithType: Player.UpdateMSC
  fullName: Player.UpdateMSC
- uid: Global.Player.GetInitialSlugcatClass*
  commentId: Overload:Global.Player.GetInitialSlugcatClass
  isExternal: true
  href: Global.Player.html#Player_GetInitialSlugcatClass
  name: GetInitialSlugcatClass
  nameWithType: Player.GetInitialSlugcatClass
  fullName: Player.GetInitialSlugcatClass
- uid: Global.Player.SubtractFood*
  commentId: Overload:Global.Player.SubtractFood
  isExternal: true
  href: Global.Player.html#Player_SubtractFood_System_Int32_
  name: SubtractFood
  nameWithType: Player.SubtractFood
  fullName: Player.SubtractFood
- uid: Global.Player.DeathByBiteMultiplier*
  commentId: Overload:Global.Player.DeathByBiteMultiplier
  isExternal: true
  href: Global.Player.html#Player_DeathByBiteMultiplier
  name: DeathByBiteMultiplier
  nameWithType: Player.DeathByBiteMultiplier
  fullName: Player.DeathByBiteMultiplier
- uid: Global.Player.AllowGrabbingBatflys*
  commentId: Overload:Global.Player.AllowGrabbingBatflys
  isExternal: true
  href: Global.Player.html#Player_AllowGrabbingBatflys
  name: AllowGrabbingBatflys
  nameWithType: Player.AllowGrabbingBatflys
  fullName: Player.AllowGrabbingBatflys
- uid: Global.Player.IsCreatureLegalToHoldWithoutStun*
  commentId: Overload:Global.Player.IsCreatureLegalToHoldWithoutStun
  isExternal: true
  href: Global.Player.html#Player_IsCreatureLegalToHoldWithoutStun_Creature_
  name: IsCreatureLegalToHoldWithoutStun
  nameWithType: Player.IsCreatureLegalToHoldWithoutStun
  fullName: Player.IsCreatureLegalToHoldWithoutStun
- uid: Global.Player.IsCreatureImmuneToPlayerGrabStun*
  commentId: Overload:Global.Player.IsCreatureImmuneToPlayerGrabStun
  isExternal: true
  href: Global.Player.html#Player_IsCreatureImmuneToPlayerGrabStun_Creature_
  name: IsCreatureImmuneToPlayerGrabStun
  nameWithType: Player.IsCreatureImmuneToPlayerGrabStun
  fullName: Player.IsCreatureImmuneToPlayerGrabStun
- uid: Global.Player.StomachGlowLightColor*
  commentId: Overload:Global.Player.StomachGlowLightColor
  isExternal: true
  href: Global.Player.html#Player_StomachGlowLightColor
  name: StomachGlowLightColor
  nameWithType: Player.StomachGlowLightColor
  fullName: Player.StomachGlowLightColor
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: SpearStick(Weapon, float, BodyChunk, Pos, Vector2)
  nameWithType: Creature.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName: Creature.SpearStick(Weapon, float, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  nameWithType.vb: Creature.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, Vector2)
  fullName.vb: Creature.SpearStick(Weapon, Single, BodyChunk, PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  name.vb: SpearStick(Weapon, Single, BodyChunk, Pos, Vector2)
  spec.csharp:
  - uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
    name: SpearStick
    isExternal: true
    href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.Creature.SpearStick(Weapon,System.Single,BodyChunk,PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
    name: SpearStick
    isExternal: true
    href: Global.Creature.html#Creature_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  - name: (
  - uid: Global.Weapon
    name: Weapon
    isExternal: true
    href: Weapon.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: Global.BodyChunk
    name: BodyChunk
    isExternal: true
    href: BodyChunk.html
  - name: ','
  - name: " "
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Player.SpearStick*
  commentId: Overload:Global.Player.SpearStick
  isExternal: true
  href: Global.Player.html#Player_SpearStick_Weapon_System_Single_BodyChunk_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: SpearStick
  nameWithType: Player.SpearStick
  fullName: Player.SpearStick
- uid: Global.Weapon
  commentId: T:Global.Weapon
  isExternal: true
  href: Weapon.html
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
- uid: Global.Player.SuperHardSetPosition*
  commentId: Overload:Global.Player.SuperHardSetPosition
  isExternal: true
  href: Global.Player.html#Player_SuperHardSetPosition_UnityEngine_Vector2_
  name: SuperHardSetPosition
  nameWithType: Player.SuperHardSetPosition
  fullName: Player.SuperHardSetPosition
- uid: Global.Player.ProcessConsoleDebugInputs*
  commentId: Overload:Global.Player.ProcessConsoleDebugInputs
  isExternal: true
  href: Global.Player.html#Player_ProcessConsoleDebugInputs
  name: ProcessConsoleDebugInputs
  nameWithType: Player.ProcessConsoleDebugInputs
  fullName: Player.ProcessConsoleDebugInputs
- uid: Global.Player.ProcessDebugInputs*
  commentId: Overload:Global.Player.ProcessDebugInputs
  isExternal: true
  href: Global.Player.html#Player_ProcessDebugInputs
  name: ProcessDebugInputs
  nameWithType: Player.ProcessDebugInputs
  fullName: Player.ProcessDebugInputs
- uid: Global.Player.UpdateAnimation*
  commentId: Overload:Global.Player.UpdateAnimation
  isExternal: true
  href: Global.Player.html#Player_UpdateAnimation
  name: UpdateAnimation
  nameWithType: Player.UpdateAnimation
  fullName: Player.UpdateAnimation
- uid: Global.Player.CollideWithCoralCircuitBit*
  commentId: Overload:Global.Player.CollideWithCoralCircuitBit
  isExternal: true
  href: Global.Player.html#Player_CollideWithCoralCircuitBit_System_Int32_CoralBrain_CoralCircuit_CircuitBit_System_Single_
  name: CollideWithCoralCircuitBit
  nameWithType: Player.CollideWithCoralCircuitBit
  fullName: Player.CollideWithCoralCircuitBit
- uid: CoralBrain.CoralCircuit.CircuitBit
  commentId: T:CoralBrain.CoralCircuit.CircuitBit
  parent: CoralBrain
  isExternal: true
  href: CoralBrain.CoralCircuit.html
  name: CoralCircuit.CircuitBit
  nameWithType: CoralCircuit.CircuitBit
  fullName: CoralBrain.CoralCircuit.CircuitBit
  spec.csharp:
  - uid: CoralBrain.CoralCircuit
    name: CoralCircuit
    isExternal: true
    href: CoralBrain.CoralCircuit.html
  - name: .
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
  spec.vb:
  - uid: CoralBrain.CoralCircuit
    name: CoralCircuit
    isExternal: true
    href: CoralBrain.CoralCircuit.html
  - name: .
  - uid: CoralBrain.CoralCircuit.CircuitBit
    name: CircuitBit
    isExternal: true
    href: CoralBrain.CoralCircuit.CircuitBit.html
- uid: CoralBrain
  commentId: N:CoralBrain
  isExternal: true
  href: CoralBrain.html
  name: CoralBrain
  nameWithType: CoralBrain
  fullName: CoralBrain
- uid: Global.Player.SwimDir*
  commentId: Overload:Global.Player.SwimDir
  isExternal: true
  href: Global.Player.html#Player_SwimDir_System_Boolean_
  name: SwimDir
  nameWithType: Player.SwimDir
  fullName: Player.SwimDir
- uid: Global.Player.UpdateBodyMode*
  commentId: Overload:Global.Player.UpdateBodyMode
  isExternal: true
  href: Global.Player.html#Player_UpdateBodyMode
  name: UpdateBodyMode
  nameWithType: Player.UpdateBodyMode
  fullName: Player.UpdateBodyMode
- uid: Global.Creature.ReleaseGrasp(System.Int32)
  commentId: M:Global.Creature.ReleaseGrasp(System.Int32)
  parent: Global.Creature
  isExternal: true
  href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  name: ReleaseGrasp(int)
  nameWithType: Creature.ReleaseGrasp(int)
  fullName: Creature.ReleaseGrasp(int)
  nameWithType.vb: Creature.ReleaseGrasp(Integer)
  fullName.vb: Creature.ReleaseGrasp(Integer)
  name.vb: ReleaseGrasp(Integer)
  spec.csharp:
  - uid: Global.Creature.ReleaseGrasp(System.Int32)
    name: ReleaseGrasp
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Global.Creature.ReleaseGrasp(System.Int32)
    name: ReleaseGrasp
    isExternal: true
    href: Global.Creature.html#Creature_ReleaseGrasp_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.Player.ReleaseGrasp*
  commentId: Overload:Global.Player.ReleaseGrasp
  isExternal: true
  href: Global.Player.html#Player_ReleaseGrasp_System_Int32_
  name: ReleaseGrasp
  nameWithType: Player.ReleaseGrasp
  fullName: Player.ReleaseGrasp
- uid: Global.Player.ObjectEaten*
  commentId: Overload:Global.Player.ObjectEaten
  isExternal: true
  href: Global.Player.html#Player_ObjectEaten_IPlayerEdible_
  name: ObjectEaten
  nameWithType: Player.ObjectEaten
  fullName: Player.ObjectEaten
- uid: Global.IPlayerEdible
  commentId: T:Global.IPlayerEdible
  isExternal: true
  href: IPlayerEdible.html
  name: IPlayerEdible
  nameWithType: IPlayerEdible
  fullName: IPlayerEdible
- uid: Global.Player.GrabUpdate*
  commentId: Overload:Global.Player.GrabUpdate
  isExternal: true
  href: Global.Player.html#Player_GrabUpdate_System_Boolean_
  name: GrabUpdate
  nameWithType: Player.GrabUpdate
  fullName: Player.GrabUpdate
- uid: Global.Player.SlugcatGrab*
  commentId: Overload:Global.Player.SlugcatGrab
  isExternal: true
  href: Global.Player.html#Player_SlugcatGrab_PhysicalObject_System_Int32_
  name: SlugcatGrab
  nameWithType: Player.SlugcatGrab
  fullName: Player.SlugcatGrab
- uid: Global.Player.CanIPickThisUp*
  commentId: Overload:Global.Player.CanIPickThisUp
  isExternal: true
  href: Global.Player.html#Player_CanIPickThisUp_PhysicalObject_
  name: CanIPickThisUp
  nameWithType: Player.CanIPickThisUp
  fullName: Player.CanIPickThisUp
- uid: Global.Player.HeavyCarry*
  commentId: Overload:Global.Player.HeavyCarry
  isExternal: true
  href: Global.Player.html#Player_HeavyCarry_PhysicalObject_
  name: HeavyCarry
  nameWithType: Player.HeavyCarry
  fullName: Player.HeavyCarry
- uid: Global.Player.FreeHand*
  commentId: Overload:Global.Player.FreeHand
  isExternal: true
  href: Global.Player.html#Player_FreeHand
  name: FreeHand
  nameWithType: Player.FreeHand
  fullName: Player.FreeHand
- uid: Global.Player.ThrowObject*
  commentId: Overload:Global.Player.ThrowObject
  isExternal: true
  href: Global.Player.html#Player_ThrowObject_System_Int32_System_Boolean_
  name: ThrowObject
  nameWithType: Player.ThrowObject
  fullName: Player.ThrowObject
- uid: Global.Player.ThrowToGetFree*
  commentId: Overload:Global.Player.ThrowToGetFree
  isExternal: true
  href: Global.Player.html#Player_ThrowToGetFree_System_Boolean_
  name: ThrowToGetFree
  nameWithType: Player.ThrowToGetFree
  fullName: Player.ThrowToGetFree
- uid: Global.Player.DangerGraspPickup*
  commentId: Overload:Global.Player.DangerGraspPickup
  isExternal: true
  href: Global.Player.html#Player_DangerGraspPickup_System_Boolean_
  name: DangerGraspPickup
  nameWithType: Player.DangerGraspPickup
  fullName: Player.DangerGraspPickup
- uid: Global.Player.CanBeSwallowed*
  commentId: Overload:Global.Player.CanBeSwallowed
  isExternal: true
  href: Global.Player.html#Player_CanBeSwallowed_PhysicalObject_
  name: CanBeSwallowed
  nameWithType: Player.CanBeSwallowed
  fullName: Player.CanBeSwallowed
- uid: Global.Player.EatMeatOmnivoreGreenList*
  commentId: Overload:Global.Player.EatMeatOmnivoreGreenList
  isExternal: true
  href: Global.Player.html#Player_EatMeatOmnivoreGreenList_Creature_
  name: EatMeatOmnivoreGreenList
  nameWithType: Player.EatMeatOmnivoreGreenList
  fullName: Player.EatMeatOmnivoreGreenList
- uid: Global.Player.CanEatMeat*
  commentId: Overload:Global.Player.CanEatMeat
  isExternal: true
  href: Global.Player.html#Player_CanEatMeat_Creature_
  name: CanEatMeat
  nameWithType: Player.CanEatMeat
  fullName: Player.CanEatMeat
- uid: Global.Player.SwallowObject*
  commentId: Overload:Global.Player.SwallowObject
  isExternal: true
  href: Global.Player.html#Player_SwallowObject_System_Int32_
  name: SwallowObject
  nameWithType: Player.SwallowObject
  fullName: Player.SwallowObject
- uid: Global.Player.Regurgitate*
  commentId: Overload:Global.Player.Regurgitate
  isExternal: true
  href: Global.Player.html#Player_Regurgitate
  name: Regurgitate
  nameWithType: Player.Regurgitate
  fullName: Player.Regurgitate
- uid: Global.Player.EatMeatUpdate*
  commentId: Overload:Global.Player.EatMeatUpdate
  isExternal: true
  href: Global.Player.html#Player_EatMeatUpdate_System_Int32_
  name: EatMeatUpdate
  nameWithType: Player.EatMeatUpdate
  fullName: Player.EatMeatUpdate
- uid: Global.Player.MovementUpdate*
  commentId: Overload:Global.Player.MovementUpdate
  isExternal: true
  href: Global.Player.html#Player_MovementUpdate_System_Boolean_
  name: MovementUpdate
  nameWithType: Player.MovementUpdate
  fullName: Player.MovementUpdate
- uid: Global.Player.WallJump*
  commentId: Overload:Global.Player.WallJump
  isExternal: true
  href: Global.Player.html#Player_WallJump_System_Int32_
  name: WallJump
  nameWithType: Player.WallJump
  fullName: Player.WallJump
- uid: Global.Player.Jump*
  commentId: Overload:Global.Player.Jump
  isExternal: true
  href: Global.Player.html#Player_Jump
  name: Jump
  nameWithType: Player.Jump
  fullName: Player.Jump
- uid: Global.Player.JumpOnChunk*
  commentId: Overload:Global.Player.JumpOnChunk
  isExternal: true
  href: Global.Player.html#Player_JumpOnChunk
  name: JumpOnChunk
  nameWithType: Player.JumpOnChunk
  fullName: Player.JumpOnChunk
- uid: Global.Player.WatcherUpdate*
  commentId: Overload:Global.Player.WatcherUpdate
  isExternal: true
  href: Global.Player.html#Player_WatcherUpdate
  name: WatcherUpdate
  nameWithType: Player.WatcherUpdate
  fullName: Player.WatcherUpdate
- uid: Global.Player.ApplyWarpFatigue*
  commentId: Overload:Global.Player.ApplyWarpFatigue
  isExternal: true
  href: Global.Player.html#Player_ApplyWarpFatigue_RainWorldGame_
  name: ApplyWarpFatigue
  nameWithType: Player.ApplyWarpFatigue
  fullName: Player.ApplyWarpFatigue
- uid: Global.Player.TickLevitation*
  commentId: Overload:Global.Player.TickLevitation
  isExternal: true
  href: Global.Player.html#Player_TickLevitation_System_Boolean_
  name: TickLevitation
  nameWithType: Player.TickLevitation
  fullName: Player.TickLevitation
- uid: Global.Player.StopLevitation*
  commentId: Overload:Global.Player.StopLevitation
  isExternal: true
  href: Global.Player.html#Player_StopLevitation
  name: StopLevitation
  nameWithType: Player.StopLevitation
  fullName: Player.StopLevitation
- uid: Global.Player.RippleSpawnInteractions*
  commentId: Overload:Global.Player.RippleSpawnInteractions
  isExternal: true
  href: Global.Player.html#Player_RippleSpawnInteractions
  name: RippleSpawnInteractions
  nameWithType: Player.RippleSpawnInteractions
  fullName: Player.RippleSpawnInteractions
- uid: Global.Player.IsBlacklistedRoomFromDynamicWarpPoints*
  commentId: Overload:Global.Player.IsBlacklistedRoomFromDynamicWarpPoints
  isExternal: true
  href: Global.Player.html#Player_IsBlacklistedRoomFromDynamicWarpPoints_Room_
  name: IsBlacklistedRoomFromDynamicWarpPoints
  nameWithType: Player.IsBlacklistedRoomFromDynamicWarpPoints
  fullName: Player.IsBlacklistedRoomFromDynamicWarpPoints
- uid: Global.Player.BlackListReason
  commentId: T:Global.Player.BlackListReason
  isExternal: true
  href: Player.html
  name: Player.BlackListReason
  nameWithType: Player.BlackListReason
  fullName: Player.BlackListReason
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.BlackListReason
    name: BlackListReason
    isExternal: true
    href: Player.BlackListReason.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.BlackListReason
    name: BlackListReason
    isExternal: true
    href: Player.BlackListReason.html
- uid: Global.Player.SpawnDynamicWarpPoint*
  commentId: Overload:Global.Player.SpawnDynamicWarpPoint
  isExternal: true
  href: Global.Player.html#Player_SpawnDynamicWarpPoint
  name: SpawnDynamicWarpPoint
  nameWithType: Player.SpawnDynamicWarpPoint
  fullName: Player.SpawnDynamicWarpPoint
- uid: Global.Player.RoomBlacklistedFromRippleTears*
  commentId: Overload:Global.Player.RoomBlacklistedFromRippleTears
  isExternal: true
  href: Global.Player.html#Player_RoomBlacklistedFromRippleTears_Room_
  name: RoomBlacklistedFromRippleTears
  nameWithType: Player.RoomBlacklistedFromRippleTears
  fullName: Player.RoomBlacklistedFromRippleTears
- uid: Global.Player.SpawnPersistentRipple*
  commentId: Overload:Global.Player.SpawnPersistentRipple
  isExternal: true
  href: Global.Player.html#Player_SpawnPersistentRipple_System_Single_System_Single_System_Int32_
  name: SpawnPersistentRipple
  nameWithType: Player.SpawnPersistentRipple
  fullName: Player.SpawnPersistentRipple
- uid: Global.Player.SpawnWatcherMechanicRipple*
  commentId: Overload:Global.Player.SpawnWatcherMechanicRipple
  isExternal: true
  href: Global.Player.html#Player_SpawnWatcherMechanicRipple
  name: SpawnWatcherMechanicRipple
  nameWithType: Player.SpawnWatcherMechanicRipple
  fullName: Player.SpawnWatcherMechanicRipple
- uid: Global.Player.DestroyTransitionRipple*
  commentId: Overload:Global.Player.DestroyTransitionRipple
  isExternal: true
  href: Global.Player.html#Player_DestroyTransitionRipple
  name: DestroyTransitionRipple
  nameWithType: Player.DestroyTransitionRipple
  fullName: Player.DestroyTransitionRipple
- uid: Global.Player.TransitionRippleUpdate*
  commentId: Overload:Global.Player.TransitionRippleUpdate
  isExternal: true
  href: Global.Player.html#Player_TransitionRippleUpdate
  name: TransitionRippleUpdate
  nameWithType: Player.TransitionRippleUpdate
  fullName: Player.TransitionRippleUpdate
- uid: Global.Player.WarpSpawningUpdate*
  commentId: Overload:Global.Player.WarpSpawningUpdate
  isExternal: true
  href: Global.Player.html#Player_WarpSpawningUpdate
  name: WarpSpawningUpdate
  nameWithType: Player.WarpSpawningUpdate
  fullName: Player.WarpSpawningUpdate
- uid: Global.Player.ToggleCamo*
  commentId: Overload:Global.Player.ToggleCamo
  isExternal: true
  href: Global.Player.html#Player_ToggleCamo
  name: ToggleCamo
  nameWithType: Player.ToggleCamo
  fullName: Player.ToggleCamo
- uid: Global.Player.ReadyForStarveJolly*
  commentId: Overload:Global.Player.ReadyForStarveJolly
  isExternal: true
  href: Global.Player.html#Player_ReadyForStarveJolly
  name: ReadyForStarveJolly
  nameWithType: Player.ReadyForStarveJolly
  fullName: Player.ReadyForStarveJolly
- uid: Global.Player.ReadyForWinJolly*
  commentId: Overload:Global.Player.ReadyForWinJolly
  isExternal: true
  href: Global.Player.html#Player_ReadyForWinJolly
  name: ReadyForWinJolly
  nameWithType: Player.ReadyForWinJolly
  fullName: Player.ReadyForWinJolly
- uid: Global.Player.IsJollyPlayer*
  commentId: Overload:Global.Player.IsJollyPlayer
  isExternal: true
  href: Global.Player.html#Player_IsJollyPlayer
  name: IsJollyPlayer
  nameWithType: Player.IsJollyPlayer
  fullName: Player.IsJollyPlayer
- uid: Global.Player.JollyOption*
  commentId: Overload:Global.Player.JollyOption
  isExternal: true
  href: Global.Player.html#Player_JollyOption
  name: JollyOption
  nameWithType: Player.JollyOption
  fullName: Player.JollyOption
- uid: JollyCoop.JollyMenu.JollyPlayerOptions
  commentId: T:JollyCoop.JollyMenu.JollyPlayerOptions
  parent: JollyCoop.JollyMenu
  isExternal: true
  href: JollyCoop.JollyMenu.JollyPlayerOptions.html
  name: JollyPlayerOptions
  nameWithType: JollyPlayerOptions
  fullName: JollyCoop.JollyMenu.JollyPlayerOptions
- uid: JollyCoop.JollyMenu
  commentId: N:JollyCoop.JollyMenu
  isExternal: true
  href: JollyCoop.html
  name: JollyCoop.JollyMenu
  nameWithType: JollyCoop.JollyMenu
  fullName: JollyCoop.JollyMenu
  spec.csharp:
  - uid: JollyCoop
    name: JollyCoop
    isExternal: true
    href: JollyCoop.html
  - name: .
  - uid: JollyCoop.JollyMenu
    name: JollyMenu
    isExternal: true
    href: JollyCoop.JollyMenu.html
  spec.vb:
  - uid: JollyCoop
    name: JollyCoop
    isExternal: true
    href: JollyCoop.html
  - name: .
  - uid: JollyCoop.JollyMenu
    name: JollyMenu
    isExternal: true
    href: JollyCoop.JollyMenu.html
- uid: Global.Player.GetPlayerStates*
  commentId: Overload:Global.Player.GetPlayerStates
  isExternal: true
  href: Global.Player.html#Player_GetPlayerStates
  name: GetPlayerStates
  nameWithType: Player.GetPlayerStates
  fullName: Player.GetPlayerStates
- uid: System.Collections.Generic.List{PlayerState}
  commentId: T:System.Collections.Generic.List{PlayerState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlayerState>
  nameWithType: List<PlayerState>
  fullName: System.Collections.Generic.List<PlayerState>
  nameWithType.vb: List(Of PlayerState)
  fullName.vb: System.Collections.Generic.List(Of PlayerState)
  name.vb: List(Of PlayerState)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlayerState
    name: PlayerState
    isExternal: true
    href: PlayerState.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlayerState
    name: PlayerState
    isExternal: true
    href: PlayerState.html
  - name: )
- uid: Global.Player.InitialShortcutWaitTime*
  commentId: Overload:Global.Player.InitialShortcutWaitTime
  isExternal: true
  href: Global.Player.html#Player_InitialShortcutWaitTime
  name: InitialShortcutWaitTime
  nameWithType: Player.InitialShortcutWaitTime
  fullName: Player.InitialShortcutWaitTime
- uid: Global.Player.CameraInputDelay*
  commentId: Overload:Global.Player.CameraInputDelay
  isExternal: true
  href: Global.Player.html#Player_CameraInputDelay
  name: CameraInputDelay
  nameWithType: Player.CameraInputDelay
  fullName: Player.CameraInputDelay
- uid: Global.Player.DreamState*
  commentId: Overload:Global.Player.DreamState
  isExternal: true
  href: Global.Player.html#Player_DreamState
  name: DreamState
  nameWithType: Player.DreamState
  fullName: Player.DreamState
- uid: Global.Player.isNPC*
  commentId: Overload:Global.Player.isNPC
  isExternal: true
  href: Global.Player.html#Player_isNPC
  name: isNPC
  nameWithType: Player.isNPC
  fullName: Player.isNPC
- uid: Global.Player.AI*
  commentId: Overload:Global.Player.AI
  isExternal: true
  href: Global.Player.html#Player_AI
  name: AI
  nameWithType: Player.AI
  fullName: Player.AI
- uid: MoreSlugcats.SlugNPCAI
  commentId: T:MoreSlugcats.SlugNPCAI
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.SlugNPCAI.html
  name: SlugNPCAI
  nameWithType: SlugNPCAI
  fullName: MoreSlugcats.SlugNPCAI
- uid: Global.Player.CanPutSlugToBack*
  commentId: Overload:Global.Player.CanPutSlugToBack
  isExternal: true
  href: Global.Player.html#Player_CanPutSlugToBack
  name: CanPutSlugToBack
  nameWithType: Player.CanPutSlugToBack
  fullName: Player.CanPutSlugToBack
- uid: Global.Player.CanRetrieveSlugFromBack*
  commentId: Overload:Global.Player.CanRetrieveSlugFromBack
  isExternal: true
  href: Global.Player.html#Player_CanRetrieveSlugFromBack
  name: CanRetrieveSlugFromBack
  nameWithType: Player.CanRetrieveSlugFromBack
  fullName: Player.CanRetrieveSlugFromBack
- uid: Global.Player.input*
  commentId: Overload:Global.Player.input
  isExternal: true
  href: Global.Player.html#Player_input
  name: input
  nameWithType: Player.input
  fullName: Player.input
- uid: Global.Player.InputPackage[]
  isExternal: true
  href: Player.InputPackage.html
  name: InputPackage[]
  nameWithType: Player.InputPackage[]
  fullName: Player.InputPackage[]
  nameWithType.vb: Player.InputPackage()
  fullName.vb: Player.InputPackage()
  name.vb: InputPackage()
  spec.csharp:
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
  - name: (
  - name: )
- uid: Global.Player.flipDirection*
  commentId: Overload:Global.Player.flipDirection
  isExternal: true
  href: Global.Player.html#Player_flipDirection
  name: flipDirection
  nameWithType: Player.flipDirection
  fullName: Player.flipDirection
- uid: Global.Player.lastFlipDirection*
  commentId: Overload:Global.Player.lastFlipDirection
  isExternal: true
  href: Global.Player.html#Player_lastFlipDirection
  name: lastFlipDirection
  nameWithType: Player.lastFlipDirection
  fullName: Player.lastFlipDirection
- uid: Global.Player.Adrenaline*
  commentId: Overload:Global.Player.Adrenaline
  isExternal: true
  href: Global.Player.html#Player_Adrenaline
  name: Adrenaline
  nameWithType: Player.Adrenaline
  fullName: Player.Adrenaline
- uid: Global.Player.Wiggle*
  commentId: Overload:Global.Player.Wiggle
  isExternal: true
  href: Global.Player.html#Player_Wiggle
  name: Wiggle
  nameWithType: Player.Wiggle
  fullName: Player.Wiggle
- uid: Global.Player.GraspWiggle*
  commentId: Overload:Global.Player.GraspWiggle
  isExternal: true
  href: Global.Player.html#Player_GraspWiggle
  name: GraspWiggle
  nameWithType: Player.GraspWiggle
  fullName: Player.GraspWiggle
- uid: Global.Player.slugcatStats*
  commentId: Overload:Global.Player.slugcatStats
  isExternal: true
  href: Global.Player.html#Player_slugcatStats
  name: slugcatStats
  nameWithType: Player.slugcatStats
  fullName: Player.slugcatStats
- uid: Global.SlugcatStats
  commentId: T:Global.SlugcatStats
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats
  nameWithType: SlugcatStats
  fullName: SlugcatStats
- uid: Global.Player.Malnourished*
  commentId: Overload:Global.Player.Malnourished
  isExternal: true
  href: Global.Player.html#Player_Malnourished
  name: Malnourished
  nameWithType: Player.Malnourished
  fullName: Player.Malnourished
- uid: Global.Player.Sleeping*
  commentId: Overload:Global.Player.Sleeping
  isExternal: true
  href: Global.Player.html#Player_Sleeping
  name: Sleeping
  nameWithType: Player.Sleeping
  fullName: Player.Sleeping
- uid: Global.Player.FoodInStomach*
  commentId: Overload:Global.Player.FoodInStomach
  isExternal: true
  href: Global.Player.html#Player_FoodInStomach
  name: FoodInStomach
  nameWithType: Player.FoodInStomach
  fullName: Player.FoodInStomach
- uid: Global.Player.MaxFoodInStomach*
  commentId: Overload:Global.Player.MaxFoodInStomach
  isExternal: true
  href: Global.Player.html#Player_MaxFoodInStomach
  name: MaxFoodInStomach
  nameWithType: Player.MaxFoodInStomach
  fullName: Player.MaxFoodInStomach
- uid: Global.Player.Karma*
  commentId: Overload:Global.Player.Karma
  isExternal: true
  href: Global.Player.html#Player_Karma
  name: Karma
  nameWithType: Player.Karma
  fullName: Player.Karma
- uid: Global.Player.KarmaCap*
  commentId: Overload:Global.Player.KarmaCap
  isExternal: true
  href: Global.Player.html#Player_KarmaCap
  name: KarmaCap
  nameWithType: Player.KarmaCap
  fullName: Player.KarmaCap
- uid: Global.Player.KarmaIsReinforced*
  commentId: Overload:Global.Player.KarmaIsReinforced
  isExternal: true
  href: Global.Player.html#Player_KarmaIsReinforced
  name: KarmaIsReinforced
  nameWithType: Player.KarmaIsReinforced
  fullName: Player.KarmaIsReinforced
- uid: Global.Player.PlaceKarmaFlower*
  commentId: Overload:Global.Player.PlaceKarmaFlower
  isExternal: true
  href: Global.Player.html#Player_PlaceKarmaFlower
  name: PlaceKarmaFlower
  nameWithType: Player.PlaceKarmaFlower
  fullName: Player.PlaceKarmaFlower
- uid: Global.Player.SessionRecord*
  commentId: Overload:Global.Player.SessionRecord
  isExternal: true
  href: Global.Player.html#Player_SessionRecord
  name: SessionRecord
  nameWithType: Player.SessionRecord
  fullName: Player.SessionRecord
- uid: Global.PlayerSessionRecord
  commentId: T:Global.PlayerSessionRecord
  isExternal: true
  href: PlayerSessionRecord.html
  name: PlayerSessionRecord
  nameWithType: PlayerSessionRecord
  fullName: PlayerSessionRecord
- uid: Global.Player.Sneak*
  commentId: Overload:Global.Player.Sneak
  isExternal: true
  href: Global.Player.html#Player_Sneak
  name: Sneak
  nameWithType: Player.Sneak
  fullName: Player.Sneak
- uid: Global.Player.playerState*
  commentId: Overload:Global.Player.playerState
  isExternal: true
  href: Global.Player.html#Player_playerState
  name: playerState
  nameWithType: Player.playerState
  fullName: Player.playerState
- uid: Global.PlayerState
  commentId: T:Global.PlayerState
  isExternal: true
  href: PlayerState.html
  name: PlayerState
  nameWithType: PlayerState
  fullName: PlayerState
- uid: Global.Player.ThrowDirection*
  commentId: Overload:Global.Player.ThrowDirection
  isExternal: true
  href: Global.Player.html#Player_ThrowDirection
  name: ThrowDirection
  nameWithType: Player.ThrowDirection
  fullName: Player.ThrowDirection
- uid: Global.Player.animationFrame*
  commentId: Overload:Global.Player.animationFrame
  isExternal: true
  href: Global.Player.html#Player_animationFrame
  name: animationFrame
  nameWithType: Player.animationFrame
  fullName: Player.animationFrame
- uid: Global.PhysicalObject.windAffectiveness
  commentId: P:Global.PhysicalObject.windAffectiveness
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_windAffectiveness
  name: windAffectiveness
  nameWithType: PhysicalObject.windAffectiveness
  fullName: PhysicalObject.windAffectiveness
- uid: Global.Player.windAffectiveness*
  commentId: Overload:Global.Player.windAffectiveness
  isExternal: true
  href: Global.Player.html#Player_windAffectiveness
  name: windAffectiveness
  nameWithType: Player.windAffectiveness
  fullName: Player.windAffectiveness
- uid: Global.PhysicalObject.VisibilityBonus
  commentId: P:Global.PhysicalObject.VisibilityBonus
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_VisibilityBonus
  name: VisibilityBonus
  nameWithType: PhysicalObject.VisibilityBonus
  fullName: PhysicalObject.VisibilityBonus
- uid: Global.Player.VisibilityBonus*
  commentId: Overload:Global.Player.VisibilityBonus
  isExternal: true
  href: Global.Player.html#Player_VisibilityBonus
  name: VisibilityBonus
  nameWithType: Player.VisibilityBonus
  fullName: Player.VisibilityBonus
- uid: Global.Player.InjectedPoisonColor*
  commentId: Overload:Global.Player.InjectedPoisonColor
  isExternal: true
  href: Global.Player.html#Player_InjectedPoisonColor
  name: InjectedPoisonColor
  nameWithType: Player.InjectedPoisonColor
  fullName: Player.InjectedPoisonColor
- uid: Watcher.IHaveInjectedPoisonColor.InjectedPoisonColor
  commentId: P:Watcher.IHaveInjectedPoisonColor.InjectedPoisonColor
  parent: Watcher.IHaveInjectedPoisonColor
  isExternal: true
  href: Watcher.IHaveInjectedPoisonColor.html#Watcher_IHaveInjectedPoisonColor_InjectedPoisonColor
  name: InjectedPoisonColor
  nameWithType: IHaveInjectedPoisonColor.InjectedPoisonColor
  fullName: Watcher.IHaveInjectedPoisonColor.InjectedPoisonColor
- uid: Global.Player.CurrentFood*
  commentId: Overload:Global.Player.CurrentFood
  isExternal: true
  href: Global.Player.html#Player_CurrentFood
  name: CurrentFood
  nameWithType: Player.CurrentFood
  fullName: Player.CurrentFood
- uid: HUD.IOwnAHUD.CurrentFood
  commentId: P:HUD.IOwnAHUD.CurrentFood
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_CurrentFood
  name: CurrentFood
  nameWithType: IOwnAHUD.CurrentFood
  fullName: HUD.IOwnAHUD.CurrentFood
- uid: Global.Player.MapInput*
  commentId: Overload:Global.Player.MapInput
  isExternal: true
  href: Global.Player.html#Player_MapInput
  name: MapInput
  nameWithType: Player.MapInput
  fullName: Player.MapInput
- uid: HUD.IOwnAHUD.MapInput
  commentId: P:HUD.IOwnAHUD.MapInput
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_MapInput
  name: MapInput
  nameWithType: IOwnAHUD.MapInput
  fullName: HUD.IOwnAHUD.MapInput
- uid: Global.Player.RevealMap*
  commentId: Overload:Global.Player.RevealMap
  isExternal: true
  href: Global.Player.html#Player_RevealMap
  name: RevealMap
  nameWithType: Player.RevealMap
  fullName: Player.RevealMap
- uid: HUD.IOwnAHUD.RevealMap
  commentId: P:HUD.IOwnAHUD.RevealMap
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_RevealMap
  name: RevealMap
  nameWithType: IOwnAHUD.RevealMap
  fullName: HUD.IOwnAHUD.RevealMap
- uid: Global.Player.MapOwnerInRoomPosition*
  commentId: Overload:Global.Player.MapOwnerInRoomPosition
  isExternal: true
  href: Global.Player.html#Player_MapOwnerInRoomPosition
  name: MapOwnerInRoomPosition
  nameWithType: Player.MapOwnerInRoomPosition
  fullName: Player.MapOwnerInRoomPosition
- uid: HUD.IOwnAHUD.MapOwnerInRoomPosition
  commentId: P:HUD.IOwnAHUD.MapOwnerInRoomPosition
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_MapOwnerInRoomPosition
  name: MapOwnerInRoomPosition
  nameWithType: IOwnAHUD.MapOwnerInRoomPosition
  fullName: HUD.IOwnAHUD.MapOwnerInRoomPosition
- uid: Global.Player.MapOwnerRoom*
  commentId: Overload:Global.Player.MapOwnerRoom
  isExternal: true
  href: Global.Player.html#Player_MapOwnerRoom
  name: MapOwnerRoom
  nameWithType: Player.MapOwnerRoom
  fullName: Player.MapOwnerRoom
- uid: HUD.IOwnAHUD.MapOwnerRoom
  commentId: P:HUD.IOwnAHUD.MapOwnerRoom
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_MapOwnerRoom
  name: MapOwnerRoom
  nameWithType: IOwnAHUD.MapOwnerRoom
  fullName: HUD.IOwnAHUD.MapOwnerRoom
- uid: Global.Player.MapDiscoveryActive*
  commentId: Overload:Global.Player.MapDiscoveryActive
  isExternal: true
  href: Global.Player.html#Player_MapDiscoveryActive
  name: MapDiscoveryActive
  nameWithType: Player.MapDiscoveryActive
  fullName: Player.MapDiscoveryActive
- uid: HUD.IOwnAHUD.MapDiscoveryActive
  commentId: P:HUD.IOwnAHUD.MapDiscoveryActive
  parent: HUD.IOwnAHUD
  isExternal: true
  href: HUD.IOwnAHUD.html#HUD_IOwnAHUD_MapDiscoveryActive
  name: MapDiscoveryActive
  nameWithType: IOwnAHUD.MapDiscoveryActive
  fullName: HUD.IOwnAHUD.MapDiscoveryActive
- uid: Global.PhysicalObject.EffectiveRoomGravity
  commentId: P:Global.PhysicalObject.EffectiveRoomGravity
  parent: Global.PhysicalObject
  isExternal: true
  href: Global.PhysicalObject.html#PhysicalObject_EffectiveRoomGravity
  name: EffectiveRoomGravity
  nameWithType: PhysicalObject.EffectiveRoomGravity
  fullName: PhysicalObject.EffectiveRoomGravity
- uid: Global.Player.EffectiveRoomGravity*
  commentId: Overload:Global.Player.EffectiveRoomGravity
  isExternal: true
  href: Global.Player.html#Player_EffectiveRoomGravity
  name: EffectiveRoomGravity
  nameWithType: Player.EffectiveRoomGravity
  fullName: Player.EffectiveRoomGravity
- uid: Global.Player.Wounded*
  commentId: Overload:Global.Player.Wounded
  isExternal: true
  href: Global.Player.html#Player_Wounded
  name: Wounded
  nameWithType: Player.Wounded
  fullName: Player.Wounded
- uid: Global.Player.isRivulet*
  commentId: Overload:Global.Player.isRivulet
  isExternal: true
  href: Global.Player.html#Player_isRivulet
  name: isRivulet
  nameWithType: Player.isRivulet
  fullName: Player.isRivulet
- uid: Global.Player.isGourmand*
  commentId: Overload:Global.Player.isGourmand
  isExternal: true
  href: Global.Player.html#Player_isGourmand
  name: isGourmand
  nameWithType: Player.isGourmand
  fullName: Player.isGourmand
- uid: Global.Player.isSlugpup*
  commentId: Overload:Global.Player.isSlugpup
  isExternal: true
  href: Global.Player.html#Player_isSlugpup
  name: isSlugpup
  nameWithType: Player.isSlugpup
  fullName: Player.isSlugpup
- uid: Global.Player.PainJumps*
  commentId: Overload:Global.Player.PainJumps
  isExternal: true
  href: Global.Player.html#Player_PainJumps
  name: PainJumps
  nameWithType: Player.PainJumps
  fullName: Player.PainJumps
- uid: Global.Player.CanPutSpearToBack*
  commentId: Overload:Global.Player.CanPutSpearToBack
  isExternal: true
  href: Global.Player.html#Player_CanPutSpearToBack
  name: CanPutSpearToBack
  nameWithType: Player.CanPutSpearToBack
  fullName: Player.CanPutSpearToBack
- uid: Global.Player.CanRetrieveSpearFromBack*
  commentId: Overload:Global.Player.CanRetrieveSpearFromBack
  isExternal: true
  href: Global.Player.html#Player_CanRetrieveSpearFromBack
  name: CanRetrieveSpearFromBack
  nameWithType: Player.CanRetrieveSpearFromBack
  fullName: Player.CanRetrieveSpearFromBack
- uid: Global.Player.activateDynamicWarpDuration*
  commentId: Overload:Global.Player.activateDynamicWarpDuration
  isExternal: true
  href: Global.Player.html#Player_activateDynamicWarpDuration
  name: activateDynamicWarpDuration
  nameWithType: Player.activateDynamicWarpDuration
  fullName: Player.activateDynamicWarpDuration
- uid: Global.Player.rippleLevel*
  commentId: Overload:Global.Player.rippleLevel
  isExternal: true
  href: Global.Player.html#Player_rippleLevel
  name: rippleLevel
  nameWithType: Player.rippleLevel
  fullName: Player.rippleLevel
- uid: Global.Player.maxRippleLevel*
  commentId: Overload:Global.Player.maxRippleLevel
  isExternal: true
  href: Global.Player.html#Player_maxRippleLevel
  name: maxRippleLevel
  nameWithType: Player.maxRippleLevel
  fullName: Player.maxRippleLevel
- uid: Global.Player.CanLevitate*
  commentId: Overload:Global.Player.CanLevitate
  isExternal: true
  href: Global.Player.html#Player_CanLevitate
  name: CanLevitate
  nameWithType: Player.CanLevitate
  fullName: Player.CanLevitate
- uid: Global.Player.CanSpawnDynamicWarpPoints*
  commentId: Overload:Global.Player.CanSpawnDynamicWarpPoints
  isExternal: true
  href: Global.Player.html#Player_CanSpawnDynamicWarpPoints
  name: CanSpawnDynamicWarpPoints
  nameWithType: Player.CanSpawnDynamicWarpPoints
  fullName: Player.CanSpawnDynamicWarpPoints
- uid: Global.Player.camoLimit*
  commentId: Overload:Global.Player.camoLimit
  isExternal: true
  href: Global.Player.html#Player_camoLimit
  name: camoLimit
  nameWithType: Player.camoLimit
  fullName: Player.camoLimit
- uid: Global.Player.usableCamoLimit*
  commentId: Overload:Global.Player.usableCamoLimit
  isExternal: true
  href: Global.Player.html#Player_usableCamoLimit
  name: usableCamoLimit
  nameWithType: Player.usableCamoLimit
  fullName: Player.usableCamoLimit
- uid: Global.Player.watcherDynamicWarpInput*
  commentId: Overload:Global.Player.watcherDynamicWarpInput
  isExternal: true
  href: Global.Player.html#Player_watcherDynamicWarpInput
  name: watcherDynamicWarpInput
  nameWithType: Player.watcherDynamicWarpInput
  fullName: Player.watcherDynamicWarpInput
- uid: Global.Player.RippleAbilityActivationButtonCondition*
  commentId: Overload:Global.Player.RippleAbilityActivationButtonCondition
  isExternal: true
  href: Global.Player.html#Player_RippleAbilityActivationButtonCondition
  name: RippleAbilityActivationButtonCondition
  nameWithType: Player.RippleAbilityActivationButtonCondition
  fullName: Player.RippleAbilityActivationButtonCondition
