### YamlMime:ManagedReference
items:
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  id: MovementConnection
  parent: Global
  children:
  - Global.MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)
  - Global.MovementConnection.DestTile
  - Global.MovementConnection.Equals(MovementConnection)
  - Global.MovementConnection.Equals(System.Object)
  - Global.MovementConnection.GetHashCode
  - Global.MovementConnection.IsDrop
  - Global.MovementConnection.StartTile
  - Global.MovementConnection.ToString
  - Global.MovementConnection.destinationCoord
  - Global.MovementConnection.distance
  - Global.MovementConnection.op_Equality(MovementConnection,MovementConnection)
  - Global.MovementConnection.op_Inequality(MovementConnection,MovementConnection)
  - Global.MovementConnection.startCoord
  - Global.MovementConnection.type
  langs:
  - csharp
  - vb
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MovementConnection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public struct MovementConnection : IEquatable<MovementConnection>'
    content.vb: Public Structure MovementConnection Implements IEquatable(Of MovementConnection)
  implements:
  - System.IEquatable{MovementConnection}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.MovementConnection.type
  commentId: F:Global.MovementConnection.type
  id: type
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: type
  nameWithType: MovementConnection.type
  fullName: MovementConnection.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MovementConnection.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection.MovementType type
    return:
      type: Global.MovementConnection.MovementType
    content.vb: Public type As MovementConnection.MovementType
- uid: Global.MovementConnection.startCoord
  commentId: F:Global.MovementConnection.startCoord
  id: startCoord
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: startCoord
  nameWithType: MovementConnection.startCoord
  fullName: MovementConnection.startCoord
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MovementConnection.startCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate startCoord
    return:
      type: Global.WorldCoordinate
    content.vb: Public startCoord As WorldCoordinate
- uid: Global.MovementConnection.destinationCoord
  commentId: F:Global.MovementConnection.destinationCoord
  id: destinationCoord
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: destinationCoord
  nameWithType: MovementConnection.destinationCoord
  fullName: MovementConnection.destinationCoord
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MovementConnection.destinationCoord</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate destinationCoord
    return:
      type: Global.WorldCoordinate
    content.vb: Public destinationCoord As WorldCoordinate
- uid: Global.MovementConnection.distance
  commentId: F:Global.MovementConnection.distance
  id: distance
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: distance
  nameWithType: MovementConnection.distance
  fullName: MovementConnection.distance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MovementConnection.distance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int distance
    return:
      type: System.Int32
    content.vb: Public distance As Integer
- uid: Global.MovementConnection.Equals(MovementConnection)
  commentId: M:Global.MovementConnection.Equals(MovementConnection)
  id: Equals(MovementConnection)
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: Equals(MovementConnection)
  nameWithType: MovementConnection.Equals(MovementConnection)
  fullName: MovementConnection.Equals(MovementConnection)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.Equals(MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(MovementConnection other)
    parameters:
    - id: other
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:MovementConnection.Equals(MovementConnection)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.Equals(MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(other As MovementConnection) As Boolean
  overload: Global.MovementConnection.Equals*
  implements:
  - System.IEquatable{MovementConnection}.Equals(MovementConnection)
- uid: Global.MovementConnection.Equals(System.Object)
  commentId: M:Global.MovementConnection.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: MovementConnection.Equals(object)
  fullName: MovementConnection.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:MovementConnection.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Global.MovementConnection.Equals*
  nameWithType.vb: MovementConnection.Equals(Object)
  fullName.vb: MovementConnection.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.MovementConnection.GetHashCode
  commentId: M:Global.MovementConnection.GetHashCode
  id: GetHashCode
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: MovementConnection.GetHashCode()
  fullName: MovementConnection.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Global.MovementConnection.GetHashCode*
- uid: Global.MovementConnection.op_Equality(MovementConnection,MovementConnection)
  commentId: M:Global.MovementConnection.op_Equality(MovementConnection,MovementConnection)
  id: op_Equality(MovementConnection,MovementConnection)
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: operator ==(MovementConnection, MovementConnection)
  nameWithType: MovementConnection.operator ==(MovementConnection, MovementConnection)
  fullName: MovementConnection.operator ==(MovementConnection, MovementConnection)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.op_Equality(MovementConnection,MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(MovementConnection left, MovementConnection right)
    parameters:
    - id: left
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:MovementConnection.op_Equality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    - id: right
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:MovementConnection.op_Equality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.op_Equality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(left As MovementConnection, right As MovementConnection) As Boolean
  overload: Global.MovementConnection.op_Equality*
  nameWithType.vb: MovementConnection.=(MovementConnection, MovementConnection)
  fullName.vb: MovementConnection.=(MovementConnection, MovementConnection)
  name.vb: =(MovementConnection, MovementConnection)
- uid: Global.MovementConnection.op_Inequality(MovementConnection,MovementConnection)
  commentId: M:Global.MovementConnection.op_Inequality(MovementConnection,MovementConnection)
  id: op_Inequality(MovementConnection,MovementConnection)
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: operator !=(MovementConnection, MovementConnection)
  nameWithType: MovementConnection.operator !=(MovementConnection, MovementConnection)
  fullName: MovementConnection.operator !=(MovementConnection, MovementConnection)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.op_Inequality(MovementConnection,MovementConnection)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(MovementConnection left, MovementConnection right)
    parameters:
    - id: left
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:MovementConnection.op_Inequality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    - id: right
      type: Global.MovementConnection
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:MovementConnection.op_Inequality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.op_Inequality(MovementConnection,MovementConnection)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(left As MovementConnection, right As MovementConnection) As Boolean
  overload: Global.MovementConnection.op_Inequality*
  nameWithType.vb: MovementConnection.<>(MovementConnection, MovementConnection)
  fullName.vb: MovementConnection.<>(MovementConnection, MovementConnection)
  name.vb: <>(MovementConnection, MovementConnection)
- uid: Global.MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)
  commentId: M:Global.MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)
  id: '#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)'
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: MovementConnection(MovementType, WorldCoordinate, WorldCoordinate, int)
  nameWithType: MovementConnection.MovementConnection(MovementConnection.MovementType, WorldCoordinate, WorldCoordinate, int)
  fullName: MovementConnection.MovementConnection(MovementConnection.MovementType, WorldCoordinate, WorldCoordinate, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MovementConnection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MovementConnection(MovementConnection.MovementType type, WorldCoordinate startCoord, WorldCoordinate destinationCoord, int distance)
    parameters:
    - id: type
      type: Global.MovementConnection.MovementType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: startCoord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>startCoord</parameter>
            <parameter>M:MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: destinationCoord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>destinationCoord</parameter>
            <parameter>M:MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    - id: distance
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>distance</parameter>
            <parameter>M:MovementConnection.#ctor(MovementConnection.MovementType,WorldCoordinate,WorldCoordinate,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As MovementConnection.MovementType, startCoord As WorldCoordinate, destinationCoord As WorldCoordinate, distance As Integer)
  overload: Global.MovementConnection.#ctor*
  nameWithType.vb: MovementConnection.New(MovementConnection.MovementType, WorldCoordinate, WorldCoordinate, Integer)
  fullName.vb: MovementConnection.New(MovementConnection.MovementType, WorldCoordinate, WorldCoordinate, Integer)
  name.vb: New(MovementType, WorldCoordinate, WorldCoordinate, Integer)
- uid: Global.MovementConnection.ToString
  commentId: M:Global.MovementConnection.ToString
  id: ToString
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: MovementConnection.ToString()
  fullName: MovementConnection.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MovementConnection.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:MovementConnection.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Global.MovementConnection.ToString*
- uid: Global.MovementConnection.IsDrop
  commentId: P:Global.MovementConnection.IsDrop
  id: IsDrop
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: IsDrop
  nameWithType: MovementConnection.IsDrop
  fullName: MovementConnection.IsDrop
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MovementConnection.IsDrop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsDrop { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsDrop As Boolean
  overload: Global.MovementConnection.IsDrop*
- uid: Global.MovementConnection.StartTile
  commentId: P:Global.MovementConnection.StartTile
  id: StartTile
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: StartTile
  nameWithType: MovementConnection.StartTile
  fullName: MovementConnection.StartTile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MovementConnection.StartTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 StartTile { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property StartTile As IntVector2
  overload: Global.MovementConnection.StartTile*
- uid: Global.MovementConnection.DestTile
  commentId: P:Global.MovementConnection.DestTile
  id: DestTile
  parent: Global.MovementConnection
  langs:
  - csharp
  - vb
  name: DestTile
  nameWithType: MovementConnection.DestTile
  fullName: MovementConnection.DestTile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MovementConnection.DestTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 DestTile { get; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public ReadOnly Property DestTile As IntVector2
  overload: Global.MovementConnection.DestTile*
references:
- uid: Global
- uid: System.IEquatable{MovementConnection}
  commentId: T:System.IEquatable{MovementConnection}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<MovementConnection>
  nameWithType: IEquatable<MovementConnection>
  fullName: System.IEquatable<MovementConnection>
  nameWithType.vb: IEquatable(Of MovementConnection)
  fullName.vb: System.IEquatable(Of MovementConnection)
  name.vb: IEquatable(Of MovementConnection)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.MovementConnection.MovementType
  commentId: T:Global.MovementConnection.MovementType
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection.MovementType
  nameWithType: MovementConnection.MovementType
  fullName: MovementConnection.MovementType
  spec.csharp:
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: .
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
  spec.vb:
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: .
  - uid: Global.MovementConnection.MovementType
    name: MovementType
    isExternal: true
    href: MovementConnection.MovementType.html
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.MovementConnection.Equals*
  commentId: Overload:Global.MovementConnection.Equals
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_Equals_MovementConnection_
  name: Equals
  nameWithType: MovementConnection.Equals
  fullName: MovementConnection.Equals
- uid: System.IEquatable{MovementConnection}.Equals(MovementConnection)
  commentId: M:System.IEquatable{MovementConnection}.Equals(MovementConnection)
  parent: System.IEquatable{MovementConnection}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(MovementConnection)
  nameWithType: IEquatable<MovementConnection>.Equals(MovementConnection)
  fullName: System.IEquatable<MovementConnection>.Equals(MovementConnection)
  nameWithType.vb: IEquatable(Of MovementConnection).Equals(MovementConnection)
  fullName.vb: System.IEquatable(Of MovementConnection).Equals(MovementConnection)
  spec.csharp:
  - uid: System.IEquatable{MovementConnection}.Equals(MovementConnection)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{MovementConnection}.Equals(MovementConnection)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: )
- uid: Global.MovementConnection
  commentId: T:Global.MovementConnection
  isExternal: true
  href: MovementConnection.html
  name: MovementConnection
  nameWithType: MovementConnection
  fullName: MovementConnection
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Global.MovementConnection.GetHashCode*
  commentId: Overload:Global.MovementConnection.GetHashCode
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_GetHashCode
  name: GetHashCode
  nameWithType: MovementConnection.GetHashCode
  fullName: MovementConnection.GetHashCode
- uid: Global.MovementConnection.op_Equality*
  commentId: Overload:Global.MovementConnection.op_Equality
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_op_Equality_MovementConnection_MovementConnection_
  name: operator ==
  nameWithType: MovementConnection.operator ==
  fullName: MovementConnection.operator ==
  nameWithType.vb: MovementConnection.=
  fullName.vb: MovementConnection.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.MovementConnection.op_Equality*
    name: ==
    isExternal: true
    href: Global.MovementConnection.html#MovementConnection_op_Equality_MovementConnection_MovementConnection_
- uid: Global.MovementConnection.op_Inequality*
  commentId: Overload:Global.MovementConnection.op_Inequality
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_op_Inequality_MovementConnection_MovementConnection_
  name: operator !=
  nameWithType: MovementConnection.operator !=
  fullName: MovementConnection.operator !=
  nameWithType.vb: MovementConnection.<>
  fullName.vb: MovementConnection.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.MovementConnection.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.MovementConnection.html#MovementConnection_op_Inequality_MovementConnection_MovementConnection_
- uid: Global.MovementConnection.#ctor*
  commentId: Overload:Global.MovementConnection.#ctor
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection__ctor_MovementConnection_MovementType_WorldCoordinate_WorldCoordinate_System_Int32_
  name: MovementConnection
  nameWithType: MovementConnection.MovementConnection
  fullName: MovementConnection.MovementConnection
  nameWithType.vb: MovementConnection.New
  fullName.vb: MovementConnection.New
  name.vb: New
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Global.MovementConnection.ToString*
  commentId: Overload:Global.MovementConnection.ToString
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_ToString
  name: ToString
  nameWithType: MovementConnection.ToString
  fullName: MovementConnection.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.MovementConnection.IsDrop*
  commentId: Overload:Global.MovementConnection.IsDrop
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_IsDrop
  name: IsDrop
  nameWithType: MovementConnection.IsDrop
  fullName: MovementConnection.IsDrop
- uid: Global.MovementConnection.StartTile*
  commentId: Overload:Global.MovementConnection.StartTile
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_StartTile
  name: StartTile
  nameWithType: MovementConnection.StartTile
  fullName: MovementConnection.StartTile
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.MovementConnection.DestTile*
  commentId: Overload:Global.MovementConnection.DestTile
  isExternal: true
  href: Global.MovementConnection.html#MovementConnection_DestTile
  name: DestTile
  nameWithType: MovementConnection.DestTile
  fullName: MovementConnection.DestTile
