### YamlMime:ManagedReference
items:
- uid: Global.ConfigurableBase
  commentId: T:Global.ConfigurableBase
  id: ConfigurableBase
  parent: Global
  children:
  - Global.ConfigurableBase.BoundUIconfig
  - Global.ConfigurableBase.BoxedValue
  - Global.ConfigurableBase.ClampValue``1(``0)
  - Global.ConfigurableBase.IsCosmetic
  - Global.ConfigurableBase.OI
  - Global.ConfigurableBase.Tab
  - Global.ConfigurableBase.defaultValue
  - Global.ConfigurableBase.info
  - Global.ConfigurableBase.key
  - Global.ConfigurableBase.settingType
  langs:
  - csharp
  - vb
  name: ConfigurableBase
  nameWithType: ConfigurableBase
  fullName: ConfigurableBase
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ConfigurableBase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class ConfigurableBase
    content.vb: Public MustInherit Class ConfigurableBase
  inheritance:
  - System.Object
  derivedClasses:
  - Global.Configurable`1
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ConfigurableBase.OI
  commentId: F:Global.ConfigurableBase.OI
  id: OI
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: OI
  nameWithType: ConfigurableBase.OI
  fullName: ConfigurableBase.OI
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableBase.OI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly OptionInterface OI
    return:
      type: Global.OptionInterface
    content.vb: Public ReadOnly OI As OptionInterface
- uid: Global.ConfigurableBase.key
  commentId: F:Global.ConfigurableBase.key
  id: key
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: key
  nameWithType: ConfigurableBase.key
  fullName: ConfigurableBase.key
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableBase.key</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string key
    return:
      type: System.String
    content.vb: Public ReadOnly key As String
- uid: Global.ConfigurableBase.settingType
  commentId: F:Global.ConfigurableBase.settingType
  id: settingType
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: settingType
  nameWithType: ConfigurableBase.settingType
  fullName: ConfigurableBase.settingType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableBase.settingType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly Type settingType
    return:
      type: System.Type
    content.vb: Public ReadOnly settingType As Type
- uid: Global.ConfigurableBase.defaultValue
  commentId: F:Global.ConfigurableBase.defaultValue
  id: defaultValue
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: defaultValue
  nameWithType: ConfigurableBase.defaultValue
  fullName: ConfigurableBase.defaultValue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableBase.defaultValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly string defaultValue
    return:
      type: System.String
    content.vb: Public ReadOnly defaultValue As String
- uid: Global.ConfigurableBase.info
  commentId: F:Global.ConfigurableBase.info
  id: info
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: info
  nameWithType: ConfigurableBase.info
  fullName: ConfigurableBase.info
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ConfigurableBase.info</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly ConfigurableInfo info
    return:
      type: Global.ConfigurableInfo
    content.vb: Public ReadOnly info As ConfigurableInfo
- uid: Global.ConfigurableBase.ClampValue``1(``0)
  commentId: M:Global.ConfigurableBase.ClampValue``1(``0)
  id: ClampValue``1(``0)
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: ClampValue<T>(T)
  nameWithType: ConfigurableBase.ClampValue<T>(T)
  fullName: ConfigurableBase.ClampValue<T>(T)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ConfigurableBase.ClampValue``1(``0)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected T ClampValue<T>(T value)
    parameters:
    - id: value
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:ConfigurableBase.ClampValue``1(``0)</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:ConfigurableBase.ClampValue``1(``0)</parameter>
          </include>
        </markup>
    return:
      type: '{T}'
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ConfigurableBase.ClampValue``1(``0)</parameter>
          </include>
        </markup>
    content.vb: Protected Function ClampValue(Of T)(value As T) As T
  overload: Global.ConfigurableBase.ClampValue*
  nameWithType.vb: ConfigurableBase.ClampValue(Of T)(T)
  fullName.vb: ConfigurableBase.ClampValue(Of T)(T)
  name.vb: ClampValue(Of T)(T)
- uid: Global.ConfigurableBase.IsCosmetic
  commentId: P:Global.ConfigurableBase.IsCosmetic
  id: IsCosmetic
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: IsCosmetic
  nameWithType: ConfigurableBase.IsCosmetic
  fullName: ConfigurableBase.IsCosmetic
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigurableBase.IsCosmetic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCosmetic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCosmetic As Boolean
  overload: Global.ConfigurableBase.IsCosmetic*
- uid: Global.ConfigurableBase.BoundUIconfig
  commentId: P:Global.ConfigurableBase.BoundUIconfig
  id: BoundUIconfig
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: BoundUIconfig
  nameWithType: ConfigurableBase.BoundUIconfig
  fullName: ConfigurableBase.BoundUIconfig
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigurableBase.BoundUIconfig</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public UIconfig BoundUIconfig { get; }
    parameters: []
    return:
      type: Menu.Remix.MixedUI.UIconfig
    content.vb: Public ReadOnly Property BoundUIconfig As UIconfig
  overload: Global.ConfigurableBase.BoundUIconfig*
- uid: Global.ConfigurableBase.Tab
  commentId: P:Global.ConfigurableBase.Tab
  id: Tab
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: Tab
  nameWithType: ConfigurableBase.Tab
  fullName: ConfigurableBase.Tab
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigurableBase.Tab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string Tab { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Tab As String
  overload: Global.ConfigurableBase.Tab*
- uid: Global.ConfigurableBase.BoxedValue
  commentId: P:Global.ConfigurableBase.BoxedValue
  id: BoxedValue
  parent: Global.ConfigurableBase
  langs:
  - csharp
  - vb
  name: BoxedValue
  nameWithType: ConfigurableBase.BoxedValue
  fullName: ConfigurableBase.BoxedValue
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ConfigurableBase.BoxedValue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract object BoxedValue { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public MustOverride Property BoxedValue As Object
  overload: Global.ConfigurableBase.BoxedValue*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.OptionInterface
  commentId: T:Global.OptionInterface
  isExternal: true
  href: OptionInterface.html
  name: OptionInterface
  nameWithType: OptionInterface
  fullName: OptionInterface
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Global.ConfigurableInfo
  commentId: T:Global.ConfigurableInfo
  isExternal: true
  href: ConfigurableInfo.html
  name: ConfigurableInfo
  nameWithType: ConfigurableInfo
  fullName: ConfigurableInfo
- uid: Global.ConfigurableBase.ClampValue*
  commentId: Overload:Global.ConfigurableBase.ClampValue
  isExternal: true
  href: Global.ConfigurableBase.html#ConfigurableBase_ClampValue__1___0_
  name: ClampValue
  nameWithType: ConfigurableBase.ClampValue
  fullName: ConfigurableBase.ClampValue
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Global.ConfigurableBase.IsCosmetic*
  commentId: Overload:Global.ConfigurableBase.IsCosmetic
  isExternal: true
  href: Global.ConfigurableBase.html#ConfigurableBase_IsCosmetic
  name: IsCosmetic
  nameWithType: ConfigurableBase.IsCosmetic
  fullName: ConfigurableBase.IsCosmetic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ConfigurableBase.BoundUIconfig*
  commentId: Overload:Global.ConfigurableBase.BoundUIconfig
  isExternal: true
  href: Global.ConfigurableBase.html#ConfigurableBase_BoundUIconfig
  name: BoundUIconfig
  nameWithType: ConfigurableBase.BoundUIconfig
  fullName: ConfigurableBase.BoundUIconfig
- uid: Menu.Remix.MixedUI.UIconfig
  commentId: T:Menu.Remix.MixedUI.UIconfig
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.UIconfig.html
  name: UIconfig
  nameWithType: UIconfig
  fullName: Menu.Remix.MixedUI.UIconfig
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: Global.ConfigurableBase.Tab*
  commentId: Overload:Global.ConfigurableBase.Tab
  isExternal: true
  href: Global.ConfigurableBase.html#ConfigurableBase_Tab
  name: Tab
  nameWithType: ConfigurableBase.Tab
  fullName: ConfigurableBase.Tab
- uid: Global.ConfigurableBase.BoxedValue*
  commentId: Overload:Global.ConfigurableBase.BoxedValue
  isExternal: true
  href: Global.ConfigurableBase.html#ConfigurableBase_BoxedValue
  name: BoxedValue
  nameWithType: ConfigurableBase.BoxedValue
  fullName: ConfigurableBase.BoxedValue
