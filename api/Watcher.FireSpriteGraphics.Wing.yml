### YamlMime:ManagedReference
items:
- uid: Watcher.FireSpriteGraphics.Wing
  commentId: T:Watcher.FireSpriteGraphics.Wing
  id: FireSpriteGraphics.Wing
  parent: Watcher
  children:
  - Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)
  - Watcher.FireSpriteGraphics.Wing.Reset
  - Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition
  - Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)
  - Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)
  - Watcher.FireSpriteGraphics.Wing.lastRotation
  - Watcher.FireSpriteGraphics.Wing.lastSegPos
  - Watcher.FireSpriteGraphics.Wing.lastWingScale
  - Watcher.FireSpriteGraphics.Wing.points
  - Watcher.FireSpriteGraphics.Wing.pos
  - Watcher.FireSpriteGraphics.Wing.randomOffset
  - Watcher.FireSpriteGraphics.Wing.root
  - Watcher.FireSpriteGraphics.Wing.rotation
  - Watcher.FireSpriteGraphics.Wing.segPos
  - Watcher.FireSpriteGraphics.Wing.segments
  - Watcher.FireSpriteGraphics.Wing.wingScale
  langs:
  - csharp
  - vb
  name: FireSpriteGraphics.Wing
  nameWithType: FireSpriteGraphics.Wing
  fullName: Watcher.FireSpriteGraphics.Wing
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.FireSpriteGraphics.Wing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FireSpriteGraphics.Wing
    content.vb: Public Class FireSpriteGraphics.Wing
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.FireSpriteGraphics.Wing.root
  commentId: F:Watcher.FireSpriteGraphics.Wing.root
  id: root
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: root
  nameWithType: FireSpriteGraphics.Wing.root
  fullName: Watcher.FireSpriteGraphics.Wing.root
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Wing.root</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 root
    return:
      type: UnityEngine.Vector2
    content.vb: Public root As Vector2
- uid: Watcher.FireSpriteGraphics.Wing.pos
  commentId: F:Watcher.FireSpriteGraphics.Wing.pos
  id: pos
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: FireSpriteGraphics.Wing.pos
  fullName: Watcher.FireSpriteGraphics.Wing.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Wing.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: Watcher.FireSpriteGraphics.Wing.randomOffset
  commentId: F:Watcher.FireSpriteGraphics.Wing.randomOffset
  id: randomOffset
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: randomOffset
  nameWithType: FireSpriteGraphics.Wing.randomOffset
  fullName: Watcher.FireSpriteGraphics.Wing.randomOffset
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Wing.randomOffset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float randomOffset
    return:
      type: System.Single
    content.vb: Public randomOffset As Single
- uid: Watcher.FireSpriteGraphics.Wing.segments
  commentId: F:Watcher.FireSpriteGraphics.Wing.segments
  id: segments
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: segments
  nameWithType: FireSpriteGraphics.Wing.segments
  fullName: Watcher.FireSpriteGraphics.Wing.segments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Wing.segments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int segments
    return:
      type: System.Int32
    content.vb: Public segments As Integer
- uid: Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)
  commentId: M:Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)
  id: '#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)'
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: Wing(FireSprite, Room, int, int)
  nameWithType: FireSpriteGraphics.Wing.Wing(FireSprite, Room, int, int)
  fullName: Watcher.FireSpriteGraphics.Wing.Wing(Watcher.FireSprite, Room, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.FireSpriteGraphics.Wing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Wing(FireSprite ow, Room room, int index, int lengthSegments)
    parameters:
    - id: ow
      type: Watcher.FireSprite
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ow</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: lengthSegments
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lengthSegments</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.#ctor(Watcher.FireSprite,Room,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(ow As FireSprite, room As Room, index As Integer, lengthSegments As Integer)
  overload: Watcher.FireSpriteGraphics.Wing.#ctor*
  nameWithType.vb: FireSpriteGraphics.Wing.New(FireSprite, Room, Integer, Integer)
  fullName.vb: Watcher.FireSpriteGraphics.Wing.New(Watcher.FireSprite, Room, Integer, Integer)
  name.vb: New(FireSprite, Room, Integer, Integer)
- uid: Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition
  commentId: M:Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition
  id: UpdateSegmentPosition
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: UpdateSegmentPosition()
  nameWithType: FireSpriteGraphics.Wing.UpdateSegmentPosition()
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateSegmentPosition()
    content.vb: Public Sub UpdateSegmentPosition()
  overload: Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition*
- uid: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)
  commentId: M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)
  id: UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: UpdateWingRotation(bool, float, float, float)
  nameWithType: FireSpriteGraphics.Wing.UpdateWingRotation(bool, float, float, float)
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(bool, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateWingRotation(bool landed, float flyDirection, float lastFlyDirection, float speed)
    parameters:
    - id: landed
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>landed</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: flyDirection
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>flyDirection</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lastFlyDirection
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastFlyDirection</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(System.Boolean,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateWingRotation(landed As Boolean, flyDirection As Single, lastFlyDirection As Single, speed As Single)
  overload: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation*
  nameWithType.vb: FireSpriteGraphics.Wing.UpdateWingRotation(Boolean, Single, Single, Single)
  fullName.vb: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation(Boolean, Single, Single, Single)
  name.vb: UpdateWingRotation(Boolean, Single, Single, Single)
- uid: Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)
  commentId: M:Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)
  id: UpdateWingScale(System.Boolean,System.Single)
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: UpdateWingScale(bool, float)
  nameWithType: FireSpriteGraphics.Wing.UpdateWingScale(bool, float)
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateWingScale(bool, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateWingScale(bool landed, float speed)
    parameters:
    - id: landed
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>landed</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Wing.UpdateWingScale(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub UpdateWingScale(landed As Boolean, speed As Single)
  overload: Watcher.FireSpriteGraphics.Wing.UpdateWingScale*
  nameWithType.vb: FireSpriteGraphics.Wing.UpdateWingScale(Boolean, Single)
  fullName.vb: Watcher.FireSpriteGraphics.Wing.UpdateWingScale(Boolean, Single)
  name.vb: UpdateWingScale(Boolean, Single)
- uid: Watcher.FireSpriteGraphics.Wing.Reset
  commentId: M:Watcher.FireSpriteGraphics.Wing.Reset
  id: Reset
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FireSpriteGraphics.Wing.Reset()
  fullName: Watcher.FireSpriteGraphics.Wing.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Wing.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Watcher.FireSpriteGraphics.Wing.Reset*
- uid: Watcher.FireSpriteGraphics.Wing.rotation
  commentId: P:Watcher.FireSpriteGraphics.Wing.rotation
  id: rotation
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: rotation
  nameWithType: FireSpriteGraphics.Wing.rotation
  fullName: Watcher.FireSpriteGraphics.Wing.rotation
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.rotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] rotation { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property rotation As Single()
  overload: Watcher.FireSpriteGraphics.Wing.rotation*
- uid: Watcher.FireSpriteGraphics.Wing.lastRotation
  commentId: P:Watcher.FireSpriteGraphics.Wing.lastRotation
  id: lastRotation
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: lastRotation
  nameWithType: FireSpriteGraphics.Wing.lastRotation
  fullName: Watcher.FireSpriteGraphics.Wing.lastRotation
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.lastRotation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] lastRotation { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: Public ReadOnly Property lastRotation As Single()
  overload: Watcher.FireSpriteGraphics.Wing.lastRotation*
- uid: Watcher.FireSpriteGraphics.Wing.points
  commentId: P:Watcher.FireSpriteGraphics.Wing.points
  id: points
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: points
  nameWithType: FireSpriteGraphics.Wing.points
  fullName: Watcher.FireSpriteGraphics.Wing.points
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.points</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] points { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public ReadOnly Property points As Vector2()
  overload: Watcher.FireSpriteGraphics.Wing.points*
- uid: Watcher.FireSpriteGraphics.Wing.segPos
  commentId: P:Watcher.FireSpriteGraphics.Wing.segPos
  id: segPos
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: segPos
  nameWithType: FireSpriteGraphics.Wing.segPos
  fullName: Watcher.FireSpriteGraphics.Wing.segPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.segPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] segPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public ReadOnly Property segPos As Vector2()
  overload: Watcher.FireSpriteGraphics.Wing.segPos*
- uid: Watcher.FireSpriteGraphics.Wing.lastSegPos
  commentId: P:Watcher.FireSpriteGraphics.Wing.lastSegPos
  id: lastSegPos
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: lastSegPos
  nameWithType: FireSpriteGraphics.Wing.lastSegPos
  fullName: Watcher.FireSpriteGraphics.Wing.lastSegPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.lastSegPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] lastSegPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public ReadOnly Property lastSegPos As Vector2()
  overload: Watcher.FireSpriteGraphics.Wing.lastSegPos*
- uid: Watcher.FireSpriteGraphics.Wing.wingScale
  commentId: P:Watcher.FireSpriteGraphics.Wing.wingScale
  id: wingScale
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: wingScale
  nameWithType: FireSpriteGraphics.Wing.wingScale
  fullName: Watcher.FireSpriteGraphics.Wing.wingScale
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.wingScale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 wingScale { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property wingScale As Vector2
  overload: Watcher.FireSpriteGraphics.Wing.wingScale*
- uid: Watcher.FireSpriteGraphics.Wing.lastWingScale
  commentId: P:Watcher.FireSpriteGraphics.Wing.lastWingScale
  id: lastWingScale
  parent: Watcher.FireSpriteGraphics.Wing
  langs:
  - csharp
  - vb
  name: lastWingScale
  nameWithType: FireSpriteGraphics.Wing.lastWingScale
  fullName: Watcher.FireSpriteGraphics.Wing.lastWingScale
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Watcher.FireSpriteGraphics.Wing.lastWingScale</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastWingScale { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property lastWingScale As Vector2
  overload: Watcher.FireSpriteGraphics.Wing.lastWingScale*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Watcher.FireSpriteGraphics.Wing.#ctor*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.#ctor
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing__ctor_Watcher_FireSprite_Room_System_Int32_System_Int32_
  name: Wing
  nameWithType: FireSpriteGraphics.Wing.Wing
  fullName: Watcher.FireSpriteGraphics.Wing.Wing
  nameWithType.vb: FireSpriteGraphics.Wing.New
  fullName.vb: Watcher.FireSpriteGraphics.Wing.New
  name.vb: New
- uid: Watcher.FireSprite
  commentId: T:Watcher.FireSprite
  parent: Watcher
  isExternal: true
  href: Watcher.FireSprite.html
  name: FireSprite
  nameWithType: FireSprite
  fullName: Watcher.FireSprite
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_UpdateSegmentPosition
  name: UpdateSegmentPosition
  nameWithType: FireSpriteGraphics.Wing.UpdateSegmentPosition
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateSegmentPosition
- uid: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.UpdateWingRotation
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_UpdateWingRotation_System_Boolean_System_Single_System_Single_System_Single_
  name: UpdateWingRotation
  nameWithType: FireSpriteGraphics.Wing.UpdateWingRotation
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateWingRotation
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Watcher.FireSpriteGraphics.Wing.UpdateWingScale*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.UpdateWingScale
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_UpdateWingScale_System_Boolean_System_Single_
  name: UpdateWingScale
  nameWithType: FireSpriteGraphics.Wing.UpdateWingScale
  fullName: Watcher.FireSpriteGraphics.Wing.UpdateWingScale
- uid: Watcher.FireSpriteGraphics.Wing.Reset*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.Reset
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_Reset
  name: Reset
  nameWithType: FireSpriteGraphics.Wing.Reset
  fullName: Watcher.FireSpriteGraphics.Wing.Reset
- uid: Watcher.FireSpriteGraphics.Wing.rotation*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.rotation
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_rotation
  name: rotation
  nameWithType: FireSpriteGraphics.Wing.rotation
  fullName: Watcher.FireSpriteGraphics.Wing.rotation
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: Watcher.FireSpriteGraphics.Wing.lastRotation*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.lastRotation
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_lastRotation
  name: lastRotation
  nameWithType: FireSpriteGraphics.Wing.lastRotation
  fullName: Watcher.FireSpriteGraphics.Wing.lastRotation
- uid: Watcher.FireSpriteGraphics.Wing.points*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.points
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_points
  name: points
  nameWithType: FireSpriteGraphics.Wing.points
  fullName: Watcher.FireSpriteGraphics.Wing.points
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: Watcher.FireSpriteGraphics.Wing.segPos*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.segPos
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_segPos
  name: segPos
  nameWithType: FireSpriteGraphics.Wing.segPos
  fullName: Watcher.FireSpriteGraphics.Wing.segPos
- uid: Watcher.FireSpriteGraphics.Wing.lastSegPos*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.lastSegPos
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_lastSegPos
  name: lastSegPos
  nameWithType: FireSpriteGraphics.Wing.lastSegPos
  fullName: Watcher.FireSpriteGraphics.Wing.lastSegPos
- uid: Watcher.FireSpriteGraphics.Wing.wingScale*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.wingScale
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_wingScale
  name: wingScale
  nameWithType: FireSpriteGraphics.Wing.wingScale
  fullName: Watcher.FireSpriteGraphics.Wing.wingScale
- uid: Watcher.FireSpriteGraphics.Wing.lastWingScale*
  commentId: Overload:Watcher.FireSpriteGraphics.Wing.lastWingScale
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html#Watcher_FireSpriteGraphics_Wing_lastWingScale
  name: lastWingScale
  nameWithType: FireSpriteGraphics.Wing.lastWingScale
  fullName: Watcher.FireSpriteGraphics.Wing.lastWingScale
