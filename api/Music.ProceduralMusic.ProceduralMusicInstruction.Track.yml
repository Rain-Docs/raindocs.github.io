### YamlMime:ManagedReference
items:
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  commentId: T:Music.ProceduralMusic.ProceduralMusicInstruction.Track
  id: ProceduralMusic.ProceduralMusicInstruction.Track
  parent: Music
  children:
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor(System.String)
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.dayNight
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.mushroom
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.name
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.subRegions
  - Music.ProceduralMusic.ProceduralMusicInstruction.Track.tags
  langs:
  - csharp
  - vb
  name: ProceduralMusic.ProceduralMusicInstruction.Track
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Music.ProceduralMusic.ProceduralMusicInstruction.Track</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ProceduralMusic.ProceduralMusicInstruction.Track
    content.vb: Public Class ProceduralMusic.ProceduralMusicInstruction.Track
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.name
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.name
  id: name
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: name
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.name
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.tags
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.tags
  id: tags
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: tags
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.tags
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.tags
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.tags</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> tags
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public tags As List(Of String)
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode
  id: remainInPanicMode
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: remainInPanicMode
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.remainInPanicMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool remainInPanicMode
    return:
      type: System.Boolean
    content.vb: Public remainInPanicMode As Boolean
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.subRegions
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.subRegions
  id: subRegions
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: subRegions
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.subRegions
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.subRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.subRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string[] subRegions
    return:
      type: System.String[]
    content.vb: Public subRegions As String()
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.dayNight
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.dayNight
  id: dayNight
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: dayNight
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.dayNight
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.dayNight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.dayNight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dayNight
    return:
      type: System.Int32
    content.vb: Public dayNight As Integer
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.mushroom
  commentId: F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.mushroom
  id: mushroom
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: mushroom
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.mushroom
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.mushroom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.ProceduralMusicInstruction.Track.mushroom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool mushroom
    return:
      type: System.Boolean
    content.vb: Public mushroom As Boolean
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor(System.String)
  commentId: M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: Track(string)
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.Track(string)
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.Track(string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Music.ProceduralMusic.ProceduralMusicInstruction.Track</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Track(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(name As String)
  overload: Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor*
  nameWithType.vb: ProceduralMusic.ProceduralMusicInstruction.Track.New(String)
  fullName.vb: Music.ProceduralMusic.ProceduralMusicInstruction.Track.New(String)
  name.vb: New(String)
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)
  commentId: M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)
  id: AllowedInSubRegion(System.String)
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: AllowedInSubRegion(string)
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(string)
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AllowedInSubRegion(string subRegion)
    parameters:
    - id: subRegion
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>subRegion</parameter>
            <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function AllowedInSubRegion(subRegion As String) As Boolean
  overload: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion*
  nameWithType.vb: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(String)
  fullName.vb: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion(String)
  name.vb: AllowedInSubRegion(String)
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)
  commentId: M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)
  id: AllowedInDayNight(System.Int32)
  parent: Music.ProceduralMusic.ProceduralMusicInstruction.Track
  langs:
  - csharp
  - vb
  name: AllowedInDayNight(int)
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(int)
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AllowedInDayNight(int dayNight)
    parameters:
    - id: dayNight
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dayNight</parameter>
            <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function AllowedInDayNight(dayNight As Integer) As Boolean
  overload: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight*
  nameWithType.vb: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(Integer)
  fullName.vb: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight(Integer)
  name.vb: AllowedInDayNight(Integer)
references:
- uid: Music
  commentId: N:Music
  isExternal: true
  href: Music.html
  name: Music
  nameWithType: Music
  fullName: Music
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor*
  commentId: Overload:Music.ProceduralMusic.ProceduralMusicInstruction.Track.#ctor
  isExternal: true
  href: Music.ProceduralMusic.ProceduralMusicInstruction.Track.html#Music_ProceduralMusic_ProceduralMusicInstruction_Track__ctor_System_String_
  name: Track
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.Track
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.Track
  nameWithType.vb: ProceduralMusic.ProceduralMusicInstruction.Track.New
  fullName.vb: Music.ProceduralMusic.ProceduralMusicInstruction.Track.New
  name.vb: New
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion*
  commentId: Overload:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion
  isExternal: true
  href: Music.ProceduralMusic.ProceduralMusicInstruction.Track.html#Music_ProceduralMusic_ProceduralMusicInstruction_Track_AllowedInSubRegion_System_String_
  name: AllowedInSubRegion
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInSubRegion
- uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight*
  commentId: Overload:Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight
  isExternal: true
  href: Music.ProceduralMusic.ProceduralMusicInstruction.Track.html#Music_ProceduralMusic_ProceduralMusicInstruction_Track_AllowedInDayNight_System_Int32_
  name: AllowedInDayNight
  nameWithType: ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction.Track.AllowedInDayNight
