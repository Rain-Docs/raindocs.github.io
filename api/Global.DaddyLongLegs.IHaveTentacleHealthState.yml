### YamlMime:ManagedReference
items:
- uid: Global.DaddyLongLegs.IHaveTentacleHealthState
  commentId: T:Global.DaddyLongLegs.IHaveTentacleHealthState
  id: DaddyLongLegs.IHaveTentacleHealthState
  parent: Global
  children:
  - Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  langs:
  - csharp
  - vb
  name: DaddyLongLegs.IHaveTentacleHealthState
  nameWithType: DaddyLongLegs.IHaveTentacleHealthState
  fullName: DaddyLongLegs.IHaveTentacleHealthState
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:DaddyLongLegs.IHaveTentacleHealthState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface DaddyLongLegs.IHaveTentacleHealthState
    content.vb: Public Interface DaddyLongLegs.IHaveTentacleHealthState
- uid: Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  commentId: P:Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  id: TentacleHealth
  parent: Global.DaddyLongLegs.IHaveTentacleHealthState
  langs:
  - csharp
  - vb
  name: TentacleHealth
  nameWithType: DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  fullName: DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: float[] TentacleHealth { get; }
    parameters: []
    return:
      type: System.Single[]
    content.vb: ReadOnly Property TentacleHealth As Single()
  overload: Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth*
references:
- uid: Global
- uid: Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth*
  commentId: Overload:Global.DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  isExternal: true
  href: Global.DaddyLongLegs.IHaveTentacleHealthState.html#DaddyLongLegs_IHaveTentacleHealthState_TentacleHealth
  name: TentacleHealth
  nameWithType: DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
  fullName: DaddyLongLegs.IHaveTentacleHealthState.TentacleHealth
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
