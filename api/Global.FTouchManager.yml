### YamlMime:ManagedReference
items:
- uid: Global.FTouchManager
  commentId: T:Global.FTouchManager
  id: FTouchManager
  parent: Global
  children:
  - Global.FTouchManager.#ctor
  - Global.FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)
  - Global.FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)
  - Global.FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)
  - Global.FTouchManager.DoesTheSingleTouchableExist
  - Global.FTouchManager.HandleDepthChange
  - Global.FTouchManager.LogAllListeners
  - Global.FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)
  - Global.FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)
  - Global.FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)
  - Global.FTouchManager.SLOT_COUNT
  - Global.FTouchManager.Update
  - Global.FTouchManager.isEnabled
  - Global.FTouchManager.shouldMouseEmulateTouch
  langs:
  - csharp
  - vb
  name: FTouchManager
  nameWithType: FTouchManager
  fullName: FTouchManager
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FTouchManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FTouchManager
    content.vb: Public Class FTouchManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FTouchManager.SLOT_COUNT
  commentId: F:Global.FTouchManager.SLOT_COUNT
  id: SLOT_COUNT
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: SLOT_COUNT
  nameWithType: FTouchManager.SLOT_COUNT
  fullName: FTouchManager.SLOT_COUNT
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouchManager.SLOT_COUNT</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const int SLOT_COUNT = 12
    return:
      type: System.Int32
    content.vb: Public Const SLOT_COUNT As Integer = 12
- uid: Global.FTouchManager.shouldMouseEmulateTouch
  commentId: F:Global.FTouchManager.shouldMouseEmulateTouch
  id: shouldMouseEmulateTouch
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: shouldMouseEmulateTouch
  nameWithType: FTouchManager.shouldMouseEmulateTouch
  fullName: FTouchManager.shouldMouseEmulateTouch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouchManager.shouldMouseEmulateTouch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool shouldMouseEmulateTouch
    return:
      type: System.Boolean
    content.vb: Public Shared shouldMouseEmulateTouch As Boolean
- uid: Global.FTouchManager.isEnabled
  commentId: F:Global.FTouchManager.isEnabled
  id: isEnabled
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: isEnabled
  nameWithType: FTouchManager.isEnabled
  fullName: FTouchManager.isEnabled
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FTouchManager.isEnabled</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool isEnabled
    return:
      type: System.Boolean
    content.vb: Public Shared isEnabled As Boolean
- uid: Global.FTouchManager.#ctor
  commentId: M:Global.FTouchManager.#ctor
  id: '#ctor'
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: FTouchManager()
  nameWithType: FTouchManager.FTouchManager()
  fullName: FTouchManager.FTouchManager()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>FTouchManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FTouchManager()
    content.vb: Public Sub New()
  overload: Global.FTouchManager.#ctor*
  nameWithType.vb: FTouchManager.New()
  fullName.vb: FTouchManager.New()
  name.vb: New()
- uid: Global.FTouchManager.DoesTheSingleTouchableExist
  commentId: M:Global.FTouchManager.DoesTheSingleTouchableExist
  id: DoesTheSingleTouchableExist
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: DoesTheSingleTouchableExist()
  nameWithType: FTouchManager.DoesTheSingleTouchableExist()
  fullName: FTouchManager.DoesTheSingleTouchableExist()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.DoesTheSingleTouchableExist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DoesTheSingleTouchableExist()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FTouchManager.DoesTheSingleTouchableExist</parameter>
          </include>
        </markup>
    content.vb: Public Function DoesTheSingleTouchableExist() As Boolean
  overload: Global.FTouchManager.DoesTheSingleTouchableExist*
- uid: Global.FTouchManager.Update
  commentId: M:Global.FTouchManager.Update
  id: Update
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: FTouchManager.Update()
  fullName: FTouchManager.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.FTouchManager.Update*
- uid: Global.FTouchManager.HandleDepthChange
  commentId: M:Global.FTouchManager.HandleDepthChange
  id: HandleDepthChange
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: HandleDepthChange()
  nameWithType: FTouchManager.HandleDepthChange()
  fullName: FTouchManager.HandleDepthChange()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.HandleDepthChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HandleDepthChange()
    content.vb: Public Sub HandleDepthChange()
  overload: Global.FTouchManager.HandleDepthChange*
- uid: Global.FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)
  commentId: M:Global.FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)
  id: AddSingleTouchTarget(FSingleTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: AddSingleTouchTarget(FSingleTouchableInterface)
  nameWithType: FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)
  fullName: FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddSingleTouchTarget(FSingleTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FSingleTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.AddSingleTouchTarget(FSingleTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddSingleTouchTarget(touchable As FSingleTouchableInterface)
  overload: Global.FTouchManager.AddSingleTouchTarget*
- uid: Global.FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)
  commentId: M:Global.FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)
  id: RemoveSingleTouchTarget(FSingleTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: RemoveSingleTouchTarget(FSingleTouchableInterface)
  nameWithType: FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)
  fullName: FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveSingleTouchTarget(FSingleTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FSingleTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.RemoveSingleTouchTarget(FSingleTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveSingleTouchTarget(touchable As FSingleTouchableInterface)
  overload: Global.FTouchManager.RemoveSingleTouchTarget*
- uid: Global.FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)
  commentId: M:Global.FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)
  id: AddMultiTouchTarget(FMultiTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: AddMultiTouchTarget(FMultiTouchableInterface)
  nameWithType: FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)
  fullName: FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddMultiTouchTarget(FMultiTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FMultiTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.AddMultiTouchTarget(FMultiTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddMultiTouchTarget(touchable As FMultiTouchableInterface)
  overload: Global.FTouchManager.AddMultiTouchTarget*
- uid: Global.FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)
  commentId: M:Global.FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)
  id: RemoveMultiTouchTarget(FMultiTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: RemoveMultiTouchTarget(FMultiTouchableInterface)
  nameWithType: FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)
  fullName: FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveMultiTouchTarget(FMultiTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FMultiTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.RemoveMultiTouchTarget(FMultiTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveMultiTouchTarget(touchable As FMultiTouchableInterface)
  overload: Global.FTouchManager.RemoveMultiTouchTarget*
- uid: Global.FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)
  commentId: M:Global.FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)
  id: AddSmartTouchTarget(FSmartTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: AddSmartTouchTarget(FSmartTouchableInterface)
  nameWithType: FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)
  fullName: FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddSmartTouchTarget(FSmartTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FSmartTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.AddSmartTouchTarget(FSmartTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddSmartTouchTarget(touchable As FSmartTouchableInterface)
  overload: Global.FTouchManager.AddSmartTouchTarget*
- uid: Global.FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)
  commentId: M:Global.FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)
  id: RemoveSmartTouchTarget(FSmartTouchableInterface)
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: RemoveSmartTouchTarget(FSmartTouchableInterface)
  nameWithType: FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)
  fullName: FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveSmartTouchTarget(FSmartTouchableInterface touchable)
    parameters:
    - id: touchable
      type: Global.FSmartTouchableInterface
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touchable</parameter>
            <parameter>M:FTouchManager.RemoveSmartTouchTarget(FSmartTouchableInterface)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveSmartTouchTarget(touchable As FSmartTouchableInterface)
  overload: Global.FTouchManager.RemoveSmartTouchTarget*
- uid: Global.FTouchManager.LogAllListeners
  commentId: M:Global.FTouchManager.LogAllListeners
  id: LogAllListeners
  parent: Global.FTouchManager
  langs:
  - csharp
  - vb
  name: LogAllListeners()
  nameWithType: FTouchManager.LogAllListeners()
  fullName: FTouchManager.LogAllListeners()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FTouchManager.LogAllListeners</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LogAllListeners()
    content.vb: Public Sub LogAllListeners()
  overload: Global.FTouchManager.LogAllListeners*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FTouchManager.#ctor*
  commentId: Overload:Global.FTouchManager.#ctor
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager__ctor
  name: FTouchManager
  nameWithType: FTouchManager.FTouchManager
  fullName: FTouchManager.FTouchManager
  nameWithType.vb: FTouchManager.New
  fullName.vb: FTouchManager.New
  name.vb: New
- uid: Global.FTouchManager.DoesTheSingleTouchableExist*
  commentId: Overload:Global.FTouchManager.DoesTheSingleTouchableExist
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_DoesTheSingleTouchableExist
  name: DoesTheSingleTouchableExist
  nameWithType: FTouchManager.DoesTheSingleTouchableExist
  fullName: FTouchManager.DoesTheSingleTouchableExist
- uid: Global.FTouchManager.Update*
  commentId: Overload:Global.FTouchManager.Update
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_Update
  name: Update
  nameWithType: FTouchManager.Update
  fullName: FTouchManager.Update
- uid: Global.FTouchManager.HandleDepthChange*
  commentId: Overload:Global.FTouchManager.HandleDepthChange
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_HandleDepthChange
  name: HandleDepthChange
  nameWithType: FTouchManager.HandleDepthChange
  fullName: FTouchManager.HandleDepthChange
- uid: Global.FTouchManager.AddSingleTouchTarget*
  commentId: Overload:Global.FTouchManager.AddSingleTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_AddSingleTouchTarget_FSingleTouchableInterface_
  name: AddSingleTouchTarget
  nameWithType: FTouchManager.AddSingleTouchTarget
  fullName: FTouchManager.AddSingleTouchTarget
- uid: Global.FSingleTouchableInterface
  commentId: T:Global.FSingleTouchableInterface
  isExternal: true
  href: FSingleTouchableInterface.html
  name: FSingleTouchableInterface
  nameWithType: FSingleTouchableInterface
  fullName: FSingleTouchableInterface
- uid: Global.FTouchManager.RemoveSingleTouchTarget*
  commentId: Overload:Global.FTouchManager.RemoveSingleTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_RemoveSingleTouchTarget_FSingleTouchableInterface_
  name: RemoveSingleTouchTarget
  nameWithType: FTouchManager.RemoveSingleTouchTarget
  fullName: FTouchManager.RemoveSingleTouchTarget
- uid: Global.FTouchManager.AddMultiTouchTarget*
  commentId: Overload:Global.FTouchManager.AddMultiTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_AddMultiTouchTarget_FMultiTouchableInterface_
  name: AddMultiTouchTarget
  nameWithType: FTouchManager.AddMultiTouchTarget
  fullName: FTouchManager.AddMultiTouchTarget
- uid: Global.FMultiTouchableInterface
  commentId: T:Global.FMultiTouchableInterface
  isExternal: true
  href: FMultiTouchableInterface.html
  name: FMultiTouchableInterface
  nameWithType: FMultiTouchableInterface
  fullName: FMultiTouchableInterface
- uid: Global.FTouchManager.RemoveMultiTouchTarget*
  commentId: Overload:Global.FTouchManager.RemoveMultiTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_RemoveMultiTouchTarget_FMultiTouchableInterface_
  name: RemoveMultiTouchTarget
  nameWithType: FTouchManager.RemoveMultiTouchTarget
  fullName: FTouchManager.RemoveMultiTouchTarget
- uid: Global.FTouchManager.AddSmartTouchTarget*
  commentId: Overload:Global.FTouchManager.AddSmartTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_AddSmartTouchTarget_FSmartTouchableInterface_
  name: AddSmartTouchTarget
  nameWithType: FTouchManager.AddSmartTouchTarget
  fullName: FTouchManager.AddSmartTouchTarget
- uid: Global.FSmartTouchableInterface
  commentId: T:Global.FSmartTouchableInterface
  isExternal: true
  href: FSmartTouchableInterface.html
  name: FSmartTouchableInterface
  nameWithType: FSmartTouchableInterface
  fullName: FSmartTouchableInterface
- uid: Global.FTouchManager.RemoveSmartTouchTarget*
  commentId: Overload:Global.FTouchManager.RemoveSmartTouchTarget
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_RemoveSmartTouchTarget_FSmartTouchableInterface_
  name: RemoveSmartTouchTarget
  nameWithType: FTouchManager.RemoveSmartTouchTarget
  fullName: FTouchManager.RemoveSmartTouchTarget
- uid: Global.FTouchManager.LogAllListeners*
  commentId: Overload:Global.FTouchManager.LogAllListeners
  isExternal: true
  href: Global.FTouchManager.html#FTouchManager_LogAllListeners
  name: LogAllListeners
  nameWithType: FTouchManager.LogAllListeners
  fullName: FTouchManager.LogAllListeners
