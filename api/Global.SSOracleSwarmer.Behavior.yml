### YamlMime:ManagedReference
items:
- uid: Global.SSOracleSwarmer.Behavior
  commentId: T:Global.SSOracleSwarmer.Behavior
  id: SSOracleSwarmer.Behavior
  parent: Global
  children:
  - Global.SSOracleSwarmer.Behavior.#ctor(SSOracleSwarmer)
  - Global.SSOracleSwarmer.Behavior.Dominance
  - Global.SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)
  - Global.SSOracleSwarmer.Behavior.Equals(System.Object)
  - Global.SSOracleSwarmer.Behavior.GetHashCode
  - Global.SSOracleSwarmer.Behavior.IsDead
  - Global.SSOracleSwarmer.Behavior.aimInFront
  - Global.SSOracleSwarmer.Behavior.color
  - Global.SSOracleSwarmer.Behavior.deathSpeed
  - Global.SSOracleSwarmer.Behavior.idealDistance
  - Global.SSOracleSwarmer.Behavior.leader
  - Global.SSOracleSwarmer.Behavior.life
  - Global.SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  - Global.SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  - Global.SSOracleSwarmer.Behavior.randomVibrations
  - Global.SSOracleSwarmer.Behavior.revolveSpeed
  - Global.SSOracleSwarmer.Behavior.suckle
  - Global.SSOracleSwarmer.Behavior.torque
  langs:
  - csharp
  - vb
  name: SSOracleSwarmer.Behavior
  nameWithType: SSOracleSwarmer.Behavior
  fullName: SSOracleSwarmer.Behavior
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SSOracleSwarmer.Behavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public struct SSOracleSwarmer.Behavior : IEquatable<SSOracleSwarmer.Behavior>'
    content.vb: Public Structure SSOracleSwarmer.Behavior Implements IEquatable(Of SSOracleSwarmer.Behavior)
  implements:
  - System.IEquatable{SSOracleSwarmer.Behavior}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.SSOracleSwarmer.Behavior.idealDistance
  commentId: F:Global.SSOracleSwarmer.Behavior.idealDistance
  id: idealDistance
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: idealDistance
  nameWithType: SSOracleSwarmer.Behavior.idealDistance
  fullName: SSOracleSwarmer.Behavior.idealDistance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.idealDistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float idealDistance
    return:
      type: System.Single
    content.vb: Public idealDistance As Single
- uid: Global.SSOracleSwarmer.Behavior.aimInFront
  commentId: F:Global.SSOracleSwarmer.Behavior.aimInFront
  id: aimInFront
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: aimInFront
  nameWithType: SSOracleSwarmer.Behavior.aimInFront
  fullName: SSOracleSwarmer.Behavior.aimInFront
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.aimInFront</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float aimInFront
    return:
      type: System.Single
    content.vb: Public aimInFront As Single
- uid: Global.SSOracleSwarmer.Behavior.torque
  commentId: F:Global.SSOracleSwarmer.Behavior.torque
  id: torque
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: torque
  nameWithType: SSOracleSwarmer.Behavior.torque
  fullName: SSOracleSwarmer.Behavior.torque
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.torque</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float torque
    return:
      type: System.Single
    content.vb: Public torque As Single
- uid: Global.SSOracleSwarmer.Behavior.randomVibrations
  commentId: F:Global.SSOracleSwarmer.Behavior.randomVibrations
  id: randomVibrations
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: randomVibrations
  nameWithType: SSOracleSwarmer.Behavior.randomVibrations
  fullName: SSOracleSwarmer.Behavior.randomVibrations
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.randomVibrations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float randomVibrations
    return:
      type: System.Single
    content.vb: Public randomVibrations As Single
- uid: Global.SSOracleSwarmer.Behavior.revolveSpeed
  commentId: F:Global.SSOracleSwarmer.Behavior.revolveSpeed
  id: revolveSpeed
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: revolveSpeed
  nameWithType: SSOracleSwarmer.Behavior.revolveSpeed
  fullName: SSOracleSwarmer.Behavior.revolveSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.revolveSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float revolveSpeed
    return:
      type: System.Single
    content.vb: Public revolveSpeed As Single
- uid: Global.SSOracleSwarmer.Behavior.life
  commentId: F:Global.SSOracleSwarmer.Behavior.life
  id: life
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: life
  nameWithType: SSOracleSwarmer.Behavior.life
  fullName: SSOracleSwarmer.Behavior.life
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.life</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float life
    return:
      type: System.Single
    content.vb: Public life As Single
- uid: Global.SSOracleSwarmer.Behavior.deathSpeed
  commentId: F:Global.SSOracleSwarmer.Behavior.deathSpeed
  id: deathSpeed
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: deathSpeed
  nameWithType: SSOracleSwarmer.Behavior.deathSpeed
  fullName: SSOracleSwarmer.Behavior.deathSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.deathSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float deathSpeed
    return:
      type: System.Single
    content.vb: Public deathSpeed As Single
- uid: Global.SSOracleSwarmer.Behavior.leader
  commentId: F:Global.SSOracleSwarmer.Behavior.leader
  id: leader
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: leader
  nameWithType: SSOracleSwarmer.Behavior.leader
  fullName: SSOracleSwarmer.Behavior.leader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.leader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SSOracleSwarmer leader
    return:
      type: Global.SSOracleSwarmer
    content.vb: Public leader As SSOracleSwarmer
- uid: Global.SSOracleSwarmer.Behavior.color
  commentId: F:Global.SSOracleSwarmer.Behavior.color
  id: color
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: color
  nameWithType: SSOracleSwarmer.Behavior.color
  fullName: SSOracleSwarmer.Behavior.color
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 color
    return:
      type: UnityEngine.Vector2
    content.vb: Public color As Vector2
- uid: Global.SSOracleSwarmer.Behavior.suckle
  commentId: F:Global.SSOracleSwarmer.Behavior.suckle
  id: suckle
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: suckle
  nameWithType: SSOracleSwarmer.Behavior.suckle
  fullName: SSOracleSwarmer.Behavior.suckle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SSOracleSwarmer.Behavior.suckle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool suckle
    return:
      type: System.Boolean
    content.vb: Public suckle As Boolean
- uid: Global.SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)
  commentId: M:Global.SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)
  id: Equals(SSOracleSwarmer.Behavior)
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: Equals(Behavior)
  nameWithType: SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)
  fullName: SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(SSOracleSwarmer.Behavior other)
    parameters:
    - id: other
      type: Global.SSOracleSwarmer.Behavior
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.Equals(SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(other As SSOracleSwarmer.Behavior) As Boolean
  overload: Global.SSOracleSwarmer.Behavior.Equals*
  implements:
  - System.IEquatable{SSOracleSwarmer.Behavior}.Equals(SSOracleSwarmer.Behavior)
- uid: Global.SSOracleSwarmer.Behavior.Equals(System.Object)
  commentId: M:Global.SSOracleSwarmer.Behavior.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: SSOracleSwarmer.Behavior.Equals(object)
  fullName: SSOracleSwarmer.Behavior.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Global.SSOracleSwarmer.Behavior.Equals*
  nameWithType.vb: SSOracleSwarmer.Behavior.Equals(Object)
  fullName.vb: SSOracleSwarmer.Behavior.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.SSOracleSwarmer.Behavior.GetHashCode
  commentId: M:Global.SSOracleSwarmer.Behavior.GetHashCode
  id: GetHashCode
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: SSOracleSwarmer.Behavior.GetHashCode()
  fullName: SSOracleSwarmer.Behavior.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Global.SSOracleSwarmer.Behavior.GetHashCode*
- uid: Global.SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  commentId: M:Global.SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  id: op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: operator ==(Behavior, Behavior)
  nameWithType: SSOracleSwarmer.Behavior.operator ==(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  fullName: SSOracleSwarmer.Behavior.operator ==(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(SSOracleSwarmer.Behavior left, SSOracleSwarmer.Behavior right)
    parameters:
    - id: left
      type: Global.SSOracleSwarmer.Behavior
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    - id: right
      type: Global.SSOracleSwarmer.Behavior
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Equality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(left As SSOracleSwarmer.Behavior, right As SSOracleSwarmer.Behavior) As Boolean
  overload: Global.SSOracleSwarmer.Behavior.op_Equality*
  nameWithType.vb: SSOracleSwarmer.Behavior.=(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  fullName.vb: SSOracleSwarmer.Behavior.=(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  name.vb: =(Behavior, Behavior)
- uid: Global.SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  commentId: M:Global.SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  id: op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: operator !=(Behavior, Behavior)
  nameWithType: SSOracleSwarmer.Behavior.operator !=(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  fullName: SSOracleSwarmer.Behavior.operator !=(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(SSOracleSwarmer.Behavior left, SSOracleSwarmer.Behavior right)
    parameters:
    - id: left
      type: Global.SSOracleSwarmer.Behavior
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    - id: right
      type: Global.SSOracleSwarmer.Behavior
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.op_Inequality(SSOracleSwarmer.Behavior,SSOracleSwarmer.Behavior)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(left As SSOracleSwarmer.Behavior, right As SSOracleSwarmer.Behavior) As Boolean
  overload: Global.SSOracleSwarmer.Behavior.op_Inequality*
  nameWithType.vb: SSOracleSwarmer.Behavior.<>(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  fullName.vb: SSOracleSwarmer.Behavior.<>(SSOracleSwarmer.Behavior, SSOracleSwarmer.Behavior)
  name.vb: <>(Behavior, Behavior)
- uid: Global.SSOracleSwarmer.Behavior.IsDead
  commentId: M:Global.SSOracleSwarmer.Behavior.IsDead
  id: IsDead
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: IsDead()
  nameWithType: SSOracleSwarmer.Behavior.IsDead()
  fullName: SSOracleSwarmer.Behavior.IsDead()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.IsDead</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsDead()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.IsDead</parameter>
          </include>
        </markup>
    content.vb: Public Function IsDead() As Boolean
  overload: Global.SSOracleSwarmer.Behavior.IsDead*
- uid: Global.SSOracleSwarmer.Behavior.Dominance
  commentId: M:Global.SSOracleSwarmer.Behavior.Dominance
  id: Dominance
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: Dominance()
  nameWithType: SSOracleSwarmer.Behavior.Dominance()
  fullName: SSOracleSwarmer.Behavior.Dominance()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SSOracleSwarmer.Behavior.Dominance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Dominance()
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.Dominance</parameter>
          </include>
        </markup>
    content.vb: Public Function Dominance() As Single
  overload: Global.SSOracleSwarmer.Behavior.Dominance*
- uid: Global.SSOracleSwarmer.Behavior.#ctor(SSOracleSwarmer)
  commentId: M:Global.SSOracleSwarmer.Behavior.#ctor(SSOracleSwarmer)
  id: '#ctor(SSOracleSwarmer)'
  parent: Global.SSOracleSwarmer.Behavior
  langs:
  - csharp
  - vb
  name: Behavior(SSOracleSwarmer)
  nameWithType: SSOracleSwarmer.Behavior.Behavior(SSOracleSwarmer)
  fullName: SSOracleSwarmer.Behavior.Behavior(SSOracleSwarmer)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SSOracleSwarmer.Behavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Behavior(SSOracleSwarmer leader)
    parameters:
    - id: leader
      type: Global.SSOracleSwarmer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>leader</parameter>
            <parameter>M:SSOracleSwarmer.Behavior.#ctor(SSOracleSwarmer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(leader As SSOracleSwarmer)
  overload: Global.SSOracleSwarmer.Behavior.#ctor*
  nameWithType.vb: SSOracleSwarmer.Behavior.New(SSOracleSwarmer)
  fullName.vb: SSOracleSwarmer.Behavior.New(SSOracleSwarmer)
  name.vb: New(SSOracleSwarmer)
references:
- uid: Global
- uid: System.IEquatable{SSOracleSwarmer.Behavior}
  commentId: T:System.IEquatable{SSOracleSwarmer.Behavior}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<SSOracleSwarmer.Behavior>
  nameWithType: IEquatable<SSOracleSwarmer.Behavior>
  fullName: System.IEquatable<SSOracleSwarmer.Behavior>
  nameWithType.vb: IEquatable(Of SSOracleSwarmer.Behavior)
  fullName.vb: System.IEquatable(Of SSOracleSwarmer.Behavior)
  name.vb: IEquatable(Of SSOracleSwarmer.Behavior)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: Global.SSOracleSwarmer
    name: SSOracleSwarmer
    isExternal: true
    href: SSOracleSwarmer.html
  - name: .
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SSOracleSwarmer
    name: SSOracleSwarmer
    isExternal: true
    href: SSOracleSwarmer.html
  - name: .
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SSOracleSwarmer
  commentId: T:Global.SSOracleSwarmer
  isExternal: true
  href: SSOracleSwarmer.html
  name: SSOracleSwarmer
  nameWithType: SSOracleSwarmer
  fullName: SSOracleSwarmer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SSOracleSwarmer.Behavior.Equals*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.Equals
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_Equals_SSOracleSwarmer_Behavior_
  name: Equals
  nameWithType: SSOracleSwarmer.Behavior.Equals
  fullName: SSOracleSwarmer.Behavior.Equals
- uid: System.IEquatable{SSOracleSwarmer.Behavior}.Equals(SSOracleSwarmer.Behavior)
  commentId: M:System.IEquatable{SSOracleSwarmer.Behavior}.Equals(SSOracleSwarmer.Behavior)
  parent: System.IEquatable{SSOracleSwarmer.Behavior}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(Behavior)
  nameWithType: IEquatable<SSOracleSwarmer.Behavior>.Equals(SSOracleSwarmer.Behavior)
  fullName: System.IEquatable<SSOracleSwarmer.Behavior>.Equals(SSOracleSwarmer.Behavior)
  nameWithType.vb: IEquatable(Of SSOracleSwarmer.Behavior).Equals(SSOracleSwarmer.Behavior)
  fullName.vb: System.IEquatable(Of SSOracleSwarmer.Behavior).Equals(SSOracleSwarmer.Behavior)
  spec.csharp:
  - uid: System.IEquatable{SSOracleSwarmer.Behavior}.Equals(SSOracleSwarmer.Behavior)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
  - name: )
  spec.vb:
  - uid: System.IEquatable{SSOracleSwarmer.Behavior}.Equals(SSOracleSwarmer.Behavior)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
  - name: )
- uid: Global.SSOracleSwarmer.Behavior
  commentId: T:Global.SSOracleSwarmer.Behavior
  isExternal: true
  href: SSOracleSwarmer.html
  name: SSOracleSwarmer.Behavior
  nameWithType: SSOracleSwarmer.Behavior
  fullName: SSOracleSwarmer.Behavior
  spec.csharp:
  - uid: Global.SSOracleSwarmer
    name: SSOracleSwarmer
    isExternal: true
    href: SSOracleSwarmer.html
  - name: .
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
  spec.vb:
  - uid: Global.SSOracleSwarmer
    name: SSOracleSwarmer
    isExternal: true
    href: SSOracleSwarmer.html
  - name: .
  - uid: Global.SSOracleSwarmer.Behavior
    name: Behavior
    isExternal: true
    href: SSOracleSwarmer.Behavior.html
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Global.SSOracleSwarmer.Behavior.GetHashCode*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.GetHashCode
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_GetHashCode
  name: GetHashCode
  nameWithType: SSOracleSwarmer.Behavior.GetHashCode
  fullName: SSOracleSwarmer.Behavior.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SSOracleSwarmer.Behavior.op_Equality*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.op_Equality
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_op_Equality_SSOracleSwarmer_Behavior_SSOracleSwarmer_Behavior_
  name: operator ==
  nameWithType: SSOracleSwarmer.Behavior.operator ==
  fullName: SSOracleSwarmer.Behavior.operator ==
  nameWithType.vb: SSOracleSwarmer.Behavior.=
  fullName.vb: SSOracleSwarmer.Behavior.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.SSOracleSwarmer.Behavior.op_Equality*
    name: ==
    isExternal: true
    href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_op_Equality_SSOracleSwarmer_Behavior_SSOracleSwarmer_Behavior_
- uid: Global.SSOracleSwarmer.Behavior.op_Inequality*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.op_Inequality
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_op_Inequality_SSOracleSwarmer_Behavior_SSOracleSwarmer_Behavior_
  name: operator !=
  nameWithType: SSOracleSwarmer.Behavior.operator !=
  fullName: SSOracleSwarmer.Behavior.operator !=
  nameWithType.vb: SSOracleSwarmer.Behavior.<>
  fullName.vb: SSOracleSwarmer.Behavior.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.SSOracleSwarmer.Behavior.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_op_Inequality_SSOracleSwarmer_Behavior_SSOracleSwarmer_Behavior_
- uid: Global.SSOracleSwarmer.Behavior.IsDead*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.IsDead
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_IsDead
  name: IsDead
  nameWithType: SSOracleSwarmer.Behavior.IsDead
  fullName: SSOracleSwarmer.Behavior.IsDead
- uid: Global.SSOracleSwarmer.Behavior.Dominance*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.Dominance
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior_Dominance
  name: Dominance
  nameWithType: SSOracleSwarmer.Behavior.Dominance
  fullName: SSOracleSwarmer.Behavior.Dominance
- uid: Global.SSOracleSwarmer.Behavior.#ctor*
  commentId: Overload:Global.SSOracleSwarmer.Behavior.#ctor
  isExternal: true
  href: Global.SSOracleSwarmer.Behavior.html#SSOracleSwarmer_Behavior__ctor_SSOracleSwarmer_
  name: Behavior
  nameWithType: SSOracleSwarmer.Behavior.Behavior
  fullName: SSOracleSwarmer.Behavior.Behavior
  nameWithType.vb: SSOracleSwarmer.Behavior.New
  fullName.vb: SSOracleSwarmer.Behavior.New
  name.vb: New
