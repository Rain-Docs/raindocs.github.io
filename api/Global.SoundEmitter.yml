### YamlMime:ManagedReference
items:
- uid: Global.SoundEmitter
  commentId: T:Global.SoundEmitter
  id: SoundEmitter
  parent: Global
  children:
  - Global.SoundEmitter.#ctor(System.Single,System.Single)
  - Global.SoundEmitter.Destroy
  - Global.SoundEmitter.Update(System.Boolean)
  - Global.SoundEmitter.alive
  - Global.SoundEmitter.currentSoundObject
  - Global.SoundEmitter.lastSoundPlayingFrame
  - Global.SoundEmitter.pitch
  - Global.SoundEmitter.requireActiveUpkeep
  - Global.SoundEmitter.soundStillPlaying
  - Global.SoundEmitter.volume
  - Global.SoundEmitter.volumeGroup
  langs:
  - csharp
  - vb
  name: SoundEmitter
  nameWithType: SoundEmitter
  fullName: SoundEmitter
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SoundEmitter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class SoundEmitter : UpdatableAndDeletable'
    content.vb: Public Class SoundEmitter Inherits UpdatableAndDeletable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  derivedClasses:
  - Global.DisembodiedLoopEmitter
  - Global.GenericLoopEmitter
  - Global.PositionedSoundEmitter
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SoundEmitter.alive
  commentId: F:Global.SoundEmitter.alive
  id: alive
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: alive
  nameWithType: SoundEmitter.alive
  fullName: SoundEmitter.alive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.alive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool alive
    return:
      type: System.Boolean
    content.vb: Public alive As Boolean
- uid: Global.SoundEmitter.requireActiveUpkeep
  commentId: F:Global.SoundEmitter.requireActiveUpkeep
  id: requireActiveUpkeep
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: requireActiveUpkeep
  nameWithType: SoundEmitter.requireActiveUpkeep
  fullName: SoundEmitter.requireActiveUpkeep
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.requireActiveUpkeep</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool requireActiveUpkeep
    return:
      type: System.Boolean
    content.vb: Public requireActiveUpkeep As Boolean
- uid: Global.SoundEmitter.soundStillPlaying
  commentId: F:Global.SoundEmitter.soundStillPlaying
  id: soundStillPlaying
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: soundStillPlaying
  nameWithType: SoundEmitter.soundStillPlaying
  fullName: SoundEmitter.soundStillPlaying
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.soundStillPlaying</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool soundStillPlaying
    return:
      type: System.Boolean
    content.vb: Public soundStillPlaying As Boolean
- uid: Global.SoundEmitter.lastSoundPlayingFrame
  commentId: F:Global.SoundEmitter.lastSoundPlayingFrame
  id: lastSoundPlayingFrame
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: lastSoundPlayingFrame
  nameWithType: SoundEmitter.lastSoundPlayingFrame
  fullName: SoundEmitter.lastSoundPlayingFrame
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.lastSoundPlayingFrame</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lastSoundPlayingFrame
    return:
      type: System.Int32
    content.vb: Public lastSoundPlayingFrame As Integer
- uid: Global.SoundEmitter.currentSoundObject
  commentId: F:Global.SoundEmitter.currentSoundObject
  id: currentSoundObject
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: currentSoundObject
  nameWithType: SoundEmitter.currentSoundObject
  fullName: SoundEmitter.currentSoundObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.currentSoundObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public VirtualMicrophone.SoundObject currentSoundObject
    return:
      type: Global.VirtualMicrophone.SoundObject
    content.vb: Public currentSoundObject As VirtualMicrophone.SoundObject
- uid: Global.SoundEmitter.volume
  commentId: F:Global.SoundEmitter.volume
  id: volume
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: volume
  nameWithType: SoundEmitter.volume
  fullName: SoundEmitter.volume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.volume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float volume
    return:
      type: System.Single
    content.vb: Public volume As Single
- uid: Global.SoundEmitter.pitch
  commentId: F:Global.SoundEmitter.pitch
  id: pitch
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: pitch
  nameWithType: SoundEmitter.pitch
  fullName: SoundEmitter.pitch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.pitch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pitch
    return:
      type: System.Single
    content.vb: Public pitch As Single
- uid: Global.SoundEmitter.volumeGroup
  commentId: F:Global.SoundEmitter.volumeGroup
  id: volumeGroup
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: volumeGroup
  nameWithType: SoundEmitter.volumeGroup
  fullName: SoundEmitter.volumeGroup
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SoundEmitter.volumeGroup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int volumeGroup
    return:
      type: System.Int32
    content.vb: Public volumeGroup As Integer
- uid: Global.SoundEmitter.#ctor(System.Single,System.Single)
  commentId: M:Global.SoundEmitter.#ctor(System.Single,System.Single)
  id: '#ctor(System.Single,System.Single)'
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: SoundEmitter(float, float)
  nameWithType: SoundEmitter.SoundEmitter(float, float)
  fullName: SoundEmitter.SoundEmitter(float, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SoundEmitter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SoundEmitter(float volume, float pitch)
    parameters:
    - id: volume
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>volume</parameter>
            <parameter>M:SoundEmitter.#ctor(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:SoundEmitter.#ctor(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(volume As Single, pitch As Single)
  overload: Global.SoundEmitter.#ctor*
  nameWithType.vb: SoundEmitter.New(Single, Single)
  fullName.vb: SoundEmitter.New(Single, Single)
  name.vb: New(Single, Single)
- uid: Global.SoundEmitter.Update(System.Boolean)
  commentId: M:Global.SoundEmitter.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: SoundEmitter.Update(bool)
  fullName: SoundEmitter.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundEmitter.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:SoundEmitter.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.SoundEmitter.Update*
  nameWithType.vb: SoundEmitter.Update(Boolean)
  fullName.vb: SoundEmitter.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.SoundEmitter.Destroy
  commentId: M:Global.SoundEmitter.Destroy
  id: Destroy
  parent: Global.SoundEmitter
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: SoundEmitter.Destroy()
  fullName: SoundEmitter.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SoundEmitter.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Destroy()
    content.vb: Public Overrides Sub Destroy()
  overridden: Global.UpdatableAndDeletable.Destroy
  overload: Global.SoundEmitter.Destroy*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.VirtualMicrophone.SoundObject
  commentId: T:Global.VirtualMicrophone.SoundObject
  isExternal: true
  href: VirtualMicrophone.html
  name: VirtualMicrophone.SoundObject
  nameWithType: VirtualMicrophone.SoundObject
  fullName: VirtualMicrophone.SoundObject
  spec.csharp:
  - uid: Global.VirtualMicrophone
    name: VirtualMicrophone
    isExternal: true
    href: VirtualMicrophone.html
  - name: .
  - uid: Global.VirtualMicrophone.SoundObject
    name: SoundObject
    isExternal: true
    href: VirtualMicrophone.SoundObject.html
  spec.vb:
  - uid: Global.VirtualMicrophone
    name: VirtualMicrophone
    isExternal: true
    href: VirtualMicrophone.html
  - name: .
  - uid: Global.VirtualMicrophone.SoundObject
    name: SoundObject
    isExternal: true
    href: VirtualMicrophone.SoundObject.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.SoundEmitter.#ctor*
  commentId: Overload:Global.SoundEmitter.#ctor
  isExternal: true
  href: Global.SoundEmitter.html#SoundEmitter__ctor_System_Single_System_Single_
  name: SoundEmitter
  nameWithType: SoundEmitter.SoundEmitter
  fullName: SoundEmitter.SoundEmitter
  nameWithType.vb: SoundEmitter.New
  fullName.vb: SoundEmitter.New
  name.vb: New
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.SoundEmitter.Update*
  commentId: Overload:Global.SoundEmitter.Update
  isExternal: true
  href: Global.SoundEmitter.html#SoundEmitter_Update_System_Boolean_
  name: Update
  nameWithType: SoundEmitter.Update
  fullName: SoundEmitter.Update
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.SoundEmitter.Destroy*
  commentId: Overload:Global.SoundEmitter.Destroy
  isExternal: true
  href: Global.SoundEmitter.html#SoundEmitter_Destroy
  name: Destroy
  nameWithType: SoundEmitter.Destroy
  fullName: SoundEmitter.Destroy
