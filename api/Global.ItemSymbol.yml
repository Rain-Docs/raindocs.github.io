### YamlMime:ManagedReference
items:
- uid: Global.ItemSymbol
  commentId: T:Global.ItemSymbol
  id: ItemSymbol
  parent: Global
  children:
  - Global.ItemSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  - Global.ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  - Global.ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  - Global.ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)
  - Global.ItemSymbol.itemType
  langs:
  - csharp
  - vb
  name: ItemSymbol
  nameWithType: ItemSymbol
  fullName: ItemSymbol
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ItemSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ItemSymbol : IconSymbol'
    content.vb: Public Class ItemSymbol Inherits IconSymbol
  inheritance:
  - System.Object
  - Global.IconSymbol
  inheritedMembers:
  - Global.IconSymbol.iconData
  - Global.IconSymbol.symbolSprite
  - Global.IconSymbol.shadowSprite1
  - Global.IconSymbol.shadowSprite2
  - Global.IconSymbol.myColor
  - Global.IconSymbol.graphWidth
  - Global.IconSymbol.showFlash
  - Global.IconSymbol.lastShowFlash
  - Global.IconSymbol.spriteName
  - Global.IconSymbol.Update
  - Global.IconSymbol.Show(System.Boolean)
  - Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  - Global.IconSymbol.RemoveSprites
  - Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ItemSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.ItemSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)
  id: '#ctor(IconSymbol.IconSymbolData,FContainer)'
  parent: Global.ItemSymbol
  langs:
  - csharp
  - vb
  name: ItemSymbol(IconSymbolData, FContainer)
  nameWithType: ItemSymbol.ItemSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: ItemSymbol.ItemSymbol(IconSymbol.IconSymbolData, FContainer)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ItemSymbol</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ItemSymbol(IconSymbol.IconSymbolData iconData, FContainer container)
    parameters:
    - id: iconData
      type: Global.IconSymbol.IconSymbolData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iconData</parameter>
            <parameter>M:ItemSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:ItemSymbol.#ctor(IconSymbol.IconSymbolData,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(iconData As IconSymbol.IconSymbolData, container As FContainer)
  overload: Global.ItemSymbol.#ctor*
  nameWithType.vb: ItemSymbol.New(IconSymbol.IconSymbolData, FContainer)
  fullName.vb: ItemSymbol.New(IconSymbol.IconSymbolData, FContainer)
  name.vb: New(IconSymbolData, FContainer)
- uid: Global.ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  commentId: M:Global.ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  id: SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  parent: Global.ItemSymbol
  langs:
  - csharp
  - vb
  name: SpriteNameForItem(AbstractObjectType, int)
  nameWithType: ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType, int)
  fullName: ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType itemType, int intData)
    parameters:
    - id: itemType
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemType</parameter>
            <parameter>M:ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    - id: intData
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intData</parameter>
            <parameter>M:ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SpriteNameForItem(itemType As AbstractPhysicalObject.AbstractObjectType, intData As Integer) As String
  overload: Global.ItemSymbol.SpriteNameForItem*
  nameWithType.vb: ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType, Integer)
  fullName.vb: ItemSymbol.SpriteNameForItem(AbstractPhysicalObject.AbstractObjectType, Integer)
  name.vb: SpriteNameForItem(AbstractObjectType, Integer)
- uid: Global.ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  commentId: M:Global.ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  id: ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)
  parent: Global.ItemSymbol
  langs:
  - csharp
  - vb
  name: ColorForItem(AbstractObjectType, int)
  nameWithType: ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType, int)
  fullName: ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorForItem(AbstractPhysicalObject.AbstractObjectType itemType, int intData)
    parameters:
    - id: itemType
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>itemType</parameter>
            <parameter>M:ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    - id: intData
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intData</parameter>
            <parameter>M:ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorForItem(itemType As AbstractPhysicalObject.AbstractObjectType, intData As Integer) As Color
  overload: Global.ItemSymbol.ColorForItem*
  nameWithType.vb: ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType, Integer)
  fullName.vb: ItemSymbol.ColorForItem(AbstractPhysicalObject.AbstractObjectType, Integer)
  name.vb: ColorForItem(AbstractObjectType, Integer)
- uid: Global.ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)
  commentId: M:Global.ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)
  id: SymbolDataFromItem(AbstractPhysicalObject)
  parent: Global.ItemSymbol
  langs:
  - csharp
  - vb
  name: SymbolDataFromItem(AbstractPhysicalObject)
  nameWithType: ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)
  fullName: ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IconSymbol.IconSymbolData? SymbolDataFromItem(AbstractPhysicalObject item)
    parameters:
    - id: item
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>item</parameter>
            <parameter>M:ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{IconSymbol.IconSymbolData}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ItemSymbol.SymbolDataFromItem(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SymbolDataFromItem(item As AbstractPhysicalObject) As IconSymbol.IconSymbolData?
  overload: Global.ItemSymbol.SymbolDataFromItem*
- uid: Global.ItemSymbol.itemType
  commentId: P:Global.ItemSymbol.itemType
  id: itemType
  parent: Global.ItemSymbol
  langs:
  - csharp
  - vb
  name: itemType
  nameWithType: ItemSymbol.itemType
  fullName: ItemSymbol.itemType
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ItemSymbol.itemType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractPhysicalObject.AbstractObjectType itemType { get; }
    parameters: []
    return:
      type: Global.AbstractPhysicalObject.AbstractObjectType
    content.vb: Public ReadOnly Property itemType As AbstractPhysicalObject.AbstractObjectType
  overload: Global.ItemSymbol.itemType*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.IconSymbol
  commentId: T:Global.IconSymbol
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol
  nameWithType: IconSymbol
  fullName: IconSymbol
- uid: Global.IconSymbol.iconData
  commentId: F:Global.IconSymbol.iconData
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_iconData
  name: iconData
  nameWithType: IconSymbol.iconData
  fullName: IconSymbol.iconData
- uid: Global.IconSymbol.symbolSprite
  commentId: F:Global.IconSymbol.symbolSprite
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_symbolSprite
  name: symbolSprite
  nameWithType: IconSymbol.symbolSprite
  fullName: IconSymbol.symbolSprite
- uid: Global.IconSymbol.shadowSprite1
  commentId: F:Global.IconSymbol.shadowSprite1
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_shadowSprite1
  name: shadowSprite1
  nameWithType: IconSymbol.shadowSprite1
  fullName: IconSymbol.shadowSprite1
- uid: Global.IconSymbol.shadowSprite2
  commentId: F:Global.IconSymbol.shadowSprite2
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_shadowSprite2
  name: shadowSprite2
  nameWithType: IconSymbol.shadowSprite2
  fullName: IconSymbol.shadowSprite2
- uid: Global.IconSymbol.myColor
  commentId: F:Global.IconSymbol.myColor
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_myColor
  name: myColor
  nameWithType: IconSymbol.myColor
  fullName: IconSymbol.myColor
- uid: Global.IconSymbol.graphWidth
  commentId: F:Global.IconSymbol.graphWidth
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_graphWidth
  name: graphWidth
  nameWithType: IconSymbol.graphWidth
  fullName: IconSymbol.graphWidth
- uid: Global.IconSymbol.showFlash
  commentId: F:Global.IconSymbol.showFlash
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_showFlash
  name: showFlash
  nameWithType: IconSymbol.showFlash
  fullName: IconSymbol.showFlash
- uid: Global.IconSymbol.lastShowFlash
  commentId: F:Global.IconSymbol.lastShowFlash
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_lastShowFlash
  name: lastShowFlash
  nameWithType: IconSymbol.lastShowFlash
  fullName: IconSymbol.lastShowFlash
- uid: Global.IconSymbol.spriteName
  commentId: F:Global.IconSymbol.spriteName
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_spriteName
  name: spriteName
  nameWithType: IconSymbol.spriteName
  fullName: IconSymbol.spriteName
- uid: Global.IconSymbol.Update
  commentId: M:Global.IconSymbol.Update
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Update
  name: Update()
  nameWithType: IconSymbol.Update()
  fullName: IconSymbol.Update()
  spec.csharp:
  - uid: Global.IconSymbol.Update
    name: Update
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Update
    name: Update
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Update
  - name: (
  - name: )
- uid: Global.IconSymbol.Show(System.Boolean)
  commentId: M:Global.IconSymbol.Show(System.Boolean)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  name: Show(bool)
  nameWithType: IconSymbol.Show(bool)
  fullName: IconSymbol.Show(bool)
  nameWithType.vb: IconSymbol.Show(Boolean)
  fullName.vb: IconSymbol.Show(Boolean)
  name.vb: Show(Boolean)
  spec.csharp:
  - uid: Global.IconSymbol.Show(System.Boolean)
    name: Show
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Show(System.Boolean)
    name: Show
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Show_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  commentId: M:Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  name: Draw(float, Vector2)
  nameWithType: IconSymbol.Draw(float, Vector2)
  fullName: IconSymbol.Draw(float, UnityEngine.Vector2)
  nameWithType.vb: IconSymbol.Draw(Single, Vector2)
  fullName.vb: IconSymbol.Draw(Single, UnityEngine.Vector2)
  name.vb: Draw(Single, Vector2)
  spec.csharp:
  - uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
    name: Draw
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.Draw(System.Single,UnityEngine.Vector2)
    name: Draw
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_Draw_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.IconSymbol.RemoveSprites
  commentId: M:Global.IconSymbol.RemoveSprites
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  name: RemoveSprites()
  nameWithType: IconSymbol.RemoveSprites()
  fullName: IconSymbol.RemoveSprites()
  spec.csharp:
  - uid: Global.IconSymbol.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_RemoveSprites
  - name: (
  - name: )
- uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  commentId: M:Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
  parent: Global.IconSymbol
  isExternal: true
  href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  name: CreateIconSymbol(IconSymbolData, FContainer)
  nameWithType: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  fullName: IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData, FContainer)
  spec.csharp:
  - uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
    name: CreateIconSymbol
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  - name: (
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IconSymbol.CreateIconSymbol(IconSymbol.IconSymbolData,FContainer)
    name: CreateIconSymbol
    isExternal: true
    href: Global.IconSymbol.html#IconSymbol_CreateIconSymbol_IconSymbol_IconSymbolData_FContainer_
  - name: (
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ItemSymbol.#ctor*
  commentId: Overload:Global.ItemSymbol.#ctor
  isExternal: true
  href: Global.ItemSymbol.html#ItemSymbol__ctor_IconSymbol_IconSymbolData_FContainer_
  name: ItemSymbol
  nameWithType: ItemSymbol.ItemSymbol
  fullName: ItemSymbol.ItemSymbol
  nameWithType.vb: ItemSymbol.New
  fullName.vb: ItemSymbol.New
  name.vb: New
- uid: Global.IconSymbol.IconSymbolData
  commentId: T:Global.IconSymbol.IconSymbolData
  isExternal: true
  href: IconSymbol.html
  name: IconSymbol.IconSymbolData
  nameWithType: IconSymbol.IconSymbolData
  fullName: IconSymbol.IconSymbolData
  spec.csharp:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  spec.vb:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.ItemSymbol.SpriteNameForItem*
  commentId: Overload:Global.ItemSymbol.SpriteNameForItem
  isExternal: true
  href: Global.ItemSymbol.html#ItemSymbol_SpriteNameForItem_AbstractPhysicalObject_AbstractObjectType_System_Int32_
  name: SpriteNameForItem
  nameWithType: ItemSymbol.SpriteNameForItem
  fullName: ItemSymbol.SpriteNameForItem
- uid: Global.AbstractPhysicalObject.AbstractObjectType
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectType
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectType
  nameWithType: AbstractPhysicalObject.AbstractObjectType
  fullName: AbstractPhysicalObject.AbstractObjectType
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ItemSymbol.ColorForItem*
  commentId: Overload:Global.ItemSymbol.ColorForItem
  isExternal: true
  href: Global.ItemSymbol.html#ItemSymbol_ColorForItem_AbstractPhysicalObject_AbstractObjectType_System_Int32_
  name: ColorForItem
  nameWithType: ItemSymbol.ColorForItem
  fullName: ItemSymbol.ColorForItem
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.ItemSymbol.SymbolDataFromItem*
  commentId: Overload:Global.ItemSymbol.SymbolDataFromItem
  isExternal: true
  href: Global.ItemSymbol.html#ItemSymbol_SymbolDataFromItem_AbstractPhysicalObject_
  name: SymbolDataFromItem
  nameWithType: ItemSymbol.SymbolDataFromItem
  fullName: ItemSymbol.SymbolDataFromItem
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: System.Nullable{IconSymbol.IconSymbolData}
  commentId: T:System.Nullable{IconSymbol.IconSymbolData}
  parent: System
  definition: System.Nullable`1
  href: IconSymbol.html
  name: IconSymbol.IconSymbolData?
  nameWithType: IconSymbol.IconSymbolData?
  fullName: IconSymbol.IconSymbolData?
  spec.csharp:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: '?'
  spec.vb:
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.ItemSymbol.itemType*
  commentId: Overload:Global.ItemSymbol.itemType
  isExternal: true
  href: Global.ItemSymbol.html#ItemSymbol_itemType
  name: itemType
  nameWithType: ItemSymbol.itemType
  fullName: ItemSymbol.itemType
