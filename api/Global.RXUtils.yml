### YamlMime:ManagedReference
items:
- uid: Global.RXUtils
  commentId: T:Global.RXUtils
  id: RXUtils
  parent: Global
  children:
  - Global.RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)
  - Global.RXUtils.GetAngle(UnityEngine.Vector2)
  - Global.RXUtils.GetColorFromHex(System.String)
  - Global.RXUtils.GetColorFromHex(System.UInt32)
  - Global.RXUtils.GetRadians(UnityEngine.Vector2)
  - Global.RXUtils.GetVector2FromString(System.String)
  - Global.RXUtils.LogRect(System.String,UnityEngine.Rect)
  - Global.RXUtils.LogVectors(System.String,UnityEngine.Vector2[])
  - Global.RXUtils.LogVectors(System.String,UnityEngine.Vector3[])
  - Global.RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])
  - Global.RXUtils.VectorDetailedToString(UnityEngine.Vector2)
  langs:
  - csharp
  - vb
  name: RXUtils
  nameWithType: RXUtils
  fullName: RXUtils
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXUtils</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class RXUtils
    content.vb: Public Module RXUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXUtils.GetAngle(UnityEngine.Vector2)
  commentId: M:Global.RXUtils.GetAngle(UnityEngine.Vector2)
  id: GetAngle(UnityEngine.Vector2)
  isExtensionMethod: true
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: GetAngle(Vector2)
  nameWithType: RXUtils.GetAngle(Vector2)
  fullName: RXUtils.GetAngle(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.GetAngle(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float GetAngle(this Vector2 vector)
    parameters:
    - id: vector
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vector</parameter>
            <parameter>M:RXUtils.GetAngle(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.GetAngle(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetAngle(vector As Vector2) As Single
  overload: Global.RXUtils.GetAngle*
- uid: Global.RXUtils.GetRadians(UnityEngine.Vector2)
  commentId: M:Global.RXUtils.GetRadians(UnityEngine.Vector2)
  id: GetRadians(UnityEngine.Vector2)
  isExtensionMethod: true
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: GetRadians(Vector2)
  nameWithType: RXUtils.GetRadians(Vector2)
  fullName: RXUtils.GetRadians(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.GetRadians(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float GetRadians(this Vector2 vector)
    parameters:
    - id: vector
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vector</parameter>
            <parameter>M:RXUtils.GetRadians(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.GetRadians(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetRadians(vector As Vector2) As Single
  overload: Global.RXUtils.GetRadians*
- uid: Global.RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)
  commentId: M:Global.RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)
  id: ExpandRect(UnityEngine.Rect,System.Single,System.Single)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: ExpandRect(Rect, float, float)
  nameWithType: RXUtils.ExpandRect(Rect, float, float)
  fullName: RXUtils.ExpandRect(UnityEngine.Rect, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Rect ExpandRect(Rect rect, float paddingX, float paddingY)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: paddingX
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>paddingX</parameter>
            <parameter>M:RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: paddingY
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>paddingY</parameter>
            <parameter>M:RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.ExpandRect(UnityEngine.Rect,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ExpandRect(rect As Rect, paddingX As Single, paddingY As Single) As Rect
  overload: Global.RXUtils.ExpandRect*
  nameWithType.vb: RXUtils.ExpandRect(Rect, Single, Single)
  fullName.vb: RXUtils.ExpandRect(UnityEngine.Rect, Single, Single)
  name.vb: ExpandRect(Rect, Single, Single)
- uid: Global.RXUtils.LogRect(System.String,UnityEngine.Rect)
  commentId: M:Global.RXUtils.LogRect(System.String,UnityEngine.Rect)
  id: LogRect(System.String,UnityEngine.Rect)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: LogRect(string, Rect)
  nameWithType: RXUtils.LogRect(string, Rect)
  fullName: RXUtils.LogRect(string, UnityEngine.Rect)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.LogRect(System.String,UnityEngine.Rect)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LogRect(string name, Rect rect)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXUtils.LogRect(System.String,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:RXUtils.LogRect(System.String,UnityEngine.Rect)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LogRect(name As String, rect As Rect)
  overload: Global.RXUtils.LogRect*
  nameWithType.vb: RXUtils.LogRect(String, Rect)
  fullName.vb: RXUtils.LogRect(String, UnityEngine.Rect)
  name.vb: LogRect(String, Rect)
- uid: Global.RXUtils.LogVectors(System.String,UnityEngine.Vector2[])
  commentId: M:Global.RXUtils.LogVectors(System.String,UnityEngine.Vector2[])
  id: LogVectors(System.String,UnityEngine.Vector2[])
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: LogVectors(string, params Vector2[])
  nameWithType: RXUtils.LogVectors(string, params Vector2[])
  fullName: RXUtils.LogVectors(string, params UnityEngine.Vector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LogVectors(string name, params Vector2[] args)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    - id: args
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LogVectors(name As String, ParamArray args As Vector2())
  overload: Global.RXUtils.LogVectors*
  nameWithType.vb: RXUtils.LogVectors(String, ParamArray Vector2())
  fullName.vb: RXUtils.LogVectors(String, ParamArray UnityEngine.Vector2())
  name.vb: LogVectors(String, ParamArray Vector2())
- uid: Global.RXUtils.LogVectors(System.String,UnityEngine.Vector3[])
  commentId: M:Global.RXUtils.LogVectors(System.String,UnityEngine.Vector3[])
  id: LogVectors(System.String,UnityEngine.Vector3[])
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: LogVectors(string, params Vector3[])
  nameWithType: RXUtils.LogVectors(string, params Vector3[])
  fullName: RXUtils.LogVectors(string, params UnityEngine.Vector3[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector3[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LogVectors(string name, params Vector3[] args)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector3[])</parameter>
          </include>
        </markup>
    - id: args
      type: UnityEngine.Vector3[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:RXUtils.LogVectors(System.String,UnityEngine.Vector3[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LogVectors(name As String, ParamArray args As Vector3())
  overload: Global.RXUtils.LogVectors*
  nameWithType.vb: RXUtils.LogVectors(String, ParamArray Vector3())
  fullName.vb: RXUtils.LogVectors(String, ParamArray UnityEngine.Vector3())
  name.vb: LogVectors(String, ParamArray Vector3())
- uid: Global.RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])
  commentId: M:Global.RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])
  id: LogVectorsDetailed(System.String,UnityEngine.Vector2[])
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: LogVectorsDetailed(string, params Vector2[])
  nameWithType: RXUtils.LogVectorsDetailed(string, params Vector2[])
  fullName: RXUtils.LogVectorsDetailed(string, params UnityEngine.Vector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LogVectorsDetailed(string name, params Vector2[] args)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    - id: args
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:RXUtils.LogVectorsDetailed(System.String,UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LogVectorsDetailed(name As String, ParamArray args As Vector2())
  overload: Global.RXUtils.LogVectorsDetailed*
  nameWithType.vb: RXUtils.LogVectorsDetailed(String, ParamArray Vector2())
  fullName.vb: RXUtils.LogVectorsDetailed(String, ParamArray UnityEngine.Vector2())
  name.vb: LogVectorsDetailed(String, ParamArray Vector2())
- uid: Global.RXUtils.VectorDetailedToString(UnityEngine.Vector2)
  commentId: M:Global.RXUtils.VectorDetailedToString(UnityEngine.Vector2)
  id: VectorDetailedToString(UnityEngine.Vector2)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: VectorDetailedToString(Vector2)
  nameWithType: RXUtils.VectorDetailedToString(Vector2)
  fullName: RXUtils.VectorDetailedToString(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.VectorDetailedToString(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string VectorDetailedToString(Vector2 vector)
    parameters:
    - id: vector
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vector</parameter>
            <parameter>M:RXUtils.VectorDetailedToString(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.VectorDetailedToString(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function VectorDetailedToString(vector As Vector2) As String
  overload: Global.RXUtils.VectorDetailedToString*
- uid: Global.RXUtils.GetColorFromHex(System.UInt32)
  commentId: M:Global.RXUtils.GetColorFromHex(System.UInt32)
  id: GetColorFromHex(System.UInt32)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: GetColorFromHex(uint)
  nameWithType: RXUtils.GetColorFromHex(uint)
  fullName: RXUtils.GetColorFromHex(uint)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.GetColorFromHex(System.UInt32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GetColorFromHex(uint hex)
    parameters:
    - id: hex
      type: System.UInt32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hex</parameter>
            <parameter>M:RXUtils.GetColorFromHex(System.UInt32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.GetColorFromHex(System.UInt32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetColorFromHex(hex As UInteger) As Color
  overload: Global.RXUtils.GetColorFromHex*
  nameWithType.vb: RXUtils.GetColorFromHex(UInteger)
  fullName.vb: RXUtils.GetColorFromHex(UInteger)
  name.vb: GetColorFromHex(UInteger)
- uid: Global.RXUtils.GetColorFromHex(System.String)
  commentId: M:Global.RXUtils.GetColorFromHex(System.String)
  id: GetColorFromHex(System.String)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: GetColorFromHex(string)
  nameWithType: RXUtils.GetColorFromHex(string)
  fullName: RXUtils.GetColorFromHex(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.GetColorFromHex(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GetColorFromHex(string hexString)
    parameters:
    - id: hexString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hexString</parameter>
            <parameter>M:RXUtils.GetColorFromHex(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.GetColorFromHex(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetColorFromHex(hexString As String) As Color
  overload: Global.RXUtils.GetColorFromHex*
  nameWithType.vb: RXUtils.GetColorFromHex(String)
  fullName.vb: RXUtils.GetColorFromHex(String)
  name.vb: GetColorFromHex(String)
- uid: Global.RXUtils.GetVector2FromString(System.String)
  commentId: M:Global.RXUtils.GetVector2FromString(System.String)
  id: GetVector2FromString(System.String)
  parent: Global.RXUtils
  langs:
  - csharp
  - vb
  name: GetVector2FromString(string)
  nameWithType: RXUtils.GetVector2FromString(string)
  fullName: RXUtils.GetVector2FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXUtils.GetVector2FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 GetVector2FromString(string input)
    parameters:
    - id: input
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>input</parameter>
            <parameter>M:RXUtils.GetVector2FromString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXUtils.GetVector2FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetVector2FromString(input As String) As Vector2
  overload: Global.RXUtils.GetVector2FromString*
  nameWithType.vb: RXUtils.GetVector2FromString(String)
  fullName.vb: RXUtils.GetVector2FromString(String)
  name.vb: GetVector2FromString(String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXUtils.GetAngle*
  commentId: Overload:Global.RXUtils.GetAngle
  isExternal: true
  href: Global.RXUtils.html#RXUtils_GetAngle_UnityEngine_Vector2_
  name: GetAngle
  nameWithType: RXUtils.GetAngle
  fullName: RXUtils.GetAngle
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RXUtils.GetRadians*
  commentId: Overload:Global.RXUtils.GetRadians
  isExternal: true
  href: Global.RXUtils.html#RXUtils_GetRadians_UnityEngine_Vector2_
  name: GetRadians
  nameWithType: RXUtils.GetRadians
  fullName: RXUtils.GetRadians
- uid: Global.RXUtils.ExpandRect*
  commentId: Overload:Global.RXUtils.ExpandRect
  isExternal: true
  href: Global.RXUtils.html#RXUtils_ExpandRect_UnityEngine_Rect_System_Single_System_Single_
  name: ExpandRect
  nameWithType: RXUtils.ExpandRect
  fullName: RXUtils.ExpandRect
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.RXUtils.LogRect*
  commentId: Overload:Global.RXUtils.LogRect
  isExternal: true
  href: Global.RXUtils.html#RXUtils_LogRect_System_String_UnityEngine_Rect_
  name: LogRect
  nameWithType: RXUtils.LogRect
  fullName: RXUtils.LogRect
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.RXUtils.LogVectors*
  commentId: Overload:Global.RXUtils.LogVectors
  isExternal: true
  href: Global.RXUtils.html#RXUtils_LogVectors_System_String_UnityEngine_Vector2___
  name: LogVectors
  nameWithType: RXUtils.LogVectors
  fullName: RXUtils.LogVectors
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: UnityEngine.Vector3[]
  isExternal: true
  name: Vector3[]
  nameWithType: Vector3[]
  fullName: UnityEngine.Vector3[]
  nameWithType.vb: Vector3()
  fullName.vb: UnityEngine.Vector3()
  name.vb: Vector3()
  spec.csharp:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector3
    name: Vector3
    isExternal: true
  - name: (
  - name: )
- uid: Global.RXUtils.LogVectorsDetailed*
  commentId: Overload:Global.RXUtils.LogVectorsDetailed
  isExternal: true
  href: Global.RXUtils.html#RXUtils_LogVectorsDetailed_System_String_UnityEngine_Vector2___
  name: LogVectorsDetailed
  nameWithType: RXUtils.LogVectorsDetailed
  fullName: RXUtils.LogVectorsDetailed
- uid: Global.RXUtils.VectorDetailedToString*
  commentId: Overload:Global.RXUtils.VectorDetailedToString
  isExternal: true
  href: Global.RXUtils.html#RXUtils_VectorDetailedToString_UnityEngine_Vector2_
  name: VectorDetailedToString
  nameWithType: RXUtils.VectorDetailedToString
  fullName: RXUtils.VectorDetailedToString
- uid: Global.RXUtils.GetColorFromHex*
  commentId: Overload:Global.RXUtils.GetColorFromHex
  isExternal: true
  href: Global.RXUtils.html#RXUtils_GetColorFromHex_System_UInt32_
  name: GetColorFromHex
  nameWithType: RXUtils.GetColorFromHex
  fullName: RXUtils.GetColorFromHex
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.RXUtils.GetVector2FromString*
  commentId: Overload:Global.RXUtils.GetVector2FromString
  isExternal: true
  href: Global.RXUtils.html#RXUtils_GetVector2FromString_System_String_
  name: GetVector2FromString
  nameWithType: RXUtils.GetVector2FromString
  fullName: RXUtils.GetVector2FromString
