### YamlMime:ManagedReference
items:
- uid: Global.SteamManager
  commentId: T:Global.SteamManager
  id: SteamManager
  parent: Global
  children:
  - Global.SteamManager.#ctor
  - Global.SteamManager.Awake
  - Global.SteamManager.Initialized
  - Global.SteamManager.Instance
  - Global.SteamManager.OnDestroy
  - Global.SteamManager.OnEnable
  - Global.SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)
  - Global.SteamManager.Update
  - Global.SteamManager.m_SteamAPIWarningMessageHook
  - Global.SteamManager.m_bInitialized
  - Global.SteamManager.s_EverInitialized
  - Global.SteamManager.s_instance
  langs:
  - csharp
  - vb
  name: SteamManager
  nameWithType: SteamManager
  fullName: SteamManager
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SteamManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class SteamManager : MonoBehaviour'
    content.vb: Public Class SteamManager Inherits MonoBehaviour
  inheritance:
  - System.Object
- uid: Global.SteamManager.s_EverInitialized
  commentId: F:Global.SteamManager.s_EverInitialized
  id: s_EverInitialized
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: s_EverInitialized
  nameWithType: SteamManager.s_EverInitialized
  fullName: SteamManager.s_EverInitialized
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SteamManager.s_EverInitialized</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static bool s_EverInitialized
    return:
      type: System.Boolean
    content.vb: Protected Shared s_EverInitialized As Boolean
- uid: Global.SteamManager.s_instance
  commentId: F:Global.SteamManager.s_instance
  id: s_instance
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: s_instance
  nameWithType: SteamManager.s_instance
  fullName: SteamManager.s_instance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SteamManager.s_instance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static SteamManager s_instance
    return:
      type: Global.SteamManager
    content.vb: Protected Shared s_instance As SteamManager
- uid: Global.SteamManager.m_bInitialized
  commentId: F:Global.SteamManager.m_bInitialized
  id: m_bInitialized
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: m_bInitialized
  nameWithType: SteamManager.m_bInitialized
  fullName: SteamManager.m_bInitialized
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SteamManager.m_bInitialized</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool m_bInitialized
    return:
      type: System.Boolean
    content.vb: Protected m_bInitialized As Boolean
- uid: Global.SteamManager.m_SteamAPIWarningMessageHook
  commentId: F:Global.SteamManager.m_SteamAPIWarningMessageHook
  id: m_SteamAPIWarningMessageHook
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: m_SteamAPIWarningMessageHook
  nameWithType: SteamManager.m_SteamAPIWarningMessageHook
  fullName: SteamManager.m_SteamAPIWarningMessageHook
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SteamManager.m_SteamAPIWarningMessageHook</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected SteamAPIWarningMessageHook_t m_SteamAPIWarningMessageHook
    return:
      type: Steamworks.SteamAPIWarningMessageHook_t
    content.vb: Protected m_SteamAPIWarningMessageHook As SteamAPIWarningMessageHook_t
- uid: Global.SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)
  commentId: M:Global.SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)
  id: SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: SteamAPIDebugTextHook(int, StringBuilder)
  nameWithType: SteamManager.SteamAPIDebugTextHook(int, StringBuilder)
  fullName: SteamManager.SteamAPIDebugTextHook(int, System.Text.StringBuilder)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static void SteamAPIDebugTextHook(int nSeverity, StringBuilder pchDebugText)
    parameters:
    - id: nSeverity
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>nSeverity</parameter>
            <parameter>M:SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)</parameter>
          </include>
        </markup>
    - id: pchDebugText
      type: System.Text.StringBuilder
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pchDebugText</parameter>
            <parameter>M:SteamManager.SteamAPIDebugTextHook(System.Int32,System.Text.StringBuilder)</parameter>
          </include>
        </markup>
    content.vb: Protected Shared Sub SteamAPIDebugTextHook(nSeverity As Integer, pchDebugText As StringBuilder)
  overload: Global.SteamManager.SteamAPIDebugTextHook*
  nameWithType.vb: SteamManager.SteamAPIDebugTextHook(Integer, StringBuilder)
  fullName.vb: SteamManager.SteamAPIDebugTextHook(Integer, System.Text.StringBuilder)
  name.vb: SteamAPIDebugTextHook(Integer, StringBuilder)
- uid: Global.SteamManager.Awake
  commentId: M:Global.SteamManager.Awake
  id: Awake
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: Awake()
  nameWithType: SteamManager.Awake()
  fullName: SteamManager.Awake()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SteamManager.Awake</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Awake()
    content.vb: Protected Overridable Sub Awake()
  overload: Global.SteamManager.Awake*
- uid: Global.SteamManager.OnEnable
  commentId: M:Global.SteamManager.OnEnable
  id: OnEnable
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: OnEnable()
  nameWithType: SteamManager.OnEnable()
  fullName: SteamManager.OnEnable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SteamManager.OnEnable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void OnEnable()
    content.vb: Protected Overridable Sub OnEnable()
  overload: Global.SteamManager.OnEnable*
- uid: Global.SteamManager.OnDestroy
  commentId: M:Global.SteamManager.OnDestroy
  id: OnDestroy
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: OnDestroy()
  nameWithType: SteamManager.OnDestroy()
  fullName: SteamManager.OnDestroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SteamManager.OnDestroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void OnDestroy()
    content.vb: Protected Overridable Sub OnDestroy()
  overload: Global.SteamManager.OnDestroy*
- uid: Global.SteamManager.Update
  commentId: M:Global.SteamManager.Update
  id: Update
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: SteamManager.Update()
  fullName: SteamManager.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SteamManager.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Update()
    content.vb: Protected Overridable Sub Update()
  overload: Global.SteamManager.Update*
- uid: Global.SteamManager.#ctor
  commentId: M:Global.SteamManager.#ctor
  id: '#ctor'
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: SteamManager()
  nameWithType: SteamManager.SteamManager()
  fullName: SteamManager.SteamManager()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>SteamManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SteamManager()
    content.vb: Public Sub New()
  overload: Global.SteamManager.#ctor*
  nameWithType.vb: SteamManager.New()
  fullName.vb: SteamManager.New()
  name.vb: New()
- uid: Global.SteamManager.Instance
  commentId: P:Global.SteamManager.Instance
  id: Instance
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: SteamManager.Instance
  fullName: SteamManager.Instance
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SteamManager.Instance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static SteamManager Instance { get; }
    parameters: []
    return:
      type: Global.SteamManager
    content.vb: Protected Shared ReadOnly Property Instance As SteamManager
  overload: Global.SteamManager.Instance*
- uid: Global.SteamManager.Initialized
  commentId: P:Global.SteamManager.Initialized
  id: Initialized
  parent: Global.SteamManager
  langs:
  - csharp
  - vb
  name: Initialized
  nameWithType: SteamManager.Initialized
  fullName: SteamManager.Initialized
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:SteamManager.Initialized</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool Initialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property Initialized As Boolean
  overload: Global.SteamManager.Initialized*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SteamManager
  commentId: T:Global.SteamManager
  isExternal: true
  href: SteamManager.html
  name: SteamManager
  nameWithType: SteamManager
  fullName: SteamManager
- uid: Steamworks.SteamAPIWarningMessageHook_t
  commentId: '!:Steamworks.SteamAPIWarningMessageHook_t'
  isExternal: true
  name: SteamAPIWarningMessageHook_t
  nameWithType: SteamAPIWarningMessageHook_t
  fullName: Steamworks.SteamAPIWarningMessageHook_t
- uid: Global.SteamManager.SteamAPIDebugTextHook*
  commentId: Overload:Global.SteamManager.SteamAPIDebugTextHook
  isExternal: true
  href: Global.SteamManager.html#SteamManager_SteamAPIDebugTextHook_System_Int32_System_Text_StringBuilder_
  name: SteamAPIDebugTextHook
  nameWithType: SteamManager.SteamAPIDebugTextHook
  fullName: SteamManager.SteamAPIDebugTextHook
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: Global.SteamManager.Awake*
  commentId: Overload:Global.SteamManager.Awake
  isExternal: true
  href: Global.SteamManager.html#SteamManager_Awake
  name: Awake
  nameWithType: SteamManager.Awake
  fullName: SteamManager.Awake
- uid: Global.SteamManager.OnEnable*
  commentId: Overload:Global.SteamManager.OnEnable
  isExternal: true
  href: Global.SteamManager.html#SteamManager_OnEnable
  name: OnEnable
  nameWithType: SteamManager.OnEnable
  fullName: SteamManager.OnEnable
- uid: Global.SteamManager.OnDestroy*
  commentId: Overload:Global.SteamManager.OnDestroy
  isExternal: true
  href: Global.SteamManager.html#SteamManager_OnDestroy
  name: OnDestroy
  nameWithType: SteamManager.OnDestroy
  fullName: SteamManager.OnDestroy
- uid: Global.SteamManager.Update*
  commentId: Overload:Global.SteamManager.Update
  isExternal: true
  href: Global.SteamManager.html#SteamManager_Update
  name: Update
  nameWithType: SteamManager.Update
  fullName: SteamManager.Update
- uid: Global.SteamManager.#ctor*
  commentId: Overload:Global.SteamManager.#ctor
  isExternal: true
  href: Global.SteamManager.html#SteamManager__ctor
  name: SteamManager
  nameWithType: SteamManager.SteamManager
  fullName: SteamManager.SteamManager
  nameWithType.vb: SteamManager.New
  fullName.vb: SteamManager.New
  name.vb: New
- uid: Global.SteamManager.Instance*
  commentId: Overload:Global.SteamManager.Instance
  isExternal: true
  href: Global.SteamManager.html#SteamManager_Instance
  name: Instance
  nameWithType: SteamManager.Instance
  fullName: SteamManager.Instance
- uid: Global.SteamManager.Initialized*
  commentId: Overload:Global.SteamManager.Initialized
  isExternal: true
  href: Global.SteamManager.html#SteamManager_Initialized
  name: Initialized
  nameWithType: SteamManager.Initialized
  fullName: SteamManager.Initialized
