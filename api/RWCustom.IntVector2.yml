### YamlMime:ManagedReference
items:
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  id: IntVector2
  parent: RWCustom
  children:
  - RWCustom.IntVector2.#ctor(System.Int32,System.Int32)
  - RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)
  - RWCustom.IntVector2.Equals(RWCustom.IntVector2)
  - RWCustom.IntVector2.Equals(System.Object)
  - RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)
  - RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)
  - RWCustom.IntVector2.GetHashCode
  - RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)
  - RWCustom.IntVector2.ToString
  - RWCustom.IntVector2.ToVector2
  - RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)
  - RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)
  - RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)
  - RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)
  - RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)
  - RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)
  - RWCustom.IntVector2.x
  - RWCustom.IntVector2.y
  langs:
  - csharp
  - vb
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RWCustom.IntVector2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct IntVector2
    content.vb: Public Structure IntVector2
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: RWCustom.IntVector2.x
  commentId: F:RWCustom.IntVector2.x
  id: x
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: x
  nameWithType: IntVector2.x
  fullName: RWCustom.IntVector2.x
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RWCustom.IntVector2.x</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int x
    return:
      type: System.Int32
    content.vb: Public x As Integer
- uid: RWCustom.IntVector2.y
  commentId: F:RWCustom.IntVector2.y
  id: y
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: y
  nameWithType: IntVector2.y
  fullName: RWCustom.IntVector2.y
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RWCustom.IntVector2.y</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int y
    return:
      type: System.Int32
    content.vb: Public y As Integer
- uid: RWCustom.IntVector2.#ctor(System.Int32,System.Int32)
  commentId: M:RWCustom.IntVector2.#ctor(System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32)'
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: IntVector2(int, int)
  nameWithType: IntVector2.IntVector2(int, int)
  fullName: RWCustom.IntVector2.IntVector2(int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RWCustom.IntVector2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2(int p1, int p2)
    parameters:
    - id: p1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p1</parameter>
            <parameter>M:RWCustom.IntVector2.#ctor(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: p2
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p2</parameter>
            <parameter>M:RWCustom.IntVector2.#ctor(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(p1 As Integer, p2 As Integer)
  overload: RWCustom.IntVector2.#ctor*
  nameWithType.vb: IntVector2.New(Integer, Integer)
  fullName.vb: RWCustom.IntVector2.New(Integer, Integer)
  name.vb: New(Integer, Integer)
- uid: RWCustom.IntVector2.Equals(System.Object)
  commentId: M:RWCustom.IntVector2.Equals(System.Object)
  id: Equals(System.Object)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: IntVector2.Equals(object)
  fullName: RWCustom.IntVector2.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:RWCustom.IntVector2.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: RWCustom.IntVector2.Equals*
  nameWithType.vb: IntVector2.Equals(Object)
  fullName.vb: RWCustom.IntVector2.Equals(Object)
  name.vb: Equals(Object)
- uid: RWCustom.IntVector2.Equals(RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.Equals(RWCustom.IntVector2)
  id: Equals(RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: Equals(IntVector2)
  nameWithType: IntVector2.Equals(IntVector2)
  fullName: RWCustom.IntVector2.Equals(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.Equals(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(IntVector2 vector)
    parameters:
    - id: vector
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vector</parameter>
            <parameter>M:RWCustom.IntVector2.Equals(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.Equals(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(vector As IntVector2) As Boolean
  overload: RWCustom.IntVector2.Equals*
- uid: RWCustom.IntVector2.GetHashCode
  commentId: M:RWCustom.IntVector2.GetHashCode
  id: GetHashCode
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: IntVector2.GetHashCode()
  fullName: RWCustom.IntVector2.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: RWCustom.IntVector2.GetHashCode*
- uid: RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)
  id: op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: operator +(IntVector2, IntVector2)
  nameWithType: IntVector2.operator +(IntVector2, IntVector2)
  fullName: RWCustom.IntVector2.operator +(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 operator +(IntVector2 a, IntVector2 b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.op_Addition(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator +(a As IntVector2, b As IntVector2) As IntVector2
  overload: RWCustom.IntVector2.op_Addition*
  nameWithType.vb: IntVector2.+(IntVector2, IntVector2)
  fullName.vb: RWCustom.IntVector2.+(RWCustom.IntVector2, RWCustom.IntVector2)
  name.vb: +(IntVector2, IntVector2)
- uid: RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)
  id: op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: operator -(IntVector2, IntVector2)
  nameWithType: IntVector2.operator -(IntVector2, IntVector2)
  fullName: RWCustom.IntVector2.operator -(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 operator -(IntVector2 a, IntVector2 b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.op_Subtraction(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator -(a As IntVector2, b As IntVector2) As IntVector2
  overload: RWCustom.IntVector2.op_Subtraction*
  nameWithType.vb: IntVector2.-(IntVector2, IntVector2)
  fullName.vb: RWCustom.IntVector2.-(RWCustom.IntVector2, RWCustom.IntVector2)
  name.vb: -(IntVector2, IntVector2)
- uid: RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)
  id: ToVector2(RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: ToVector2(IntVector2)
  nameWithType: IntVector2.ToVector2(IntVector2)
  fullName: RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 ToVector2(IntVector2 a)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.ToVector2(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ToVector2(a As IntVector2) As Vector2
  overload: RWCustom.IntVector2.ToVector2*
- uid: RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)
  commentId: M:RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)
  id: op_Multiply(RWCustom.IntVector2,System.Int32)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: operator *(IntVector2, int)
  nameWithType: IntVector2.operator *(IntVector2, int)
  fullName: RWCustom.IntVector2.operator *(RWCustom.IntVector2, int)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 operator *(IntVector2 a, int b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: b
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.op_Multiply(RWCustom.IntVector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator *(a As IntVector2, b As Integer) As IntVector2
  overload: RWCustom.IntVector2.op_Multiply*
  nameWithType.vb: IntVector2.*(IntVector2, Integer)
  fullName.vb: RWCustom.IntVector2.*(RWCustom.IntVector2, Integer)
  name.vb: '*(IntVector2, Integer)'
- uid: RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)
  id: op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: operator ==(IntVector2, IntVector2)
  nameWithType: IntVector2.operator ==(IntVector2, IntVector2)
  fullName: RWCustom.IntVector2.operator ==(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(IntVector2 a, IntVector2 b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.op_Equality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(a As IntVector2, b As IntVector2) As Boolean
  overload: RWCustom.IntVector2.op_Equality*
  nameWithType.vb: IntVector2.=(IntVector2, IntVector2)
  fullName.vb: RWCustom.IntVector2.=(RWCustom.IntVector2, RWCustom.IntVector2)
  name.vb: =(IntVector2, IntVector2)
- uid: RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)
  id: op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: operator !=(IntVector2, IntVector2)
  nameWithType: IntVector2.operator !=(IntVector2, IntVector2)
  fullName: RWCustom.IntVector2.operator !=(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(IntVector2 a, IntVector2 b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.op_Inequality(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(a As IntVector2, b As IntVector2) As Boolean
  overload: RWCustom.IntVector2.op_Inequality*
  nameWithType.vb: IntVector2.<>(IntVector2, IntVector2)
  fullName.vb: RWCustom.IntVector2.<>(RWCustom.IntVector2, RWCustom.IntVector2)
  name.vb: <>(IntVector2, IntVector2)
- uid: RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)
  id: ClampAtOne(RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: ClampAtOne(IntVector2)
  nameWithType: IntVector2.ClampAtOne(IntVector2)
  fullName: RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 ClampAtOne(IntVector2 a)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.ClampAtOne(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ClampAtOne(a As IntVector2) As IntVector2
  overload: RWCustom.IntVector2.ClampAtOne*
- uid: RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: RectClamp(IntVector2, int, int, int, int)
  nameWithType: IntVector2.RectClamp(IntVector2, int, int, int, int)
  fullName: RWCustom.IntVector2.RectClamp(RWCustom.IntVector2, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 RectClamp(IntVector2 vec, int left, int bottom, int right, int top)
    parameters:
    - id: vec
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vec</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: left
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>left</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: bottom
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bottom</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: right
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>right</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: top
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>top</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.RectClamp(RWCustom.IntVector2,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RectClamp(vec As IntVector2, left As Integer, bottom As Integer, right As Integer, top As Integer) As IntVector2
  overload: RWCustom.IntVector2.RectClamp*
  nameWithType.vb: IntVector2.RectClamp(IntVector2, Integer, Integer, Integer, Integer)
  fullName.vb: RWCustom.IntVector2.RectClamp(RWCustom.IntVector2, Integer, Integer, Integer, Integer)
  name.vb: RectClamp(IntVector2, Integer, Integer, Integer, Integer)
- uid: RWCustom.IntVector2.ToVector2
  commentId: M:RWCustom.IntVector2.ToVector2
  id: ToVector2
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: ToVector2()
  nameWithType: IntVector2.ToVector2()
  fullName: RWCustom.IntVector2.ToVector2()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.ToVector2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ToVector2()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.ToVector2</parameter>
          </include>
        </markup>
    content.vb: Public Function ToVector2() As Vector2
  overload: RWCustom.IntVector2.ToVector2*
- uid: RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)
  commentId: M:RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)
  id: FromVector2(UnityEngine.Vector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: FromVector2(Vector2)
  nameWithType: IntVector2.FromVector2(Vector2)
  fullName: RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 FromVector2(Vector2 v)
    parameters:
    - id: v
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>v</parameter>
            <parameter>M:RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.FromVector2(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FromVector2(v As Vector2) As IntVector2
  overload: RWCustom.IntVector2.FromVector2*
- uid: RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)
  commentId: M:RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)
  id: FloatDist(RWCustom.IntVector2)
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: FloatDist(IntVector2)
  nameWithType: IntVector2.FloatDist(IntVector2)
  fullName: RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float FloatDist(IntVector2 otherVector)
    parameters:
    - id: otherVector
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>otherVector</parameter>
            <parameter>M:RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.FloatDist(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function FloatDist(otherVector As IntVector2) As Single
  overload: RWCustom.IntVector2.FloatDist*
- uid: RWCustom.IntVector2.ToString
  commentId: M:RWCustom.IntVector2.ToString
  id: ToString
  parent: RWCustom.IntVector2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: IntVector2.ToString()
  fullName: RWCustom.IntVector2.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: RWCustom
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RWCustom.IntVector2.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RWCustom.IntVector2.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: RWCustom.IntVector2.ToString*
references:
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RWCustom.IntVector2.#ctor*
  commentId: Overload:RWCustom.IntVector2.#ctor
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2__ctor_System_Int32_System_Int32_
  name: IntVector2
  nameWithType: IntVector2.IntVector2
  fullName: RWCustom.IntVector2.IntVector2
  nameWithType.vb: IntVector2.New
  fullName.vb: RWCustom.IntVector2.New
  name.vb: New
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: RWCustom.IntVector2.Equals*
  commentId: Overload:RWCustom.IntVector2.Equals
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_Equals_System_Object_
  name: Equals
  nameWithType: IntVector2.Equals
  fullName: RWCustom.IntVector2.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: RWCustom.IntVector2.GetHashCode*
  commentId: Overload:RWCustom.IntVector2.GetHashCode
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_GetHashCode
  name: GetHashCode
  nameWithType: IntVector2.GetHashCode
  fullName: RWCustom.IntVector2.GetHashCode
- uid: RWCustom.IntVector2.op_Addition*
  commentId: Overload:RWCustom.IntVector2.op_Addition
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Addition_RWCustom_IntVector2_RWCustom_IntVector2_
  name: operator +
  nameWithType: IntVector2.operator +
  fullName: RWCustom.IntVector2.operator +
  nameWithType.vb: IntVector2.+
  fullName.vb: RWCustom.IntVector2.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RWCustom.IntVector2.op_Addition*
    name: +
    isExternal: true
    href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Addition_RWCustom_IntVector2_RWCustom_IntVector2_
- uid: RWCustom.IntVector2.op_Subtraction*
  commentId: Overload:RWCustom.IntVector2.op_Subtraction
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Subtraction_RWCustom_IntVector2_RWCustom_IntVector2_
  name: operator -
  nameWithType: IntVector2.operator -
  fullName: RWCustom.IntVector2.operator -
  nameWithType.vb: IntVector2.-
  fullName.vb: RWCustom.IntVector2.-
  name.vb: '-'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RWCustom.IntVector2.op_Subtraction*
    name: '-'
    isExternal: true
    href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Subtraction_RWCustom_IntVector2_RWCustom_IntVector2_
- uid: RWCustom.IntVector2.ToVector2*
  commentId: Overload:RWCustom.IntVector2.ToVector2
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_ToVector2_RWCustom_IntVector2_
  name: ToVector2
  nameWithType: IntVector2.ToVector2
  fullName: RWCustom.IntVector2.ToVector2
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: RWCustom.IntVector2.op_Multiply*
  commentId: Overload:RWCustom.IntVector2.op_Multiply
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Multiply_RWCustom_IntVector2_System_Int32_
  name: operator *
  nameWithType: IntVector2.operator *
  fullName: RWCustom.IntVector2.operator *
  nameWithType.vb: IntVector2.*
  fullName.vb: RWCustom.IntVector2.*
  name.vb: '*'
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RWCustom.IntVector2.op_Multiply*
    name: '*'
    isExternal: true
    href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Multiply_RWCustom_IntVector2_System_Int32_
- uid: RWCustom.IntVector2.op_Equality*
  commentId: Overload:RWCustom.IntVector2.op_Equality
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Equality_RWCustom_IntVector2_RWCustom_IntVector2_
  name: operator ==
  nameWithType: IntVector2.operator ==
  fullName: RWCustom.IntVector2.operator ==
  nameWithType.vb: IntVector2.=
  fullName.vb: RWCustom.IntVector2.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RWCustom.IntVector2.op_Equality*
    name: ==
    isExternal: true
    href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Equality_RWCustom_IntVector2_RWCustom_IntVector2_
- uid: RWCustom.IntVector2.op_Inequality*
  commentId: Overload:RWCustom.IntVector2.op_Inequality
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Inequality_RWCustom_IntVector2_RWCustom_IntVector2_
  name: operator !=
  nameWithType: IntVector2.operator !=
  fullName: RWCustom.IntVector2.operator !=
  nameWithType.vb: IntVector2.<>
  fullName.vb: RWCustom.IntVector2.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: RWCustom.IntVector2.op_Inequality*
    name: '!='
    isExternal: true
    href: RWCustom.IntVector2.html#RWCustom_IntVector2_op_Inequality_RWCustom_IntVector2_RWCustom_IntVector2_
- uid: RWCustom.IntVector2.ClampAtOne*
  commentId: Overload:RWCustom.IntVector2.ClampAtOne
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_ClampAtOne_RWCustom_IntVector2_
  name: ClampAtOne
  nameWithType: IntVector2.ClampAtOne
  fullName: RWCustom.IntVector2.ClampAtOne
- uid: RWCustom.IntVector2.RectClamp*
  commentId: Overload:RWCustom.IntVector2.RectClamp
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_RectClamp_RWCustom_IntVector2_System_Int32_System_Int32_System_Int32_System_Int32_
  name: RectClamp
  nameWithType: IntVector2.RectClamp
  fullName: RWCustom.IntVector2.RectClamp
- uid: RWCustom.IntVector2.FromVector2*
  commentId: Overload:RWCustom.IntVector2.FromVector2
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_FromVector2_UnityEngine_Vector2_
  name: FromVector2
  nameWithType: IntVector2.FromVector2
  fullName: RWCustom.IntVector2.FromVector2
- uid: RWCustom.IntVector2.FloatDist*
  commentId: Overload:RWCustom.IntVector2.FloatDist
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_FloatDist_RWCustom_IntVector2_
  name: FloatDist
  nameWithType: IntVector2.FloatDist
  fullName: RWCustom.IntVector2.FloatDist
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: RWCustom.IntVector2.ToString*
  commentId: Overload:RWCustom.IntVector2.ToString
  isExternal: true
  href: RWCustom.IntVector2.html#RWCustom_IntVector2_ToString
  name: ToString
  nameWithType: IntVector2.ToString
  fullName: RWCustom.IntVector2.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
