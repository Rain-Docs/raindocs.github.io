### YamlMime:ManagedReference
items:
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  id: WorldCoordinate
  parent: Global
  children:
  - Global.WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  - Global.WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)
  - Global.WorldCoordinate.CompareDisregardingNode(WorldCoordinate)
  - Global.WorldCoordinate.CompareDisregardingTile(WorldCoordinate)
  - Global.WorldCoordinate.Equals(System.Nullable{WorldCoordinate})
  - Global.WorldCoordinate.Equals(System.Object)
  - Global.WorldCoordinate.Equals(WorldCoordinate)
  - Global.WorldCoordinate.FromString(System.String)
  - Global.WorldCoordinate.GetHashCode
  - Global.WorldCoordinate.NodeDefined
  - Global.WorldCoordinate.ResolveRoomName
  - Global.WorldCoordinate.SaveToString
  - Global.WorldCoordinate.Tile
  - Global.WorldCoordinate.TileDefined
  - Global.WorldCoordinate.ToString
  - Global.WorldCoordinate.Valid
  - Global.WorldCoordinate.WashNode
  - Global.WorldCoordinate.WashTileData
  - Global.WorldCoordinate.abstractNode
  - Global.WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)
  - Global.WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)
  - Global.WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)
  - Global.WorldCoordinate.room
  - Global.WorldCoordinate.unknownName
  - Global.WorldCoordinate.x
  - Global.WorldCoordinate.y
  langs:
  - csharp
  - vb
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:WorldCoordinate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct WorldCoordinate
    content.vb: Public Structure WorldCoordinate
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.WorldCoordinate.x
  commentId: F:Global.WorldCoordinate.x
  id: x
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: x
  nameWithType: WorldCoordinate.x
  fullName: WorldCoordinate.x
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:WorldCoordinate.x</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int x
    return:
      type: System.Int32
    content.vb: Public x As Integer
- uid: Global.WorldCoordinate.y
  commentId: F:Global.WorldCoordinate.y
  id: y
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: y
  nameWithType: WorldCoordinate.y
  fullName: WorldCoordinate.y
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:WorldCoordinate.y</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int y
    return:
      type: System.Int32
    content.vb: Public y As Integer
- uid: Global.WorldCoordinate.room
  commentId: F:Global.WorldCoordinate.room
  id: room
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: room
  nameWithType: WorldCoordinate.room
  fullName: WorldCoordinate.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:WorldCoordinate.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int room
    return:
      type: System.Int32
    content.vb: Public room As Integer
- uid: Global.WorldCoordinate.abstractNode
  commentId: F:Global.WorldCoordinate.abstractNode
  id: abstractNode
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: abstractNode
  nameWithType: WorldCoordinate.abstractNode
  fullName: WorldCoordinate.abstractNode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:WorldCoordinate.abstractNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int abstractNode
    return:
      type: System.Int32
    content.vb: Public abstractNode As Integer
- uid: Global.WorldCoordinate.unknownName
  commentId: F:Global.WorldCoordinate.unknownName
  id: unknownName
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: unknownName
  nameWithType: WorldCoordinate.unknownName
  fullName: WorldCoordinate.unknownName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:WorldCoordinate.unknownName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string unknownName
    return:
      type: System.String
    content.vb: Public unknownName As String
- uid: Global.WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: WorldCoordinate(int, int, int, int)
  nameWithType: WorldCoordinate.WorldCoordinate(int, int, int, int)
  fullName: WorldCoordinate.WorldCoordinate(int, int, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>WorldCoordinate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate(int room, int x, int y, int abstractNode)
    parameters:
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: abstractNode
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractNode</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(room As Integer, x As Integer, y As Integer, abstractNode As Integer)
  overload: Global.WorldCoordinate.#ctor*
  nameWithType.vb: WorldCoordinate.New(Integer, Integer, Integer, Integer)
  fullName.vb: WorldCoordinate.New(Integer, Integer, Integer, Integer)
  name.vb: New(Integer, Integer, Integer, Integer)
- uid: Global.WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32)'
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: WorldCoordinate(string, int, int, int)
  nameWithType: WorldCoordinate.WorldCoordinate(string, int, int, int)
  fullName: WorldCoordinate.WorldCoordinate(string, int, int, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>WorldCoordinate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate(string unknownRoom, int x, int y, int abstractNode)
    parameters:
    - id: unknownRoom
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unknownRoom</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: abstractNode
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractNode</parameter>
            <parameter>M:WorldCoordinate.#ctor(System.String,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(unknownRoom As String, x As Integer, y As Integer, abstractNode As Integer)
  overload: Global.WorldCoordinate.#ctor*
  nameWithType.vb: WorldCoordinate.New(String, Integer, Integer, Integer)
  fullName.vb: WorldCoordinate.New(String, Integer, Integer, Integer)
  name.vb: New(String, Integer, Integer, Integer)
- uid: Global.WorldCoordinate.CompareDisregardingTile(WorldCoordinate)
  commentId: M:Global.WorldCoordinate.CompareDisregardingTile(WorldCoordinate)
  id: CompareDisregardingTile(WorldCoordinate)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: CompareDisregardingTile(WorldCoordinate)
  nameWithType: WorldCoordinate.CompareDisregardingTile(WorldCoordinate)
  fullName: WorldCoordinate.CompareDisregardingTile(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.CompareDisregardingTile(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CompareDisregardingTile(WorldCoordinate other)
    parameters:
    - id: other
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:WorldCoordinate.CompareDisregardingTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.CompareDisregardingTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CompareDisregardingTile(other As WorldCoordinate) As Boolean
  overload: Global.WorldCoordinate.CompareDisregardingTile*
- uid: Global.WorldCoordinate.CompareDisregardingNode(WorldCoordinate)
  commentId: M:Global.WorldCoordinate.CompareDisregardingNode(WorldCoordinate)
  id: CompareDisregardingNode(WorldCoordinate)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: CompareDisregardingNode(WorldCoordinate)
  nameWithType: WorldCoordinate.CompareDisregardingNode(WorldCoordinate)
  fullName: WorldCoordinate.CompareDisregardingNode(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.CompareDisregardingNode(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CompareDisregardingNode(WorldCoordinate other)
    parameters:
    - id: other
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>other</parameter>
            <parameter>M:WorldCoordinate.CompareDisregardingNode(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.CompareDisregardingNode(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function CompareDisregardingNode(other As WorldCoordinate) As Boolean
  overload: Global.WorldCoordinate.CompareDisregardingNode*
- uid: Global.WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)
  commentId: M:Global.WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)
  id: AddIntVector(WorldCoordinate,RWCustom.IntVector2)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: AddIntVector(WorldCoordinate, IntVector2)
  nameWithType: WorldCoordinate.AddIntVector(WorldCoordinate, IntVector2)
  fullName: WorldCoordinate.AddIntVector(WorldCoordinate, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static WorldCoordinate AddIntVector(WorldCoordinate wc, IntVector2 iv)
    parameters:
    - id: wc
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wc</parameter>
            <parameter>M:WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: iv
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iv</parameter>
            <parameter>M:WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.AddIntVector(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function AddIntVector(wc As WorldCoordinate, iv As IntVector2) As WorldCoordinate
  overload: Global.WorldCoordinate.AddIntVector*
- uid: Global.WorldCoordinate.WashTileData
  commentId: M:Global.WorldCoordinate.WashTileData
  id: WashTileData
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: WashTileData()
  nameWithType: WorldCoordinate.WashTileData()
  fullName: WorldCoordinate.WashTileData()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.WashTileData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate WashTileData()
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.WashTileData</parameter>
          </include>
        </markup>
    content.vb: Public Function WashTileData() As WorldCoordinate
  overload: Global.WorldCoordinate.WashTileData*
- uid: Global.WorldCoordinate.WashNode
  commentId: M:Global.WorldCoordinate.WashNode
  id: WashNode
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: WashNode()
  nameWithType: WorldCoordinate.WashNode()
  fullName: WorldCoordinate.WashNode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.WashNode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate WashNode()
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.WashNode</parameter>
          </include>
        </markup>
    content.vb: Public Function WashNode() As WorldCoordinate
  overload: Global.WorldCoordinate.WashNode*
- uid: Global.WorldCoordinate.Equals(System.Object)
  commentId: M:Global.WorldCoordinate.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: WorldCoordinate.Equals(object)
  fullName: WorldCoordinate.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:WorldCoordinate.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Global.WorldCoordinate.Equals*
  nameWithType.vb: WorldCoordinate.Equals(Object)
  fullName.vb: WorldCoordinate.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.WorldCoordinate.Equals(WorldCoordinate)
  commentId: M:Global.WorldCoordinate.Equals(WorldCoordinate)
  id: Equals(WorldCoordinate)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: Equals(WorldCoordinate)
  nameWithType: WorldCoordinate.Equals(WorldCoordinate)
  fullName: WorldCoordinate.Equals(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.Equals(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:WorldCoordinate.Equals(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.Equals(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(coord As WorldCoordinate) As Boolean
  overload: Global.WorldCoordinate.Equals*
- uid: Global.WorldCoordinate.Equals(System.Nullable{WorldCoordinate})
  commentId: M:Global.WorldCoordinate.Equals(System.Nullable{WorldCoordinate})
  id: Equals(System.Nullable{WorldCoordinate})
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: Equals(WorldCoordinate?)
  nameWithType: WorldCoordinate.Equals(WorldCoordinate?)
  fullName: WorldCoordinate.Equals(WorldCoordinate?)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.Equals(System.Nullable{WorldCoordinate})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(WorldCoordinate? coord)
    parameters:
    - id: coord
      type: System.Nullable{WorldCoordinate}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:WorldCoordinate.Equals(System.Nullable{WorldCoordinate})</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.Equals(System.Nullable{WorldCoordinate})</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(coord As WorldCoordinate?) As Boolean
  overload: Global.WorldCoordinate.Equals*
- uid: Global.WorldCoordinate.GetHashCode
  commentId: M:Global.WorldCoordinate.GetHashCode
  id: GetHashCode
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: WorldCoordinate.GetHashCode()
  fullName: WorldCoordinate.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Global.WorldCoordinate.GetHashCode*
- uid: Global.WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)
  commentId: M:Global.WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)
  id: op_Equality(WorldCoordinate,WorldCoordinate)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: operator ==(WorldCoordinate, WorldCoordinate)
  nameWithType: WorldCoordinate.operator ==(WorldCoordinate, WorldCoordinate)
  fullName: WorldCoordinate.operator ==(WorldCoordinate, WorldCoordinate)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(WorldCoordinate a, WorldCoordinate b)
    parameters:
    - id: a
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.op_Equality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(a As WorldCoordinate, b As WorldCoordinate) As Boolean
  overload: Global.WorldCoordinate.op_Equality*
  nameWithType.vb: WorldCoordinate.=(WorldCoordinate, WorldCoordinate)
  fullName.vb: WorldCoordinate.=(WorldCoordinate, WorldCoordinate)
  name.vb: =(WorldCoordinate, WorldCoordinate)
- uid: Global.WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)
  commentId: M:Global.WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)
  id: op_Inequality(WorldCoordinate,WorldCoordinate)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: operator !=(WorldCoordinate, WorldCoordinate)
  nameWithType: WorldCoordinate.operator !=(WorldCoordinate, WorldCoordinate)
  fullName: WorldCoordinate.operator !=(WorldCoordinate, WorldCoordinate)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(WorldCoordinate a, WorldCoordinate b)
    parameters:
    - id: a
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.op_Inequality(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(a As WorldCoordinate, b As WorldCoordinate) As Boolean
  overload: Global.WorldCoordinate.op_Inequality*
  nameWithType.vb: WorldCoordinate.<>(WorldCoordinate, WorldCoordinate)
  fullName.vb: WorldCoordinate.<>(WorldCoordinate, WorldCoordinate)
  name.vb: <>(WorldCoordinate, WorldCoordinate)
- uid: Global.WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)
  commentId: M:Global.WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)
  id: op_Addition(WorldCoordinate,RWCustom.IntVector2)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: operator +(WorldCoordinate, IntVector2)
  nameWithType: WorldCoordinate.operator +(WorldCoordinate, IntVector2)
  fullName: WorldCoordinate.operator +(WorldCoordinate, RWCustom.IntVector2)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static WorldCoordinate operator +(WorldCoordinate a, IntVector2 b)
    parameters:
    - id: a
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.op_Addition(WorldCoordinate,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator +(a As WorldCoordinate, b As IntVector2) As WorldCoordinate
  overload: Global.WorldCoordinate.op_Addition*
  nameWithType.vb: WorldCoordinate.+(WorldCoordinate, IntVector2)
  fullName.vb: WorldCoordinate.+(WorldCoordinate, RWCustom.IntVector2)
  name.vb: +(WorldCoordinate, IntVector2)
- uid: Global.WorldCoordinate.ToString
  commentId: M:Global.WorldCoordinate.ToString
  id: ToString
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: WorldCoordinate.ToString()
  fullName: WorldCoordinate.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Global.WorldCoordinate.ToString*
- uid: Global.WorldCoordinate.SaveToString
  commentId: M:Global.WorldCoordinate.SaveToString
  id: SaveToString
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: SaveToString()
  nameWithType: WorldCoordinate.SaveToString()
  fullName: WorldCoordinate.SaveToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.SaveToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string SaveToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.SaveToString</parameter>
          </include>
        </markup>
    content.vb: Public Function SaveToString() As String
  overload: Global.WorldCoordinate.SaveToString*
- uid: Global.WorldCoordinate.FromString(System.String)
  commentId: M:Global.WorldCoordinate.FromString(System.String)
  id: FromString(System.String)
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: WorldCoordinate.FromString(string)
  fullName: WorldCoordinate.FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static WorldCoordinate FromString(string s)
    parameters:
    - id: s
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>s</parameter>
            <parameter>M:WorldCoordinate.FromString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FromString(s As String) As WorldCoordinate
  overload: Global.WorldCoordinate.FromString*
  nameWithType.vb: WorldCoordinate.FromString(String)
  fullName.vb: WorldCoordinate.FromString(String)
  name.vb: FromString(String)
- uid: Global.WorldCoordinate.ResolveRoomName
  commentId: M:Global.WorldCoordinate.ResolveRoomName
  id: ResolveRoomName
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: ResolveRoomName()
  nameWithType: WorldCoordinate.ResolveRoomName()
  fullName: WorldCoordinate.ResolveRoomName()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:WorldCoordinate.ResolveRoomName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string ResolveRoomName()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:WorldCoordinate.ResolveRoomName</parameter>
          </include>
        </markup>
    content.vb: Public Function ResolveRoomName() As String
  overload: Global.WorldCoordinate.ResolveRoomName*
- uid: Global.WorldCoordinate.TileDefined
  commentId: P:Global.WorldCoordinate.TileDefined
  id: TileDefined
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: TileDefined
  nameWithType: WorldCoordinate.TileDefined
  fullName: WorldCoordinate.TileDefined
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:WorldCoordinate.TileDefined</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool TileDefined { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property TileDefined As Boolean
  overload: Global.WorldCoordinate.TileDefined*
- uid: Global.WorldCoordinate.NodeDefined
  commentId: P:Global.WorldCoordinate.NodeDefined
  id: NodeDefined
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: NodeDefined
  nameWithType: WorldCoordinate.NodeDefined
  fullName: WorldCoordinate.NodeDefined
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:WorldCoordinate.NodeDefined</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool NodeDefined { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property NodeDefined As Boolean
  overload: Global.WorldCoordinate.NodeDefined*
- uid: Global.WorldCoordinate.Valid
  commentId: P:Global.WorldCoordinate.Valid
  id: Valid
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: Valid
  nameWithType: WorldCoordinate.Valid
  fullName: WorldCoordinate.Valid
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:WorldCoordinate.Valid</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Valid { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Valid As Boolean
  overload: Global.WorldCoordinate.Valid*
- uid: Global.WorldCoordinate.Tile
  commentId: P:Global.WorldCoordinate.Tile
  id: Tile
  parent: Global.WorldCoordinate
  langs:
  - csharp
  - vb
  name: Tile
  nameWithType: WorldCoordinate.Tile
  fullName: WorldCoordinate.Tile
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:WorldCoordinate.Tile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 Tile { get; set; }
    parameters: []
    return:
      type: RWCustom.IntVector2
    content.vb: Public Property Tile As IntVector2
  overload: Global.WorldCoordinate.Tile*
references:
- uid: Global
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.WorldCoordinate.#ctor*
  commentId: Overload:Global.WorldCoordinate.#ctor
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  name: WorldCoordinate
  nameWithType: WorldCoordinate.WorldCoordinate
  fullName: WorldCoordinate.WorldCoordinate
  nameWithType.vb: WorldCoordinate.New
  fullName.vb: WorldCoordinate.New
  name.vb: New
- uid: Global.WorldCoordinate.CompareDisregardingTile*
  commentId: Overload:Global.WorldCoordinate.CompareDisregardingTile
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_CompareDisregardingTile_WorldCoordinate_
  name: CompareDisregardingTile
  nameWithType: WorldCoordinate.CompareDisregardingTile
  fullName: WorldCoordinate.CompareDisregardingTile
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.WorldCoordinate.CompareDisregardingNode*
  commentId: Overload:Global.WorldCoordinate.CompareDisregardingNode
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_CompareDisregardingNode_WorldCoordinate_
  name: CompareDisregardingNode
  nameWithType: WorldCoordinate.CompareDisregardingNode
  fullName: WorldCoordinate.CompareDisregardingNode
- uid: Global.WorldCoordinate.AddIntVector*
  commentId: Overload:Global.WorldCoordinate.AddIntVector
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_AddIntVector_WorldCoordinate_RWCustom_IntVector2_
  name: AddIntVector
  nameWithType: WorldCoordinate.AddIntVector
  fullName: WorldCoordinate.AddIntVector
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.WorldCoordinate.WashTileData*
  commentId: Overload:Global.WorldCoordinate.WashTileData
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_WashTileData
  name: WashTileData
  nameWithType: WorldCoordinate.WashTileData
  fullName: WorldCoordinate.WashTileData
- uid: Global.WorldCoordinate.WashNode*
  commentId: Overload:Global.WorldCoordinate.WashNode
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_WashNode
  name: WashNode
  nameWithType: WorldCoordinate.WashNode
  fullName: WorldCoordinate.WashNode
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.WorldCoordinate.Equals*
  commentId: Overload:Global.WorldCoordinate.Equals
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_Equals_System_Object_
  name: Equals
  nameWithType: WorldCoordinate.Equals
  fullName: WorldCoordinate.Equals
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Nullable{WorldCoordinate}
  commentId: T:System.Nullable{WorldCoordinate}
  parent: System
  definition: System.Nullable`1
  href: WorldCoordinate.html
  name: WorldCoordinate?
  nameWithType: WorldCoordinate?
  fullName: WorldCoordinate?
  spec.csharp:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
  spec.vb:
  - uid: Global.WorldCoordinate
    name: WorldCoordinate
    isExternal: true
    href: WorldCoordinate.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Global.WorldCoordinate.GetHashCode*
  commentId: Overload:Global.WorldCoordinate.GetHashCode
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_GetHashCode
  name: GetHashCode
  nameWithType: WorldCoordinate.GetHashCode
  fullName: WorldCoordinate.GetHashCode
- uid: Global.WorldCoordinate.op_Equality*
  commentId: Overload:Global.WorldCoordinate.op_Equality
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_op_Equality_WorldCoordinate_WorldCoordinate_
  name: operator ==
  nameWithType: WorldCoordinate.operator ==
  fullName: WorldCoordinate.operator ==
  nameWithType.vb: WorldCoordinate.=
  fullName.vb: WorldCoordinate.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.WorldCoordinate.op_Equality*
    name: ==
    isExternal: true
    href: Global.WorldCoordinate.html#WorldCoordinate_op_Equality_WorldCoordinate_WorldCoordinate_
- uid: Global.WorldCoordinate.op_Inequality*
  commentId: Overload:Global.WorldCoordinate.op_Inequality
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_op_Inequality_WorldCoordinate_WorldCoordinate_
  name: operator !=
  nameWithType: WorldCoordinate.operator !=
  fullName: WorldCoordinate.operator !=
  nameWithType.vb: WorldCoordinate.<>
  fullName.vb: WorldCoordinate.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.WorldCoordinate.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.WorldCoordinate.html#WorldCoordinate_op_Inequality_WorldCoordinate_WorldCoordinate_
- uid: Global.WorldCoordinate.op_Addition*
  commentId: Overload:Global.WorldCoordinate.op_Addition
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_op_Addition_WorldCoordinate_RWCustom_IntVector2_
  name: operator +
  nameWithType: WorldCoordinate.operator +
  fullName: WorldCoordinate.operator +
  nameWithType.vb: WorldCoordinate.+
  fullName.vb: WorldCoordinate.+
  name.vb: +
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.WorldCoordinate.op_Addition*
    name: +
    isExternal: true
    href: Global.WorldCoordinate.html#WorldCoordinate_op_Addition_WorldCoordinate_RWCustom_IntVector2_
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Global.WorldCoordinate.ToString*
  commentId: Overload:Global.WorldCoordinate.ToString
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_ToString
  name: ToString
  nameWithType: WorldCoordinate.ToString
  fullName: WorldCoordinate.ToString
- uid: Global.WorldCoordinate.SaveToString*
  commentId: Overload:Global.WorldCoordinate.SaveToString
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_SaveToString
  name: SaveToString
  nameWithType: WorldCoordinate.SaveToString
  fullName: WorldCoordinate.SaveToString
- uid: Global.WorldCoordinate.FromString*
  commentId: Overload:Global.WorldCoordinate.FromString
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_FromString_System_String_
  name: FromString
  nameWithType: WorldCoordinate.FromString
  fullName: WorldCoordinate.FromString
- uid: Global.WorldCoordinate.ResolveRoomName*
  commentId: Overload:Global.WorldCoordinate.ResolveRoomName
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_ResolveRoomName
  name: ResolveRoomName
  nameWithType: WorldCoordinate.ResolveRoomName
  fullName: WorldCoordinate.ResolveRoomName
- uid: Global.WorldCoordinate.TileDefined*
  commentId: Overload:Global.WorldCoordinate.TileDefined
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_TileDefined
  name: TileDefined
  nameWithType: WorldCoordinate.TileDefined
  fullName: WorldCoordinate.TileDefined
- uid: Global.WorldCoordinate.NodeDefined*
  commentId: Overload:Global.WorldCoordinate.NodeDefined
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_NodeDefined
  name: NodeDefined
  nameWithType: WorldCoordinate.NodeDefined
  fullName: WorldCoordinate.NodeDefined
- uid: Global.WorldCoordinate.Valid*
  commentId: Overload:Global.WorldCoordinate.Valid
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_Valid
  name: Valid
  nameWithType: WorldCoordinate.Valid
  fullName: WorldCoordinate.Valid
- uid: Global.WorldCoordinate.Tile*
  commentId: Overload:Global.WorldCoordinate.Tile
  isExternal: true
  href: Global.WorldCoordinate.html#WorldCoordinate_Tile
  name: Tile
  nameWithType: WorldCoordinate.Tile
  fullName: WorldCoordinate.Tile
