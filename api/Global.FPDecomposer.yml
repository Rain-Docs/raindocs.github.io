### YamlMime:ManagedReference
items:
- uid: Global.FPDecomposer
  commentId: T:Global.FPDecomposer
  id: FPDecomposer
  parent: Global
  children:
  - Global.FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)
  - Global.FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})
  - Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  - Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)
  - Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  - Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  - Global.FPDecomposer.MAX_POLYGON_VERTICES
  - Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  - Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  - Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)
  - Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)
  - Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)
  - Global.FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)
  langs:
  - csharp
  - vb
  name: FPDecomposer
  nameWithType: FPDecomposer
  fullName: FPDecomposer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FPDecomposer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class FPDecomposer
    content.vb: Public Module FPDecomposer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FPDecomposer.MAX_POLYGON_VERTICES
  commentId: F:Global.FPDecomposer.MAX_POLYGON_VERTICES
  id: MAX_POLYGON_VERTICES
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MAX_POLYGON_VERTICES
  nameWithType: FPDecomposer.MAX_POLYGON_VERTICES
  fullName: FPDecomposer.MAX_POLYGON_VERTICES
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FPDecomposer.MAX_POLYGON_VERTICES</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int MAX_POLYGON_VERTICES
    return:
      type: System.Int32
    content.vb: Public Shared MAX_POLYGON_VERTICES As Integer
- uid: Global.FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})
  commentId: M:Global.FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})
  id: Decompose(System.Collections.Generic.List{UnityEngine.Vector2})
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: Decompose(List<Vector2>)
  nameWithType: FPDecomposer.Decompose(List<Vector2>)
  fullName: FPDecomposer.Decompose(System.Collections.Generic.List<UnityEngine.Vector2>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<Vector2[]> Decompose(List<Vector2> vertices)
    parameters:
    - id: vertices
      type: System.Collections.Generic.List{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertices</parameter>
            <parameter>M:FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2[]}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.Decompose(System.Collections.Generic.List{UnityEngine.Vector2})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Decompose(vertices As List(Of Vector2)) As List(Of Vector2())
  overload: Global.FPDecomposer.Decompose*
  nameWithType.vb: FPDecomposer.Decompose(List(Of Vector2))
  fullName.vb: FPDecomposer.Decompose(System.Collections.Generic.List(Of UnityEngine.Vector2))
  name.vb: Decompose(List(Of Vector2))
- uid: Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  id: LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2)
  nameWithType: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2)
  fullName: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 LineTools_LineIntersect(Vector2 p1, Vector2 p2, Vector2 q1, Vector2 q2)
    parameters:
    - id: p1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: p2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: q1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>q1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: q2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>q2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineTools_LineIntersect(p1 As Vector2, p2 As Vector2, q1 As Vector2, q2 As Vector2) As Vector2
  overload: Global.FPDecomposer.LineTools_LineIntersect*
- uid: Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  id: LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: LineTools_LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, bool, bool, out Vector2)
  nameWithType: FPDecomposer.LineTools_LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, bool, bool, out Vector2)
  fullName: FPDecomposer.LineTools_LineIntersect(ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2, bool, bool, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool LineTools_LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 point)
    parameters:
    - id: point1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point3
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point3</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point4
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point4</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: firstIsSegment
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstIsSegment</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: secondIsSegment
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>secondIsSegment</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineTools_LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, firstIsSegment As Boolean, secondIsSegment As Boolean, point As Vector2) As Boolean
  overload: Global.FPDecomposer.LineTools_LineIntersect*
  nameWithType.vb: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, Vector2)
  fullName.vb: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, Boolean, Boolean, UnityEngine.Vector2)
  name.vb: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, Vector2)
- uid: Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  id: LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, bool, bool, out Vector2)
  nameWithType: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, bool, bool, out Vector2)
  fullName: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, bool, bool, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool LineTools_LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, bool firstIsSegment, bool secondIsSegment, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point3
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point3</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point4
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point4</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: firstIsSegment
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>firstIsSegment</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: secondIsSegment
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>secondIsSegment</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: intersectionPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intersectionPoint</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,System.Boolean,System.Boolean,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineTools_LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, firstIsSegment As Boolean, secondIsSegment As Boolean, intersectionPoint As Vector2) As Boolean
  overload: Global.FPDecomposer.LineTools_LineIntersect*
  nameWithType.vb: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, Vector2)
  fullName.vb: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, Boolean, Boolean, UnityEngine.Vector2)
  name.vb: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Boolean, Boolean, Vector2)
- uid: Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)
  id: LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, out Vector2)
  nameWithType: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, out Vector2)
  fullName: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool LineTools_LineIntersect(Vector2 point1, Vector2 point2, Vector2 point3, Vector2 point4, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point3
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point3</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point4
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point4</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: intersectionPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intersectionPoint</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineTools_LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, intersectionPoint As Vector2) As Boolean
  overload: Global.FPDecomposer.LineTools_LineIntersect*
  nameWithType.vb: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName.vb: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Vector2)
- uid: Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  id: LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: LineTools_LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2)
  nameWithType: FPDecomposer.LineTools_LineIntersect(ref Vector2, ref Vector2, ref Vector2, ref Vector2, out Vector2)
  fullName: FPDecomposer.LineTools_LineIntersect(ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2, out UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool LineTools_LineIntersect(ref Vector2 point1, ref Vector2 point2, ref Vector2 point3, ref Vector2 point4, out Vector2 intersectionPoint)
    parameters:
    - id: point1
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point1</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point2</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point3
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point3</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: point4
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>point4</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: intersectionPoint
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intersectionPoint</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineTools_LineIntersect(point1 As Vector2, point2 As Vector2, point3 As Vector2, point4 As Vector2, intersectionPoint As Vector2) As Boolean
  overload: Global.FPDecomposer.LineTools_LineIntersect*
  nameWithType.vb: FPDecomposer.LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Vector2)
  fullName.vb: FPDecomposer.LineTools_LineIntersect(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: LineTools_LineIntersect(Vector2, Vector2, Vector2, Vector2, Vector2)
- uid: Global.FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)
  commentId: M:Global.FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)
  id: CollinearSimplify(UnityEngine.Vector2[],System.Single)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: CollinearSimplify(Vector2[], float)
  nameWithType: FPDecomposer.CollinearSimplify(Vector2[], float)
  fullName: FPDecomposer.CollinearSimplify(UnityEngine.Vector2[], float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2[] CollinearSimplify(Vector2[] vertices, float collinearityTolerance)
    parameters:
    - id: vertices
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertices</parameter>
            <parameter>M:FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)</parameter>
          </include>
        </markup>
    - id: collinearityTolerance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>collinearityTolerance</parameter>
            <parameter>M:FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.CollinearSimplify(UnityEngine.Vector2[],System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CollinearSimplify(vertices As Vector2(), collinearityTolerance As Single) As Vector2()
  overload: Global.FPDecomposer.CollinearSimplify*
  nameWithType.vb: FPDecomposer.CollinearSimplify(Vector2(), Single)
  fullName.vb: FPDecomposer.CollinearSimplify(UnityEngine.Vector2(), Single)
  name.vb: CollinearSimplify(Vector2(), Single)
- uid: Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  id: MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_Area(Vector2, Vector2, Vector2)
  nameWithType: FPDecomposer.MathUtils_Area(Vector2, Vector2, Vector2)
  fullName: FPDecomposer.MathUtils_Area(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float MathUtils_Area(Vector2 a, Vector2 b, Vector2 c)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: c
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_Area(a As Vector2, b As Vector2, c As Vector2) As Single
  overload: Global.FPDecomposer.MathUtils_Area*
- uid: Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  id: MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_Area(ref Vector2, ref Vector2, ref Vector2)
  nameWithType: FPDecomposer.MathUtils_Area(ref Vector2, ref Vector2, ref Vector2)
  fullName: FPDecomposer.MathUtils_Area(ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float MathUtils_Area(ref Vector2 a, ref Vector2 b, ref Vector2 c)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: c
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_Area(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_Area(a As Vector2, b As Vector2, c As Vector2) As Single
  overload: Global.FPDecomposer.MathUtils_Area*
  nameWithType.vb: FPDecomposer.MathUtils_Area(Vector2, Vector2, Vector2)
  fullName.vb: FPDecomposer.MathUtils_Area(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: MathUtils_Area(Vector2, Vector2, Vector2)
- uid: Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  commentId: M:Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  id: MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_Collinear(ref Vector2, ref Vector2, ref Vector2)
  nameWithType: FPDecomposer.MathUtils_Collinear(ref Vector2, ref Vector2, ref Vector2)
  fullName: FPDecomposer.MathUtils_Collinear(ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MathUtils_Collinear(ref Vector2 a, ref Vector2 b, ref Vector2 c)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    - id: c
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_Collinear(a As Vector2, b As Vector2, c As Vector2) As Boolean
  overload: Global.FPDecomposer.MathUtils_Collinear*
  nameWithType.vb: FPDecomposer.MathUtils_Collinear(Vector2, Vector2, Vector2)
  fullName.vb: FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: MathUtils_Collinear(Vector2, Vector2, Vector2)
- uid: Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)
  commentId: M:Global.FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)
  id: MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_Collinear(ref Vector2, ref Vector2, ref Vector2, float)
  nameWithType: FPDecomposer.MathUtils_Collinear(ref Vector2, ref Vector2, ref Vector2, float)
  fullName: FPDecomposer.MathUtils_Collinear(ref UnityEngine.Vector2, ref UnityEngine.Vector2, ref UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MathUtils_Collinear(ref Vector2 a, ref Vector2 b, ref Vector2 c, float tolerance)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    - id: c
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>c</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    - id: tolerance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tolerance</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2@,UnityEngine.Vector2@,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_Collinear(a As Vector2, b As Vector2, c As Vector2, tolerance As Single) As Boolean
  overload: Global.FPDecomposer.MathUtils_Collinear*
  nameWithType.vb: FPDecomposer.MathUtils_Collinear(Vector2, Vector2, Vector2, Single)
  fullName.vb: FPDecomposer.MathUtils_Collinear(UnityEngine.Vector2, UnityEngine.Vector2, UnityEngine.Vector2, Single)
  name.vb: MathUtils_Collinear(Vector2, Vector2, Vector2, Single)
- uid: Global.FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)
  commentId: M:Global.FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)
  id: MathUtils_FloatInRange(System.Single,System.Single,System.Single)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_FloatInRange(float, float, float)
  nameWithType: FPDecomposer.MathUtils_FloatInRange(float, float, float)
  fullName: FPDecomposer.MathUtils_FloatInRange(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MathUtils_FloatInRange(float value, float min, float max)
    parameters:
    - id: value
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>min</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>max</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatInRange(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_FloatInRange(value As Single, min As Single, max As Single) As Boolean
  overload: Global.FPDecomposer.MathUtils_FloatInRange*
  nameWithType.vb: FPDecomposer.MathUtils_FloatInRange(Single, Single, Single)
  fullName.vb: FPDecomposer.MathUtils_FloatInRange(Single, Single, Single)
  name.vb: MathUtils_FloatInRange(Single, Single, Single)
- uid: Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)
  commentId: M:Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)
  id: MathUtils_FloatEquals(System.Single,System.Single)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_FloatEquals(float, float)
  nameWithType: FPDecomposer.MathUtils_FloatEquals(float, float)
  fullName: FPDecomposer.MathUtils_FloatEquals(float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MathUtils_FloatEquals(float value1, float value2)
    parameters:
    - id: value1
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value1</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: value2
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value2</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_FloatEquals(value1 As Single, value2 As Single) As Boolean
  overload: Global.FPDecomposer.MathUtils_FloatEquals*
  nameWithType.vb: FPDecomposer.MathUtils_FloatEquals(Single, Single)
  fullName.vb: FPDecomposer.MathUtils_FloatEquals(Single, Single)
  name.vb: MathUtils_FloatEquals(Single, Single)
- uid: Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)
  commentId: M:Global.FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)
  id: MathUtils_FloatEquals(System.Single,System.Single,System.Single)
  parent: Global.FPDecomposer
  langs:
  - csharp
  - vb
  name: MathUtils_FloatEquals(float, float, float)
  nameWithType: FPDecomposer.MathUtils_FloatEquals(float, float, float)
  fullName: FPDecomposer.MathUtils_FloatEquals(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool MathUtils_FloatEquals(float value1, float value2, float delta)
    parameters:
    - id: value1
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value1</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: value2
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value2</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: delta
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delta</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPDecomposer.MathUtils_FloatEquals(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function MathUtils_FloatEquals(value1 As Single, value2 As Single, delta As Single) As Boolean
  overload: Global.FPDecomposer.MathUtils_FloatEquals*
  nameWithType.vb: FPDecomposer.MathUtils_FloatEquals(Single, Single, Single)
  fullName.vb: FPDecomposer.MathUtils_FloatEquals(Single, Single, Single)
  name.vb: MathUtils_FloatEquals(Single, Single, Single)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.FPDecomposer.Decompose*
  commentId: Overload:Global.FPDecomposer.Decompose
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_Decompose_System_Collections_Generic_List_UnityEngine_Vector2__
  name: Decompose
  nameWithType: FPDecomposer.Decompose
  fullName: FPDecomposer.Decompose
- uid: System.Collections.Generic.List{UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector2[]}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2[]}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2[]>
  nameWithType: List<Vector2[]>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2[]>
  nameWithType.vb: List(Of Vector2())
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2())
  name.vb: List(Of Vector2())
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.FPDecomposer.LineTools_LineIntersect*
  commentId: Overload:Global.FPDecomposer.LineTools_LineIntersect
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_LineTools_LineIntersect_UnityEngine_Vector2_UnityEngine_Vector2_UnityEngine_Vector2_UnityEngine_Vector2_
  name: LineTools_LineIntersect
  nameWithType: FPDecomposer.LineTools_LineIntersect
  fullName: FPDecomposer.LineTools_LineIntersect
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FPDecomposer.CollinearSimplify*
  commentId: Overload:Global.FPDecomposer.CollinearSimplify
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_CollinearSimplify_UnityEngine_Vector2___System_Single_
  name: CollinearSimplify
  nameWithType: FPDecomposer.CollinearSimplify
  fullName: FPDecomposer.CollinearSimplify
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FPDecomposer.MathUtils_Area*
  commentId: Overload:Global.FPDecomposer.MathUtils_Area
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_MathUtils_Area_UnityEngine_Vector2_UnityEngine_Vector2_UnityEngine_Vector2_
  name: MathUtils_Area
  nameWithType: FPDecomposer.MathUtils_Area
  fullName: FPDecomposer.MathUtils_Area
- uid: Global.FPDecomposer.MathUtils_Collinear*
  commentId: Overload:Global.FPDecomposer.MathUtils_Collinear
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_MathUtils_Collinear_UnityEngine_Vector2__UnityEngine_Vector2__UnityEngine_Vector2__
  name: MathUtils_Collinear
  nameWithType: FPDecomposer.MathUtils_Collinear
  fullName: FPDecomposer.MathUtils_Collinear
- uid: Global.FPDecomposer.MathUtils_FloatInRange*
  commentId: Overload:Global.FPDecomposer.MathUtils_FloatInRange
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_MathUtils_FloatInRange_System_Single_System_Single_System_Single_
  name: MathUtils_FloatInRange
  nameWithType: FPDecomposer.MathUtils_FloatInRange
  fullName: FPDecomposer.MathUtils_FloatInRange
- uid: Global.FPDecomposer.MathUtils_FloatEquals*
  commentId: Overload:Global.FPDecomposer.MathUtils_FloatEquals
  isExternal: true
  href: Global.FPDecomposer.html#FPDecomposer_MathUtils_FloatEquals_System_Single_System_Single_
  name: MathUtils_FloatEquals
  nameWithType: FPDecomposer.MathUtils_FloatEquals
  fullName: FPDecomposer.MathUtils_FloatEquals
