### YamlMime:ManagedReference
items:
- uid: HUD.HUDCircle
  commentId: T:HUD.HUDCircle
  id: HUDCircle
  parent: HUD
  children:
  - HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)
  - HUD.HUDCircle.ClearSprite
  - HUD.HUDCircle.Draw(System.Single)
  - HUD.HUDCircle.SetToSnap
  - HUD.HUDCircle.Snapped
  - HUD.HUDCircle.Update
  - HUD.HUDCircle.basicShader
  - HUD.HUDCircle.circleShader
  - HUD.HUDCircle.color
  - HUD.HUDCircle.fade
  - HUD.HUDCircle.forceColor
  - HUD.HUDCircle.hud
  - HUD.HUDCircle.lastFade
  - HUD.HUDCircle.lastPos
  - HUD.HUDCircle.lastRad
  - HUD.HUDCircle.lastThickness
  - HUD.HUDCircle.pos
  - HUD.HUDCircle.rad
  - HUD.HUDCircle.snapGraphic
  - HUD.HUDCircle.snapRad
  - HUD.HUDCircle.snapThickness
  - HUD.HUDCircle.sprite
  - HUD.HUDCircle.thickness
  - HUD.HUDCircle.visible
  langs:
  - csharp
  - vb
  name: HUDCircle
  nameWithType: HUDCircle
  fullName: HUD.HUDCircle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.HUDCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class HUDCircle
    content.vb: Public Class HUDCircle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.HUDCircle.hud
  commentId: F:HUD.HUDCircle.hud
  id: hud
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: hud
  nameWithType: HUDCircle.hud
  fullName: HUD.HUDCircle.hud
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.hud</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUD hud
    return:
      type: HUD.HUD
    content.vb: Public hud As HUD
- uid: HUD.HUDCircle.pos
  commentId: F:HUD.HUDCircle.pos
  id: pos
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: HUDCircle.pos
  fullName: HUD.HUDCircle.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: HUD.HUDCircle.lastPos
  commentId: F:HUD.HUDCircle.lastPos
  id: lastPos
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: lastPos
  nameWithType: HUDCircle.lastPos
  fullName: HUD.HUDCircle.lastPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.lastPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lastPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public lastPos As Vector2
- uid: HUD.HUDCircle.rad
  commentId: F:HUD.HUDCircle.rad
  id: rad
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: HUDCircle.rad
  fullName: HUD.HUDCircle.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: HUD.HUDCircle.lastRad
  commentId: F:HUD.HUDCircle.lastRad
  id: lastRad
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: lastRad
  nameWithType: HUDCircle.lastRad
  fullName: HUD.HUDCircle.lastRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.lastRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastRad
    return:
      type: System.Single
    content.vb: Public lastRad As Single
- uid: HUD.HUDCircle.thickness
  commentId: F:HUD.HUDCircle.thickness
  id: thickness
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: thickness
  nameWithType: HUDCircle.thickness
  fullName: HUD.HUDCircle.thickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.thickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float thickness
    return:
      type: System.Single
    content.vb: Public thickness As Single
- uid: HUD.HUDCircle.lastThickness
  commentId: F:HUD.HUDCircle.lastThickness
  id: lastThickness
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: lastThickness
  nameWithType: HUDCircle.lastThickness
  fullName: HUD.HUDCircle.lastThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.lastThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastThickness
    return:
      type: System.Single
    content.vb: Public lastThickness As Single
- uid: HUD.HUDCircle.sprite
  commentId: F:HUD.HUDCircle.sprite
  id: sprite
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: sprite
  nameWithType: HUDCircle.sprite
  fullName: HUD.HUDCircle.sprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.sprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite sprite
    return:
      type: Global.FSprite
    content.vb: Public sprite As FSprite
- uid: HUD.HUDCircle.snapGraphic
  commentId: F:HUD.HUDCircle.snapGraphic
  id: snapGraphic
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: snapGraphic
  nameWithType: HUDCircle.snapGraphic
  fullName: HUD.HUDCircle.snapGraphic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.snapGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle.SnapToGraphic snapGraphic
    return:
      type: HUD.HUDCircle.SnapToGraphic
    content.vb: Public snapGraphic As HUDCircle.SnapToGraphic
- uid: HUD.HUDCircle.snapRad
  commentId: F:HUD.HUDCircle.snapRad
  id: snapRad
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: snapRad
  nameWithType: HUDCircle.snapRad
  fullName: HUD.HUDCircle.snapRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.snapRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float snapRad
    return:
      type: System.Single
    content.vb: Public snapRad As Single
- uid: HUD.HUDCircle.snapThickness
  commentId: F:HUD.HUDCircle.snapThickness
  id: snapThickness
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: snapThickness
  nameWithType: HUDCircle.snapThickness
  fullName: HUD.HUDCircle.snapThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.snapThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float snapThickness
    return:
      type: System.Single
    content.vb: Public snapThickness As Single
- uid: HUD.HUDCircle.circleShader
  commentId: F:HUD.HUDCircle.circleShader
  id: circleShader
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: circleShader
  nameWithType: HUDCircle.circleShader
  fullName: HUD.HUDCircle.circleShader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.circleShader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FShader circleShader
    return:
      type: Global.FShader
    content.vb: Public circleShader As FShader
- uid: HUD.HUDCircle.basicShader
  commentId: F:HUD.HUDCircle.basicShader
  id: basicShader
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: basicShader
  nameWithType: HUDCircle.basicShader
  fullName: HUD.HUDCircle.basicShader
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.basicShader</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FShader basicShader
    return:
      type: Global.FShader
    content.vb: Public basicShader As FShader
- uid: HUD.HUDCircle.visible
  commentId: F:HUD.HUDCircle.visible
  id: visible
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: visible
  nameWithType: HUDCircle.visible
  fullName: HUD.HUDCircle.visible
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.visible</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool visible
    return:
      type: System.Boolean
    content.vb: Public visible As Boolean
- uid: HUD.HUDCircle.fade
  commentId: F:HUD.HUDCircle.fade
  id: fade
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: fade
  nameWithType: HUDCircle.fade
  fullName: HUD.HUDCircle.fade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.fade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float fade
    return:
      type: System.Single
    content.vb: Public fade As Single
- uid: HUD.HUDCircle.lastFade
  commentId: F:HUD.HUDCircle.lastFade
  id: lastFade
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: lastFade
  nameWithType: HUDCircle.lastFade
  fullName: HUD.HUDCircle.lastFade
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.lastFade</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFade
    return:
      type: System.Single
    content.vb: Public lastFade As Single
- uid: HUD.HUDCircle.color
  commentId: F:HUD.HUDCircle.color
  id: color
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: color
  nameWithType: HUDCircle.color
  fullName: HUD.HUDCircle.color
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.color</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int color
    return:
      type: System.Int32
    content.vb: Public color As Integer
- uid: HUD.HUDCircle.forceColor
  commentId: F:HUD.HUDCircle.forceColor
  id: forceColor
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: forceColor
  nameWithType: HUDCircle.forceColor
  fullName: HUD.HUDCircle.forceColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.HUDCircle.forceColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color? forceColor
    return:
      type: System.Nullable{UnityEngine.Color}
    content.vb: Public forceColor As Color?
- uid: HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)
  commentId: M:HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)
  id: '#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)'
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: HUDCircle(HUD, SnapToGraphic, FContainer, int)
  nameWithType: HUDCircle.HUDCircle(HUD, HUDCircle.SnapToGraphic, FContainer, int)
  fullName: HUD.HUDCircle.HUDCircle(HUD.HUD, HUD.HUDCircle.SnapToGraphic, FContainer, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.HUDCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle(HUD hud, HUDCircle.SnapToGraphic snapGraphic, FContainer container, int color)
    parameters:
    - id: hud
      type: HUD.HUD
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hud</parameter>
            <parameter>M:HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)</parameter>
          </include>
        </markup>
    - id: snapGraphic
      type: HUD.HUDCircle.SnapToGraphic
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>snapGraphic</parameter>
            <parameter>M:HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)</parameter>
          </include>
        </markup>
    - id: container
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>container</parameter>
            <parameter>M:HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)</parameter>
          </include>
        </markup>
    - id: color
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:HUD.HUDCircle.#ctor(HUD.HUD,HUD.HUDCircle.SnapToGraphic,FContainer,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(hud As HUD, snapGraphic As HUDCircle.SnapToGraphic, container As FContainer, color As Integer)
  overload: HUD.HUDCircle.#ctor*
  nameWithType.vb: HUDCircle.New(HUD, HUDCircle.SnapToGraphic, FContainer, Integer)
  fullName.vb: HUD.HUDCircle.New(HUD.HUD, HUD.HUDCircle.SnapToGraphic, FContainer, Integer)
  name.vb: New(HUD, SnapToGraphic, FContainer, Integer)
- uid: HUD.HUDCircle.SetToSnap
  commentId: M:HUD.HUDCircle.SetToSnap
  id: SetToSnap
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: SetToSnap()
  nameWithType: HUDCircle.SetToSnap()
  fullName: HUD.HUDCircle.SetToSnap()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.HUDCircle.SetToSnap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetToSnap()
    content.vb: Public Sub SetToSnap()
  overload: HUD.HUDCircle.SetToSnap*
- uid: HUD.HUDCircle.Update
  commentId: M:HUD.HUDCircle.Update
  id: Update
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: HUDCircle.Update()
  fullName: HUD.HUDCircle.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.HUDCircle.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: HUD.HUDCircle.Update*
- uid: HUD.HUDCircle.Draw(System.Single)
  commentId: M:HUD.HUDCircle.Draw(System.Single)
  id: Draw(System.Single)
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: Draw(float)
  nameWithType: HUDCircle.Draw(float)
  fullName: HUD.HUDCircle.Draw(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.HUDCircle.Draw(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Draw(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:HUD.HUDCircle.Draw(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Draw(timeStacker As Single)
  overload: HUD.HUDCircle.Draw*
  nameWithType.vb: HUDCircle.Draw(Single)
  fullName.vb: HUD.HUDCircle.Draw(Single)
  name.vb: Draw(Single)
- uid: HUD.HUDCircle.ClearSprite
  commentId: M:HUD.HUDCircle.ClearSprite
  id: ClearSprite
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: ClearSprite()
  nameWithType: HUDCircle.ClearSprite()
  fullName: HUD.HUDCircle.ClearSprite()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.HUDCircle.ClearSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ClearSprite()
    content.vb: Public Sub ClearSprite()
  overload: HUD.HUDCircle.ClearSprite*
- uid: HUD.HUDCircle.Snapped
  commentId: P:HUD.HUDCircle.Snapped
  id: Snapped
  parent: HUD.HUDCircle
  langs:
  - csharp
  - vb
  name: Snapped
  nameWithType: HUDCircle.Snapped
  fullName: HUD.HUDCircle.Snapped
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:HUD.HUDCircle.Snapped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Snapped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Snapped As Boolean
  overload: HUD.HUDCircle.Snapped*
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HUD.HUD
  commentId: T:HUD.HUD
  parent: HUD
  isExternal: true
  href: HUD.HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD.HUD
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.FSprite
  commentId: T:Global.FSprite
  isExternal: true
  href: FSprite.html
  name: FSprite
  nameWithType: FSprite
  fullName: FSprite
- uid: HUD.HUDCircle.SnapToGraphic
  commentId: T:HUD.HUDCircle.SnapToGraphic
  parent: HUD
  isExternal: true
  href: HUD.HUDCircle.html
  name: HUDCircle.SnapToGraphic
  nameWithType: HUDCircle.SnapToGraphic
  fullName: HUD.HUDCircle.SnapToGraphic
  spec.csharp:
  - uid: HUD.HUDCircle
    name: HUDCircle
    isExternal: true
    href: HUD.HUDCircle.html
  - name: .
  - uid: HUD.HUDCircle.SnapToGraphic
    name: SnapToGraphic
    isExternal: true
    href: HUD.HUDCircle.SnapToGraphic.html
  spec.vb:
  - uid: HUD.HUDCircle
    name: HUDCircle
    isExternal: true
    href: HUD.HUDCircle.html
  - name: .
  - uid: HUD.HUDCircle.SnapToGraphic
    name: SnapToGraphic
    isExternal: true
    href: HUD.HUDCircle.SnapToGraphic.html
- uid: Global.FShader
  commentId: T:Global.FShader
  isExternal: true
  href: FShader.html
  name: FShader
  nameWithType: FShader
  fullName: FShader
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Nullable{UnityEngine.Color}
  commentId: T:System.Nullable{UnityEngine.Color}
  parent: System
  definition: System.Nullable`1
  name: Color?
  nameWithType: Color?
  fullName: UnityEngine.Color?
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: HUD.HUDCircle.#ctor*
  commentId: Overload:HUD.HUDCircle.#ctor
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle__ctor_HUD_HUD_HUD_HUDCircle_SnapToGraphic_FContainer_System_Int32_
  name: HUDCircle
  nameWithType: HUDCircle.HUDCircle
  fullName: HUD.HUDCircle.HUDCircle
  nameWithType.vb: HUDCircle.New
  fullName.vb: HUD.HUDCircle.New
  name.vb: New
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: HUD.HUDCircle.SetToSnap*
  commentId: Overload:HUD.HUDCircle.SetToSnap
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle_SetToSnap
  name: SetToSnap
  nameWithType: HUDCircle.SetToSnap
  fullName: HUD.HUDCircle.SetToSnap
- uid: HUD.HUDCircle.Update*
  commentId: Overload:HUD.HUDCircle.Update
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle_Update
  name: Update
  nameWithType: HUDCircle.Update
  fullName: HUD.HUDCircle.Update
- uid: HUD.HUDCircle.Draw*
  commentId: Overload:HUD.HUDCircle.Draw
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle_Draw_System_Single_
  name: Draw
  nameWithType: HUDCircle.Draw
  fullName: HUD.HUDCircle.Draw
- uid: HUD.HUDCircle.ClearSprite*
  commentId: Overload:HUD.HUDCircle.ClearSprite
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle_ClearSprite
  name: ClearSprite
  nameWithType: HUDCircle.ClearSprite
  fullName: HUD.HUDCircle.ClearSprite
- uid: HUD.HUDCircle.Snapped*
  commentId: Overload:HUD.HUDCircle.Snapped
  isExternal: true
  href: HUD.HUDCircle.html#HUD_HUDCircle_Snapped
  name: Snapped
  nameWithType: HUDCircle.Snapped
  fullName: HUD.HUDCircle.Snapped
