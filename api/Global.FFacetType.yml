### YamlMime:ManagedReference
items:
- uid: Global.FFacetType
  commentId: T:Global.FFacetType
  id: FFacetType
  parent: Global
  children:
  - Global.FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)
  - Global.FFacetType.Init
  - Global.FFacetType.Quad
  - Global.FFacetType.Triangle
  - Global.FFacetType.createRenderLayer
  - Global.FFacetType.defaultFacetType
  - Global.FFacetType.expansionAmount
  - Global.FFacetType.index
  - Global.FFacetType.initialAmount
  - Global.FFacetType.maxEmptyAmount
  - Global.FFacetType.name
  langs:
  - csharp
  - vb
  name: FFacetType
  nameWithType: FFacetType
  fullName: FFacetType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FFacetType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FFacetType
    content.vb: Public Class FFacetType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FFacetType.defaultFacetType
  commentId: F:Global.FFacetType.defaultFacetType
  id: defaultFacetType
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: defaultFacetType
  nameWithType: FFacetType.defaultFacetType
  fullName: FFacetType.defaultFacetType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.defaultFacetType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FFacetType defaultFacetType
    return:
      type: Global.FFacetType
    content.vb: Public Shared defaultFacetType As FFacetType
- uid: Global.FFacetType.Quad
  commentId: F:Global.FFacetType.Quad
  id: Quad
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: Quad
  nameWithType: FFacetType.Quad
  fullName: FFacetType.Quad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.Quad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FFacetType Quad
    return:
      type: Global.FFacetType
    content.vb: Public Shared Quad As FFacetType
- uid: Global.FFacetType.Triangle
  commentId: F:Global.FFacetType.Triangle
  id: Triangle
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: Triangle
  nameWithType: FFacetType.Triangle
  fullName: FFacetType.Triangle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.Triangle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FFacetType Triangle
    return:
      type: Global.FFacetType
    content.vb: Public Shared Triangle As FFacetType
- uid: Global.FFacetType.index
  commentId: F:Global.FFacetType.index
  id: index
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: index
  nameWithType: FFacetType.index
  fullName: FFacetType.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Global.FFacetType.name
  commentId: F:Global.FFacetType.name
  id: name
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: name
  nameWithType: FFacetType.name
  fullName: FFacetType.name
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.name</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
- uid: Global.FFacetType.initialAmount
  commentId: F:Global.FFacetType.initialAmount
  id: initialAmount
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: initialAmount
  nameWithType: FFacetType.initialAmount
  fullName: FFacetType.initialAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.initialAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int initialAmount
    return:
      type: System.Int32
    content.vb: Public initialAmount As Integer
- uid: Global.FFacetType.expansionAmount
  commentId: F:Global.FFacetType.expansionAmount
  id: expansionAmount
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: expansionAmount
  nameWithType: FFacetType.expansionAmount
  fullName: FFacetType.expansionAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.expansionAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int expansionAmount
    return:
      type: System.Int32
    content.vb: Public expansionAmount As Integer
- uid: Global.FFacetType.maxEmptyAmount
  commentId: F:Global.FFacetType.maxEmptyAmount
  id: maxEmptyAmount
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: maxEmptyAmount
  nameWithType: FFacetType.maxEmptyAmount
  fullName: FFacetType.maxEmptyAmount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.maxEmptyAmount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxEmptyAmount
    return:
      type: System.Int32
    content.vb: Public maxEmptyAmount As Integer
- uid: Global.FFacetType.createRenderLayer
  commentId: F:Global.FFacetType.createRenderLayer
  id: createRenderLayer
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: createRenderLayer
  nameWithType: FFacetType.createRenderLayer
  fullName: FFacetType.createRenderLayer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:FFacetType.createRenderLayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FFacetType.CreateRenderLayerDelegate createRenderLayer
    return:
      type: Global.FFacetType.CreateRenderLayerDelegate
    content.vb: Public createRenderLayer As FFacetType.CreateRenderLayerDelegate
- uid: Global.FFacetType.Init
  commentId: M:Global.FFacetType.Init
  id: Init
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: Init()
  nameWithType: FFacetType.Init()
  fullName: FFacetType.Init()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetType.Init</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Init()
    content.vb: Public Shared Sub Init()
  overload: Global.FFacetType.Init*
- uid: Global.FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)
  commentId: M:Global.FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)
  id: CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)
  parent: Global.FFacetType
  langs:
  - csharp
  - vb
  name: CreateFacetType(string, int, int, int, CreateRenderLayerDelegate)
  nameWithType: FFacetType.CreateFacetType(string, int, int, int, FFacetType.CreateRenderLayerDelegate)
  fullName: FFacetType.CreateFacetType(string, int, int, int, FFacetType.CreateRenderLayerDelegate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FFacetType CreateFacetType(string facetTypeShortName, int initialAmount, int expansionAmount, int maxEmptyAmount, FFacetType.CreateRenderLayerDelegate createRenderLayer)
    parameters:
    - id: facetTypeShortName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>facetTypeShortName</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    - id: initialAmount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>initialAmount</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    - id: expansionAmount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>expansionAmount</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    - id: maxEmptyAmount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxEmptyAmount</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    - id: createRenderLayer
      type: Global.FFacetType.CreateRenderLayerDelegate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>createRenderLayer</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    return:
      type: Global.FFacetType
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FFacetType.CreateFacetType(System.String,System.Int32,System.Int32,System.Int32,FFacetType.CreateRenderLayerDelegate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CreateFacetType(facetTypeShortName As String, initialAmount As Integer, expansionAmount As Integer, maxEmptyAmount As Integer, createRenderLayer As FFacetType.CreateRenderLayerDelegate) As FFacetType
  overload: Global.FFacetType.CreateFacetType*
  nameWithType.vb: FFacetType.CreateFacetType(String, Integer, Integer, Integer, FFacetType.CreateRenderLayerDelegate)
  fullName.vb: FFacetType.CreateFacetType(String, Integer, Integer, Integer, FFacetType.CreateRenderLayerDelegate)
  name.vb: CreateFacetType(String, Integer, Integer, Integer, CreateRenderLayerDelegate)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FFacetType
  commentId: T:Global.FFacetType
  isExternal: true
  href: FFacetType.html
  name: FFacetType
  nameWithType: FFacetType
  fullName: FFacetType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.FFacetType.CreateRenderLayerDelegate
  commentId: T:Global.FFacetType.CreateRenderLayerDelegate
  isExternal: true
  href: FFacetType.html
  name: FFacetType.CreateRenderLayerDelegate
  nameWithType: FFacetType.CreateRenderLayerDelegate
  fullName: FFacetType.CreateRenderLayerDelegate
  spec.csharp:
  - uid: Global.FFacetType
    name: FFacetType
    isExternal: true
    href: FFacetType.html
  - name: .
  - uid: Global.FFacetType.CreateRenderLayerDelegate
    name: CreateRenderLayerDelegate
    isExternal: true
    href: FFacetType.CreateRenderLayerDelegate.html
  spec.vb:
  - uid: Global.FFacetType
    name: FFacetType
    isExternal: true
    href: FFacetType.html
  - name: .
  - uid: Global.FFacetType.CreateRenderLayerDelegate
    name: CreateRenderLayerDelegate
    isExternal: true
    href: FFacetType.CreateRenderLayerDelegate.html
- uid: Global.FFacetType.Init*
  commentId: Overload:Global.FFacetType.Init
  isExternal: true
  href: Global.FFacetType.html#FFacetType_Init
  name: Init
  nameWithType: FFacetType.Init
  fullName: FFacetType.Init
- uid: Global.FFacetType.CreateFacetType*
  commentId: Overload:Global.FFacetType.CreateFacetType
  isExternal: true
  href: Global.FFacetType.html#FFacetType_CreateFacetType_System_String_System_Int32_System_Int32_System_Int32_FFacetType_CreateRenderLayerDelegate_
  name: CreateFacetType
  nameWithType: FFacetType.CreateFacetType
  fullName: FFacetType.CreateFacetType
