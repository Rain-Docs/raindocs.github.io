### YamlMime:ManagedReference
items:
- uid: Expedition.ChallengeTools
  commentId: T:Expedition.ChallengeTools
  id: ChallengeTools
  parent: Expedition
  children:
  - Expedition.ChallengeTools.AppendAdditionalCreatureSpawns
  - Expedition.ChallengeTools.CreatureName(System.String[]@)
  - Expedition.ChallengeTools.EchoScore(System.Int32[]@)
  - Expedition.ChallengeTools.GenerateAchievementScores
  - Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)
  - Expedition.ChallengeTools.GenerateObjectTypes
  - Expedition.ChallengeTools.GenerateVistaLocations
  - Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)
  - Expedition.ChallengeTools.IGT
  - Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)
  - Expedition.ChallengeTools.ObjectTypes
  - Expedition.ChallengeTools.ParseCreatureSpawns
  - Expedition.ChallengeTools.PearlRegionBlackList
  - Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)
  - Expedition.ChallengeTools.VistaLocations
  - Expedition.ChallengeTools.achievementScores
  - Expedition.ChallengeTools.creatureBlacklist
  - Expedition.ChallengeTools.creatureNames
  - Expedition.ChallengeTools.creatureScores
  - Expedition.ChallengeTools.creatureSpawns
  - Expedition.ChallengeTools.echoScores
  - Expedition.ChallengeTools.regionBlacklist
  langs:
  - csharp
  - vb
  name: ChallengeTools
  nameWithType: ChallengeTools
  fullName: Expedition.ChallengeTools
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Expedition.ChallengeTools</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class ChallengeTools
    content.vb: Public Module ChallengeTools
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Expedition.ChallengeTools.creatureNames
  commentId: F:Expedition.ChallengeTools.creatureNames
  id: creatureNames
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: creatureNames
  nameWithType: ChallengeTools.creatureNames
  fullName: Expedition.ChallengeTools.creatureNames
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.creatureNames</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] creatureNames
    return:
      type: System.String[]
    content.vb: Public Shared creatureNames As String()
- uid: Expedition.ChallengeTools.VistaLocations
  commentId: F:Expedition.ChallengeTools.VistaLocations
  id: VistaLocations
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: VistaLocations
  nameWithType: ChallengeTools.VistaLocations
  fullName: Expedition.ChallengeTools.VistaLocations
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.VistaLocations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, Dictionary<string, Vector2>> VistaLocations
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,UnityEngine.Vector2}}
    content.vb: Public Shared VistaLocations As Dictionary(Of String, Dictionary(Of String, Vector2))
- uid: Expedition.ChallengeTools.ObjectTypes
  commentId: F:Expedition.ChallengeTools.ObjectTypes
  id: ObjectTypes
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: ObjectTypes
  nameWithType: ChallengeTools.ObjectTypes
  fullName: Expedition.ChallengeTools.ObjectTypes
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.ObjectTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<AbstractPhysicalObject.AbstractObjectType> ObjectTypes
    return:
      type: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
    content.vb: Public Shared ObjectTypes As List(Of AbstractPhysicalObject.AbstractObjectType)
- uid: Expedition.ChallengeTools.echoScores
  commentId: F:Expedition.ChallengeTools.echoScores
  id: echoScores
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: echoScores
  nameWithType: ChallengeTools.echoScores
  fullName: Expedition.ChallengeTools.echoScores
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.echoScores</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int[] echoScores
    return:
      type: System.Int32[]
    content.vb: Public Shared echoScores As Integer()
- uid: Expedition.ChallengeTools.achievementScores
  commentId: F:Expedition.ChallengeTools.achievementScores
  id: achievementScores
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: achievementScores
  nameWithType: ChallengeTools.achievementScores
  fullName: Expedition.ChallengeTools.achievementScores
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.achievementScores</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<WinState.EndgameID, int> achievementScores
    return:
      type: System.Collections.Generic.Dictionary{WinState.EndgameID,System.Int32}
    content.vb: Public Shared achievementScores As Dictionary(Of WinState.EndgameID, Integer)
- uid: Expedition.ChallengeTools.creatureScores
  commentId: F:Expedition.ChallengeTools.creatureScores
  id: creatureScores
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: creatureScores
  nameWithType: ChallengeTools.creatureScores
  fullName: Expedition.ChallengeTools.creatureScores
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.creatureScores</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, int> creatureScores
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public Shared creatureScores As Dictionary(Of String, Integer)
- uid: Expedition.ChallengeTools.creatureSpawns
  commentId: F:Expedition.ChallengeTools.creatureSpawns
  id: creatureSpawns
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: creatureSpawns
  nameWithType: ChallengeTools.creatureSpawns
  fullName: Expedition.ChallengeTools.creatureSpawns
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.creatureSpawns</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Dictionary<string, List<ChallengeTools.ExpeditionCreature>> creatureSpawns
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Expedition.ChallengeTools.ExpeditionCreature}}
    content.vb: Public Shared creatureSpawns As Dictionary(Of String, List(Of ChallengeTools.ExpeditionCreature))
- uid: Expedition.ChallengeTools.regionBlacklist
  commentId: F:Expedition.ChallengeTools.regionBlacklist
  id: regionBlacklist
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: regionBlacklist
  nameWithType: ChallengeTools.regionBlacklist
  fullName: Expedition.ChallengeTools.regionBlacklist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.regionBlacklist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> regionBlacklist
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared regionBlacklist As List(Of String)
- uid: Expedition.ChallengeTools.creatureBlacklist
  commentId: F:Expedition.ChallengeTools.creatureBlacklist
  id: creatureBlacklist
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: creatureBlacklist
  nameWithType: ChallengeTools.creatureBlacklist
  fullName: Expedition.ChallengeTools.creatureBlacklist
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.ChallengeTools.creatureBlacklist</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> creatureBlacklist
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Shared creatureBlacklist As List(Of String)
- uid: Expedition.ChallengeTools.CreatureName(System.String[]@)
  commentId: M:Expedition.ChallengeTools.CreatureName(System.String[]@)
  id: CreatureName(System.String[]@)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: CreatureName(ref string[])
  nameWithType: ChallengeTools.CreatureName(ref string[])
  fullName: Expedition.ChallengeTools.CreatureName(ref string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.CreatureName(System.String[]@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void CreatureName(ref string[] creatureNames)
    parameters:
    - id: creatureNames
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creatureNames</parameter>
            <parameter>M:Expedition.ChallengeTools.CreatureName(System.String[]@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub CreatureName(creatureNames As String())
  overload: Expedition.ChallengeTools.CreatureName*
  nameWithType.vb: ChallengeTools.CreatureName(String())
  fullName.vb: Expedition.ChallengeTools.CreatureName(String())
  name.vb: CreatureName(String())
- uid: Expedition.ChallengeTools.PearlRegionBlackList
  commentId: M:Expedition.ChallengeTools.PearlRegionBlackList
  id: PearlRegionBlackList
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: PearlRegionBlackList()
  nameWithType: ChallengeTools.PearlRegionBlackList()
  fullName: Expedition.ChallengeTools.PearlRegionBlackList()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.PearlRegionBlackList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<string> PearlRegionBlackList()
    return:
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeTools.PearlRegionBlackList</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PearlRegionBlackList() As List(Of String)
  overload: Expedition.ChallengeTools.PearlRegionBlackList*
- uid: Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)
  commentId: M:Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)
  id: ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: ValidRegionPearl(string, DataPearlType)
  nameWithType: ChallengeTools.ValidRegionPearl(string, DataPearl.AbstractDataPearl.DataPearlType)
  fullName: Expedition.ChallengeTools.ValidRegionPearl(string, DataPearl.AbstractDataPearl.DataPearlType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool ValidRegionPearl(string region, DataPearl.AbstractDataPearl.DataPearlType type)
    parameters:
    - id: region
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>region</parameter>
            <parameter>M:Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)</parameter>
          </include>
        </markup>
    - id: type
      type: Global.DataPearl.AbstractDataPearl.DataPearlType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeTools.ValidRegionPearl(System.String,DataPearl.AbstractDataPearl.DataPearlType)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ValidRegionPearl(region As String, type As DataPearl.AbstractDataPearl.DataPearlType) As Boolean
  overload: Expedition.ChallengeTools.ValidRegionPearl*
  nameWithType.vb: ChallengeTools.ValidRegionPearl(String, DataPearl.AbstractDataPearl.DataPearlType)
  fullName.vb: Expedition.ChallengeTools.ValidRegionPearl(String, DataPearl.AbstractDataPearl.DataPearlType)
  name.vb: ValidRegionPearl(String, DataPearlType)
- uid: Expedition.ChallengeTools.EchoScore(System.Int32[]@)
  commentId: M:Expedition.ChallengeTools.EchoScore(System.Int32[]@)
  id: EchoScore(System.Int32[]@)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: EchoScore(ref int[])
  nameWithType: ChallengeTools.EchoScore(ref int[])
  fullName: Expedition.ChallengeTools.EchoScore(ref int[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.EchoScore(System.Int32[]@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void EchoScore(ref int[] echoScores)
    parameters:
    - id: echoScores
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>echoScores</parameter>
            <parameter>M:Expedition.ChallengeTools.EchoScore(System.Int32[]@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub EchoScore(echoScores As Integer())
  overload: Expedition.ChallengeTools.EchoScore*
  nameWithType.vb: ChallengeTools.EchoScore(Integer())
  fullName.vb: Expedition.ChallengeTools.EchoScore(Integer())
  name.vb: EchoScore(Integer())
- uid: Expedition.ChallengeTools.GenerateAchievementScores
  commentId: M:Expedition.ChallengeTools.GenerateAchievementScores
  id: GenerateAchievementScores
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: GenerateAchievementScores()
  nameWithType: ChallengeTools.GenerateAchievementScores()
  fullName: Expedition.ChallengeTools.GenerateAchievementScores()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.GenerateAchievementScores</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void GenerateAchievementScores()
    content.vb: Public Shared Sub GenerateAchievementScores()
  overload: Expedition.ChallengeTools.GenerateAchievementScores*
- uid: Expedition.ChallengeTools.GenerateObjectTypes
  commentId: M:Expedition.ChallengeTools.GenerateObjectTypes
  id: GenerateObjectTypes
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: GenerateObjectTypes()
  nameWithType: ChallengeTools.GenerateObjectTypes()
  fullName: Expedition.ChallengeTools.GenerateObjectTypes()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.GenerateObjectTypes</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void GenerateObjectTypes()
    content.vb: Public Shared Sub GenerateObjectTypes()
  overload: Expedition.ChallengeTools.GenerateObjectTypes*
- uid: Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)
  commentId: M:Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)
  id: ItemName(AbstractPhysicalObject.AbstractObjectType)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: ItemName(AbstractObjectType)
  nameWithType: ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)
  fullName: Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ItemName(AbstractPhysicalObject.AbstractObjectType type)
    parameters:
    - id: type
      type: Global.AbstractPhysicalObject.AbstractObjectType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeTools.ItemName(AbstractPhysicalObject.AbstractObjectType)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ItemName(type As AbstractPhysicalObject.AbstractObjectType) As String
  overload: Expedition.ChallengeTools.ItemName*
- uid: Expedition.ChallengeTools.GenerateVistaLocations
  commentId: M:Expedition.ChallengeTools.GenerateVistaLocations
  id: GenerateVistaLocations
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: GenerateVistaLocations()
  nameWithType: ChallengeTools.GenerateVistaLocations()
  fullName: Expedition.ChallengeTools.GenerateVistaLocations()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.GenerateVistaLocations</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void GenerateVistaLocations()
    content.vb: Public Shared Sub GenerateVistaLocations()
  overload: Expedition.ChallengeTools.GenerateVistaLocations*
- uid: Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)
  commentId: M:Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)
  id: GetExpeditionCreature(SlugcatStats.Name,System.Single)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: GetExpeditionCreature(Name, float)
  nameWithType: ChallengeTools.GetExpeditionCreature(SlugcatStats.Name, float)
  fullName: Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static ChallengeTools.ExpeditionCreature GetExpeditionCreature(SlugcatStats.Name slugcat, float difficulty)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    - id: difficulty
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>difficulty</parameter>
            <parameter>M:Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Expedition.ChallengeTools.ExpeditionCreature
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetExpeditionCreature(slugcat As SlugcatStats.Name, difficulty As Single) As ChallengeTools.ExpeditionCreature
  overload: Expedition.ChallengeTools.GetExpeditionCreature*
  nameWithType.vb: ChallengeTools.GetExpeditionCreature(SlugcatStats.Name, Single)
  fullName.vb: Expedition.ChallengeTools.GetExpeditionCreature(SlugcatStats.Name, Single)
  name.vb: GetExpeditionCreature(Name, Single)
- uid: Expedition.ChallengeTools.ParseCreatureSpawns
  commentId: M:Expedition.ChallengeTools.ParseCreatureSpawns
  id: ParseCreatureSpawns
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: ParseCreatureSpawns()
  nameWithType: ChallengeTools.ParseCreatureSpawns()
  fullName: Expedition.ChallengeTools.ParseCreatureSpawns()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.ParseCreatureSpawns</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ParseCreatureSpawns()
    content.vb: Public Shared Sub ParseCreatureSpawns()
  overload: Expedition.ChallengeTools.ParseCreatureSpawns*
- uid: Expedition.ChallengeTools.AppendAdditionalCreatureSpawns
  commentId: M:Expedition.ChallengeTools.AppendAdditionalCreatureSpawns
  id: AppendAdditionalCreatureSpawns
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: AppendAdditionalCreatureSpawns()
  nameWithType: ChallengeTools.AppendAdditionalCreatureSpawns()
  fullName: Expedition.ChallengeTools.AppendAdditionalCreatureSpawns()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.AppendAdditionalCreatureSpawns</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void AppendAdditionalCreatureSpawns()
    content.vb: Public Shared Sub AppendAdditionalCreatureSpawns()
  overload: Expedition.ChallengeTools.AppendAdditionalCreatureSpawns*
- uid: Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)
  commentId: M:Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)
  id: GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: GenerateCreatureScores(ref Dictionary<string, int>)
  nameWithType: ChallengeTools.GenerateCreatureScores(ref Dictionary<string, int>)
  fullName: Expedition.ChallengeTools.GenerateCreatureScores(ref System.Collections.Generic.Dictionary<string, int>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void GenerateCreatureScores(ref Dictionary<string, int> dict)
    parameters:
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dict</parameter>
            <parameter>M:Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary{System.String,System.Int32}@)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub GenerateCreatureScores(dict As Dictionary(Of String, Integer))
  overload: Expedition.ChallengeTools.GenerateCreatureScores*
  nameWithType.vb: ChallengeTools.GenerateCreatureScores(Dictionary(Of String, Integer))
  fullName.vb: Expedition.ChallengeTools.GenerateCreatureScores(System.Collections.Generic.Dictionary(Of String, Integer))
  name.vb: GenerateCreatureScores(Dictionary(Of String, Integer))
- uid: Expedition.ChallengeTools.IGT
  commentId: P:Expedition.ChallengeTools.IGT
  id: IGT
  parent: Expedition.ChallengeTools
  langs:
  - csharp
  - vb
  name: IGT
  nameWithType: ChallengeTools.IGT
  fullName: Expedition.ChallengeTools.IGT
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Expedition.ChallengeTools.IGT</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static InGameTranslator IGT { get; }
    parameters: []
    return:
      type: Global.InGameTranslator
    content.vb: Public Shared ReadOnly Property IGT As InGameTranslator
  overload: Expedition.ChallengeTools.IGT*
references:
- uid: Expedition
  commentId: N:Expedition
  isExternal: true
  href: Expedition.html
  name: Expedition
  nameWithType: Expedition
  fullName: Expedition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,UnityEngine.Vector2}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.Dictionary{System.String,UnityEngine.Vector2}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, Dictionary<string, Vector2>>
  nameWithType: Dictionary<string, Dictionary<string, Vector2>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, UnityEngine.Vector2>>
  nameWithType.vb: Dictionary(Of String, Dictionary(Of String, Vector2))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.Dictionary(Of String, UnityEngine.Vector2))
  name.vb: Dictionary(Of String, Dictionary(Of String, Vector2))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
  commentId: T:System.Collections.Generic.List{AbstractPhysicalObject.AbstractObjectType}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<AbstractPhysicalObject.AbstractObjectType>
  nameWithType: List<AbstractPhysicalObject.AbstractObjectType>
  fullName: System.Collections.Generic.List<AbstractPhysicalObject.AbstractObjectType>
  nameWithType.vb: List(Of AbstractPhysicalObject.AbstractObjectType)
  fullName.vb: System.Collections.Generic.List(Of AbstractPhysicalObject.AbstractObjectType)
  name.vb: List(Of AbstractPhysicalObject.AbstractObjectType)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{WinState.EndgameID,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{WinState.EndgameID,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<WinState.EndgameID, int>
  nameWithType: Dictionary<WinState.EndgameID, int>
  fullName: System.Collections.Generic.Dictionary<WinState.EndgameID, int>
  nameWithType.vb: Dictionary(Of WinState.EndgameID, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of WinState.EndgameID, Integer)
  name.vb: Dictionary(Of WinState.EndgameID, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Expedition.ChallengeTools.ExpeditionCreature}}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{Expedition.ChallengeTools.ExpeditionCreature}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, List<ChallengeTools.ExpeditionCreature>>
  nameWithType: Dictionary<string, List<ChallengeTools.ExpeditionCreature>>
  fullName: System.Collections.Generic.Dictionary<string, System.Collections.Generic.List<Expedition.ChallengeTools.ExpeditionCreature>>
  nameWithType.vb: Dictionary(Of String, List(Of ChallengeTools.ExpeditionCreature))
  fullName.vb: System.Collections.Generic.Dictionary(Of String, System.Collections.Generic.List(Of Expedition.ChallengeTools.ExpeditionCreature))
  name.vb: Dictionary(Of String, List(Of ChallengeTools.ExpeditionCreature))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Expedition.ChallengeTools
    name: ChallengeTools
    isExternal: true
    href: Expedition.ChallengeTools.html
  - name: .
  - uid: Expedition.ChallengeTools.ExpeditionCreature
    name: ExpeditionCreature
    isExternal: true
    href: Expedition.ChallengeTools.ExpeditionCreature.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Expedition.ChallengeTools
    name: ChallengeTools
    isExternal: true
    href: Expedition.ChallengeTools.html
  - name: .
  - uid: Expedition.ChallengeTools.ExpeditionCreature
    name: ExpeditionCreature
    isExternal: true
    href: Expedition.ChallengeTools.ExpeditionCreature.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Expedition.ChallengeTools.CreatureName*
  commentId: Overload:Expedition.ChallengeTools.CreatureName
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_CreatureName_System_String____
  name: CreatureName
  nameWithType: ChallengeTools.CreatureName
  fullName: Expedition.ChallengeTools.CreatureName
- uid: Expedition.ChallengeTools.PearlRegionBlackList*
  commentId: Overload:Expedition.ChallengeTools.PearlRegionBlackList
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_PearlRegionBlackList
  name: PearlRegionBlackList
  nameWithType: ChallengeTools.PearlRegionBlackList
  fullName: Expedition.ChallengeTools.PearlRegionBlackList
- uid: Expedition.ChallengeTools.ValidRegionPearl*
  commentId: Overload:Expedition.ChallengeTools.ValidRegionPearl
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_ValidRegionPearl_System_String_DataPearl_AbstractDataPearl_DataPearlType_
  name: ValidRegionPearl
  nameWithType: ChallengeTools.ValidRegionPearl
  fullName: Expedition.ChallengeTools.ValidRegionPearl
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.DataPearl.AbstractDataPearl.DataPearlType
  commentId: T:Global.DataPearl.AbstractDataPearl.DataPearlType
  isExternal: true
  href: DataPearl.html
  name: DataPearl.AbstractDataPearl.DataPearlType
  nameWithType: DataPearl.AbstractDataPearl.DataPearlType
  fullName: DataPearl.AbstractDataPearl.DataPearlType
  spec.csharp:
  - uid: Global.DataPearl
    name: DataPearl
    isExternal: true
    href: DataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl
    name: AbstractDataPearl
    isExternal: true
    href: DataPearl.AbstractDataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl.DataPearlType
    name: DataPearlType
    isExternal: true
    href: DataPearl.AbstractDataPearl.DataPearlType.html
  spec.vb:
  - uid: Global.DataPearl
    name: DataPearl
    isExternal: true
    href: DataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl
    name: AbstractDataPearl
    isExternal: true
    href: DataPearl.AbstractDataPearl.html
  - name: .
  - uid: Global.DataPearl.AbstractDataPearl.DataPearlType
    name: DataPearlType
    isExternal: true
    href: DataPearl.AbstractDataPearl.DataPearlType.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Expedition.ChallengeTools.EchoScore*
  commentId: Overload:Expedition.ChallengeTools.EchoScore
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_EchoScore_System_Int32____
  name: EchoScore
  nameWithType: ChallengeTools.EchoScore
  fullName: Expedition.ChallengeTools.EchoScore
- uid: Expedition.ChallengeTools.GenerateAchievementScores*
  commentId: Overload:Expedition.ChallengeTools.GenerateAchievementScores
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_GenerateAchievementScores
  name: GenerateAchievementScores
  nameWithType: ChallengeTools.GenerateAchievementScores
  fullName: Expedition.ChallengeTools.GenerateAchievementScores
- uid: Expedition.ChallengeTools.GenerateObjectTypes*
  commentId: Overload:Expedition.ChallengeTools.GenerateObjectTypes
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_GenerateObjectTypes
  name: GenerateObjectTypes
  nameWithType: ChallengeTools.GenerateObjectTypes
  fullName: Expedition.ChallengeTools.GenerateObjectTypes
- uid: Expedition.ChallengeTools.ItemName*
  commentId: Overload:Expedition.ChallengeTools.ItemName
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_ItemName_AbstractPhysicalObject_AbstractObjectType_
  name: ItemName
  nameWithType: ChallengeTools.ItemName
  fullName: Expedition.ChallengeTools.ItemName
- uid: Global.AbstractPhysicalObject.AbstractObjectType
  commentId: T:Global.AbstractPhysicalObject.AbstractObjectType
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject.AbstractObjectType
  nameWithType: AbstractPhysicalObject.AbstractObjectType
  fullName: AbstractPhysicalObject.AbstractObjectType
  spec.csharp:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
  spec.vb:
  - uid: Global.AbstractPhysicalObject
    name: AbstractPhysicalObject
    isExternal: true
    href: AbstractPhysicalObject.html
  - name: .
  - uid: Global.AbstractPhysicalObject.AbstractObjectType
    name: AbstractObjectType
    isExternal: true
    href: AbstractPhysicalObject.AbstractObjectType.html
- uid: Expedition.ChallengeTools.GenerateVistaLocations*
  commentId: Overload:Expedition.ChallengeTools.GenerateVistaLocations
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_GenerateVistaLocations
  name: GenerateVistaLocations
  nameWithType: ChallengeTools.GenerateVistaLocations
  fullName: Expedition.ChallengeTools.GenerateVistaLocations
- uid: Expedition.ChallengeTools.GetExpeditionCreature*
  commentId: Overload:Expedition.ChallengeTools.GetExpeditionCreature
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_GetExpeditionCreature_SlugcatStats_Name_System_Single_
  name: GetExpeditionCreature
  nameWithType: ChallengeTools.GetExpeditionCreature
  fullName: Expedition.ChallengeTools.GetExpeditionCreature
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Expedition.ChallengeTools.ExpeditionCreature
  commentId: T:Expedition.ChallengeTools.ExpeditionCreature
  parent: Expedition
  isExternal: true
  href: Expedition.ChallengeTools.html
  name: ChallengeTools.ExpeditionCreature
  nameWithType: ChallengeTools.ExpeditionCreature
  fullName: Expedition.ChallengeTools.ExpeditionCreature
  spec.csharp:
  - uid: Expedition.ChallengeTools
    name: ChallengeTools
    isExternal: true
    href: Expedition.ChallengeTools.html
  - name: .
  - uid: Expedition.ChallengeTools.ExpeditionCreature
    name: ExpeditionCreature
    isExternal: true
    href: Expedition.ChallengeTools.ExpeditionCreature.html
  spec.vb:
  - uid: Expedition.ChallengeTools
    name: ChallengeTools
    isExternal: true
    href: Expedition.ChallengeTools.html
  - name: .
  - uid: Expedition.ChallengeTools.ExpeditionCreature
    name: ExpeditionCreature
    isExternal: true
    href: Expedition.ChallengeTools.ExpeditionCreature.html
- uid: Expedition.ChallengeTools.ParseCreatureSpawns*
  commentId: Overload:Expedition.ChallengeTools.ParseCreatureSpawns
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_ParseCreatureSpawns
  name: ParseCreatureSpawns
  nameWithType: ChallengeTools.ParseCreatureSpawns
  fullName: Expedition.ChallengeTools.ParseCreatureSpawns
- uid: Expedition.ChallengeTools.AppendAdditionalCreatureSpawns*
  commentId: Overload:Expedition.ChallengeTools.AppendAdditionalCreatureSpawns
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_AppendAdditionalCreatureSpawns
  name: AppendAdditionalCreatureSpawns
  nameWithType: ChallengeTools.AppendAdditionalCreatureSpawns
  fullName: Expedition.ChallengeTools.AppendAdditionalCreatureSpawns
- uid: Expedition.ChallengeTools.GenerateCreatureScores*
  commentId: Overload:Expedition.ChallengeTools.GenerateCreatureScores
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_GenerateCreatureScores_System_Collections_Generic_Dictionary_System_String_System_Int32___
  name: GenerateCreatureScores
  nameWithType: ChallengeTools.GenerateCreatureScores
  fullName: Expedition.ChallengeTools.GenerateCreatureScores
- uid: Expedition.ChallengeTools.IGT*
  commentId: Overload:Expedition.ChallengeTools.IGT
  isExternal: true
  href: Expedition.ChallengeTools.html#Expedition_ChallengeTools_IGT
  name: IGT
  nameWithType: ChallengeTools.IGT
  fullName: Expedition.ChallengeTools.IGT
- uid: Global.InGameTranslator
  commentId: T:Global.InGameTranslator
  isExternal: true
  href: InGameTranslator.html
  name: InGameTranslator
  nameWithType: InGameTranslator
  fullName: InGameTranslator
