### YamlMime:ManagedReference
items:
- uid: Global.TileTypeResistance
  commentId: T:Global.TileTypeResistance
  id: TileTypeResistance
  parent: Global
  children:
  - Global.TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)
  - Global.TileTypeResistance.accessibility
  - Global.TileTypeResistance.cost
  langs:
  - csharp
  - vb
  name: TileTypeResistance
  nameWithType: TileTypeResistance
  fullName: TileTypeResistance
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:TileTypeResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct TileTypeResistance
    content.vb: Public Structure TileTypeResistance
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.TileTypeResistance.accessibility
  commentId: F:Global.TileTypeResistance.accessibility
  id: accessibility
  parent: Global.TileTypeResistance
  langs:
  - csharp
  - vb
  name: accessibility
  nameWithType: TileTypeResistance.accessibility
  fullName: TileTypeResistance.accessibility
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TileTypeResistance.accessibility</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AItile.Accessibility accessibility
    return:
      type: Global.AItile.Accessibility
    content.vb: Public accessibility As AItile.Accessibility
- uid: Global.TileTypeResistance.cost
  commentId: F:Global.TileTypeResistance.cost
  id: cost
  parent: Global.TileTypeResistance
  langs:
  - csharp
  - vb
  name: cost
  nameWithType: TileTypeResistance.cost
  fullName: TileTypeResistance.cost
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:TileTypeResistance.cost</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PathCost cost
    return:
      type: Global.PathCost
    content.vb: Public cost As PathCost
- uid: Global.TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)
  commentId: M:Global.TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)
  id: '#ctor(AItile.Accessibility,System.Single,PathCost.Legality)'
  parent: Global.TileTypeResistance
  langs:
  - csharp
  - vb
  name: TileTypeResistance(Accessibility, float, Legality)
  nameWithType: TileTypeResistance.TileTypeResistance(AItile.Accessibility, float, PathCost.Legality)
  fullName: TileTypeResistance.TileTypeResistance(AItile.Accessibility, float, PathCost.Legality)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>TileTypeResistance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TileTypeResistance(AItile.Accessibility accessibility, float resistance, PathCost.Legality legality)
    parameters:
    - id: accessibility
      type: Global.AItile.Accessibility
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>accessibility</parameter>
            <parameter>M:TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)</parameter>
          </include>
        </markup>
    - id: resistance
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>resistance</parameter>
            <parameter>M:TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)</parameter>
          </include>
        </markup>
    - id: legality
      type: Global.PathCost.Legality
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legality</parameter>
            <parameter>M:TileTypeResistance.#ctor(AItile.Accessibility,System.Single,PathCost.Legality)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(accessibility As AItile.Accessibility, resistance As Single, legality As PathCost.Legality)
  overload: Global.TileTypeResistance.#ctor*
  nameWithType.vb: TileTypeResistance.New(AItile.Accessibility, Single, PathCost.Legality)
  fullName.vb: TileTypeResistance.New(AItile.Accessibility, Single, PathCost.Legality)
  name.vb: New(Accessibility, Single, Legality)
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AItile.Accessibility
  commentId: T:Global.AItile.Accessibility
  isExternal: true
  href: AItile.html
  name: AItile.Accessibility
  nameWithType: AItile.Accessibility
  fullName: AItile.Accessibility
  spec.csharp:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
  spec.vb:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
- uid: Global.PathCost
  commentId: T:Global.PathCost
  isExternal: true
  href: PathCost.html
  name: PathCost
  nameWithType: PathCost
  fullName: PathCost
- uid: Global.TileTypeResistance.#ctor*
  commentId: Overload:Global.TileTypeResistance.#ctor
  isExternal: true
  href: Global.TileTypeResistance.html#TileTypeResistance__ctor_AItile_Accessibility_System_Single_PathCost_Legality_
  name: TileTypeResistance
  nameWithType: TileTypeResistance.TileTypeResistance
  fullName: TileTypeResistance.TileTypeResistance
  nameWithType.vb: TileTypeResistance.New
  fullName.vb: TileTypeResistance.New
  name.vb: New
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PathCost.Legality
  commentId: T:Global.PathCost.Legality
  isExternal: true
  href: PathCost.html
  name: PathCost.Legality
  nameWithType: PathCost.Legality
  fullName: PathCost.Legality
  spec.csharp:
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: .
  - uid: Global.PathCost.Legality
    name: Legality
    isExternal: true
    href: PathCost.Legality.html
  spec.vb:
  - uid: Global.PathCost
    name: PathCost
    isExternal: true
    href: PathCost.html
  - name: .
  - uid: Global.PathCost.Legality
    name: Legality
    isExternal: true
    href: PathCost.Legality.html
