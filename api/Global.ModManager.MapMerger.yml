### YamlMime:ManagedReference
items:
- uid: Global.ModManager.MapMerger
  commentId: T:Global.ModManager.MapMerger
  id: ModManager.MapMerger
  parent: Global
  children:
  - Global.ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  - Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)
  - Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  - Global.ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)
  - Global.ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])
  - Global.ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)
  - Global.ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)
  - Global.ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)
  langs:
  - csharp
  - vb
  name: ModManager.MapMerger
  nameWithType: ModManager.MapMerger
  fullName: ModManager.MapMerger
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ModManager.MapMerger</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class ModManager.MapMerger
    content.vb: Public Module ModManager.MapMerger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)
  commentId: M:Global.ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)
  id: ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: ResolveVersionSource(Mod, string, bool)
  nameWithType: ModManager.MapMerger.ResolveVersionSource(ModManager.Mod, string, bool)
  fullName: ModManager.MapMerger.ResolveVersionSource(ModManager.Mod, string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string ResolveVersionSource(ModManager.Mod mod, string filePath, bool modifyFile = false)
    parameters:
    - id: mod
      type: Global.ModManager.Mod
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mod</parameter>
            <parameter>M:ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: filePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filePath</parameter>
            <parameter>M:ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: modifyFile
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>modifyFile</parameter>
            <parameter>M:ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.MapMerger.ResolveVersionSource(ModManager.Mod,System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ResolveVersionSource([mod] As ModManager.Mod, filePath As String, modifyFile As Boolean = False) As String
  overload: Global.ModManager.MapMerger.ResolveVersionSource*
  nameWithType.vb: ModManager.MapMerger.ResolveVersionSource(ModManager.Mod, String, Boolean)
  fullName.vb: ModManager.MapMerger.ResolveVersionSource(ModManager.Mod, String, Boolean)
  name.vb: ResolveVersionSource(Mod, String, Boolean)
- uid: Global.ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])
  commentId: M:Global.ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])
  id: MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: MergeMapFiles(ModMerger, PendingApply, string, string[])
  nameWithType: ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger, ModManager.ModMerger.PendingApply, string, string[])
  fullName: ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger, ModManager.ModMerger.PendingApply, string, string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void MergeMapFiles(ModManager.ModMerger merger, ModManager.ModMerger.PendingApply pendingApply, string sourcePath, string[] mergeLines)
    parameters:
    - id: merger
      type: Global.ModManager.ModMerger
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>merger</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: pendingApply
      type: Global.ModManager.ModMerger.PendingApply
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pendingApply</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: sourcePath
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourcePath</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: mergeLines
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mergeLines</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger,ModManager.ModMerger.PendingApply,System.String,System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub MergeMapFiles(merger As ModManager.ModMerger, pendingApply As ModManager.ModMerger.PendingApply, sourcePath As String, mergeLines As String())
  overload: Global.ModManager.MapMerger.MergeMapFiles*
  nameWithType.vb: ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger, ModManager.ModMerger.PendingApply, String, String())
  fullName.vb: ModManager.MapMerger.MergeMapFiles(ModManager.ModMerger, ModManager.ModMerger.PendingApply, String, String())
  name.vb: MergeMapFiles(ModMerger, PendingApply, String, String())
- uid: Global.ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  commentId: M:Global.ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  id: LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: LocateMissingRoomSizes(List<string>, Dictionary<string, MapRoomLine>)
  nameWithType: ModManager.MapMerger.LocateMissingRoomSizes(List<string>, Dictionary<string, ModManager.MapMerger.MapRoomLine>)
  fullName: ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List<string>, System.Collections.Generic.Dictionary<string, ModManager.MapMerger.MapRoomLine>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LocateMissingRoomSizes(List<string> roomsToLocate, Dictionary<string, ModManager.MapMerger.MapRoomLine> dict)
    parameters:
    - id: roomsToLocate
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomsToLocate</parameter>
            <parameter>M:ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
          </include>
        </markup>
    - id: dict
      type: System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dict</parameter>
            <parameter>M:ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List{System.String},System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LocateMissingRoomSizes(roomsToLocate As List(Of String), dict As Dictionary(Of String, ModManager.MapMerger.MapRoomLine))
  overload: Global.ModManager.MapMerger.LocateMissingRoomSizes*
  nameWithType.vb: ModManager.MapMerger.LocateMissingRoomSizes(List(Of String), Dictionary(Of String, ModManager.MapMerger.MapRoomLine))
  fullName.vb: ModManager.MapMerger.LocateMissingRoomSizes(System.Collections.Generic.List(Of String), System.Collections.Generic.Dictionary(Of String, ModManager.MapMerger.MapRoomLine))
  name.vb: LocateMissingRoomSizes(List(Of String), Dictionary(Of String, MapRoomLine))
- uid: Global.ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  commentId: M:Global.ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  id: BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: BottomLeftLocator(Dictionary<string, MapRoomLine>)
  nameWithType: ModManager.MapMerger.BottomLeftLocator(Dictionary<string, ModManager.MapMerger.MapRoomLine>)
  fullName: ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary<string, ModManager.MapMerger.MapRoomLine>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 BottomLeftLocator(Dictionary<string, ModManager.MapMerger.MapRoomLine> mapRoomLines)
    parameters:
    - id: mapRoomLines
      type: System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mapRoomLines</parameter>
            <parameter>M:ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function BottomLeftLocator(mapRoomLines As Dictionary(Of String, ModManager.MapMerger.MapRoomLine)) As Vector2
  overload: Global.ModManager.MapMerger.BottomLeftLocator*
  nameWithType.vb: ModManager.MapMerger.BottomLeftLocator(Dictionary(Of String, ModManager.MapMerger.MapRoomLine))
  fullName.vb: ModManager.MapMerger.BottomLeftLocator(System.Collections.Generic.Dictionary(Of String, ModManager.MapMerger.MapRoomLine))
  name.vb: BottomLeftLocator(Dictionary(Of String, MapRoomLine))
- uid: Global.ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)
  commentId: M:Global.ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)
  id: MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: MergeWorldMaps(ModMerger, ModApplyer)
  nameWithType: ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger, ModManager.ModApplyer)
  fullName: ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger, ModManager.ModApplyer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void MergeWorldMaps(ModManager.ModMerger merger, ModManager.ModApplyer applyer)
    parameters:
    - id: merger
      type: Global.ModManager.ModMerger
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>merger</parameter>
            <parameter>M:ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)</parameter>
          </include>
        </markup>
    - id: applyer
      type: Global.ModManager.ModApplyer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>applyer</parameter>
            <parameter>M:ModManager.MapMerger.MergeWorldMaps(ModManager.ModMerger,ModManager.ModApplyer)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub MergeWorldMaps(merger As ModManager.ModMerger, applyer As ModManager.ModApplyer)
  overload: Global.ModManager.MapMerger.MergeWorldMaps*
- uid: Global.ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)
  commentId: M:Global.ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)
  id: MergeMap(ModManager.MapMerger.MergeMapInstructions)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: MergeMap(MergeMapInstructions)
  nameWithType: ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)
  fullName: ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void MergeMap(ModManager.MapMerger.MergeMapInstructions instructions)
    parameters:
    - id: instructions
      type: Global.ModManager.MapMerger.MergeMapInstructions
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>instructions</parameter>
            <parameter>M:ModManager.MapMerger.MergeMap(ModManager.MapMerger.MergeMapInstructions)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub MergeMap(instructions As ModManager.MapMerger.MergeMapInstructions)
  overload: Global.ModManager.MapMerger.MergeMap*
- uid: Global.ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  id: OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: OmniResize(Texture2D, int, int, int, int)
  nameWithType: ModManager.MapMerger.OmniResize(Texture2D, int, int, int, int)
  fullName: ModManager.MapMerger.OmniResize(UnityEngine.Texture2D, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void OmniResize(Texture2D texture, int xOrigin, int yOrigin, int xAmount, int yAmount)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: xOrigin
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xOrigin</parameter>
            <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: yOrigin
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yOrigin</parameter>
            <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: xAmount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xAmount</parameter>
            <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: yAmount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yAmount</parameter>
            <parameter>M:ModManager.MapMerger.OmniResize(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub OmniResize(texture As Texture2D, xOrigin As Integer, yOrigin As Integer, xAmount As Integer, yAmount As Integer)
  overload: Global.ModManager.MapMerger.OmniResize*
  nameWithType.vb: ModManager.MapMerger.OmniResize(Texture2D, Integer, Integer, Integer, Integer)
  fullName.vb: ModManager.MapMerger.OmniResize(UnityEngine.Texture2D, Integer, Integer, Integer, Integer)
  name.vb: OmniResize(Texture2D, Integer, Integer, Integer, Integer)
- uid: Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  id: FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: FillGreen(Texture2D, int, int, int, int)
  nameWithType: ModManager.MapMerger.FillGreen(Texture2D, int, int, int, int)
  fullName: ModManager.MapMerger.FillGreen(UnityEngine.Texture2D, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void FillGreen(Texture2D texture, int X, int Y, int width, int height)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: X
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>X</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: Y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Y</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: width
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>width</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: height
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>height</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub FillGreen(texture As Texture2D, X As Integer, Y As Integer, width As Integer, height As Integer)
  overload: Global.ModManager.MapMerger.FillGreen*
  nameWithType.vb: ModManager.MapMerger.FillGreen(Texture2D, Integer, Integer, Integer, Integer)
  fullName.vb: ModManager.MapMerger.FillGreen(UnityEngine.Texture2D, Integer, Integer, Integer, Integer)
  name.vb: FillGreen(Texture2D, Integer, Integer, Integer, Integer)
- uid: Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)
  commentId: M:Global.ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)
  id: FillGreen(UnityEngine.Texture2D)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: FillGreen(Texture2D)
  nameWithType: ModManager.MapMerger.FillGreen(Texture2D)
  fullName: ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void FillGreen(Texture2D texture)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:ModManager.MapMerger.FillGreen(UnityEngine.Texture2D)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub FillGreen(texture As Texture2D)
  overload: Global.ModManager.MapMerger.FillGreen*
- uid: Global.ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)
  commentId: M:Global.ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)
  id: TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)
  parent: Global.ModManager.MapMerger
  langs:
  - csharp
  - vb
  name: TransBlit(Texture2D, Texture2D, IntVector2)
  nameWithType: ModManager.MapMerger.TransBlit(Texture2D, Texture2D, IntVector2)
  fullName: ModManager.MapMerger.TransBlit(UnityEngine.Texture2D, UnityEngine.Texture2D, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void TransBlit(Texture2D texture, Texture2D texture2, IntVector2 offset)
    parameters:
    - id: texture
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: texture2
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture2</parameter>
            <parameter>M:ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: offset
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offset</parameter>
            <parameter>M:ModManager.MapMerger.TransBlit(UnityEngine.Texture2D,UnityEngine.Texture2D,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub TransBlit(texture As Texture2D, texture2 As Texture2D, offset As IntVector2)
  overload: Global.ModManager.MapMerger.TransBlit*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.ModManager.MapMerger.ResolveVersionSource*
  commentId: Overload:Global.ModManager.MapMerger.ResolveVersionSource
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_ResolveVersionSource_ModManager_Mod_System_String_System_Boolean_
  name: ResolveVersionSource
  nameWithType: ModManager.MapMerger.ResolveVersionSource
  fullName: ModManager.MapMerger.ResolveVersionSource
- uid: Global.ModManager.Mod
  commentId: T:Global.ModManager.Mod
  isExternal: true
  href: ModManager.html
  name: ModManager.Mod
  nameWithType: ModManager.Mod
  fullName: ModManager.Mod
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.Mod
    name: Mod
    isExternal: true
    href: ModManager.Mod.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.Mod
    name: Mod
    isExternal: true
    href: ModManager.Mod.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.ModManager.MapMerger.MergeMapFiles*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapFiles
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_MergeMapFiles_ModManager_ModMerger_ModManager_ModMerger_PendingApply_System_String_System_String___
  name: MergeMapFiles
  nameWithType: ModManager.MapMerger.MergeMapFiles
  fullName: ModManager.MapMerger.MergeMapFiles
- uid: Global.ModManager.ModMerger
  commentId: T:Global.ModManager.ModMerger
  isExternal: true
  href: ModManager.html
  name: ModManager.ModMerger
  nameWithType: ModManager.ModMerger
  fullName: ModManager.ModMerger
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModMerger
    name: ModMerger
    isExternal: true
    href: ModManager.ModMerger.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModMerger
    name: ModMerger
    isExternal: true
    href: ModManager.ModMerger.html
- uid: Global.ModManager.ModMerger.PendingApply
  commentId: T:Global.ModManager.ModMerger.PendingApply
  isExternal: true
  href: ModManager.html
  name: ModManager.ModMerger.PendingApply
  nameWithType: ModManager.ModMerger.PendingApply
  fullName: ModManager.ModMerger.PendingApply
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModMerger
    name: ModMerger
    isExternal: true
    href: ModManager.ModMerger.html
  - name: .
  - uid: Global.ModManager.ModMerger.PendingApply
    name: PendingApply
    isExternal: true
    href: ModManager.ModMerger.PendingApply.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModMerger
    name: ModMerger
    isExternal: true
    href: ModManager.ModMerger.html
  - name: .
  - uid: Global.ModManager.ModMerger.PendingApply
    name: PendingApply
    isExternal: true
    href: ModManager.ModMerger.PendingApply.html
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.ModManager.MapMerger.LocateMissingRoomSizes*
  commentId: Overload:Global.ModManager.MapMerger.LocateMissingRoomSizes
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_LocateMissingRoomSizes_System_Collections_Generic_List_System_String__System_Collections_Generic_Dictionary_System_String_ModManager_MapMerger_MapRoomLine__
  name: LocateMissingRoomSizes
  nameWithType: ModManager.MapMerger.LocateMissingRoomSizes
  fullName: ModManager.MapMerger.LocateMissingRoomSizes
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine}
  commentId: T:System.Collections.Generic.Dictionary{System.String,ModManager.MapMerger.MapRoomLine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, ModManager.MapMerger.MapRoomLine>
  nameWithType: Dictionary<string, ModManager.MapMerger.MapRoomLine>
  fullName: System.Collections.Generic.Dictionary<string, ModManager.MapMerger.MapRoomLine>
  nameWithType.vb: Dictionary(Of String, ModManager.MapMerger.MapRoomLine)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, ModManager.MapMerger.MapRoomLine)
  name.vb: Dictionary(Of String, ModManager.MapMerger.MapRoomLine)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MapRoomLine
    name: MapRoomLine
    isExternal: true
    href: ModManager.MapMerger.MapRoomLine.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MapRoomLine
    name: MapRoomLine
    isExternal: true
    href: ModManager.MapMerger.MapRoomLine.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Global.ModManager.MapMerger.BottomLeftLocator*
  commentId: Overload:Global.ModManager.MapMerger.BottomLeftLocator
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_BottomLeftLocator_System_Collections_Generic_Dictionary_System_String_ModManager_MapMerger_MapRoomLine__
  name: BottomLeftLocator
  nameWithType: ModManager.MapMerger.BottomLeftLocator
  fullName: ModManager.MapMerger.BottomLeftLocator
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ModManager.MapMerger.MergeWorldMaps*
  commentId: Overload:Global.ModManager.MapMerger.MergeWorldMaps
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_MergeWorldMaps_ModManager_ModMerger_ModManager_ModApplyer_
  name: MergeWorldMaps
  nameWithType: ModManager.MapMerger.MergeWorldMaps
  fullName: ModManager.MapMerger.MergeWorldMaps
- uid: Global.ModManager.ModApplyer
  commentId: T:Global.ModManager.ModApplyer
  isExternal: true
  href: ModManager.html
  name: ModManager.ModApplyer
  nameWithType: ModManager.ModApplyer
  fullName: ModManager.ModApplyer
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModApplyer
    name: ModApplyer
    isExternal: true
    href: ModManager.ModApplyer.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.ModApplyer
    name: ModApplyer
    isExternal: true
    href: ModManager.ModApplyer.html
- uid: Global.ModManager.MapMerger.MergeMap*
  commentId: Overload:Global.ModManager.MapMerger.MergeMap
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_MergeMap_ModManager_MapMerger_MergeMapInstructions_
  name: MergeMap
  nameWithType: ModManager.MapMerger.MergeMap
  fullName: ModManager.MapMerger.MergeMap
- uid: Global.ModManager.MapMerger.MergeMapInstructions
  commentId: T:Global.ModManager.MapMerger.MergeMapInstructions
  isExternal: true
  href: ModManager.html
  name: ModManager.MapMerger.MergeMapInstructions
  nameWithType: ModManager.MapMerger.MergeMapInstructions
  fullName: ModManager.MapMerger.MergeMapInstructions
  spec.csharp:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapInstructions
    name: MergeMapInstructions
    isExternal: true
    href: ModManager.MapMerger.MergeMapInstructions.html
  spec.vb:
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapInstructions
    name: MergeMapInstructions
    isExternal: true
    href: ModManager.MapMerger.MergeMapInstructions.html
- uid: Global.ModManager.MapMerger.OmniResize*
  commentId: Overload:Global.ModManager.MapMerger.OmniResize
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_OmniResize_UnityEngine_Texture2D_System_Int32_System_Int32_System_Int32_System_Int32_
  name: OmniResize
  nameWithType: ModManager.MapMerger.OmniResize
  fullName: ModManager.MapMerger.OmniResize
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ModManager.MapMerger.FillGreen*
  commentId: Overload:Global.ModManager.MapMerger.FillGreen
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_FillGreen_UnityEngine_Texture2D_System_Int32_System_Int32_System_Int32_System_Int32_
  name: FillGreen
  nameWithType: ModManager.MapMerger.FillGreen
  fullName: ModManager.MapMerger.FillGreen
- uid: Global.ModManager.MapMerger.TransBlit*
  commentId: Overload:Global.ModManager.MapMerger.TransBlit
  isExternal: true
  href: Global.ModManager.MapMerger.html#ModManager_MapMerger_TransBlit_UnityEngine_Texture2D_UnityEngine_Texture2D_RWCustom_IntVector2_
  name: TransBlit
  nameWithType: ModManager.MapMerger.TransBlit
  fullName: ModManager.MapMerger.TransBlit
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
