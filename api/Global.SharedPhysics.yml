### YamlMime:ManagedReference
items:
- uid: Global.SharedPhysics
  commentId: T:Global.SharedPhysics
  id: SharedPhysics
  parent: Global
  children:
  - Global.SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  - Global.SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)
  - Global.SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})
  - Global.SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)
  - Global.SharedPhysics.MaxRepeats
  - Global.SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])
  - Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})
  - Global.SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)
  - Global.SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  - Global.SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)
  - Global.SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  - Global.SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)
  langs:
  - csharp
  - vb
  name: SharedPhysics
  nameWithType: SharedPhysics
  fullName: SharedPhysics
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SharedPhysics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class SharedPhysics
    content.vb: Public Module SharedPhysics
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SharedPhysics.MaxRepeats
  commentId: F:Global.SharedPhysics.MaxRepeats
  id: MaxRepeats
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: MaxRepeats
  nameWithType: SharedPhysics.MaxRepeats
  fullName: SharedPhysics.MaxRepeats
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:SharedPhysics.MaxRepeats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int MaxRepeats
    return:
      type: System.Int32
    content.vb: Public Shared MaxRepeats As Integer
- uid: Global.SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)
  commentId: M:Global.SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)
  id: TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: TraceProjectileAgainstBodyChunks(IProjectileTracer, Room, Vector2, ref Vector2, float, int, PhysicalObject, bool)
  nameWithType: SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer, Room, Vector2, ref Vector2, float, int, PhysicalObject, bool)
  fullName: SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer, Room, UnityEngine.Vector2, ref UnityEngine.Vector2, float, int, PhysicalObject, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SharedPhysics.CollisionResult TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer projTracer, Room room, Vector2 lastPos, ref Vector2 pos, float rad, int collisionLayer, PhysicalObject exemptObject, bool hitAppendages)
    parameters:
    - id: projTracer
      type: Global.SharedPhysics.IProjectileTracer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>projTracer</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lastPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPos</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: collisionLayer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>collisionLayer</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: exemptObject
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exemptObject</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hitAppendages
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hitAppendages</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.SharedPhysics.CollisionResult
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer,Room,UnityEngine.Vector2,UnityEngine.Vector2@,System.Single,System.Int32,PhysicalObject,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function TraceProjectileAgainstBodyChunks(projTracer As SharedPhysics.IProjectileTracer, room As Room, lastPos As Vector2, pos As Vector2, rad As Single, collisionLayer As Integer, exemptObject As PhysicalObject, hitAppendages As Boolean) As SharedPhysics.CollisionResult
  overload: Global.SharedPhysics.TraceProjectileAgainstBodyChunks*
  nameWithType.vb: SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer, Room, Vector2, Vector2, Single, Integer, PhysicalObject, Boolean)
  fullName.vb: SharedPhysics.TraceProjectileAgainstBodyChunks(SharedPhysics.IProjectileTracer, Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, Integer, PhysicalObject, Boolean)
  name.vb: TraceProjectileAgainstBodyChunks(IProjectileTracer, Room, Vector2, Vector2, Single, Integer, PhysicalObject, Boolean)
- uid: Global.SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  commentId: M:Global.SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  id: TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: TerrainCollisionTime(Room, Vector2, Vector2, float, bool)
  nameWithType: SharedPhysics.TerrainCollisionTime(Room, Vector2, Vector2, float, bool)
  fullName: SharedPhysics.TerrainCollisionTime(Room, UnityEngine.Vector2, UnityEngine.Vector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float TerrainCollisionTime(Room room, Vector2 pos, Vector2 lastPos, float rad, bool goThroughFloors)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lastPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPos</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: goThroughFloors
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goThroughFloors</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.TerrainCollisionTime(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function TerrainCollisionTime(room As Room, pos As Vector2, lastPos As Vector2, rad As Single, goThroughFloors As Boolean) As Single
  overload: Global.SharedPhysics.TerrainCollisionTime*
  nameWithType.vb: SharedPhysics.TerrainCollisionTime(Room, Vector2, Vector2, Single, Boolean)
  fullName.vb: SharedPhysics.TerrainCollisionTime(Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, Boolean)
  name.vb: TerrainCollisionTime(Room, Vector2, Vector2, Single, Boolean)
- uid: Global.SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  commentId: M:Global.SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  id: CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: CollisionResultTraceTerrainCollision(Room, Vector2, Vector2, float, bool)
  nameWithType: SharedPhysics.CollisionResultTraceTerrainCollision(Room, Vector2, Vector2, float, bool)
  fullName: SharedPhysics.CollisionResultTraceTerrainCollision(Room, UnityEngine.Vector2, UnityEngine.Vector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SharedPhysics.CollisionResult CollisionResultTraceTerrainCollision(Room room, Vector2 pos, Vector2 lastPos, float rad, bool goThroughFloors)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lastPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPos</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: goThroughFloors
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goThroughFloors</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.SharedPhysics.CollisionResult
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.CollisionResultTraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CollisionResultTraceTerrainCollision(room As Room, pos As Vector2, lastPos As Vector2, rad As Single, goThroughFloors As Boolean) As SharedPhysics.CollisionResult
  overload: Global.SharedPhysics.CollisionResultTraceTerrainCollision*
  nameWithType.vb: SharedPhysics.CollisionResultTraceTerrainCollision(Room, Vector2, Vector2, Single, Boolean)
  fullName.vb: SharedPhysics.CollisionResultTraceTerrainCollision(Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, Boolean)
  name.vb: CollisionResultTraceTerrainCollision(Room, Vector2, Vector2, Single, Boolean)
- uid: Global.SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  id: ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: ExactTerrainRayTracePos(Room, Vector2, Vector2)
  nameWithType: SharedPhysics.ExactTerrainRayTracePos(Room, Vector2, Vector2)
  fullName: SharedPhysics.ExactTerrainRayTracePos(Room, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2? ExactTerrainRayTracePos(Room room, Vector2 A, Vector2 B)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTracePos(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ExactTerrainRayTracePos(room As Room, A As Vector2, B As Vector2) As Vector2?
  overload: Global.SharedPhysics.ExactTerrainRayTracePos*
- uid: Global.SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  id: ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: ExactTerrainRayTrace(Room, Vector2, Vector2)
  nameWithType: SharedPhysics.ExactTerrainRayTrace(Room, Vector2, Vector2)
  fullName: SharedPhysics.ExactTerrainRayTrace(Room, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FloatRect? ExactTerrainRayTrace(Room room, Vector2 A, Vector2 B)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{FloatRect}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.ExactTerrainRayTrace(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ExactTerrainRayTrace(room As Room, A As Vector2, B As Vector2) As FloatRect?
  overload: Global.SharedPhysics.ExactTerrainRayTrace*
- uid: Global.SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  commentId: M:Global.SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  id: TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: TraceTerrainCollision(Room, Vector2, Vector2, float, bool)
  nameWithType: SharedPhysics.TraceTerrainCollision(Room, Vector2, Vector2, float, bool)
  fullName: SharedPhysics.TraceTerrainCollision(Room, UnityEngine.Vector2, UnityEngine.Vector2, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 TraceTerrainCollision(Room room, Vector2 pos, Vector2 lastPos, float rad, bool goThroughFloors)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: lastPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPos</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: goThroughFloors
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>goThroughFloors</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.TraceTerrainCollision(Room,UnityEngine.Vector2,UnityEngine.Vector2,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function TraceTerrainCollision(room As Room, pos As Vector2, lastPos As Vector2, rad As Single, goThroughFloors As Boolean) As Vector2
  overload: Global.SharedPhysics.TraceTerrainCollision*
  nameWithType.vb: SharedPhysics.TraceTerrainCollision(Room, Vector2, Vector2, Single, Boolean)
  fullName.vb: SharedPhysics.TraceTerrainCollision(Room, UnityEngine.Vector2, UnityEngine.Vector2, Single, Boolean)
  name.vb: TraceTerrainCollision(Room, Vector2, Vector2, Single, Boolean)
- uid: Global.SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)
  commentId: M:Global.SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)
  id: HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: HorizontalCollision(Room, TerrainCollisionData)
  nameWithType: SharedPhysics.HorizontalCollision(Room, SharedPhysics.TerrainCollisionData)
  fullName: SharedPhysics.HorizontalCollision(Room, SharedPhysics.TerrainCollisionData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SharedPhysics.TerrainCollisionData HorizontalCollision(Room room, SharedPhysics.TerrainCollisionData cd)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    - id: cd
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cd</parameter>
            <parameter>M:SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    return:
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.HorizontalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HorizontalCollision(room As Room, cd As SharedPhysics.TerrainCollisionData) As SharedPhysics.TerrainCollisionData
  overload: Global.SharedPhysics.HorizontalCollision*
- uid: Global.SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)
  commentId: M:Global.SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)
  id: VerticalCollision(Room,SharedPhysics.TerrainCollisionData)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: VerticalCollision(Room, TerrainCollisionData)
  nameWithType: SharedPhysics.VerticalCollision(Room, SharedPhysics.TerrainCollisionData)
  fullName: SharedPhysics.VerticalCollision(Room, SharedPhysics.TerrainCollisionData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SharedPhysics.TerrainCollisionData VerticalCollision(Room room, SharedPhysics.TerrainCollisionData cd)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    - id: cd
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cd</parameter>
            <parameter>M:SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    return:
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.VerticalCollision(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function VerticalCollision(room As Room, cd As SharedPhysics.TerrainCollisionData) As SharedPhysics.TerrainCollisionData
  overload: Global.SharedPhysics.VerticalCollision*
- uid: Global.SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)
  commentId: M:Global.SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)
  id: SlopesVertically(Room,SharedPhysics.TerrainCollisionData)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: SlopesVertically(Room, TerrainCollisionData)
  nameWithType: SharedPhysics.SlopesVertically(Room, SharedPhysics.TerrainCollisionData)
  fullName: SharedPhysics.SlopesVertically(Room, SharedPhysics.TerrainCollisionData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SharedPhysics.TerrainCollisionData SlopesVertically(Room room, SharedPhysics.TerrainCollisionData cd)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    - id: cd
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cd</parameter>
            <parameter>M:SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    return:
      type: Global.SharedPhysics.TerrainCollisionData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.SlopesVertically(Room,SharedPhysics.TerrainCollisionData)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlopesVertically(room As Room, cd As SharedPhysics.TerrainCollisionData) As SharedPhysics.TerrainCollisionData
  overload: Global.SharedPhysics.SlopesVertically*
- uid: Global.SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  id: RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrain(Room, IntVector2, IntVector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrain(Room, IntVector2, IntVector2)
  fullName: SharedPhysics.RayTraceTilesForTerrain(Room, RWCustom.IntVector2, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RayTraceTilesForTerrain(Room room, IntVector2 a, IntVector2 b)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrain(room As Room, a As IntVector2, b As IntVector2) As Boolean
  overload: Global.SharedPhysics.RayTraceTilesForTerrain*
- uid: Global.SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrain(Room, int, int, int, int)
  nameWithType: SharedPhysics.RayTraceTilesForTerrain(Room, int, int, int, int)
  fullName: SharedPhysics.RayTraceTilesForTerrain(Room, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RayTraceTilesForTerrain(Room room, int x0, int y0, int x1, int y1)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrain(room As Room, x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As Boolean
  overload: Global.SharedPhysics.RayTraceTilesForTerrain*
  nameWithType.vb: SharedPhysics.RayTraceTilesForTerrain(Room, Integer, Integer, Integer, Integer)
  fullName.vb: SharedPhysics.RayTraceTilesForTerrain(Room, Integer, Integer, Integer, Integer)
  name.vb: RayTraceTilesForTerrain(Room, Integer, Integer, Integer, Integer)
- uid: Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  id: RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainAcceptStartInSolid(Room, IntVector2, IntVector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, IntVector2, IntVector2)
  fullName: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, RWCustom.IntVector2, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RayTraceTilesForTerrainAcceptStartInSolid(Room room, IntVector2 a, IntVector2 b)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainAcceptStartInSolid(room As Room, a As IntVector2, b As IntVector2) As Boolean
  overload: Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid*
- uid: Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainAcceptStartInSolid(Room, int, int, int, int)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, int, int, int, int)
  fullName: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RayTraceTilesForTerrainAcceptStartInSolid(Room room, int x0, int y0, int x1, int y1)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainAcceptStartInSolid(room As Room, x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As Boolean
  overload: Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid*
  nameWithType.vb: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, Integer, Integer, Integer, Integer)
  fullName.vb: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid(Room, Integer, Integer, Integer, Integer)
  name.vb: RayTraceTilesForTerrainAcceptStartInSolid(Room, Integer, Integer, Integer, Integer)
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  id: RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainReturnFirstSolid(Room, IntVector2, IntVector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, IntVector2, IntVector2)
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, RWCustom.IntVector2, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2? RayTraceTilesForTerrainReturnFirstSolid(Room room, IntVector2 a, IntVector2 b)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainReturnFirstSolid(room As Room, a As IntVector2, b As IntVector2) As IntVector2?
  overload: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid*
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  id: RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainReturnFirstSolid(Room, int, int, int, int)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, int, int, int, int)
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2? RayTraceTilesForTerrainReturnFirstSolid(Room room, int x0, int y0, int x1, int y1)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y0</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y1</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainReturnFirstSolid(room As Room, x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As IntVector2?
  overload: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid*
  nameWithType.vb: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, Integer, Integer, Integer, Integer)
  fullName.vb: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, Integer, Integer, Integer, Integer)
  name.vb: RayTraceTilesForTerrainReturnFirstSolid(Room, Integer, Integer, Integer, Integer)
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  id: RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainReturnFirstSolid(Room, Vector2, Vector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, Vector2, Vector2)
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2? RayTraceTilesForTerrainReturnFirstSolid(Room room, Vector2 A, Vector2 B)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainReturnFirstSolid(room As Room, A As Vector2, B As Vector2) As IntVector2?
  overload: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid*
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  id: RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrainReturnFirstSolidOrPole(Room, Vector2, Vector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room, Vector2, Vector2)
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2? RayTraceTilesForTerrainReturnFirstSolidOrPole(Room room, Vector2 A, Vector2 B)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Nullable{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrainReturnFirstSolidOrPole(room As Room, A As Vector2, B As Vector2) As IntVector2?
  overload: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole*
- uid: Global.SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  id: RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrain(Room, Vector2, Vector2)
  nameWithType: SharedPhysics.RayTraceTilesForTerrain(Room, Vector2, Vector2)
  fullName: SharedPhysics.RayTraceTilesForTerrain(Room, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool RayTraceTilesForTerrain(Room room, Vector2 A, Vector2 B)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTraceTilesForTerrain(Room,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTraceTilesForTerrain(room As Room, A As Vector2, B As Vector2) As Boolean
  overload: Global.SharedPhysics.RayTraceTilesForTerrain*
- uid: Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})
  commentId: M:Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})
  id: RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTracedTilesArray(Vector2, Vector2, List<IntVector2>)
  nameWithType: SharedPhysics.RayTracedTilesArray(Vector2, Vector2, List<IntVector2>)
  fullName: SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2, UnityEngine.Vector2, System.Collections.Generic.List<RWCustom.IntVector2>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void RayTracedTilesArray(Vector2 A, Vector2 B, List<IntVector2> result)
    parameters:
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    - id: result
      type: System.Collections.Generic.List{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,System.Collections.Generic.List{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub RayTracedTilesArray(A As Vector2, B As Vector2, result As List(Of IntVector2))
  overload: Global.SharedPhysics.RayTracedTilesArray*
  nameWithType.vb: SharedPhysics.RayTracedTilesArray(Vector2, Vector2, List(Of IntVector2))
  fullName.vb: SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2, UnityEngine.Vector2, System.Collections.Generic.List(Of RWCustom.IntVector2))
  name.vb: RayTracedTilesArray(Vector2, Vector2, List(Of IntVector2))
- uid: Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)
  id: RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTracedTilesArray(Vector2, Vector2)
  nameWithType: SharedPhysics.RayTracedTilesArray(Vector2, Vector2)
  fullName: SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use function with void return value instead.")]

      public static List<IntVector2> RayTracedTilesArray(Vector2 A, Vector2 B)
    parameters:
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use function with void return value instead.")>

      Public Shared Function RayTracedTilesArray(A As Vector2, B As Vector2) As List(Of IntVector2)
  overload: Global.SharedPhysics.RayTracedTilesArray*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use function with void return value instead.
- uid: Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])
  commentId: M:Global.SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])
  id: RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: RayTracedTilesArray(Vector2, Vector2, IntVector2[])
  nameWithType: SharedPhysics.RayTracedTilesArray(Vector2, Vector2, IntVector2[])
  fullName: SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2, UnityEngine.Vector2, RWCustom.IntVector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int RayTracedTilesArray(Vector2 A, Vector2 B, IntVector2[] result)
    parameters:
    - id: A
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: B
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    - id: result
      type: RWCustom.IntVector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>result</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2,UnityEngine.Vector2,RWCustom.IntVector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RayTracedTilesArray(A As Vector2, B As Vector2, result As IntVector2()) As Integer
  overload: Global.SharedPhysics.RayTracedTilesArray*
  nameWithType.vb: SharedPhysics.RayTracedTilesArray(Vector2, Vector2, IntVector2())
  fullName.vb: SharedPhysics.RayTracedTilesArray(UnityEngine.Vector2, UnityEngine.Vector2, RWCustom.IntVector2())
  name.vb: RayTracedTilesArray(Vector2, Vector2, IntVector2())
- uid: Global.SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)
  id: ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: ConnectChunks(BodyChunk, BodyChunk, float, float, float, float)
  nameWithType: SharedPhysics.ConnectChunks(BodyChunk, BodyChunk, float, float, float, float)
  fullName: SharedPhysics.ConnectChunks(BodyChunk, BodyChunk, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ConnectChunks(BodyChunk A, BodyChunk B, float dist, float skewToMassFac, float massFacSkew, float elasticity)
    parameters:
    - id: A
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>A</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: B
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>B</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: dist
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dist</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: skewToMassFac
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>skewToMassFac</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: massFacSkew
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>massFacSkew</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: elasticity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>elasticity</parameter>
            <parameter>M:SharedPhysics.ConnectChunks(BodyChunk,BodyChunk,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub ConnectChunks(A As BodyChunk, B As BodyChunk, dist As Single, skewToMassFac As Single, massFacSkew As Single, elasticity As Single)
  overload: Global.SharedPhysics.ConnectChunks*
  nameWithType.vb: SharedPhysics.ConnectChunks(BodyChunk, BodyChunk, Single, Single, Single, Single)
  fullName.vb: SharedPhysics.ConnectChunks(BodyChunk, BodyChunk, Single, Single, Single, Single)
  name.vb: ConnectChunks(BodyChunk, BodyChunk, Single, Single, Single, Single)
- uid: Global.SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})
  commentId: M:Global.SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})
  id: FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})
  parent: Global.SharedPhysics
  langs:
  - csharp
  - vb
  name: FindEdges(Room, IntRect, Func<IntVector2, bool>)
  nameWithType: SharedPhysics.FindEdges(Room, IntRect, Func<IntVector2, bool>)
  fullName: SharedPhysics.FindEdges(Room, RWCustom.IntRect, System.Func<RWCustom.IntVector2, bool>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static List<SharedPhysics.Edge> FindEdges(Room room, IntRect bounds, Func<IntVector2, bool> isTileIncluded)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})</parameter>
          </include>
        </markup>
    - id: bounds
      type: RWCustom.IntRect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bounds</parameter>
            <parameter>M:SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})</parameter>
          </include>
        </markup>
    - id: isTileIncluded
      type: System.Func{RWCustom.IntVector2,System.Boolean}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isTileIncluded</parameter>
            <parameter>M:SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{SharedPhysics.Edge}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SharedPhysics.FindEdges(Room,RWCustom.IntRect,System.Func{RWCustom.IntVector2,System.Boolean})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FindEdges(room As Room, bounds As IntRect, isTileIncluded As Func(Of IntVector2, Boolean)) As List(Of SharedPhysics.Edge)
  overload: Global.SharedPhysics.FindEdges*
  nameWithType.vb: SharedPhysics.FindEdges(Room, IntRect, Func(Of IntVector2, Boolean))
  fullName.vb: SharedPhysics.FindEdges(Room, RWCustom.IntRect, System.Func(Of RWCustom.IntVector2, Boolean))
  name.vb: FindEdges(Room, IntRect, Func(Of IntVector2, Boolean))
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SharedPhysics.TraceProjectileAgainstBodyChunks*
  commentId: Overload:Global.SharedPhysics.TraceProjectileAgainstBodyChunks
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_TraceProjectileAgainstBodyChunks_SharedPhysics_IProjectileTracer_Room_UnityEngine_Vector2_UnityEngine_Vector2__System_Single_System_Int32_PhysicalObject_System_Boolean_
  name: TraceProjectileAgainstBodyChunks
  nameWithType: SharedPhysics.TraceProjectileAgainstBodyChunks
  fullName: SharedPhysics.TraceProjectileAgainstBodyChunks
- uid: Global.SharedPhysics.IProjectileTracer
  commentId: T:Global.SharedPhysics.IProjectileTracer
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.IProjectileTracer
  nameWithType: SharedPhysics.IProjectileTracer
  fullName: SharedPhysics.IProjectileTracer
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.IProjectileTracer
    name: IProjectileTracer
    isExternal: true
    href: SharedPhysics.IProjectileTracer.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.IProjectileTracer
    name: IProjectileTracer
    isExternal: true
    href: SharedPhysics.IProjectileTracer.html
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.SharedPhysics.CollisionResult
  commentId: T:Global.SharedPhysics.CollisionResult
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.CollisionResult
  nameWithType: SharedPhysics.CollisionResult
  fullName: SharedPhysics.CollisionResult
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.CollisionResult
    name: CollisionResult
    isExternal: true
    href: SharedPhysics.CollisionResult.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.CollisionResult
    name: CollisionResult
    isExternal: true
    href: SharedPhysics.CollisionResult.html
- uid: Global.SharedPhysics.TerrainCollisionTime*
  commentId: Overload:Global.SharedPhysics.TerrainCollisionTime
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_TerrainCollisionTime_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_System_Boolean_
  name: TerrainCollisionTime
  nameWithType: SharedPhysics.TerrainCollisionTime
  fullName: SharedPhysics.TerrainCollisionTime
- uid: Global.SharedPhysics.CollisionResultTraceTerrainCollision*
  commentId: Overload:Global.SharedPhysics.CollisionResultTraceTerrainCollision
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_CollisionResultTraceTerrainCollision_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_System_Boolean_
  name: CollisionResultTraceTerrainCollision
  nameWithType: SharedPhysics.CollisionResultTraceTerrainCollision
  fullName: SharedPhysics.CollisionResultTraceTerrainCollision
- uid: Global.SharedPhysics.ExactTerrainRayTracePos*
  commentId: Overload:Global.SharedPhysics.ExactTerrainRayTracePos
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_ExactTerrainRayTracePos_Room_UnityEngine_Vector2_UnityEngine_Vector2_
  name: ExactTerrainRayTracePos
  nameWithType: SharedPhysics.ExactTerrainRayTracePos
  fullName: SharedPhysics.ExactTerrainRayTracePos
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.SharedPhysics.ExactTerrainRayTrace*
  commentId: Overload:Global.SharedPhysics.ExactTerrainRayTrace
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_ExactTerrainRayTrace_Room_UnityEngine_Vector2_UnityEngine_Vector2_
  name: ExactTerrainRayTrace
  nameWithType: SharedPhysics.ExactTerrainRayTrace
  fullName: SharedPhysics.ExactTerrainRayTrace
- uid: System.Nullable{FloatRect}
  commentId: T:System.Nullable{FloatRect}
  parent: System
  definition: System.Nullable`1
  href: FloatRect.html
  name: FloatRect?
  nameWithType: FloatRect?
  fullName: FloatRect?
  spec.csharp:
  - uid: Global.FloatRect
    name: FloatRect
    isExternal: true
    href: FloatRect.html
  - name: '?'
  spec.vb:
  - uid: Global.FloatRect
    name: FloatRect
    isExternal: true
    href: FloatRect.html
  - name: '?'
- uid: Global.SharedPhysics.TraceTerrainCollision*
  commentId: Overload:Global.SharedPhysics.TraceTerrainCollision
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_TraceTerrainCollision_Room_UnityEngine_Vector2_UnityEngine_Vector2_System_Single_System_Boolean_
  name: TraceTerrainCollision
  nameWithType: SharedPhysics.TraceTerrainCollision
  fullName: SharedPhysics.TraceTerrainCollision
- uid: Global.SharedPhysics.HorizontalCollision*
  commentId: Overload:Global.SharedPhysics.HorizontalCollision
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_HorizontalCollision_Room_SharedPhysics_TerrainCollisionData_
  name: HorizontalCollision
  nameWithType: SharedPhysics.HorizontalCollision
  fullName: SharedPhysics.HorizontalCollision
- uid: Global.SharedPhysics.TerrainCollisionData
  commentId: T:Global.SharedPhysics.TerrainCollisionData
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.TerrainCollisionData
  nameWithType: SharedPhysics.TerrainCollisionData
  fullName: SharedPhysics.TerrainCollisionData
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
- uid: Global.SharedPhysics.VerticalCollision*
  commentId: Overload:Global.SharedPhysics.VerticalCollision
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_VerticalCollision_Room_SharedPhysics_TerrainCollisionData_
  name: VerticalCollision
  nameWithType: SharedPhysics.VerticalCollision
  fullName: SharedPhysics.VerticalCollision
- uid: Global.SharedPhysics.SlopesVertically*
  commentId: Overload:Global.SharedPhysics.SlopesVertically
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_SlopesVertically_Room_SharedPhysics_TerrainCollisionData_
  name: SlopesVertically
  nameWithType: SharedPhysics.SlopesVertically
  fullName: SharedPhysics.SlopesVertically
- uid: Global.SharedPhysics.RayTraceTilesForTerrain*
  commentId: Overload:Global.SharedPhysics.RayTraceTilesForTerrain
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_RayTraceTilesForTerrain_Room_RWCustom_IntVector2_RWCustom_IntVector2_
  name: RayTraceTilesForTerrain
  nameWithType: SharedPhysics.RayTraceTilesForTerrain
  fullName: SharedPhysics.RayTraceTilesForTerrain
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid*
  commentId: Overload:Global.SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_RayTraceTilesForTerrainAcceptStartInSolid_Room_RWCustom_IntVector2_RWCustom_IntVector2_
  name: RayTraceTilesForTerrainAcceptStartInSolid
  nameWithType: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid
  fullName: SharedPhysics.RayTraceTilesForTerrainAcceptStartInSolid
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid*
  commentId: Overload:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_RayTraceTilesForTerrainReturnFirstSolid_Room_RWCustom_IntVector2_RWCustom_IntVector2_
  name: RayTraceTilesForTerrainReturnFirstSolid
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolid
- uid: System.Nullable{RWCustom.IntVector2}
  commentId: T:System.Nullable{RWCustom.IntVector2}
  parent: System
  definition: System.Nullable`1
  href: RWCustom.IntVector2.html
  name: IntVector2?
  nameWithType: IntVector2?
  fullName: RWCustom.IntVector2?
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
- uid: Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole*
  commentId: Overload:Global.SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_RayTraceTilesForTerrainReturnFirstSolidOrPole_Room_UnityEngine_Vector2_UnityEngine_Vector2_
  name: RayTraceTilesForTerrainReturnFirstSolidOrPole
  nameWithType: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole
  fullName: SharedPhysics.RayTraceTilesForTerrainReturnFirstSolidOrPole
- uid: Global.SharedPhysics.RayTracedTilesArray*
  commentId: Overload:Global.SharedPhysics.RayTracedTilesArray
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_RayTracedTilesArray_UnityEngine_Vector2_UnityEngine_Vector2_System_Collections_Generic_List_RWCustom_IntVector2__
  name: RayTracedTilesArray
  nameWithType: SharedPhysics.RayTracedTilesArray
  fullName: SharedPhysics.RayTracedTilesArray
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.SharedPhysics.ConnectChunks*
  commentId: Overload:Global.SharedPhysics.ConnectChunks
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_ConnectChunks_BodyChunk_BodyChunk_System_Single_System_Single_System_Single_System_Single_
  name: ConnectChunks
  nameWithType: SharedPhysics.ConnectChunks
  fullName: SharedPhysics.ConnectChunks
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.SharedPhysics.FindEdges*
  commentId: Overload:Global.SharedPhysics.FindEdges
  isExternal: true
  href: Global.SharedPhysics.html#SharedPhysics_FindEdges_Room_RWCustom_IntRect_System_Func_RWCustom_IntVector2_System_Boolean__
  name: FindEdges
  nameWithType: SharedPhysics.FindEdges
  fullName: SharedPhysics.FindEdges
- uid: RWCustom.IntRect
  commentId: T:RWCustom.IntRect
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntRect.html
  name: IntRect
  nameWithType: IntRect
  fullName: RWCustom.IntRect
- uid: System.Func{RWCustom.IntVector2,System.Boolean}
  commentId: T:System.Func{RWCustom.IntVector2,System.Boolean}
  parent: System
  definition: System.Func`2
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<IntVector2, bool>
  nameWithType: Func<IntVector2, bool>
  fullName: System.Func<RWCustom.IntVector2, bool>
  nameWithType.vb: Func(Of IntVector2, Boolean)
  fullName.vb: System.Func(Of RWCustom.IntVector2, Boolean)
  name.vb: Func(Of IntVector2, Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.List{SharedPhysics.Edge}
  commentId: T:System.Collections.Generic.List{SharedPhysics.Edge}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SharedPhysics.Edge>
  nameWithType: List<SharedPhysics.Edge>
  fullName: System.Collections.Generic.List<SharedPhysics.Edge>
  nameWithType.vb: List(Of SharedPhysics.Edge)
  fullName.vb: System.Collections.Generic.List(Of SharedPhysics.Edge)
  name.vb: List(Of SharedPhysics.Edge)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.Edge
    name: Edge
    isExternal: true
    href: SharedPhysics.Edge.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.Edge
    name: Edge
    isExternal: true
    href: SharedPhysics.Edge.html
  - name: )
- uid: System.Func`2
  commentId: T:System.Func`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-2
  name: Func<T, TResult>
  nameWithType: Func<T, TResult>
  fullName: System.Func<T, TResult>
  nameWithType.vb: Func(Of T, TResult)
  fullName.vb: System.Func(Of T, TResult)
  name.vb: Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TResult
  - name: )
