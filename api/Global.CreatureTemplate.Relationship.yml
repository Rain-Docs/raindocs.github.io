### YamlMime:ManagedReference
items:
- uid: Global.CreatureTemplate.Relationship
  commentId: T:Global.CreatureTemplate.Relationship
  id: CreatureTemplate.Relationship
  parent: Global
  children:
  - Global.CreatureTemplate.Relationship.#ctor(CreatureTemplate.Relationship.Type,System.Single)
  - Global.CreatureTemplate.Relationship.Duplicate
  - Global.CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)
  - Global.CreatureTemplate.Relationship.Equals(System.Object)
  - Global.CreatureTemplate.Relationship.GetHashCode
  - Global.CreatureTemplate.Relationship.GoForKill
  - Global.CreatureTemplate.Relationship.ToString
  - Global.CreatureTemplate.Relationship.intensity
  - Global.CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  - Global.CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  - Global.CreatureTemplate.Relationship.type
  langs:
  - csharp
  - vb
  name: CreatureTemplate.Relationship
  nameWithType: CreatureTemplate.Relationship
  fullName: CreatureTemplate.Relationship
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CreatureTemplate.Relationship</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct CreatureTemplate.Relationship
    content.vb: Public Structure CreatureTemplate.Relationship
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.CreatureTemplate.Relationship.type
  commentId: F:Global.CreatureTemplate.Relationship.type
  id: type
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: type
  nameWithType: CreatureTemplate.Relationship.type
  fullName: CreatureTemplate.Relationship.type
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.Relationship.type</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Relationship.Type type
    return:
      type: Global.CreatureTemplate.Relationship.Type
    content.vb: Public type As CreatureTemplate.Relationship.Type
- uid: Global.CreatureTemplate.Relationship.intensity
  commentId: F:Global.CreatureTemplate.Relationship.intensity
  id: intensity
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: intensity
  nameWithType: CreatureTemplate.Relationship.intensity
  fullName: CreatureTemplate.Relationship.intensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:CreatureTemplate.Relationship.intensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float intensity
    return:
      type: System.Single
    content.vb: Public intensity As Single
- uid: Global.CreatureTemplate.Relationship.#ctor(CreatureTemplate.Relationship.Type,System.Single)
  commentId: M:Global.CreatureTemplate.Relationship.#ctor(CreatureTemplate.Relationship.Type,System.Single)
  id: '#ctor(CreatureTemplate.Relationship.Type,System.Single)'
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: Relationship(Type, float)
  nameWithType: CreatureTemplate.Relationship.Relationship(CreatureTemplate.Relationship.Type, float)
  fullName: CreatureTemplate.Relationship.Relationship(CreatureTemplate.Relationship.Type, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CreatureTemplate.Relationship</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Relationship(CreatureTemplate.Relationship.Type type, float intensity)
    parameters:
    - id: type
      type: Global.CreatureTemplate.Relationship.Type
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:CreatureTemplate.Relationship.#ctor(CreatureTemplate.Relationship.Type,System.Single)</parameter>
          </include>
        </markup>
    - id: intensity
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intensity</parameter>
            <parameter>M:CreatureTemplate.Relationship.#ctor(CreatureTemplate.Relationship.Type,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(type As CreatureTemplate.Relationship.Type, intensity As Single)
  overload: Global.CreatureTemplate.Relationship.#ctor*
  nameWithType.vb: CreatureTemplate.Relationship.New(CreatureTemplate.Relationship.Type, Single)
  fullName.vb: CreatureTemplate.Relationship.New(CreatureTemplate.Relationship.Type, Single)
  name.vb: New(Type, Single)
- uid: Global.CreatureTemplate.Relationship.Equals(System.Object)
  commentId: M:Global.CreatureTemplate.Relationship.Equals(System.Object)
  id: Equals(System.Object)
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: Equals(object)
  nameWithType: CreatureTemplate.Relationship.Equals(object)
  fullName: CreatureTemplate.Relationship.Equals(object)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.Equals(System.Object)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:CreatureTemplate.Relationship.Equals(System.Object)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.Equals(System.Object)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: Global.CreatureTemplate.Relationship.Equals*
  nameWithType.vb: CreatureTemplate.Relationship.Equals(Object)
  fullName.vb: CreatureTemplate.Relationship.Equals(Object)
  name.vb: Equals(Object)
- uid: Global.CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)
  commentId: M:Global.CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)
  id: Equals(CreatureTemplate.Relationship)
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: Equals(Relationship)
  nameWithType: CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)
  fullName: CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Equals(CreatureTemplate.Relationship relationship)
    parameters:
    - id: relationship
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>relationship</parameter>
            <parameter>M:CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.Equals(CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    content.vb: Public Function Equals(relationship As CreatureTemplate.Relationship) As Boolean
  overload: Global.CreatureTemplate.Relationship.Equals*
- uid: Global.CreatureTemplate.Relationship.GetHashCode
  commentId: M:Global.CreatureTemplate.Relationship.GetHashCode
  id: GetHashCode
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: CreatureTemplate.Relationship.GetHashCode()
  fullName: CreatureTemplate.Relationship.GetHashCode()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.GetHashCode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.GetHashCode</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: Global.CreatureTemplate.Relationship.GetHashCode*
- uid: Global.CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  commentId: M:Global.CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  id: op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: operator ==(Relationship, Relationship)
  nameWithType: CreatureTemplate.Relationship.operator ==(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  fullName: CreatureTemplate.Relationship.operator ==(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator ==(CreatureTemplate.Relationship a, CreatureTemplate.Relationship b)
    parameters:
    - id: a
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Equality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator =(a As CreatureTemplate.Relationship, b As CreatureTemplate.Relationship) As Boolean
  overload: Global.CreatureTemplate.Relationship.op_Equality*
  nameWithType.vb: CreatureTemplate.Relationship.=(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  fullName.vb: CreatureTemplate.Relationship.=(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  name.vb: =(Relationship, Relationship)
- uid: Global.CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  commentId: M:Global.CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  id: op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: operator !=(Relationship, Relationship)
  nameWithType: CreatureTemplate.Relationship.operator !=(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  fullName: CreatureTemplate.Relationship.operator !=(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  type: Operator
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool operator !=(CreatureTemplate.Relationship a, CreatureTemplate.Relationship b)
    parameters:
    - id: a
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.op_Inequality(CreatureTemplate.Relationship,CreatureTemplate.Relationship)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Operator <>(a As CreatureTemplate.Relationship, b As CreatureTemplate.Relationship) As Boolean
  overload: Global.CreatureTemplate.Relationship.op_Inequality*
  nameWithType.vb: CreatureTemplate.Relationship.<>(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  fullName.vb: CreatureTemplate.Relationship.<>(CreatureTemplate.Relationship, CreatureTemplate.Relationship)
  name.vb: <>(Relationship, Relationship)
- uid: Global.CreatureTemplate.Relationship.Duplicate
  commentId: M:Global.CreatureTemplate.Relationship.Duplicate
  id: Duplicate
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: Duplicate()
  nameWithType: CreatureTemplate.Relationship.Duplicate()
  fullName: CreatureTemplate.Relationship.Duplicate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.Duplicate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CreatureTemplate.Relationship Duplicate()
    return:
      type: Global.CreatureTemplate.Relationship
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.Duplicate</parameter>
          </include>
        </markup>
    content.vb: Public Function Duplicate() As CreatureTemplate.Relationship
  overload: Global.CreatureTemplate.Relationship.Duplicate*
- uid: Global.CreatureTemplate.Relationship.ToString
  commentId: M:Global.CreatureTemplate.Relationship.ToString
  id: ToString
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: CreatureTemplate.Relationship.ToString()
  fullName: CreatureTemplate.Relationship.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CreatureTemplate.Relationship.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:CreatureTemplate.Relationship.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: Global.CreatureTemplate.Relationship.ToString*
- uid: Global.CreatureTemplate.Relationship.GoForKill
  commentId: P:Global.CreatureTemplate.Relationship.GoForKill
  id: GoForKill
  parent: Global.CreatureTemplate.Relationship
  langs:
  - csharp
  - vb
  name: GoForKill
  nameWithType: CreatureTemplate.Relationship.GoForKill
  fullName: CreatureTemplate.Relationship.GoForKill
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CreatureTemplate.Relationship.GoForKill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool GoForKill { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property GoForKill As Boolean
  overload: Global.CreatureTemplate.Relationship.GoForKill*
references:
- uid: Global
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CreatureTemplate.Relationship.Type
  commentId: T:Global.CreatureTemplate.Relationship.Type
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Relationship.Type
  nameWithType: CreatureTemplate.Relationship.Type
  fullName: CreatureTemplate.Relationship.Type
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Relationship.Type.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship.Type
    name: Type
    isExternal: true
    href: CreatureTemplate.Relationship.Type.html
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.CreatureTemplate.Relationship.#ctor*
  commentId: Overload:Global.CreatureTemplate.Relationship.#ctor
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship__ctor_CreatureTemplate_Relationship_Type_System_Single_
  name: Relationship
  nameWithType: CreatureTemplate.Relationship.Relationship
  fullName: CreatureTemplate.Relationship.Relationship
  nameWithType.vb: CreatureTemplate.Relationship.New
  fullName.vb: CreatureTemplate.Relationship.New
  name.vb: New
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: Global.CreatureTemplate.Relationship.Equals*
  commentId: Overload:Global.CreatureTemplate.Relationship.Equals
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_Equals_System_Object_
  name: Equals
  nameWithType: CreatureTemplate.Relationship.Equals
  fullName: CreatureTemplate.Relationship.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: Global.CreatureTemplate.Relationship
  commentId: T:Global.CreatureTemplate.Relationship
  isExternal: true
  href: CreatureTemplate.html
  name: CreatureTemplate.Relationship
  nameWithType: CreatureTemplate.Relationship
  fullName: CreatureTemplate.Relationship
  spec.csharp:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
  spec.vb:
  - uid: Global.CreatureTemplate
    name: CreatureTemplate
    isExternal: true
    href: CreatureTemplate.html
  - name: .
  - uid: Global.CreatureTemplate.Relationship
    name: Relationship
    isExternal: true
    href: CreatureTemplate.Relationship.html
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: Global.CreatureTemplate.Relationship.GetHashCode*
  commentId: Overload:Global.CreatureTemplate.Relationship.GetHashCode
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_GetHashCode
  name: GetHashCode
  nameWithType: CreatureTemplate.Relationship.GetHashCode
  fullName: CreatureTemplate.Relationship.GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.CreatureTemplate.Relationship.op_Equality*
  commentId: Overload:Global.CreatureTemplate.Relationship.op_Equality
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_op_Equality_CreatureTemplate_Relationship_CreatureTemplate_Relationship_
  name: operator ==
  nameWithType: CreatureTemplate.Relationship.operator ==
  fullName: CreatureTemplate.Relationship.operator ==
  nameWithType.vb: CreatureTemplate.Relationship.=
  fullName.vb: CreatureTemplate.Relationship.=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.CreatureTemplate.Relationship.op_Equality*
    name: ==
    isExternal: true
    href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_op_Equality_CreatureTemplate_Relationship_CreatureTemplate_Relationship_
- uid: Global.CreatureTemplate.Relationship.op_Inequality*
  commentId: Overload:Global.CreatureTemplate.Relationship.op_Inequality
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_op_Inequality_CreatureTemplate_Relationship_CreatureTemplate_Relationship_
  name: operator !=
  nameWithType: CreatureTemplate.Relationship.operator !=
  fullName: CreatureTemplate.Relationship.operator !=
  nameWithType.vb: CreatureTemplate.Relationship.<>
  fullName.vb: CreatureTemplate.Relationship.<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: Global.CreatureTemplate.Relationship.op_Inequality*
    name: '!='
    isExternal: true
    href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_op_Inequality_CreatureTemplate_Relationship_CreatureTemplate_Relationship_
- uid: Global.CreatureTemplate.Relationship.Duplicate*
  commentId: Overload:Global.CreatureTemplate.Relationship.Duplicate
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_Duplicate
  name: Duplicate
  nameWithType: CreatureTemplate.Relationship.Duplicate
  fullName: CreatureTemplate.Relationship.Duplicate
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: Global.CreatureTemplate.Relationship.ToString*
  commentId: Overload:Global.CreatureTemplate.Relationship.ToString
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_ToString
  name: ToString
  nameWithType: CreatureTemplate.Relationship.ToString
  fullName: CreatureTemplate.Relationship.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.CreatureTemplate.Relationship.GoForKill*
  commentId: Overload:Global.CreatureTemplate.Relationship.GoForKill
  isExternal: true
  href: Global.CreatureTemplate.Relationship.html#CreatureTemplate_Relationship_GoForKill
  name: GoForKill
  nameWithType: CreatureTemplate.Relationship.GoForKill
  fullName: CreatureTemplate.Relationship.GoForKill
