### YamlMime:ManagedReference
items:
- uid: Global.FPUtils
  commentId: T:Global.FPUtils
  id: FPUtils
  parent: Global
  children:
  - Global.FPUtils.CheckIfConvex(UnityEngine.Vector2[])
  - Global.FPUtils.ToVector2InPoints(UnityEngine.Vector3)
  - Global.FPUtils.ToVector3InMeters(UnityEngine.Vector2)
  - Global.FPUtils.Triangulate(UnityEngine.Vector2[])
  langs:
  - csharp
  - vb
  name: FPUtils
  nameWithType: FPUtils
  fullName: FPUtils
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FPUtils</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class FPUtils
    content.vb: Public Module FPUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.FPUtils.CheckIfConvex(UnityEngine.Vector2[])
  commentId: M:Global.FPUtils.CheckIfConvex(UnityEngine.Vector2[])
  id: CheckIfConvex(UnityEngine.Vector2[])
  parent: Global.FPUtils
  langs:
  - csharp
  - vb
  name: CheckIfConvex(Vector2[])
  nameWithType: FPUtils.CheckIfConvex(Vector2[])
  fullName: FPUtils.CheckIfConvex(UnityEngine.Vector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPUtils.CheckIfConvex(UnityEngine.Vector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool CheckIfConvex(Vector2[] sourceVertices)
    parameters:
    - id: sourceVertices
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceVertices</parameter>
            <parameter>M:FPUtils.CheckIfConvex(UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPUtils.CheckIfConvex(UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CheckIfConvex(sourceVertices As Vector2()) As Boolean
  overload: Global.FPUtils.CheckIfConvex*
  nameWithType.vb: FPUtils.CheckIfConvex(Vector2())
  fullName.vb: FPUtils.CheckIfConvex(UnityEngine.Vector2())
  name.vb: CheckIfConvex(Vector2())
- uid: Global.FPUtils.Triangulate(UnityEngine.Vector2[])
  commentId: M:Global.FPUtils.Triangulate(UnityEngine.Vector2[])
  id: Triangulate(UnityEngine.Vector2[])
  parent: Global.FPUtils
  langs:
  - csharp
  - vb
  name: Triangulate(Vector2[])
  nameWithType: FPUtils.Triangulate(Vector2[])
  fullName: FPUtils.Triangulate(UnityEngine.Vector2[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPUtils.Triangulate(UnityEngine.Vector2[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int[] Triangulate(Vector2[] points)
    parameters:
    - id: points
      type: UnityEngine.Vector2[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>points</parameter>
            <parameter>M:FPUtils.Triangulate(UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    return:
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPUtils.Triangulate(UnityEngine.Vector2[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Triangulate(points As Vector2()) As Integer()
  overload: Global.FPUtils.Triangulate*
  nameWithType.vb: FPUtils.Triangulate(Vector2())
  fullName.vb: FPUtils.Triangulate(UnityEngine.Vector2())
  name.vb: Triangulate(Vector2())
- uid: Global.FPUtils.ToVector2InPoints(UnityEngine.Vector3)
  commentId: M:Global.FPUtils.ToVector2InPoints(UnityEngine.Vector3)
  id: ToVector2InPoints(UnityEngine.Vector3)
  isExtensionMethod: true
  parent: Global.FPUtils
  langs:
  - csharp
  - vb
  name: ToVector2InPoints(Vector3)
  nameWithType: FPUtils.ToVector2InPoints(Vector3)
  fullName: FPUtils.ToVector2InPoints(UnityEngine.Vector3)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPUtils.ToVector2InPoints(UnityEngine.Vector3)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector2 ToVector2InPoints(this Vector3 vec)
    parameters:
    - id: vec
      type: UnityEngine.Vector3
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vec</parameter>
            <parameter>M:FPUtils.ToVector2InPoints(UnityEngine.Vector3)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPUtils.ToVector2InPoints(UnityEngine.Vector3)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ToVector2InPoints(vec As Vector3) As Vector2
  overload: Global.FPUtils.ToVector2InPoints*
- uid: Global.FPUtils.ToVector3InMeters(UnityEngine.Vector2)
  commentId: M:Global.FPUtils.ToVector3InMeters(UnityEngine.Vector2)
  id: ToVector3InMeters(UnityEngine.Vector2)
  isExtensionMethod: true
  parent: Global.FPUtils
  langs:
  - csharp
  - vb
  name: ToVector3InMeters(Vector2)
  nameWithType: FPUtils.ToVector3InMeters(Vector2)
  fullName: FPUtils.ToVector3InMeters(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FPUtils.ToVector3InMeters(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Vector3 ToVector3InMeters(this Vector2 vec)
    parameters:
    - id: vec
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vec</parameter>
            <parameter>M:FPUtils.ToVector3InMeters(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector3
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:FPUtils.ToVector3InMeters(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ToVector3InMeters(vec As Vector2) As Vector3
  overload: Global.FPUtils.ToVector3InMeters*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.FPUtils.CheckIfConvex*
  commentId: Overload:Global.FPUtils.CheckIfConvex
  isExternal: true
  href: Global.FPUtils.html#FPUtils_CheckIfConvex_UnityEngine_Vector2___
  name: CheckIfConvex
  nameWithType: FPUtils.CheckIfConvex
  fullName: FPUtils.CheckIfConvex
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FPUtils.Triangulate*
  commentId: Overload:Global.FPUtils.Triangulate
  isExternal: true
  href: Global.FPUtils.html#FPUtils_Triangulate_UnityEngine_Vector2___
  name: Triangulate
  nameWithType: FPUtils.Triangulate
  fullName: FPUtils.Triangulate
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.FPUtils.ToVector2InPoints*
  commentId: Overload:Global.FPUtils.ToVector2InPoints
  isExternal: true
  href: Global.FPUtils.html#FPUtils_ToVector2InPoints_UnityEngine_Vector3_
  name: ToVector2InPoints
  nameWithType: FPUtils.ToVector2InPoints
  fullName: FPUtils.ToVector2InPoints
- uid: UnityEngine.Vector3
  isExternal: true
  name: Vector3
  nameWithType: Vector3
  fullName: UnityEngine.Vector3
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.FPUtils.ToVector3InMeters*
  commentId: Overload:Global.FPUtils.ToVector3InMeters
  isExternal: true
  href: Global.FPUtils.html#FPUtils_ToVector3InMeters_UnityEngine_Vector2_
  name: ToVector3InMeters
  nameWithType: FPUtils.ToVector3InMeters
  fullName: FPUtils.ToVector3InMeters
