### YamlMime:ManagedReference
items:
- uid: Global.QuickPathFinder.MinHeap
  commentId: T:Global.QuickPathFinder.MinHeap
  id: QuickPathFinder.MinHeap
  parent: Global
  children:
  - Global.QuickPathFinder.MinHeap.#ctor(QuickPathFinder.PathNode)
  - Global.QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)
  - Global.QuickPathFinder.MinHeap.Empty
  - Global.QuickPathFinder.MinHeap.ExtractFirst
  - Global.QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)
  langs:
  - csharp
  - vb
  name: QuickPathFinder.MinHeap
  nameWithType: QuickPathFinder.MinHeap
  fullName: QuickPathFinder.MinHeap
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:QuickPathFinder.MinHeap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class QuickPathFinder.MinHeap
    content.vb: Public Class QuickPathFinder.MinHeap
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.QuickPathFinder.MinHeap.#ctor(QuickPathFinder.PathNode)
  commentId: M:Global.QuickPathFinder.MinHeap.#ctor(QuickPathFinder.PathNode)
  id: '#ctor(QuickPathFinder.PathNode)'
  parent: Global.QuickPathFinder.MinHeap
  langs:
  - csharp
  - vb
  name: MinHeap(PathNode)
  nameWithType: QuickPathFinder.MinHeap.MinHeap(QuickPathFinder.PathNode)
  fullName: QuickPathFinder.MinHeap.MinHeap(QuickPathFinder.PathNode)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>QuickPathFinder.MinHeap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MinHeap(QuickPathFinder.PathNode hd)
    parameters:
    - id: hd
      type: Global.QuickPathFinder.PathNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hd</parameter>
            <parameter>M:QuickPathFinder.MinHeap.#ctor(QuickPathFinder.PathNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(hd As QuickPathFinder.PathNode)
  overload: Global.QuickPathFinder.MinHeap.#ctor*
  nameWithType.vb: QuickPathFinder.MinHeap.New(QuickPathFinder.PathNode)
  fullName.vb: QuickPathFinder.MinHeap.New(QuickPathFinder.PathNode)
  name.vb: New(PathNode)
- uid: Global.QuickPathFinder.MinHeap.Empty
  commentId: M:Global.QuickPathFinder.MinHeap.Empty
  id: Empty
  parent: Global.QuickPathFinder.MinHeap
  langs:
  - csharp
  - vb
  name: Empty()
  nameWithType: QuickPathFinder.MinHeap.Empty()
  fullName: QuickPathFinder.MinHeap.Empty()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:QuickPathFinder.MinHeap.Empty</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Empty()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:QuickPathFinder.MinHeap.Empty</parameter>
          </include>
        </markup>
    content.vb: Public Function Empty() As Boolean
  overload: Global.QuickPathFinder.MinHeap.Empty*
- uid: Global.QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)
  commentId: M:Global.QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)
  id: Add(QuickPathFinder.PathNode)
  parent: Global.QuickPathFinder.MinHeap
  langs:
  - csharp
  - vb
  name: Add(PathNode)
  nameWithType: QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)
  fullName: QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Add(QuickPathFinder.PathNode addNode)
    parameters:
    - id: addNode
      type: Global.QuickPathFinder.PathNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addNode</parameter>
            <parameter>M:QuickPathFinder.MinHeap.Add(QuickPathFinder.PathNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Add(addNode As QuickPathFinder.PathNode)
  overload: Global.QuickPathFinder.MinHeap.Add*
- uid: Global.QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)
  commentId: M:Global.QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)
  id: FindAndReplace(QuickPathFinder.PathNode)
  parent: Global.QuickPathFinder.MinHeap
  langs:
  - csharp
  - vb
  name: FindAndReplace(PathNode)
  nameWithType: QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)
  fullName: QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void FindAndReplace(QuickPathFinder.PathNode addNode)
    parameters:
    - id: addNode
      type: Global.QuickPathFinder.PathNode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addNode</parameter>
            <parameter>M:QuickPathFinder.MinHeap.FindAndReplace(QuickPathFinder.PathNode)</parameter>
          </include>
        </markup>
    content.vb: Public Sub FindAndReplace(addNode As QuickPathFinder.PathNode)
  overload: Global.QuickPathFinder.MinHeap.FindAndReplace*
- uid: Global.QuickPathFinder.MinHeap.ExtractFirst
  commentId: M:Global.QuickPathFinder.MinHeap.ExtractFirst
  id: ExtractFirst
  parent: Global.QuickPathFinder.MinHeap
  langs:
  - csharp
  - vb
  name: ExtractFirst()
  nameWithType: QuickPathFinder.MinHeap.ExtractFirst()
  fullName: QuickPathFinder.MinHeap.ExtractFirst()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:QuickPathFinder.MinHeap.ExtractFirst</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public QuickPathFinder.PathNode ExtractFirst()
    return:
      type: Global.QuickPathFinder.PathNode
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:QuickPathFinder.MinHeap.ExtractFirst</parameter>
          </include>
        </markup>
    content.vb: Public Function ExtractFirst() As QuickPathFinder.PathNode
  overload: Global.QuickPathFinder.MinHeap.ExtractFirst*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.QuickPathFinder.MinHeap.#ctor*
  commentId: Overload:Global.QuickPathFinder.MinHeap.#ctor
  isExternal: true
  href: Global.QuickPathFinder.MinHeap.html#QuickPathFinder_MinHeap__ctor_QuickPathFinder_PathNode_
  name: MinHeap
  nameWithType: QuickPathFinder.MinHeap.MinHeap
  fullName: QuickPathFinder.MinHeap.MinHeap
  nameWithType.vb: QuickPathFinder.MinHeap.New
  fullName.vb: QuickPathFinder.MinHeap.New
  name.vb: New
- uid: Global.QuickPathFinder.PathNode
  commentId: T:Global.QuickPathFinder.PathNode
  isExternal: true
  href: QuickPathFinder.html
  name: QuickPathFinder.PathNode
  nameWithType: QuickPathFinder.PathNode
  fullName: QuickPathFinder.PathNode
  spec.csharp:
  - uid: Global.QuickPathFinder
    name: QuickPathFinder
    isExternal: true
    href: QuickPathFinder.html
  - name: .
  - uid: Global.QuickPathFinder.PathNode
    name: PathNode
    isExternal: true
    href: QuickPathFinder.PathNode.html
  spec.vb:
  - uid: Global.QuickPathFinder
    name: QuickPathFinder
    isExternal: true
    href: QuickPathFinder.html
  - name: .
  - uid: Global.QuickPathFinder.PathNode
    name: PathNode
    isExternal: true
    href: QuickPathFinder.PathNode.html
- uid: Global.QuickPathFinder.MinHeap.Empty*
  commentId: Overload:Global.QuickPathFinder.MinHeap.Empty
  isExternal: true
  href: Global.QuickPathFinder.MinHeap.html#QuickPathFinder_MinHeap_Empty
  name: Empty
  nameWithType: QuickPathFinder.MinHeap.Empty
  fullName: QuickPathFinder.MinHeap.Empty
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.QuickPathFinder.MinHeap.Add*
  commentId: Overload:Global.QuickPathFinder.MinHeap.Add
  isExternal: true
  href: Global.QuickPathFinder.MinHeap.html#QuickPathFinder_MinHeap_Add_QuickPathFinder_PathNode_
  name: Add
  nameWithType: QuickPathFinder.MinHeap.Add
  fullName: QuickPathFinder.MinHeap.Add
- uid: Global.QuickPathFinder.MinHeap.FindAndReplace*
  commentId: Overload:Global.QuickPathFinder.MinHeap.FindAndReplace
  isExternal: true
  href: Global.QuickPathFinder.MinHeap.html#QuickPathFinder_MinHeap_FindAndReplace_QuickPathFinder_PathNode_
  name: FindAndReplace
  nameWithType: QuickPathFinder.MinHeap.FindAndReplace
  fullName: QuickPathFinder.MinHeap.FindAndReplace
- uid: Global.QuickPathFinder.MinHeap.ExtractFirst*
  commentId: Overload:Global.QuickPathFinder.MinHeap.ExtractFirst
  isExternal: true
  href: Global.QuickPathFinder.MinHeap.html#QuickPathFinder_MinHeap_ExtractFirst
  name: ExtractFirst
  nameWithType: QuickPathFinder.MinHeap.ExtractFirst
  fullName: QuickPathFinder.MinHeap.ExtractFirst
