### YamlMime:ManagedReference
items:
- uid: Global.HeavyTexturesCache
  commentId: T:Global.HeavyTexturesCache
  id: HeavyTexturesCache
  parent: Global
  children:
  - Global.HeavyTexturesCache.#ctor
  - Global.HeavyTexturesCache.ClearMiscTextures
  - Global.HeavyTexturesCache.ClearRegisteredFutileAtlases
  - Global.HeavyTexturesCache.GetMiscTexture(System.String)
  - Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)
  - Global.HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)
  - Global.HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)
  langs:
  - csharp
  - vb
  name: HeavyTexturesCache
  nameWithType: HeavyTexturesCache
  fullName: HeavyTexturesCache
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HeavyTexturesCache</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class HeavyTexturesCache
    content.vb: Public Class HeavyTexturesCache
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)
  commentId: M:Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)
  id: LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: LoadAndCacheAtlasFromTexture(string, Texture, bool)
  nameWithType: HeavyTexturesCache.LoadAndCacheAtlasFromTexture(string, Texture, bool)
  fullName: HeavyTexturesCache.LoadAndCacheAtlasFromTexture(string, UnityEngine.Texture, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LoadAndCacheAtlasFromTexture(string atlas, Texture texture, bool textureFromAsset)
    parameters:
    - id: atlas
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>atlas</parameter>
            <parameter>M:HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)</parameter>
          </include>
        </markup>
    - id: texture
      type: UnityEngine.Texture
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>texture</parameter>
            <parameter>M:HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)</parameter>
          </include>
        </markup>
    - id: textureFromAsset
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textureFromAsset</parameter>
            <parameter>M:HeavyTexturesCache.LoadAndCacheAtlasFromTexture(System.String,UnityEngine.Texture,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LoadAndCacheAtlasFromTexture(atlas As String, texture As Texture, textureFromAsset As Boolean)
  overload: Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture*
  nameWithType.vb: HeavyTexturesCache.LoadAndCacheAtlasFromTexture(String, Texture, Boolean)
  fullName.vb: HeavyTexturesCache.LoadAndCacheAtlasFromTexture(String, UnityEngine.Texture, Boolean)
  name.vb: LoadAndCacheAtlasFromTexture(String, Texture, Boolean)
- uid: Global.HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)
  commentId: M:Global.HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)
  id: LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: LoadMiscTexture(string, TextureWrapMode, FilterMode)
  nameWithType: HeavyTexturesCache.LoadMiscTexture(string, TextureWrapMode, FilterMode)
  fullName: HeavyTexturesCache.LoadMiscTexture(string, UnityEngine.TextureWrapMode, UnityEngine.FilterMode)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Texture2D LoadMiscTexture(string path, TextureWrapMode wrapMode = 0, FilterMode filterMode = 0)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)</parameter>
          </include>
        </markup>
    - id: wrapMode
      type: UnityEngine.TextureWrapMode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>wrapMode</parameter>
            <parameter>M:HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)</parameter>
          </include>
        </markup>
    - id: filterMode
      type: UnityEngine.FilterMode
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>filterMode</parameter>
            <parameter>M:HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HeavyTexturesCache.LoadMiscTexture(System.String,UnityEngine.TextureWrapMode,UnityEngine.FilterMode)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LoadMiscTexture(path As String, wrapMode As TextureWrapMode = 0, filterMode As FilterMode = 0) As Texture2D
  overload: Global.HeavyTexturesCache.LoadMiscTexture*
  nameWithType.vb: HeavyTexturesCache.LoadMiscTexture(String, TextureWrapMode, FilterMode)
  fullName.vb: HeavyTexturesCache.LoadMiscTexture(String, UnityEngine.TextureWrapMode, UnityEngine.FilterMode)
  name.vb: LoadMiscTexture(String, TextureWrapMode, FilterMode)
- uid: Global.HeavyTexturesCache.GetMiscTexture(System.String)
  commentId: M:Global.HeavyTexturesCache.GetMiscTexture(System.String)
  id: GetMiscTexture(System.String)
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: GetMiscTexture(string)
  nameWithType: HeavyTexturesCache.GetMiscTexture(string)
  fullName: HeavyTexturesCache.GetMiscTexture(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.GetMiscTexture(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Texture2D GetMiscTexture(string path)
    parameters:
    - id: path
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:HeavyTexturesCache.GetMiscTexture(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Texture2D
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:HeavyTexturesCache.GetMiscTexture(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetMiscTexture(path As String) As Texture2D
  overload: Global.HeavyTexturesCache.GetMiscTexture*
  nameWithType.vb: HeavyTexturesCache.GetMiscTexture(String)
  fullName.vb: HeavyTexturesCache.GetMiscTexture(String)
  name.vb: GetMiscTexture(String)
- uid: Global.HeavyTexturesCache.ClearMiscTextures
  commentId: M:Global.HeavyTexturesCache.ClearMiscTextures
  id: ClearMiscTextures
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: ClearMiscTextures()
  nameWithType: HeavyTexturesCache.ClearMiscTextures()
  fullName: HeavyTexturesCache.ClearMiscTextures()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.ClearMiscTextures</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ClearMiscTextures()
    content.vb: Public Shared Sub ClearMiscTextures()
  overload: Global.HeavyTexturesCache.ClearMiscTextures*
- uid: Global.HeavyTexturesCache.ClearRegisteredFutileAtlases
  commentId: M:Global.HeavyTexturesCache.ClearRegisteredFutileAtlases
  id: ClearRegisteredFutileAtlases
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: ClearRegisteredFutileAtlases()
  nameWithType: HeavyTexturesCache.ClearRegisteredFutileAtlases()
  fullName: HeavyTexturesCache.ClearRegisteredFutileAtlases()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.ClearRegisteredFutileAtlases</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void ClearRegisteredFutileAtlases()
    content.vb: Public Shared Sub ClearRegisteredFutileAtlases()
  overload: Global.HeavyTexturesCache.ClearRegisteredFutileAtlases*
- uid: Global.HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)
  commentId: M:Global.HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)
  id: UnloadAtlasTexture(System.String,System.Boolean)
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: UnloadAtlasTexture(string, bool)
  nameWithType: HeavyTexturesCache.UnloadAtlasTexture(string, bool)
  fullName: HeavyTexturesCache.UnloadAtlasTexture(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void UnloadAtlasTexture(string fileName, bool textureFromAsset)
    parameters:
    - id: fileName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fileName</parameter>
            <parameter>M:HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: textureFromAsset
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>textureFromAsset</parameter>
            <parameter>M:HeavyTexturesCache.UnloadAtlasTexture(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub UnloadAtlasTexture(fileName As String, textureFromAsset As Boolean)
  overload: Global.HeavyTexturesCache.UnloadAtlasTexture*
  nameWithType.vb: HeavyTexturesCache.UnloadAtlasTexture(String, Boolean)
  fullName.vb: HeavyTexturesCache.UnloadAtlasTexture(String, Boolean)
  name.vb: UnloadAtlasTexture(String, Boolean)
- uid: Global.HeavyTexturesCache.#ctor
  commentId: M:Global.HeavyTexturesCache.#ctor
  id: '#ctor'
  parent: Global.HeavyTexturesCache
  langs:
  - csharp
  - vb
  name: HeavyTexturesCache()
  nameWithType: HeavyTexturesCache.HeavyTexturesCache()
  fullName: HeavyTexturesCache.HeavyTexturesCache()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HeavyTexturesCache</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HeavyTexturesCache()
    content.vb: Public Sub New()
  overload: Global.HeavyTexturesCache.#ctor*
  nameWithType.vb: HeavyTexturesCache.New()
  fullName.vb: HeavyTexturesCache.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture*
  commentId: Overload:Global.HeavyTexturesCache.LoadAndCacheAtlasFromTexture
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_LoadAndCacheAtlasFromTexture_System_String_UnityEngine_Texture_System_Boolean_
  name: LoadAndCacheAtlasFromTexture
  nameWithType: HeavyTexturesCache.LoadAndCacheAtlasFromTexture
  fullName: HeavyTexturesCache.LoadAndCacheAtlasFromTexture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Texture
  isExternal: true
  name: Texture
  nameWithType: Texture
  fullName: UnityEngine.Texture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.HeavyTexturesCache.LoadMiscTexture*
  commentId: Overload:Global.HeavyTexturesCache.LoadMiscTexture
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_LoadMiscTexture_System_String_UnityEngine_TextureWrapMode_UnityEngine_FilterMode_
  name: LoadMiscTexture
  nameWithType: HeavyTexturesCache.LoadMiscTexture
  fullName: HeavyTexturesCache.LoadMiscTexture
- uid: UnityEngine.TextureWrapMode
  commentId: '!:UnityEngine.TextureWrapMode'
  isExternal: true
  name: TextureWrapMode
  nameWithType: TextureWrapMode
  fullName: UnityEngine.TextureWrapMode
- uid: UnityEngine.FilterMode
  commentId: '!:UnityEngine.FilterMode'
  isExternal: true
  name: FilterMode
  nameWithType: FilterMode
  fullName: UnityEngine.FilterMode
- uid: UnityEngine.Texture2D
  isExternal: true
  name: Texture2D
  nameWithType: Texture2D
  fullName: UnityEngine.Texture2D
- uid: Global.HeavyTexturesCache.GetMiscTexture*
  commentId: Overload:Global.HeavyTexturesCache.GetMiscTexture
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_GetMiscTexture_System_String_
  name: GetMiscTexture
  nameWithType: HeavyTexturesCache.GetMiscTexture
  fullName: HeavyTexturesCache.GetMiscTexture
- uid: Global.HeavyTexturesCache.ClearMiscTextures*
  commentId: Overload:Global.HeavyTexturesCache.ClearMiscTextures
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_ClearMiscTextures
  name: ClearMiscTextures
  nameWithType: HeavyTexturesCache.ClearMiscTextures
  fullName: HeavyTexturesCache.ClearMiscTextures
- uid: Global.HeavyTexturesCache.ClearRegisteredFutileAtlases*
  commentId: Overload:Global.HeavyTexturesCache.ClearRegisteredFutileAtlases
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_ClearRegisteredFutileAtlases
  name: ClearRegisteredFutileAtlases
  nameWithType: HeavyTexturesCache.ClearRegisteredFutileAtlases
  fullName: HeavyTexturesCache.ClearRegisteredFutileAtlases
- uid: Global.HeavyTexturesCache.UnloadAtlasTexture*
  commentId: Overload:Global.HeavyTexturesCache.UnloadAtlasTexture
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache_UnloadAtlasTexture_System_String_System_Boolean_
  name: UnloadAtlasTexture
  nameWithType: HeavyTexturesCache.UnloadAtlasTexture
  fullName: HeavyTexturesCache.UnloadAtlasTexture
- uid: Global.HeavyTexturesCache.#ctor*
  commentId: Overload:Global.HeavyTexturesCache.#ctor
  isExternal: true
  href: Global.HeavyTexturesCache.html#HeavyTexturesCache__ctor
  name: HeavyTexturesCache
  nameWithType: HeavyTexturesCache.HeavyTexturesCache
  fullName: HeavyTexturesCache.HeavyTexturesCache
  nameWithType.vb: HeavyTexturesCache.New
  fullName.vb: HeavyTexturesCache.New
  name.vb: New
