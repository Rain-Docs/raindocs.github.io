### YamlMime:ManagedReference
items:
- uid: Global.RegionState
  commentId: T:Global.RegionState
  id: RegionState
  parent: Global
  children:
  - Global.RegionState.#ctor(SaveState,World)
  - Global.RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)
  - Global.RegionState.AdaptWorldToRegionState
  - Global.RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)
  - Global.RegionState.ItemConsumed(System.Int32,System.Int32)
  - Global.RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)
  - Global.RegionState.SaveToString
  - Global.RegionState.SentientRotTick
  - Global.RegionState.SwarmRoomActive(System.Int32)
  - Global.RegionState.SwarmRoomActive(System.String)
  - Global.RegionState.candidatesForDepleteSwarmRooms
  - Global.RegionState.consumedItems
  - Global.RegionState.gatesPassedThrough
  - Global.RegionState.lineageCounters
  - Global.RegionState.regionName
  - Global.RegionState.roomsVisited
  - Global.RegionState.saveState
  - Global.RegionState.savedObjects
  - Global.RegionState.savedPopulation
  - Global.RegionState.savedSticks
  - Global.RegionState.sentientRotProgression
  - Global.RegionState.spawnedRippleRegions
  - Global.RegionState.spawnedWarpPoints
  - Global.RegionState.swarmRoomCounters
  - Global.RegionState.unrecognizedPopulation
  - Global.RegionState.unrecognizedSaveStrings
  - Global.RegionState.unrecognizedSavedObjects
  - Global.RegionState.world
  langs:
  - csharp
  - vb
  name: RegionState
  nameWithType: RegionState
  fullName: RegionState
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RegionState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RegionState
    content.vb: Public Class RegionState
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RegionState.saveState
  commentId: F:Global.RegionState.saveState
  id: saveState
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: saveState
  nameWithType: RegionState.saveState
  fullName: RegionState.saveState
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.saveState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SaveState saveState
    return:
      type: Global.SaveState
    content.vb: Public saveState As SaveState
- uid: Global.RegionState.world
  commentId: F:Global.RegionState.world
  id: world
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: world
  nameWithType: RegionState.world
  fullName: RegionState.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.RegionState.regionName
  commentId: F:Global.RegionState.regionName
  id: regionName
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: regionName
  nameWithType: RegionState.regionName
  fullName: RegionState.regionName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.regionName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string regionName
    return:
      type: System.String
    content.vb: Public regionName As String
- uid: Global.RegionState.swarmRoomCounters
  commentId: F:Global.RegionState.swarmRoomCounters
  id: swarmRoomCounters
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: swarmRoomCounters
  nameWithType: RegionState.swarmRoomCounters
  fullName: RegionState.swarmRoomCounters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.swarmRoomCounters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, int> swarmRoomCounters
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public swarmRoomCounters As Dictionary(Of String, Integer)
- uid: Global.RegionState.lineageCounters
  commentId: F:Global.RegionState.lineageCounters
  id: lineageCounters
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: lineageCounters
  nameWithType: RegionState.lineageCounters
  fullName: RegionState.lineageCounters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.lineageCounters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, int> lineageCounters
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
    content.vb: Public lineageCounters As Dictionary(Of String, Integer)
- uid: Global.RegionState.gatesPassedThrough
  commentId: F:Global.RegionState.gatesPassedThrough
  id: gatesPassedThrough
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: gatesPassedThrough
  nameWithType: RegionState.gatesPassedThrough
  fullName: RegionState.gatesPassedThrough
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.gatesPassedThrough</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] gatesPassedThrough
    return:
      type: System.Boolean[]
    content.vb: Public gatesPassedThrough As Boolean()
- uid: Global.RegionState.candidatesForDepleteSwarmRooms
  commentId: F:Global.RegionState.candidatesForDepleteSwarmRooms
  id: candidatesForDepleteSwarmRooms
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: candidatesForDepleteSwarmRooms
  nameWithType: RegionState.candidatesForDepleteSwarmRooms
  fullName: RegionState.candidatesForDepleteSwarmRooms
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.candidatesForDepleteSwarmRooms</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> candidatesForDepleteSwarmRooms
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public candidatesForDepleteSwarmRooms As List(Of String)
- uid: Global.RegionState.savedObjects
  commentId: F:Global.RegionState.savedObjects
  id: savedObjects
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: savedObjects
  nameWithType: RegionState.savedObjects
  fullName: RegionState.savedObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.savedObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> savedObjects
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public savedObjects As List(Of String)
- uid: Global.RegionState.unrecognizedSavedObjects
  commentId: F:Global.RegionState.unrecognizedSavedObjects
  id: unrecognizedSavedObjects
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: unrecognizedSavedObjects
  nameWithType: RegionState.unrecognizedSavedObjects
  fullName: RegionState.unrecognizedSavedObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.unrecognizedSavedObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedSavedObjects
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedSavedObjects As List(Of String)
- uid: Global.RegionState.savedPopulation
  commentId: F:Global.RegionState.savedPopulation
  id: savedPopulation
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: savedPopulation
  nameWithType: RegionState.savedPopulation
  fullName: RegionState.savedPopulation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.savedPopulation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> savedPopulation
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public savedPopulation As List(Of String)
- uid: Global.RegionState.unrecognizedPopulation
  commentId: F:Global.RegionState.unrecognizedPopulation
  id: unrecognizedPopulation
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: unrecognizedPopulation
  nameWithType: RegionState.unrecognizedPopulation
  fullName: RegionState.unrecognizedPopulation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.unrecognizedPopulation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedPopulation
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedPopulation As List(Of String)
- uid: Global.RegionState.savedSticks
  commentId: F:Global.RegionState.savedSticks
  id: savedSticks
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: savedSticks
  nameWithType: RegionState.savedSticks
  fullName: RegionState.savedSticks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.savedSticks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> savedSticks
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public savedSticks As List(Of String)
- uid: Global.RegionState.consumedItems
  commentId: F:Global.RegionState.consumedItems
  id: consumedItems
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: consumedItems
  nameWithType: RegionState.consumedItems
  fullName: RegionState.consumedItems
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.consumedItems</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<RegionState.ConsumedItem> consumedItems
    return:
      type: System.Collections.Generic.List{RegionState.ConsumedItem}
    content.vb: Public consumedItems As List(Of RegionState.ConsumedItem)
- uid: Global.RegionState.roomsVisited
  commentId: F:Global.RegionState.roomsVisited
  id: roomsVisited
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: roomsVisited
  nameWithType: RegionState.roomsVisited
  fullName: RegionState.roomsVisited
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.roomsVisited</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> roomsVisited
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public roomsVisited As List(Of String)
- uid: Global.RegionState.unrecognizedSaveStrings
  commentId: F:Global.RegionState.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: RegionState.unrecognizedSaveStrings
  fullName: RegionState.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedSaveStrings As List(Of String)
- uid: Global.RegionState.spawnedWarpPoints
  commentId: F:Global.RegionState.spawnedWarpPoints
  id: spawnedWarpPoints
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: spawnedWarpPoints
  nameWithType: RegionState.spawnedWarpPoints
  fullName: RegionState.spawnedWarpPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.spawnedWarpPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, string> spawnedWarpPoints
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public spawnedWarpPoints As Dictionary(Of String, String)
- uid: Global.RegionState.spawnedRippleRegions
  commentId: F:Global.RegionState.spawnedRippleRegions
  id: spawnedRippleRegions
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: spawnedRippleRegions
  nameWithType: RegionState.spawnedRippleRegions
  fullName: RegionState.spawnedRippleRegions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.spawnedRippleRegions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, string> spawnedRippleRegions
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public spawnedRippleRegions As Dictionary(Of String, String)
- uid: Global.RegionState.sentientRotProgression
  commentId: F:Global.RegionState.sentientRotProgression
  id: sentientRotProgression
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: sentientRotProgression
  nameWithType: RegionState.sentientRotProgression
  fullName: RegionState.sentientRotProgression
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RegionState.sentientRotProgression</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Dictionary<string, RegionState.SentientRotState> sentientRotProgression
    return:
      type: System.Collections.Generic.Dictionary{System.String,RegionState.SentientRotState}
    content.vb: Public sentientRotProgression As Dictionary(Of String, RegionState.SentientRotState)
- uid: Global.RegionState.SwarmRoomActive(System.Int32)
  commentId: M:Global.RegionState.SwarmRoomActive(System.Int32)
  id: SwarmRoomActive(System.Int32)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: SwarmRoomActive(int)
  nameWithType: RegionState.SwarmRoomActive(int)
  fullName: RegionState.SwarmRoomActive(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.SwarmRoomActive(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SwarmRoomActive(int swarmRoomIndex)
    parameters:
    - id: swarmRoomIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>swarmRoomIndex</parameter>
            <parameter>M:RegionState.SwarmRoomActive(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RegionState.SwarmRoomActive(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SwarmRoomActive(swarmRoomIndex As Integer) As Boolean
  overload: Global.RegionState.SwarmRoomActive*
  nameWithType.vb: RegionState.SwarmRoomActive(Integer)
  fullName.vb: RegionState.SwarmRoomActive(Integer)
  name.vb: SwarmRoomActive(Integer)
- uid: Global.RegionState.SwarmRoomActive(System.String)
  commentId: M:Global.RegionState.SwarmRoomActive(System.String)
  id: SwarmRoomActive(System.String)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: SwarmRoomActive(string)
  nameWithType: RegionState.SwarmRoomActive(string)
  fullName: RegionState.SwarmRoomActive(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.SwarmRoomActive(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool SwarmRoomActive(string swarmRoomName)
    parameters:
    - id: swarmRoomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>swarmRoomName</parameter>
            <parameter>M:RegionState.SwarmRoomActive(System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RegionState.SwarmRoomActive(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function SwarmRoomActive(swarmRoomName As String) As Boolean
  overload: Global.RegionState.SwarmRoomActive*
  nameWithType.vb: RegionState.SwarmRoomActive(String)
  fullName.vb: RegionState.SwarmRoomActive(String)
  name.vb: SwarmRoomActive(String)
- uid: Global.RegionState.#ctor(SaveState,World)
  commentId: M:Global.RegionState.#ctor(SaveState,World)
  id: '#ctor(SaveState,World)'
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: RegionState(SaveState, World)
  nameWithType: RegionState.RegionState(SaveState, World)
  fullName: RegionState.RegionState(SaveState, World)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RegionState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RegionState(SaveState saveState, World world)
    parameters:
    - id: saveState
      type: Global.SaveState
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveState</parameter>
            <parameter>M:RegionState.#ctor(SaveState,World)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:RegionState.#ctor(SaveState,World)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(saveState As SaveState, world As World)
  overload: Global.RegionState.#ctor*
  nameWithType.vb: RegionState.New(SaveState, World)
  fullName.vb: RegionState.New(SaveState, World)
  name.vb: New(SaveState, World)
- uid: Global.RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)
  commentId: M:Global.RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)
  id: InfectRegionRoomWithSentientRot(System.Single,System.String)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: InfectRegionRoomWithSentientRot(float, string)
  nameWithType: RegionState.InfectRegionRoomWithSentientRot(float, string)
  fullName: RegionState.InfectRegionRoomWithSentientRot(float, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InfectRegionRoomWithSentientRot(float amount, string roomName)
    parameters:
    - id: amount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>amount</parameter>
            <parameter>M:RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)</parameter>
          </include>
        </markup>
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RegionState.InfectRegionRoomWithSentientRot(System.Single,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function InfectRegionRoomWithSentientRot(amount As Single, roomName As String) As Boolean
  overload: Global.RegionState.InfectRegionRoomWithSentientRot*
  nameWithType.vb: RegionState.InfectRegionRoomWithSentientRot(Single, String)
  fullName.vb: RegionState.InfectRegionRoomWithSentientRot(Single, String)
  name.vb: InfectRegionRoomWithSentientRot(Single, String)
- uid: Global.RegionState.SentientRotTick
  commentId: M:Global.RegionState.SentientRotTick
  id: SentientRotTick
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: SentientRotTick()
  nameWithType: RegionState.SentientRotTick()
  fullName: RegionState.SentientRotTick()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.SentientRotTick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SentientRotTick()
    content.vb: Public Sub SentientRotTick()
  overload: Global.RegionState.SentientRotTick*
- uid: Global.RegionState.AdaptWorldToRegionState
  commentId: M:Global.RegionState.AdaptWorldToRegionState
  id: AdaptWorldToRegionState
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: AdaptWorldToRegionState()
  nameWithType: RegionState.AdaptWorldToRegionState()
  fullName: RegionState.AdaptWorldToRegionState()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.AdaptWorldToRegionState</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AdaptWorldToRegionState()
    content.vb: Public Sub AdaptWorldToRegionState()
  overload: Global.RegionState.AdaptWorldToRegionState*
- uid: Global.RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)
  commentId: M:Global.RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)
  id: AdaptRegionStateToWorld(System.Int32,System.Int32)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: AdaptRegionStateToWorld(int, int)
  nameWithType: RegionState.AdaptRegionStateToWorld(int, int)
  fullName: RegionState.AdaptRegionStateToWorld(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AdaptRegionStateToWorld(int playerShelter, int activeGate)
    parameters:
    - id: playerShelter
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerShelter</parameter>
            <parameter>M:RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: activeGate
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>activeGate</parameter>
            <parameter>M:RegionState.AdaptRegionStateToWorld(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AdaptRegionStateToWorld(playerShelter As Integer, activeGate As Integer)
  overload: Global.RegionState.AdaptRegionStateToWorld*
  nameWithType.vb: RegionState.AdaptRegionStateToWorld(Integer, Integer)
  fullName.vb: RegionState.AdaptRegionStateToWorld(Integer, Integer)
  name.vb: AdaptRegionStateToWorld(Integer, Integer)
- uid: Global.RegionState.SaveToString
  commentId: M:Global.RegionState.SaveToString
  id: SaveToString
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: SaveToString()
  nameWithType: RegionState.SaveToString()
  fullName: RegionState.SaveToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.SaveToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string SaveToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RegionState.SaveToString</parameter>
          </include>
        </markup>
    content.vb: Public Function SaveToString() As String
  overload: Global.RegionState.SaveToString*
- uid: Global.RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)
  id: ReportConsumedItem(System.Int32,System.Int32,System.Int32)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: ReportConsumedItem(int, int, int)
  nameWithType: RegionState.ReportConsumedItem(int, int, int)
  fullName: RegionState.ReportConsumedItem(int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReportConsumedItem(int originRoom, int placedObjectIndex, int waitCycles)
    parameters:
    - id: originRoom
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originRoom</parameter>
            <parameter>M:RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: placedObjectIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placedObjectIndex</parameter>
            <parameter>M:RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: waitCycles
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>waitCycles</parameter>
            <parameter>M:RegionState.ReportConsumedItem(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ReportConsumedItem(originRoom As Integer, placedObjectIndex As Integer, waitCycles As Integer)
  overload: Global.RegionState.ReportConsumedItem*
  nameWithType.vb: RegionState.ReportConsumedItem(Integer, Integer, Integer)
  fullName.vb: RegionState.ReportConsumedItem(Integer, Integer, Integer)
  name.vb: ReportConsumedItem(Integer, Integer, Integer)
- uid: Global.RegionState.ItemConsumed(System.Int32,System.Int32)
  commentId: M:Global.RegionState.ItemConsumed(System.Int32,System.Int32)
  id: ItemConsumed(System.Int32,System.Int32)
  parent: Global.RegionState
  langs:
  - csharp
  - vb
  name: ItemConsumed(int, int)
  nameWithType: RegionState.ItemConsumed(int, int)
  fullName: RegionState.ItemConsumed(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RegionState.ItemConsumed(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ItemConsumed(int originRoom, int placedObjectIndex)
    parameters:
    - id: originRoom
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>originRoom</parameter>
            <parameter>M:RegionState.ItemConsumed(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: placedObjectIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placedObjectIndex</parameter>
            <parameter>M:RegionState.ItemConsumed(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RegionState.ItemConsumed(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ItemConsumed(originRoom As Integer, placedObjectIndex As Integer) As Boolean
  overload: Global.RegionState.ItemConsumed*
  nameWithType.vb: RegionState.ItemConsumed(Integer, Integer)
  fullName.vb: RegionState.ItemConsumed(Integer, Integer)
  name.vb: ItemConsumed(Integer, Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SaveState
  commentId: T:Global.SaveState
  isExternal: true
  href: SaveState.html
  name: SaveState
  nameWithType: SaveState
  fullName: SaveState
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.List{RegionState.ConsumedItem}
  commentId: T:System.Collections.Generic.List{RegionState.ConsumedItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<RegionState.ConsumedItem>
  nameWithType: List<RegionState.ConsumedItem>
  fullName: System.Collections.Generic.List<RegionState.ConsumedItem>
  nameWithType.vb: List(Of RegionState.ConsumedItem)
  fullName.vb: System.Collections.Generic.List(Of RegionState.ConsumedItem)
  name.vb: List(Of RegionState.ConsumedItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.RegionState
    name: RegionState
    isExternal: true
    href: RegionState.html
  - name: .
  - uid: Global.RegionState.ConsumedItem
    name: ConsumedItem
    isExternal: true
    href: RegionState.ConsumedItem.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.RegionState
    name: RegionState
    isExternal: true
    href: RegionState.html
  - name: .
  - uid: Global.RegionState.ConsumedItem
    name: ConsumedItem
    isExternal: true
    href: RegionState.ConsumedItem.html
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary{System.String,RegionState.SentientRotState}
  commentId: T:System.Collections.Generic.Dictionary{System.String,RegionState.SentientRotState}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, RegionState.SentientRotState>
  nameWithType: Dictionary<string, RegionState.SentientRotState>
  fullName: System.Collections.Generic.Dictionary<string, RegionState.SentientRotState>
  nameWithType.vb: Dictionary(Of String, RegionState.SentientRotState)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, RegionState.SentientRotState)
  name.vb: Dictionary(Of String, RegionState.SentientRotState)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Global.RegionState
    name: RegionState
    isExternal: true
    href: RegionState.html
  - name: .
  - uid: Global.RegionState.SentientRotState
    name: SentientRotState
    isExternal: true
    href: RegionState.SentientRotState.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: Global.RegionState
    name: RegionState
    isExternal: true
    href: RegionState.html
  - name: .
  - uid: Global.RegionState.SentientRotState
    name: SentientRotState
    isExternal: true
    href: RegionState.SentientRotState.html
  - name: )
- uid: Global.RegionState.SwarmRoomActive*
  commentId: Overload:Global.RegionState.SwarmRoomActive
  isExternal: true
  href: Global.RegionState.html#RegionState_SwarmRoomActive_System_Int32_
  name: SwarmRoomActive
  nameWithType: RegionState.SwarmRoomActive
  fullName: RegionState.SwarmRoomActive
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.RegionState.#ctor*
  commentId: Overload:Global.RegionState.#ctor
  isExternal: true
  href: Global.RegionState.html#RegionState__ctor_SaveState_World_
  name: RegionState
  nameWithType: RegionState.RegionState
  fullName: RegionState.RegionState
  nameWithType.vb: RegionState.New
  fullName.vb: RegionState.New
  name.vb: New
- uid: Global.RegionState.InfectRegionRoomWithSentientRot*
  commentId: Overload:Global.RegionState.InfectRegionRoomWithSentientRot
  isExternal: true
  href: Global.RegionState.html#RegionState_InfectRegionRoomWithSentientRot_System_Single_System_String_
  name: InfectRegionRoomWithSentientRot
  nameWithType: RegionState.InfectRegionRoomWithSentientRot
  fullName: RegionState.InfectRegionRoomWithSentientRot
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RegionState.SentientRotTick*
  commentId: Overload:Global.RegionState.SentientRotTick
  isExternal: true
  href: Global.RegionState.html#RegionState_SentientRotTick
  name: SentientRotTick
  nameWithType: RegionState.SentientRotTick
  fullName: RegionState.SentientRotTick
- uid: Global.RegionState.AdaptWorldToRegionState*
  commentId: Overload:Global.RegionState.AdaptWorldToRegionState
  isExternal: true
  href: Global.RegionState.html#RegionState_AdaptWorldToRegionState
  name: AdaptWorldToRegionState
  nameWithType: RegionState.AdaptWorldToRegionState
  fullName: RegionState.AdaptWorldToRegionState
- uid: Global.RegionState.AdaptRegionStateToWorld*
  commentId: Overload:Global.RegionState.AdaptRegionStateToWorld
  isExternal: true
  href: Global.RegionState.html#RegionState_AdaptRegionStateToWorld_System_Int32_System_Int32_
  name: AdaptRegionStateToWorld
  nameWithType: RegionState.AdaptRegionStateToWorld
  fullName: RegionState.AdaptRegionStateToWorld
- uid: Global.RegionState.SaveToString*
  commentId: Overload:Global.RegionState.SaveToString
  isExternal: true
  href: Global.RegionState.html#RegionState_SaveToString
  name: SaveToString
  nameWithType: RegionState.SaveToString
  fullName: RegionState.SaveToString
- uid: Global.RegionState.ReportConsumedItem*
  commentId: Overload:Global.RegionState.ReportConsumedItem
  isExternal: true
  href: Global.RegionState.html#RegionState_ReportConsumedItem_System_Int32_System_Int32_System_Int32_
  name: ReportConsumedItem
  nameWithType: RegionState.ReportConsumedItem
  fullName: RegionState.ReportConsumedItem
- uid: Global.RegionState.ItemConsumed*
  commentId: Overload:Global.RegionState.ItemConsumed
  isExternal: true
  href: Global.RegionState.html#RegionState_ItemConsumed_System_Int32_System_Int32_
  name: ItemConsumed
  nameWithType: RegionState.ItemConsumed
  fullName: RegionState.ItemConsumed
