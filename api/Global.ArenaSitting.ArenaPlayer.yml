### YamlMime:ManagedReference
items:
- uid: Global.ArenaSitting.ArenaPlayer
  commentId: T:Global.ArenaSitting.ArenaPlayer
  id: ArenaSitting.ArenaPlayer
  parent: Global
  children:
  - Global.ArenaSitting.ArenaPlayer.#ctor(System.Int32)
  - Global.ArenaSitting.ArenaPlayer.AddSandboxScore(System.Int32)
  - Global.ArenaSitting.ArenaPlayer.LoadFromString(System.String)
  - Global.ArenaSitting.ArenaPlayer.Reset
  - Global.ArenaSitting.ArenaPlayer.SortAllKills
  - Global.ArenaSitting.ArenaPlayer.ToString
  - Global.ArenaSitting.ArenaPlayer.alive
  - Global.ArenaSitting.ArenaPlayer.allKills
  - Global.ArenaSitting.ArenaPlayer.deaths
  - Global.ArenaSitting.ArenaPlayer.hasEnteredGameArea
  - Global.ArenaSitting.ArenaPlayer.parries
  - Global.ArenaSitting.ArenaPlayer.playerClass
  - Global.ArenaSitting.ArenaPlayer.playerNumber
  - Global.ArenaSitting.ArenaPlayer.randomPlacement
  - Global.ArenaSitting.ArenaPlayer.readyForNextRound
  - Global.ArenaSitting.ArenaPlayer.roundKills
  - Global.ArenaSitting.ArenaPlayer.sandboxWin
  - Global.ArenaSitting.ArenaPlayer.score
  - Global.ArenaSitting.ArenaPlayer.timeAlive
  - Global.ArenaSitting.ArenaPlayer.totScore
  - Global.ArenaSitting.ArenaPlayer.unrecognizedSaveStrings
  - Global.ArenaSitting.ArenaPlayer.winner
  - Global.ArenaSitting.ArenaPlayer.wins
  langs:
  - csharp
  - vb
  name: ArenaSitting.ArenaPlayer
  nameWithType: ArenaSitting.ArenaPlayer
  fullName: ArenaSitting.ArenaPlayer
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ArenaSitting.ArenaPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ArenaSitting.ArenaPlayer
    content.vb: Public Class ArenaSitting.ArenaPlayer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ArenaSitting.ArenaPlayer.playerNumber
  commentId: F:Global.ArenaSitting.ArenaPlayer.playerNumber
  id: playerNumber
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: playerNumber
  nameWithType: ArenaSitting.ArenaPlayer.playerNumber
  fullName: ArenaSitting.ArenaPlayer.playerNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.playerNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int playerNumber
    return:
      type: System.Int32
    content.vb: Public playerNumber As Integer
- uid: Global.ArenaSitting.ArenaPlayer.wins
  commentId: F:Global.ArenaSitting.ArenaPlayer.wins
  id: wins
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: wins
  nameWithType: ArenaSitting.ArenaPlayer.wins
  fullName: ArenaSitting.ArenaPlayer.wins
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.wins</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wins
    return:
      type: System.Int32
    content.vb: Public wins As Integer
- uid: Global.ArenaSitting.ArenaPlayer.deaths
  commentId: F:Global.ArenaSitting.ArenaPlayer.deaths
  id: deaths
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: deaths
  nameWithType: ArenaSitting.ArenaPlayer.deaths
  fullName: ArenaSitting.ArenaPlayer.deaths
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.deaths</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int deaths
    return:
      type: System.Int32
    content.vb: Public deaths As Integer
- uid: Global.ArenaSitting.ArenaPlayer.totScore
  commentId: F:Global.ArenaSitting.ArenaPlayer.totScore
  id: totScore
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: totScore
  nameWithType: ArenaSitting.ArenaPlayer.totScore
  fullName: ArenaSitting.ArenaPlayer.totScore
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.totScore</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int totScore
    return:
      type: System.Int32
    content.vb: Public totScore As Integer
- uid: Global.ArenaSitting.ArenaPlayer.allKills
  commentId: F:Global.ArenaSitting.ArenaPlayer.allKills
  id: allKills
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: allKills
  nameWithType: ArenaSitting.ArenaPlayer.allKills
  fullName: ArenaSitting.ArenaPlayer.allKills
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.allKills</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IconSymbol.IconSymbolData> allKills
    return:
      type: System.Collections.Generic.List{IconSymbol.IconSymbolData}
    content.vb: Public allKills As List(Of IconSymbol.IconSymbolData)
- uid: Global.ArenaSitting.ArenaPlayer.score
  commentId: F:Global.ArenaSitting.ArenaPlayer.score
  id: score
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: score
  nameWithType: ArenaSitting.ArenaPlayer.score
  fullName: ArenaSitting.ArenaPlayer.score
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.score</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int score
    return:
      type: System.Int32
    content.vb: Public score As Integer
- uid: Global.ArenaSitting.ArenaPlayer.timeAlive
  commentId: F:Global.ArenaSitting.ArenaPlayer.timeAlive
  id: timeAlive
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: timeAlive
  nameWithType: ArenaSitting.ArenaPlayer.timeAlive
  fullName: ArenaSitting.ArenaPlayer.timeAlive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.timeAlive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeAlive
    return:
      type: System.Int32
    content.vb: Public timeAlive As Integer
- uid: Global.ArenaSitting.ArenaPlayer.randomPlacement
  commentId: F:Global.ArenaSitting.ArenaPlayer.randomPlacement
  id: randomPlacement
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: randomPlacement
  nameWithType: ArenaSitting.ArenaPlayer.randomPlacement
  fullName: ArenaSitting.ArenaPlayer.randomPlacement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.randomPlacement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int randomPlacement
    return:
      type: System.Int32
    content.vb: Public randomPlacement As Integer
- uid: Global.ArenaSitting.ArenaPlayer.sandboxWin
  commentId: F:Global.ArenaSitting.ArenaPlayer.sandboxWin
  id: sandboxWin
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: sandboxWin
  nameWithType: ArenaSitting.ArenaPlayer.sandboxWin
  fullName: ArenaSitting.ArenaPlayer.sandboxWin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.sandboxWin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sandboxWin
    return:
      type: System.Int32
    content.vb: Public sandboxWin As Integer
- uid: Global.ArenaSitting.ArenaPlayer.alive
  commentId: F:Global.ArenaSitting.ArenaPlayer.alive
  id: alive
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: alive
  nameWithType: ArenaSitting.ArenaPlayer.alive
  fullName: ArenaSitting.ArenaPlayer.alive
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.alive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool alive
    return:
      type: System.Boolean
    content.vb: Public alive As Boolean
- uid: Global.ArenaSitting.ArenaPlayer.readyForNextRound
  commentId: F:Global.ArenaSitting.ArenaPlayer.readyForNextRound
  id: readyForNextRound
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: readyForNextRound
  nameWithType: ArenaSitting.ArenaPlayer.readyForNextRound
  fullName: ArenaSitting.ArenaPlayer.readyForNextRound
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.readyForNextRound</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyForNextRound
    return:
      type: System.Boolean
    content.vb: Public readyForNextRound As Boolean
- uid: Global.ArenaSitting.ArenaPlayer.winner
  commentId: F:Global.ArenaSitting.ArenaPlayer.winner
  id: winner
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: winner
  nameWithType: ArenaSitting.ArenaPlayer.winner
  fullName: ArenaSitting.ArenaPlayer.winner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.winner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool winner
    return:
      type: System.Boolean
    content.vb: Public winner As Boolean
- uid: Global.ArenaSitting.ArenaPlayer.hasEnteredGameArea
  commentId: F:Global.ArenaSitting.ArenaPlayer.hasEnteredGameArea
  id: hasEnteredGameArea
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: hasEnteredGameArea
  nameWithType: ArenaSitting.ArenaPlayer.hasEnteredGameArea
  fullName: ArenaSitting.ArenaPlayer.hasEnteredGameArea
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.hasEnteredGameArea</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hasEnteredGameArea
    return:
      type: System.Boolean
    content.vb: Public hasEnteredGameArea As Boolean
- uid: Global.ArenaSitting.ArenaPlayer.roundKills
  commentId: F:Global.ArenaSitting.ArenaPlayer.roundKills
  id: roundKills
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: roundKills
  nameWithType: ArenaSitting.ArenaPlayer.roundKills
  fullName: ArenaSitting.ArenaPlayer.roundKills
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.roundKills</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IconSymbol.IconSymbolData> roundKills
    return:
      type: System.Collections.Generic.List{IconSymbol.IconSymbolData}
    content.vb: Public roundKills As List(Of IconSymbol.IconSymbolData)
- uid: Global.ArenaSitting.ArenaPlayer.unrecognizedSaveStrings
  commentId: F:Global.ArenaSitting.ArenaPlayer.unrecognizedSaveStrings
  id: unrecognizedSaveStrings
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: unrecognizedSaveStrings
  nameWithType: ArenaSitting.ArenaPlayer.unrecognizedSaveStrings
  fullName: ArenaSitting.ArenaPlayer.unrecognizedSaveStrings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.unrecognizedSaveStrings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> unrecognizedSaveStrings
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public unrecognizedSaveStrings As List(Of String)
- uid: Global.ArenaSitting.ArenaPlayer.playerClass
  commentId: F:Global.ArenaSitting.ArenaPlayer.playerClass
  id: playerClass
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: playerClass
  nameWithType: ArenaSitting.ArenaPlayer.playerClass
  fullName: ArenaSitting.ArenaPlayer.playerClass
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.playerClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Name playerClass
    return:
      type: Global.SlugcatStats.Name
    content.vb: Public playerClass As SlugcatStats.Name
- uid: Global.ArenaSitting.ArenaPlayer.parries
  commentId: F:Global.ArenaSitting.ArenaPlayer.parries
  id: parries
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: parries
  nameWithType: ArenaSitting.ArenaPlayer.parries
  fullName: ArenaSitting.ArenaPlayer.parries
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSitting.ArenaPlayer.parries</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int parries
    return:
      type: System.Int32
    content.vb: Public parries As Integer
- uid: Global.ArenaSitting.ArenaPlayer.#ctor(System.Int32)
  commentId: M:Global.ArenaSitting.ArenaPlayer.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: ArenaPlayer(int)
  nameWithType: ArenaSitting.ArenaPlayer.ArenaPlayer(int)
  fullName: ArenaSitting.ArenaPlayer.ArenaPlayer(int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ArenaSitting.ArenaPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaPlayer(int playerNumber)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:ArenaSitting.ArenaPlayer.#ctor(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(playerNumber As Integer)
  overload: Global.ArenaSitting.ArenaPlayer.#ctor*
  nameWithType.vb: ArenaSitting.ArenaPlayer.New(Integer)
  fullName.vb: ArenaSitting.ArenaPlayer.New(Integer)
  name.vb: New(Integer)
- uid: Global.ArenaSitting.ArenaPlayer.AddSandboxScore(System.Int32)
  commentId: M:Global.ArenaSitting.ArenaPlayer.AddSandboxScore(System.Int32)
  id: AddSandboxScore(System.Int32)
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: AddSandboxScore(int)
  nameWithType: ArenaSitting.ArenaPlayer.AddSandboxScore(int)
  fullName: ArenaSitting.ArenaPlayer.AddSandboxScore(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.ArenaPlayer.AddSandboxScore(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddSandboxScore(int scoreAdd)
    parameters:
    - id: scoreAdd
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>scoreAdd</parameter>
            <parameter>M:ArenaSitting.ArenaPlayer.AddSandboxScore(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddSandboxScore(scoreAdd As Integer)
  overload: Global.ArenaSitting.ArenaPlayer.AddSandboxScore*
  nameWithType.vb: ArenaSitting.ArenaPlayer.AddSandboxScore(Integer)
  fullName.vb: ArenaSitting.ArenaPlayer.AddSandboxScore(Integer)
  name.vb: AddSandboxScore(Integer)
- uid: Global.ArenaSitting.ArenaPlayer.Reset
  commentId: M:Global.ArenaSitting.ArenaPlayer.Reset
  id: Reset
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ArenaSitting.ArenaPlayer.Reset()
  fullName: ArenaSitting.ArenaPlayer.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.ArenaPlayer.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.ArenaSitting.ArenaPlayer.Reset*
- uid: Global.ArenaSitting.ArenaPlayer.SortAllKills
  commentId: M:Global.ArenaSitting.ArenaPlayer.SortAllKills
  id: SortAllKills
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: SortAllKills()
  nameWithType: ArenaSitting.ArenaPlayer.SortAllKills()
  fullName: ArenaSitting.ArenaPlayer.SortAllKills()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.ArenaPlayer.SortAllKills</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SortAllKills()
    content.vb: Public Sub SortAllKills()
  overload: Global.ArenaSitting.ArenaPlayer.SortAllKills*
- uid: Global.ArenaSitting.ArenaPlayer.ToString
  commentId: M:Global.ArenaSitting.ArenaPlayer.ToString
  id: ToString
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: ArenaSitting.ArenaPlayer.ToString()
  fullName: ArenaSitting.ArenaPlayer.ToString()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.ArenaPlayer.ToString</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaSitting.ArenaPlayer.ToString</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: Global.ArenaSitting.ArenaPlayer.ToString*
- uid: Global.ArenaSitting.ArenaPlayer.LoadFromString(System.String)
  commentId: M:Global.ArenaSitting.ArenaPlayer.LoadFromString(System.String)
  id: LoadFromString(System.String)
  parent: Global.ArenaSitting.ArenaPlayer
  langs:
  - csharp
  - vb
  name: LoadFromString(string)
  nameWithType: ArenaSitting.ArenaPlayer.LoadFromString(string)
  fullName: ArenaSitting.ArenaPlayer.LoadFromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSitting.ArenaPlayer.LoadFromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadFromString(string inpt)
    parameters:
    - id: inpt
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>inpt</parameter>
            <parameter>M:ArenaSitting.ArenaPlayer.LoadFromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub LoadFromString(inpt As String)
  overload: Global.ArenaSitting.ArenaPlayer.LoadFromString*
  nameWithType.vb: ArenaSitting.ArenaPlayer.LoadFromString(String)
  fullName.vb: ArenaSitting.ArenaPlayer.LoadFromString(String)
  name.vb: LoadFromString(String)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{IconSymbol.IconSymbolData}
  commentId: T:System.Collections.Generic.List{IconSymbol.IconSymbolData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IconSymbol.IconSymbolData>
  nameWithType: List<IconSymbol.IconSymbolData>
  fullName: System.Collections.Generic.List<IconSymbol.IconSymbolData>
  nameWithType.vb: List(Of IconSymbol.IconSymbolData)
  fullName.vb: System.Collections.Generic.List(Of IconSymbol.IconSymbolData)
  name.vb: List(Of IconSymbol.IconSymbolData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IconSymbol
    name: IconSymbol
    isExternal: true
    href: IconSymbol.html
  - name: .
  - uid: Global.IconSymbol.IconSymbolData
    name: IconSymbolData
    isExternal: true
    href: IconSymbol.IconSymbolData.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Global.ArenaSitting.ArenaPlayer.#ctor*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.#ctor
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer__ctor_System_Int32_
  name: ArenaPlayer
  nameWithType: ArenaSitting.ArenaPlayer.ArenaPlayer
  fullName: ArenaSitting.ArenaPlayer.ArenaPlayer
  nameWithType.vb: ArenaSitting.ArenaPlayer.New
  fullName.vb: ArenaSitting.ArenaPlayer.New
  name.vb: New
- uid: Global.ArenaSitting.ArenaPlayer.AddSandboxScore*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.AddSandboxScore
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer_AddSandboxScore_System_Int32_
  name: AddSandboxScore
  nameWithType: ArenaSitting.ArenaPlayer.AddSandboxScore
  fullName: ArenaSitting.ArenaPlayer.AddSandboxScore
- uid: Global.ArenaSitting.ArenaPlayer.Reset*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.Reset
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer_Reset
  name: Reset
  nameWithType: ArenaSitting.ArenaPlayer.Reset
  fullName: ArenaSitting.ArenaPlayer.Reset
- uid: Global.ArenaSitting.ArenaPlayer.SortAllKills*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.SortAllKills
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer_SortAllKills
  name: SortAllKills
  nameWithType: ArenaSitting.ArenaPlayer.SortAllKills
  fullName: ArenaSitting.ArenaPlayer.SortAllKills
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Global.ArenaSitting.ArenaPlayer.ToString*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.ToString
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer_ToString
  name: ToString
  nameWithType: ArenaSitting.ArenaPlayer.ToString
  fullName: ArenaSitting.ArenaPlayer.ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ArenaSitting.ArenaPlayer.LoadFromString*
  commentId: Overload:Global.ArenaSitting.ArenaPlayer.LoadFromString
  isExternal: true
  href: Global.ArenaSitting.ArenaPlayer.html#ArenaSitting_ArenaPlayer_LoadFromString_System_String_
  name: LoadFromString
  nameWithType: ArenaSitting.ArenaPlayer.LoadFromString
  fullName: ArenaSitting.ArenaPlayer.LoadFromString
