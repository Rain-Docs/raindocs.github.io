### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.UIelement
  commentId: T:Menu.Remix.MixedUI.UIelement
  id: UIelement
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,System.Single)
  - Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)
  - Menu.Remix.MixedUI.UIelement.Change
  - Menu.Remix.MixedUI.UIelement.ContextWrapped
  - Menu.Remix.MixedUI.UIelement.CtlrInput
  - Menu.Remix.MixedUI.UIelement.Deactivate
  - Menu.Remix.MixedUI.UIelement.DisplayDescription
  - Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  - Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  - Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  - Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  - Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  - Menu.Remix.MixedUI.UIelement.Freeze
  - Menu.Remix.MixedUI.UIelement.GetPos
  - Menu.Remix.MixedUI.UIelement.GrafUpdate(System.Single)
  - Menu.Remix.MixedUI.UIelement.Hidden
  - Menu.Remix.MixedUI.UIelement.Hide
  - Menu.Remix.MixedUI.UIelement.InScrollBox
  - Menu.Remix.MixedUI.UIelement.IsInactive
  - Menu.Remix.MixedUI.UIelement.LastCtlrInput
  - Menu.Remix.MixedUI.UIelement.Menu
  - Menu.Remix.MixedUI.UIelement.MenuMouseMode
  - Menu.Remix.MixedUI.UIelement.MouseOver
  - Menu.Remix.MixedUI.UIelement.MousePos
  - Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  - Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  - Menu.Remix.MixedUI.UIelement.MoveToBack
  - Menu.Remix.MixedUI.UIelement.MoveToFront
  - Menu.Remix.MixedUI.UIelement.OnChange
  - Menu.Remix.MixedUI.UIelement.OnDeactivate
  - Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  - Menu.Remix.MixedUI.UIelement.OnReactivate
  - Menu.Remix.MixedUI.UIelement.OnReset
  - Menu.Remix.MixedUI.UIelement.OnUnload
  - Menu.Remix.MixedUI.UIelement.OnUpdate
  - Menu.Remix.MixedUI.UIelement.Owner
  - Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  - Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Menu.Remix.MixedUI.UIelement.PosX
  - Menu.Remix.MixedUI.UIelement.PosY
  - Menu.Remix.MixedUI.UIelement.Reactivate
  - Menu.Remix.MixedUI.UIelement.Reset
  - Menu.Remix.MixedUI.UIelement.ScreenPos
  - Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  - Menu.Remix.MixedUI.UIelement.Show
  - Menu.Remix.MixedUI.UIelement.Unload
  - Menu.Remix.MixedUI.UIelement.Update
  - Menu.Remix.MixedUI.UIelement._pos
  - Menu.Remix.MixedUI.UIelement._rad
  - Menu.Remix.MixedUI.UIelement._size
  - Menu.Remix.MixedUI.UIelement.description
  - Menu.Remix.MixedUI.UIelement.fixedRad
  - Menu.Remix.MixedUI.UIelement.fixedSize
  - Menu.Remix.MixedUI.UIelement.frameMulti
  - Menu.Remix.MixedUI.UIelement.isRectangular
  - Menu.Remix.MixedUI.UIelement.lastScreenPos
  - Menu.Remix.MixedUI.UIelement.mute
  - Menu.Remix.MixedUI.UIelement.myContainer
  - Menu.Remix.MixedUI.UIelement.pos
  - Menu.Remix.MixedUI.UIelement.rad
  - Menu.Remix.MixedUI.UIelement.scrollBox
  - Menu.Remix.MixedUI.UIelement.size
  - Menu.Remix.MixedUI.UIelement.tab
  - Menu.Remix.MixedUI.UIelement.wrapper
  langs:
  - csharp
  - vb
  name: UIelement
  nameWithType: UIelement
  fullName: Menu.Remix.MixedUI.UIelement
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.UIelement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class UIelement
    content.vb: Public MustInherit Class UIelement
  inheritance:
  - System.Object
  derivedClasses:
  - Menu.Remix.MixedUI.OpContainer
  - Menu.Remix.MixedUI.OpImage
  - Menu.Remix.MixedUI.OpLabel
  - Menu.Remix.MixedUI.OpRect
  - Menu.Remix.MixedUI.UIfocusable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.UIelement.mute
  commentId: F:Menu.Remix.MixedUI.UIelement.mute
  id: mute
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: mute
  nameWithType: UIelement.mute
  fullName: Menu.Remix.MixedUI.UIelement.mute
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.mute</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool mute
    return:
      type: System.Boolean
    content.vb: Public mute As Boolean
- uid: Menu.Remix.MixedUI.UIelement.description
  commentId: F:Menu.Remix.MixedUI.UIelement.description
  id: description
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: description
  nameWithType: UIelement.description
  fullName: Menu.Remix.MixedUI.UIelement.description
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.description</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string description
    return:
      type: System.String
    content.vb: Public description As String
- uid: Menu.Remix.MixedUI.UIelement.isRectangular
  commentId: F:Menu.Remix.MixedUI.UIelement.isRectangular
  id: isRectangular
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: isRectangular
  nameWithType: UIelement.isRectangular
  fullName: Menu.Remix.MixedUI.UIelement.isRectangular
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.isRectangular</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly bool isRectangular
    return:
      type: System.Boolean
    content.vb: Public ReadOnly isRectangular As Boolean
- uid: Menu.Remix.MixedUI.UIelement._pos
  commentId: F:Menu.Remix.MixedUI.UIelement._pos
  id: _pos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: _pos
  nameWithType: UIelement._pos
  fullName: Menu.Remix.MixedUI.UIelement._pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement._pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 _pos
    return:
      type: UnityEngine.Vector2
    content.vb: Protected _pos As Vector2
- uid: Menu.Remix.MixedUI.UIelement._size
  commentId: F:Menu.Remix.MixedUI.UIelement._size
  id: _size
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: _size
  nameWithType: UIelement._size
  fullName: Menu.Remix.MixedUI.UIelement._size
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement._size</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 _size
    return:
      type: UnityEngine.Vector2
    content.vb: Protected _size As Vector2
- uid: Menu.Remix.MixedUI.UIelement._rad
  commentId: F:Menu.Remix.MixedUI.UIelement._rad
  id: _rad
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: _rad
  nameWithType: UIelement._rad
  fullName: Menu.Remix.MixedUI.UIelement._rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement._rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float _rad
    return:
      type: System.Single
    content.vb: Protected _rad As Single
- uid: Menu.Remix.MixedUI.UIelement.fixedSize
  commentId: F:Menu.Remix.MixedUI.UIelement.fixedSize
  id: fixedSize
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: fixedSize
  nameWithType: UIelement.fixedSize
  fullName: Menu.Remix.MixedUI.UIelement.fixedSize
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.fixedSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2? fixedSize
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Protected fixedSize As Vector2?
- uid: Menu.Remix.MixedUI.UIelement.fixedRad
  commentId: F:Menu.Remix.MixedUI.UIelement.fixedRad
  id: fixedRad
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: fixedRad
  nameWithType: UIelement.fixedRad
  fullName: Menu.Remix.MixedUI.UIelement.fixedRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.fixedRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected float? fixedRad
    return:
      type: System.Nullable{System.Single}
    content.vb: Protected fixedRad As Single?
- uid: Menu.Remix.MixedUI.UIelement.tab
  commentId: F:Menu.Remix.MixedUI.UIelement.tab
  id: tab
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: tab
  nameWithType: UIelement.tab
  fullName: Menu.Remix.MixedUI.UIelement.tab
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.tab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected OpTab tab
    return:
      type: Menu.Remix.MixedUI.OpTab
    content.vb: Protected tab As OpTab
- uid: Menu.Remix.MixedUI.UIelement.myContainer
  commentId: F:Menu.Remix.MixedUI.UIelement.myContainer
  id: myContainer
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: myContainer
  nameWithType: UIelement.myContainer
  fullName: Menu.Remix.MixedUI.UIelement.myContainer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.myContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected FContainer myContainer
    return:
      type: Global.FContainer
    content.vb: Protected myContainer As FContainer
- uid: Menu.Remix.MixedUI.UIelement.lastScreenPos
  commentId: F:Menu.Remix.MixedUI.UIelement.lastScreenPos
  id: lastScreenPos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: lastScreenPos
  nameWithType: UIelement.lastScreenPos
  fullName: Menu.Remix.MixedUI.UIelement.lastScreenPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.lastScreenPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 lastScreenPos
    return:
      type: UnityEngine.Vector2
    content.vb: Protected lastScreenPos As Vector2
- uid: Menu.Remix.MixedUI.UIelement.wrapper
  commentId: F:Menu.Remix.MixedUI.UIelement.wrapper
  id: wrapper
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: wrapper
  nameWithType: UIelement.wrapper
  fullName: Menu.Remix.MixedUI.UIelement.wrapper
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.UIelement.wrapper</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected UIelementWrapper wrapper
    return:
      type: Menu.Remix.UIelementWrapper
    content.vb: Protected wrapper As UIelementWrapper
- uid: Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)
  id: '#ctor(UnityEngine.Vector2,UnityEngine.Vector2)'
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: UIelement(Vector2, Vector2)
  nameWithType: UIelement.UIelement(Vector2, Vector2)
  fullName: Menu.Remix.MixedUI.UIelement.UIelement(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.UIelement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public UIelement(Vector2 pos, Vector2 size)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: size
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(pos As Vector2, size As Vector2)
  overload: Menu.Remix.MixedUI.UIelement.#ctor*
  nameWithType.vb: UIelement.New(Vector2, Vector2)
  fullName.vb: Menu.Remix.MixedUI.UIelement.New(UnityEngine.Vector2, UnityEngine.Vector2)
  name.vb: New(Vector2, Vector2)
- uid: Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,System.Single)
  id: '#ctor(UnityEngine.Vector2,System.Single)'
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: UIelement(Vector2, float)
  nameWithType: UIelement.UIelement(Vector2, float)
  fullName: Menu.Remix.MixedUI.UIelement.UIelement(UnityEngine.Vector2, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.UIelement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public UIelement(Vector2 pos, float rad)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: rad
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rad</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.#ctor(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(pos As Vector2, rad As Single)
  overload: Menu.Remix.MixedUI.UIelement.#ctor*
  nameWithType.vb: UIelement.New(Vector2, Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.New(UnityEngine.Vector2, Single)
  name.vb: New(Vector2, Single)
- uid: Menu.Remix.MixedUI.UIelement.Reset
  commentId: M:Menu.Remix.MixedUI.UIelement.Reset
  id: Reset
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: UIelement.Reset()
  fullName: Menu.Remix.MixedUI.UIelement.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset()
  overload: Menu.Remix.MixedUI.UIelement.Reset*
- uid: Menu.Remix.MixedUI.UIelement.Hide
  commentId: M:Menu.Remix.MixedUI.UIelement.Hide
  id: Hide
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Hide()
  nameWithType: UIelement.Hide()
  fullName: Menu.Remix.MixedUI.UIelement.Hide()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Hide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Hide()
    content.vb: Public Sub Hide()
  overload: Menu.Remix.MixedUI.UIelement.Hide*
- uid: Menu.Remix.MixedUI.UIelement.Show
  commentId: M:Menu.Remix.MixedUI.UIelement.Show
  id: Show
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Show()
  nameWithType: UIelement.Show()
  fullName: Menu.Remix.MixedUI.UIelement.Show()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Show</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Show()
    content.vb: Public Sub Show()
  overload: Menu.Remix.MixedUI.UIelement.Show*
- uid: Menu.Remix.MixedUI.UIelement.GetPos
  commentId: M:Menu.Remix.MixedUI.UIelement.GetPos
  id: GetPos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: GetPos()
  nameWithType: UIelement.GetPos()
  fullName: Menu.Remix.MixedUI.UIelement.GetPos()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.GetPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GetPos()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.GetPos</parameter>
          </include>
        </markup>
    content.vb: Public Function GetPos() As Vector2
  overload: Menu.Remix.MixedUI.UIelement.GetPos*
- uid: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  commentId: M:Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  id: SetPos(UnityEngine.Vector2)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: SetPos(Vector2)
  nameWithType: UIelement.SetPos(Vector2)
  fullName: Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetPos(Vector2 value)
    parameters:
    - id: value
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.SetPos(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetPos(value As Vector2)
  overload: Menu.Remix.MixedUI.UIelement.SetPos*
- uid: Menu.Remix.MixedUI.UIelement.MoveToBack
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveToBack
  id: MoveToBack
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MoveToBack()
  nameWithType: UIelement.MoveToBack()
  fullName: Menu.Remix.MixedUI.UIelement.MoveToBack()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.MoveToBack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveToBack()
    content.vb: Public Sub MoveToBack()
  overload: Menu.Remix.MixedUI.UIelement.MoveToBack*
- uid: Menu.Remix.MixedUI.UIelement.MoveToFront
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveToFront
  id: MoveToFront
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MoveToFront()
  nameWithType: UIelement.MoveToFront()
  fullName: Menu.Remix.MixedUI.UIelement.MoveToFront()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.MoveToFront</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveToFront()
    content.vb: Public Sub MoveToFront()
  overload: Menu.Remix.MixedUI.UIelement.MoveToFront*
- uid: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  id: MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MoveInFrontOfElement(UIelement)
  nameWithType: UIelement.MoveInFrontOfElement(UIelement)
  fullName: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveInFrontOfElement(UIelement reference)
    parameters:
    - id: reference
      type: Menu.Remix.MixedUI.UIelement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement(Menu.Remix.MixedUI.UIelement)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveInFrontOfElement(reference As UIelement)
  overload: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement*
- uid: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  commentId: M:Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  id: MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MoveBehindElement(UIelement)
  nameWithType: UIelement.MoveBehindElement(UIelement)
  fullName: Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MoveBehindElement(UIelement reference)
    parameters:
    - id: reference
      type: Menu.Remix.MixedUI.UIelement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reference</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.MoveBehindElement(Menu.Remix.MixedUI.UIelement)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MoveBehindElement(reference As UIelement)
  overload: Menu.Remix.MixedUI.UIelement.MoveBehindElement*
- uid: Menu.Remix.MixedUI.UIelement.Change
  commentId: M:Menu.Remix.MixedUI.UIelement.Change
  id: Change
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Change()
  nameWithType: UIelement.Change()
  fullName: Menu.Remix.MixedUI.UIelement.Change()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Change</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Change()
    content.vb: Protected Overridable Sub Change()
  overload: Menu.Remix.MixedUI.UIelement.Change*
- uid: Menu.Remix.MixedUI.UIelement.Update
  commentId: M:Menu.Remix.MixedUI.UIelement.Update
  id: Update
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: UIelement.Update()
  fullName: Menu.Remix.MixedUI.UIelement.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Menu.Remix.MixedUI.UIelement.Update*
- uid: Menu.Remix.MixedUI.UIelement.GrafUpdate(System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: UIelement.GrafUpdate(float)
  fullName: Menu.Remix.MixedUI.UIelement.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub GrafUpdate(timeStacker As Single)
  overload: Menu.Remix.MixedUI.UIelement.GrafUpdate*
  nameWithType.vb: UIelement.GrafUpdate(Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  commentId: M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  id: PlaySound(SoundID)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID)
  nameWithType: UIelement.PlaySound(SoundID)
  fullName: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundID)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundID As SoundID)
  overload: Menu.Remix.MixedUI.UIelement.PlaySound*
- uid: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)
  id: PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, float, float, float)
  nameWithType: UIelement.PlaySound(SoundID, float, float, float)
  fullName: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundID, float pan, float vol, float pitch)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundID As SoundID, pan As Single, vol As Single, pitch As Single)
  overload: Menu.Remix.MixedUI.UIelement.PlaySound*
  nameWithType.vb: UIelement.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
- uid: Menu.Remix.MixedUI.UIelement.Unload
  commentId: M:Menu.Remix.MixedUI.UIelement.Unload
  id: Unload
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Unload()
  nameWithType: UIelement.Unload()
  fullName: Menu.Remix.MixedUI.UIelement.Unload()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Unload</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Unload()
    content.vb: Protected Overridable Sub Unload()
  overload: Menu.Remix.MixedUI.UIelement.Unload*
- uid: Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  commentId: M:Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)
  id: FrameMultiply(System.Int32)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: FrameMultiply(int)
  nameWithType: UIelement.FrameMultiply(int)
  fullName: Menu.Remix.MixedUI.UIelement.FrameMultiply(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int FrameMultiply(int origFrameCount)
    parameters:
    - id: origFrameCount
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>origFrameCount</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FrameMultiply(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function FrameMultiply(origFrameCount As Integer) As Integer
  overload: Menu.Remix.MixedUI.UIelement.FrameMultiply*
  nameWithType.vb: UIelement.FrameMultiply(Integer)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FrameMultiply(Integer)
  name.vb: FrameMultiply(Integer)
- uid: Menu.Remix.MixedUI.UIelement.DisplayDescription
  commentId: M:Menu.Remix.MixedUI.UIelement.DisplayDescription
  id: DisplayDescription
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: DisplayDescription()
  nameWithType: UIelement.DisplayDescription()
  fullName: Menu.Remix.MixedUI.UIelement.DisplayDescription()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.DisplayDescription</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual string DisplayDescription()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.DisplayDescription</parameter>
          </include>
        </markup>
    content.vb: Protected Overridable Function DisplayDescription() As String
  overload: Menu.Remix.MixedUI.UIelement.DisplayDescription*
- uid: Menu.Remix.MixedUI.UIelement.Freeze
  commentId: M:Menu.Remix.MixedUI.UIelement.Freeze
  id: Freeze
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Freeze()
  nameWithType: UIelement.Freeze()
  fullName: Menu.Remix.MixedUI.UIelement.Freeze()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Freeze</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Freeze()
    content.vb: Protected Overridable Sub Freeze()
  overload: Menu.Remix.MixedUI.UIelement.Freeze*
- uid: Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)
  id: FLabelCreate(System.String,System.Boolean)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: FLabelCreate(string, bool)
  nameWithType: UIelement.FLabelCreate(string, bool)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelCreate(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static FLabel FLabelCreate(string text, bool bigText = false)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelCreate(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Protected Shared Function FLabelCreate(text As String, bigText As Boolean = False) As FLabel
  overload: Menu.Remix.MixedUI.UIelement.FLabelCreate*
  nameWithType.vb: UIelement.FLabelCreate(String, Boolean)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FLabelCreate(String, Boolean)
  name.vb: FLabelCreate(String, Boolean)
- uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  id: FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: FLabelPlaceAtCenter(FLabel, Vector2, Vector2)
  nameWithType: UIelement.FLabelPlaceAtCenter(FLabel, Vector2, Vector2)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static void FLabelPlaceAtCenter(FLabel label, Vector2 pos, Vector2 size)
    parameters:
    - id: label
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>label</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: size
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>size</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Protected Shared Sub FLabelPlaceAtCenter(label As FLabel, pos As Vector2, size As Vector2)
  overload: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter*
- uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  commentId: M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  id: FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: FLabelPlaceAtCenter(FLabel, float, float, float, float)
  nameWithType: UIelement.FLabelPlaceAtCenter(FLabel, float, float, float, float)
  fullName: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static void FLabelPlaceAtCenter(FLabel label, float offsetLeft, float offsetBottom, float width, float height)
    parameters:
    - id: label
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>label</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetLeft
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetLeft</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: offsetBottom
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>offsetBottom</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: width
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>width</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: height
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>height</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Protected Shared Sub FLabelPlaceAtCenter(label As FLabel, offsetLeft As Single, offsetBottom As Single, width As Single, height As Single)
  overload: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter*
  nameWithType.vb: UIelement.FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
  fullName.vb: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
  name.vb: FLabelPlaceAtCenter(FLabel, Single, Single, Single, Single)
- uid: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  commentId: M:Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})
  id: ForceMenuMouseMode(System.Nullable{System.Boolean})
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: ForceMenuMouseMode(bool?)
  nameWithType: UIelement.ForceMenuMouseMode(bool?)
  fullName: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(bool?)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected void ForceMenuMouseMode(bool? value)
    parameters:
    - id: value
      type: System.Nullable{System.Boolean}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>value</parameter>
            <parameter>M:Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(System.Nullable{System.Boolean})</parameter>
          </include>
        </markup>
    content.vb: Protected Sub ForceMenuMouseMode(value As Boolean?)
  overload: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode*
  nameWithType.vb: UIelement.ForceMenuMouseMode(Boolean?)
  fullName.vb: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode(Boolean?)
  name.vb: ForceMenuMouseMode(Boolean?)
- uid: Menu.Remix.MixedUI.UIelement.Deactivate
  commentId: M:Menu.Remix.MixedUI.UIelement.Deactivate
  id: Deactivate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Deactivate()
  nameWithType: UIelement.Deactivate()
  fullName: Menu.Remix.MixedUI.UIelement.Deactivate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Deactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Deactivate()
    content.vb: Protected Overridable Sub Deactivate()
  overload: Menu.Remix.MixedUI.UIelement.Deactivate*
- uid: Menu.Remix.MixedUI.UIelement.Reactivate
  commentId: M:Menu.Remix.MixedUI.UIelement.Reactivate
  id: Reactivate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Reactivate()
  nameWithType: UIelement.Reactivate()
  fullName: Menu.Remix.MixedUI.UIelement.Reactivate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.UIelement.Reactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual void Reactivate()
    content.vb: Protected Overridable Sub Reactivate()
  overload: Menu.Remix.MixedUI.UIelement.Reactivate*
- uid: Menu.Remix.MixedUI.UIelement.PosX
  commentId: P:Menu.Remix.MixedUI.UIelement.PosX
  id: PosX
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: PosX
  nameWithType: UIelement.PosX
  fullName: Menu.Remix.MixedUI.UIelement.PosX
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.PosX</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float PosX { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PosX As Single
  overload: Menu.Remix.MixedUI.UIelement.PosX*
- uid: Menu.Remix.MixedUI.UIelement.PosY
  commentId: P:Menu.Remix.MixedUI.UIelement.PosY
  id: PosY
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: PosY
  nameWithType: UIelement.PosY
  fullName: Menu.Remix.MixedUI.UIelement.PosY
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.PosY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float PosY { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property PosY As Single
  overload: Menu.Remix.MixedUI.UIelement.PosY*
- uid: Menu.Remix.MixedUI.UIelement.size
  commentId: P:Menu.Remix.MixedUI.UIelement.size
  id: size
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: size
  nameWithType: UIelement.size
  fullName: Menu.Remix.MixedUI.UIelement.size
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.size</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 size { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public Property size As Vector2
  overload: Menu.Remix.MixedUI.UIelement.size*
- uid: Menu.Remix.MixedUI.UIelement.rad
  commentId: P:Menu.Remix.MixedUI.UIelement.rad
  id: rad
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: UIelement.rad
  fullName: Menu.Remix.MixedUI.UIelement.rad
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property rad As Single
  overload: Menu.Remix.MixedUI.UIelement.rad*
- uid: Menu.Remix.MixedUI.UIelement.Hidden
  commentId: P:Menu.Remix.MixedUI.UIelement.Hidden
  id: Hidden
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Hidden
  nameWithType: UIelement.Hidden
  fullName: Menu.Remix.MixedUI.UIelement.Hidden
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.Hidden</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Hidden { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Hidden As Boolean
  overload: Menu.Remix.MixedUI.UIelement.Hidden*
- uid: Menu.Remix.MixedUI.UIelement.IsInactive
  commentId: P:Menu.Remix.MixedUI.UIelement.IsInactive
  id: IsInactive
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: IsInactive
  nameWithType: UIelement.IsInactive
  fullName: Menu.Remix.MixedUI.UIelement.IsInactive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.IsInactive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsInactive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsInactive As Boolean
  overload: Menu.Remix.MixedUI.UIelement.IsInactive*
- uid: Menu.Remix.MixedUI.UIelement.pos
  commentId: P:Menu.Remix.MixedUI.UIelement.pos
  id: pos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: UIelement.pos
  fullName: Menu.Remix.MixedUI.UIelement.pos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 pos { get; set; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Protected Property pos As Vector2
  overload: Menu.Remix.MixedUI.UIelement.pos*
- uid: Menu.Remix.MixedUI.UIelement.Menu
  commentId: P:Menu.Remix.MixedUI.UIelement.Menu
  id: Menu
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Menu
  nameWithType: UIelement.Menu
  fullName: Menu.Remix.MixedUI.UIelement.Menu
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.Menu</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Menu Menu { get; }
    parameters: []
    return:
      type: Menu.Menu
    content.vb: Protected ReadOnly Property Menu As Menu
  overload: Menu.Remix.MixedUI.UIelement.Menu*
- uid: Menu.Remix.MixedUI.UIelement.Owner
  commentId: P:Menu.Remix.MixedUI.UIelement.Owner
  id: Owner
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: UIelement.Owner
  fullName: Menu.Remix.MixedUI.UIelement.Owner
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.Owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected PositionedMenuObject Owner { get; }
    parameters: []
    return:
      type: Menu.PositionedMenuObject
    content.vb: Protected ReadOnly Property Owner As PositionedMenuObject
  overload: Menu.Remix.MixedUI.UIelement.Owner*
- uid: Menu.Remix.MixedUI.UIelement.MouseOver
  commentId: P:Menu.Remix.MixedUI.UIelement.MouseOver
  id: MouseOver
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MouseOver
  nameWithType: UIelement.MouseOver
  fullName: Menu.Remix.MixedUI.UIelement.MouseOver
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.MouseOver</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected virtual bool MouseOver { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Overridable ReadOnly Property MouseOver As Boolean
  overload: Menu.Remix.MixedUI.UIelement.MouseOver*
- uid: Menu.Remix.MixedUI.UIelement.MousePos
  commentId: P:Menu.Remix.MixedUI.UIelement.MousePos
  id: MousePos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MousePos
  nameWithType: UIelement.MousePos
  fullName: Menu.Remix.MixedUI.UIelement.MousePos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.MousePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 MousePos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Protected ReadOnly Property MousePos As Vector2
  overload: Menu.Remix.MixedUI.UIelement.MousePos*
- uid: Menu.Remix.MixedUI.UIelement.scrollBox
  commentId: P:Menu.Remix.MixedUI.UIelement.scrollBox
  id: scrollBox
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: scrollBox
  nameWithType: UIelement.scrollBox
  fullName: Menu.Remix.MixedUI.UIelement.scrollBox
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.scrollBox</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected OpScrollBox scrollBox { get; }
    parameters: []
    return:
      type: Menu.Remix.MixedUI.OpScrollBox
    content.vb: Protected ReadOnly Property scrollBox As OpScrollBox
  overload: Menu.Remix.MixedUI.UIelement.scrollBox*
- uid: Menu.Remix.MixedUI.UIelement.InScrollBox
  commentId: P:Menu.Remix.MixedUI.UIelement.InScrollBox
  id: InScrollBox
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: InScrollBox
  nameWithType: UIelement.InScrollBox
  fullName: Menu.Remix.MixedUI.UIelement.InScrollBox
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.InScrollBox</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected bool InScrollBox { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property InScrollBox As Boolean
  overload: Menu.Remix.MixedUI.UIelement.InScrollBox*
- uid: Menu.Remix.MixedUI.UIelement.ScreenPos
  commentId: P:Menu.Remix.MixedUI.UIelement.ScreenPos
  id: ScreenPos
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: ScreenPos
  nameWithType: UIelement.ScreenPos
  fullName: Menu.Remix.MixedUI.UIelement.ScreenPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.ScreenPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected Vector2 ScreenPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Protected ReadOnly Property ScreenPos As Vector2
  overload: Menu.Remix.MixedUI.UIelement.ScreenPos*
- uid: Menu.Remix.MixedUI.UIelement.frameMulti
  commentId: P:Menu.Remix.MixedUI.UIelement.frameMulti
  id: frameMulti
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: frameMulti
  nameWithType: UIelement.frameMulti
  fullName: Menu.Remix.MixedUI.UIelement.frameMulti
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.frameMulti</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float frameMulti { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Shared ReadOnly Property frameMulti As Single
  overload: Menu.Remix.MixedUI.UIelement.frameMulti*
- uid: Menu.Remix.MixedUI.UIelement.MenuMouseMode
  commentId: P:Menu.Remix.MixedUI.UIelement.MenuMouseMode
  id: MenuMouseMode
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: MenuMouseMode
  nameWithType: UIelement.MenuMouseMode
  fullName: Menu.Remix.MixedUI.UIelement.MenuMouseMode
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.MenuMouseMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MenuMouseMode { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MenuMouseMode As Boolean
  overload: Menu.Remix.MixedUI.UIelement.MenuMouseMode*
- uid: Menu.Remix.MixedUI.UIelement.CtlrInput
  commentId: P:Menu.Remix.MixedUI.UIelement.CtlrInput
  id: CtlrInput
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: CtlrInput
  nameWithType: UIelement.CtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.CtlrInput
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.CtlrInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage CtlrInput { get; }
    parameters: []
    return:
      type: Global.Player.InputPackage
    content.vb: Public ReadOnly Property CtlrInput As Player.InputPackage
  overload: Menu.Remix.MixedUI.UIelement.CtlrInput*
- uid: Menu.Remix.MixedUI.UIelement.LastCtlrInput
  commentId: P:Menu.Remix.MixedUI.UIelement.LastCtlrInput
  id: LastCtlrInput
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: LastCtlrInput
  nameWithType: UIelement.LastCtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.LastCtlrInput
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.LastCtlrInput</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Player.InputPackage LastCtlrInput { get; }
    parameters: []
    return:
      type: Global.Player.InputPackage
    content.vb: Public ReadOnly Property LastCtlrInput As Player.InputPackage
  overload: Menu.Remix.MixedUI.UIelement.LastCtlrInput*
- uid: Menu.Remix.MixedUI.UIelement.ContextWrapped
  commentId: P:Menu.Remix.MixedUI.UIelement.ContextWrapped
  id: ContextWrapped
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: ContextWrapped
  nameWithType: UIelement.ContextWrapped
  fullName: Menu.Remix.MixedUI.UIelement.ContextWrapped
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.UIelement.ContextWrapped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected static bool ContextWrapped { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected Shared ReadOnly Property ContextWrapped As Boolean
  overload: Menu.Remix.MixedUI.UIelement.ContextWrapped*
- uid: Menu.Remix.MixedUI.UIelement.OnChange
  commentId: E:Menu.Remix.MixedUI.UIelement.OnChange
  id: OnChange
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnChange
  nameWithType: UIelement.OnChange
  fullName: Menu.Remix.MixedUI.UIelement.OnChange
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnChange
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnChange As OnEventHandler
- uid: Menu.Remix.MixedUI.UIelement.OnUpdate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnUpdate
  id: OnUpdate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnUpdate
  nameWithType: UIelement.OnUpdate
  fullName: Menu.Remix.MixedUI.UIelement.OnUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnUpdate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnUpdate As OnEventHandler
- uid: Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  id: OnGrafUpdate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnGrafUpdate
  nameWithType: UIelement.OnGrafUpdate
  fullName: Menu.Remix.MixedUI.UIelement.OnGrafUpdate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnGrafUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnGrafUpdateHandler OnGrafUpdate
    return:
      type: Menu.Remix.MixedUI.OnGrafUpdateHandler
    content.vb: Public Event OnGrafUpdate As OnGrafUpdateHandler
- uid: Menu.Remix.MixedUI.UIelement.OnReset
  commentId: E:Menu.Remix.MixedUI.UIelement.OnReset
  id: OnReset
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnReset
  nameWithType: UIelement.OnReset
  fullName: Menu.Remix.MixedUI.UIelement.OnReset
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnReset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnReset
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnReset As OnEventHandler
- uid: Menu.Remix.MixedUI.UIelement.OnDeactivate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnDeactivate
  id: OnDeactivate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnDeactivate
  nameWithType: UIelement.OnDeactivate
  fullName: Menu.Remix.MixedUI.UIelement.OnDeactivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnDeactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnDeactivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnDeactivate As OnEventHandler
- uid: Menu.Remix.MixedUI.UIelement.OnReactivate
  commentId: E:Menu.Remix.MixedUI.UIelement.OnReactivate
  id: OnReactivate
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnReactivate
  nameWithType: UIelement.OnReactivate
  fullName: Menu.Remix.MixedUI.UIelement.OnReactivate
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnReactivate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnReactivate
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnReactivate As OnEventHandler
- uid: Menu.Remix.MixedUI.UIelement.OnUnload
  commentId: E:Menu.Remix.MixedUI.UIelement.OnUnload
  id: OnUnload
  parent: Menu.Remix.MixedUI.UIelement
  langs:
  - csharp
  - vb
  name: OnUnload
  nameWithType: UIelement.OnUnload
  fullName: Menu.Remix.MixedUI.UIelement.OnUnload
  type: Event
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>E:Menu.Remix.MixedUI.UIelement.OnUnload</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public event OnEventHandler OnUnload
    return:
      type: Menu.Remix.MixedUI.OnEventHandler
    content.vb: Public Event OnUnload As OnEventHandler
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Nullable{System.Single}
  commentId: T:System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float?
  nameWithType: float?
  fullName: float?
  nameWithType.vb: Single?
  fullName.vb: Single?
  name.vb: Single?
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '?'
- uid: Menu.Remix.MixedUI.OpTab
  commentId: T:Menu.Remix.MixedUI.OpTab
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OpTab.html
  name: OpTab
  nameWithType: OpTab
  fullName: Menu.Remix.MixedUI.OpTab
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Menu.Remix.UIelementWrapper
  commentId: T:Menu.Remix.UIelementWrapper
  parent: Menu.Remix
  isExternal: true
  href: Menu.Remix.UIelementWrapper.html
  name: UIelementWrapper
  nameWithType: UIelementWrapper
  fullName: Menu.Remix.UIelementWrapper
- uid: Menu.Remix
  commentId: N:Menu.Remix
  isExternal: true
  href: Menu.html
  name: Menu.Remix
  nameWithType: Menu.Remix
  fullName: Menu.Remix
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
- uid: Menu.Remix.MixedUI.UIelement.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement__ctor_UnityEngine_Vector2_UnityEngine_Vector2_
  name: UIelement
  nameWithType: UIelement.UIelement
  fullName: Menu.Remix.MixedUI.UIelement.UIelement
  nameWithType.vb: UIelement.New
  fullName.vb: Menu.Remix.MixedUI.UIelement.New
  name.vb: New
- uid: Menu.Remix.MixedUI.UIelement.Reset*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Reset
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Reset
  name: Reset
  nameWithType: UIelement.Reset
  fullName: Menu.Remix.MixedUI.UIelement.Reset
- uid: Menu.Remix.MixedUI.UIelement.Hide*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Hide
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Hide
  name: Hide
  nameWithType: UIelement.Hide
  fullName: Menu.Remix.MixedUI.UIelement.Hide
- uid: Menu.Remix.MixedUI.UIelement.Show*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Show
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Show
  name: Show
  nameWithType: UIelement.Show
  fullName: Menu.Remix.MixedUI.UIelement.Show
- uid: Menu.Remix.MixedUI.UIelement.GetPos*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.GetPos
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_GetPos
  name: GetPos
  nameWithType: UIelement.GetPos
  fullName: Menu.Remix.MixedUI.UIelement.GetPos
- uid: Menu.Remix.MixedUI.UIelement.SetPos*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.SetPos
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_SetPos_UnityEngine_Vector2_
  name: SetPos
  nameWithType: UIelement.SetPos
  fullName: Menu.Remix.MixedUI.UIelement.SetPos
- uid: Menu.Remix.MixedUI.UIelement.MoveToBack*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MoveToBack
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MoveToBack
  name: MoveToBack
  nameWithType: UIelement.MoveToBack
  fullName: Menu.Remix.MixedUI.UIelement.MoveToBack
- uid: Menu.Remix.MixedUI.UIelement.MoveToFront*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MoveToFront
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MoveToFront
  name: MoveToFront
  nameWithType: UIelement.MoveToFront
  fullName: Menu.Remix.MixedUI.UIelement.MoveToFront
- uid: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MoveInFrontOfElement_Menu_Remix_MixedUI_UIelement_
  name: MoveInFrontOfElement
  nameWithType: UIelement.MoveInFrontOfElement
  fullName: Menu.Remix.MixedUI.UIelement.MoveInFrontOfElement
- uid: Menu.Remix.MixedUI.UIelement
  commentId: T:Menu.Remix.MixedUI.UIelement
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html
  name: UIelement
  nameWithType: UIelement
  fullName: Menu.Remix.MixedUI.UIelement
- uid: Menu.Remix.MixedUI.UIelement.MoveBehindElement*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MoveBehindElement
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MoveBehindElement_Menu_Remix_MixedUI_UIelement_
  name: MoveBehindElement
  nameWithType: UIelement.MoveBehindElement
  fullName: Menu.Remix.MixedUI.UIelement.MoveBehindElement
- uid: Menu.Remix.MixedUI.UIelement.Change*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Change
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Change
  name: Change
  nameWithType: UIelement.Change
  fullName: Menu.Remix.MixedUI.UIelement.Change
- uid: Menu.Remix.MixedUI.UIelement.Update*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Update
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Update
  name: Update
  nameWithType: UIelement.Update
  fullName: Menu.Remix.MixedUI.UIelement.Update
- uid: Menu.Remix.MixedUI.UIelement.GrafUpdate*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.GrafUpdate
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: UIelement.GrafUpdate
  fullName: Menu.Remix.MixedUI.UIelement.GrafUpdate
- uid: Menu.Remix.MixedUI.UIelement.PlaySound*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.PlaySound
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_PlaySound_SoundID_
  name: PlaySound
  nameWithType: UIelement.PlaySound
  fullName: Menu.Remix.MixedUI.UIelement.PlaySound
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: Menu.Remix.MixedUI.UIelement.Unload*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Unload
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Unload
  name: Unload
  nameWithType: UIelement.Unload
  fullName: Menu.Remix.MixedUI.UIelement.Unload
- uid: Menu.Remix.MixedUI.UIelement.FrameMultiply*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.FrameMultiply
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_FrameMultiply_System_Int32_
  name: FrameMultiply
  nameWithType: UIelement.FrameMultiply
  fullName: Menu.Remix.MixedUI.UIelement.FrameMultiply
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.Remix.MixedUI.UIelement.DisplayDescription*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.DisplayDescription
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_DisplayDescription
  name: DisplayDescription
  nameWithType: UIelement.DisplayDescription
  fullName: Menu.Remix.MixedUI.UIelement.DisplayDescription
- uid: Menu.Remix.MixedUI.UIelement.Freeze*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Freeze
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Freeze
  name: Freeze
  nameWithType: UIelement.Freeze
  fullName: Menu.Remix.MixedUI.UIelement.Freeze
- uid: Menu.Remix.MixedUI.UIelement.FLabelCreate*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.FLabelCreate
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_FLabelCreate_System_String_System_Boolean_
  name: FLabelCreate
  nameWithType: UIelement.FLabelCreate
  fullName: Menu.Remix.MixedUI.UIelement.FLabelCreate
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_FLabelPlaceAtCenter_FLabel_UnityEngine_Vector2_UnityEngine_Vector2_
  name: FLabelPlaceAtCenter
  nameWithType: UIelement.FLabelPlaceAtCenter
  fullName: Menu.Remix.MixedUI.UIelement.FLabelPlaceAtCenter
- uid: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_ForceMenuMouseMode_System_Nullable_System_Boolean__
  name: ForceMenuMouseMode
  nameWithType: UIelement.ForceMenuMouseMode
  fullName: Menu.Remix.MixedUI.UIelement.ForceMenuMouseMode
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool?
  nameWithType: bool?
  fullName: bool?
  nameWithType.vb: Boolean?
  fullName.vb: Boolean?
  name.vb: Boolean?
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '?'
- uid: Menu.Remix.MixedUI.UIelement.Deactivate*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Deactivate
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Deactivate
  name: Deactivate
  nameWithType: UIelement.Deactivate
  fullName: Menu.Remix.MixedUI.UIelement.Deactivate
- uid: Menu.Remix.MixedUI.UIelement.Reactivate*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Reactivate
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Reactivate
  name: Reactivate
  nameWithType: UIelement.Reactivate
  fullName: Menu.Remix.MixedUI.UIelement.Reactivate
- uid: Menu.Remix.MixedUI.UIelement.PosX*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.PosX
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_PosX
  name: PosX
  nameWithType: UIelement.PosX
  fullName: Menu.Remix.MixedUI.UIelement.PosX
- uid: Menu.Remix.MixedUI.UIelement.PosY*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.PosY
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_PosY
  name: PosY
  nameWithType: UIelement.PosY
  fullName: Menu.Remix.MixedUI.UIelement.PosY
- uid: Menu.Remix.MixedUI.UIelement.size*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.size
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_size
  name: size
  nameWithType: UIelement.size
  fullName: Menu.Remix.MixedUI.UIelement.size
- uid: Menu.Remix.MixedUI.UIelement.rad*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.rad
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_rad
  name: rad
  nameWithType: UIelement.rad
  fullName: Menu.Remix.MixedUI.UIelement.rad
- uid: Menu.Remix.MixedUI.UIelement.Hidden*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Hidden
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Hidden
  name: Hidden
  nameWithType: UIelement.Hidden
  fullName: Menu.Remix.MixedUI.UIelement.Hidden
- uid: Menu.Remix.MixedUI.UIelement.IsInactive*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.IsInactive
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_IsInactive
  name: IsInactive
  nameWithType: UIelement.IsInactive
  fullName: Menu.Remix.MixedUI.UIelement.IsInactive
- uid: Menu.Remix.MixedUI.UIelement.pos*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.pos
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_pos
  name: pos
  nameWithType: UIelement.pos
  fullName: Menu.Remix.MixedUI.UIelement.pos
- uid: Menu.Remix.MixedUI.UIelement.Menu*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Menu
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Menu
  name: Menu
  nameWithType: UIelement.Menu
  fullName: Menu.Remix.MixedUI.UIelement.Menu
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: Menu.Remix.MixedUI.UIelement.Owner*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.Owner
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_Owner
  name: Owner
  nameWithType: UIelement.Owner
  fullName: Menu.Remix.MixedUI.UIelement.Owner
- uid: Menu.PositionedMenuObject
  commentId: T:Menu.PositionedMenuObject
  parent: Menu
  isExternal: true
  href: Menu.PositionedMenuObject.html
  name: PositionedMenuObject
  nameWithType: PositionedMenuObject
  fullName: Menu.PositionedMenuObject
- uid: Menu.Remix.MixedUI.UIelement.MouseOver*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MouseOver
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MouseOver
  name: MouseOver
  nameWithType: UIelement.MouseOver
  fullName: Menu.Remix.MixedUI.UIelement.MouseOver
- uid: Menu.Remix.MixedUI.UIelement.MousePos*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MousePos
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MousePos
  name: MousePos
  nameWithType: UIelement.MousePos
  fullName: Menu.Remix.MixedUI.UIelement.MousePos
- uid: Menu.Remix.MixedUI.UIelement.scrollBox*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.scrollBox
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_scrollBox
  name: scrollBox
  nameWithType: UIelement.scrollBox
  fullName: Menu.Remix.MixedUI.UIelement.scrollBox
- uid: Menu.Remix.MixedUI.OpScrollBox
  commentId: T:Menu.Remix.MixedUI.OpScrollBox
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OpScrollBox.html
  name: OpScrollBox
  nameWithType: OpScrollBox
  fullName: Menu.Remix.MixedUI.OpScrollBox
- uid: Menu.Remix.MixedUI.UIelement.InScrollBox*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.InScrollBox
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_InScrollBox
  name: InScrollBox
  nameWithType: UIelement.InScrollBox
  fullName: Menu.Remix.MixedUI.UIelement.InScrollBox
- uid: Menu.Remix.MixedUI.UIelement.ScreenPos*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.ScreenPos
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_ScreenPos
  name: ScreenPos
  nameWithType: UIelement.ScreenPos
  fullName: Menu.Remix.MixedUI.UIelement.ScreenPos
- uid: Menu.Remix.MixedUI.UIelement.frameMulti*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.frameMulti
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_frameMulti
  name: frameMulti
  nameWithType: UIelement.frameMulti
  fullName: Menu.Remix.MixedUI.UIelement.frameMulti
- uid: Menu.Remix.MixedUI.UIelement.MenuMouseMode*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.MenuMouseMode
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_MenuMouseMode
  name: MenuMouseMode
  nameWithType: UIelement.MenuMouseMode
  fullName: Menu.Remix.MixedUI.UIelement.MenuMouseMode
- uid: Menu.Remix.MixedUI.UIelement.CtlrInput*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.CtlrInput
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_CtlrInput
  name: CtlrInput
  nameWithType: UIelement.CtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.CtlrInput
- uid: Global.Player.InputPackage
  commentId: T:Global.Player.InputPackage
  isExternal: true
  href: Player.html
  name: Player.InputPackage
  nameWithType: Player.InputPackage
  fullName: Player.InputPackage
  spec.csharp:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
  spec.vb:
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: .
  - uid: Global.Player.InputPackage
    name: InputPackage
    isExternal: true
    href: Player.InputPackage.html
- uid: Menu.Remix.MixedUI.UIelement.LastCtlrInput*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.LastCtlrInput
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_LastCtlrInput
  name: LastCtlrInput
  nameWithType: UIelement.LastCtlrInput
  fullName: Menu.Remix.MixedUI.UIelement.LastCtlrInput
- uid: Menu.Remix.MixedUI.UIelement.ContextWrapped*
  commentId: Overload:Menu.Remix.MixedUI.UIelement.ContextWrapped
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html#Menu_Remix_MixedUI_UIelement_ContextWrapped
  name: ContextWrapped
  nameWithType: UIelement.ContextWrapped
  fullName: Menu.Remix.MixedUI.UIelement.ContextWrapped
- uid: Menu.Remix.MixedUI.OnEventHandler
  commentId: T:Menu.Remix.MixedUI.OnEventHandler
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OnEventHandler.html
  name: OnEventHandler
  nameWithType: OnEventHandler
  fullName: Menu.Remix.MixedUI.OnEventHandler
- uid: Menu.Remix.MixedUI.OnGrafUpdateHandler
  commentId: T:Menu.Remix.MixedUI.OnGrafUpdateHandler
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.OnGrafUpdateHandler.html
  name: OnGrafUpdateHandler
  nameWithType: OnGrafUpdateHandler
  fullName: Menu.Remix.MixedUI.OnGrafUpdateHandler
