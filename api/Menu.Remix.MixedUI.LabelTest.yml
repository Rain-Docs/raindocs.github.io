### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.LabelTest
  commentId: T:Menu.Remix.MixedUI.LabelTest
  id: LabelTest
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)
  - Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)
  langs:
  - csharp
  - vb
  name: LabelTest
  nameWithType: LabelTest
  fullName: Menu.Remix.MixedUI.LabelTest
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.LabelTest</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class LabelTest
    content.vb: Public Module LabelTest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)
  id: CreateFLabel(System.String,System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: CreateFLabel(string, bool)
  nameWithType: LabelTest.CreateFLabel(string, bool)
  fullName: Menu.Remix.MixedUI.LabelTest.CreateFLabel(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static FLabel CreateFLabel(string text, bool bigText = false)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.FLabel
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CreateFLabel(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CreateFLabel(text As String, bigText As Boolean = False) As FLabel
  overload: Menu.Remix.MixedUI.LabelTest.CreateFLabel*
  nameWithType.vb: LabelTest.CreateFLabel(String, Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.CreateFLabel(String, Boolean)
  name.vb: CreateFLabel(String, Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)
  id: LineHeight(System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: LineHeight(bool)
  nameWithType: LabelTest.LineHeight(bool)
  fullName: Menu.Remix.MixedUI.LabelTest.LineHeight(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float LineHeight(bool bigText)
    parameters:
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHeight(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineHeight(bigText As Boolean) As Single
  overload: Menu.Remix.MixedUI.LabelTest.LineHeight*
  nameWithType.vb: LabelTest.LineHeight(Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.LineHeight(Boolean)
  name.vb: LineHeight(Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)
  id: LineHalfHeight(System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: LineHalfHeight(bool)
  nameWithType: LabelTest.LineHalfHeight(bool)
  fullName: Menu.Remix.MixedUI.LabelTest.LineHalfHeight(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float LineHalfHeight(bool bigText)
    parameters:
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.LineHalfHeight(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LineHalfHeight(bigText As Boolean) As Single
  overload: Menu.Remix.MixedUI.LabelTest.LineHalfHeight*
  nameWithType.vb: LabelTest.LineHalfHeight(Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.LineHalfHeight(Boolean)
  name.vb: LineHalfHeight(Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)
  id: CharMean(System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: CharMean(bool)
  nameWithType: LabelTest.CharMean(bool)
  fullName: Menu.Remix.MixedUI.LabelTest.CharMean(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float CharMean(bool bigText)
    parameters:
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CharMean(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CharMean(bigText As Boolean) As Single
  overload: Menu.Remix.MixedUI.LabelTest.CharMean*
  nameWithType.vb: LabelTest.CharMean(Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.CharMean(Boolean)
  name.vb: CharMean(Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)
  id: CharLimit(System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: CharLimit(bool)
  nameWithType: LabelTest.CharLimit(bool)
  fullName: Menu.Remix.MixedUI.LabelTest.CharLimit(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int CharLimit(bool bigText)
    parameters:
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.CharLimit(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function CharLimit(bigText As Boolean) As Integer
  overload: Menu.Remix.MixedUI.LabelTest.CharLimit*
  nameWithType.vb: LabelTest.CharLimit(Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.CharLimit(Boolean)
  name.vb: CharLimit(Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)
  id: GetFont(System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: GetFont(bool)
  nameWithType: LabelTest.GetFont(bool)
  fullName: Menu.Remix.MixedUI.LabelTest.GetFont(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetFont(bool bigText)
    parameters:
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.GetFont(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetFont(bigText As Boolean) As String
  overload: Menu.Remix.MixedUI.LabelTest.GetFont*
  nameWithType.vb: LabelTest.GetFont(Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.GetFont(Boolean)
  name.vb: GetFont(Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)
  id: GetWidth(System.String,System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: GetWidth(string, bool)
  nameWithType: LabelTest.GetWidth(string, bool)
  fullName: Menu.Remix.MixedUI.LabelTest.GetWidth(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static float GetWidth(string text, bool bigText = false)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.GetWidth(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetWidth(text As String, bigText As Boolean = False) As Single
  overload: Menu.Remix.MixedUI.LabelTest.GetWidth*
  nameWithType.vb: LabelTest.GetWidth(String, Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.GetWidth(String, Boolean)
  name.vb: GetWidth(String, Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)
  id: TrimText(System.String,System.Single,System.Boolean,System.Boolean)
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: TrimText(string, float, bool, bool)
  nameWithType: LabelTest.TrimText(string, float, bool, bool)
  fullName: Menu.Remix.MixedUI.LabelTest.TrimText(string, float, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string TrimText(string text, float width, bool addDots = false, bool bigText = false)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: width
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>width</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: addDots
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>addDots</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.TrimText(System.String,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function TrimText(text As String, width As Single, addDots As Boolean = False, bigText As Boolean = False) As String
  overload: Menu.Remix.MixedUI.LabelTest.TrimText*
  nameWithType.vb: LabelTest.TrimText(String, Single, Boolean, Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.TrimText(String, Single, Boolean, Boolean)
  name.vb: TrimText(String, Single, Boolean, Boolean)
- uid: Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)
  commentId: M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)
  id: WrapText(System.String,System.Boolean,System.Single,System.Boolean)
  isExtensionMethod: true
  parent: Menu.Remix.MixedUI.LabelTest
  langs:
  - csharp
  - vb
  name: WrapText(string, bool, float, bool)
  nameWithType: LabelTest.WrapText(string, bool, float, bool)
  fullName: Menu.Remix.MixedUI.LabelTest.WrapText(string, bool, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string WrapText(this string text, bool bigText, float width, bool forceWrapping = false)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: bigText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bigText</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: width
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>width</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: forceWrapping
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forceWrapping</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.LabelTest.WrapText(System.String,System.Boolean,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function WrapText(text As String, bigText As Boolean, width As Single, forceWrapping As Boolean = False) As String
  overload: Menu.Remix.MixedUI.LabelTest.WrapText*
  nameWithType.vb: LabelTest.WrapText(String, Boolean, Single, Boolean)
  fullName.vb: Menu.Remix.MixedUI.LabelTest.WrapText(String, Boolean, Single, Boolean)
  name.vb: WrapText(String, Boolean, Single, Boolean)
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.MixedUI.LabelTest.CreateFLabel*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.CreateFLabel
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_CreateFLabel_System_String_System_Boolean_
  name: CreateFLabel
  nameWithType: LabelTest.CreateFLabel
  fullName: Menu.Remix.MixedUI.LabelTest.CreateFLabel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FLabel
  commentId: T:Global.FLabel
  isExternal: true
  href: FLabel.html
  name: FLabel
  nameWithType: FLabel
  fullName: FLabel
- uid: Menu.Remix.MixedUI.LabelTest.LineHeight*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.LineHeight
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_LineHeight_System_Boolean_
  name: LineHeight
  nameWithType: LabelTest.LineHeight
  fullName: Menu.Remix.MixedUI.LabelTest.LineHeight
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Menu.Remix.MixedUI.LabelTest.LineHalfHeight*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.LineHalfHeight
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_LineHalfHeight_System_Boolean_
  name: LineHalfHeight
  nameWithType: LabelTest.LineHalfHeight
  fullName: Menu.Remix.MixedUI.LabelTest.LineHalfHeight
- uid: Menu.Remix.MixedUI.LabelTest.CharMean*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.CharMean
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_CharMean_System_Boolean_
  name: CharMean
  nameWithType: LabelTest.CharMean
  fullName: Menu.Remix.MixedUI.LabelTest.CharMean
- uid: Menu.Remix.MixedUI.LabelTest.CharLimit*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.CharLimit
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_CharLimit_System_Boolean_
  name: CharLimit
  nameWithType: LabelTest.CharLimit
  fullName: Menu.Remix.MixedUI.LabelTest.CharLimit
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.Remix.MixedUI.LabelTest.GetFont*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.GetFont
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_GetFont_System_Boolean_
  name: GetFont
  nameWithType: LabelTest.GetFont
  fullName: Menu.Remix.MixedUI.LabelTest.GetFont
- uid: Menu.Remix.MixedUI.LabelTest.GetWidth*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.GetWidth
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_GetWidth_System_String_System_Boolean_
  name: GetWidth
  nameWithType: LabelTest.GetWidth
  fullName: Menu.Remix.MixedUI.LabelTest.GetWidth
- uid: Menu.Remix.MixedUI.LabelTest.TrimText*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.TrimText
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_TrimText_System_String_System_Single_System_Boolean_System_Boolean_
  name: TrimText
  nameWithType: LabelTest.TrimText
  fullName: Menu.Remix.MixedUI.LabelTest.TrimText
- uid: Menu.Remix.MixedUI.LabelTest.WrapText*
  commentId: Overload:Menu.Remix.MixedUI.LabelTest.WrapText
  isExternal: true
  href: Menu.Remix.MixedUI.LabelTest.html#Menu_Remix_MixedUI_LabelTest_WrapText_System_String_System_Boolean_System_Single_System_Boolean_
  name: WrapText
  nameWithType: LabelTest.WrapText
  fullName: Menu.Remix.MixedUI.LabelTest.WrapText
