### YamlMime:ManagedReference
items:
- uid: Menu.KarmaLadder
  commentId: T:Menu.KarmaLadder
  id: KarmaLadder
  parent: Menu
  children:
  - Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)
  - Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)
  - Menu.KarmaLadder.AllAnimationDone
  - Menu.KarmaLadder.BackgroundCircleSprite
  - Menu.KarmaLadder.BackgroundContainer
  - Menu.KarmaLadder.BlackFadeSprite
  - Menu.KarmaLadder.BlackRibbonSprite
  - Menu.KarmaLadder.CircleSprite
  - Menu.KarmaLadder.FadeCircleContainer
  - Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)
  - Menu.KarmaLadder.GrafUpdate(System.Single)
  - Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)
  - Menu.KarmaLadder.LocalBloomSprite
  - Menu.KarmaLadder.MainContainer
  - Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)
  - Menu.KarmaLadder.ReinforcementSprite
  - Menu.KarmaLadder.RemoveSprites
  - Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)
  - Menu.KarmaLadder.TotalSprites
  - Menu.KarmaLadder.Update
  - Menu.KarmaLadder.cappedMovement
  - Menu.KarmaLadder.circleRad
  - Menu.KarmaLadder.circleThickness
  - Menu.KarmaLadder.displayKarma
  - Menu.KarmaLadder.displayKarmaCap
  - Menu.KarmaLadder.displayMetersOnRest
  - Menu.KarmaLadder.endGameMeterAnimCounter
  - Menu.KarmaLadder.endGameMeters
  - Menu.KarmaLadder.flat
  - Menu.KarmaLadder.hud
  - Menu.KarmaLadder.karmaIncreasing
  - Menu.KarmaLadder.karmaSymbols
  - Menu.KarmaLadder.lastCircleRad
  - Menu.KarmaLadder.lastCircleThickness
  - Menu.KarmaLadder.lastFlat
  - Menu.KarmaLadder.lastLocalBloom
  - Menu.KarmaLadder.lastReinforcementClamp
  - Menu.KarmaLadder.lastReinforcementCycle
  - Menu.KarmaLadder.lastReinforcementDeath
  - Menu.KarmaLadder.lastReinforcementLines
  - Menu.KarmaLadder.lastReinforcementWhite
  - Menu.KarmaLadder.lastScroll
  - Menu.KarmaLadder.lastSelectionGlow
  - Menu.KarmaLadder.lastSelectorWhite
  - Menu.KarmaLadder.localBloom
  - Menu.KarmaLadder.maxRipple
  - Menu.KarmaLadder.minRipple
  - Menu.KarmaLadder.moveToKarma
  - Menu.KarmaLadder.movementShown
  - Menu.KarmaLadder.movementSoundLoop
  - Menu.KarmaLadder.nextMeterToAnimate
  - Menu.KarmaLadder.phase
  - Menu.KarmaLadder.playerDeath
  - Menu.KarmaLadder.reinforced
  - Menu.KarmaLadder.reinforcementClamp
  - Menu.KarmaLadder.reinforcementCycle
  - Menu.KarmaLadder.reinforcementDeath
  - Menu.KarmaLadder.reinforcementLines
  - Menu.KarmaLadder.reinforcementWhite
  - Menu.KarmaLadder.rippleMode
  - Menu.KarmaLadder.scroll
  - Menu.KarmaLadder.scrollVel
  - Menu.KarmaLadder.selectionGlow
  - Menu.KarmaLadder.selectorWhite
  - Menu.KarmaLadder.showEndGameMetersCounter
  - Menu.KarmaLadder.sprites
  - Menu.KarmaLadder.startedAnimating
  - Menu.KarmaLadder.ticksInPhase
  - Menu.KarmaLadder.vengeanceMode
  langs:
  - csharp
  - vb
  name: KarmaLadder
  nameWithType: KarmaLadder
  fullName: Menu.KarmaLadder
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.KarmaLadder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class KarmaLadder : PositionedMenuObject'
    content.vb: Public Class KarmaLadder Inherits PositionedMenuObject
  inheritance:
  - System.Object
  - Menu.MenuObject
  - Menu.PositionedMenuObject
  inheritedMembers:
  - Menu.PositionedMenuObject.pos
  - Menu.PositionedMenuObject.lastPos
  - Menu.PositionedMenuObject.DrawPos(System.Single)
  - Menu.PositionedMenuObject.DrawX(System.Single)
  - Menu.PositionedMenuObject.DrawY(System.Single)
  - Menu.PositionedMenuObject.ScreenPos
  - Menu.PositionedMenuObject.ScreenLastPos
  - Menu.MenuObject.menu
  - Menu.MenuObject.subObjects
  - Menu.MenuObject.owner
  - Menu.MenuObject.nextSelectable
  - Menu.MenuObject.toggled
  - Menu.MenuObject.inactive
  - Menu.MenuObject.myContainer
  - Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  - Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  - Menu.MenuObject.Container
  - Menu.MenuObject.Selected
  - Menu.MenuObject.page
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.KarmaLadder.hud
  commentId: F:Menu.KarmaLadder.hud
  id: hud
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: hud
  nameWithType: KarmaLadder.hud
  fullName: Menu.KarmaLadder.hud
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.hud</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUD hud
    return:
      type: HUD.HUD
    content.vb: Public hud As HUD
- uid: Menu.KarmaLadder.scroll
  commentId: F:Menu.KarmaLadder.scroll
  id: scroll
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: scroll
  nameWithType: KarmaLadder.scroll
  fullName: Menu.KarmaLadder.scroll
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.scroll</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scroll
    return:
      type: System.Single
    content.vb: Public scroll As Single
- uid: Menu.KarmaLadder.lastScroll
  commentId: F:Menu.KarmaLadder.lastScroll
  id: lastScroll
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastScroll
  nameWithType: KarmaLadder.lastScroll
  fullName: Menu.KarmaLadder.lastScroll
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastScroll</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastScroll
    return:
      type: System.Single
    content.vb: Public lastScroll As Single
- uid: Menu.KarmaLadder.scrollVel
  commentId: F:Menu.KarmaLadder.scrollVel
  id: scrollVel
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: scrollVel
  nameWithType: KarmaLadder.scrollVel
  fullName: Menu.KarmaLadder.scrollVel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.scrollVel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float scrollVel
    return:
      type: System.Single
    content.vb: Public scrollVel As Single
- uid: Menu.KarmaLadder.movementShown
  commentId: F:Menu.KarmaLadder.movementShown
  id: movementShown
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: movementShown
  nameWithType: KarmaLadder.movementShown
  fullName: Menu.KarmaLadder.movementShown
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.movementShown</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool movementShown
    return:
      type: System.Boolean
    content.vb: Public movementShown As Boolean
- uid: Menu.KarmaLadder.reinforced
  commentId: F:Menu.KarmaLadder.reinforced
  id: reinforced
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforced
  nameWithType: KarmaLadder.reinforced
  fullName: Menu.KarmaLadder.reinforced
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforced</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool reinforced
    return:
      type: System.Boolean
    content.vb: Public reinforced As Boolean
- uid: Menu.KarmaLadder.sprites
  commentId: F:Menu.KarmaLadder.sprites
  id: sprites
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: sprites
  nameWithType: KarmaLadder.sprites
  fullName: Menu.KarmaLadder.sprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.sprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FSprite[] sprites
    return:
      type: Global.FSprite[]
    content.vb: Public sprites As FSprite()
- uid: Menu.KarmaLadder.karmaSymbols
  commentId: F:Menu.KarmaLadder.karmaSymbols
  id: karmaSymbols
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: karmaSymbols
  nameWithType: KarmaLadder.karmaSymbols
  fullName: Menu.KarmaLadder.karmaSymbols
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.karmaSymbols</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<KarmaLadder.KarmaSymbol> karmaSymbols
    return:
      type: System.Collections.Generic.List{Menu.KarmaLadder.KarmaSymbol}
    content.vb: Public karmaSymbols As List(Of KarmaLadder.KarmaSymbol)
- uid: Menu.KarmaLadder.displayKarma
  commentId: F:Menu.KarmaLadder.displayKarma
  id: displayKarma
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: displayKarma
  nameWithType: KarmaLadder.displayKarma
  fullName: Menu.KarmaLadder.displayKarma
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.displayKarma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 displayKarma
    return:
      type: RWCustom.IntVector2
    content.vb: Public displayKarma As IntVector2
- uid: Menu.KarmaLadder.moveToKarma
  commentId: F:Menu.KarmaLadder.moveToKarma
  id: moveToKarma
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: moveToKarma
  nameWithType: KarmaLadder.moveToKarma
  fullName: Menu.KarmaLadder.moveToKarma
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.moveToKarma</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int moveToKarma
    return:
      type: System.Int32
    content.vb: Public moveToKarma As Integer
- uid: Menu.KarmaLadder.cappedMovement
  commentId: F:Menu.KarmaLadder.cappedMovement
  id: cappedMovement
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: cappedMovement
  nameWithType: KarmaLadder.cappedMovement
  fullName: Menu.KarmaLadder.cappedMovement
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.cappedMovement</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool cappedMovement
    return:
      type: System.Boolean
    content.vb: Public cappedMovement As Boolean
- uid: Menu.KarmaLadder.flat
  commentId: F:Menu.KarmaLadder.flat
  id: flat
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: flat
  nameWithType: KarmaLadder.flat
  fullName: Menu.KarmaLadder.flat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.flat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flat
    return:
      type: System.Single
    content.vb: Public flat As Single
- uid: Menu.KarmaLadder.lastFlat
  commentId: F:Menu.KarmaLadder.lastFlat
  id: lastFlat
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastFlat
  nameWithType: KarmaLadder.lastFlat
  fullName: Menu.KarmaLadder.lastFlat
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastFlat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFlat
    return:
      type: System.Single
    content.vb: Public lastFlat As Single
- uid: Menu.KarmaLadder.selectionGlow
  commentId: F:Menu.KarmaLadder.selectionGlow
  id: selectionGlow
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: selectionGlow
  nameWithType: KarmaLadder.selectionGlow
  fullName: Menu.KarmaLadder.selectionGlow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.selectionGlow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float selectionGlow
    return:
      type: System.Single
    content.vb: Public selectionGlow As Single
- uid: Menu.KarmaLadder.lastSelectionGlow
  commentId: F:Menu.KarmaLadder.lastSelectionGlow
  id: lastSelectionGlow
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastSelectionGlow
  nameWithType: KarmaLadder.lastSelectionGlow
  fullName: Menu.KarmaLadder.lastSelectionGlow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastSelectionGlow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastSelectionGlow
    return:
      type: System.Single
    content.vb: Public lastSelectionGlow As Single
- uid: Menu.KarmaLadder.circleRad
  commentId: F:Menu.KarmaLadder.circleRad
  id: circleRad
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: circleRad
  nameWithType: KarmaLadder.circleRad
  fullName: Menu.KarmaLadder.circleRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.circleRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float circleRad
    return:
      type: System.Single
    content.vb: Public circleRad As Single
- uid: Menu.KarmaLadder.lastCircleRad
  commentId: F:Menu.KarmaLadder.lastCircleRad
  id: lastCircleRad
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastCircleRad
  nameWithType: KarmaLadder.lastCircleRad
  fullName: Menu.KarmaLadder.lastCircleRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastCircleRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastCircleRad
    return:
      type: System.Single
    content.vb: Public lastCircleRad As Single
- uid: Menu.KarmaLadder.circleThickness
  commentId: F:Menu.KarmaLadder.circleThickness
  id: circleThickness
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: circleThickness
  nameWithType: KarmaLadder.circleThickness
  fullName: Menu.KarmaLadder.circleThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.circleThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float circleThickness
    return:
      type: System.Single
    content.vb: Public circleThickness As Single
- uid: Menu.KarmaLadder.lastCircleThickness
  commentId: F:Menu.KarmaLadder.lastCircleThickness
  id: lastCircleThickness
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastCircleThickness
  nameWithType: KarmaLadder.lastCircleThickness
  fullName: Menu.KarmaLadder.lastCircleThickness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastCircleThickness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastCircleThickness
    return:
      type: System.Single
    content.vb: Public lastCircleThickness As Single
- uid: Menu.KarmaLadder.selectorWhite
  commentId: F:Menu.KarmaLadder.selectorWhite
  id: selectorWhite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: selectorWhite
  nameWithType: KarmaLadder.selectorWhite
  fullName: Menu.KarmaLadder.selectorWhite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.selectorWhite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float selectorWhite
    return:
      type: System.Single
    content.vb: Public selectorWhite As Single
- uid: Menu.KarmaLadder.lastSelectorWhite
  commentId: F:Menu.KarmaLadder.lastSelectorWhite
  id: lastSelectorWhite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastSelectorWhite
  nameWithType: KarmaLadder.lastSelectorWhite
  fullName: Menu.KarmaLadder.lastSelectorWhite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastSelectorWhite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastSelectorWhite
    return:
      type: System.Single
    content.vb: Public lastSelectorWhite As Single
- uid: Menu.KarmaLadder.reinforcementWhite
  commentId: F:Menu.KarmaLadder.reinforcementWhite
  id: reinforcementWhite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforcementWhite
  nameWithType: KarmaLadder.reinforcementWhite
  fullName: Menu.KarmaLadder.reinforcementWhite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforcementWhite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementWhite
    return:
      type: System.Single
    content.vb: Public reinforcementWhite As Single
- uid: Menu.KarmaLadder.lastReinforcementWhite
  commentId: F:Menu.KarmaLadder.lastReinforcementWhite
  id: lastReinforcementWhite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastReinforcementWhite
  nameWithType: KarmaLadder.lastReinforcementWhite
  fullName: Menu.KarmaLadder.lastReinforcementWhite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastReinforcementWhite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementWhite
    return:
      type: System.Single
    content.vb: Public lastReinforcementWhite As Single
- uid: Menu.KarmaLadder.reinforcementCycle
  commentId: F:Menu.KarmaLadder.reinforcementCycle
  id: reinforcementCycle
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforcementCycle
  nameWithType: KarmaLadder.reinforcementCycle
  fullName: Menu.KarmaLadder.reinforcementCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforcementCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementCycle
    return:
      type: System.Single
    content.vb: Public reinforcementCycle As Single
- uid: Menu.KarmaLadder.lastReinforcementCycle
  commentId: F:Menu.KarmaLadder.lastReinforcementCycle
  id: lastReinforcementCycle
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastReinforcementCycle
  nameWithType: KarmaLadder.lastReinforcementCycle
  fullName: Menu.KarmaLadder.lastReinforcementCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastReinforcementCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementCycle
    return:
      type: System.Single
    content.vb: Public lastReinforcementCycle As Single
- uid: Menu.KarmaLadder.reinforcementClamp
  commentId: F:Menu.KarmaLadder.reinforcementClamp
  id: reinforcementClamp
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforcementClamp
  nameWithType: KarmaLadder.reinforcementClamp
  fullName: Menu.KarmaLadder.reinforcementClamp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforcementClamp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementClamp
    return:
      type: System.Single
    content.vb: Public reinforcementClamp As Single
- uid: Menu.KarmaLadder.lastReinforcementClamp
  commentId: F:Menu.KarmaLadder.lastReinforcementClamp
  id: lastReinforcementClamp
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastReinforcementClamp
  nameWithType: KarmaLadder.lastReinforcementClamp
  fullName: Menu.KarmaLadder.lastReinforcementClamp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastReinforcementClamp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementClamp
    return:
      type: System.Single
    content.vb: Public lastReinforcementClamp As Single
- uid: Menu.KarmaLadder.reinforcementDeath
  commentId: F:Menu.KarmaLadder.reinforcementDeath
  id: reinforcementDeath
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforcementDeath
  nameWithType: KarmaLadder.reinforcementDeath
  fullName: Menu.KarmaLadder.reinforcementDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforcementDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementDeath
    return:
      type: System.Single
    content.vb: Public reinforcementDeath As Single
- uid: Menu.KarmaLadder.lastReinforcementDeath
  commentId: F:Menu.KarmaLadder.lastReinforcementDeath
  id: lastReinforcementDeath
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastReinforcementDeath
  nameWithType: KarmaLadder.lastReinforcementDeath
  fullName: Menu.KarmaLadder.lastReinforcementDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastReinforcementDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementDeath
    return:
      type: System.Single
    content.vb: Public lastReinforcementDeath As Single
- uid: Menu.KarmaLadder.reinforcementLines
  commentId: F:Menu.KarmaLadder.reinforcementLines
  id: reinforcementLines
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: reinforcementLines
  nameWithType: KarmaLadder.reinforcementLines
  fullName: Menu.KarmaLadder.reinforcementLines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.reinforcementLines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float reinforcementLines
    return:
      type: System.Single
    content.vb: Public reinforcementLines As Single
- uid: Menu.KarmaLadder.lastReinforcementLines
  commentId: F:Menu.KarmaLadder.lastReinforcementLines
  id: lastReinforcementLines
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastReinforcementLines
  nameWithType: KarmaLadder.lastReinforcementLines
  fullName: Menu.KarmaLadder.lastReinforcementLines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastReinforcementLines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastReinforcementLines
    return:
      type: System.Single
    content.vb: Public lastReinforcementLines As Single
- uid: Menu.KarmaLadder.localBloom
  commentId: F:Menu.KarmaLadder.localBloom
  id: localBloom
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: localBloom
  nameWithType: KarmaLadder.localBloom
  fullName: Menu.KarmaLadder.localBloom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.localBloom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float localBloom
    return:
      type: System.Single
    content.vb: Public localBloom As Single
- uid: Menu.KarmaLadder.lastLocalBloom
  commentId: F:Menu.KarmaLadder.lastLocalBloom
  id: lastLocalBloom
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: lastLocalBloom
  nameWithType: KarmaLadder.lastLocalBloom
  fullName: Menu.KarmaLadder.lastLocalBloom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.lastLocalBloom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastLocalBloom
    return:
      type: System.Single
    content.vb: Public lastLocalBloom As Single
- uid: Menu.KarmaLadder.phase
  commentId: F:Menu.KarmaLadder.phase
  id: phase
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: phase
  nameWithType: KarmaLadder.phase
  fullName: Menu.KarmaLadder.phase
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.phase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KarmaLadder.Phase phase
    return:
      type: Menu.KarmaLadder.Phase
    content.vb: Public phase As KarmaLadder.Phase
- uid: Menu.KarmaLadder.ticksInPhase
  commentId: F:Menu.KarmaLadder.ticksInPhase
  id: ticksInPhase
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: ticksInPhase
  nameWithType: KarmaLadder.ticksInPhase
  fullName: Menu.KarmaLadder.ticksInPhase
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.ticksInPhase</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ticksInPhase
    return:
      type: System.Int32
    content.vb: Public ticksInPhase As Integer
- uid: Menu.KarmaLadder.karmaIncreasing
  commentId: F:Menu.KarmaLadder.karmaIncreasing
  id: karmaIncreasing
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: karmaIncreasing
  nameWithType: KarmaLadder.karmaIncreasing
  fullName: Menu.KarmaLadder.karmaIncreasing
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.karmaIncreasing</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool karmaIncreasing
    return:
      type: System.Boolean
    content.vb: Public karmaIncreasing As Boolean
- uid: Menu.KarmaLadder.movementSoundLoop
  commentId: F:Menu.KarmaLadder.movementSoundLoop
  id: movementSoundLoop
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: movementSoundLoop
  nameWithType: KarmaLadder.movementSoundLoop
  fullName: Menu.KarmaLadder.movementSoundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.movementSoundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MenuMicrophone.MenuSoundLoop movementSoundLoop
    return:
      type: Global.MenuMicrophone.MenuSoundLoop
    content.vb: Public movementSoundLoop As MenuMicrophone.MenuSoundLoop
- uid: Menu.KarmaLadder.endGameMeters
  commentId: F:Menu.KarmaLadder.endGameMeters
  id: endGameMeters
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: endGameMeters
  nameWithType: KarmaLadder.endGameMeters
  fullName: Menu.KarmaLadder.endGameMeters
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.endGameMeters</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<EndgameMeter> endGameMeters
    return:
      type: System.Collections.Generic.List{Menu.EndgameMeter}
    content.vb: Public endGameMeters As List(Of EndgameMeter)
- uid: Menu.KarmaLadder.startedAnimating
  commentId: F:Menu.KarmaLadder.startedAnimating
  id: startedAnimating
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: startedAnimating
  nameWithType: KarmaLadder.startedAnimating
  fullName: Menu.KarmaLadder.startedAnimating
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.startedAnimating</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool startedAnimating
    return:
      type: System.Boolean
    content.vb: Public startedAnimating As Boolean
- uid: Menu.KarmaLadder.displayMetersOnRest
  commentId: F:Menu.KarmaLadder.displayMetersOnRest
  id: displayMetersOnRest
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: displayMetersOnRest
  nameWithType: KarmaLadder.displayMetersOnRest
  fullName: Menu.KarmaLadder.displayMetersOnRest
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.displayMetersOnRest</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool displayMetersOnRest
    return:
      type: System.Boolean
    content.vb: Public displayMetersOnRest As Boolean
- uid: Menu.KarmaLadder.vengeanceMode
  commentId: F:Menu.KarmaLadder.vengeanceMode
  id: vengeanceMode
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: vengeanceMode
  nameWithType: KarmaLadder.vengeanceMode
  fullName: Menu.KarmaLadder.vengeanceMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.vengeanceMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool vengeanceMode
    return:
      type: System.Boolean
    content.vb: Public vengeanceMode As Boolean
- uid: Menu.KarmaLadder.rippleMode
  commentId: F:Menu.KarmaLadder.rippleMode
  id: rippleMode
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: rippleMode
  nameWithType: KarmaLadder.rippleMode
  fullName: Menu.KarmaLadder.rippleMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.rippleMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rippleMode
    return:
      type: System.Boolean
    content.vb: Public rippleMode As Boolean
- uid: Menu.KarmaLadder.playerDeath
  commentId: F:Menu.KarmaLadder.playerDeath
  id: playerDeath
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: playerDeath
  nameWithType: KarmaLadder.playerDeath
  fullName: Menu.KarmaLadder.playerDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.playerDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool playerDeath
    return:
      type: System.Boolean
    content.vb: Public playerDeath As Boolean
- uid: Menu.KarmaLadder.minRipple
  commentId: F:Menu.KarmaLadder.minRipple
  id: minRipple
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: minRipple
  nameWithType: KarmaLadder.minRipple
  fullName: Menu.KarmaLadder.minRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.minRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int minRipple
    return:
      type: System.Int32
    content.vb: Public minRipple As Integer
- uid: Menu.KarmaLadder.maxRipple
  commentId: F:Menu.KarmaLadder.maxRipple
  id: maxRipple
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: maxRipple
  nameWithType: KarmaLadder.maxRipple
  fullName: Menu.KarmaLadder.maxRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.maxRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxRipple
    return:
      type: System.Int32
    content.vb: Public maxRipple As Integer
- uid: Menu.KarmaLadder.endGameMeterAnimCounter
  commentId: F:Menu.KarmaLadder.endGameMeterAnimCounter
  id: endGameMeterAnimCounter
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: endGameMeterAnimCounter
  nameWithType: KarmaLadder.endGameMeterAnimCounter
  fullName: Menu.KarmaLadder.endGameMeterAnimCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.endGameMeterAnimCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int endGameMeterAnimCounter
    return:
      type: System.Int32
    content.vb: Public endGameMeterAnimCounter As Integer
- uid: Menu.KarmaLadder.nextMeterToAnimate
  commentId: F:Menu.KarmaLadder.nextMeterToAnimate
  id: nextMeterToAnimate
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: nextMeterToAnimate
  nameWithType: KarmaLadder.nextMeterToAnimate
  fullName: Menu.KarmaLadder.nextMeterToAnimate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.nextMeterToAnimate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int nextMeterToAnimate
    return:
      type: System.Int32
    content.vb: Public nextMeterToAnimate As Integer
- uid: Menu.KarmaLadder.showEndGameMetersCounter
  commentId: F:Menu.KarmaLadder.showEndGameMetersCounter
  id: showEndGameMetersCounter
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: showEndGameMetersCounter
  nameWithType: KarmaLadder.showEndGameMetersCounter
  fullName: Menu.KarmaLadder.showEndGameMetersCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.KarmaLadder.showEndGameMetersCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int showEndGameMetersCounter
    return:
      type: System.Int32
    content.vb: Public showEndGameMetersCounter As Integer
- uid: Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)
  commentId: M:Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)
  id: SymbolGradientSprite(System.Int32,System.Int32)
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: SymbolGradientSprite(int, int)
  nameWithType: KarmaLadder.SymbolGradientSprite(int, int)
  fullName: Menu.KarmaLadder.SymbolGradientSprite(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SymbolGradientSprite(int side, int part)
    parameters:
    - id: side
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>side</parameter>
            <parameter>M:Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: part
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>part</parameter>
            <parameter>M:Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.KarmaLadder.SymbolGradientSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SymbolGradientSprite(side As Integer, part As Integer) As Integer
  overload: Menu.KarmaLadder.SymbolGradientSprite*
  nameWithType.vb: KarmaLadder.SymbolGradientSprite(Integer, Integer)
  fullName.vb: Menu.KarmaLadder.SymbolGradientSprite(Integer, Integer)
  name.vb: SymbolGradientSprite(Integer, Integer)
- uid: Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)
  commentId: M:Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)
  id: LineSprite(System.Int32,System.Int32)
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: LineSprite(int, int)
  nameWithType: KarmaLadder.LineSprite(int, int)
  fullName: Menu.KarmaLadder.LineSprite(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LineSprite(int line, int part)
    parameters:
    - id: line
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>line</parameter>
            <parameter>M:Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: part
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>part</parameter>
            <parameter>M:Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.KarmaLadder.LineSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function LineSprite(line As Integer, part As Integer) As Integer
  overload: Menu.KarmaLadder.LineSprite*
  nameWithType.vb: KarmaLadder.LineSprite(Integer, Integer)
  fullName.vb: Menu.KarmaLadder.LineSprite(Integer, Integer)
  name.vb: LineSprite(Integer, Integer)
- uid: Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)
  commentId: M:Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)
  id: ReinforcementLineSprite(System.Int32)
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: ReinforcementLineSprite(int)
  nameWithType: KarmaLadder.ReinforcementLineSprite(int)
  fullName: Menu.KarmaLadder.ReinforcementLineSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ReinforcementLineSprite(int i)
    parameters:
    - id: i
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>i</parameter>
            <parameter>M:Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.KarmaLadder.ReinforcementLineSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ReinforcementLineSprite(i As Integer) As Integer
  overload: Menu.KarmaLadder.ReinforcementLineSprite*
  nameWithType.vb: KarmaLadder.ReinforcementLineSprite(Integer)
  fullName.vb: Menu.KarmaLadder.ReinforcementLineSprite(Integer)
  name.vb: ReinforcementLineSprite(Integer)
- uid: Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)
  commentId: M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)
  id: '#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)'
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: KarmaLadder(Menu, MenuObject, Vector2, HUD, IntVector2, float, float, bool, bool)
  nameWithType: KarmaLadder.KarmaLadder(Menu, MenuObject, Vector2, HUD, IntVector2, float, float, bool, bool)
  fullName: Menu.KarmaLadder.KarmaLadder(Menu.Menu, Menu.MenuObject, UnityEngine.Vector2, HUD.HUD, RWCustom.IntVector2, float, float, bool, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.KarmaLadder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KarmaLadder(Menu menu, MenuObject owner, Vector2 pos, HUD hud, IntVector2 displayKarma, float minRipple, float maxRipple, bool reinforced, bool playerDeath)
    parameters:
    - id: menu
      type: Menu.Menu
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>menu</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: owner
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hud
      type: HUD.HUD
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hud</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: displayKarma
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayKarma</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: minRipple
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minRipple</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: maxRipple
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxRipple</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: reinforced
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reinforced</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: playerDeath
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerDeath</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Single,System.Single,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(menu As Menu, owner As MenuObject, pos As Vector2, hud As HUD, displayKarma As IntVector2, minRipple As Single, maxRipple As Single, reinforced As Boolean, playerDeath As Boolean)
  overload: Menu.KarmaLadder.#ctor*
  nameWithType.vb: KarmaLadder.New(Menu, MenuObject, Vector2, HUD, IntVector2, Single, Single, Boolean, Boolean)
  fullName.vb: Menu.KarmaLadder.New(Menu.Menu, Menu.MenuObject, UnityEngine.Vector2, HUD.HUD, RWCustom.IntVector2, Single, Single, Boolean, Boolean)
  name.vb: New(Menu, MenuObject, Vector2, HUD, IntVector2, Single, Single, Boolean, Boolean)
- uid: Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)
  commentId: M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)
  id: '#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)'
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: KarmaLadder(Menu, MenuObject, Vector2, HUD, IntVector2, bool)
  nameWithType: KarmaLadder.KarmaLadder(Menu, MenuObject, Vector2, HUD, IntVector2, bool)
  fullName: Menu.KarmaLadder.KarmaLadder(Menu.Menu, Menu.MenuObject, UnityEngine.Vector2, HUD.HUD, RWCustom.IntVector2, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.KarmaLadder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public KarmaLadder(Menu menu, MenuObject owner, Vector2 pos, HUD hud, IntVector2 displayKarma, bool reinforced)
    parameters:
    - id: menu
      type: Menu.Menu
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>menu</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: owner
      type: Menu.MenuObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: hud
      type: HUD.HUD
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hud</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: displayKarma
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayKarma</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    - id: reinforced
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reinforced</parameter>
            <parameter>M:Menu.KarmaLadder.#ctor(Menu.Menu,Menu.MenuObject,UnityEngine.Vector2,HUD.HUD,RWCustom.IntVector2,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(menu As Menu, owner As MenuObject, pos As Vector2, hud As HUD, displayKarma As IntVector2, reinforced As Boolean)
  overload: Menu.KarmaLadder.#ctor*
  nameWithType.vb: KarmaLadder.New(Menu, MenuObject, Vector2, HUD, IntVector2, Boolean)
  fullName.vb: Menu.KarmaLadder.New(Menu.Menu, Menu.MenuObject, UnityEngine.Vector2, HUD.HUD, RWCustom.IntVector2, Boolean)
  name.vb: New(Menu, MenuObject, Vector2, HUD, IntVector2, Boolean)
- uid: Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)
  commentId: M:Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)
  id: GoToKarma(System.Int32,System.Boolean)
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: GoToKarma(int, bool)
  nameWithType: KarmaLadder.GoToKarma(int, bool)
  fullName: Menu.KarmaLadder.GoToKarma(int, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void GoToKarma(int newGoalKarma, bool displayMetersOnRest)
    parameters:
    - id: newGoalKarma
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newGoalKarma</parameter>
            <parameter>M:Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    - id: displayMetersOnRest
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>displayMetersOnRest</parameter>
            <parameter>M:Menu.KarmaLadder.GoToKarma(System.Int32,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub GoToKarma(newGoalKarma As Integer, displayMetersOnRest As Boolean)
  overload: Menu.KarmaLadder.GoToKarma*
  nameWithType.vb: KarmaLadder.GoToKarma(Integer, Boolean)
  fullName.vb: Menu.KarmaLadder.GoToKarma(Integer, Boolean)
  name.vb: GoToKarma(Integer, Boolean)
- uid: Menu.KarmaLadder.Update
  commentId: M:Menu.KarmaLadder.Update
  id: Update
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: KarmaLadder.Update()
  fullName: Menu.KarmaLadder.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Menu.PositionedMenuObject.Update
  overload: Menu.KarmaLadder.Update*
- uid: Menu.KarmaLadder.GrafUpdate(System.Single)
  commentId: M:Menu.KarmaLadder.GrafUpdate(System.Single)
  id: GrafUpdate(System.Single)
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: GrafUpdate(float)
  nameWithType: KarmaLadder.GrafUpdate(float)
  fullName: Menu.KarmaLadder.GrafUpdate(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.GrafUpdate(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void GrafUpdate(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Menu.KarmaLadder.GrafUpdate(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub GrafUpdate(timeStacker As Single)
  overridden: Menu.MenuObject.GrafUpdate(System.Single)
  overload: Menu.KarmaLadder.GrafUpdate*
  nameWithType.vb: KarmaLadder.GrafUpdate(Single)
  fullName.vb: Menu.KarmaLadder.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
- uid: Menu.KarmaLadder.RemoveSprites
  commentId: M:Menu.KarmaLadder.RemoveSprites
  id: RemoveSprites
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: RemoveSprites()
  nameWithType: KarmaLadder.RemoveSprites()
  fullName: Menu.KarmaLadder.RemoveSprites()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.KarmaLadder.RemoveSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void RemoveSprites()
    content.vb: Public Overrides Sub RemoveSprites()
  overridden: Menu.MenuObject.RemoveSprites
  overload: Menu.KarmaLadder.RemoveSprites*
- uid: Menu.KarmaLadder.CircleSprite
  commentId: P:Menu.KarmaLadder.CircleSprite
  id: CircleSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: CircleSprite
  nameWithType: KarmaLadder.CircleSprite
  fullName: Menu.KarmaLadder.CircleSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.CircleSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CircleSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CircleSprite As Integer
  overload: Menu.KarmaLadder.CircleSprite*
- uid: Menu.KarmaLadder.BlackRibbonSprite
  commentId: P:Menu.KarmaLadder.BlackRibbonSprite
  id: BlackRibbonSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: BlackRibbonSprite
  nameWithType: KarmaLadder.BlackRibbonSprite
  fullName: Menu.KarmaLadder.BlackRibbonSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.BlackRibbonSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BlackRibbonSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BlackRibbonSprite As Integer
  overload: Menu.KarmaLadder.BlackRibbonSprite*
- uid: Menu.KarmaLadder.BackgroundCircleSprite
  commentId: P:Menu.KarmaLadder.BackgroundCircleSprite
  id: BackgroundCircleSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: BackgroundCircleSprite
  nameWithType: KarmaLadder.BackgroundCircleSprite
  fullName: Menu.KarmaLadder.BackgroundCircleSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.BackgroundCircleSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BackgroundCircleSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BackgroundCircleSprite As Integer
  overload: Menu.KarmaLadder.BackgroundCircleSprite*
- uid: Menu.KarmaLadder.ReinforcementSprite
  commentId: P:Menu.KarmaLadder.ReinforcementSprite
  id: ReinforcementSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: ReinforcementSprite
  nameWithType: KarmaLadder.ReinforcementSprite
  fullName: Menu.KarmaLadder.ReinforcementSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.ReinforcementSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ReinforcementSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ReinforcementSprite As Integer
  overload: Menu.KarmaLadder.ReinforcementSprite*
- uid: Menu.KarmaLadder.BlackFadeSprite
  commentId: P:Menu.KarmaLadder.BlackFadeSprite
  id: BlackFadeSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: BlackFadeSprite
  nameWithType: KarmaLadder.BlackFadeSprite
  fullName: Menu.KarmaLadder.BlackFadeSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.BlackFadeSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BlackFadeSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BlackFadeSprite As Integer
  overload: Menu.KarmaLadder.BlackFadeSprite*
- uid: Menu.KarmaLadder.LocalBloomSprite
  commentId: P:Menu.KarmaLadder.LocalBloomSprite
  id: LocalBloomSprite
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: LocalBloomSprite
  nameWithType: KarmaLadder.LocalBloomSprite
  fullName: Menu.KarmaLadder.LocalBloomSprite
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.LocalBloomSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int LocalBloomSprite { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LocalBloomSprite As Integer
  overload: Menu.KarmaLadder.LocalBloomSprite*
- uid: Menu.KarmaLadder.TotalSprites
  commentId: P:Menu.KarmaLadder.TotalSprites
  id: TotalSprites
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: TotalSprites
  nameWithType: KarmaLadder.TotalSprites
  fullName: Menu.KarmaLadder.TotalSprites
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.TotalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TotalSprites { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TotalSprites As Integer
  overload: Menu.KarmaLadder.TotalSprites*
- uid: Menu.KarmaLadder.BackgroundContainer
  commentId: P:Menu.KarmaLadder.BackgroundContainer
  id: BackgroundContainer
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: BackgroundContainer
  nameWithType: KarmaLadder.BackgroundContainer
  fullName: Menu.KarmaLadder.BackgroundContainer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.BackgroundContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int BackgroundContainer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BackgroundContainer As Integer
  overload: Menu.KarmaLadder.BackgroundContainer*
- uid: Menu.KarmaLadder.MainContainer
  commentId: P:Menu.KarmaLadder.MainContainer
  id: MainContainer
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: MainContainer
  nameWithType: KarmaLadder.MainContainer
  fullName: Menu.KarmaLadder.MainContainer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.MainContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int MainContainer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property MainContainer As Integer
  overload: Menu.KarmaLadder.MainContainer*
- uid: Menu.KarmaLadder.FadeCircleContainer
  commentId: P:Menu.KarmaLadder.FadeCircleContainer
  id: FadeCircleContainer
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: FadeCircleContainer
  nameWithType: KarmaLadder.FadeCircleContainer
  fullName: Menu.KarmaLadder.FadeCircleContainer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.FadeCircleContainer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int FadeCircleContainer { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property FadeCircleContainer As Integer
  overload: Menu.KarmaLadder.FadeCircleContainer*
- uid: Menu.KarmaLadder.AllAnimationDone
  commentId: P:Menu.KarmaLadder.AllAnimationDone
  id: AllAnimationDone
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: AllAnimationDone
  nameWithType: KarmaLadder.AllAnimationDone
  fullName: Menu.KarmaLadder.AllAnimationDone
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.AllAnimationDone</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AllAnimationDone { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AllAnimationDone As Boolean
  overload: Menu.KarmaLadder.AllAnimationDone*
- uid: Menu.KarmaLadder.displayKarmaCap
  commentId: P:Menu.KarmaLadder.displayKarmaCap
  id: displayKarmaCap
  parent: Menu.KarmaLadder
  langs:
  - csharp
  - vb
  name: displayKarmaCap
  nameWithType: KarmaLadder.displayKarmaCap
  fullName: Menu.KarmaLadder.displayKarmaCap
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.KarmaLadder.displayKarmaCap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int displayKarmaCap { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property displayKarmaCap As Integer
  overload: Menu.KarmaLadder.displayKarmaCap*
references:
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Menu.MenuObject
  commentId: T:Menu.MenuObject
  parent: Menu
  isExternal: true
  href: Menu.MenuObject.html
  name: MenuObject
  nameWithType: MenuObject
  fullName: Menu.MenuObject
- uid: Menu.PositionedMenuObject
  commentId: T:Menu.PositionedMenuObject
  parent: Menu
  isExternal: true
  href: Menu.PositionedMenuObject.html
  name: PositionedMenuObject
  nameWithType: PositionedMenuObject
  fullName: Menu.PositionedMenuObject
- uid: Menu.PositionedMenuObject.pos
  commentId: F:Menu.PositionedMenuObject.pos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_pos
  name: pos
  nameWithType: PositionedMenuObject.pos
  fullName: Menu.PositionedMenuObject.pos
- uid: Menu.PositionedMenuObject.lastPos
  commentId: F:Menu.PositionedMenuObject.lastPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_lastPos
  name: lastPos
  nameWithType: PositionedMenuObject.lastPos
  fullName: Menu.PositionedMenuObject.lastPos
- uid: Menu.PositionedMenuObject.DrawPos(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawPos(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  name: DrawPos(float)
  nameWithType: PositionedMenuObject.DrawPos(float)
  fullName: Menu.PositionedMenuObject.DrawPos(float)
  nameWithType.vb: PositionedMenuObject.DrawPos(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawPos(Single)
  name.vb: DrawPos(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawPos(System.Single)
    name: DrawPos
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawPos(System.Single)
    name: DrawPos
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawPos_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.DrawX(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawX(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  name: DrawX(float)
  nameWithType: PositionedMenuObject.DrawX(float)
  fullName: Menu.PositionedMenuObject.DrawX(float)
  nameWithType.vb: PositionedMenuObject.DrawX(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawX(Single)
  name.vb: DrawX(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawX(System.Single)
    name: DrawX
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawX(System.Single)
    name: DrawX
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawX_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.DrawY(System.Single)
  commentId: M:Menu.PositionedMenuObject.DrawY(System.Single)
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  name: DrawY(float)
  nameWithType: PositionedMenuObject.DrawY(float)
  fullName: Menu.PositionedMenuObject.DrawY(float)
  nameWithType.vb: PositionedMenuObject.DrawY(Single)
  fullName.vb: Menu.PositionedMenuObject.DrawY(Single)
  name.vb: DrawY(Single)
  spec.csharp:
  - uid: Menu.PositionedMenuObject.DrawY(System.Single)
    name: DrawY
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.DrawY(System.Single)
    name: DrawY
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_DrawY_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.PositionedMenuObject.ScreenPos
  commentId: P:Menu.PositionedMenuObject.ScreenPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_ScreenPos
  name: ScreenPos
  nameWithType: PositionedMenuObject.ScreenPos
  fullName: Menu.PositionedMenuObject.ScreenPos
- uid: Menu.PositionedMenuObject.ScreenLastPos
  commentId: P:Menu.PositionedMenuObject.ScreenLastPos
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_ScreenLastPos
  name: ScreenLastPos
  nameWithType: PositionedMenuObject.ScreenLastPos
  fullName: Menu.PositionedMenuObject.ScreenLastPos
- uid: Menu.MenuObject.menu
  commentId: F:Menu.MenuObject.menu
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_menu
  name: menu
  nameWithType: MenuObject.menu
  fullName: Menu.MenuObject.menu
- uid: Menu.MenuObject.subObjects
  commentId: F:Menu.MenuObject.subObjects
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_subObjects
  name: subObjects
  nameWithType: MenuObject.subObjects
  fullName: Menu.MenuObject.subObjects
- uid: Menu.MenuObject.owner
  commentId: F:Menu.MenuObject.owner
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_owner
  name: owner
  nameWithType: MenuObject.owner
  fullName: Menu.MenuObject.owner
- uid: Menu.MenuObject.nextSelectable
  commentId: F:Menu.MenuObject.nextSelectable
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_nextSelectable
  name: nextSelectable
  nameWithType: MenuObject.nextSelectable
  fullName: Menu.MenuObject.nextSelectable
- uid: Menu.MenuObject.toggled
  commentId: F:Menu.MenuObject.toggled
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_toggled
  name: toggled
  nameWithType: MenuObject.toggled
  fullName: Menu.MenuObject.toggled
- uid: Menu.MenuObject.inactive
  commentId: F:Menu.MenuObject.inactive
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_inactive
  name: inactive
  nameWithType: MenuObject.inactive
  fullName: Menu.MenuObject.inactive
- uid: Menu.MenuObject.myContainer
  commentId: F:Menu.MenuObject.myContainer
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_myContainer
  name: myContainer
  nameWithType: MenuObject.myContainer
  fullName: Menu.MenuObject.myContainer
- uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  commentId: M:Menu.MenuObject.Singal(Menu.MenuObject,System.String)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  name: Singal(MenuObject, string)
  nameWithType: MenuObject.Singal(MenuObject, string)
  fullName: Menu.MenuObject.Singal(Menu.MenuObject, string)
  nameWithType.vb: MenuObject.Singal(MenuObject, String)
  fullName.vb: Menu.MenuObject.Singal(Menu.MenuObject, String)
  name.vb: Singal(MenuObject, String)
  spec.csharp:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.Singal(Menu.MenuObject,System.String)
    name: Singal
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_Singal_Menu_MenuObject_System_String_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  commentId: M:Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  name: RemoveSubObject(MenuObject)
  nameWithType: MenuObject.RemoveSubObject(MenuObject)
  fullName: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSubObject(Menu.MenuObject)
    name: RemoveSubObject
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSubObject_Menu_MenuObject_
  - name: (
  - uid: Menu.MenuObject
    name: MenuObject
    isExternal: true
    href: Menu.MenuObject.html
  - name: )
- uid: Menu.MenuObject.Container
  commentId: P:Menu.MenuObject.Container
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Container
  name: Container
  nameWithType: MenuObject.Container
  fullName: Menu.MenuObject.Container
- uid: Menu.MenuObject.Selected
  commentId: P:Menu.MenuObject.Selected
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_Selected
  name: Selected
  nameWithType: MenuObject.Selected
  fullName: Menu.MenuObject.Selected
- uid: Menu.MenuObject.page
  commentId: P:Menu.MenuObject.page
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_page
  name: page
  nameWithType: MenuObject.page
  fullName: Menu.MenuObject.page
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HUD.HUD
  commentId: T:HUD.HUD
  parent: HUD
  isExternal: true
  href: HUD.HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD.HUD
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.FSprite[]
  isExternal: true
  href: FSprite.html
  name: FSprite[]
  nameWithType: FSprite[]
  fullName: FSprite[]
  nameWithType.vb: FSprite()
  fullName.vb: FSprite()
  name.vb: FSprite()
  spec.csharp:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FSprite
    name: FSprite
    isExternal: true
    href: FSprite.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{Menu.KarmaLadder.KarmaSymbol}
  commentId: T:System.Collections.Generic.List{Menu.KarmaLadder.KarmaSymbol}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<KarmaLadder.KarmaSymbol>
  nameWithType: List<KarmaLadder.KarmaSymbol>
  fullName: System.Collections.Generic.List<Menu.KarmaLadder.KarmaSymbol>
  nameWithType.vb: List(Of KarmaLadder.KarmaSymbol)
  fullName.vb: System.Collections.Generic.List(Of Menu.KarmaLadder.KarmaSymbol)
  name.vb: List(Of KarmaLadder.KarmaSymbol)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Menu.KarmaLadder
    name: KarmaLadder
    isExternal: true
    href: Menu.KarmaLadder.html
  - name: .
  - uid: Menu.KarmaLadder.KarmaSymbol
    name: KarmaSymbol
    isExternal: true
    href: Menu.KarmaLadder.KarmaSymbol.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.KarmaLadder
    name: KarmaLadder
    isExternal: true
    href: Menu.KarmaLadder.html
  - name: .
  - uid: Menu.KarmaLadder.KarmaSymbol
    name: KarmaSymbol
    isExternal: true
    href: Menu.KarmaLadder.KarmaSymbol.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.KarmaLadder.Phase
  commentId: T:Menu.KarmaLadder.Phase
  parent: Menu
  isExternal: true
  href: Menu.KarmaLadder.html
  name: KarmaLadder.Phase
  nameWithType: KarmaLadder.Phase
  fullName: Menu.KarmaLadder.Phase
  spec.csharp:
  - uid: Menu.KarmaLadder
    name: KarmaLadder
    isExternal: true
    href: Menu.KarmaLadder.html
  - name: .
  - uid: Menu.KarmaLadder.Phase
    name: Phase
    isExternal: true
    href: Menu.KarmaLadder.Phase.html
  spec.vb:
  - uid: Menu.KarmaLadder
    name: KarmaLadder
    isExternal: true
    href: Menu.KarmaLadder.html
  - name: .
  - uid: Menu.KarmaLadder.Phase
    name: Phase
    isExternal: true
    href: Menu.KarmaLadder.Phase.html
- uid: Global.MenuMicrophone.MenuSoundLoop
  commentId: T:Global.MenuMicrophone.MenuSoundLoop
  isExternal: true
  href: MenuMicrophone.html
  name: MenuMicrophone.MenuSoundLoop
  nameWithType: MenuMicrophone.MenuSoundLoop
  fullName: MenuMicrophone.MenuSoundLoop
  spec.csharp:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
  spec.vb:
  - uid: Global.MenuMicrophone
    name: MenuMicrophone
    isExternal: true
    href: MenuMicrophone.html
  - name: .
  - uid: Global.MenuMicrophone.MenuSoundLoop
    name: MenuSoundLoop
    isExternal: true
    href: MenuMicrophone.MenuSoundLoop.html
- uid: System.Collections.Generic.List{Menu.EndgameMeter}
  commentId: T:System.Collections.Generic.List{Menu.EndgameMeter}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EndgameMeter>
  nameWithType: List<EndgameMeter>
  fullName: System.Collections.Generic.List<Menu.EndgameMeter>
  nameWithType.vb: List(Of EndgameMeter)
  fullName.vb: System.Collections.Generic.List(Of Menu.EndgameMeter)
  name.vb: List(Of EndgameMeter)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Menu.EndgameMeter
    name: EndgameMeter
    isExternal: true
    href: Menu.EndgameMeter.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Menu.EndgameMeter
    name: EndgameMeter
    isExternal: true
    href: Menu.EndgameMeter.html
  - name: )
- uid: Menu.KarmaLadder.SymbolGradientSprite*
  commentId: Overload:Menu.KarmaLadder.SymbolGradientSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_SymbolGradientSprite_System_Int32_System_Int32_
  name: SymbolGradientSprite
  nameWithType: KarmaLadder.SymbolGradientSprite
  fullName: Menu.KarmaLadder.SymbolGradientSprite
- uid: Menu.KarmaLadder.LineSprite*
  commentId: Overload:Menu.KarmaLadder.LineSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_LineSprite_System_Int32_System_Int32_
  name: LineSprite
  nameWithType: KarmaLadder.LineSprite
  fullName: Menu.KarmaLadder.LineSprite
- uid: Menu.KarmaLadder.ReinforcementLineSprite*
  commentId: Overload:Menu.KarmaLadder.ReinforcementLineSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_ReinforcementLineSprite_System_Int32_
  name: ReinforcementLineSprite
  nameWithType: KarmaLadder.ReinforcementLineSprite
  fullName: Menu.KarmaLadder.ReinforcementLineSprite
- uid: Menu.KarmaLadder.#ctor*
  commentId: Overload:Menu.KarmaLadder.#ctor
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder__ctor_Menu_Menu_Menu_MenuObject_UnityEngine_Vector2_HUD_HUD_RWCustom_IntVector2_System_Single_System_Single_System_Boolean_System_Boolean_
  name: KarmaLadder
  nameWithType: KarmaLadder.KarmaLadder
  fullName: Menu.KarmaLadder.KarmaLadder
  nameWithType.vb: KarmaLadder.New
  fullName.vb: Menu.KarmaLadder.New
  name.vb: New
- uid: Menu.Menu
  commentId: T:Menu.Menu
  parent: Menu
  isExternal: true
  href: Menu.Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu.Menu
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Menu.KarmaLadder.GoToKarma*
  commentId: Overload:Menu.KarmaLadder.GoToKarma
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_GoToKarma_System_Int32_System_Boolean_
  name: GoToKarma
  nameWithType: KarmaLadder.GoToKarma
  fullName: Menu.KarmaLadder.GoToKarma
- uid: Menu.PositionedMenuObject.Update
  commentId: M:Menu.PositionedMenuObject.Update
  parent: Menu.PositionedMenuObject
  isExternal: true
  href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_Update
  name: Update()
  nameWithType: PositionedMenuObject.Update()
  fullName: Menu.PositionedMenuObject.Update()
  spec.csharp:
  - uid: Menu.PositionedMenuObject.Update
    name: Update
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.PositionedMenuObject.Update
    name: Update
    isExternal: true
    href: Menu.PositionedMenuObject.html#Menu_PositionedMenuObject_Update
  - name: (
  - name: )
- uid: Menu.KarmaLadder.Update*
  commentId: Overload:Menu.KarmaLadder.Update
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_Update
  name: Update
  nameWithType: KarmaLadder.Update
  fullName: Menu.KarmaLadder.Update
- uid: Menu.MenuObject.GrafUpdate(System.Single)
  commentId: M:Menu.MenuObject.GrafUpdate(System.Single)
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  name: GrafUpdate(float)
  nameWithType: MenuObject.GrafUpdate(float)
  fullName: Menu.MenuObject.GrafUpdate(float)
  nameWithType.vb: MenuObject.GrafUpdate(Single)
  fullName.vb: Menu.MenuObject.GrafUpdate(Single)
  name.vb: GrafUpdate(Single)
  spec.csharp:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.GrafUpdate(System.Single)
    name: GrafUpdate
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_GrafUpdate_System_Single_
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: Menu.KarmaLadder.GrafUpdate*
  commentId: Overload:Menu.KarmaLadder.GrafUpdate
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_GrafUpdate_System_Single_
  name: GrafUpdate
  nameWithType: KarmaLadder.GrafUpdate
  fullName: Menu.KarmaLadder.GrafUpdate
- uid: Menu.MenuObject.RemoveSprites
  commentId: M:Menu.MenuObject.RemoveSprites
  parent: Menu.MenuObject
  isExternal: true
  href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  name: RemoveSprites()
  nameWithType: MenuObject.RemoveSprites()
  fullName: Menu.MenuObject.RemoveSprites()
  spec.csharp:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
  spec.vb:
  - uid: Menu.MenuObject.RemoveSprites
    name: RemoveSprites
    isExternal: true
    href: Menu.MenuObject.html#Menu_MenuObject_RemoveSprites
  - name: (
  - name: )
- uid: Menu.KarmaLadder.RemoveSprites*
  commentId: Overload:Menu.KarmaLadder.RemoveSprites
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_RemoveSprites
  name: RemoveSprites
  nameWithType: KarmaLadder.RemoveSprites
  fullName: Menu.KarmaLadder.RemoveSprites
- uid: Menu.KarmaLadder.CircleSprite*
  commentId: Overload:Menu.KarmaLadder.CircleSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_CircleSprite
  name: CircleSprite
  nameWithType: KarmaLadder.CircleSprite
  fullName: Menu.KarmaLadder.CircleSprite
- uid: Menu.KarmaLadder.BlackRibbonSprite*
  commentId: Overload:Menu.KarmaLadder.BlackRibbonSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_BlackRibbonSprite
  name: BlackRibbonSprite
  nameWithType: KarmaLadder.BlackRibbonSprite
  fullName: Menu.KarmaLadder.BlackRibbonSprite
- uid: Menu.KarmaLadder.BackgroundCircleSprite*
  commentId: Overload:Menu.KarmaLadder.BackgroundCircleSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_BackgroundCircleSprite
  name: BackgroundCircleSprite
  nameWithType: KarmaLadder.BackgroundCircleSprite
  fullName: Menu.KarmaLadder.BackgroundCircleSprite
- uid: Menu.KarmaLadder.ReinforcementSprite*
  commentId: Overload:Menu.KarmaLadder.ReinforcementSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_ReinforcementSprite
  name: ReinforcementSprite
  nameWithType: KarmaLadder.ReinforcementSprite
  fullName: Menu.KarmaLadder.ReinforcementSprite
- uid: Menu.KarmaLadder.BlackFadeSprite*
  commentId: Overload:Menu.KarmaLadder.BlackFadeSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_BlackFadeSprite
  name: BlackFadeSprite
  nameWithType: KarmaLadder.BlackFadeSprite
  fullName: Menu.KarmaLadder.BlackFadeSprite
- uid: Menu.KarmaLadder.LocalBloomSprite*
  commentId: Overload:Menu.KarmaLadder.LocalBloomSprite
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_LocalBloomSprite
  name: LocalBloomSprite
  nameWithType: KarmaLadder.LocalBloomSprite
  fullName: Menu.KarmaLadder.LocalBloomSprite
- uid: Menu.KarmaLadder.TotalSprites*
  commentId: Overload:Menu.KarmaLadder.TotalSprites
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_TotalSprites
  name: TotalSprites
  nameWithType: KarmaLadder.TotalSprites
  fullName: Menu.KarmaLadder.TotalSprites
- uid: Menu.KarmaLadder.BackgroundContainer*
  commentId: Overload:Menu.KarmaLadder.BackgroundContainer
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_BackgroundContainer
  name: BackgroundContainer
  nameWithType: KarmaLadder.BackgroundContainer
  fullName: Menu.KarmaLadder.BackgroundContainer
- uid: Menu.KarmaLadder.MainContainer*
  commentId: Overload:Menu.KarmaLadder.MainContainer
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_MainContainer
  name: MainContainer
  nameWithType: KarmaLadder.MainContainer
  fullName: Menu.KarmaLadder.MainContainer
- uid: Menu.KarmaLadder.FadeCircleContainer*
  commentId: Overload:Menu.KarmaLadder.FadeCircleContainer
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_FadeCircleContainer
  name: FadeCircleContainer
  nameWithType: KarmaLadder.FadeCircleContainer
  fullName: Menu.KarmaLadder.FadeCircleContainer
- uid: Menu.KarmaLadder.AllAnimationDone*
  commentId: Overload:Menu.KarmaLadder.AllAnimationDone
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_AllAnimationDone
  name: AllAnimationDone
  nameWithType: KarmaLadder.AllAnimationDone
  fullName: Menu.KarmaLadder.AllAnimationDone
- uid: Menu.KarmaLadder.displayKarmaCap*
  commentId: Overload:Menu.KarmaLadder.displayKarmaCap
  isExternal: true
  href: Menu.KarmaLadder.html#Menu_KarmaLadder_displayKarmaCap
  name: displayKarmaCap
  nameWithType: KarmaLadder.displayKarmaCap
  fullName: Menu.KarmaLadder.displayKarmaCap
