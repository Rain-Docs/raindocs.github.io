### YamlMime:ManagedReference
items:
- uid: Music.MusicPiece.SubTrack
  commentId: T:Music.MusicPiece.SubTrack
  id: MusicPiece.SubTrack
  parent: Music
  children:
  - Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)
  - Music.MusicPiece.SubTrack.StartPlaying
  - Music.MusicPiece.SubTrack.StopAndDestroy
  - Music.MusicPiece.SubTrack.Update
  - Music.MusicPiece.SubTrack.index
  - Music.MusicPiece.SubTrack.isStreamed
  - Music.MusicPiece.SubTrack.isSynced
  - Music.MusicPiece.SubTrack.piece
  - Music.MusicPiece.SubTrack.readyToPlay
  - Music.MusicPiece.SubTrack.source
  - Music.MusicPiece.SubTrack.trackName
  - Music.MusicPiece.SubTrack.volume
  langs:
  - csharp
  - vb
  name: MusicPiece.SubTrack
  nameWithType: MusicPiece.SubTrack
  fullName: Music.MusicPiece.SubTrack
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Music.MusicPiece.SubTrack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class MusicPiece.SubTrack
    content.vb: Public Class MusicPiece.SubTrack
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Music.MusicPiece.SubTrack.piece
  commentId: F:Music.MusicPiece.SubTrack.piece
  id: piece
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: piece
  nameWithType: MusicPiece.SubTrack.piece
  fullName: Music.MusicPiece.SubTrack.piece
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.piece</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MusicPiece piece
    return:
      type: Music.MusicPiece
    content.vb: Public piece As MusicPiece
- uid: Music.MusicPiece.SubTrack.index
  commentId: F:Music.MusicPiece.SubTrack.index
  id: index
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: index
  nameWithType: MusicPiece.SubTrack.index
  fullName: Music.MusicPiece.SubTrack.index
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.index</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int index
    return:
      type: System.Int32
    content.vb: Public index As Integer
- uid: Music.MusicPiece.SubTrack.source
  commentId: F:Music.MusicPiece.SubTrack.source
  id: source
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: source
  nameWithType: MusicPiece.SubTrack.source
  fullName: Music.MusicPiece.SubTrack.source
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.source</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AudioSource source
    return:
      type: UnityEngine.AudioSource
    content.vb: Public source As AudioSource
- uid: Music.MusicPiece.SubTrack.readyToPlay
  commentId: F:Music.MusicPiece.SubTrack.readyToPlay
  id: readyToPlay
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: readyToPlay
  nameWithType: MusicPiece.SubTrack.readyToPlay
  fullName: Music.MusicPiece.SubTrack.readyToPlay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.readyToPlay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyToPlay
    return:
      type: System.Boolean
    content.vb: Public readyToPlay As Boolean
- uid: Music.MusicPiece.SubTrack.volume
  commentId: F:Music.MusicPiece.SubTrack.volume
  id: volume
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: volume
  nameWithType: MusicPiece.SubTrack.volume
  fullName: Music.MusicPiece.SubTrack.volume
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.volume</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float volume
    return:
      type: System.Single
    content.vb: Public volume As Single
- uid: Music.MusicPiece.SubTrack.trackName
  commentId: F:Music.MusicPiece.SubTrack.trackName
  id: trackName
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: trackName
  nameWithType: MusicPiece.SubTrack.trackName
  fullName: Music.MusicPiece.SubTrack.trackName
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.trackName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string trackName
    return:
      type: System.String
    content.vb: Public trackName As String
- uid: Music.MusicPiece.SubTrack.isStreamed
  commentId: F:Music.MusicPiece.SubTrack.isStreamed
  id: isStreamed
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: isStreamed
  nameWithType: MusicPiece.SubTrack.isStreamed
  fullName: Music.MusicPiece.SubTrack.isStreamed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.isStreamed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isStreamed
    return:
      type: System.Boolean
    content.vb: Public isStreamed As Boolean
- uid: Music.MusicPiece.SubTrack.isSynced
  commentId: F:Music.MusicPiece.SubTrack.isSynced
  id: isSynced
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: isSynced
  nameWithType: MusicPiece.SubTrack.isSynced
  fullName: Music.MusicPiece.SubTrack.isSynced
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.MusicPiece.SubTrack.isSynced</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isSynced
    return:
      type: System.Boolean
    content.vb: Public isSynced As Boolean
- uid: Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)
  commentId: M:Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)
  id: '#ctor(Music.MusicPiece,System.Int32,System.String)'
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: SubTrack(MusicPiece, int, string)
  nameWithType: MusicPiece.SubTrack.SubTrack(MusicPiece, int, string)
  fullName: Music.MusicPiece.SubTrack.SubTrack(Music.MusicPiece, int, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Music.MusicPiece.SubTrack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SubTrack(MusicPiece piece, int index, string trackName)
    parameters:
    - id: piece
      type: Music.MusicPiece
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>piece</parameter>
            <parameter>M:Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)</parameter>
          </include>
        </markup>
    - id: trackName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trackName</parameter>
            <parameter>M:Music.MusicPiece.SubTrack.#ctor(Music.MusicPiece,System.Int32,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(piece As MusicPiece, index As Integer, trackName As String)
  overload: Music.MusicPiece.SubTrack.#ctor*
  nameWithType.vb: MusicPiece.SubTrack.New(MusicPiece, Integer, String)
  fullName.vb: Music.MusicPiece.SubTrack.New(Music.MusicPiece, Integer, String)
  name.vb: New(MusicPiece, Integer, String)
- uid: Music.MusicPiece.SubTrack.Update
  commentId: M:Music.MusicPiece.SubTrack.Update
  id: Update
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: MusicPiece.SubTrack.Update()
  fullName: Music.MusicPiece.SubTrack.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.MusicPiece.SubTrack.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Music.MusicPiece.SubTrack.Update*
- uid: Music.MusicPiece.SubTrack.StartPlaying
  commentId: M:Music.MusicPiece.SubTrack.StartPlaying
  id: StartPlaying
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: StartPlaying()
  nameWithType: MusicPiece.SubTrack.StartPlaying()
  fullName: Music.MusicPiece.SubTrack.StartPlaying()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.MusicPiece.SubTrack.StartPlaying</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StartPlaying()
    content.vb: Public Sub StartPlaying()
  overload: Music.MusicPiece.SubTrack.StartPlaying*
- uid: Music.MusicPiece.SubTrack.StopAndDestroy
  commentId: M:Music.MusicPiece.SubTrack.StopAndDestroy
  id: StopAndDestroy
  parent: Music.MusicPiece.SubTrack
  langs:
  - csharp
  - vb
  name: StopAndDestroy()
  nameWithType: MusicPiece.SubTrack.StopAndDestroy()
  fullName: Music.MusicPiece.SubTrack.StopAndDestroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.MusicPiece.SubTrack.StopAndDestroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void StopAndDestroy()
    content.vb: Public Sub StopAndDestroy()
  overload: Music.MusicPiece.SubTrack.StopAndDestroy*
references:
- uid: Music
  commentId: N:Music
  isExternal: true
  href: Music.html
  name: Music
  nameWithType: Music
  fullName: Music
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Music.MusicPiece
  commentId: T:Music.MusicPiece
  parent: Music
  isExternal: true
  href: Music.MusicPiece.html
  name: MusicPiece
  nameWithType: MusicPiece
  fullName: Music.MusicPiece
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.AudioSource
  isExternal: true
  name: AudioSource
  nameWithType: AudioSource
  fullName: UnityEngine.AudioSource
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Music.MusicPiece.SubTrack.#ctor*
  commentId: Overload:Music.MusicPiece.SubTrack.#ctor
  isExternal: true
  href: Music.MusicPiece.SubTrack.html#Music_MusicPiece_SubTrack__ctor_Music_MusicPiece_System_Int32_System_String_
  name: SubTrack
  nameWithType: MusicPiece.SubTrack.SubTrack
  fullName: Music.MusicPiece.SubTrack.SubTrack
  nameWithType.vb: MusicPiece.SubTrack.New
  fullName.vb: Music.MusicPiece.SubTrack.New
  name.vb: New
- uid: Music.MusicPiece.SubTrack.Update*
  commentId: Overload:Music.MusicPiece.SubTrack.Update
  isExternal: true
  href: Music.MusicPiece.SubTrack.html#Music_MusicPiece_SubTrack_Update
  name: Update
  nameWithType: MusicPiece.SubTrack.Update
  fullName: Music.MusicPiece.SubTrack.Update
- uid: Music.MusicPiece.SubTrack.StartPlaying*
  commentId: Overload:Music.MusicPiece.SubTrack.StartPlaying
  isExternal: true
  href: Music.MusicPiece.SubTrack.html#Music_MusicPiece_SubTrack_StartPlaying
  name: StartPlaying
  nameWithType: MusicPiece.SubTrack.StartPlaying
  fullName: Music.MusicPiece.SubTrack.StartPlaying
- uid: Music.MusicPiece.SubTrack.StopAndDestroy*
  commentId: Overload:Music.MusicPiece.SubTrack.StopAndDestroy
  isExternal: true
  href: Music.MusicPiece.SubTrack.html#Music_MusicPiece_SubTrack_StopAndDestroy
  name: StopAndDestroy
  nameWithType: MusicPiece.SubTrack.StopAndDestroy
  fullName: Music.MusicPiece.SubTrack.StopAndDestroy
