### YamlMime:ManagedReference
items:
- uid: Global.MirosBird.BirdLeg
  commentId: T:Global.MirosBird.BirdLeg
  id: MirosBird.BirdLeg
  parent: Global
  children:
  - Global.MirosBird.BirdLeg.#ctor(MirosBird,System.Int32)
  - Global.MirosBird.BirdLeg.ConnectionPos
  - Global.MirosBird.BirdLeg.ConnectionSide
  - Global.MirosBird.BirdLeg.Foot
  - Global.MirosBird.BirdLeg.Hip
  - Global.MirosBird.BirdLeg.Knee
  - Global.MirosBird.BirdLeg.Reset
  - Global.MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.MirosBird.BirdLeg.Update
  - Global.MirosBird.BirdLeg.bird
  - Global.MirosBird.BirdLeg.debugColor
  - Global.MirosBird.BirdLeg.flip
  - Global.MirosBird.BirdLeg.footSecurePos
  - Global.MirosBird.BirdLeg.forwardPower
  - Global.MirosBird.BirdLeg.groundContact
  - Global.MirosBird.BirdLeg.joints
  - Global.MirosBird.BirdLeg.lastFootSecurePos
  - Global.MirosBird.BirdLeg.lastRunMode
  - Global.MirosBird.BirdLeg.lastSpringPow
  - Global.MirosBird.BirdLeg.legNumber
  - Global.MirosBird.BirdLeg.lightUp
  - Global.MirosBird.BirdLeg.lightUpPos1
  - Global.MirosBird.BirdLeg.lightUpPos2
  - Global.MirosBird.BirdLeg.moveToPos
  - Global.MirosBird.BirdLeg.room
  - Global.MirosBird.BirdLeg.runMode
  - Global.MirosBird.BirdLeg.springDir
  - Global.MirosBird.BirdLeg.springPower
  langs:
  - csharp
  - vb
  name: MirosBird.BirdLeg
  nameWithType: MirosBird.BirdLeg
  fullName: MirosBird.BirdLeg
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:MirosBird.BirdLeg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class MirosBird.BirdLeg
    content.vb: Public Class MirosBird.BirdLeg
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.MirosBird.BirdLeg.debugColor
  commentId: F:Global.MirosBird.BirdLeg.debugColor
  id: debugColor
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: debugColor
  nameWithType: MirosBird.BirdLeg.debugColor
  fullName: MirosBird.BirdLeg.debugColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.debugColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color debugColor
    return:
      type: UnityEngine.Color
    content.vb: Public debugColor As Color
- uid: Global.MirosBird.BirdLeg.bird
  commentId: F:Global.MirosBird.BirdLeg.bird
  id: bird
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: bird
  nameWithType: MirosBird.BirdLeg.bird
  fullName: MirosBird.BirdLeg.bird
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.bird</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MirosBird bird
    return:
      type: Global.MirosBird
    content.vb: Public bird As MirosBird
- uid: Global.MirosBird.BirdLeg.legNumber
  commentId: F:Global.MirosBird.BirdLeg.legNumber
  id: legNumber
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: legNumber
  nameWithType: MirosBird.BirdLeg.legNumber
  fullName: MirosBird.BirdLeg.legNumber
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.legNumber</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int legNumber
    return:
      type: System.Int32
    content.vb: Public legNumber As Integer
- uid: Global.MirosBird.BirdLeg.groundContact
  commentId: F:Global.MirosBird.BirdLeg.groundContact
  id: groundContact
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: groundContact
  nameWithType: MirosBird.BirdLeg.groundContact
  fullName: MirosBird.BirdLeg.groundContact
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.groundContact</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool groundContact
    return:
      type: System.Boolean
    content.vb: Public groundContact As Boolean
- uid: Global.MirosBird.BirdLeg.springPower
  commentId: F:Global.MirosBird.BirdLeg.springPower
  id: springPower
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: springPower
  nameWithType: MirosBird.BirdLeg.springPower
  fullName: MirosBird.BirdLeg.springPower
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.springPower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float springPower
    return:
      type: System.Single
    content.vb: Public springPower As Single
- uid: Global.MirosBird.BirdLeg.lastSpringPow
  commentId: F:Global.MirosBird.BirdLeg.lastSpringPow
  id: lastSpringPow
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lastSpringPow
  nameWithType: MirosBird.BirdLeg.lastSpringPow
  fullName: MirosBird.BirdLeg.lastSpringPow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lastSpringPow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastSpringPow
    return:
      type: System.Single
    content.vb: Public lastSpringPow As Single
- uid: Global.MirosBird.BirdLeg.forwardPower
  commentId: F:Global.MirosBird.BirdLeg.forwardPower
  id: forwardPower
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: forwardPower
  nameWithType: MirosBird.BirdLeg.forwardPower
  fullName: MirosBird.BirdLeg.forwardPower
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.forwardPower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float forwardPower
    return:
      type: System.Single
    content.vb: Public forwardPower As Single
- uid: Global.MirosBird.BirdLeg.springDir
  commentId: F:Global.MirosBird.BirdLeg.springDir
  id: springDir
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: springDir
  nameWithType: MirosBird.BirdLeg.springDir
  fullName: MirosBird.BirdLeg.springDir
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.springDir</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 springDir
    return:
      type: UnityEngine.Vector2
    content.vb: Public springDir As Vector2
- uid: Global.MirosBird.BirdLeg.footSecurePos
  commentId: F:Global.MirosBird.BirdLeg.footSecurePos
  id: footSecurePos
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: footSecurePos
  nameWithType: MirosBird.BirdLeg.footSecurePos
  fullName: MirosBird.BirdLeg.footSecurePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.footSecurePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? footSecurePos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public footSecurePos As Vector2?
- uid: Global.MirosBird.BirdLeg.moveToPos
  commentId: F:Global.MirosBird.BirdLeg.moveToPos
  id: moveToPos
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: moveToPos
  nameWithType: MirosBird.BirdLeg.moveToPos
  fullName: MirosBird.BirdLeg.moveToPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.moveToPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? moveToPos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public moveToPos As Vector2?
- uid: Global.MirosBird.BirdLeg.lastFootSecurePos
  commentId: F:Global.MirosBird.BirdLeg.lastFootSecurePos
  id: lastFootSecurePos
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lastFootSecurePos
  nameWithType: MirosBird.BirdLeg.lastFootSecurePos
  fullName: MirosBird.BirdLeg.lastFootSecurePos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lastFootSecurePos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2? lastFootSecurePos
    return:
      type: System.Nullable{UnityEngine.Vector2}
    content.vb: Public lastFootSecurePos As Vector2?
- uid: Global.MirosBird.BirdLeg.lightUp
  commentId: F:Global.MirosBird.BirdLeg.lightUp
  id: lightUp
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lightUp
  nameWithType: MirosBird.BirdLeg.lightUp
  fullName: MirosBird.BirdLeg.lightUp
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lightUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lightUp
    return:
      type: System.Int32
    content.vb: Public lightUp As Integer
- uid: Global.MirosBird.BirdLeg.lightUpPos1
  commentId: F:Global.MirosBird.BirdLeg.lightUpPos1
  id: lightUpPos1
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lightUpPos1
  nameWithType: MirosBird.BirdLeg.lightUpPos1
  fullName: MirosBird.BirdLeg.lightUpPos1
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lightUpPos1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lightUpPos1
    return:
      type: UnityEngine.Vector2
    content.vb: Public lightUpPos1 As Vector2
- uid: Global.MirosBird.BirdLeg.lightUpPos2
  commentId: F:Global.MirosBird.BirdLeg.lightUpPos2
  id: lightUpPos2
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lightUpPos2
  nameWithType: MirosBird.BirdLeg.lightUpPos2
  fullName: MirosBird.BirdLeg.lightUpPos2
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lightUpPos2</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lightUpPos2
    return:
      type: UnityEngine.Vector2
    content.vb: Public lightUpPos2 As Vector2
- uid: Global.MirosBird.BirdLeg.joints
  commentId: F:Global.MirosBird.BirdLeg.joints
  id: joints
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: joints
  nameWithType: MirosBird.BirdLeg.joints
  fullName: MirosBird.BirdLeg.joints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.joints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MirosBird.BirdLeg.Joint[] joints
    return:
      type: Global.MirosBird.BirdLeg.Joint[]
    content.vb: Public joints As MirosBird.BirdLeg.Joint()
- uid: Global.MirosBird.BirdLeg.flip
  commentId: F:Global.MirosBird.BirdLeg.flip
  id: flip
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: flip
  nameWithType: MirosBird.BirdLeg.flip
  fullName: MirosBird.BirdLeg.flip
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.flip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flip
    return:
      type: System.Single
    content.vb: Public flip As Single
- uid: Global.MirosBird.BirdLeg.lastRunMode
  commentId: F:Global.MirosBird.BirdLeg.lastRunMode
  id: lastRunMode
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: lastRunMode
  nameWithType: MirosBird.BirdLeg.lastRunMode
  fullName: MirosBird.BirdLeg.lastRunMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.lastRunMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastRunMode
    return:
      type: System.Single
    content.vb: Public lastRunMode As Single
- uid: Global.MirosBird.BirdLeg.runMode
  commentId: F:Global.MirosBird.BirdLeg.runMode
  id: runMode
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: runMode
  nameWithType: MirosBird.BirdLeg.runMode
  fullName: MirosBird.BirdLeg.runMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:MirosBird.BirdLeg.runMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float runMode
    return:
      type: System.Single
    content.vb: Public runMode As Single
- uid: Global.MirosBird.BirdLeg.#ctor(MirosBird,System.Int32)
  commentId: M:Global.MirosBird.BirdLeg.#ctor(MirosBird,System.Int32)
  id: '#ctor(MirosBird,System.Int32)'
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: BirdLeg(MirosBird, int)
  nameWithType: MirosBird.BirdLeg.BirdLeg(MirosBird, int)
  fullName: MirosBird.BirdLeg.BirdLeg(MirosBird, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>MirosBird.BirdLeg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BirdLeg(MirosBird bird, int legNumber)
    parameters:
    - id: bird
      type: Global.MirosBird
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bird</parameter>
            <parameter>M:MirosBird.BirdLeg.#ctor(MirosBird,System.Int32)</parameter>
          </include>
        </markup>
    - id: legNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>legNumber</parameter>
            <parameter>M:MirosBird.BirdLeg.#ctor(MirosBird,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(bird As MirosBird, legNumber As Integer)
  overload: Global.MirosBird.BirdLeg.#ctor*
  nameWithType.vb: MirosBird.BirdLeg.New(MirosBird, Integer)
  fullName.vb: MirosBird.BirdLeg.New(MirosBird, Integer)
  name.vb: New(MirosBird, Integer)
- uid: Global.MirosBird.BirdLeg.Reset
  commentId: M:Global.MirosBird.BirdLeg.Reset
  id: Reset
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: MirosBird.BirdLeg.Reset()
  fullName: MirosBird.BirdLeg.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MirosBird.BirdLeg.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.MirosBird.BirdLeg.Reset*
- uid: Global.MirosBird.BirdLeg.Update
  commentId: M:Global.MirosBird.BirdLeg.Update
  id: Update
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: MirosBird.BirdLeg.Update()
  fullName: MirosBird.BirdLeg.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MirosBird.BirdLeg.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.MirosBird.BirdLeg.Update*
- uid: Global.MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)
  id: Slip(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Slip(Vector2, Vector2)
  nameWithType: MirosBird.BirdLeg.Slip(Vector2, Vector2)
  fullName: MirosBird.BirdLeg.Slip(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Slip(Vector2 lastPs, Vector2 ps)
    parameters:
    - id: lastPs
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPs</parameter>
            <parameter>M:MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: ps
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:MirosBird.BirdLeg.Slip(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Slip(lastPs As Vector2, ps As Vector2)
  overload: Global.MirosBird.BirdLeg.Slip*
- uid: Global.MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)
  id: SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: SmallSparks(Vector2, Vector2)
  nameWithType: MirosBird.BirdLeg.SmallSparks(Vector2, Vector2)
  fullName: MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SmallSparks(Vector2 lastPs, Vector2 ps)
    parameters:
    - id: lastPs
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lastPs</parameter>
            <parameter>M:MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: ps
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ps</parameter>
            <parameter>M:MirosBird.BirdLeg.SmallSparks(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SmallSparks(lastPs As Vector2, ps As Vector2)
  overload: Global.MirosBird.BirdLeg.SmallSparks*
- uid: Global.MirosBird.BirdLeg.room
  commentId: P:Global.MirosBird.BirdLeg.room
  id: room
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: room
  nameWithType: MirosBird.BirdLeg.room
  fullName: MirosBird.BirdLeg.room
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room room { get; }
    parameters: []
    return:
      type: Global.Room
    content.vb: Public ReadOnly Property room As Room
  overload: Global.MirosBird.BirdLeg.room*
- uid: Global.MirosBird.BirdLeg.ConnectionSide
  commentId: P:Global.MirosBird.BirdLeg.ConnectionSide
  id: ConnectionSide
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: ConnectionSide
  nameWithType: MirosBird.BirdLeg.ConnectionSide
  fullName: MirosBird.BirdLeg.ConnectionSide
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.ConnectionSide</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ConnectionSide { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ConnectionSide As Single
  overload: Global.MirosBird.BirdLeg.ConnectionSide*
- uid: Global.MirosBird.BirdLeg.ConnectionPos
  commentId: P:Global.MirosBird.BirdLeg.ConnectionPos
  id: ConnectionPos
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: ConnectionPos
  nameWithType: MirosBird.BirdLeg.ConnectionPos
  fullName: MirosBird.BirdLeg.ConnectionPos
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.ConnectionPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 ConnectionPos { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property ConnectionPos As Vector2
  overload: Global.MirosBird.BirdLeg.ConnectionPos*
- uid: Global.MirosBird.BirdLeg.Hip
  commentId: P:Global.MirosBird.BirdLeg.Hip
  id: Hip
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Hip
  nameWithType: MirosBird.BirdLeg.Hip
  fullName: MirosBird.BirdLeg.Hip
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.Hip</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MirosBird.BirdLeg.Joint Hip { get; }
    parameters: []
    return:
      type: Global.MirosBird.BirdLeg.Joint
    content.vb: Public ReadOnly Property Hip As MirosBird.BirdLeg.Joint
  overload: Global.MirosBird.BirdLeg.Hip*
- uid: Global.MirosBird.BirdLeg.Knee
  commentId: P:Global.MirosBird.BirdLeg.Knee
  id: Knee
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Knee
  nameWithType: MirosBird.BirdLeg.Knee
  fullName: MirosBird.BirdLeg.Knee
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.Knee</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MirosBird.BirdLeg.Joint Knee { get; }
    parameters: []
    return:
      type: Global.MirosBird.BirdLeg.Joint
    content.vb: Public ReadOnly Property Knee As MirosBird.BirdLeg.Joint
  overload: Global.MirosBird.BirdLeg.Knee*
- uid: Global.MirosBird.BirdLeg.Foot
  commentId: P:Global.MirosBird.BirdLeg.Foot
  id: Foot
  parent: Global.MirosBird.BirdLeg
  langs:
  - csharp
  - vb
  name: Foot
  nameWithType: MirosBird.BirdLeg.Foot
  fullName: MirosBird.BirdLeg.Foot
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:MirosBird.BirdLeg.Foot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MirosBird.BirdLeg.Joint Foot { get; }
    parameters: []
    return:
      type: Global.MirosBird.BirdLeg.Joint
    content.vb: Public ReadOnly Property Foot As MirosBird.BirdLeg.Joint
  overload: Global.MirosBird.BirdLeg.Foot*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.MirosBird
  commentId: T:Global.MirosBird
  isExternal: true
  href: MirosBird.html
  name: MirosBird
  nameWithType: MirosBird
  fullName: MirosBird
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.MirosBird.BirdLeg.Joint[]
  isExternal: true
  href: MirosBird.BirdLeg.Joint.html
  name: Joint[]
  nameWithType: MirosBird.BirdLeg.Joint[]
  fullName: MirosBird.BirdLeg.Joint[]
  nameWithType.vb: MirosBird.BirdLeg.Joint()
  fullName.vb: MirosBird.BirdLeg.Joint()
  name.vb: Joint()
  spec.csharp:
  - uid: Global.MirosBird.BirdLeg.Joint
    name: Joint
    isExternal: true
    href: MirosBird.BirdLeg.Joint.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.MirosBird.BirdLeg.Joint
    name: Joint
    isExternal: true
    href: MirosBird.BirdLeg.Joint.html
  - name: (
  - name: )
- uid: Global.MirosBird.BirdLeg.#ctor*
  commentId: Overload:Global.MirosBird.BirdLeg.#ctor
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg__ctor_MirosBird_System_Int32_
  name: BirdLeg
  nameWithType: MirosBird.BirdLeg.BirdLeg
  fullName: MirosBird.BirdLeg.BirdLeg
  nameWithType.vb: MirosBird.BirdLeg.New
  fullName.vb: MirosBird.BirdLeg.New
  name.vb: New
- uid: Global.MirosBird.BirdLeg.Reset*
  commentId: Overload:Global.MirosBird.BirdLeg.Reset
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Reset
  name: Reset
  nameWithType: MirosBird.BirdLeg.Reset
  fullName: MirosBird.BirdLeg.Reset
- uid: Global.MirosBird.BirdLeg.Update*
  commentId: Overload:Global.MirosBird.BirdLeg.Update
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Update
  name: Update
  nameWithType: MirosBird.BirdLeg.Update
  fullName: MirosBird.BirdLeg.Update
- uid: Global.MirosBird.BirdLeg.Slip*
  commentId: Overload:Global.MirosBird.BirdLeg.Slip
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Slip_UnityEngine_Vector2_UnityEngine_Vector2_
  name: Slip
  nameWithType: MirosBird.BirdLeg.Slip
  fullName: MirosBird.BirdLeg.Slip
- uid: Global.MirosBird.BirdLeg.SmallSparks*
  commentId: Overload:Global.MirosBird.BirdLeg.SmallSparks
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_SmallSparks_UnityEngine_Vector2_UnityEngine_Vector2_
  name: SmallSparks
  nameWithType: MirosBird.BirdLeg.SmallSparks
  fullName: MirosBird.BirdLeg.SmallSparks
- uid: Global.MirosBird.BirdLeg.room*
  commentId: Overload:Global.MirosBird.BirdLeg.room
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_room
  name: room
  nameWithType: MirosBird.BirdLeg.room
  fullName: MirosBird.BirdLeg.room
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.MirosBird.BirdLeg.ConnectionSide*
  commentId: Overload:Global.MirosBird.BirdLeg.ConnectionSide
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_ConnectionSide
  name: ConnectionSide
  nameWithType: MirosBird.BirdLeg.ConnectionSide
  fullName: MirosBird.BirdLeg.ConnectionSide
- uid: Global.MirosBird.BirdLeg.ConnectionPos*
  commentId: Overload:Global.MirosBird.BirdLeg.ConnectionPos
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_ConnectionPos
  name: ConnectionPos
  nameWithType: MirosBird.BirdLeg.ConnectionPos
  fullName: MirosBird.BirdLeg.ConnectionPos
- uid: Global.MirosBird.BirdLeg.Hip*
  commentId: Overload:Global.MirosBird.BirdLeg.Hip
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Hip
  name: Hip
  nameWithType: MirosBird.BirdLeg.Hip
  fullName: MirosBird.BirdLeg.Hip
- uid: Global.MirosBird.BirdLeg.Joint
  commentId: T:Global.MirosBird.BirdLeg.Joint
  isExternal: true
  href: MirosBird.html
  name: MirosBird.BirdLeg.Joint
  nameWithType: MirosBird.BirdLeg.Joint
  fullName: MirosBird.BirdLeg.Joint
  spec.csharp:
  - uid: Global.MirosBird
    name: MirosBird
    isExternal: true
    href: MirosBird.html
  - name: .
  - uid: Global.MirosBird.BirdLeg
    name: BirdLeg
    isExternal: true
    href: MirosBird.BirdLeg.html
  - name: .
  - uid: Global.MirosBird.BirdLeg.Joint
    name: Joint
    isExternal: true
    href: MirosBird.BirdLeg.Joint.html
  spec.vb:
  - uid: Global.MirosBird
    name: MirosBird
    isExternal: true
    href: MirosBird.html
  - name: .
  - uid: Global.MirosBird.BirdLeg
    name: BirdLeg
    isExternal: true
    href: MirosBird.BirdLeg.html
  - name: .
  - uid: Global.MirosBird.BirdLeg.Joint
    name: Joint
    isExternal: true
    href: MirosBird.BirdLeg.Joint.html
- uid: Global.MirosBird.BirdLeg.Knee*
  commentId: Overload:Global.MirosBird.BirdLeg.Knee
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Knee
  name: Knee
  nameWithType: MirosBird.BirdLeg.Knee
  fullName: MirosBird.BirdLeg.Knee
- uid: Global.MirosBird.BirdLeg.Foot*
  commentId: Overload:Global.MirosBird.BirdLeg.Foot
  isExternal: true
  href: Global.MirosBird.BirdLeg.html#MirosBird_BirdLeg_Foot
  name: Foot
  nameWithType: MirosBird.BirdLeg.Foot
  fullName: MirosBird.BirdLeg.Foot
