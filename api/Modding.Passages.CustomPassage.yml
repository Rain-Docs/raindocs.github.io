### YamlMime:ManagedReference
items:
- uid: Modding.Passages.CustomPassage
  commentId: T:Modding.Passages.CustomPassage
  id: CustomPassage
  parent: Modding.Passages
  children:
  - Modding.Passages.CustomPassage.#ctor
  - Modding.Passages.CustomPassage.ApplyHooks
  - Modding.Passages.CustomPassage.CreateTracker
  - Modding.Passages.CustomPassage.DisplayName
  - Modding.Passages.CustomPassage.ExpeditionScore
  - Modding.Passages.CustomPassage.ID
  - Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)
  - Modding.Passages.CustomPassage.IsNotched
  - Modding.Passages.CustomPassage.NotchColors
  - Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)
  - Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)
  - Modding.Passages.CustomPassage.RequiredPassages
  - Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})
  - Modding.Passages.CustomPassage.RequiresCombat
  - Modding.Passages.CustomPassage.Scene
  - Modding.Passages.CustomPassage.SpriteName
  langs:
  - csharp
  - vb
  name: CustomPassage
  nameWithType: CustomPassage
  fullName: Modding.Passages.CustomPassage
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Modding.Passages.CustomPassage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class CustomPassage
    content.vb: Public MustInherit Class CustomPassage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)
  commentId: M:Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)
  id: IsAvailableForSlugcat(SlugcatStats.Name)
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: IsAvailableForSlugcat(Name)
  nameWithType: CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)
  fullName: Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool IsAvailableForSlugcat(SlugcatStats.Name name)
    parameters:
    - id: name
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Modding.Passages.CustomPassage.IsAvailableForSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function IsAvailableForSlugcat(name As SlugcatStats.Name) As Boolean
  overload: Modding.Passages.CustomPassage.IsAvailableForSlugcat*
- uid: Modding.Passages.CustomPassage.CreateTracker
  commentId: M:Modding.Passages.CustomPassage.CreateTracker
  id: CreateTracker
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: CreateTracker()
  nameWithType: CustomPassage.CreateTracker()
  fullName: Modding.Passages.CustomPassage.CreateTracker()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.CreateTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual WinState.EndgameTracker CreateTracker()
    return:
      type: Global.WinState.EndgameTracker
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Modding.Passages.CustomPassage.CreateTracker</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function CreateTracker() As WinState.EndgameTracker
  overload: Modding.Passages.CustomPassage.CreateTracker*
- uid: Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})
  commentId: M:Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})
  id: RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: RequirementsMet(List<EndgameTracker>)
  nameWithType: CustomPassage.RequirementsMet(List<WinState.EndgameTracker>)
  fullName: Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List<WinState.EndgameTracker>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool RequirementsMet(List<WinState.EndgameTracker> trackers)
    parameters:
    - id: trackers
      type: System.Collections.Generic.List{WinState.EndgameTracker}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>trackers</parameter>
            <parameter>M:Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List{WinState.EndgameTracker})</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function RequirementsMet(trackers As List(Of WinState.EndgameTracker)) As Boolean
  overload: Modding.Passages.CustomPassage.RequirementsMet*
  nameWithType.vb: CustomPassage.RequirementsMet(List(Of WinState.EndgameTracker))
  fullName.vb: Modding.Passages.CustomPassage.RequirementsMet(System.Collections.Generic.List(Of WinState.EndgameTracker))
  name.vb: RequirementsMet(List(Of EndgameTracker))
- uid: Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)
  commentId: M:Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)
  id: OnWin(WinState,RainWorldGame,WinState.EndgameTracker)
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: OnWin(WinState, RainWorldGame, EndgameTracker)
  nameWithType: CustomPassage.OnWin(WinState, RainWorldGame, WinState.EndgameTracker)
  fullName: Modding.Passages.CustomPassage.OnWin(WinState, RainWorldGame, WinState.EndgameTracker)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void OnWin(WinState winState, RainWorldGame game, WinState.EndgameTracker tracker)
    parameters:
    - id: winState
      type: Global.WinState
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>winState</parameter>
            <parameter>M:Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)</parameter>
          </include>
        </markup>
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)</parameter>
          </include>
        </markup>
    - id: tracker
      type: Global.WinState.EndgameTracker
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tracker</parameter>
            <parameter>M:Modding.Passages.CustomPassage.OnWin(WinState,RainWorldGame,WinState.EndgameTracker)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub OnWin(winState As WinState, game As RainWorldGame, tracker As WinState.EndgameTracker)
  overload: Modding.Passages.CustomPassage.OnWin*
- uid: Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)
  commentId: M:Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)
  id: OnDeath(WinState,WinState.EndgameTracker)
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: OnDeath(WinState, EndgameTracker)
  nameWithType: CustomPassage.OnDeath(WinState, WinState.EndgameTracker)
  fullName: Modding.Passages.CustomPassage.OnDeath(WinState, WinState.EndgameTracker)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void OnDeath(WinState winState, WinState.EndgameTracker tracker)
    parameters:
    - id: winState
      type: Global.WinState
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>winState</parameter>
            <parameter>M:Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)</parameter>
          </include>
        </markup>
    - id: tracker
      type: Global.WinState.EndgameTracker
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tracker</parameter>
            <parameter>M:Modding.Passages.CustomPassage.OnDeath(WinState,WinState.EndgameTracker)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub OnDeath(winState As WinState, tracker As WinState.EndgameTracker)
  overload: Modding.Passages.CustomPassage.OnDeath*
- uid: Modding.Passages.CustomPassage.ApplyHooks
  commentId: M:Modding.Passages.CustomPassage.ApplyHooks
  id: ApplyHooks
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: ApplyHooks()
  nameWithType: CustomPassage.ApplyHooks()
  fullName: Modding.Passages.CustomPassage.ApplyHooks()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Modding.Passages.CustomPassage.ApplyHooks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void ApplyHooks()
    content.vb: Public Overridable Sub ApplyHooks()
  overload: Modding.Passages.CustomPassage.ApplyHooks*
- uid: Modding.Passages.CustomPassage.#ctor
  commentId: M:Modding.Passages.CustomPassage.#ctor
  id: '#ctor'
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: CustomPassage()
  nameWithType: CustomPassage.CustomPassage()
  fullName: Modding.Passages.CustomPassage.CustomPassage()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Modding.Passages.CustomPassage</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: protected CustomPassage()
    content.vb: Protected Sub New()
  overload: Modding.Passages.CustomPassage.#ctor*
  nameWithType.vb: CustomPassage.New()
  fullName.vb: Modding.Passages.CustomPassage.New()
  name.vb: New()
- uid: Modding.Passages.CustomPassage.ID
  commentId: P:Modding.Passages.CustomPassage.ID
  id: ID
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: ID
  nameWithType: CustomPassage.ID
  fullName: Modding.Passages.CustomPassage.ID
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.ID</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual WinState.EndgameID ID { get; }
    parameters: []
    return:
      type: Global.WinState.EndgameID
    content.vb: Public Overridable ReadOnly Property ID As WinState.EndgameID
  overload: Modding.Passages.CustomPassage.ID*
- uid: Modding.Passages.CustomPassage.DisplayName
  commentId: P:Modding.Passages.CustomPassage.DisplayName
  id: DisplayName
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: CustomPassage.DisplayName
  fullName: Modding.Passages.CustomPassage.DisplayName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.DisplayName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string DisplayName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property DisplayName As String
  overload: Modding.Passages.CustomPassage.DisplayName*
- uid: Modding.Passages.CustomPassage.SpriteName
  commentId: P:Modding.Passages.CustomPassage.SpriteName
  id: SpriteName
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: SpriteName
  nameWithType: CustomPassage.SpriteName
  fullName: Modding.Passages.CustomPassage.SpriteName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.SpriteName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string SpriteName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property SpriteName As String
  overload: Modding.Passages.CustomPassage.SpriteName*
- uid: Modding.Passages.CustomPassage.Scene
  commentId: P:Modding.Passages.CustomPassage.Scene
  id: Scene
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: CustomPassage.Scene
  fullName: Modding.Passages.CustomPassage.Scene
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.Scene</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual MenuScene.SceneID Scene { get; }
    parameters: []
    return:
      type: Menu.MenuScene.SceneID
    content.vb: Public Overridable ReadOnly Property Scene As MenuScene.SceneID
  overload: Modding.Passages.CustomPassage.Scene*
- uid: Modding.Passages.CustomPassage.IsNotched
  commentId: P:Modding.Passages.CustomPassage.IsNotched
  id: IsNotched
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: IsNotched
  nameWithType: CustomPassage.IsNotched
  fullName: Modding.Passages.CustomPassage.IsNotched
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.IsNotched</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool IsNotched { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property IsNotched As Boolean
  overload: Modding.Passages.CustomPassage.IsNotched*
- uid: Modding.Passages.CustomPassage.NotchColors
  commentId: P:Modding.Passages.CustomPassage.NotchColors
  id: NotchColors
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: NotchColors
  nameWithType: CustomPassage.NotchColors
  fullName: Modding.Passages.CustomPassage.NotchColors
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.NotchColors</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual Color[] NotchColors { get; }
    parameters: []
    return:
      type: UnityEngine.Color[]
    content.vb: Public Overridable ReadOnly Property NotchColors As Color()
  overload: Modding.Passages.CustomPassage.NotchColors*
- uid: Modding.Passages.CustomPassage.RequiredPassages
  commentId: P:Modding.Passages.CustomPassage.RequiredPassages
  id: RequiredPassages
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: RequiredPassages
  nameWithType: CustomPassage.RequiredPassages
  fullName: Modding.Passages.CustomPassage.RequiredPassages
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.RequiredPassages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual WinState.EndgameID[] RequiredPassages { get; }
    parameters: []
    return:
      type: Global.WinState.EndgameID[]
    content.vb: Public Overridable ReadOnly Property RequiredPassages As WinState.EndgameID()
  overload: Modding.Passages.CustomPassage.RequiredPassages*
- uid: Modding.Passages.CustomPassage.ExpeditionScore
  commentId: P:Modding.Passages.CustomPassage.ExpeditionScore
  id: ExpeditionScore
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: ExpeditionScore
  nameWithType: CustomPassage.ExpeditionScore
  fullName: Modding.Passages.CustomPassage.ExpeditionScore
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.ExpeditionScore</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual int ExpeditionScore { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Overridable ReadOnly Property ExpeditionScore As Integer
  overload: Modding.Passages.CustomPassage.ExpeditionScore*
- uid: Modding.Passages.CustomPassage.RequiresCombat
  commentId: P:Modding.Passages.CustomPassage.RequiresCombat
  id: RequiresCombat
  parent: Modding.Passages.CustomPassage
  langs:
  - csharp
  - vb
  name: RequiresCombat
  nameWithType: CustomPassage.RequiresCombat
  fullName: Modding.Passages.CustomPassage.RequiresCombat
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Modding.Passages
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Modding.Passages.CustomPassage.RequiresCombat</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool RequiresCombat { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Overridable ReadOnly Property RequiresCombat As Boolean
  overload: Modding.Passages.CustomPassage.RequiresCombat*
references:
- uid: Modding.Passages
  commentId: N:Modding.Passages
  isExternal: true
  href: Modding.html
  name: Modding.Passages
  nameWithType: Modding.Passages
  fullName: Modding.Passages
  spec.csharp:
  - uid: Modding
    name: Modding
    isExternal: true
    href: Modding.html
  - name: .
  - uid: Modding.Passages
    name: Passages
    isExternal: true
    href: Modding.Passages.html
  spec.vb:
  - uid: Modding
    name: Modding
    isExternal: true
    href: Modding.html
  - name: .
  - uid: Modding.Passages
    name: Passages
    isExternal: true
    href: Modding.Passages.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Modding.Passages.CustomPassage.IsAvailableForSlugcat*
  commentId: Overload:Modding.Passages.CustomPassage.IsAvailableForSlugcat
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_IsAvailableForSlugcat_SlugcatStats_Name_
  name: IsAvailableForSlugcat
  nameWithType: CustomPassage.IsAvailableForSlugcat
  fullName: Modding.Passages.CustomPassage.IsAvailableForSlugcat
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Modding.Passages.CustomPassage.CreateTracker*
  commentId: Overload:Modding.Passages.CustomPassage.CreateTracker
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_CreateTracker
  name: CreateTracker
  nameWithType: CustomPassage.CreateTracker
  fullName: Modding.Passages.CustomPassage.CreateTracker
- uid: Global.WinState.EndgameTracker
  commentId: T:Global.WinState.EndgameTracker
  isExternal: true
  href: WinState.html
  name: WinState.EndgameTracker
  nameWithType: WinState.EndgameTracker
  fullName: WinState.EndgameTracker
  spec.csharp:
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameTracker
    name: EndgameTracker
    isExternal: true
    href: WinState.EndgameTracker.html
  spec.vb:
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameTracker
    name: EndgameTracker
    isExternal: true
    href: WinState.EndgameTracker.html
- uid: Modding.Passages.CustomPassage.RequirementsMet*
  commentId: Overload:Modding.Passages.CustomPassage.RequirementsMet
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_RequirementsMet_System_Collections_Generic_List_WinState_EndgameTracker__
  name: RequirementsMet
  nameWithType: CustomPassage.RequirementsMet
  fullName: Modding.Passages.CustomPassage.RequirementsMet
- uid: System.Collections.Generic.List{WinState.EndgameTracker}
  commentId: T:System.Collections.Generic.List{WinState.EndgameTracker}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WinState.EndgameTracker>
  nameWithType: List<WinState.EndgameTracker>
  fullName: System.Collections.Generic.List<WinState.EndgameTracker>
  nameWithType.vb: List(Of WinState.EndgameTracker)
  fullName.vb: System.Collections.Generic.List(Of WinState.EndgameTracker)
  name.vb: List(Of WinState.EndgameTracker)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameTracker
    name: EndgameTracker
    isExternal: true
    href: WinState.EndgameTracker.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameTracker
    name: EndgameTracker
    isExternal: true
    href: WinState.EndgameTracker.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Modding.Passages.CustomPassage.OnWin*
  commentId: Overload:Modding.Passages.CustomPassage.OnWin
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_OnWin_WinState_RainWorldGame_WinState_EndgameTracker_
  name: OnWin
  nameWithType: CustomPassage.OnWin
  fullName: Modding.Passages.CustomPassage.OnWin
- uid: Global.WinState
  commentId: T:Global.WinState
  isExternal: true
  href: WinState.html
  name: WinState
  nameWithType: WinState
  fullName: WinState
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Modding.Passages.CustomPassage.OnDeath*
  commentId: Overload:Modding.Passages.CustomPassage.OnDeath
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_OnDeath_WinState_WinState_EndgameTracker_
  name: OnDeath
  nameWithType: CustomPassage.OnDeath
  fullName: Modding.Passages.CustomPassage.OnDeath
- uid: Modding.Passages.CustomPassage.ApplyHooks*
  commentId: Overload:Modding.Passages.CustomPassage.ApplyHooks
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_ApplyHooks
  name: ApplyHooks
  nameWithType: CustomPassage.ApplyHooks
  fullName: Modding.Passages.CustomPassage.ApplyHooks
- uid: Modding.Passages.CustomPassage.#ctor*
  commentId: Overload:Modding.Passages.CustomPassage.#ctor
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage__ctor
  name: CustomPassage
  nameWithType: CustomPassage.CustomPassage
  fullName: Modding.Passages.CustomPassage.CustomPassage
  nameWithType.vb: CustomPassage.New
  fullName.vb: Modding.Passages.CustomPassage.New
  name.vb: New
- uid: Modding.Passages.CustomPassage.ID*
  commentId: Overload:Modding.Passages.CustomPassage.ID
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_ID
  name: ID
  nameWithType: CustomPassage.ID
  fullName: Modding.Passages.CustomPassage.ID
- uid: Global.WinState.EndgameID
  commentId: T:Global.WinState.EndgameID
  isExternal: true
  href: WinState.html
  name: WinState.EndgameID
  nameWithType: WinState.EndgameID
  fullName: WinState.EndgameID
  spec.csharp:
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
  spec.vb:
  - uid: Global.WinState
    name: WinState
    isExternal: true
    href: WinState.html
  - name: .
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
- uid: Modding.Passages.CustomPassage.DisplayName*
  commentId: Overload:Modding.Passages.CustomPassage.DisplayName
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_DisplayName
  name: DisplayName
  nameWithType: CustomPassage.DisplayName
  fullName: Modding.Passages.CustomPassage.DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Modding.Passages.CustomPassage.SpriteName*
  commentId: Overload:Modding.Passages.CustomPassage.SpriteName
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_SpriteName
  name: SpriteName
  nameWithType: CustomPassage.SpriteName
  fullName: Modding.Passages.CustomPassage.SpriteName
- uid: Modding.Passages.CustomPassage.Scene*
  commentId: Overload:Modding.Passages.CustomPassage.Scene
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_Scene
  name: Scene
  nameWithType: CustomPassage.Scene
  fullName: Modding.Passages.CustomPassage.Scene
- uid: Menu.MenuScene.SceneID
  commentId: T:Menu.MenuScene.SceneID
  parent: Menu
  isExternal: true
  href: Menu.MenuScene.html
  name: MenuScene.SceneID
  nameWithType: MenuScene.SceneID
  fullName: Menu.MenuScene.SceneID
  spec.csharp:
  - uid: Menu.MenuScene
    name: MenuScene
    isExternal: true
    href: Menu.MenuScene.html
  - name: .
  - uid: Menu.MenuScene.SceneID
    name: SceneID
    isExternal: true
    href: Menu.MenuScene.SceneID.html
  spec.vb:
  - uid: Menu.MenuScene
    name: MenuScene
    isExternal: true
    href: Menu.MenuScene.html
  - name: .
  - uid: Menu.MenuScene.SceneID
    name: SceneID
    isExternal: true
    href: Menu.MenuScene.SceneID.html
- uid: Menu
  commentId: N:Menu
  isExternal: true
  href: Menu.html
  name: Menu
  nameWithType: Menu
  fullName: Menu
- uid: Modding.Passages.CustomPassage.IsNotched*
  commentId: Overload:Modding.Passages.CustomPassage.IsNotched
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_IsNotched
  name: IsNotched
  nameWithType: CustomPassage.IsNotched
  fullName: Modding.Passages.CustomPassage.IsNotched
- uid: Modding.Passages.CustomPassage.NotchColors*
  commentId: Overload:Modding.Passages.CustomPassage.NotchColors
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_NotchColors
  name: NotchColors
  nameWithType: CustomPassage.NotchColors
  fullName: Modding.Passages.CustomPassage.NotchColors
- uid: UnityEngine.Color[]
  isExternal: true
  name: Color[]
  nameWithType: Color[]
  fullName: UnityEngine.Color[]
  nameWithType.vb: Color()
  fullName.vb: UnityEngine.Color()
  name.vb: Color()
  spec.csharp:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Color
    name: Color
    isExternal: true
  - name: (
  - name: )
- uid: Modding.Passages.CustomPassage.RequiredPassages*
  commentId: Overload:Modding.Passages.CustomPassage.RequiredPassages
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_RequiredPassages
  name: RequiredPassages
  nameWithType: CustomPassage.RequiredPassages
  fullName: Modding.Passages.CustomPassage.RequiredPassages
- uid: Global.WinState.EndgameID[]
  isExternal: true
  href: WinState.EndgameID.html
  name: EndgameID[]
  nameWithType: WinState.EndgameID[]
  fullName: WinState.EndgameID[]
  nameWithType.vb: WinState.EndgameID()
  fullName.vb: WinState.EndgameID()
  name.vb: EndgameID()
  spec.csharp:
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.WinState.EndgameID
    name: EndgameID
    isExternal: true
    href: WinState.EndgameID.html
  - name: (
  - name: )
- uid: Modding.Passages.CustomPassage.ExpeditionScore*
  commentId: Overload:Modding.Passages.CustomPassage.ExpeditionScore
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_ExpeditionScore
  name: ExpeditionScore
  nameWithType: CustomPassage.ExpeditionScore
  fullName: Modding.Passages.CustomPassage.ExpeditionScore
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Modding.Passages.CustomPassage.RequiresCombat*
  commentId: Overload:Modding.Passages.CustomPassage.RequiresCombat
  isExternal: true
  href: Modding.Passages.CustomPassage.html#Modding_Passages_CustomPassage_RequiresCombat
  name: RequiresCombat
  nameWithType: CustomPassage.RequiresCombat
  fullName: Modding.Passages.CustomPassage.RequiresCombat
