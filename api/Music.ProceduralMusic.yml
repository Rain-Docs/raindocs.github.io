### YamlMime:ManagedReference
items:
- uid: Music.ProceduralMusic
  commentId: T:Music.ProceduralMusic
  id: ProceduralMusic
  parent: Music
  children:
  - Music.ProceduralMusic.#ctor(Music.MusicPlayer,System.String)
  - Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})
  - Music.ProceduralMusic.Reset
  - Music.ProceduralMusic.Update
  - Music.ProceduralMusic.audibleCounter
  - Music.ProceduralMusic.instruction
  - Music.ProceduralMusic.mushroomSubTrack
  - Music.ProceduralMusic.reScrambleOnNextSilence
  - Music.ProceduralMusic.remainInPanicMode
  - Music.ProceduralMusic.silentCounter
  langs:
  - csharp
  - vb
  name: ProceduralMusic
  nameWithType: ProceduralMusic
  fullName: Music.ProceduralMusic
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Music.ProceduralMusic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class ProceduralMusic : MusicPiece'
    content.vb: Public Class ProceduralMusic Inherits MusicPiece
  inheritance:
  - System.Object
  - Music.MusicPiece
  inheritedMembers:
  - Music.MusicPiece.musicPlayer
  - Music.MusicPiece.subTracks
  - Music.MusicPiece.startedPlaying
  - Music.MusicPiece.playWhenReady
  - Music.MusicPiece.name
  - Music.MusicPiece.volume
  - Music.MusicPiece.context
  - Music.MusicPiece.StartPlaying
  - Music.MusicPiece.StopAndDestroy
  - Music.MusicPiece.IsProcedural
  - Music.MusicPiece.Loop
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Music.ProceduralMusic.instruction
  commentId: F:Music.ProceduralMusic.instruction
  id: instruction
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: instruction
  nameWithType: ProceduralMusic.instruction
  fullName: Music.ProceduralMusic.instruction
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.instruction</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProceduralMusic.ProceduralMusicInstruction instruction
    return:
      type: Music.ProceduralMusic.ProceduralMusicInstruction
    content.vb: Public instruction As ProceduralMusic.ProceduralMusicInstruction
- uid: Music.ProceduralMusic.audibleCounter
  commentId: F:Music.ProceduralMusic.audibleCounter
  id: audibleCounter
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: audibleCounter
  nameWithType: ProceduralMusic.audibleCounter
  fullName: Music.ProceduralMusic.audibleCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.audibleCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int audibleCounter
    return:
      type: System.Int32
    content.vb: Public audibleCounter As Integer
- uid: Music.ProceduralMusic.silentCounter
  commentId: F:Music.ProceduralMusic.silentCounter
  id: silentCounter
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: silentCounter
  nameWithType: ProceduralMusic.silentCounter
  fullName: Music.ProceduralMusic.silentCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.silentCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int silentCounter
    return:
      type: System.Int32
    content.vb: Public silentCounter As Integer
- uid: Music.ProceduralMusic.reScrambleOnNextSilence
  commentId: F:Music.ProceduralMusic.reScrambleOnNextSilence
  id: reScrambleOnNextSilence
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: reScrambleOnNextSilence
  nameWithType: ProceduralMusic.reScrambleOnNextSilence
  fullName: Music.ProceduralMusic.reScrambleOnNextSilence
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.reScrambleOnNextSilence</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool reScrambleOnNextSilence
    return:
      type: System.Boolean
    content.vb: Public reScrambleOnNextSilence As Boolean
- uid: Music.ProceduralMusic.remainInPanicMode
  commentId: F:Music.ProceduralMusic.remainInPanicMode
  id: remainInPanicMode
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: remainInPanicMode
  nameWithType: ProceduralMusic.remainInPanicMode
  fullName: Music.ProceduralMusic.remainInPanicMode
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.remainInPanicMode</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<bool> remainInPanicMode
    return:
      type: System.Collections.Generic.List{System.Boolean}
    content.vb: Public remainInPanicMode As List(Of Boolean)
- uid: Music.ProceduralMusic.mushroomSubTrack
  commentId: F:Music.ProceduralMusic.mushroomSubTrack
  id: mushroomSubTrack
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: mushroomSubTrack
  nameWithType: ProceduralMusic.mushroomSubTrack
  fullName: Music.ProceduralMusic.mushroomSubTrack
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Music.ProceduralMusic.mushroomSubTrack</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<bool> mushroomSubTrack
    return:
      type: System.Collections.Generic.List{System.Boolean}
    content.vb: Public mushroomSubTrack As List(Of Boolean)
- uid: Music.ProceduralMusic.#ctor(Music.MusicPlayer,System.String)
  commentId: M:Music.ProceduralMusic.#ctor(Music.MusicPlayer,System.String)
  id: '#ctor(Music.MusicPlayer,System.String)'
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: ProceduralMusic(MusicPlayer, string)
  nameWithType: ProceduralMusic.ProceduralMusic(MusicPlayer, string)
  fullName: Music.ProceduralMusic.ProceduralMusic(Music.MusicPlayer, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Music.ProceduralMusic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ProceduralMusic(MusicPlayer musicPlayer, string name)
    parameters:
    - id: musicPlayer
      type: Music.MusicPlayer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>musicPlayer</parameter>
            <parameter>M:Music.ProceduralMusic.#ctor(Music.MusicPlayer,System.String)</parameter>
          </include>
        </markup>
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:Music.ProceduralMusic.#ctor(Music.MusicPlayer,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(musicPlayer As MusicPlayer, name As String)
  overload: Music.ProceduralMusic.#ctor*
  nameWithType.vb: ProceduralMusic.New(MusicPlayer, String)
  fullName.vb: Music.ProceduralMusic.New(Music.MusicPlayer, String)
  name.vb: New(MusicPlayer, String)
- uid: Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})
  commentId: M:Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})
  id: BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: BuildThreatLayerPool(List<Track>, List<Track>)
  nameWithType: ProceduralMusic.BuildThreatLayerPool(List<ProceduralMusic.ProceduralMusicInstruction.Track>, List<ProceduralMusic.ProceduralMusicInstruction.Track>)
  fullName: Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List<Music.ProceduralMusic.ProceduralMusicInstruction.Track>, System.Collections.Generic.List<Music.ProceduralMusic.ProceduralMusicInstruction.Track>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ProceduralMusic.ProceduralMusicInstruction.Track> BuildThreatLayerPool(List<ProceduralMusic.ProceduralMusicInstruction.Track> tracks, List<ProceduralMusic.ProceduralMusicInstruction.Track> alreadyUsedTracks)
    parameters:
    - id: tracks
      type: System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>tracks</parameter>
            <parameter>M:Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})</parameter>
          </include>
        </markup>
    - id: alreadyUsedTracks
      type: System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alreadyUsedTracks</parameter>
            <parameter>M:Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})</parameter>
          </include>
        </markup>
    return:
      type: System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track}
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track},System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track})</parameter>
          </include>
        </markup>
    content.vb: Public Function BuildThreatLayerPool(tracks As List(Of ProceduralMusic.ProceduralMusicInstruction.Track), alreadyUsedTracks As List(Of ProceduralMusic.ProceduralMusicInstruction.Track)) As List(Of ProceduralMusic.ProceduralMusicInstruction.Track)
  overload: Music.ProceduralMusic.BuildThreatLayerPool*
  nameWithType.vb: ProceduralMusic.BuildThreatLayerPool(List(Of ProceduralMusic.ProceduralMusicInstruction.Track), List(Of ProceduralMusic.ProceduralMusicInstruction.Track))
  fullName.vb: Music.ProceduralMusic.BuildThreatLayerPool(System.Collections.Generic.List(Of Music.ProceduralMusic.ProceduralMusicInstruction.Track), System.Collections.Generic.List(Of Music.ProceduralMusic.ProceduralMusicInstruction.Track))
  name.vb: BuildThreatLayerPool(List(Of Track), List(Of Track))
- uid: Music.ProceduralMusic.Reset
  commentId: M:Music.ProceduralMusic.Reset
  id: Reset
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: ProceduralMusic.Reset()
  fullName: Music.ProceduralMusic.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.ProceduralMusic.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Music.ProceduralMusic.Reset*
- uid: Music.ProceduralMusic.Update
  commentId: M:Music.ProceduralMusic.Update
  id: Update
  parent: Music.ProceduralMusic
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: ProceduralMusic.Update()
  fullName: Music.ProceduralMusic.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Music
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Music.ProceduralMusic.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update()
    content.vb: Public Overrides Sub Update()
  overridden: Music.MusicPiece.Update
  overload: Music.ProceduralMusic.Update*
references:
- uid: Music
  commentId: N:Music
  isExternal: true
  href: Music.html
  name: Music
  nameWithType: Music
  fullName: Music
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Music.MusicPiece
  commentId: T:Music.MusicPiece
  parent: Music
  isExternal: true
  href: Music.MusicPiece.html
  name: MusicPiece
  nameWithType: MusicPiece
  fullName: Music.MusicPiece
- uid: Music.MusicPiece.musicPlayer
  commentId: F:Music.MusicPiece.musicPlayer
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_musicPlayer
  name: musicPlayer
  nameWithType: MusicPiece.musicPlayer
  fullName: Music.MusicPiece.musicPlayer
- uid: Music.MusicPiece.subTracks
  commentId: F:Music.MusicPiece.subTracks
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_subTracks
  name: subTracks
  nameWithType: MusicPiece.subTracks
  fullName: Music.MusicPiece.subTracks
- uid: Music.MusicPiece.startedPlaying
  commentId: F:Music.MusicPiece.startedPlaying
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_startedPlaying
  name: startedPlaying
  nameWithType: MusicPiece.startedPlaying
  fullName: Music.MusicPiece.startedPlaying
- uid: Music.MusicPiece.playWhenReady
  commentId: F:Music.MusicPiece.playWhenReady
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_playWhenReady
  name: playWhenReady
  nameWithType: MusicPiece.playWhenReady
  fullName: Music.MusicPiece.playWhenReady
- uid: Music.MusicPiece.name
  commentId: F:Music.MusicPiece.name
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_name
  name: name
  nameWithType: MusicPiece.name
  fullName: Music.MusicPiece.name
- uid: Music.MusicPiece.volume
  commentId: F:Music.MusicPiece.volume
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_volume
  name: volume
  nameWithType: MusicPiece.volume
  fullName: Music.MusicPiece.volume
- uid: Music.MusicPiece.context
  commentId: F:Music.MusicPiece.context
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_context
  name: context
  nameWithType: MusicPiece.context
  fullName: Music.MusicPiece.context
- uid: Music.MusicPiece.StartPlaying
  commentId: M:Music.MusicPiece.StartPlaying
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  name: StartPlaying()
  nameWithType: MusicPiece.StartPlaying()
  fullName: Music.MusicPiece.StartPlaying()
  spec.csharp:
  - uid: Music.MusicPiece.StartPlaying
    name: StartPlaying
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.StartPlaying
    name: StartPlaying
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StartPlaying
  - name: (
  - name: )
- uid: Music.MusicPiece.StopAndDestroy
  commentId: M:Music.MusicPiece.StopAndDestroy
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  name: StopAndDestroy()
  nameWithType: MusicPiece.StopAndDestroy()
  fullName: Music.MusicPiece.StopAndDestroy()
  spec.csharp:
  - uid: Music.MusicPiece.StopAndDestroy
    name: StopAndDestroy
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.StopAndDestroy
    name: StopAndDestroy
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_StopAndDestroy
  - name: (
  - name: )
- uid: Music.MusicPiece.IsProcedural
  commentId: P:Music.MusicPiece.IsProcedural
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_IsProcedural
  name: IsProcedural
  nameWithType: MusicPiece.IsProcedural
  fullName: Music.MusicPiece.IsProcedural
- uid: Music.MusicPiece.Loop
  commentId: P:Music.MusicPiece.Loop
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_Loop
  name: Loop
  nameWithType: MusicPiece.Loop
  fullName: Music.MusicPiece.Loop
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Music.ProceduralMusic.ProceduralMusicInstruction
  commentId: T:Music.ProceduralMusic.ProceduralMusicInstruction
  parent: Music
  isExternal: true
  href: Music.ProceduralMusic.html
  name: ProceduralMusic.ProceduralMusicInstruction
  nameWithType: ProceduralMusic.ProceduralMusicInstruction
  fullName: Music.ProceduralMusic.ProceduralMusicInstruction
  spec.csharp:
  - uid: Music.ProceduralMusic
    name: ProceduralMusic
    isExternal: true
    href: Music.ProceduralMusic.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction
    name: ProceduralMusicInstruction
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.html
  spec.vb:
  - uid: Music.ProceduralMusic
    name: ProceduralMusic
    isExternal: true
    href: Music.ProceduralMusic.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction
    name: ProceduralMusicInstruction
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Collections.Generic.List{System.Boolean}
  commentId: T:System.Collections.Generic.List{System.Boolean}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<bool>
  nameWithType: List<bool>
  fullName: System.Collections.Generic.List<bool>
  nameWithType.vb: List(Of Boolean)
  fullName.vb: System.Collections.Generic.List(Of Boolean)
  name.vb: List(Of Boolean)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Music.ProceduralMusic.#ctor*
  commentId: Overload:Music.ProceduralMusic.#ctor
  isExternal: true
  href: Music.ProceduralMusic.html#Music_ProceduralMusic__ctor_Music_MusicPlayer_System_String_
  name: ProceduralMusic
  nameWithType: ProceduralMusic.ProceduralMusic
  fullName: Music.ProceduralMusic.ProceduralMusic
  nameWithType.vb: ProceduralMusic.New
  fullName.vb: Music.ProceduralMusic.New
  name.vb: New
- uid: Music.MusicPlayer
  commentId: T:Music.MusicPlayer
  parent: Music
  isExternal: true
  href: Music.MusicPlayer.html
  name: MusicPlayer
  nameWithType: MusicPlayer
  fullName: Music.MusicPlayer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Music.ProceduralMusic.BuildThreatLayerPool*
  commentId: Overload:Music.ProceduralMusic.BuildThreatLayerPool
  isExternal: true
  href: Music.ProceduralMusic.html#Music_ProceduralMusic_BuildThreatLayerPool_System_Collections_Generic_List_Music_ProceduralMusic_ProceduralMusicInstruction_Track__System_Collections_Generic_List_Music_ProceduralMusic_ProceduralMusicInstruction_Track__
  name: BuildThreatLayerPool
  nameWithType: ProceduralMusic.BuildThreatLayerPool
  fullName: Music.ProceduralMusic.BuildThreatLayerPool
- uid: System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track}
  commentId: T:System.Collections.Generic.List{Music.ProceduralMusic.ProceduralMusicInstruction.Track}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ProceduralMusic.ProceduralMusicInstruction.Track>
  nameWithType: List<ProceduralMusic.ProceduralMusicInstruction.Track>
  fullName: System.Collections.Generic.List<Music.ProceduralMusic.ProceduralMusicInstruction.Track>
  nameWithType.vb: List(Of ProceduralMusic.ProceduralMusicInstruction.Track)
  fullName.vb: System.Collections.Generic.List(Of Music.ProceduralMusic.ProceduralMusicInstruction.Track)
  name.vb: List(Of ProceduralMusic.ProceduralMusicInstruction.Track)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Music.ProceduralMusic
    name: ProceduralMusic
    isExternal: true
    href: Music.ProceduralMusic.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction
    name: ProceduralMusicInstruction
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track
    name: Track
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.Track.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Music.ProceduralMusic
    name: ProceduralMusic
    isExternal: true
    href: Music.ProceduralMusic.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction
    name: ProceduralMusicInstruction
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.html
  - name: .
  - uid: Music.ProceduralMusic.ProceduralMusicInstruction.Track
    name: Track
    isExternal: true
    href: Music.ProceduralMusic.ProceduralMusicInstruction.Track.html
  - name: )
- uid: Music.ProceduralMusic.Reset*
  commentId: Overload:Music.ProceduralMusic.Reset
  isExternal: true
  href: Music.ProceduralMusic.html#Music_ProceduralMusic_Reset
  name: Reset
  nameWithType: ProceduralMusic.Reset
  fullName: Music.ProceduralMusic.Reset
- uid: Music.MusicPiece.Update
  commentId: M:Music.MusicPiece.Update
  parent: Music.MusicPiece
  isExternal: true
  href: Music.MusicPiece.html#Music_MusicPiece_Update
  name: Update()
  nameWithType: MusicPiece.Update()
  fullName: Music.MusicPiece.Update()
  spec.csharp:
  - uid: Music.MusicPiece.Update
    name: Update
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_Update
  - name: (
  - name: )
  spec.vb:
  - uid: Music.MusicPiece.Update
    name: Update
    isExternal: true
    href: Music.MusicPiece.html#Music_MusicPiece_Update
  - name: (
  - name: )
- uid: Music.ProceduralMusic.Update*
  commentId: Overload:Music.ProceduralMusic.Update
  isExternal: true
  href: Music.ProceduralMusic.html#Music_ProceduralMusic_Update
  name: Update
  nameWithType: ProceduralMusic.Update
  fullName: Music.ProceduralMusic.Update
