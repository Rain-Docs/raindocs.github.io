### YamlMime:ManagedReference
items:
- uid: Global.Room
  commentId: T:Global.Room
  id: Room
  parent: Global
  children:
  - Global.Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)
  - Global.Room.AddObject(UpdatableAndDeletable)
  - Global.Room.AddSnow
  - Global.Room.AddWater
  - Global.Room.AnyWarpPointBeingActivated
  - Global.Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)
  - Global.Room.BackgroundNoise
  - Global.Room.BeingViewed
  - Global.Room.BlinkShortCut(System.Int32,System.Int32,System.Single)
  - Global.Room.CameraViewingNode(System.Int32)
  - Global.Room.CameraViewingPoint(UnityEngine.Vector2)
  - Global.Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)
  - Global.Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)
  - Global.Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)
  - Global.Room.Darkness(UnityEngine.Vector2)
  - Global.Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)
  - Global.Room.DefaultTile
  - Global.Room.DestroyObject(EntityID)
  - Global.Room.DetermineSafeSpawnTile(Room)
  - Global.Room.DetermineSafeSpawnTile(Room,System.Boolean)
  - Global.Room.DustStormIntensity
  - Global.Room.ElectricPower
  - Global.Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)
  - Global.Room.FloatWaterLevel(UnityEngine.Vector2)
  - Global.Room.GetTile(RWCustom.IntVector2)
  - Global.Room.GetTile(System.Int32,System.Int32)
  - Global.Room.GetTile(UnityEngine.Vector2)
  - Global.Room.GetTile(WorldCoordinate)
  - Global.Room.GetTilePosition(UnityEngine.Vector2)
  - Global.Room.GetWorldCoordinate(RWCustom.IntVector2)
  - Global.Room.GetWorldCoordinate(UnityEngine.Vector2)
  - Global.Room.HasAnySolid(RWCustom.IntVector2)
  - Global.Room.HasAnySolid(System.Int32,System.Int32)
  - Global.Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)
  - Global.Room.IdentifySlope(RWCustom.IntVector2)
  - Global.Room.IdentifySlope(System.Int32,System.Int32)
  - Global.Room.IdentifySlope(UnityEngine.Vector2)
  - Global.Room.InGameNoise(Noise.InGameNoise)
  - Global.Room.InfectRoomWithSentientRot(System.Single)
  - Global.Room.InitializeSentientRotPresenceInRoom(System.Single)
  - Global.Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)
  - Global.Room.IsCornerFree(System.Int32,System.Int32,System.Int32)
  - Global.Room.IsGateRoom
  - Global.Room.IsPositionInsideBoundries(RWCustom.IntVector2)
  - Global.Room.LightSourceColor(UnityEngine.Vector2)
  - Global.Room.LightSourceExposure(UnityEngine.Vector2)
  - Global.Room.LoadFromDataString(System.String[])
  - Global.Room.Loaded
  - Global.Room.LocalCoordinateOfNode(System.Int32)
  - Global.Room.MakeBackgroundNoise(System.Single)
  - Global.Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)
  - Global.Room.MiddleOfTile(RWCustom.IntVector2)
  - Global.Room.MiddleOfTile(System.Int32,System.Int32)
  - Global.Room.MiddleOfTile(UnityEngine.Vector2)
  - Global.Room.MiddleOfTile(WorldCoordinate)
  - Global.Room.NewMessageInRoom(System.String,System.Int32)
  - Global.Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)
  - Global.Room.NoLongerViewed
  - Global.Room.NowViewed
  - Global.Room.PERTILEVISALIZER
  - Global.Room.PausedUpdate
  - Global.Room.PixelHeight
  - Global.Room.PixelWidth
  - Global.Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)
  - Global.Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)
  - Global.Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  - Global.Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  - Global.Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)
  - Global.Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)
  - Global.Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)
  - Global.Room.PlaySound(SoundID)
  - Global.Room.PlaySound(SoundID,BodyChunk)
  - Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)
  - Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)
  - Global.Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  - Global.Room.PlaySound(SoundID,System.Single,System.Single,System.Single)
  - Global.Room.PlaySound(SoundID,UnityEngine.Vector2)
  - Global.Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)
  - Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  - Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)
  - Global.Room.PlayersInRoom
  - Global.Room.PointDeferred(UnityEngine.Vector2)
  - Global.Room.PointSubmerged(UnityEngine.Vector2)
  - Global.Room.PointSubmerged(UnityEngine.Vector2,System.Single)
  - Global.Room.RainDrownOutSounds
  - Global.Room.RandomPos
  - Global.Room.RandomTile
  - Global.Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)
  - Global.Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)
  - Global.Room.ReadyForAI
  - Global.Room.ReadyForPlayer
  - Global.Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  - Global.Room.RemoveObject(UpdatableAndDeletable)
  - Global.Room.RoomRect
  - Global.Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)
  - Global.Room.SetAbstractRoom(AbstractRoom)
  - Global.Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)
  - Global.Room.SetLightBeamBlink(LightBeam,System.Int32)
  - Global.Room.SetLightSourceBlink(LightSource,System.Int32)
  - Global.Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)
  - Global.Room.ShortCutsReady
  - Global.Room.ShortcutLeadingToNode(System.Int32)
  - Global.Room.ShouldBeDeferred(UpdatableAndDeletable)
  - Global.Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  - Global.Room.SpawnMultiplayerItem(PlacedObject)
  - Global.Room.StaticGetTilePosition(Unity.Mathematics.float2)
  - Global.Room.StaticGetTilePosition(UnityEngine.Vector2)
  - Global.Room.SwarmerCount
  - Global.Room.TileHeight
  - Global.Room.TileRect(RWCustom.IntVector2)
  - Global.Room.TileWidth
  - Global.Room.Tiles
  - Global.Room.ToWorldCoordinate(RWCustom.IntVector2)
  - Global.Room.ToWorldCoordinate(UnityEngine.Vector2)
  - Global.Room.TriggerCombatArena
  - Global.Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)
  - Global.Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)
  - Global.Room.Unloaded
  - Global.Room.Update
  - Global.Room.UpdateSentientRotEffect
  - Global.Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)
  - Global.Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)
  - Global.Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)
  - Global.Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)
  - Global.Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.Room.VisualContact(WorldCoordinate,WorldCoordinate)
  - Global.Room.WaterLevelDisplacement(UnityEngine.Vector2)
  - Global.Room.WaterShinyness(UnityEngine.Vector2,System.Single)
  - Global.Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)
  - Global.Room.abstractRoom
  - Global.Room.accessModifiers
  - Global.Room.aimap
  - Global.Room.blizzard
  - Global.Room.blizzardGraphics
  - Global.Room.blizzardHeatSources
  - Global.Room.borderExits
  - Global.Room.brainMold
  - Global.Room.cameraPositions
  - Global.Room.camerasChangedTick
  - Global.Room.ceilingTiles
  - Global.Room.cellDistortions
  - Global.Room.chunkGlue
  - Global.Room.climbableVines
  - Global.Room.cntr
  - Global.Room.cosmeticLightSources
  - Global.Room.cosmeticRipples
  - Global.Room.darkenLightsFactor
  - Global.Room.deathFallFocalPoints
  - Global.Room.deathFallGraphic
  - Global.Room.defaultWaterLevel
  - Global.Room.deferred
  - Global.Room.didFirstSentientRotUpdate
  - Global.Room.drawableObjects
  - Global.Room.dustStorm
  - Global.Room.energySwirls
  - Global.Room.exitAndDenIndex
  - Global.Room.fliesRoomAi
  - Global.Room.fsRipple
  - Global.Room.fullyLoaded
  - Global.Room.game
  - Global.Room.gameOverRoom
  - Global.Room.garbageHoles
  - Global.Room.generateLightmap
  - Global.Room.gravity
  - Global.Room.hives
  - Global.Room.insectCoordinator
  - Global.Room.lastWaterGlitterCycle
  - Global.Room.lethalThunderStorm
  - Global.Room.lightAngle
  - Global.Room.lightSources
  - Global.Room.lightning
  - Global.Room.lightningMachines
  - Global.Room.lightningMaker
  - Global.Room.loadingProgress
  - Global.Room.localBlizzards
  - Global.Room.lockedShortcuts
  - Global.Room.locusts
  - Global.Room.noCurrentZones
  - Global.Room.oeSpheres
  - Global.Room.oracleWantToSpawn
  - Global.Room.physicalObjects
  - Global.Room.quantifiedCreaturesPlaced
  - Global.Room.quickPather
  - Global.Room.readyForAI
  - Global.Room.readyForNonAICreaturesToEnter
  - Global.Room.regionGate
  - Global.Room.ripple
  - Global.Room.rippleCreatureTracker
  - Global.Room.roomRain
  - Global.Room.roomSettings
  - Global.Room.rotPresenceInitialized
  - Global.Room.sandstorm
  - Global.Room.shelterDoor
  - Global.Room.shortCutsReady
  - Global.Room.shortcutData(RWCustom.IntVector2)
  - Global.Room.shortcutData(UnityEngine.Vector2)
  - Global.Room.shortcuts
  - Global.Room.shortcutsBlinking
  - Global.Room.shortcutsIndex
  - Global.Room.snow
  - Global.Room.snowObject
  - Global.Room.snowSources
  - Global.Room.socialEventRecognizer
  - Global.Room.spawnInRoomItems
  - Global.Room.spawnedSpinningTop
  - Global.Room.syncTicker
  - Global.Room.terrain
  - Global.Room.timeAdder
  - Global.Room.timeDivider
  - Global.Room.updateList
  - Global.Room.urbanLifeBlurSpawned
  - Global.Room.urbanLifeCount
  - Global.Room.visionObscurers
  - Global.Room.voidSpawns
  - Global.Room.waitToEnterAfterFullyLoaded
  - Global.Room.warpPoints
  - Global.Room.water
  - Global.Room.waterFalls
  - Global.Room.waterFlux
  - Global.Room.waterGlitterCycle
  - Global.Room.waterInFrontOfTerrain
  - Global.Room.waterInverted
  - Global.Room.waterObject
  - Global.Room.windDirection
  - Global.Room.world
  - Global.Room.zapCoils
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: Room
  fullName: Room
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: A realized room instance.
  example: []
  syntax:
    content: public class Room
    content.vb: Public Class Room
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Room.accessModifiers
  commentId: F:Global.Room.accessModifiers
  id: accessModifiers
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: accessModifiers
  nameWithType: Room.accessModifiers
  fullName: Room.accessModifiers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.accessModifiers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IAccessibilityModifier> accessModifiers
    return:
      type: System.Collections.Generic.List{IAccessibilityModifier}
    content.vb: Public accessModifiers As List(Of IAccessibilityModifier)
- uid: Global.Room.shortcutsBlinking
  commentId: F:Global.Room.shortcutsBlinking
  id: shortcutsBlinking
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortcutsBlinking
  nameWithType: Room.shortcutsBlinking
  fullName: Room.shortcutsBlinking
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.shortcutsBlinking</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] shortcutsBlinking
    return:
      type: System.Single[,]
    content.vb: Public shortcutsBlinking As Single(,)
- uid: Global.Room.hives
  commentId: F:Global.Room.hives
  id: hives
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: hives
  nameWithType: Room.hives
  fullName: Room.hives
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.hives</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[][] hives
    return:
      type: RWCustom.IntVector2[][]
    content.vb: Public hives As IntVector2()()
- uid: Global.Room.garbageHoles
  commentId: F:Global.Room.garbageHoles
  id: garbageHoles
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: garbageHoles
  nameWithType: Room.garbageHoles
  fullName: Room.garbageHoles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.garbageHoles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] garbageHoles
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public garbageHoles As IntVector2()
- uid: Global.Room.spawnInRoomItems
  commentId: F:Global.Room.spawnInRoomItems
  id: spawnInRoomItems
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: spawnInRoomItems
  nameWithType: Room.spawnInRoomItems
  fullName: Room.spawnInRoomItems
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.spawnInRoomItems</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] spawnInRoomItems
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public spawnInRoomItems As IntVector2()
- uid: Global.Room.waterFalls
  commentId: F:Global.Room.waterFalls
  id: waterFalls
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterFalls
  nameWithType: Room.waterFalls
  fullName: Room.waterFalls
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterFalls</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WaterFall[] waterFalls
    return:
      type: Global.WaterFall[]
    content.vb: Public waterFalls As WaterFall()
- uid: Global.Room.borderExits
  commentId: F:Global.Room.borderExits
  id: borderExits
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: borderExits
  nameWithType: Room.borderExits
  fullName: Room.borderExits
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.borderExits</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomBorderExit[] borderExits
    return:
      type: Global.RoomBorderExit[]
    content.vb: Public borderExits As RoomBorderExit()
- uid: Global.Room.lightSources
  commentId: F:Global.Room.lightSources
  id: lightSources
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lightSources
  nameWithType: Room.lightSources
  fullName: Room.lightSources
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lightSources</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<LightSource> lightSources
    return:
      type: System.Collections.Generic.List{LightSource}
    content.vb: Public lightSources As List(Of LightSource)
- uid: Global.Room.visionObscurers
  commentId: F:Global.Room.visionObscurers
  id: visionObscurers
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: visionObscurers
  nameWithType: Room.visionObscurers
  fullName: Room.visionObscurers
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.visionObscurers</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<VisionObscurer> visionObscurers
    return:
      type: System.Collections.Generic.List{VisionObscurer}
    content.vb: Public visionObscurers As List(Of VisionObscurer)
- uid: Global.Room.noCurrentZones
  commentId: F:Global.Room.noCurrentZones
  id: noCurrentZones
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: noCurrentZones
  nameWithType: Room.noCurrentZones
  fullName: Room.noCurrentZones
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.noCurrentZones</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PlacedObject> noCurrentZones
    return:
      type: System.Collections.Generic.List{PlacedObject}
    content.vb: Public noCurrentZones As List(Of PlacedObject)
- uid: Global.Room.gameOverRoom
  commentId: F:Global.Room.gameOverRoom
  id: gameOverRoom
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: gameOverRoom
  nameWithType: Room.gameOverRoom
  fullName: Room.gameOverRoom
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.gameOverRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool gameOverRoom
    return:
      type: System.Boolean
    content.vb: Public gameOverRoom As Boolean
- uid: Global.Room.deathFallGraphic
  commentId: F:Global.Room.deathFallGraphic
  id: deathFallGraphic
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: deathFallGraphic
  nameWithType: Room.deathFallGraphic
  fullName: Room.deathFallGraphic
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.deathFallGraphic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DeathFallGraphic deathFallGraphic
    return:
      type: Global.DeathFallGraphic
    content.vb: Public deathFallGraphic As DeathFallGraphic
- uid: Global.Room.lightning
  commentId: F:Global.Room.lightning
  id: lightning
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lightning
  nameWithType: Room.lightning
  fullName: Room.lightning
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lightning</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lightning lightning
    return:
      type: Global.Lightning
    content.vb: Public lightning As Lightning
- uid: Global.Room.lightningMaker
  commentId: F:Global.Room.lightningMaker
  id: lightningMaker
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lightningMaker
  nameWithType: Room.lightningMaker
  fullName: Room.lightningMaker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lightningMaker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightningMaker lightningMaker
    return:
      type: Watcher.LightningMaker
    content.vb: Public lightningMaker As LightningMaker
- uid: Global.Room.lethalThunderStorm
  commentId: F:Global.Room.lethalThunderStorm
  id: lethalThunderStorm
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lethalThunderStorm
  nameWithType: Room.lethalThunderStorm
  fullName: Room.lethalThunderStorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lethalThunderStorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LethalThunderStorm lethalThunderStorm
    return:
      type: Watcher.LethalThunderStorm
    content.vb: Public lethalThunderStorm As LethalThunderStorm
- uid: Global.Room.rippleCreatureTracker
  commentId: F:Global.Room.rippleCreatureTracker
  id: rippleCreatureTracker
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: rippleCreatureTracker
  nameWithType: Room.rippleCreatureTracker
  fullName: Room.rippleCreatureTracker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.rippleCreatureTracker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RippleCreatureTracker rippleCreatureTracker
    return:
      type: Global.RippleCreatureTracker
    content.vb: Public rippleCreatureTracker As RippleCreatureTracker
- uid: Global.Room.chunkGlue
  commentId: F:Global.Room.chunkGlue
  id: chunkGlue
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: chunkGlue
  nameWithType: Room.chunkGlue
  fullName: Room.chunkGlue
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.chunkGlue</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ChunkGlue> chunkGlue
    return:
      type: System.Collections.Generic.List{ChunkGlue}
    content.vb: Public chunkGlue As List(Of ChunkGlue)
- uid: Global.Room.roomSettings
  commentId: F:Global.Room.roomSettings
  id: roomSettings
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: roomSettings
  nameWithType: Room.roomSettings
  fullName: Room.roomSettings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.roomSettings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomSettings roomSettings
    return:
      type: Global.RoomSettings
    content.vb: Public roomSettings As RoomSettings
- uid: Global.Room.Tiles
  commentId: F:Global.Room.Tiles
  id: Tiles
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Tiles
  nameWithType: Room.Tiles
  fullName: Room.Tiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.Tiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile[,] Tiles
    return:
      type: Global.Room.Tile[,]
    content.vb: Public Tiles As Room.Tile(,)
- uid: Global.Room.DefaultTile
  commentId: F:Global.Room.DefaultTile
  id: DefaultTile
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DefaultTile
  nameWithType: Room.DefaultTile
  fullName: Room.DefaultTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.DefaultTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile DefaultTile
    return:
      type: Global.Room.Tile
    content.vb: Public DefaultTile As Room.Tile
- uid: Global.Room.physicalObjects
  commentId: F:Global.Room.physicalObjects
  id: physicalObjects
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: physicalObjects
  nameWithType: Room.physicalObjects
  fullName: Room.physicalObjects
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.physicalObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<PhysicalObject>[] physicalObjects
    return:
      type: System.Collections.Generic.List{PhysicalObject}[]
    content.vb: Public physicalObjects As List(Of PhysicalObject)()
- uid: Global.Room.game
  commentId: F:Global.Room.game
  id: game
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: game
  nameWithType: Room.game
  fullName: Room.game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainWorldGame game
    return:
      type: Global.RainWorldGame
    content.vb: Public game As RainWorldGame
- uid: Global.Room.world
  commentId: F:Global.Room.world
  id: world
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: world
  nameWithType: Room.world
  fullName: Room.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.Room.aimap
  commentId: F:Global.Room.aimap
  id: aimap
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: aimap
  nameWithType: Room.aimap
  fullName: Room.aimap
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.aimap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AImap aimap
    return:
      type: Global.AImap
    content.vb: Public aimap As AImap
- uid: Global.Room.socialEventRecognizer
  commentId: F:Global.Room.socialEventRecognizer
  id: socialEventRecognizer
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: socialEventRecognizer
  nameWithType: Room.socialEventRecognizer
  fullName: Room.socialEventRecognizer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.socialEventRecognizer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SocialEventRecognizer socialEventRecognizer
    return:
      type: Global.SocialEventRecognizer
    content.vb: Public socialEventRecognizer As SocialEventRecognizer
- uid: Global.Room.quickPather
  commentId: F:Global.Room.quickPather
  id: quickPather
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: quickPather
  nameWithType: Room.quickPather
  fullName: Room.quickPather
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.quickPather</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public QuickPathFinder quickPather
    return:
      type: Global.QuickPathFinder
    content.vb: Public quickPather As QuickPathFinder
- uid: Global.Room.exitAndDenIndex
  commentId: F:Global.Room.exitAndDenIndex
  id: exitAndDenIndex
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: exitAndDenIndex
  nameWithType: Room.exitAndDenIndex
  fullName: Room.exitAndDenIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.exitAndDenIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] exitAndDenIndex
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public exitAndDenIndex As IntVector2()
- uid: Global.Room.shortcutsIndex
  commentId: F:Global.Room.shortcutsIndex
  id: shortcutsIndex
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortcutsIndex
  nameWithType: Room.shortcutsIndex
  fullName: Room.shortcutsIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.shortcutsIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] shortcutsIndex
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public shortcutsIndex As IntVector2()
- uid: Global.Room.shortcuts
  commentId: F:Global.Room.shortcuts
  id: shortcuts
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortcuts
  nameWithType: Room.shortcuts
  fullName: Room.shortcuts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.shortcuts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData[] shortcuts
    return:
      type: Global.ShortcutData[]
    content.vb: Public shortcuts As ShortcutData()
- uid: Global.Room.lockedShortcuts
  commentId: F:Global.Room.lockedShortcuts
  id: lockedShortcuts
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lockedShortcuts
  nameWithType: Room.lockedShortcuts
  fullName: Room.lockedShortcuts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lockedShortcuts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IntVector2> lockedShortcuts
    return:
      type: System.Collections.Generic.List{RWCustom.IntVector2}
    content.vb: Public lockedShortcuts As List(Of IntVector2)
- uid: Global.Room.cameraPositions
  commentId: F:Global.Room.cameraPositions
  id: cameraPositions
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: cameraPositions
  nameWithType: Room.cameraPositions
  fullName: Room.cameraPositions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.cameraPositions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[] cameraPositions
    return:
      type: UnityEngine.Vector2[]
    content.vb: Public cameraPositions As Vector2()
- uid: Global.Room.camerasChangedTick
  commentId: F:Global.Room.camerasChangedTick
  id: camerasChangedTick
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: camerasChangedTick
  nameWithType: Room.camerasChangedTick
  fullName: Room.camerasChangedTick
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.camerasChangedTick</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int camerasChangedTick
    return:
      type: System.Int32
    content.vb: Public camerasChangedTick As Integer
- uid: Global.Room.lightAngle
  commentId: F:Global.Room.lightAngle
  id: lightAngle
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lightAngle
  nameWithType: Room.lightAngle
  fullName: Room.lightAngle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lightAngle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 lightAngle
    return:
      type: UnityEngine.Vector2
    content.vb: Public lightAngle As Vector2
- uid: Global.Room.loadingProgress
  commentId: F:Global.Room.loadingProgress
  id: loadingProgress
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: loadingProgress
  nameWithType: Room.loadingProgress
  fullName: Room.loadingProgress
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.loadingProgress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int loadingProgress
    return:
      type: System.Int32
    content.vb: Public loadingProgress As Integer
- uid: Global.Room.readyForNonAICreaturesToEnter
  commentId: F:Global.Room.readyForNonAICreaturesToEnter
  id: readyForNonAICreaturesToEnter
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: readyForNonAICreaturesToEnter
  nameWithType: Room.readyForNonAICreaturesToEnter
  fullName: Room.readyForNonAICreaturesToEnter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.readyForNonAICreaturesToEnter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyForNonAICreaturesToEnter
    return:
      type: System.Boolean
    content.vb: Public readyForNonAICreaturesToEnter As Boolean
- uid: Global.Room.waitToEnterAfterFullyLoaded
  commentId: F:Global.Room.waitToEnterAfterFullyLoaded
  id: waitToEnterAfterFullyLoaded
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waitToEnterAfterFullyLoaded
  nameWithType: Room.waitToEnterAfterFullyLoaded
  fullName: Room.waitToEnterAfterFullyLoaded
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waitToEnterAfterFullyLoaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int waitToEnterAfterFullyLoaded
    return:
      type: System.Int32
    content.vb: Public waitToEnterAfterFullyLoaded As Integer
- uid: Global.Room.climbableVines
  commentId: F:Global.Room.climbableVines
  id: climbableVines
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: climbableVines
  nameWithType: Room.climbableVines
  fullName: Room.climbableVines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.climbableVines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ClimbableVinesSystem climbableVines
    return:
      type: Global.ClimbableVinesSystem
    content.vb: Public climbableVines As ClimbableVinesSystem
- uid: Global.Room.insectCoordinator
  commentId: F:Global.Room.insectCoordinator
  id: insectCoordinator
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: insectCoordinator
  nameWithType: Room.insectCoordinator
  fullName: Room.insectCoordinator
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.insectCoordinator</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public InsectCoordinator insectCoordinator
    return:
      type: Global.InsectCoordinator
    content.vb: Public insectCoordinator As InsectCoordinator
- uid: Global.Room.terrain
  commentId: F:Global.Room.terrain
  id: terrain
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: terrain
  nameWithType: Room.terrain
  fullName: Room.terrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.terrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public TerrainCurve terrain
    return:
      type: Global.TerrainCurve
    content.vb: Public terrain As TerrainCurve
- uid: Global.Room.locusts
  commentId: F:Global.Room.locusts
  id: locusts
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: locusts
  nameWithType: Room.locusts
  fullName: Room.locusts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.locusts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LocustSystem locusts
    return:
      type: Global.LocustSystem
    content.vb: Public locusts As LocustSystem
- uid: Global.Room.fliesRoomAi
  commentId: F:Global.Room.fliesRoomAi
  id: fliesRoomAi
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: fliesRoomAi
  nameWithType: Room.fliesRoomAi
  fullName: Room.fliesRoomAi
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.fliesRoomAi</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FliesRoomAI fliesRoomAi
    return:
      type: Global.FliesRoomAI
    content.vb: Public fliesRoomAi As FliesRoomAI
- uid: Global.Room.ceilingTiles
  commentId: F:Global.Room.ceilingTiles
  id: ceilingTiles
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ceilingTiles
  nameWithType: Room.ceilingTiles
  fullName: Room.ceilingTiles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.ceilingTiles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2[] ceilingTiles
    return:
      type: RWCustom.IntVector2[]
    content.vb: Public ceilingTiles As IntVector2()
- uid: Global.Room.gravity
  commentId: F:Global.Room.gravity
  id: gravity
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: gravity
  nameWithType: Room.gravity
  fullName: Room.gravity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.gravity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float gravity
    return:
      type: System.Single
    content.vb: Public gravity As Single
- uid: Global.Room.PERTILEVISALIZER
  commentId: F:Global.Room.PERTILEVISALIZER
  id: PERTILEVISALIZER
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PERTILEVISALIZER
  nameWithType: Room.PERTILEVISALIZER
  fullName: Room.PERTILEVISALIZER
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.PERTILEVISALIZER</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DebugPerTileVisualizer PERTILEVISALIZER
    return:
      type: Global.DebugPerTileVisualizer
    content.vb: Public PERTILEVISALIZER As DebugPerTileVisualizer
- uid: Global.Room.waterGlitterCycle
  commentId: F:Global.Room.waterGlitterCycle
  id: waterGlitterCycle
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterGlitterCycle
  nameWithType: Room.waterGlitterCycle
  fullName: Room.waterGlitterCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterGlitterCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float waterGlitterCycle
    return:
      type: System.Single
    content.vb: Public waterGlitterCycle As Single
- uid: Global.Room.lastWaterGlitterCycle
  commentId: F:Global.Room.lastWaterGlitterCycle
  id: lastWaterGlitterCycle
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lastWaterGlitterCycle
  nameWithType: Room.lastWaterGlitterCycle
  fullName: Room.lastWaterGlitterCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lastWaterGlitterCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastWaterGlitterCycle
    return:
      type: System.Single
    content.vb: Public lastWaterGlitterCycle As Single
- uid: Global.Room.waterObject
  commentId: F:Global.Room.waterObject
  id: waterObject
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterObject
  nameWithType: Room.waterObject
  fullName: Room.waterObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Water waterObject
    return:
      type: Global.Water
    content.vb: Public waterObject As Water
- uid: Global.Room.water
  commentId: F:Global.Room.water
  id: water
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: water
  nameWithType: Room.water
  fullName: Room.water
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.water</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool water
    return:
      type: System.Boolean
    content.vb: Public water As Boolean
- uid: Global.Room.defaultWaterLevel
  commentId: F:Global.Room.defaultWaterLevel
  id: defaultWaterLevel
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: defaultWaterLevel
  nameWithType: Room.defaultWaterLevel
  fullName: Room.defaultWaterLevel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.defaultWaterLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int defaultWaterLevel
    return:
      type: System.Int32
    content.vb: Public defaultWaterLevel As Integer
- uid: Global.Room.waterInFrontOfTerrain
  commentId: F:Global.Room.waterInFrontOfTerrain
  id: waterInFrontOfTerrain
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterInFrontOfTerrain
  nameWithType: Room.waterInFrontOfTerrain
  fullName: Room.waterInFrontOfTerrain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterInFrontOfTerrain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool waterInFrontOfTerrain
    return:
      type: System.Boolean
    content.vb: Public waterInFrontOfTerrain As Boolean
- uid: Global.Room.regionGate
  commentId: F:Global.Room.regionGate
  id: regionGate
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: regionGate
  nameWithType: Room.regionGate
  fullName: Room.regionGate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.regionGate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RegionGate regionGate
    return:
      type: Global.RegionGate
    content.vb: Public regionGate As RegionGate
- uid: Global.Room.shelterDoor
  commentId: F:Global.Room.shelterDoor
  id: shelterDoor
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shelterDoor
  nameWithType: Room.shelterDoor
  fullName: Room.shelterDoor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.shelterDoor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShelterDoor shelterDoor
    return:
      type: Global.ShelterDoor
    content.vb: Public shelterDoor As ShelterDoor
- uid: Global.Room.brainMold
  commentId: F:Global.Room.brainMold
  id: brainMold
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: brainMold
  nameWithType: Room.brainMold
  fullName: Room.brainMold
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.brainMold</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BrainMold brainMold
    return:
      type: Global.BrainMold
    content.vb: Public brainMold As BrainMold
- uid: Global.Room.spawnedSpinningTop
  commentId: F:Global.Room.spawnedSpinningTop
  id: spawnedSpinningTop
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: spawnedSpinningTop
  nameWithType: Room.spawnedSpinningTop
  fullName: Room.spawnedSpinningTop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.spawnedSpinningTop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool spawnedSpinningTop
    return:
      type: System.Boolean
    content.vb: Public spawnedSpinningTop As Boolean
- uid: Global.Room.rotPresenceInitialized
  commentId: F:Global.Room.rotPresenceInitialized
  id: rotPresenceInitialized
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: rotPresenceInitialized
  nameWithType: Room.rotPresenceInitialized
  fullName: Room.rotPresenceInitialized
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.rotPresenceInitialized</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool rotPresenceInitialized
    return:
      type: System.Boolean
    content.vb: Public rotPresenceInitialized As Boolean
- uid: Global.Room.didFirstSentientRotUpdate
  commentId: F:Global.Room.didFirstSentientRotUpdate
  id: didFirstSentientRotUpdate
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: didFirstSentientRotUpdate
  nameWithType: Room.didFirstSentientRotUpdate
  fullName: Room.didFirstSentientRotUpdate
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.didFirstSentientRotUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool didFirstSentientRotUpdate
    return:
      type: System.Boolean
    content.vb: Public didFirstSentientRotUpdate As Boolean
- uid: Global.Room.roomRain
  commentId: F:Global.Room.roomRain
  id: roomRain
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: roomRain
  nameWithType: Room.roomRain
  fullName: Room.roomRain
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.roomRain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RoomRain roomRain
    return:
      type: Global.RoomRain
    content.vb: Public roomRain As RoomRain
- uid: Global.Room.sandstorm
  commentId: F:Global.Room.sandstorm
  id: sandstorm
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: sandstorm
  nameWithType: Room.sandstorm
  fullName: Room.sandstorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.sandstorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Sandstorm sandstorm
    return:
      type: Watcher.Sandstorm
    content.vb: Public sandstorm As Sandstorm
- uid: Global.Room.timeAdder
  commentId: F:Global.Room.timeAdder
  id: timeAdder
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: timeAdder
  nameWithType: Room.timeAdder
  fullName: Room.timeAdder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.timeAdder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public long timeAdder
    return:
      type: System.Int64
    content.vb: Public timeAdder As Long
- uid: Global.Room.timeDivider
  commentId: F:Global.Room.timeDivider
  id: timeDivider
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: timeDivider
  nameWithType: Room.timeDivider
  fullName: Room.timeDivider
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.timeDivider</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timeDivider
    return:
      type: System.Int32
    content.vb: Public timeDivider As Integer
- uid: Global.Room.cntr
  commentId: F:Global.Room.cntr
  id: cntr
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: cntr
  nameWithType: Room.cntr
  fullName: Room.cntr
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.cntr</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int cntr
    return:
      type: System.Int32
    content.vb: Public cntr As Integer
- uid: Global.Room.lightningMachines
  commentId: F:Global.Room.lightningMachines
  id: lightningMachines
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: lightningMachines
  nameWithType: Room.lightningMachines
  fullName: Room.lightningMachines
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.lightningMachines</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<LightningMachine> lightningMachines
    return:
      type: System.Collections.Generic.List{MoreSlugcats.LightningMachine}
    content.vb: Public lightningMachines As List(Of LightningMachine)
- uid: Global.Room.energySwirls
  commentId: F:Global.Room.energySwirls
  id: energySwirls
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: energySwirls
  nameWithType: Room.energySwirls
  fullName: Room.energySwirls
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.energySwirls</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<EnergySwirl> energySwirls
    return:
      type: System.Collections.Generic.List{MoreSlugcats.EnergySwirl}
    content.vb: Public energySwirls As List(Of EnergySwirl)
- uid: Global.Room.snowSources
  commentId: F:Global.Room.snowSources
  id: snowSources
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: snowSources
  nameWithType: Room.snowSources
  fullName: Room.snowSources
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.snowSources</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<SnowSource> snowSources
    return:
      type: System.Collections.Generic.List{MoreSlugcats.SnowSource}
    content.vb: Public snowSources As List(Of SnowSource)
- uid: Global.Room.localBlizzards
  commentId: F:Global.Room.localBlizzards
  id: localBlizzards
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: localBlizzards
  nameWithType: Room.localBlizzards
  fullName: Room.localBlizzards
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.localBlizzards</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<LocalBlizzard> localBlizzards
    return:
      type: System.Collections.Generic.List{MoreSlugcats.LocalBlizzard}
    content.vb: Public localBlizzards As List(Of LocalBlizzard)
- uid: Global.Room.deathFallFocalPoints
  commentId: F:Global.Room.deathFallFocalPoints
  id: deathFallFocalPoints
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: deathFallFocalPoints
  nameWithType: Room.deathFallFocalPoints
  fullName: Room.deathFallFocalPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.deathFallFocalPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Vector2> deathFallFocalPoints
    return:
      type: System.Collections.Generic.List{UnityEngine.Vector2}
    content.vb: Public deathFallFocalPoints As List(Of Vector2)
- uid: Global.Room.cellDistortions
  commentId: F:Global.Room.cellDistortions
  id: cellDistortions
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: cellDistortions
  nameWithType: Room.cellDistortions
  fullName: Room.cellDistortions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.cellDistortions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<CellDistortion> cellDistortions
    return:
      type: System.Collections.Generic.List{MoreSlugcats.CellDistortion}
    content.vb: Public cellDistortions As List(Of CellDistortion)
- uid: Global.Room.snowObject
  commentId: F:Global.Room.snowObject
  id: snowObject
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: snowObject
  nameWithType: Room.snowObject
  fullName: Room.snowObject
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.snowObject</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Snow snowObject
    return:
      type: MoreSlugcats.Snow
    content.vb: Public snowObject As Snow
- uid: Global.Room.snow
  commentId: F:Global.Room.snow
  id: snow
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: snow
  nameWithType: Room.snow
  fullName: Room.snow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.snow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool snow
    return:
      type: System.Boolean
    content.vb: Public snow As Boolean
- uid: Global.Room.blizzardGraphics
  commentId: F:Global.Room.blizzardGraphics
  id: blizzardGraphics
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: blizzardGraphics
  nameWithType: Room.blizzardGraphics
  fullName: Room.blizzardGraphics
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.blizzardGraphics</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BlizzardGraphics blizzardGraphics
    return:
      type: MoreSlugcats.BlizzardGraphics
    content.vb: Public blizzardGraphics As BlizzardGraphics
- uid: Global.Room.blizzard
  commentId: F:Global.Room.blizzard
  id: blizzard
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: blizzard
  nameWithType: Room.blizzard
  fullName: Room.blizzard
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.blizzard</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool blizzard
    return:
      type: System.Boolean
    content.vb: Public blizzard As Boolean
- uid: Global.Room.waterFlux
  commentId: F:Global.Room.waterFlux
  id: waterFlux
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterFlux
  nameWithType: Room.waterFlux
  fullName: Room.waterFlux
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterFlux</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.WaterFluxController waterFlux
    return:
      type: Global.Room.WaterFluxController
    content.vb: Public waterFlux As Room.WaterFluxController
- uid: Global.Room.blizzardHeatSources
  commentId: F:Global.Room.blizzardHeatSources
  id: blizzardHeatSources
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: blizzardHeatSources
  nameWithType: Room.blizzardHeatSources
  fullName: Room.blizzardHeatSources
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.blizzardHeatSources</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IProvideWarmth> blizzardHeatSources
    return:
      type: System.Collections.Generic.List{MoreSlugcats.IProvideWarmth}
    content.vb: Public blizzardHeatSources As List(Of IProvideWarmth)
- uid: Global.Room.cosmeticLightSources
  commentId: F:Global.Room.cosmeticLightSources
  id: cosmeticLightSources
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: cosmeticLightSources
  nameWithType: Room.cosmeticLightSources
  fullName: Room.cosmeticLightSources
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.cosmeticLightSources</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<LightSource> cosmeticLightSources
    return:
      type: System.Collections.Generic.List{LightSource}
    content.vb: Public cosmeticLightSources As List(Of LightSource)
- uid: Global.Room.zapCoils
  commentId: F:Global.Room.zapCoils
  id: zapCoils
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: zapCoils
  nameWithType: Room.zapCoils
  fullName: Room.zapCoils
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.zapCoils</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ZapCoil> zapCoils
    return:
      type: System.Collections.Generic.List{ZapCoil}
    content.vb: Public zapCoils As List(Of ZapCoil)
- uid: Global.Room.oeSpheres
  commentId: F:Global.Room.oeSpheres
  id: oeSpheres
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: oeSpheres
  nameWithType: Room.oeSpheres
  fullName: Room.oeSpheres
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.oeSpheres</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<OEsphere> oeSpheres
    return:
      type: System.Collections.Generic.List{MoreSlugcats.OEsphere}
    content.vb: Public oeSpheres As List(Of OEsphere)
- uid: Global.Room.darkenLightsFactor
  commentId: F:Global.Room.darkenLightsFactor
  id: darkenLightsFactor
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: darkenLightsFactor
  nameWithType: Room.darkenLightsFactor
  fullName: Room.darkenLightsFactor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.darkenLightsFactor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float darkenLightsFactor
    return:
      type: System.Single
    content.vb: Public darkenLightsFactor As Single
- uid: Global.Room.syncTicker
  commentId: F:Global.Room.syncTicker
  id: syncTicker
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: syncTicker
  nameWithType: Room.syncTicker
  fullName: Room.syncTicker
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.syncTicker</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int syncTicker
    return:
      type: System.Int32
    content.vb: Public syncTicker As Integer
- uid: Global.Room.dustStorm
  commentId: F:Global.Room.dustStorm
  id: dustStorm
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: dustStorm
  nameWithType: Room.dustStorm
  fullName: Room.dustStorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.dustStorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool dustStorm
    return:
      type: System.Boolean
    content.vb: Public dustStorm As Boolean
- uid: Global.Room.waterInverted
  commentId: F:Global.Room.waterInverted
  id: waterInverted
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: waterInverted
  nameWithType: Room.waterInverted
  fullName: Room.waterInverted
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.waterInverted</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool waterInverted
    return:
      type: System.Boolean
    content.vb: Public waterInverted As Boolean
- uid: Global.Room.deferred
  commentId: F:Global.Room.deferred
  id: deferred
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: deferred
  nameWithType: Room.deferred
  fullName: Room.deferred
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.deferred</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deferred
    return:
      type: System.Boolean
    content.vb: Public deferred As Boolean
- uid: Global.Room.SwarmerCount
  commentId: F:Global.Room.SwarmerCount
  id: SwarmerCount
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SwarmerCount
  nameWithType: Room.SwarmerCount
  fullName: Room.SwarmerCount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.SwarmerCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SwarmerCount
    return:
      type: System.Int32
    content.vb: Public SwarmerCount As Integer
- uid: Global.Room.oracleWantToSpawn
  commentId: F:Global.Room.oracleWantToSpawn
  id: oracleWantToSpawn
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: oracleWantToSpawn
  nameWithType: Room.oracleWantToSpawn
  fullName: Room.oracleWantToSpawn
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.oracleWantToSpawn</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Oracle.OracleID oracleWantToSpawn
    return:
      type: Global.Oracle.OracleID
    content.vb: Public oracleWantToSpawn As Oracle.OracleID
- uid: Global.Room.ripple
  commentId: F:Global.Room.ripple
  id: ripple
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ripple
  nameWithType: Room.ripple
  fullName: Room.ripple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.ripple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ripple
    return:
      type: System.Boolean
    content.vb: Public ripple As Boolean
- uid: Global.Room.fsRipple
  commentId: F:Global.Room.fsRipple
  id: fsRipple
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: fsRipple
  nameWithType: Room.fsRipple
  fullName: Room.fsRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.fsRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RippleFullScreen fsRipple
    return:
      type: Watcher.RippleFullScreen
    content.vb: Public fsRipple As RippleFullScreen
- uid: Global.Room.cosmeticRipples
  commentId: F:Global.Room.cosmeticRipples
  id: cosmeticRipples
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: cosmeticRipples
  nameWithType: Room.cosmeticRipples
  fullName: Room.cosmeticRipples
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.cosmeticRipples</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<CosmeticRipple> cosmeticRipples
    return:
      type: System.Collections.Generic.List{Watcher.CosmeticRipple}
    content.vb: Public cosmeticRipples As List(Of CosmeticRipple)
- uid: Global.Room.warpPoints
  commentId: F:Global.Room.warpPoints
  id: warpPoints
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: warpPoints
  nameWithType: Room.warpPoints
  fullName: Room.warpPoints
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.warpPoints</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<WarpPoint> warpPoints
    return:
      type: System.Collections.Generic.List{Watcher.WarpPoint}
    content.vb: Public warpPoints As List(Of WarpPoint)
- uid: Global.Room.urbanLifeCount
  commentId: F:Global.Room.urbanLifeCount
  id: urbanLifeCount
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: urbanLifeCount
  nameWithType: Room.urbanLifeCount
  fullName: Room.urbanLifeCount
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.urbanLifeCount</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int urbanLifeCount
    return:
      type: System.Int32
    content.vb: Public urbanLifeCount As Integer
- uid: Global.Room.urbanLifeBlurSpawned
  commentId: F:Global.Room.urbanLifeBlurSpawned
  id: urbanLifeBlurSpawned
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: urbanLifeBlurSpawned
  nameWithType: Room.urbanLifeBlurSpawned
  fullName: Room.urbanLifeBlurSpawned
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.urbanLifeBlurSpawned</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool urbanLifeBlurSpawned
    return:
      type: System.Boolean
    content.vb: Public urbanLifeBlurSpawned As Boolean
- uid: Global.Room.voidSpawns
  commentId: F:Global.Room.voidSpawns
  id: voidSpawns
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: voidSpawns
  nameWithType: Room.voidSpawns
  fullName: Room.voidSpawns
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.voidSpawns</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<VoidSpawn> voidSpawns
    return:
      type: System.Collections.Generic.List{VoidSpawn}
    content.vb: Public voidSpawns As List(Of VoidSpawn)
- uid: Global.Room.generateLightmap
  commentId: F:Global.Room.generateLightmap
  id: generateLightmap
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: generateLightmap
  nameWithType: Room.generateLightmap
  fullName: Room.generateLightmap
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Room.generateLightmap</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool generateLightmap
    return:
      type: System.Boolean
    content.vb: Public generateLightmap As Boolean
- uid: Global.Room.SetAbstractRoom(AbstractRoom)
  commentId: M:Global.Room.SetAbstractRoom(AbstractRoom)
  id: SetAbstractRoom(AbstractRoom)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SetAbstractRoom(AbstractRoom)
  nameWithType: Room.SetAbstractRoom(AbstractRoom)
  fullName: Room.SetAbstractRoom(AbstractRoom)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SetAbstractRoom(AbstractRoom)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetAbstractRoom(AbstractRoom newAbstractRoom)
    parameters:
    - id: newAbstractRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newAbstractRoom</parameter>
            <parameter>M:Room.SetAbstractRoom(AbstractRoom)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetAbstractRoom(newAbstractRoom As AbstractRoom)
  overload: Global.Room.SetAbstractRoom*
- uid: Global.Room.RandomTile
  commentId: M:Global.Room.RandomTile
  id: RandomTile
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RandomTile()
  nameWithType: Room.RandomTile()
  fullName: Room.RandomTile()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.RandomTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 RandomTile()
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.RandomTile</parameter>
          </include>
        </markup>
    content.vb: Public Function RandomTile() As IntVector2
  overload: Global.Room.RandomTile*
- uid: Global.Room.RandomPos
  commentId: M:Global.Room.RandomPos
  id: RandomPos
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RandomPos()
  nameWithType: Room.RandomPos()
  fullName: Room.RandomPos()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.RandomPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 RandomPos()
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.RandomPos</parameter>
          </include>
        </markup>
    content.vb: Public Function RandomPos() As Vector2
  overload: Global.Room.RandomPos*
- uid: Global.Room.MakeBackgroundNoise(System.Single)
  commentId: M:Global.Room.MakeBackgroundNoise(System.Single)
  id: MakeBackgroundNoise(System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MakeBackgroundNoise(float)
  nameWithType: Room.MakeBackgroundNoise(float)
  fullName: Room.MakeBackgroundNoise(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MakeBackgroundNoise(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MakeBackgroundNoise(float noise)
    parameters:
    - id: noise
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>noise</parameter>
            <parameter>M:Room.MakeBackgroundNoise(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MakeBackgroundNoise(noise As Single)
  overload: Global.Room.MakeBackgroundNoise*
  nameWithType.vb: Room.MakeBackgroundNoise(Single)
  fullName.vb: Room.MakeBackgroundNoise(Single)
  name.vb: MakeBackgroundNoise(Single)
- uid: Global.Room.FloatWaterLevel(UnityEngine.Vector2)
  commentId: M:Global.Room.FloatWaterLevel(UnityEngine.Vector2)
  id: FloatWaterLevel(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: FloatWaterLevel(Vector2)
  nameWithType: Room.FloatWaterLevel(Vector2)
  fullName: Room.FloatWaterLevel(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.FloatWaterLevel(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float FloatWaterLevel(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.FloatWaterLevel(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.FloatWaterLevel(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function FloatWaterLevel(pos As Vector2) As Single
  overload: Global.Room.FloatWaterLevel*
- uid: Global.Room.PointSubmerged(UnityEngine.Vector2)
  commentId: M:Global.Room.PointSubmerged(UnityEngine.Vector2)
  id: PointSubmerged(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PointSubmerged(Vector2)
  nameWithType: Room.PointSubmerged(Vector2)
  fullName: Room.PointSubmerged(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PointSubmerged(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PointSubmerged(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PointSubmerged(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PointSubmerged(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function PointSubmerged(pos As Vector2) As Boolean
  overload: Global.Room.PointSubmerged*
- uid: Global.Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)
  commentId: M:Global.Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)
  id: '#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)'
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Room(RainWorldGame, World, AbstractRoom, bool)
  nameWithType: Room.Room(RainWorldGame, World, AbstractRoom, bool)
  fullName: Room.Room(RainWorldGame, World, AbstractRoom, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room(RainWorldGame game, World world, AbstractRoom abstractRoom, bool devUI = false)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)</parameter>
          </include>
        </markup>
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)</parameter>
          </include>
        </markup>
    - id: abstractRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>abstractRoom</parameter>
            <parameter>M:Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)</parameter>
          </include>
        </markup>
    - id: devUI
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>devUI</parameter>
            <parameter>M:Room.#ctor(RainWorldGame,World,AbstractRoom,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(game As RainWorldGame, world As World, abstractRoom As AbstractRoom, devUI As Boolean = False)
  overload: Global.Room.#ctor*
  nameWithType.vb: Room.New(RainWorldGame, World, AbstractRoom, Boolean)
  fullName.vb: Room.New(RainWorldGame, World, AbstractRoom, Boolean)
  name.vb: New(RainWorldGame, World, AbstractRoom, Boolean)
- uid: Global.Room.AddWater
  commentId: M:Global.Room.AddWater
  id: AddWater
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: AddWater()
  nameWithType: Room.AddWater()
  fullName: Room.AddWater()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.AddWater</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddWater()
    content.vb: Public Sub AddWater()
  overload: Global.Room.AddWater*
- uid: Global.Room.Loaded
  commentId: M:Global.Room.Loaded
  id: Loaded
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Loaded()
  nameWithType: Room.Loaded()
  fullName: Room.Loaded()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.Loaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Loaded()
    content.vb: Public Sub Loaded()
  overload: Global.Room.Loaded*
- uid: Global.Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)
  commentId: M:Global.Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)
  id: AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: AssignOriginAndIteration(AbstractPhysicalObject, int)
  nameWithType: Room.AssignOriginAndIteration(AbstractPhysicalObject, int)
  fullName: Room.AssignOriginAndIteration(AbstractPhysicalObject, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AssignOriginAndIteration(AbstractPhysicalObject obj, int iterator)
    parameters:
    - id: obj
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    - id: iterator
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iterator</parameter>
            <parameter>M:Room.AssignOriginAndIteration(AbstractPhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AssignOriginAndIteration(obj As AbstractPhysicalObject, iterator As Integer)
  overload: Global.Room.AssignOriginAndIteration*
  nameWithType.vb: Room.AssignOriginAndIteration(AbstractPhysicalObject, Integer)
  fullName.vb: Room.AssignOriginAndIteration(AbstractPhysicalObject, Integer)
  name.vb: AssignOriginAndIteration(AbstractPhysicalObject, Integer)
- uid: Global.Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)
  commentId: M:Global.Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)
  id: SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SetAbstractRoomAndPlacedObjectNumber(string, int)
  nameWithType: Room.SetAbstractRoomAndPlacedObjectNumber(string, int)
  fullName: Room.SetAbstractRoomAndPlacedObjectNumber(string, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string SetAbstractRoomAndPlacedObjectNumber(string roomName, int iterator)
    parameters:
    - id: roomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>roomName</parameter>
            <parameter>M:Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: iterator
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>iterator</parameter>
            <parameter>M:Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.SetAbstractRoomAndPlacedObjectNumber(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SetAbstractRoomAndPlacedObjectNumber(roomName As String, iterator As Integer) As String
  overload: Global.Room.SetAbstractRoomAndPlacedObjectNumber*
  nameWithType.vb: Room.SetAbstractRoomAndPlacedObjectNumber(String, Integer)
  fullName.vb: Room.SetAbstractRoomAndPlacedObjectNumber(String, Integer)
  name.vb: SetAbstractRoomAndPlacedObjectNumber(String, Integer)
- uid: Global.Room.Unloaded
  commentId: M:Global.Room.Unloaded
  id: Unloaded
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Unloaded()
  nameWithType: Room.Unloaded()
  fullName: Room.Unloaded()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.Unloaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Unloaded()
    content.vb: Public Sub Unloaded()
  overload: Global.Room.Unloaded*
- uid: Global.Room.NowViewed
  commentId: M:Global.Room.NowViewed
  id: NowViewed
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: NowViewed()
  nameWithType: Room.NowViewed()
  fullName: Room.NowViewed()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.NowViewed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NowViewed()
    content.vb: Public Sub NowViewed()
  overload: Global.Room.NowViewed*
- uid: Global.Room.NoLongerViewed
  commentId: M:Global.Room.NoLongerViewed
  id: NoLongerViewed
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: NoLongerViewed()
  nameWithType: Room.NoLongerViewed()
  fullName: Room.NoLongerViewed()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.NoLongerViewed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NoLongerViewed()
    content.vb: Public Sub NoLongerViewed()
  overload: Global.Room.NoLongerViewed*
- uid: Global.Room.BlinkShortCut(System.Int32,System.Int32,System.Single)
  commentId: M:Global.Room.BlinkShortCut(System.Int32,System.Int32,System.Single)
  id: BlinkShortCut(System.Int32,System.Int32,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: BlinkShortCut(int, int, float)
  nameWithType: Room.BlinkShortCut(int, int, float)
  fullName: Room.BlinkShortCut(int, int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.BlinkShortCut(System.Int32,System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void BlinkShortCut(int shortcut, int secondary, float blinkFac)
    parameters:
    - id: shortcut
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shortcut</parameter>
            <parameter>M:Room.BlinkShortCut(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: secondary
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>secondary</parameter>
            <parameter>M:Room.BlinkShortCut(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: blinkFac
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>blinkFac</parameter>
            <parameter>M:Room.BlinkShortCut(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub BlinkShortCut(shortcut As Integer, secondary As Integer, blinkFac As Single)
  overload: Global.Room.BlinkShortCut*
  nameWithType.vb: Room.BlinkShortCut(Integer, Integer, Single)
  fullName.vb: Room.BlinkShortCut(Integer, Integer, Single)
  name.vb: BlinkShortCut(Integer, Integer, Single)
- uid: Global.Room.ShortCutsReady
  commentId: M:Global.Room.ShortCutsReady
  id: ShortCutsReady
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ShortCutsReady()
  nameWithType: Room.ShortCutsReady()
  fullName: Room.ShortCutsReady()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ShortCutsReady</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ShortCutsReady()
    content.vb: Public Sub ShortCutsReady()
  overload: Global.Room.ShortCutsReady*
- uid: Global.Room.ReadyForAI
  commentId: M:Global.Room.ReadyForAI
  id: ReadyForAI
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ReadyForAI()
  nameWithType: Room.ReadyForAI()
  fullName: Room.ReadyForAI()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ReadyForAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ReadyForAI()
    content.vb: Public Sub ReadyForAI()
  overload: Global.Room.ReadyForAI*
- uid: Global.Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:Global.Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)
  id: TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TrySpawnWarpPoint(PlacedObject, bool, bool, bool)
  nameWithType: Room.TrySpawnWarpPoint(PlacedObject, bool, bool, bool)
  fullName: Room.TrySpawnWarpPoint(PlacedObject, bool, bool, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WarpPoint TrySpawnWarpPoint(PlacedObject po, bool saveInRegionState, bool skipIfInRegionState, bool deathPersistent)
    parameters:
    - id: po
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>po</parameter>
            <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: saveInRegionState
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveInRegionState</parameter>
            <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: skipIfInRegionState
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>skipIfInRegionState</parameter>
            <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    - id: deathPersistent
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>deathPersistent</parameter>
            <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Watcher.WarpPoint
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.TrySpawnWarpPoint(PlacedObject,System.Boolean,System.Boolean,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function TrySpawnWarpPoint(po As PlacedObject, saveInRegionState As Boolean, skipIfInRegionState As Boolean, deathPersistent As Boolean) As WarpPoint
  overload: Global.Room.TrySpawnWarpPoint*
  nameWithType.vb: Room.TrySpawnWarpPoint(PlacedObject, Boolean, Boolean, Boolean)
  fullName.vb: Room.TrySpawnWarpPoint(PlacedObject, Boolean, Boolean, Boolean)
  name.vb: TrySpawnWarpPoint(PlacedObject, Boolean, Boolean, Boolean)
- uid: Global.Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)
  commentId: M:Global.Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)
  id: CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: CheckForSpawnedWarp(WarpPointData)
  nameWithType: Room.CheckForSpawnedWarp(WarpPoint.WarpPointData)
  fullName: Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WarpPoint CheckForSpawnedWarp(WarpPoint.WarpPointData data)
    parameters:
    - id: data
      type: Watcher.WarpPoint.WarpPointData
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>data</parameter>
            <parameter>M:Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)</parameter>
          </include>
        </markup>
    return:
      type: Watcher.WarpPoint
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.CheckForSpawnedWarp(Watcher.WarpPoint.WarpPointData)</parameter>
          </include>
        </markup>
    content.vb: Public Function CheckForSpawnedWarp(data As WarpPoint.WarpPointData) As WarpPoint
  overload: Global.Room.CheckForSpawnedWarp*
- uid: Global.Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)
  commentId: M:Global.Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)
  id: TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TrySpawnRippleRegion(PlacedObject, bool, bool, bool, string)
  nameWithType: Room.TrySpawnRippleRegion(PlacedObject, bool, bool, bool, string)
  fullName: Room.TrySpawnRippleRegion(PlacedObject, bool, bool, bool, string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CosmeticRipple TrySpawnRippleRegion(PlacedObject po, bool saveInRegionState, bool skipIfInRegionState, bool changeRippleState = true, string maskShaderOverride = null)
    parameters:
    - id: po
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>po</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: saveInRegionState
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveInRegionState</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: skipIfInRegionState
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>skipIfInRegionState</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: changeRippleState
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>changeRippleState</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    - id: maskShaderOverride
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maskShaderOverride</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    return:
      type: Watcher.CosmeticRipple
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.TrySpawnRippleRegion(PlacedObject,System.Boolean,System.Boolean,System.Boolean,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Function TrySpawnRippleRegion(po As PlacedObject, saveInRegionState As Boolean, skipIfInRegionState As Boolean, changeRippleState As Boolean = True, maskShaderOverride As String = Nothing) As CosmeticRipple
  overload: Global.Room.TrySpawnRippleRegion*
  nameWithType.vb: Room.TrySpawnRippleRegion(PlacedObject, Boolean, Boolean, Boolean, String)
  fullName.vb: Room.TrySpawnRippleRegion(PlacedObject, Boolean, Boolean, Boolean, String)
  name.vb: TrySpawnRippleRegion(PlacedObject, Boolean, Boolean, Boolean, String)
- uid: Global.Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)
  commentId: M:Global.Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)
  id: MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MaterializeRippleSpawn(Vector2, RippleSpawnSource)
  nameWithType: Room.MaterializeRippleSpawn(Vector2, Room.RippleSpawnSource)
  fullName: Room.MaterializeRippleSpawn(UnityEngine.Vector2, Room.RippleSpawnSource)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void MaterializeRippleSpawn(Vector2 spawnPos, Room.RippleSpawnSource source)
    parameters:
    - id: spawnPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>spawnPos</parameter>
            <parameter>M:Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)</parameter>
          </include>
        </markup>
    - id: source
      type: Global.Room.RippleSpawnSource
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>source</parameter>
            <parameter>M:Room.MaterializeRippleSpawn(UnityEngine.Vector2,Room.RippleSpawnSource)</parameter>
          </include>
        </markup>
    content.vb: Public Sub MaterializeRippleSpawn(spawnPos As Vector2, source As Room.RippleSpawnSource)
  overload: Global.Room.MaterializeRippleSpawn*
- uid: Global.Room.InfectRoomWithSentientRot(System.Single)
  commentId: M:Global.Room.InfectRoomWithSentientRot(System.Single)
  id: InfectRoomWithSentientRot(System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: InfectRoomWithSentientRot(float)
  nameWithType: Room.InfectRoomWithSentientRot(float)
  fullName: Room.InfectRoomWithSentientRot(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.InfectRoomWithSentientRot(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool InfectRoomWithSentientRot(float amount)
    parameters:
    - id: amount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>amount</parameter>
            <parameter>M:Room.InfectRoomWithSentientRot(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.InfectRoomWithSentientRot(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function InfectRoomWithSentientRot(amount As Single) As Boolean
  overload: Global.Room.InfectRoomWithSentientRot*
  nameWithType.vb: Room.InfectRoomWithSentientRot(Single)
  fullName.vb: Room.InfectRoomWithSentientRot(Single)
  name.vb: InfectRoomWithSentientRot(Single)
- uid: Global.Room.UpdateSentientRotEffect
  commentId: M:Global.Room.UpdateSentientRotEffect
  id: UpdateSentientRotEffect
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: UpdateSentientRotEffect()
  nameWithType: Room.UpdateSentientRotEffect()
  fullName: Room.UpdateSentientRotEffect()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.UpdateSentientRotEffect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void UpdateSentientRotEffect()
    content.vb: Public Sub UpdateSentientRotEffect()
  overload: Global.Room.UpdateSentientRotEffect*
- uid: Global.Room.InitializeSentientRotPresenceInRoom(System.Single)
  commentId: M:Global.Room.InitializeSentientRotPresenceInRoom(System.Single)
  id: InitializeSentientRotPresenceInRoom(System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: InitializeSentientRotPresenceInRoom(float)
  nameWithType: Room.InitializeSentientRotPresenceInRoom(float)
  fullName: Room.InitializeSentientRotPresenceInRoom(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.InitializeSentientRotPresenceInRoom(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitializeSentientRotPresenceInRoom(float amount)
    parameters:
    - id: amount
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>amount</parameter>
            <parameter>M:Room.InitializeSentientRotPresenceInRoom(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitializeSentientRotPresenceInRoom(amount As Single)
  overload: Global.Room.InitializeSentientRotPresenceInRoom*
  nameWithType.vb: Room.InitializeSentientRotPresenceInRoom(Single)
  fullName.vb: Room.InitializeSentientRotPresenceInRoom(Single)
  name.vb: InitializeSentientRotPresenceInRoom(Single)
- uid: Global.Room.AddObject(UpdatableAndDeletable)
  commentId: M:Global.Room.AddObject(UpdatableAndDeletable)
  id: AddObject(UpdatableAndDeletable)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: AddObject(UpdatableAndDeletable)
  nameWithType: Room.AddObject(UpdatableAndDeletable)
  fullName: Room.AddObject(UpdatableAndDeletable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.AddObject(UpdatableAndDeletable)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddObject(UpdatableAndDeletable obj)
    parameters:
    - id: obj
      type: Global.UpdatableAndDeletable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.AddObject(UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddObject(obj As UpdatableAndDeletable)
  overload: Global.Room.AddObject*
- uid: Global.Room.DestroyObject(EntityID)
  commentId: M:Global.Room.DestroyObject(EntityID)
  id: DestroyObject(EntityID)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DestroyObject(EntityID)
  nameWithType: Room.DestroyObject(EntityID)
  fullName: Room.DestroyObject(EntityID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.DestroyObject(EntityID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DestroyObject(EntityID ID)
    parameters:
    - id: ID
      type: Global.EntityID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ID</parameter>
            <parameter>M:Room.DestroyObject(EntityID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DestroyObject(ID As EntityID)
  overload: Global.Room.DestroyObject*
- uid: Global.Room.RemoveObject(UpdatableAndDeletable)
  commentId: M:Global.Room.RemoveObject(UpdatableAndDeletable)
  id: RemoveObject(UpdatableAndDeletable)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RemoveObject(UpdatableAndDeletable)
  nameWithType: Room.RemoveObject(UpdatableAndDeletable)
  fullName: Room.RemoveObject(UpdatableAndDeletable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.RemoveObject(UpdatableAndDeletable)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveObject(UpdatableAndDeletable obj)
    parameters:
    - id: obj
      type: Global.UpdatableAndDeletable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.RemoveObject(UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveObject(obj As UpdatableAndDeletable)
  overload: Global.Room.RemoveObject*
- uid: Global.Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)
  commentId: M:Global.Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)
  id: ChangeCollisionLayerForObject(PhysicalObject,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ChangeCollisionLayerForObject(PhysicalObject, int)
  nameWithType: Room.ChangeCollisionLayerForObject(PhysicalObject, int)
  fullName: Room.ChangeCollisionLayerForObject(PhysicalObject, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ChangeCollisionLayerForObject(PhysicalObject obj, int newLayer)
    parameters:
    - id: obj
      type: Global.PhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    - id: newLayer
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newLayer</parameter>
            <parameter>M:Room.ChangeCollisionLayerForObject(PhysicalObject,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ChangeCollisionLayerForObject(obj As PhysicalObject, newLayer As Integer)
  overload: Global.Room.ChangeCollisionLayerForObject*
  nameWithType.vb: Room.ChangeCollisionLayerForObject(PhysicalObject, Integer)
  fullName.vb: Room.ChangeCollisionLayerForObject(PhysicalObject, Integer)
  name.vb: ChangeCollisionLayerForObject(PhysicalObject, Integer)
- uid: Global.Room.Update
  commentId: M:Global.Room.Update
  id: Update
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Room.Update()
  fullName: Room.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Room.Update*
- uid: Global.Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  commentId: M:Global.Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  id: ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  nameWithType: Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  fullName: Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReallyTrulyRealizedInRoom(AbstractPhysicalObject obj)
    parameters:
    - id: obj
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ReallyTrulyRealizedInRoom(AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Function ReallyTrulyRealizedInRoom(obj As AbstractPhysicalObject) As Boolean
  overload: Global.Room.ReallyTrulyRealizedInRoom*
- uid: Global.Room.GetTilePosition(UnityEngine.Vector2)
  commentId: M:Global.Room.GetTilePosition(UnityEngine.Vector2)
  id: GetTilePosition(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetTilePosition(Vector2)
  nameWithType: Room.GetTilePosition(Vector2)
  fullName: Room.GetTilePosition(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetTilePosition(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 GetTilePosition(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetTilePosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetTilePosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTilePosition(pos As Vector2) As IntVector2
  overload: Global.Room.GetTilePosition*
- uid: Global.Room.StaticGetTilePosition(UnityEngine.Vector2)
  commentId: M:Global.Room.StaticGetTilePosition(UnityEngine.Vector2)
  id: StaticGetTilePosition(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: StaticGetTilePosition(Vector2)
  nameWithType: Room.StaticGetTilePosition(Vector2)
  fullName: Room.StaticGetTilePosition(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.StaticGetTilePosition(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 StaticGetTilePosition(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.StaticGetTilePosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.StaticGetTilePosition(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function StaticGetTilePosition(pos As Vector2) As IntVector2
  overload: Global.Room.StaticGetTilePosition*
- uid: Global.Room.StaticGetTilePosition(Unity.Mathematics.float2)
  commentId: M:Global.Room.StaticGetTilePosition(Unity.Mathematics.float2)
  id: StaticGetTilePosition(Unity.Mathematics.float2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: StaticGetTilePosition(float2)
  nameWithType: Room.StaticGetTilePosition(float2)
  fullName: Room.StaticGetTilePosition(Unity.Mathematics.float2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.StaticGetTilePosition(Unity.Mathematics.float2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int2 StaticGetTilePosition(float2 pos)
    parameters:
    - id: pos
      type: Unity.Mathematics.float2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.StaticGetTilePosition(Unity.Mathematics.float2)</parameter>
          </include>
        </markup>
    return:
      type: Unity.Mathematics.int2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.StaticGetTilePosition(Unity.Mathematics.float2)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function StaticGetTilePosition(pos As float2) As int2
  overload: Global.Room.StaticGetTilePosition*
- uid: Global.Room.GetWorldCoordinate(UnityEngine.Vector2)
  commentId: M:Global.Room.GetWorldCoordinate(UnityEngine.Vector2)
  id: GetWorldCoordinate(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetWorldCoordinate(Vector2)
  nameWithType: Room.GetWorldCoordinate(Vector2)
  fullName: Room.GetWorldCoordinate(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetWorldCoordinate(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate GetWorldCoordinate(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetWorldCoordinate(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetWorldCoordinate(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetWorldCoordinate(pos As Vector2) As WorldCoordinate
  overload: Global.Room.GetWorldCoordinate*
- uid: Global.Room.GetWorldCoordinate(RWCustom.IntVector2)
  commentId: M:Global.Room.GetWorldCoordinate(RWCustom.IntVector2)
  id: GetWorldCoordinate(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetWorldCoordinate(IntVector2)
  nameWithType: Room.GetWorldCoordinate(IntVector2)
  fullName: Room.GetWorldCoordinate(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetWorldCoordinate(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate GetWorldCoordinate(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetWorldCoordinate(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetWorldCoordinate(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetWorldCoordinate(pos As IntVector2) As WorldCoordinate
  overload: Global.Room.GetWorldCoordinate*
- uid: Global.Room.MiddleOfTile(System.Int32,System.Int32)
  commentId: M:Global.Room.MiddleOfTile(System.Int32,System.Int32)
  id: MiddleOfTile(System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MiddleOfTile(int, int)
  nameWithType: Room.MiddleOfTile(int, int)
  fullName: Room.MiddleOfTile(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MiddleOfTile(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MiddleOfTile(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Room.MiddleOfTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.MiddleOfTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.MiddleOfTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function MiddleOfTile(x As Integer, y As Integer) As Vector2
  overload: Global.Room.MiddleOfTile*
  nameWithType.vb: Room.MiddleOfTile(Integer, Integer)
  fullName.vb: Room.MiddleOfTile(Integer, Integer)
  name.vb: MiddleOfTile(Integer, Integer)
- uid: Global.Room.MiddleOfTile(RWCustom.IntVector2)
  commentId: M:Global.Room.MiddleOfTile(RWCustom.IntVector2)
  id: MiddleOfTile(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MiddleOfTile(IntVector2)
  nameWithType: Room.MiddleOfTile(IntVector2)
  fullName: Room.MiddleOfTile(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MiddleOfTile(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MiddleOfTile(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.MiddleOfTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.MiddleOfTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function MiddleOfTile(pos As IntVector2) As Vector2
  overload: Global.Room.MiddleOfTile*
- uid: Global.Room.MiddleOfTile(WorldCoordinate)
  commentId: M:Global.Room.MiddleOfTile(WorldCoordinate)
  id: MiddleOfTile(WorldCoordinate)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MiddleOfTile(WorldCoordinate)
  nameWithType: Room.MiddleOfTile(WorldCoordinate)
  fullName: Room.MiddleOfTile(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MiddleOfTile(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MiddleOfTile(WorldCoordinate coord)
    parameters:
    - id: coord
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coord</parameter>
            <parameter>M:Room.MiddleOfTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.MiddleOfTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function MiddleOfTile(coord As WorldCoordinate) As Vector2
  overload: Global.Room.MiddleOfTile*
- uid: Global.Room.MiddleOfTile(UnityEngine.Vector2)
  commentId: M:Global.Room.MiddleOfTile(UnityEngine.Vector2)
  id: MiddleOfTile(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: MiddleOfTile(Vector2)
  nameWithType: Room.MiddleOfTile(Vector2)
  fullName: Room.MiddleOfTile(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.MiddleOfTile(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 MiddleOfTile(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.MiddleOfTile(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.MiddleOfTile(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function MiddleOfTile(pos As Vector2) As Vector2
  overload: Global.Room.MiddleOfTile*
- uid: Global.Room.TileRect(RWCustom.IntVector2)
  commentId: M:Global.Room.TileRect(RWCustom.IntVector2)
  id: TileRect(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TileRect(IntVector2)
  nameWithType: Room.TileRect(IntVector2)
  fullName: Room.TileRect(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.TileRect(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatRect TileRect(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.TileRect(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.FloatRect
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.TileRect(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function TileRect(pos As IntVector2) As FloatRect
  overload: Global.Room.TileRect*
- uid: Global.Room.GetTile(UnityEngine.Vector2)
  commentId: M:Global.Room.GetTile(UnityEngine.Vector2)
  id: GetTile(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetTile(Vector2)
  nameWithType: Room.GetTile(Vector2)
  fullName: Room.GetTile(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetTile(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile GetTile(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetTile(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.Tile
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetTile(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTile(pos As Vector2) As Room.Tile
  overload: Global.Room.GetTile*
- uid: Global.Room.GetTile(RWCustom.IntVector2)
  commentId: M:Global.Room.GetTile(RWCustom.IntVector2)
  id: GetTile(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetTile(IntVector2)
  nameWithType: Room.GetTile(IntVector2)
  fullName: Room.GetTile(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetTile(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile GetTile(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.Tile
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetTile(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTile(pos As IntVector2) As Room.Tile
  overload: Global.Room.GetTile*
- uid: Global.Room.GetTile(WorldCoordinate)
  commentId: M:Global.Room.GetTile(WorldCoordinate)
  id: GetTile(WorldCoordinate)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetTile(WorldCoordinate)
  nameWithType: Room.GetTile(WorldCoordinate)
  fullName: Room.GetTile(WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetTile(WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile GetTile(WorldCoordinate pos)
    parameters:
    - id: pos
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.GetTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.Tile
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetTile(WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTile(pos As WorldCoordinate) As Room.Tile
  overload: Global.Room.GetTile*
- uid: Global.Room.GetTile(System.Int32,System.Int32)
  commentId: M:Global.Room.GetTile(System.Int32,System.Int32)
  id: GetTile(System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: GetTile(int, int)
  nameWithType: Room.GetTile(int, int)
  fullName: Room.GetTile(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.GetTile(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.Tile GetTile(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Room.GetTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.GetTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.Tile
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.GetTile(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetTile(x As Integer, y As Integer) As Room.Tile
  overload: Global.Room.GetTile*
  nameWithType.vb: Room.GetTile(Integer, Integer)
  fullName.vb: Room.GetTile(Integer, Integer)
  name.vb: GetTile(Integer, Integer)
- uid: Global.Room.HasAnySolid(RWCustom.IntVector2)
  commentId: M:Global.Room.HasAnySolid(RWCustom.IntVector2)
  id: HasAnySolid(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: HasAnySolid(IntVector2)
  nameWithType: Room.HasAnySolid(IntVector2)
  fullName: Room.HasAnySolid(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.HasAnySolid(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HasAnySolid(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.HasAnySolid(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.HasAnySolid(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function HasAnySolid(pos As IntVector2) As Boolean
  overload: Global.Room.HasAnySolid*
- uid: Global.Room.HasAnySolid(System.Int32,System.Int32)
  commentId: M:Global.Room.HasAnySolid(System.Int32,System.Int32)
  id: HasAnySolid(System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: HasAnySolid(int, int)
  nameWithType: Room.HasAnySolid(int, int)
  fullName: Room.HasAnySolid(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.HasAnySolid(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HasAnySolid(int x, int y)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Room.HasAnySolid(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.HasAnySolid(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.HasAnySolid(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function HasAnySolid(x As Integer, y As Integer) As Boolean
  overload: Global.Room.HasAnySolid*
  nameWithType.vb: Room.HasAnySolid(Integer, Integer)
  fullName.vb: Room.HasAnySolid(Integer, Integer)
  name.vb: HasAnySolid(Integer, Integer)
- uid: Global.Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)
  commentId: M:Global.Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)
  id: IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IsCornerFree(int, int, CornerLabel)
  nameWithType: Room.IsCornerFree(int, int, FloatRect.CornerLabel)
  fullName: Room.IsCornerFree(int, int, FloatRect.CornerLabel)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCornerFree(int x, int y, FloatRect.CornerLabel corner)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)</parameter>
          </include>
        </markup>
    - id: corner
      type: Global.FloatRect.CornerLabel
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>corner</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,FloatRect.CornerLabel)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsCornerFree(x As Integer, y As Integer, corner As FloatRect.CornerLabel) As Boolean
  overload: Global.Room.IsCornerFree*
  nameWithType.vb: Room.IsCornerFree(Integer, Integer, FloatRect.CornerLabel)
  fullName.vb: Room.IsCornerFree(Integer, Integer, FloatRect.CornerLabel)
  name.vb: IsCornerFree(Integer, Integer, CornerLabel)
- uid: Global.Room.IsCornerFree(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.Room.IsCornerFree(System.Int32,System.Int32,System.Int32)
  id: IsCornerFree(System.Int32,System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IsCornerFree(int, int, int)
  nameWithType: Room.IsCornerFree(int, int, int)
  fullName: Room.IsCornerFree(int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsCornerFree(int x, int y, int corner)
    parameters:
    - id: x
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: corner
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>corner</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IsCornerFree(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsCornerFree(x As Integer, y As Integer, corner As Integer) As Boolean
  overload: Global.Room.IsCornerFree*
  nameWithType.vb: Room.IsCornerFree(Integer, Integer, Integer)
  fullName.vb: Room.IsCornerFree(Integer, Integer, Integer)
  name.vb: IsCornerFree(Integer, Integer, Integer)
- uid: Global.Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)
  commentId: M:Global.Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)
  id: RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RayTraceTilesList(int, int, int, int, ref List<IntVector2>)
  nameWithType: Room.RayTraceTilesList(int, int, int, int, ref List<IntVector2>)
  fullName: Room.RayTraceTilesList(int, int, int, int, ref System.Collections.Generic.List<RWCustom.IntVector2>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int RayTraceTilesList(int x0, int y0, int x1, int y1, ref List<IntVector2> path)
    parameters:
    - id: x0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x0</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    - id: y0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y0</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    - id: x1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x1</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    - id: y1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y1</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    - id: path
      type: System.Collections.Generic.List{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>path</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.RayTraceTilesList(System.Int32,System.Int32,System.Int32,System.Int32,System.Collections.Generic.List{RWCustom.IntVector2}@)</parameter>
          </include>
        </markup>
    content.vb: Public Function RayTraceTilesList(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer, path As List(Of IntVector2)) As Integer
  overload: Global.Room.RayTraceTilesList*
  nameWithType.vb: Room.RayTraceTilesList(Integer, Integer, Integer, Integer, List(Of IntVector2))
  fullName.vb: Room.RayTraceTilesList(Integer, Integer, Integer, Integer, System.Collections.Generic.List(Of RWCustom.IntVector2))
  name.vb: RayTraceTilesList(Integer, Integer, Integer, Integer, List(Of IntVector2))
- uid: Global.Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:Global.Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)
  id: RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RayTraceTilesForTerrain(int, int, int, int)
  nameWithType: Room.RayTraceTilesForTerrain(int, int, int, int)
  fullName: Room.RayTraceTilesForTerrain(int, int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RayTraceTilesForTerrain(int x0, int y0, int x1, int y1)
    parameters:
    - id: x0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x0</parameter>
            <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y0
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y0</parameter>
            <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: x1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>x1</parameter>
            <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: y1
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y1</parameter>
            <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.RayTraceTilesForTerrain(System.Int32,System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function RayTraceTilesForTerrain(x0 As Integer, y0 As Integer, x1 As Integer, y1 As Integer) As Boolean
  overload: Global.Room.RayTraceTilesForTerrain*
  nameWithType.vb: Room.RayTraceTilesForTerrain(Integer, Integer, Integer, Integer)
  fullName.vb: Room.RayTraceTilesForTerrain(Integer, Integer, Integer, Integer)
  name.vb: RayTraceTilesForTerrain(Integer, Integer, Integer, Integer)
- uid: Global.Room.IsPositionInsideBoundries(RWCustom.IntVector2)
  commentId: M:Global.Room.IsPositionInsideBoundries(RWCustom.IntVector2)
  id: IsPositionInsideBoundries(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IsPositionInsideBoundries(IntVector2)
  nameWithType: Room.IsPositionInsideBoundries(IntVector2)
  fullName: Room.IsPositionInsideBoundries(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IsPositionInsideBoundries(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsPositionInsideBoundries(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.IsPositionInsideBoundries(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IsPositionInsideBoundries(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function IsPositionInsideBoundries(pos As IntVector2) As Boolean
  overload: Global.Room.IsPositionInsideBoundries*
- uid: Global.Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)
  commentId: M:Global.Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)
  id: ShorcutEntranceHoleDirection(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ShorcutEntranceHoleDirection(IntVector2)
  nameWithType: Room.ShorcutEntranceHoleDirection(IntVector2)
  fullName: Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 ShorcutEntranceHoleDirection(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ShorcutEntranceHoleDirection(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShorcutEntranceHoleDirection(pos As IntVector2) As IntVector2
  overload: Global.Room.ShorcutEntranceHoleDirection*
- uid: Global.Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)
  commentId: M:Global.Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)
  id: WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: WhichRoomDoesThisExitLeadTo(IntVector2)
  nameWithType: Room.WhichRoomDoesThisExitLeadTo(IntVector2)
  fullName: Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoom WhichRoomDoesThisExitLeadTo(IntVector2 exit)
    parameters:
    - id: exit
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>exit</parameter>
            <parameter>M:Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.WhichRoomDoesThisExitLeadTo(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function WhichRoomDoesThisExitLeadTo([exit] As IntVector2) As AbstractRoom
  overload: Global.Room.WhichRoomDoesThisExitLeadTo*
- uid: Global.Room.ShortcutLeadingToNode(System.Int32)
  commentId: M:Global.Room.ShortcutLeadingToNode(System.Int32)
  id: ShortcutLeadingToNode(System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ShortcutLeadingToNode(int)
  nameWithType: Room.ShortcutLeadingToNode(int)
  fullName: Room.ShortcutLeadingToNode(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ShortcutLeadingToNode(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData ShortcutLeadingToNode(int node)
    parameters:
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:Room.ShortcutLeadingToNode(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.ShortcutData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ShortcutLeadingToNode(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShortcutLeadingToNode(node As Integer) As ShortcutData
  overload: Global.Room.ShortcutLeadingToNode*
  nameWithType.vb: Room.ShortcutLeadingToNode(Integer)
  fullName.vb: Room.ShortcutLeadingToNode(Integer)
  name.vb: ShortcutLeadingToNode(Integer)
- uid: Global.Room.VisualContact(WorldCoordinate,WorldCoordinate)
  commentId: M:Global.Room.VisualContact(WorldCoordinate,WorldCoordinate)
  id: VisualContact(WorldCoordinate,WorldCoordinate)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: VisualContact(WorldCoordinate, WorldCoordinate)
  nameWithType: Room.VisualContact(WorldCoordinate, WorldCoordinate)
  fullName: Room.VisualContact(WorldCoordinate, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.VisualContact(WorldCoordinate,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool VisualContact(WorldCoordinate a, WorldCoordinate b)
    parameters:
    - id: a
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Room.VisualContact(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: b
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Room.VisualContact(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.VisualContact(WorldCoordinate,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Function VisualContact(a As WorldCoordinate, b As WorldCoordinate) As Boolean
  overload: Global.Room.VisualContact*
- uid: Global.Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)
  commentId: M:Global.Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)
  id: VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: VisualContact(IntVector2, IntVector2)
  nameWithType: Room.VisualContact(IntVector2, IntVector2)
  fullName: Room.VisualContact(RWCustom.IntVector2, RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool VisualContact(IntVector2 a, IntVector2 b)
    parameters:
    - id: a
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    - id: b
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.VisualContact(RWCustom.IntVector2,RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function VisualContact(a As IntVector2, b As IntVector2) As Boolean
  overload: Global.Room.VisualContact*
- uid: Global.Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)
  id: VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: VisualContact(Vector2, Vector2)
  nameWithType: Room.VisualContact(Vector2, Vector2)
  fullName: Room.VisualContact(UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool VisualContact(Vector2 a, Vector2 b)
    parameters:
    - id: a
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: b
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>b</parameter>
            <parameter>M:Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.VisualContact(UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function VisualContact(a As Vector2, b As Vector2) As Boolean
  overload: Global.Room.VisualContact*
- uid: Global.Room.IdentifySlope(UnityEngine.Vector2)
  commentId: M:Global.Room.IdentifySlope(UnityEngine.Vector2)
  id: IdentifySlope(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IdentifySlope(Vector2)
  nameWithType: Room.IdentifySlope(Vector2)
  fullName: Room.IdentifySlope(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IdentifySlope(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.SlopeDirection IdentifySlope(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.IdentifySlope(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.SlopeDirection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IdentifySlope(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function IdentifySlope(pos As Vector2) As Room.SlopeDirection
  overload: Global.Room.IdentifySlope*
- uid: Global.Room.IdentifySlope(System.Int32,System.Int32)
  commentId: M:Global.Room.IdentifySlope(System.Int32,System.Int32)
  id: IdentifySlope(System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IdentifySlope(int, int)
  nameWithType: Room.IdentifySlope(int, int)
  fullName: Room.IdentifySlope(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IdentifySlope(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.SlopeDirection IdentifySlope(int X, int Y)
    parameters:
    - id: X
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>X</parameter>
            <parameter>M:Room.IdentifySlope(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: Y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>Y</parameter>
            <parameter>M:Room.IdentifySlope(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.SlopeDirection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IdentifySlope(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function IdentifySlope(X As Integer, Y As Integer) As Room.SlopeDirection
  overload: Global.Room.IdentifySlope*
  nameWithType.vb: Room.IdentifySlope(Integer, Integer)
  fullName.vb: Room.IdentifySlope(Integer, Integer)
  name.vb: IdentifySlope(Integer, Integer)
- uid: Global.Room.IdentifySlope(RWCustom.IntVector2)
  commentId: M:Global.Room.IdentifySlope(RWCustom.IntVector2)
  id: IdentifySlope(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IdentifySlope(IntVector2)
  nameWithType: Room.IdentifySlope(IntVector2)
  fullName: Room.IdentifySlope(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IdentifySlope(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Room.SlopeDirection IdentifySlope(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.IdentifySlope(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.Room.SlopeDirection
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IdentifySlope(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function IdentifySlope(pos As IntVector2) As Room.SlopeDirection
  overload: Global.Room.IdentifySlope*
- uid: Global.Room.DetermineSafeSpawnTile(Room)
  commentId: M:Global.Room.DetermineSafeSpawnTile(Room)
  id: DetermineSafeSpawnTile(Room)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DetermineSafeSpawnTile(Room)
  nameWithType: Room.DetermineSafeSpawnTile(Room)
  fullName: Room.DetermineSafeSpawnTile(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.DetermineSafeSpawnTile(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: >-
      [Obsolete("Use two parameter function instead.")]

      public static IntVector2 DetermineSafeSpawnTile(Room realizedRoom)
    parameters:
    - id: realizedRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>realizedRoom</parameter>
            <parameter>M:Room.DetermineSafeSpawnTile(Room)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.DetermineSafeSpawnTile(Room)</parameter>
          </include>
        </markup>
    content.vb: >-
      <Obsolete("Use two parameter function instead.")>

      Public Shared Function DetermineSafeSpawnTile(realizedRoom As Room) As IntVector2
  overload: Global.Room.DetermineSafeSpawnTile*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Use two parameter function instead.
- uid: Global.Room.DetermineSafeSpawnTile(Room,System.Boolean)
  commentId: M:Global.Room.DetermineSafeSpawnTile(Room,System.Boolean)
  id: DetermineSafeSpawnTile(Room,System.Boolean)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DetermineSafeSpawnTile(Room, bool)
  nameWithType: Room.DetermineSafeSpawnTile(Room, bool)
  fullName: Room.DetermineSafeSpawnTile(Room, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.DetermineSafeSpawnTile(Room,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static IntVector2 DetermineSafeSpawnTile(Room realizedRoom, bool forWarpPoint)
    parameters:
    - id: realizedRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>realizedRoom</parameter>
            <parameter>M:Room.DetermineSafeSpawnTile(Room,System.Boolean)</parameter>
          </include>
        </markup>
    - id: forWarpPoint
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>forWarpPoint</parameter>
            <parameter>M:Room.DetermineSafeSpawnTile(Room,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.DetermineSafeSpawnTile(Room,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function DetermineSafeSpawnTile(realizedRoom As Room, forWarpPoint As Boolean) As IntVector2
  overload: Global.Room.DetermineSafeSpawnTile*
  nameWithType.vb: Room.DetermineSafeSpawnTile(Room, Boolean)
  fullName.vb: Room.DetermineSafeSpawnTile(Room, Boolean)
  name.vb: DetermineSafeSpawnTile(Room, Boolean)
- uid: Global.Room.LoadFromDataString(System.String[])
  commentId: M:Global.Room.LoadFromDataString(System.String[])
  id: LoadFromDataString(System.String[])
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: LoadFromDataString(string[])
  nameWithType: Room.LoadFromDataString(string[])
  fullName: Room.LoadFromDataString(string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.LoadFromDataString(System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadFromDataString(string[] lines)
    parameters:
    - id: lines
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lines</parameter>
            <parameter>M:Room.LoadFromDataString(System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Sub LoadFromDataString(lines As String())
  overload: Global.Room.LoadFromDataString*
  nameWithType.vb: Room.LoadFromDataString(String())
  fullName.vb: Room.LoadFromDataString(String())
  name.vb: LoadFromDataString(String())
- uid: Global.Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)
  commentId: M:Global.Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)
  id: ViewedByAnyCamera(UnityEngine.Rect,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ViewedByAnyCamera(Rect, float)
  nameWithType: Room.ViewedByAnyCamera(Rect, float)
  fullName: Room.ViewedByAnyCamera(UnityEngine.Rect, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ViewedByAnyCamera(Rect rect, float margin)
    parameters:
    - id: rect
      type: UnityEngine.Rect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    - id: margin
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>margin</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Rect,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function ViewedByAnyCamera(rect As Rect, margin As Single) As Boolean
  overload: Global.Room.ViewedByAnyCamera*
  nameWithType.vb: Room.ViewedByAnyCamera(Rect, Single)
  fullName.vb: Room.ViewedByAnyCamera(UnityEngine.Rect, Single)
  name.vb: ViewedByAnyCamera(Rect, Single)
- uid: Global.Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)
  commentId: M:Global.Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)
  id: ViewedByAnyCamera(UnityEngine.Vector2,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ViewedByAnyCamera(Vector2, float)
  nameWithType: Room.ViewedByAnyCamera(Vector2, float)
  fullName: Room.ViewedByAnyCamera(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ViewedByAnyCamera(Vector2 pos, float margin)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: margin
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>margin</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ViewedByAnyCamera(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function ViewedByAnyCamera(pos As Vector2, margin As Single) As Boolean
  overload: Global.Room.ViewedByAnyCamera*
  nameWithType.vb: Room.ViewedByAnyCamera(Vector2, Single)
  fullName.vb: Room.ViewedByAnyCamera(UnityEngine.Vector2, Single)
  name.vb: ViewedByAnyCamera(Vector2, Single)
- uid: Global.Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)
  commentId: M:Global.Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)
  id: VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: VisibleInAnyCameraScreenBounds(Vector2)
  nameWithType: Room.VisibleInAnyCameraScreenBounds(Vector2)
  fullName: Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool VisibleInAnyCameraScreenBounds(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.VisibleInAnyCameraScreenBounds(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function VisibleInAnyCameraScreenBounds(pos As Vector2) As Boolean
  overload: Global.Room.VisibleInAnyCameraScreenBounds*
- uid: Global.Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)
  commentId: M:Global.Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)
  id: ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ScreenMovement(Vector2?, Vector2, float)
  nameWithType: Room.ScreenMovement(Vector2?, Vector2, float)
  fullName: Room.ScreenMovement(UnityEngine.Vector2?, UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ScreenMovement(Vector2? pos, Vector2 bump, float shake)
    parameters:
    - id: pos
      type: System.Nullable{UnityEngine.Vector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: bump
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>bump</parameter>
            <parameter>M:Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: shake
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shake</parameter>
            <parameter>M:Room.ScreenMovement(System.Nullable{UnityEngine.Vector2},UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ScreenMovement(pos As Vector2?, bump As Vector2, shake As Single)
  overload: Global.Room.ScreenMovement*
  nameWithType.vb: Room.ScreenMovement(Vector2?, Vector2, Single)
  fullName.vb: Room.ScreenMovement(UnityEngine.Vector2?, UnityEngine.Vector2, Single)
  name.vb: ScreenMovement(Vector2?, Vector2, Single)
- uid: Global.Room.shortcutData(RWCustom.IntVector2)
  commentId: M:Global.Room.shortcutData(RWCustom.IntVector2)
  id: shortcutData(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortcutData(IntVector2)
  nameWithType: Room.shortcutData(IntVector2)
  fullName: Room.shortcutData(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.shortcutData(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData shortcutData(IntVector2 pos)
    parameters:
    - id: pos
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.shortcutData(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.ShortcutData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.shortcutData(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function shortcutData(pos As IntVector2) As ShortcutData
  overload: Global.Room.shortcutData*
- uid: Global.Room.shortcutData(UnityEngine.Vector2)
  commentId: M:Global.Room.shortcutData(UnityEngine.Vector2)
  id: shortcutData(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortcutData(Vector2)
  nameWithType: Room.shortcutData(Vector2)
  fullName: Room.shortcutData(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.shortcutData(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ShortcutData shortcutData(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.shortcutData(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.ShortcutData
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.shortcutData(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function shortcutData(pos As Vector2) As ShortcutData
  overload: Global.Room.shortcutData*
- uid: Global.Room.ToWorldCoordinate(UnityEngine.Vector2)
  commentId: M:Global.Room.ToWorldCoordinate(UnityEngine.Vector2)
  id: ToWorldCoordinate(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ToWorldCoordinate(Vector2)
  nameWithType: Room.ToWorldCoordinate(Vector2)
  fullName: Room.ToWorldCoordinate(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ToWorldCoordinate(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate ToWorldCoordinate(Vector2 vector2)
    parameters:
    - id: vector2
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vector2</parameter>
            <parameter>M:Room.ToWorldCoordinate(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ToWorldCoordinate(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function ToWorldCoordinate(vector2 As Vector2) As WorldCoordinate
  overload: Global.Room.ToWorldCoordinate*
- uid: Global.Room.ToWorldCoordinate(RWCustom.IntVector2)
  commentId: M:Global.Room.ToWorldCoordinate(RWCustom.IntVector2)
  id: ToWorldCoordinate(RWCustom.IntVector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ToWorldCoordinate(IntVector2)
  nameWithType: Room.ToWorldCoordinate(IntVector2)
  fullName: Room.ToWorldCoordinate(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ToWorldCoordinate(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate ToWorldCoordinate(IntVector2 intVector2)
    parameters:
    - id: intVector2
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>intVector2</parameter>
            <parameter>M:Room.ToWorldCoordinate(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ToWorldCoordinate(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function ToWorldCoordinate(intVector2 As IntVector2) As WorldCoordinate
  overload: Global.Room.ToWorldCoordinate*
- uid: Global.Room.LocalCoordinateOfNode(System.Int32)
  commentId: M:Global.Room.LocalCoordinateOfNode(System.Int32)
  id: LocalCoordinateOfNode(System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: LocalCoordinateOfNode(int)
  nameWithType: Room.LocalCoordinateOfNode(int)
  fullName: Room.LocalCoordinateOfNode(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.LocalCoordinateOfNode(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WorldCoordinate LocalCoordinateOfNode(int node)
    parameters:
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:Room.LocalCoordinateOfNode(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.LocalCoordinateOfNode(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function LocalCoordinateOfNode(node As Integer) As WorldCoordinate
  overload: Global.Room.LocalCoordinateOfNode*
  nameWithType.vb: Room.LocalCoordinateOfNode(Integer)
  fullName.vb: Room.LocalCoordinateOfNode(Integer)
  name.vb: LocalCoordinateOfNode(Integer)
- uid: Global.Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)
  commentId: M:Global.Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)
  id: DarknessOfPoint(RoomCamera,UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DarknessOfPoint(RoomCamera, Vector2)
  nameWithType: Room.DarknessOfPoint(RoomCamera, Vector2)
  fullName: Room.DarknessOfPoint(RoomCamera, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DarknessOfPoint(RoomCamera rCam, Vector2 pos)
    parameters:
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.DarknessOfPoint(RoomCamera,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function DarknessOfPoint(rCam As RoomCamera, pos As Vector2) As Single
  overload: Global.Room.DarknessOfPoint*
- uid: Global.Room.LightSourceExposure(UnityEngine.Vector2)
  commentId: M:Global.Room.LightSourceExposure(UnityEngine.Vector2)
  id: LightSourceExposure(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: LightSourceExposure(Vector2)
  nameWithType: Room.LightSourceExposure(Vector2)
  fullName: Room.LightSourceExposure(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.LightSourceExposure(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LightSourceExposure(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.LightSourceExposure(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.LightSourceExposure(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function LightSourceExposure(pos As Vector2) As Single
  overload: Global.Room.LightSourceExposure*
- uid: Global.Room.LightSourceColor(UnityEngine.Vector2)
  commentId: M:Global.Room.LightSourceColor(UnityEngine.Vector2)
  id: LightSourceColor(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: LightSourceColor(Vector2)
  nameWithType: Room.LightSourceColor(Vector2)
  fullName: Room.LightSourceColor(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.LightSourceColor(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color LightSourceColor(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.LightSourceColor(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.LightSourceColor(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function LightSourceColor(pos As Vector2) As Color
  overload: Global.Room.LightSourceColor*
- uid: Global.Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)
  commentId: M:Global.Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)
  id: CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: CompleteDarkness(Vector2, float, float, bool)
  nameWithType: Room.CompleteDarkness(Vector2, float, float, bool)
  fullName: Room.CompleteDarkness(UnityEngine.Vector2, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool CompleteDarkness(Vector2 pos, float margin, float reqDarkness, bool checkForPlayers)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: margin
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>margin</parameter>
            <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: reqDarkness
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>reqDarkness</parameter>
            <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: checkForPlayers
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>checkForPlayers</parameter>
            <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.CompleteDarkness(UnityEngine.Vector2,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function CompleteDarkness(pos As Vector2, margin As Single, reqDarkness As Single, checkForPlayers As Boolean) As Boolean
  overload: Global.Room.CompleteDarkness*
  nameWithType.vb: Room.CompleteDarkness(Vector2, Single, Single, Boolean)
  fullName.vb: Room.CompleteDarkness(UnityEngine.Vector2, Single, Single, Boolean)
  name.vb: CompleteDarkness(Vector2, Single, Single, Boolean)
- uid: Global.Room.WaterShinyness(UnityEngine.Vector2,System.Single)
  commentId: M:Global.Room.WaterShinyness(UnityEngine.Vector2,System.Single)
  id: WaterShinyness(UnityEngine.Vector2,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: WaterShinyness(Vector2, float)
  nameWithType: Room.WaterShinyness(Vector2, float)
  fullName: Room.WaterShinyness(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.WaterShinyness(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaterShinyness(Vector2 pos, float timeStacker)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.WaterShinyness(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Room.WaterShinyness(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.WaterShinyness(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function WaterShinyness(pos As Vector2, timeStacker As Single) As Single
  overload: Global.Room.WaterShinyness*
  nameWithType.vb: Room.WaterShinyness(Vector2, Single)
  fullName.vb: Room.WaterShinyness(UnityEngine.Vector2, Single)
  name.vb: WaterShinyness(Vector2, Single)
- uid: Global.Room.CameraViewingNode(System.Int32)
  commentId: M:Global.Room.CameraViewingNode(System.Int32)
  id: CameraViewingNode(System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: CameraViewingNode(int)
  nameWithType: Room.CameraViewingNode(int)
  fullName: Room.CameraViewingNode(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.CameraViewingNode(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CameraViewingNode(int node)
    parameters:
    - id: node
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>node</parameter>
            <parameter>M:Room.CameraViewingNode(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.CameraViewingNode(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function CameraViewingNode(node As Integer) As Integer
  overload: Global.Room.CameraViewingNode*
  nameWithType.vb: Room.CameraViewingNode(Integer)
  fullName.vb: Room.CameraViewingNode(Integer)
  name.vb: CameraViewingNode(Integer)
- uid: Global.Room.CameraViewingPoint(UnityEngine.Vector2)
  commentId: M:Global.Room.CameraViewingPoint(UnityEngine.Vector2)
  id: CameraViewingPoint(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: CameraViewingPoint(Vector2)
  nameWithType: Room.CameraViewingPoint(Vector2)
  fullName: Room.CameraViewingPoint(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.CameraViewingPoint(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int CameraViewingPoint(Vector2 p)
    parameters:
    - id: p
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p</parameter>
            <parameter>M:Room.CameraViewingPoint(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.CameraViewingPoint(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function CameraViewingPoint(p As Vector2) As Integer
  overload: Global.Room.CameraViewingPoint*
- uid: Global.Room.Darkness(UnityEngine.Vector2)
  commentId: M:Global.Room.Darkness(UnityEngine.Vector2)
  id: Darkness(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: Darkness(Vector2)
  nameWithType: Room.Darkness(Vector2)
  fullName: Room.Darkness(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.Darkness(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Darkness(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.Darkness(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.Darkness(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function Darkness(pos As Vector2) As Single
  overload: Global.Room.Darkness*
- uid: Global.Room.PlaySound(SoundID)
  commentId: M:Global.Room.PlaySound(SoundID)
  id: PlaySound(SoundID)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID)
  nameWithType: Room.PlaySound(SoundID)
  fullName: Room.PlaySound(SoundID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID)
  overload: Global.Room.PlaySound*
- uid: Global.Room.PlaySound(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Global.Room.PlaySound(SoundID,System.Single,System.Single,System.Single)
  id: PlaySound(SoundID,System.Single,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, float, float, float)
  nameWithType: Room.PlaySound(SoundID, float, float, float)
  fullName: Room.PlaySound(SoundID, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, float pan, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Room.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pan As Single, vol As Single, pitch As Single)
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, Single, Single, Single)
  fullName.vb: Room.PlaySound(SoundID, Single, Single, Single)
  name.vb: PlaySound(SoundID, Single, Single, Single)
- uid: Global.Room.PlaySound(SoundID,UnityEngine.Vector2)
  commentId: M:Global.Room.PlaySound(SoundID,UnityEngine.Vector2)
  id: PlaySound(SoundID,UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, Vector2)
  nameWithType: Room.PlaySound(SoundID, Vector2)
  fullName: Room.PlaySound(SoundID, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, Vector2 pos)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pos As Vector2)
  overload: Global.Room.PlaySound*
- uid: Global.Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)
  commentId: M:Global.Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)
  id: PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, Vector2, AbstractPhysicalObject)
  nameWithType: Room.PlaySound(SoundID, Vector2, AbstractPhysicalObject)
  fullName: Room.PlaySound(SoundID, UnityEngine.Vector2, AbstractPhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, Vector2 pos, AbstractPhysicalObject sourceObject)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: sourceObject
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceObject</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pos As Vector2, sourceObject As AbstractPhysicalObject)
  overload: Global.Room.PlaySound*
- uid: Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  id: PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, Vector2, float, float)
  nameWithType: Room.PlaySound(SoundID, Vector2, float, float)
  fullName: Room.PlaySound(SoundID, UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, Vector2 pos, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pos As Vector2, vol As Single, pitch As Single)
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, Vector2, Single, Single)
  fullName.vb: Room.PlaySound(SoundID, UnityEngine.Vector2, Single, Single)
  name.vb: PlaySound(SoundID, Vector2, Single, Single)
- uid: Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)
  commentId: M:Global.Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)
  id: PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, Vector2, float, float, AbstractPhysicalObject)
  nameWithType: Room.PlaySound(SoundID, Vector2, float, float, AbstractPhysicalObject)
  fullName: Room.PlaySound(SoundID, UnityEngine.Vector2, float, float, AbstractPhysicalObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, Vector2 pos, float vol, float pitch, AbstractPhysicalObject sourceObject)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    - id: sourceObject
      type: Global.AbstractPhysicalObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceObject</parameter>
            <parameter>M:Room.PlaySound(SoundID,UnityEngine.Vector2,System.Single,System.Single,AbstractPhysicalObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, pos As Vector2, vol As Single, pitch As Single, sourceObject As AbstractPhysicalObject)
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, Vector2, Single, Single, AbstractPhysicalObject)
  fullName.vb: Room.PlaySound(SoundID, UnityEngine.Vector2, Single, Single, AbstractPhysicalObject)
  name.vb: PlaySound(SoundID, Vector2, Single, Single, AbstractPhysicalObject)
- uid: Global.Room.PlaySound(SoundID,BodyChunk)
  commentId: M:Global.Room.PlaySound(SoundID,BodyChunk)
  id: PlaySound(SoundID,BodyChunk)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, BodyChunk)
  nameWithType: Room.PlaySound(SoundID, BodyChunk)
  fullName: Room.PlaySound(SoundID, BodyChunk)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,BodyChunk)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter PlaySound(SoundID soundId, BodyChunk chunk)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk)</parameter>
          </include>
        </markup>
    return:
      type: Global.ChunkSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlaySound(soundId As SoundID, chunk As BodyChunk) As ChunkSoundEmitter
  overload: Global.Room.PlaySound*
- uid: Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)
  commentId: M:Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)
  id: PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, BodyChunk, bool, float, float)
  nameWithType: Room.PlaySound(SoundID, BodyChunk, bool, float, float)
  fullName: Room.PlaySound(SoundID, BodyChunk, bool, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter PlaySound(SoundID soundId, BodyChunk chunk, bool loop, float vol, float pitch)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.ChunkSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlaySound(soundId As SoundID, chunk As BodyChunk, [loop] As Boolean, vol As Single, pitch As Single) As ChunkSoundEmitter
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, BodyChunk, Boolean, Single, Single)
  fullName.vb: Room.PlaySound(SoundID, BodyChunk, Boolean, Single, Single)
  name.vb: PlaySound(SoundID, BodyChunk, Boolean, Single, Single)
- uid: Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)
  commentId: M:Global.Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)
  id: PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, BodyChunk, bool, float, float, bool)
  nameWithType: Room.PlaySound(SoundID, BodyChunk, bool, float, float, bool)
  fullName: Room.PlaySound(SoundID, BodyChunk, bool, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter PlaySound(SoundID soundId, BodyChunk chunk, bool loop, float vol, float pitch, bool randomStartPosition)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: randomStartPosition
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>randomStartPosition</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: Global.ChunkSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlaySound(SoundID,BodyChunk,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlaySound(soundId As SoundID, chunk As BodyChunk, [loop] As Boolean, vol As Single, pitch As Single, randomStartPosition As Boolean) As ChunkSoundEmitter
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, BodyChunk, Boolean, Single, Single, Boolean)
  fullName.vb: Room.PlaySound(SoundID, BodyChunk, Boolean, Single, Single, Boolean)
  name.vb: PlaySound(SoundID, BodyChunk, Boolean, Single, Single, Boolean)
- uid: Global.Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)
  commentId: M:Global.Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)
  id: PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayDisembodiedLoop(SoundID, float, float, float)
  nameWithType: Room.PlayDisembodiedLoop(SoundID, float, float, float)
  fullName: Room.PlayDisembodiedLoop(SoundID, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DisembodiedLoopEmitter PlayDisembodiedLoop(SoundID soundID, float vol, float pitch, float pan)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.DisembodiedLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlayDisembodiedLoop(SoundID,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayDisembodiedLoop(soundID As SoundID, vol As Single, pitch As Single, pan As Single) As DisembodiedLoopEmitter
  overload: Global.Room.PlayDisembodiedLoop*
  nameWithType.vb: Room.PlayDisembodiedLoop(SoundID, Single, Single, Single)
  fullName.vb: Room.PlayDisembodiedLoop(SoundID, Single, Single, Single)
  name.vb: PlayDisembodiedLoop(SoundID, Single, Single, Single)
- uid: Global.Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)
  commentId: M:Global.Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)
  id: PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayRectSound(SoundID, FloatRect, bool, float, float)
  nameWithType: Room.PlayRectSound(SoundID, FloatRect, bool, float, float)
  fullName: Room.PlayRectSound(SoundID, FloatRect, bool, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RectSoundEmitter PlayRectSound(SoundID soundID, FloatRect rect, bool loop, float vol, float pitch)
    parameters:
    - id: soundID
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundID</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: rect
      type: Global.FloatRect
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rect</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.RectSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlayRectSound(SoundID,FloatRect,System.Boolean,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayRectSound(soundID As SoundID, rect As FloatRect, [loop] As Boolean, vol As Single, pitch As Single) As RectSoundEmitter
  overload: Global.Room.PlayRectSound*
  nameWithType.vb: Room.PlayRectSound(SoundID, FloatRect, Boolean, Single, Single)
  fullName.vb: Room.PlayRectSound(SoundID, FloatRect, Boolean, Single, Single)
  name.vb: PlayRectSound(SoundID, FloatRect, Boolean, Single, Single)
- uid: Global.Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  commentId: M:Global.Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  id: PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  nameWithType: Room.PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  fullName: Room.PlaySound(SoundID, PositionedSoundEmitter, bool, float, float, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlaySound(SoundID soundId, PositionedSoundEmitter em, bool loop, float vol, float pitch, bool randomStartPosition)
    parameters:
    - id: soundId
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundId</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: em
      type: Global.PositionedSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>em</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: loop
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>loop</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    - id: randomStartPosition
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>randomStartPosition</parameter>
            <parameter>M:Room.PlaySound(SoundID,PositionedSoundEmitter,System.Boolean,System.Single,System.Single,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlaySound(soundId As SoundID, em As PositionedSoundEmitter, [loop] As Boolean, vol As Single, pitch As Single, randomStartPosition As Boolean)
  overload: Global.Room.PlaySound*
  nameWithType.vb: Room.PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
  fullName.vb: Room.PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
  name.vb: PlaySound(SoundID, PositionedSoundEmitter, Boolean, Single, Single, Boolean)
- uid: Global.Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)
  commentId: M:Global.Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)
  id: PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayGenericSound(SoundID, float, float, Mixer)
  nameWithType: Room.PlayGenericSound(SoundID, float, float, GenericLoopEmitter.Mixer)
  fullName: Room.PlayGenericSound(SoundID, float, float, GenericLoopEmitter.Mixer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public GenericLoopEmitter PlayGenericSound(SoundID sound, float baseVolume, float basePitch, GenericLoopEmitter.Mixer mixer)
    parameters:
    - id: sound
      type: Global.SoundID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sound</parameter>
            <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
          </include>
        </markup>
    - id: baseVolume
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>baseVolume</parameter>
            <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
          </include>
        </markup>
    - id: basePitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>basePitch</parameter>
            <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
          </include>
        </markup>
    - id: mixer
      type: Global.GenericLoopEmitter.Mixer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>mixer</parameter>
            <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
          </include>
        </markup>
    return:
      type: Global.GenericLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlayGenericSound(SoundID,System.Single,System.Single,GenericLoopEmitter.Mixer)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayGenericSound(sound As SoundID, baseVolume As Single, basePitch As Single, mixer As GenericLoopEmitter.Mixer) As GenericLoopEmitter
  overload: Global.Room.PlayGenericSound*
  nameWithType.vb: Room.PlayGenericSound(SoundID, Single, Single, GenericLoopEmitter.Mixer)
  fullName.vb: Room.PlayGenericSound(SoundID, Single, Single, GenericLoopEmitter.Mixer)
  name.vb: PlayGenericSound(SoundID, Single, Single, Mixer)
- uid: Global.Room.InGameNoise(Noise.InGameNoise)
  commentId: M:Global.Room.InGameNoise(Noise.InGameNoise)
  id: InGameNoise(Noise.InGameNoise)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: InGameNoise(InGameNoise)
  nameWithType: Room.InGameNoise(InGameNoise)
  fullName: Room.InGameNoise(Noise.InGameNoise)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.InGameNoise(Noise.InGameNoise)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InGameNoise(InGameNoise noise)
    parameters:
    - id: noise
      type: Noise.InGameNoise
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>noise</parameter>
            <parameter>M:Room.InGameNoise(Noise.InGameNoise)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InGameNoise(noise As InGameNoise)
  overload: Global.Room.InGameNoise*
- uid: Global.Room.NewMessageInRoom(System.String,System.Int32)
  commentId: M:Global.Room.NewMessageInRoom(System.String,System.Int32)
  id: NewMessageInRoom(System.String,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: NewMessageInRoom(string, int)
  nameWithType: Room.NewMessageInRoom(string, int)
  fullName: Room.NewMessageInRoom(string, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.NewMessageInRoom(System.String,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewMessageInRoom(string text, int extraLinger)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Int32)</parameter>
          </include>
        </markup>
    - id: extraLinger
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>extraLinger</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewMessageInRoom(text As String, extraLinger As Integer)
  overload: Global.Room.NewMessageInRoom*
  nameWithType.vb: Room.NewMessageInRoom(String, Integer)
  fullName.vb: Room.NewMessageInRoom(String, Integer)
  name.vb: NewMessageInRoom(String, Integer)
- uid: Global.Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)
  commentId: M:Global.Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)
  id: NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: NewMessageInRoom(string, float, float, int)
  nameWithType: Room.NewMessageInRoom(string, float, float, int)
  fullName: Room.NewMessageInRoom(string, float, float, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void NewMessageInRoom(string text, float xOrientation, float yPos, int extraLinger)
    parameters:
    - id: text
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>text</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: xOrientation
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xOrientation</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: yPos
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yPos</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    - id: extraLinger
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>extraLinger</parameter>
            <parameter>M:Room.NewMessageInRoom(System.String,System.Single,System.Single,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub NewMessageInRoom(text As String, xOrientation As Single, yPos As Single, extraLinger As Integer)
  overload: Global.Room.NewMessageInRoom*
  nameWithType.vb: Room.NewMessageInRoom(String, Single, Single, Integer)
  fullName.vb: Room.NewMessageInRoom(String, Single, Single, Integer)
  name.vb: NewMessageInRoom(String, Single, Single, Integer)
- uid: Global.Room.TriggerCombatArena
  commentId: M:Global.Room.TriggerCombatArena
  id: TriggerCombatArena
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TriggerCombatArena()
  nameWithType: Room.TriggerCombatArena()
  fullName: Room.TriggerCombatArena()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.TriggerCombatArena</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void TriggerCombatArena()
    content.vb: Public Sub TriggerCombatArena()
  overload: Global.Room.TriggerCombatArena*
- uid: Global.Room.SpawnMultiplayerItem(PlacedObject)
  commentId: M:Global.Room.SpawnMultiplayerItem(PlacedObject)
  id: SpawnMultiplayerItem(PlacedObject)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SpawnMultiplayerItem(PlacedObject)
  nameWithType: Room.SpawnMultiplayerItem(PlacedObject)
  fullName: Room.SpawnMultiplayerItem(PlacedObject)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SpawnMultiplayerItem(PlacedObject)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SpawnMultiplayerItem(PlacedObject placedObj)
    parameters:
    - id: placedObj
      type: Global.PlacedObject
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placedObj</parameter>
            <parameter>M:Room.SpawnMultiplayerItem(PlacedObject)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SpawnMultiplayerItem(placedObj As PlacedObject)
  overload: Global.Room.SpawnMultiplayerItem*
- uid: Global.Room.ShouldBeDeferred(UpdatableAndDeletable)
  commentId: M:Global.Room.ShouldBeDeferred(UpdatableAndDeletable)
  id: ShouldBeDeferred(UpdatableAndDeletable)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ShouldBeDeferred(UpdatableAndDeletable)
  nameWithType: Room.ShouldBeDeferred(UpdatableAndDeletable)
  fullName: Room.ShouldBeDeferred(UpdatableAndDeletable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.ShouldBeDeferred(UpdatableAndDeletable)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ShouldBeDeferred(UpdatableAndDeletable obj)
    parameters:
    - id: obj
      type: Global.UpdatableAndDeletable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>obj</parameter>
            <parameter>M:Room.ShouldBeDeferred(UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.ShouldBeDeferred(UpdatableAndDeletable)</parameter>
          </include>
        </markup>
    content.vb: Public Function ShouldBeDeferred(obj As UpdatableAndDeletable) As Boolean
  overload: Global.Room.ShouldBeDeferred*
- uid: Global.Room.PointDeferred(UnityEngine.Vector2)
  commentId: M:Global.Room.PointDeferred(UnityEngine.Vector2)
  id: PointDeferred(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PointDeferred(Vector2)
  nameWithType: Room.PointDeferred(Vector2)
  fullName: Room.PointDeferred(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PointDeferred(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PointDeferred(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PointDeferred(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PointDeferred(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function PointDeferred(pos As Vector2) As Boolean
  overload: Global.Room.PointDeferred*
- uid: Global.Room.PausedUpdate
  commentId: M:Global.Room.PausedUpdate
  id: PausedUpdate
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PausedUpdate()
  nameWithType: Room.PausedUpdate()
  fullName: Room.PausedUpdate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PausedUpdate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PausedUpdate()
    content.vb: Public Sub PausedUpdate()
  overload: Global.Room.PausedUpdate*
- uid: Global.Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  commentId: M:Global.Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  id: PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayCustomSound(string, Vector2, float, float)
  nameWithType: Room.PlayCustomSound(string, Vector2, float, float)
  fullName: Room.PlayCustomSound(string, UnityEngine.Vector2, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomSound(string soundName, Vector2 pos, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayCustomSound(System.String,UnityEngine.Vector2,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomSound(soundName As String, pos As Vector2, vol As Single, pitch As Single)
  overload: Global.Room.PlayCustomSound*
  nameWithType.vb: Room.PlayCustomSound(String, Vector2, Single, Single)
  fullName.vb: Room.PlayCustomSound(String, UnityEngine.Vector2, Single, Single)
  name.vb: PlayCustomSound(String, Vector2, Single, Single)
- uid: Global.Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  commentId: M:Global.Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  id: PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayCustomSoundDisembodied(string, float, float, float)
  nameWithType: Room.PlayCustomSoundDisembodied(string, float, float, float)
  fullName: Room.PlayCustomSoundDisembodied(string, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void PlayCustomSoundDisembodied(string soundName, float pan, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayCustomSoundDisembodied(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub PlayCustomSoundDisembodied(soundName As String, pan As Single, vol As Single, pitch As Single)
  overload: Global.Room.PlayCustomSoundDisembodied*
  nameWithType.vb: Room.PlayCustomSoundDisembodied(String, Single, Single, Single)
  fullName.vb: Room.PlayCustomSoundDisembodied(String, Single, Single, Single)
  name.vb: PlayCustomSoundDisembodied(String, Single, Single, Single)
- uid: Global.Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)
  commentId: M:Global.Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)
  id: PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayCustomDisembodiedLoop(string, float, float, float)
  nameWithType: Room.PlayCustomDisembodiedLoop(string, float, float, float)
  fullName: Room.PlayCustomDisembodiedLoop(string, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DisembodiedLoopEmitter PlayCustomDisembodiedLoop(string soundName, float pan, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pan
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pan</parameter>
            <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.DisembodiedLoopEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlayCustomDisembodiedLoop(System.String,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayCustomDisembodiedLoop(soundName As String, pan As Single, vol As Single, pitch As Single) As DisembodiedLoopEmitter
  overload: Global.Room.PlayCustomDisembodiedLoop*
  nameWithType.vb: Room.PlayCustomDisembodiedLoop(String, Single, Single, Single)
  fullName.vb: Room.PlayCustomDisembodiedLoop(String, Single, Single, Single)
  name.vb: PlayCustomDisembodiedLoop(String, Single, Single, Single)
- uid: Global.Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)
  commentId: M:Global.Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)
  id: PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayCustomChunkSound(string, BodyChunk, float, float)
  nameWithType: Room.PlayCustomChunkSound(string, BodyChunk, float, float)
  fullName: Room.PlayCustomChunkSound(string, BodyChunk, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ChunkSoundEmitter PlayCustomChunkSound(string soundName, BodyChunk chunk, float vol, float pitch)
    parameters:
    - id: soundName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>soundName</parameter>
            <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: chunk
      type: Global.BodyChunk
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>chunk</parameter>
            <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: vol
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vol</parameter>
            <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: pitch
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pitch</parameter>
            <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.ChunkSoundEmitter
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PlayCustomChunkSound(System.String,BodyChunk,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PlayCustomChunkSound(soundName As String, chunk As BodyChunk, vol As Single, pitch As Single) As ChunkSoundEmitter
  overload: Global.Room.PlayCustomChunkSound*
  nameWithType.vb: Room.PlayCustomChunkSound(String, BodyChunk, Single, Single)
  fullName.vb: Room.PlayCustomChunkSound(String, BodyChunk, Single, Single)
  name.vb: PlayCustomChunkSound(String, BodyChunk, Single, Single)
- uid: Global.Room.SetLightSourceBlink(LightSource,System.Int32)
  commentId: M:Global.Room.SetLightSourceBlink(LightSource,System.Int32)
  id: SetLightSourceBlink(LightSource,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SetLightSourceBlink(LightSource, int)
  nameWithType: Room.SetLightSourceBlink(LightSource, int)
  fullName: Room.SetLightSourceBlink(LightSource, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SetLightSourceBlink(LightSource,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetLightSourceBlink(LightSource lightSource, int ind)
    parameters:
    - id: lightSource
      type: Global.LightSource
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lightSource</parameter>
            <parameter>M:Room.SetLightSourceBlink(LightSource,System.Int32)</parameter>
          </include>
        </markup>
    - id: ind
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ind</parameter>
            <parameter>M:Room.SetLightSourceBlink(LightSource,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetLightSourceBlink(lightSource As LightSource, ind As Integer)
  overload: Global.Room.SetLightSourceBlink*
  nameWithType.vb: Room.SetLightSourceBlink(LightSource, Integer)
  fullName.vb: Room.SetLightSourceBlink(LightSource, Integer)
  name.vb: SetLightSourceBlink(LightSource, Integer)
- uid: Global.Room.SetLightBeamBlink(LightBeam,System.Int32)
  commentId: M:Global.Room.SetLightBeamBlink(LightBeam,System.Int32)
  id: SetLightBeamBlink(LightBeam,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SetLightBeamBlink(LightBeam, int)
  nameWithType: Room.SetLightBeamBlink(LightBeam, int)
  fullName: Room.SetLightBeamBlink(LightBeam, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SetLightBeamBlink(LightBeam,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetLightBeamBlink(LightBeam lightBeam, int ind)
    parameters:
    - id: lightBeam
      type: Global.LightBeam
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lightBeam</parameter>
            <parameter>M:Room.SetLightBeamBlink(LightBeam,System.Int32)</parameter>
          </include>
        </markup>
    - id: ind
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>ind</parameter>
            <parameter>M:Room.SetLightBeamBlink(LightBeam,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetLightBeamBlink(lightBeam As LightBeam, ind As Integer)
  overload: Global.Room.SetLightBeamBlink*
  nameWithType.vb: Room.SetLightBeamBlink(LightBeam, Integer)
  fullName.vb: Room.SetLightBeamBlink(LightBeam, Integer)
  name.vb: SetLightBeamBlink(LightBeam, Integer)
- uid: Global.Room.IsGateRoom
  commentId: M:Global.Room.IsGateRoom
  id: IsGateRoom
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: IsGateRoom()
  nameWithType: Room.IsGateRoom()
  fullName: Room.IsGateRoom()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.IsGateRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool IsGateRoom()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.IsGateRoom</parameter>
          </include>
        </markup>
    content.vb: Public Function IsGateRoom() As Boolean
  overload: Global.Room.IsGateRoom*
- uid: Global.Room.AddSnow
  commentId: M:Global.Room.AddSnow
  id: AddSnow
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: AddSnow()
  nameWithType: Room.AddSnow()
  fullName: Room.AddSnow()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.AddSnow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddSnow()
    content.vb: Public Sub AddSnow()
  overload: Global.Room.AddSnow*
- uid: Global.Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  commentId: M:Global.Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  id: SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  nameWithType: Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  fullName: Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SlugcatGamemodeUniqueRoomSettings(RainWorldGame game)
    parameters:
    - id: game
      type: Global.RainWorldGame
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>game</parameter>
            <parameter>M:Room.SlugcatGamemodeUniqueRoomSettings(RainWorldGame)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SlugcatGamemodeUniqueRoomSettings(game As RainWorldGame)
  overload: Global.Room.SlugcatGamemodeUniqueRoomSettings*
- uid: Global.Room.WaterLevelDisplacement(UnityEngine.Vector2)
  commentId: M:Global.Room.WaterLevelDisplacement(UnityEngine.Vector2)
  id: WaterLevelDisplacement(UnityEngine.Vector2)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: WaterLevelDisplacement(Vector2)
  nameWithType: Room.WaterLevelDisplacement(Vector2)
  fullName: Room.WaterLevelDisplacement(UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.WaterLevelDisplacement(UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float WaterLevelDisplacement(Vector2 pos)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.WaterLevelDisplacement(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.WaterLevelDisplacement(UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function WaterLevelDisplacement(pos As Vector2) As Single
  overload: Global.Room.WaterLevelDisplacement*
- uid: Global.Room.PointSubmerged(UnityEngine.Vector2,System.Single)
  commentId: M:Global.Room.PointSubmerged(UnityEngine.Vector2,System.Single)
  id: PointSubmerged(UnityEngine.Vector2,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PointSubmerged(Vector2, float)
  nameWithType: Room.PointSubmerged(Vector2, float)
  fullName: Room.PointSubmerged(UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.PointSubmerged(UnityEngine.Vector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool PointSubmerged(Vector2 pos, float yDisplacement)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.PointSubmerged(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    - id: yDisplacement
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yDisplacement</parameter>
            <parameter>M:Room.PointSubmerged(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.PointSubmerged(UnityEngine.Vector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function PointSubmerged(pos As Vector2, yDisplacement As Single) As Boolean
  overload: Global.Room.PointSubmerged*
  nameWithType.vb: Room.PointSubmerged(Vector2, Single)
  fullName.vb: Room.PointSubmerged(UnityEngine.Vector2, Single)
  name.vb: PointSubmerged(Vector2, Single)
- uid: Global.Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)
  commentId: M:Global.Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)
  id: FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: FindGroundBelow(Vector2, out Vector2, float)
  nameWithType: Room.FindGroundBelow(Vector2, out Vector2, float)
  fullName: Room.FindGroundBelow(UnityEngine.Vector2, out UnityEngine.Vector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 FindGroundBelow(Vector2 pos, out Vector2 dir, float maxDist = 200)
    parameters:
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    - id: dir
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dir</parameter>
            <parameter>M:Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    - id: maxDist
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>maxDist</parameter>
            <parameter>M:Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.FindGroundBelow(UnityEngine.Vector2,UnityEngine.Vector2@,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function FindGroundBelow(pos As Vector2, dir As Vector2, maxDist As Single = 200) As Vector2
  overload: Global.Room.FindGroundBelow*
  nameWithType.vb: Room.FindGroundBelow(Vector2, Vector2, Single)
  fullName.vb: Room.FindGroundBelow(UnityEngine.Vector2, UnityEngine.Vector2, Single)
  name.vb: FindGroundBelow(Vector2, Vector2, Single)
- uid: Global.Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)
  commentId: M:Global.Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)
  id: HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: HasAnySolidTileInXRange(int, int, int)
  nameWithType: Room.HasAnySolidTileInXRange(int, int, int)
  fullName: Room.HasAnySolidTileInXRange(int, int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool HasAnySolidTileInXRange(int y, int xA, int xB)
    parameters:
    - id: y
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>y</parameter>
            <parameter>M:Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: xA
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xA</parameter>
            <parameter>M:Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: xB
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xB</parameter>
            <parameter>M:Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Room.HasAnySolidTileInXRange(System.Int32,System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function HasAnySolidTileInXRange(y As Integer, xA As Integer, xB As Integer) As Boolean
  overload: Global.Room.HasAnySolidTileInXRange*
  nameWithType.vb: Room.HasAnySolidTileInXRange(Integer, Integer, Integer)
  fullName.vb: Room.HasAnySolidTileInXRange(Integer, Integer, Integer)
  name.vb: HasAnySolidTileInXRange(Integer, Integer, Integer)
- uid: Global.Room.abstractRoom
  commentId: P:Global.Room.abstractRoom
  id: abstractRoom
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: abstractRoom
  nameWithType: Room.abstractRoom
  fullName: Room.abstractRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.abstractRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AbstractRoom abstractRoom { get; }
    parameters: []
    return:
      type: Global.AbstractRoom
    content.vb: Public ReadOnly Property abstractRoom As AbstractRoom
  overload: Global.Room.abstractRoom*
- uid: Global.Room.TileWidth
  commentId: P:Global.Room.TileWidth
  id: TileWidth
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TileWidth
  nameWithType: Room.TileWidth
  fullName: Room.TileWidth
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.TileWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TileWidth { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TileWidth As Integer
  overload: Global.Room.TileWidth*
- uid: Global.Room.TileHeight
  commentId: P:Global.Room.TileHeight
  id: TileHeight
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: TileHeight
  nameWithType: Room.TileHeight
  fullName: Room.TileHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.TileHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TileHeight { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TileHeight As Integer
  overload: Global.Room.TileHeight*
- uid: Global.Room.PixelWidth
  commentId: P:Global.Room.PixelWidth
  id: PixelWidth
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PixelWidth
  nameWithType: Room.PixelWidth
  fullName: Room.PixelWidth
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.PixelWidth</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float PixelWidth { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property PixelWidth As Single
  overload: Global.Room.PixelWidth*
- uid: Global.Room.PixelHeight
  commentId: P:Global.Room.PixelHeight
  id: PixelHeight
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PixelHeight
  nameWithType: Room.PixelHeight
  fullName: Room.PixelHeight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.PixelHeight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float PixelHeight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property PixelHeight As Single
  overload: Global.Room.PixelHeight*
- uid: Global.Room.PlayersInRoom
  commentId: P:Global.Room.PlayersInRoom
  id: PlayersInRoom
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: PlayersInRoom
  nameWithType: Room.PlayersInRoom
  fullName: Room.PlayersInRoom
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.PlayersInRoom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Player> PlayersInRoom { get; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Player}
    content.vb: Public ReadOnly Property PlayersInRoom As List(Of Player)
  overload: Global.Room.PlayersInRoom*
- uid: Global.Room.BeingViewed
  commentId: P:Global.Room.BeingViewed
  id: BeingViewed
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: BeingViewed
  nameWithType: Room.BeingViewed
  fullName: Room.BeingViewed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.BeingViewed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BeingViewed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property BeingViewed As Boolean
  overload: Global.Room.BeingViewed*
- uid: Global.Room.ElectricPower
  commentId: P:Global.Room.ElectricPower
  id: ElectricPower
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ElectricPower
  nameWithType: Room.ElectricPower
  fullName: Room.ElectricPower
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.ElectricPower</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ElectricPower { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ElectricPower As Single
  overload: Global.Room.ElectricPower*
- uid: Global.Room.RainDrownOutSounds
  commentId: P:Global.Room.RainDrownOutSounds
  id: RainDrownOutSounds
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RainDrownOutSounds
  nameWithType: Room.RainDrownOutSounds
  fullName: Room.RainDrownOutSounds
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.RainDrownOutSounds</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RainDrownOutSounds { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RainDrownOutSounds As Single
  overload: Global.Room.RainDrownOutSounds*
- uid: Global.Room.BackgroundNoise
  commentId: P:Global.Room.BackgroundNoise
  id: BackgroundNoise
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: BackgroundNoise
  nameWithType: Room.BackgroundNoise
  fullName: Room.BackgroundNoise
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.BackgroundNoise</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float BackgroundNoise { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property BackgroundNoise As Single
  overload: Global.Room.BackgroundNoise*
- uid: Global.Room.updateList
  commentId: P:Global.Room.updateList
  id: updateList
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: updateList
  nameWithType: Room.updateList
  fullName: Room.updateList
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.updateList</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<UpdatableAndDeletable> updateList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{UpdatableAndDeletable}
    content.vb: Public Property updateList As List(Of UpdatableAndDeletable)
  overload: Global.Room.updateList*
- uid: Global.Room.drawableObjects
  commentId: P:Global.Room.drawableObjects
  id: drawableObjects
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: drawableObjects
  nameWithType: Room.drawableObjects
  fullName: Room.drawableObjects
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.drawableObjects</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<IDrawable> drawableObjects { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{IDrawable}
    content.vb: Public Property drawableObjects As List(Of IDrawable)
  overload: Global.Room.drawableObjects*
- uid: Global.Room.shortCutsReady
  commentId: P:Global.Room.shortCutsReady
  id: shortCutsReady
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: shortCutsReady
  nameWithType: Room.shortCutsReady
  fullName: Room.shortCutsReady
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.shortCutsReady</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool shortCutsReady { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property shortCutsReady As Boolean
  overload: Global.Room.shortCutsReady*
- uid: Global.Room.readyForAI
  commentId: P:Global.Room.readyForAI
  id: readyForAI
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: readyForAI
  nameWithType: Room.readyForAI
  fullName: Room.readyForAI
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.readyForAI</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool readyForAI { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property readyForAI As Boolean
  overload: Global.Room.readyForAI*
- uid: Global.Room.quantifiedCreaturesPlaced
  commentId: P:Global.Room.quantifiedCreaturesPlaced
  id: quantifiedCreaturesPlaced
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: quantifiedCreaturesPlaced
  nameWithType: Room.quantifiedCreaturesPlaced
  fullName: Room.quantifiedCreaturesPlaced
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.quantifiedCreaturesPlaced</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool quantifiedCreaturesPlaced { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property quantifiedCreaturesPlaced As Boolean
  overload: Global.Room.quantifiedCreaturesPlaced*
- uid: Global.Room.fullyLoaded
  commentId: P:Global.Room.fullyLoaded
  id: fullyLoaded
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: fullyLoaded
  nameWithType: Room.fullyLoaded
  fullName: Room.fullyLoaded
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.fullyLoaded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool fullyLoaded { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property fullyLoaded As Boolean
  overload: Global.Room.fullyLoaded*
- uid: Global.Room.ReadyForPlayer
  commentId: P:Global.Room.ReadyForPlayer
  id: ReadyForPlayer
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: ReadyForPlayer
  nameWithType: Room.ReadyForPlayer
  fullName: Room.ReadyForPlayer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.ReadyForPlayer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ReadyForPlayer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ReadyForPlayer As Boolean
  overload: Global.Room.ReadyForPlayer*
- uid: Global.Room.windDirection
  commentId: P:Global.Room.windDirection
  id: windDirection
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: windDirection
  nameWithType: Room.windDirection
  fullName: Room.windDirection
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.windDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 windDirection { get; }
    parameters: []
    return:
      type: UnityEngine.Vector2
    content.vb: Public ReadOnly Property windDirection As Vector2
  overload: Global.Room.windDirection*
- uid: Global.Room.RoomRect
  commentId: P:Global.Room.RoomRect
  id: RoomRect
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: RoomRect
  nameWithType: Room.RoomRect
  fullName: Room.RoomRect
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.RoomRect</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FloatRect RoomRect { get; }
    parameters: []
    return:
      type: Global.FloatRect
    content.vb: Public ReadOnly Property RoomRect As FloatRect
  overload: Global.Room.RoomRect*
- uid: Global.Room.AnyWarpPointBeingActivated
  commentId: P:Global.Room.AnyWarpPointBeingActivated
  id: AnyWarpPointBeingActivated
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: AnyWarpPointBeingActivated
  nameWithType: Room.AnyWarpPointBeingActivated
  fullName: Room.AnyWarpPointBeingActivated
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.AnyWarpPointBeingActivated</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AnyWarpPointBeingActivated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyWarpPointBeingActivated As Boolean
  overload: Global.Room.AnyWarpPointBeingActivated*
- uid: Global.Room.DustStormIntensity
  commentId: P:Global.Room.DustStormIntensity
  id: DustStormIntensity
  parent: Global.Room
  langs:
  - csharp
  - vb
  name: DustStormIntensity
  nameWithType: Room.DustStormIntensity
  fullName: Room.DustStormIntensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Room.DustStormIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DustStormIntensity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property DustStormIntensity As Single
  overload: Global.Room.DustStormIntensity*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{IAccessibilityModifier}
  commentId: T:System.Collections.Generic.List{IAccessibilityModifier}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IAccessibilityModifier>
  nameWithType: List<IAccessibilityModifier>
  fullName: System.Collections.Generic.List<IAccessibilityModifier>
  nameWithType.vb: List(Of IAccessibilityModifier)
  fullName.vb: System.Collections.Generic.List(Of IAccessibilityModifier)
  name.vb: List(Of IAccessibilityModifier)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.IAccessibilityModifier
    name: IAccessibilityModifier
    isExternal: true
    href: IAccessibilityModifier.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IAccessibilityModifier
    name: IAccessibilityModifier
    isExternal: true
    href: IAccessibilityModifier.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: RWCustom.IntVector2[][]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[][]
  nameWithType: IntVector2[][]
  fullName: RWCustom.IntVector2[][]
  nameWithType.vb: IntVector2()()
  fullName.vb: RWCustom.IntVector2()()
  name.vb: IntVector2()()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
  - name: (
  - name: )
- uid: RWCustom.IntVector2[]
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2[]
  nameWithType: IntVector2[]
  fullName: RWCustom.IntVector2[]
  nameWithType.vb: IntVector2()
  fullName.vb: RWCustom.IntVector2()
  name.vb: IntVector2()
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: (
  - name: )
- uid: Global.WaterFall[]
  isExternal: true
  href: WaterFall.html
  name: WaterFall[]
  nameWithType: WaterFall[]
  fullName: WaterFall[]
  nameWithType.vb: WaterFall()
  fullName.vb: WaterFall()
  name.vb: WaterFall()
  spec.csharp:
  - uid: Global.WaterFall
    name: WaterFall
    isExternal: true
    href: WaterFall.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.WaterFall
    name: WaterFall
    isExternal: true
    href: WaterFall.html
  - name: (
  - name: )
- uid: Global.RoomBorderExit[]
  isExternal: true
  href: RoomBorderExit.html
  name: RoomBorderExit[]
  nameWithType: RoomBorderExit[]
  fullName: RoomBorderExit[]
  nameWithType.vb: RoomBorderExit()
  fullName.vb: RoomBorderExit()
  name.vb: RoomBorderExit()
  spec.csharp:
  - uid: Global.RoomBorderExit
    name: RoomBorderExit
    isExternal: true
    href: RoomBorderExit.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.RoomBorderExit
    name: RoomBorderExit
    isExternal: true
    href: RoomBorderExit.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{LightSource}
  commentId: T:System.Collections.Generic.List{LightSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LightSource>
  nameWithType: List<LightSource>
  fullName: System.Collections.Generic.List<LightSource>
  nameWithType.vb: List(Of LightSource)
  fullName.vb: System.Collections.Generic.List(Of LightSource)
  name.vb: List(Of LightSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.LightSource
    name: LightSource
    isExternal: true
    href: LightSource.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.LightSource
    name: LightSource
    isExternal: true
    href: LightSource.html
  - name: )
- uid: System.Collections.Generic.List{VisionObscurer}
  commentId: T:System.Collections.Generic.List{VisionObscurer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<VisionObscurer>
  nameWithType: List<VisionObscurer>
  fullName: System.Collections.Generic.List<VisionObscurer>
  nameWithType.vb: List(Of VisionObscurer)
  fullName.vb: System.Collections.Generic.List(Of VisionObscurer)
  name.vb: List(Of VisionObscurer)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.VisionObscurer
    name: VisionObscurer
    isExternal: true
    href: VisionObscurer.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.VisionObscurer
    name: VisionObscurer
    isExternal: true
    href: VisionObscurer.html
  - name: )
- uid: System.Collections.Generic.List{PlacedObject}
  commentId: T:System.Collections.Generic.List{PlacedObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PlacedObject>
  nameWithType: List<PlacedObject>
  fullName: System.Collections.Generic.List<PlacedObject>
  nameWithType.vb: List(Of PlacedObject)
  fullName.vb: System.Collections.Generic.List(Of PlacedObject)
  name.vb: List(Of PlacedObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.DeathFallGraphic
  commentId: T:Global.DeathFallGraphic
  isExternal: true
  href: DeathFallGraphic.html
  name: DeathFallGraphic
  nameWithType: DeathFallGraphic
  fullName: DeathFallGraphic
- uid: Global.Lightning
  commentId: T:Global.Lightning
  isExternal: true
  href: Lightning.html
  name: Lightning
  nameWithType: Lightning
  fullName: Lightning
- uid: Watcher.LightningMaker
  commentId: T:Watcher.LightningMaker
  parent: Watcher
  isExternal: true
  href: Watcher.LightningMaker.html
  name: LightningMaker
  nameWithType: LightningMaker
  fullName: Watcher.LightningMaker
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: Watcher.LethalThunderStorm
  commentId: T:Watcher.LethalThunderStorm
  parent: Watcher
  isExternal: true
  href: Watcher.LethalThunderStorm.html
  name: LethalThunderStorm
  nameWithType: LethalThunderStorm
  fullName: Watcher.LethalThunderStorm
- uid: Global.RippleCreatureTracker
  commentId: T:Global.RippleCreatureTracker
  isExternal: true
  href: RippleCreatureTracker.html
  name: RippleCreatureTracker
  nameWithType: RippleCreatureTracker
  fullName: RippleCreatureTracker
- uid: System.Collections.Generic.List{ChunkGlue}
  commentId: T:System.Collections.Generic.List{ChunkGlue}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ChunkGlue>
  nameWithType: List<ChunkGlue>
  fullName: System.Collections.Generic.List<ChunkGlue>
  nameWithType.vb: List(Of ChunkGlue)
  fullName.vb: System.Collections.Generic.List(Of ChunkGlue)
  name.vb: List(Of ChunkGlue)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ChunkGlue
    name: ChunkGlue
    isExternal: true
    href: ChunkGlue.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ChunkGlue
    name: ChunkGlue
    isExternal: true
    href: ChunkGlue.html
  - name: )
- uid: Global.RoomSettings
  commentId: T:Global.RoomSettings
  isExternal: true
  href: RoomSettings.html
  name: RoomSettings
  nameWithType: RoomSettings
  fullName: RoomSettings
- uid: Global.Room.Tile[,]
  isExternal: true
  href: Room.Tile.html
  name: Tile[,]
  nameWithType: Room.Tile[,]
  fullName: Room.Tile[,]
  nameWithType.vb: Room.Tile(,)
  fullName.vb: Room.Tile(,)
  name.vb: Tile(,)
  spec.csharp:
  - uid: Global.Room.Tile
    name: Tile
    isExternal: true
    href: Room.Tile.html
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: Global.Room.Tile
    name: Tile
    isExternal: true
    href: Room.Tile.html
  - name: (
  - name: ','
  - name: )
- uid: Global.Room.Tile
  commentId: T:Global.Room.Tile
  isExternal: true
  href: Room.html
  name: Room.Tile
  nameWithType: Room.Tile
  fullName: Room.Tile
  spec.csharp:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.Tile
    name: Tile
    isExternal: true
    href: Room.Tile.html
  spec.vb:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.Tile
    name: Tile
    isExternal: true
    href: Room.Tile.html
- uid: System.Collections.Generic.List{PhysicalObject}[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<PhysicalObject>[]
  nameWithType: List<PhysicalObject>[]
  fullName: System.Collections.Generic.List<PhysicalObject>[]
  nameWithType.vb: List(Of PhysicalObject)()
  fullName.vb: System.Collections.Generic.List(Of PhysicalObject)()
  name.vb: List(Of PhysicalObject)()
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: '>'
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: )
  - name: (
  - name: )
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.AImap
  commentId: T:Global.AImap
  isExternal: true
  href: AImap.html
  name: AImap
  nameWithType: AImap
  fullName: AImap
- uid: Global.SocialEventRecognizer
  commentId: T:Global.SocialEventRecognizer
  isExternal: true
  href: SocialEventRecognizer.html
  name: SocialEventRecognizer
  nameWithType: SocialEventRecognizer
  fullName: SocialEventRecognizer
- uid: Global.QuickPathFinder
  commentId: T:Global.QuickPathFinder
  isExternal: true
  href: QuickPathFinder.html
  name: QuickPathFinder
  nameWithType: QuickPathFinder
  fullName: QuickPathFinder
- uid: Global.ShortcutData[]
  isExternal: true
  href: ShortcutData.html
  name: ShortcutData[]
  nameWithType: ShortcutData[]
  fullName: ShortcutData[]
  nameWithType.vb: ShortcutData()
  fullName.vb: ShortcutData()
  name.vb: ShortcutData()
  spec.csharp:
  - uid: Global.ShortcutData
    name: ShortcutData
    isExternal: true
    href: ShortcutData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.ShortcutData
    name: ShortcutData
    isExternal: true
    href: ShortcutData.html
  - name: (
  - name: )
- uid: System.Collections.Generic.List{RWCustom.IntVector2}
  commentId: T:System.Collections.Generic.List{RWCustom.IntVector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IntVector2>
  nameWithType: List<IntVector2>
  fullName: System.Collections.Generic.List<RWCustom.IntVector2>
  nameWithType.vb: List(Of IntVector2)
  fullName.vb: System.Collections.Generic.List(Of RWCustom.IntVector2)
  name.vb: List(Of IntVector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: )
- uid: UnityEngine.Vector2[]
  isExternal: true
  name: Vector2[]
  nameWithType: Vector2[]
  fullName: UnityEngine.Vector2[]
  nameWithType.vb: Vector2()
  fullName.vb: UnityEngine.Vector2()
  name.vb: Vector2()
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: Global.ClimbableVinesSystem
  commentId: T:Global.ClimbableVinesSystem
  isExternal: true
  href: ClimbableVinesSystem.html
  name: ClimbableVinesSystem
  nameWithType: ClimbableVinesSystem
  fullName: ClimbableVinesSystem
- uid: Global.InsectCoordinator
  commentId: T:Global.InsectCoordinator
  isExternal: true
  href: InsectCoordinator.html
  name: InsectCoordinator
  nameWithType: InsectCoordinator
  fullName: InsectCoordinator
- uid: Global.TerrainCurve
  commentId: T:Global.TerrainCurve
  isExternal: true
  href: TerrainCurve.html
  name: TerrainCurve
  nameWithType: TerrainCurve
  fullName: TerrainCurve
- uid: Global.LocustSystem
  commentId: T:Global.LocustSystem
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem
  nameWithType: LocustSystem
  fullName: LocustSystem
- uid: Global.FliesRoomAI
  commentId: T:Global.FliesRoomAI
  isExternal: true
  href: FliesRoomAI.html
  name: FliesRoomAI
  nameWithType: FliesRoomAI
  fullName: FliesRoomAI
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.DebugPerTileVisualizer
  commentId: T:Global.DebugPerTileVisualizer
  isExternal: true
  href: DebugPerTileVisualizer.html
  name: DebugPerTileVisualizer
  nameWithType: DebugPerTileVisualizer
  fullName: DebugPerTileVisualizer
- uid: Global.Water
  commentId: T:Global.Water
  isExternal: true
  href: Water.html
  name: Water
  nameWithType: Water
  fullName: Water
- uid: Global.RegionGate
  commentId: T:Global.RegionGate
  isExternal: true
  href: RegionGate.html
  name: RegionGate
  nameWithType: RegionGate
  fullName: RegionGate
- uid: Global.ShelterDoor
  commentId: T:Global.ShelterDoor
  isExternal: true
  href: ShelterDoor.html
  name: ShelterDoor
  nameWithType: ShelterDoor
  fullName: ShelterDoor
- uid: Global.BrainMold
  commentId: T:Global.BrainMold
  isExternal: true
  href: BrainMold.html
  name: BrainMold
  nameWithType: BrainMold
  fullName: BrainMold
- uid: Global.RoomRain
  commentId: T:Global.RoomRain
  isExternal: true
  href: RoomRain.html
  name: RoomRain
  nameWithType: RoomRain
  fullName: RoomRain
- uid: Watcher.Sandstorm
  commentId: T:Watcher.Sandstorm
  parent: Watcher
  isExternal: true
  href: Watcher.Sandstorm.html
  name: Sandstorm
  nameWithType: Sandstorm
  fullName: Watcher.Sandstorm
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Collections.Generic.List{MoreSlugcats.LightningMachine}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.LightningMachine}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LightningMachine>
  nameWithType: List<LightningMachine>
  fullName: System.Collections.Generic.List<MoreSlugcats.LightningMachine>
  nameWithType.vb: List(Of LightningMachine)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.LightningMachine)
  name.vb: List(Of LightningMachine)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.LightningMachine
    name: LightningMachine
    isExternal: true
    href: MoreSlugcats.LightningMachine.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.LightningMachine
    name: LightningMachine
    isExternal: true
    href: MoreSlugcats.LightningMachine.html
  - name: )
- uid: System.Collections.Generic.List{MoreSlugcats.EnergySwirl}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.EnergySwirl}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<EnergySwirl>
  nameWithType: List<EnergySwirl>
  fullName: System.Collections.Generic.List<MoreSlugcats.EnergySwirl>
  nameWithType.vb: List(Of EnergySwirl)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.EnergySwirl)
  name.vb: List(Of EnergySwirl)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.EnergySwirl
    name: EnergySwirl
    isExternal: true
    href: MoreSlugcats.EnergySwirl.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.EnergySwirl
    name: EnergySwirl
    isExternal: true
    href: MoreSlugcats.EnergySwirl.html
  - name: )
- uid: System.Collections.Generic.List{MoreSlugcats.SnowSource}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.SnowSource}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<SnowSource>
  nameWithType: List<SnowSource>
  fullName: System.Collections.Generic.List<MoreSlugcats.SnowSource>
  nameWithType.vb: List(Of SnowSource)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.SnowSource)
  name.vb: List(Of SnowSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.SnowSource
    name: SnowSource
    isExternal: true
    href: MoreSlugcats.SnowSource.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.SnowSource
    name: SnowSource
    isExternal: true
    href: MoreSlugcats.SnowSource.html
  - name: )
- uid: System.Collections.Generic.List{MoreSlugcats.LocalBlizzard}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.LocalBlizzard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LocalBlizzard>
  nameWithType: List<LocalBlizzard>
  fullName: System.Collections.Generic.List<MoreSlugcats.LocalBlizzard>
  nameWithType.vb: List(Of LocalBlizzard)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.LocalBlizzard)
  name.vb: List(Of LocalBlizzard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.LocalBlizzard
    name: LocalBlizzard
    isExternal: true
    href: MoreSlugcats.LocalBlizzard.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.LocalBlizzard
    name: LocalBlizzard
    isExternal: true
    href: MoreSlugcats.LocalBlizzard.html
  - name: )
- uid: System.Collections.Generic.List{UnityEngine.Vector2}
  commentId: T:System.Collections.Generic.List{UnityEngine.Vector2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Vector2>
  nameWithType: List<Vector2>
  fullName: System.Collections.Generic.List<UnityEngine.Vector2>
  nameWithType.vb: List(Of Vector2)
  fullName.vb: System.Collections.Generic.List(Of UnityEngine.Vector2)
  name.vb: List(Of Vector2)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: System.Collections.Generic.List{MoreSlugcats.CellDistortion}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.CellDistortion}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CellDistortion>
  nameWithType: List<CellDistortion>
  fullName: System.Collections.Generic.List<MoreSlugcats.CellDistortion>
  nameWithType.vb: List(Of CellDistortion)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.CellDistortion)
  name.vb: List(Of CellDistortion)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.CellDistortion
    name: CellDistortion
    isExternal: true
    href: MoreSlugcats.CellDistortion.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.CellDistortion
    name: CellDistortion
    isExternal: true
    href: MoreSlugcats.CellDistortion.html
  - name: )
- uid: MoreSlugcats.Snow
  commentId: T:MoreSlugcats.Snow
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.Snow.html
  name: Snow
  nameWithType: Snow
  fullName: MoreSlugcats.Snow
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: MoreSlugcats.BlizzardGraphics
  commentId: T:MoreSlugcats.BlizzardGraphics
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.BlizzardGraphics.html
  name: BlizzardGraphics
  nameWithType: BlizzardGraphics
  fullName: MoreSlugcats.BlizzardGraphics
- uid: Global.Room.WaterFluxController
  commentId: T:Global.Room.WaterFluxController
  isExternal: true
  href: Room.html
  name: Room.WaterFluxController
  nameWithType: Room.WaterFluxController
  fullName: Room.WaterFluxController
  spec.csharp:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.WaterFluxController
    name: WaterFluxController
    isExternal: true
    href: Room.WaterFluxController.html
  spec.vb:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.WaterFluxController
    name: WaterFluxController
    isExternal: true
    href: Room.WaterFluxController.html
- uid: System.Collections.Generic.List{MoreSlugcats.IProvideWarmth}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.IProvideWarmth}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IProvideWarmth>
  nameWithType: List<IProvideWarmth>
  fullName: System.Collections.Generic.List<MoreSlugcats.IProvideWarmth>
  nameWithType.vb: List(Of IProvideWarmth)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.IProvideWarmth)
  name.vb: List(Of IProvideWarmth)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.IProvideWarmth
    name: IProvideWarmth
    isExternal: true
    href: MoreSlugcats.IProvideWarmth.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.IProvideWarmth
    name: IProvideWarmth
    isExternal: true
    href: MoreSlugcats.IProvideWarmth.html
  - name: )
- uid: System.Collections.Generic.List{ZapCoil}
  commentId: T:System.Collections.Generic.List{ZapCoil}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ZapCoil>
  nameWithType: List<ZapCoil>
  fullName: System.Collections.Generic.List<ZapCoil>
  nameWithType.vb: List(Of ZapCoil)
  fullName.vb: System.Collections.Generic.List(Of ZapCoil)
  name.vb: List(Of ZapCoil)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ZapCoil
    name: ZapCoil
    isExternal: true
    href: ZapCoil.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ZapCoil
    name: ZapCoil
    isExternal: true
    href: ZapCoil.html
  - name: )
- uid: System.Collections.Generic.List{MoreSlugcats.OEsphere}
  commentId: T:System.Collections.Generic.List{MoreSlugcats.OEsphere}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<OEsphere>
  nameWithType: List<OEsphere>
  fullName: System.Collections.Generic.List<MoreSlugcats.OEsphere>
  nameWithType.vb: List(Of OEsphere)
  fullName.vb: System.Collections.Generic.List(Of MoreSlugcats.OEsphere)
  name.vb: List(Of OEsphere)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: MoreSlugcats.OEsphere
    name: OEsphere
    isExternal: true
    href: MoreSlugcats.OEsphere.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: MoreSlugcats.OEsphere
    name: OEsphere
    isExternal: true
    href: MoreSlugcats.OEsphere.html
  - name: )
- uid: Global.Oracle.OracleID
  commentId: T:Global.Oracle.OracleID
  isExternal: true
  href: Oracle.html
  name: Oracle.OracleID
  nameWithType: Oracle.OracleID
  fullName: Oracle.OracleID
  spec.csharp:
  - uid: Global.Oracle
    name: Oracle
    isExternal: true
    href: Oracle.html
  - name: .
  - uid: Global.Oracle.OracleID
    name: OracleID
    isExternal: true
    href: Oracle.OracleID.html
  spec.vb:
  - uid: Global.Oracle
    name: Oracle
    isExternal: true
    href: Oracle.html
  - name: .
  - uid: Global.Oracle.OracleID
    name: OracleID
    isExternal: true
    href: Oracle.OracleID.html
- uid: Watcher.RippleFullScreen
  commentId: T:Watcher.RippleFullScreen
  parent: Watcher
  isExternal: true
  href: Watcher.RippleFullScreen.html
  name: RippleFullScreen
  nameWithType: RippleFullScreen
  fullName: Watcher.RippleFullScreen
- uid: System.Collections.Generic.List{Watcher.CosmeticRipple}
  commentId: T:System.Collections.Generic.List{Watcher.CosmeticRipple}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<CosmeticRipple>
  nameWithType: List<CosmeticRipple>
  fullName: System.Collections.Generic.List<Watcher.CosmeticRipple>
  nameWithType.vb: List(Of CosmeticRipple)
  fullName.vb: System.Collections.Generic.List(Of Watcher.CosmeticRipple)
  name.vb: List(Of CosmeticRipple)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Watcher.CosmeticRipple
    name: CosmeticRipple
    isExternal: true
    href: Watcher.CosmeticRipple.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Watcher.CosmeticRipple
    name: CosmeticRipple
    isExternal: true
    href: Watcher.CosmeticRipple.html
  - name: )
- uid: System.Collections.Generic.List{Watcher.WarpPoint}
  commentId: T:System.Collections.Generic.List{Watcher.WarpPoint}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<WarpPoint>
  nameWithType: List<WarpPoint>
  fullName: System.Collections.Generic.List<Watcher.WarpPoint>
  nameWithType.vb: List(Of WarpPoint)
  fullName.vb: System.Collections.Generic.List(Of Watcher.WarpPoint)
  name.vb: List(Of WarpPoint)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: )
- uid: System.Collections.Generic.List{VoidSpawn}
  commentId: T:System.Collections.Generic.List{VoidSpawn}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<VoidSpawn>
  nameWithType: List<VoidSpawn>
  fullName: System.Collections.Generic.List<VoidSpawn>
  nameWithType.vb: List(Of VoidSpawn)
  fullName.vb: System.Collections.Generic.List(Of VoidSpawn)
  name.vb: List(Of VoidSpawn)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.VoidSpawn
    name: VoidSpawn
    isExternal: true
    href: VoidSpawn.html
  - name: )
- uid: Global.Room.SetAbstractRoom*
  commentId: Overload:Global.Room.SetAbstractRoom
  isExternal: true
  href: Global.Room.html#Room_SetAbstractRoom_AbstractRoom_
  name: SetAbstractRoom
  nameWithType: Room.SetAbstractRoom
  fullName: Room.SetAbstractRoom
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
- uid: Global.Room.RandomTile*
  commentId: Overload:Global.Room.RandomTile
  isExternal: true
  href: Global.Room.html#Room_RandomTile
  name: RandomTile
  nameWithType: Room.RandomTile
  fullName: Room.RandomTile
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.Room.RandomPos*
  commentId: Overload:Global.Room.RandomPos
  isExternal: true
  href: Global.Room.html#Room_RandomPos
  name: RandomPos
  nameWithType: Room.RandomPos
  fullName: Room.RandomPos
- uid: Global.Room.MakeBackgroundNoise*
  commentId: Overload:Global.Room.MakeBackgroundNoise
  isExternal: true
  href: Global.Room.html#Room_MakeBackgroundNoise_System_Single_
  name: MakeBackgroundNoise
  nameWithType: Room.MakeBackgroundNoise
  fullName: Room.MakeBackgroundNoise
- uid: Global.Room.FloatWaterLevel*
  commentId: Overload:Global.Room.FloatWaterLevel
  isExternal: true
  href: Global.Room.html#Room_FloatWaterLevel_UnityEngine_Vector2_
  name: FloatWaterLevel
  nameWithType: Room.FloatWaterLevel
  fullName: Room.FloatWaterLevel
- uid: Global.Room.PointSubmerged*
  commentId: Overload:Global.Room.PointSubmerged
  isExternal: true
  href: Global.Room.html#Room_PointSubmerged_UnityEngine_Vector2_
  name: PointSubmerged
  nameWithType: Room.PointSubmerged
  fullName: Room.PointSubmerged
- uid: Global.Room.#ctor*
  commentId: Overload:Global.Room.#ctor
  isExternal: true
  href: Global.Room.html#Room__ctor_RainWorldGame_World_AbstractRoom_System_Boolean_
  name: Room
  nameWithType: Room.Room
  fullName: Room.Room
  nameWithType.vb: Room.New
  fullName.vb: Room.New
  name.vb: New
- uid: Global.Room.AddWater*
  commentId: Overload:Global.Room.AddWater
  isExternal: true
  href: Global.Room.html#Room_AddWater
  name: AddWater
  nameWithType: Room.AddWater
  fullName: Room.AddWater
- uid: Global.Room.Loaded*
  commentId: Overload:Global.Room.Loaded
  isExternal: true
  href: Global.Room.html#Room_Loaded
  name: Loaded
  nameWithType: Room.Loaded
  fullName: Room.Loaded
- uid: Global.Room.AssignOriginAndIteration*
  commentId: Overload:Global.Room.AssignOriginAndIteration
  isExternal: true
  href: Global.Room.html#Room_AssignOriginAndIteration_AbstractPhysicalObject_System_Int32_
  name: AssignOriginAndIteration
  nameWithType: Room.AssignOriginAndIteration
  fullName: Room.AssignOriginAndIteration
- uid: Global.AbstractPhysicalObject
  commentId: T:Global.AbstractPhysicalObject
  isExternal: true
  href: AbstractPhysicalObject.html
  name: AbstractPhysicalObject
  nameWithType: AbstractPhysicalObject
  fullName: AbstractPhysicalObject
- uid: Global.Room.SetAbstractRoomAndPlacedObjectNumber*
  commentId: Overload:Global.Room.SetAbstractRoomAndPlacedObjectNumber
  isExternal: true
  href: Global.Room.html#Room_SetAbstractRoomAndPlacedObjectNumber_System_String_System_Int32_
  name: SetAbstractRoomAndPlacedObjectNumber
  nameWithType: Room.SetAbstractRoomAndPlacedObjectNumber
  fullName: Room.SetAbstractRoomAndPlacedObjectNumber
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.Room.Unloaded*
  commentId: Overload:Global.Room.Unloaded
  isExternal: true
  href: Global.Room.html#Room_Unloaded
  name: Unloaded
  nameWithType: Room.Unloaded
  fullName: Room.Unloaded
- uid: Global.Room.NowViewed*
  commentId: Overload:Global.Room.NowViewed
  isExternal: true
  href: Global.Room.html#Room_NowViewed
  name: NowViewed
  nameWithType: Room.NowViewed
  fullName: Room.NowViewed
- uid: Global.Room.NoLongerViewed*
  commentId: Overload:Global.Room.NoLongerViewed
  isExternal: true
  href: Global.Room.html#Room_NoLongerViewed
  name: NoLongerViewed
  nameWithType: Room.NoLongerViewed
  fullName: Room.NoLongerViewed
- uid: Global.Room.BlinkShortCut*
  commentId: Overload:Global.Room.BlinkShortCut
  isExternal: true
  href: Global.Room.html#Room_BlinkShortCut_System_Int32_System_Int32_System_Single_
  name: BlinkShortCut
  nameWithType: Room.BlinkShortCut
  fullName: Room.BlinkShortCut
- uid: Global.Room.ShortCutsReady*
  commentId: Overload:Global.Room.ShortCutsReady
  isExternal: true
  href: Global.Room.html#Room_ShortCutsReady
  name: ShortCutsReady
  nameWithType: Room.ShortCutsReady
  fullName: Room.ShortCutsReady
- uid: Global.Room.ReadyForAI*
  commentId: Overload:Global.Room.ReadyForAI
  isExternal: true
  href: Global.Room.html#Room_ReadyForAI
  name: ReadyForAI
  nameWithType: Room.ReadyForAI
  fullName: Room.ReadyForAI
- uid: Global.Room.TrySpawnWarpPoint*
  commentId: Overload:Global.Room.TrySpawnWarpPoint
  isExternal: true
  href: Global.Room.html#Room_TrySpawnWarpPoint_PlacedObject_System_Boolean_System_Boolean_System_Boolean_
  name: TrySpawnWarpPoint
  nameWithType: Room.TrySpawnWarpPoint
  fullName: Room.TrySpawnWarpPoint
- uid: Global.PlacedObject
  commentId: T:Global.PlacedObject
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject
  nameWithType: PlacedObject
  fullName: PlacedObject
- uid: Watcher.WarpPoint
  commentId: T:Watcher.WarpPoint
  parent: Watcher
  isExternal: true
  href: Watcher.WarpPoint.html
  name: WarpPoint
  nameWithType: WarpPoint
  fullName: Watcher.WarpPoint
- uid: Global.Room.CheckForSpawnedWarp*
  commentId: Overload:Global.Room.CheckForSpawnedWarp
  isExternal: true
  href: Global.Room.html#Room_CheckForSpawnedWarp_Watcher_WarpPoint_WarpPointData_
  name: CheckForSpawnedWarp
  nameWithType: Room.CheckForSpawnedWarp
  fullName: Room.CheckForSpawnedWarp
- uid: Watcher.WarpPoint.WarpPointData
  commentId: T:Watcher.WarpPoint.WarpPointData
  parent: Watcher
  isExternal: true
  href: Watcher.WarpPoint.html
  name: WarpPoint.WarpPointData
  nameWithType: WarpPoint.WarpPointData
  fullName: Watcher.WarpPoint.WarpPointData
  spec.csharp:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
  spec.vb:
  - uid: Watcher.WarpPoint
    name: WarpPoint
    isExternal: true
    href: Watcher.WarpPoint.html
  - name: .
  - uid: Watcher.WarpPoint.WarpPointData
    name: WarpPointData
    isExternal: true
    href: Watcher.WarpPoint.WarpPointData.html
- uid: Global.Room.TrySpawnRippleRegion*
  commentId: Overload:Global.Room.TrySpawnRippleRegion
  isExternal: true
  href: Global.Room.html#Room_TrySpawnRippleRegion_PlacedObject_System_Boolean_System_Boolean_System_Boolean_System_String_
  name: TrySpawnRippleRegion
  nameWithType: Room.TrySpawnRippleRegion
  fullName: Room.TrySpawnRippleRegion
- uid: Watcher.CosmeticRipple
  commentId: T:Watcher.CosmeticRipple
  parent: Watcher
  isExternal: true
  href: Watcher.CosmeticRipple.html
  name: CosmeticRipple
  nameWithType: CosmeticRipple
  fullName: Watcher.CosmeticRipple
- uid: Global.Room.MaterializeRippleSpawn*
  commentId: Overload:Global.Room.MaterializeRippleSpawn
  isExternal: true
  href: Global.Room.html#Room_MaterializeRippleSpawn_UnityEngine_Vector2_Room_RippleSpawnSource_
  name: MaterializeRippleSpawn
  nameWithType: Room.MaterializeRippleSpawn
  fullName: Room.MaterializeRippleSpawn
- uid: Global.Room.RippleSpawnSource
  commentId: T:Global.Room.RippleSpawnSource
  isExternal: true
  href: Room.html
  name: Room.RippleSpawnSource
  nameWithType: Room.RippleSpawnSource
  fullName: Room.RippleSpawnSource
  spec.csharp:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.RippleSpawnSource
    name: RippleSpawnSource
    isExternal: true
    href: Room.RippleSpawnSource.html
  spec.vb:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.RippleSpawnSource
    name: RippleSpawnSource
    isExternal: true
    href: Room.RippleSpawnSource.html
- uid: Global.Room.InfectRoomWithSentientRot*
  commentId: Overload:Global.Room.InfectRoomWithSentientRot
  isExternal: true
  href: Global.Room.html#Room_InfectRoomWithSentientRot_System_Single_
  name: InfectRoomWithSentientRot
  nameWithType: Room.InfectRoomWithSentientRot
  fullName: Room.InfectRoomWithSentientRot
- uid: Global.Room.UpdateSentientRotEffect*
  commentId: Overload:Global.Room.UpdateSentientRotEffect
  isExternal: true
  href: Global.Room.html#Room_UpdateSentientRotEffect
  name: UpdateSentientRotEffect
  nameWithType: Room.UpdateSentientRotEffect
  fullName: Room.UpdateSentientRotEffect
- uid: Global.Room.InitializeSentientRotPresenceInRoom*
  commentId: Overload:Global.Room.InitializeSentientRotPresenceInRoom
  isExternal: true
  href: Global.Room.html#Room_InitializeSentientRotPresenceInRoom_System_Single_
  name: InitializeSentientRotPresenceInRoom
  nameWithType: Room.InitializeSentientRotPresenceInRoom
  fullName: Room.InitializeSentientRotPresenceInRoom
- uid: Global.Room.AddObject*
  commentId: Overload:Global.Room.AddObject
  isExternal: true
  href: Global.Room.html#Room_AddObject_UpdatableAndDeletable_
  name: AddObject
  nameWithType: Room.AddObject
  fullName: Room.AddObject
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.Room.DestroyObject*
  commentId: Overload:Global.Room.DestroyObject
  isExternal: true
  href: Global.Room.html#Room_DestroyObject_EntityID_
  name: DestroyObject
  nameWithType: Room.DestroyObject
  fullName: Room.DestroyObject
- uid: Global.EntityID
  commentId: T:Global.EntityID
  isExternal: true
  href: EntityID.html
  name: EntityID
  nameWithType: EntityID
  fullName: EntityID
- uid: Global.Room.RemoveObject*
  commentId: Overload:Global.Room.RemoveObject
  isExternal: true
  href: Global.Room.html#Room_RemoveObject_UpdatableAndDeletable_
  name: RemoveObject
  nameWithType: Room.RemoveObject
  fullName: Room.RemoveObject
- uid: Global.Room.ChangeCollisionLayerForObject*
  commentId: Overload:Global.Room.ChangeCollisionLayerForObject
  isExternal: true
  href: Global.Room.html#Room_ChangeCollisionLayerForObject_PhysicalObject_System_Int32_
  name: ChangeCollisionLayerForObject
  nameWithType: Room.ChangeCollisionLayerForObject
  fullName: Room.ChangeCollisionLayerForObject
- uid: Global.PhysicalObject
  commentId: T:Global.PhysicalObject
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject
  nameWithType: PhysicalObject
  fullName: PhysicalObject
- uid: Global.Room.Update*
  commentId: Overload:Global.Room.Update
  isExternal: true
  href: Global.Room.html#Room_Update
  name: Update
  nameWithType: Room.Update
  fullName: Room.Update
- uid: Global.Room.ReallyTrulyRealizedInRoom*
  commentId: Overload:Global.Room.ReallyTrulyRealizedInRoom
  isExternal: true
  href: Global.Room.html#Room_ReallyTrulyRealizedInRoom_AbstractPhysicalObject_
  name: ReallyTrulyRealizedInRoom
  nameWithType: Room.ReallyTrulyRealizedInRoom
  fullName: Room.ReallyTrulyRealizedInRoom
- uid: Global.Room.GetTilePosition*
  commentId: Overload:Global.Room.GetTilePosition
  isExternal: true
  href: Global.Room.html#Room_GetTilePosition_UnityEngine_Vector2_
  name: GetTilePosition
  nameWithType: Room.GetTilePosition
  fullName: Room.GetTilePosition
- uid: Global.Room.StaticGetTilePosition*
  commentId: Overload:Global.Room.StaticGetTilePosition
  isExternal: true
  href: Global.Room.html#Room_StaticGetTilePosition_UnityEngine_Vector2_
  name: StaticGetTilePosition
  nameWithType: Room.StaticGetTilePosition
  fullName: Room.StaticGetTilePosition
- uid: Unity.Mathematics.float2
  isExternal: true
  name: float2
  nameWithType: float2
  fullName: Unity.Mathematics.float2
- uid: Unity.Mathematics.int2
  isExternal: true
  name: int2
  nameWithType: int2
  fullName: Unity.Mathematics.int2
- uid: Global.Room.GetWorldCoordinate*
  commentId: Overload:Global.Room.GetWorldCoordinate
  isExternal: true
  href: Global.Room.html#Room_GetWorldCoordinate_UnityEngine_Vector2_
  name: GetWorldCoordinate
  nameWithType: Room.GetWorldCoordinate
  fullName: Room.GetWorldCoordinate
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: Global.Room.MiddleOfTile*
  commentId: Overload:Global.Room.MiddleOfTile
  isExternal: true
  href: Global.Room.html#Room_MiddleOfTile_System_Int32_System_Int32_
  name: MiddleOfTile
  nameWithType: Room.MiddleOfTile
  fullName: Room.MiddleOfTile
- uid: Global.Room.TileRect*
  commentId: Overload:Global.Room.TileRect
  isExternal: true
  href: Global.Room.html#Room_TileRect_RWCustom_IntVector2_
  name: TileRect
  nameWithType: Room.TileRect
  fullName: Room.TileRect
- uid: Global.FloatRect
  commentId: T:Global.FloatRect
  isExternal: true
  href: FloatRect.html
  name: FloatRect
  nameWithType: FloatRect
  fullName: FloatRect
- uid: Global.Room.GetTile*
  commentId: Overload:Global.Room.GetTile
  isExternal: true
  href: Global.Room.html#Room_GetTile_UnityEngine_Vector2_
  name: GetTile
  nameWithType: Room.GetTile
  fullName: Room.GetTile
- uid: Global.Room.HasAnySolid*
  commentId: Overload:Global.Room.HasAnySolid
  isExternal: true
  href: Global.Room.html#Room_HasAnySolid_RWCustom_IntVector2_
  name: HasAnySolid
  nameWithType: Room.HasAnySolid
  fullName: Room.HasAnySolid
- uid: Global.Room.IsCornerFree*
  commentId: Overload:Global.Room.IsCornerFree
  isExternal: true
  href: Global.Room.html#Room_IsCornerFree_System_Int32_System_Int32_FloatRect_CornerLabel_
  name: IsCornerFree
  nameWithType: Room.IsCornerFree
  fullName: Room.IsCornerFree
- uid: Global.FloatRect.CornerLabel
  commentId: T:Global.FloatRect.CornerLabel
  isExternal: true
  href: FloatRect.html
  name: FloatRect.CornerLabel
  nameWithType: FloatRect.CornerLabel
  fullName: FloatRect.CornerLabel
  spec.csharp:
  - uid: Global.FloatRect
    name: FloatRect
    isExternal: true
    href: FloatRect.html
  - name: .
  - uid: Global.FloatRect.CornerLabel
    name: CornerLabel
    isExternal: true
    href: FloatRect.CornerLabel.html
  spec.vb:
  - uid: Global.FloatRect
    name: FloatRect
    isExternal: true
    href: FloatRect.html
  - name: .
  - uid: Global.FloatRect.CornerLabel
    name: CornerLabel
    isExternal: true
    href: FloatRect.CornerLabel.html
- uid: Global.Room.RayTraceTilesList*
  commentId: Overload:Global.Room.RayTraceTilesList
  isExternal: true
  href: Global.Room.html#Room_RayTraceTilesList_System_Int32_System_Int32_System_Int32_System_Int32_System_Collections_Generic_List_RWCustom_IntVector2___
  name: RayTraceTilesList
  nameWithType: Room.RayTraceTilesList
  fullName: Room.RayTraceTilesList
- uid: Global.Room.RayTraceTilesForTerrain*
  commentId: Overload:Global.Room.RayTraceTilesForTerrain
  isExternal: true
  href: Global.Room.html#Room_RayTraceTilesForTerrain_System_Int32_System_Int32_System_Int32_System_Int32_
  name: RayTraceTilesForTerrain
  nameWithType: Room.RayTraceTilesForTerrain
  fullName: Room.RayTraceTilesForTerrain
- uid: Global.Room.IsPositionInsideBoundries*
  commentId: Overload:Global.Room.IsPositionInsideBoundries
  isExternal: true
  href: Global.Room.html#Room_IsPositionInsideBoundries_RWCustom_IntVector2_
  name: IsPositionInsideBoundries
  nameWithType: Room.IsPositionInsideBoundries
  fullName: Room.IsPositionInsideBoundries
- uid: Global.Room.ShorcutEntranceHoleDirection*
  commentId: Overload:Global.Room.ShorcutEntranceHoleDirection
  isExternal: true
  href: Global.Room.html#Room_ShorcutEntranceHoleDirection_RWCustom_IntVector2_
  name: ShorcutEntranceHoleDirection
  nameWithType: Room.ShorcutEntranceHoleDirection
  fullName: Room.ShorcutEntranceHoleDirection
- uid: Global.Room.WhichRoomDoesThisExitLeadTo*
  commentId: Overload:Global.Room.WhichRoomDoesThisExitLeadTo
  isExternal: true
  href: Global.Room.html#Room_WhichRoomDoesThisExitLeadTo_RWCustom_IntVector2_
  name: WhichRoomDoesThisExitLeadTo
  nameWithType: Room.WhichRoomDoesThisExitLeadTo
  fullName: Room.WhichRoomDoesThisExitLeadTo
- uid: Global.Room.ShortcutLeadingToNode*
  commentId: Overload:Global.Room.ShortcutLeadingToNode
  isExternal: true
  href: Global.Room.html#Room_ShortcutLeadingToNode_System_Int32_
  name: ShortcutLeadingToNode
  nameWithType: Room.ShortcutLeadingToNode
  fullName: Room.ShortcutLeadingToNode
- uid: Global.ShortcutData
  commentId: T:Global.ShortcutData
  isExternal: true
  href: ShortcutData.html
  name: ShortcutData
  nameWithType: ShortcutData
  fullName: ShortcutData
- uid: Global.Room.VisualContact*
  commentId: Overload:Global.Room.VisualContact
  isExternal: true
  href: Global.Room.html#Room_VisualContact_WorldCoordinate_WorldCoordinate_
  name: VisualContact
  nameWithType: Room.VisualContact
  fullName: Room.VisualContact
- uid: Global.Room.IdentifySlope*
  commentId: Overload:Global.Room.IdentifySlope
  isExternal: true
  href: Global.Room.html#Room_IdentifySlope_UnityEngine_Vector2_
  name: IdentifySlope
  nameWithType: Room.IdentifySlope
  fullName: Room.IdentifySlope
- uid: Global.Room.SlopeDirection
  commentId: T:Global.Room.SlopeDirection
  isExternal: true
  href: Room.html
  name: Room.SlopeDirection
  nameWithType: Room.SlopeDirection
  fullName: Room.SlopeDirection
  spec.csharp:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.SlopeDirection
    name: SlopeDirection
    isExternal: true
    href: Room.SlopeDirection.html
  spec.vb:
  - uid: Global.Room
    name: Room
    isExternal: true
    href: Room.html
  - name: .
  - uid: Global.Room.SlopeDirection
    name: SlopeDirection
    isExternal: true
    href: Room.SlopeDirection.html
- uid: Global.Room.DetermineSafeSpawnTile*
  commentId: Overload:Global.Room.DetermineSafeSpawnTile
  isExternal: true
  href: Global.Room.html#Room_DetermineSafeSpawnTile_Room_
  name: DetermineSafeSpawnTile
  nameWithType: Room.DetermineSafeSpawnTile
  fullName: Room.DetermineSafeSpawnTile
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Room.LoadFromDataString*
  commentId: Overload:Global.Room.LoadFromDataString
  isExternal: true
  href: Global.Room.html#Room_LoadFromDataString_System_String___
  name: LoadFromDataString
  nameWithType: Room.LoadFromDataString
  fullName: Room.LoadFromDataString
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.Room.ViewedByAnyCamera*
  commentId: Overload:Global.Room.ViewedByAnyCamera
  isExternal: true
  href: Global.Room.html#Room_ViewedByAnyCamera_UnityEngine_Rect_System_Single_
  name: ViewedByAnyCamera
  nameWithType: Room.ViewedByAnyCamera
  fullName: Room.ViewedByAnyCamera
- uid: UnityEngine.Rect
  isExternal: true
  name: Rect
  nameWithType: Rect
  fullName: UnityEngine.Rect
- uid: Global.Room.VisibleInAnyCameraScreenBounds*
  commentId: Overload:Global.Room.VisibleInAnyCameraScreenBounds
  isExternal: true
  href: Global.Room.html#Room_VisibleInAnyCameraScreenBounds_UnityEngine_Vector2_
  name: VisibleInAnyCameraScreenBounds
  nameWithType: Room.VisibleInAnyCameraScreenBounds
  fullName: Room.VisibleInAnyCameraScreenBounds
- uid: Global.Room.ScreenMovement*
  commentId: Overload:Global.Room.ScreenMovement
  isExternal: true
  href: Global.Room.html#Room_ScreenMovement_System_Nullable_UnityEngine_Vector2__UnityEngine_Vector2_System_Single_
  name: ScreenMovement
  nameWithType: Room.ScreenMovement
  fullName: Room.ScreenMovement
- uid: System.Nullable{UnityEngine.Vector2}
  commentId: T:System.Nullable{UnityEngine.Vector2}
  parent: System
  definition: System.Nullable`1
  name: Vector2?
  nameWithType: Vector2?
  fullName: UnityEngine.Vector2?
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.Room.shortcutData*
  commentId: Overload:Global.Room.shortcutData
  isExternal: true
  href: Global.Room.html#Room_shortcutData_RWCustom_IntVector2_
  name: shortcutData
  nameWithType: Room.shortcutData
  fullName: Room.shortcutData
- uid: Global.Room.ToWorldCoordinate*
  commentId: Overload:Global.Room.ToWorldCoordinate
  isExternal: true
  href: Global.Room.html#Room_ToWorldCoordinate_UnityEngine_Vector2_
  name: ToWorldCoordinate
  nameWithType: Room.ToWorldCoordinate
  fullName: Room.ToWorldCoordinate
- uid: Global.Room.LocalCoordinateOfNode*
  commentId: Overload:Global.Room.LocalCoordinateOfNode
  isExternal: true
  href: Global.Room.html#Room_LocalCoordinateOfNode_System_Int32_
  name: LocalCoordinateOfNode
  nameWithType: Room.LocalCoordinateOfNode
  fullName: Room.LocalCoordinateOfNode
- uid: Global.Room.DarknessOfPoint*
  commentId: Overload:Global.Room.DarknessOfPoint
  isExternal: true
  href: Global.Room.html#Room_DarknessOfPoint_RoomCamera_UnityEngine_Vector2_
  name: DarknessOfPoint
  nameWithType: Room.DarknessOfPoint
  fullName: Room.DarknessOfPoint
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Room.LightSourceExposure*
  commentId: Overload:Global.Room.LightSourceExposure
  isExternal: true
  href: Global.Room.html#Room_LightSourceExposure_UnityEngine_Vector2_
  name: LightSourceExposure
  nameWithType: Room.LightSourceExposure
  fullName: Room.LightSourceExposure
- uid: Global.Room.LightSourceColor*
  commentId: Overload:Global.Room.LightSourceColor
  isExternal: true
  href: Global.Room.html#Room_LightSourceColor_UnityEngine_Vector2_
  name: LightSourceColor
  nameWithType: Room.LightSourceColor
  fullName: Room.LightSourceColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.Room.CompleteDarkness*
  commentId: Overload:Global.Room.CompleteDarkness
  isExternal: true
  href: Global.Room.html#Room_CompleteDarkness_UnityEngine_Vector2_System_Single_System_Single_System_Boolean_
  name: CompleteDarkness
  nameWithType: Room.CompleteDarkness
  fullName: Room.CompleteDarkness
- uid: Global.Room.WaterShinyness*
  commentId: Overload:Global.Room.WaterShinyness
  isExternal: true
  href: Global.Room.html#Room_WaterShinyness_UnityEngine_Vector2_System_Single_
  name: WaterShinyness
  nameWithType: Room.WaterShinyness
  fullName: Room.WaterShinyness
- uid: Global.Room.CameraViewingNode*
  commentId: Overload:Global.Room.CameraViewingNode
  isExternal: true
  href: Global.Room.html#Room_CameraViewingNode_System_Int32_
  name: CameraViewingNode
  nameWithType: Room.CameraViewingNode
  fullName: Room.CameraViewingNode
- uid: Global.Room.CameraViewingPoint*
  commentId: Overload:Global.Room.CameraViewingPoint
  isExternal: true
  href: Global.Room.html#Room_CameraViewingPoint_UnityEngine_Vector2_
  name: CameraViewingPoint
  nameWithType: Room.CameraViewingPoint
  fullName: Room.CameraViewingPoint
- uid: Global.Room.Darkness*
  commentId: Overload:Global.Room.Darkness
  isExternal: true
  href: Global.Room.html#Room_Darkness_UnityEngine_Vector2_
  name: Darkness
  nameWithType: Room.Darkness
  fullName: Room.Darkness
- uid: Global.Room.PlaySound*
  commentId: Overload:Global.Room.PlaySound
  isExternal: true
  href: Global.Room.html#Room_PlaySound_SoundID_
  name: PlaySound
  nameWithType: Room.PlaySound
  fullName: Room.PlaySound
- uid: Global.SoundID
  commentId: T:Global.SoundID
  isExternal: true
  href: SoundID.html
  name: SoundID
  nameWithType: SoundID
  fullName: SoundID
- uid: Global.BodyChunk
  commentId: T:Global.BodyChunk
  isExternal: true
  href: BodyChunk.html
  name: BodyChunk
  nameWithType: BodyChunk
  fullName: BodyChunk
- uid: Global.ChunkSoundEmitter
  commentId: T:Global.ChunkSoundEmitter
  isExternal: true
  href: ChunkSoundEmitter.html
  name: ChunkSoundEmitter
  nameWithType: ChunkSoundEmitter
  fullName: ChunkSoundEmitter
- uid: Global.Room.PlayDisembodiedLoop*
  commentId: Overload:Global.Room.PlayDisembodiedLoop
  isExternal: true
  href: Global.Room.html#Room_PlayDisembodiedLoop_SoundID_System_Single_System_Single_System_Single_
  name: PlayDisembodiedLoop
  nameWithType: Room.PlayDisembodiedLoop
  fullName: Room.PlayDisembodiedLoop
- uid: Global.DisembodiedLoopEmitter
  commentId: T:Global.DisembodiedLoopEmitter
  isExternal: true
  href: DisembodiedLoopEmitter.html
  name: DisembodiedLoopEmitter
  nameWithType: DisembodiedLoopEmitter
  fullName: DisembodiedLoopEmitter
- uid: Global.Room.PlayRectSound*
  commentId: Overload:Global.Room.PlayRectSound
  isExternal: true
  href: Global.Room.html#Room_PlayRectSound_SoundID_FloatRect_System_Boolean_System_Single_System_Single_
  name: PlayRectSound
  nameWithType: Room.PlayRectSound
  fullName: Room.PlayRectSound
- uid: Global.RectSoundEmitter
  commentId: T:Global.RectSoundEmitter
  isExternal: true
  href: RectSoundEmitter.html
  name: RectSoundEmitter
  nameWithType: RectSoundEmitter
  fullName: RectSoundEmitter
- uid: Global.PositionedSoundEmitter
  commentId: T:Global.PositionedSoundEmitter
  isExternal: true
  href: PositionedSoundEmitter.html
  name: PositionedSoundEmitter
  nameWithType: PositionedSoundEmitter
  fullName: PositionedSoundEmitter
- uid: Global.Room.PlayGenericSound*
  commentId: Overload:Global.Room.PlayGenericSound
  isExternal: true
  href: Global.Room.html#Room_PlayGenericSound_SoundID_System_Single_System_Single_GenericLoopEmitter_Mixer_
  name: PlayGenericSound
  nameWithType: Room.PlayGenericSound
  fullName: Room.PlayGenericSound
- uid: Global.GenericLoopEmitter.Mixer
  commentId: T:Global.GenericLoopEmitter.Mixer
  isExternal: true
  href: GenericLoopEmitter.html
  name: GenericLoopEmitter.Mixer
  nameWithType: GenericLoopEmitter.Mixer
  fullName: GenericLoopEmitter.Mixer
  spec.csharp:
  - uid: Global.GenericLoopEmitter
    name: GenericLoopEmitter
    isExternal: true
    href: GenericLoopEmitter.html
  - name: .
  - uid: Global.GenericLoopEmitter.Mixer
    name: Mixer
    isExternal: true
    href: GenericLoopEmitter.Mixer.html
  spec.vb:
  - uid: Global.GenericLoopEmitter
    name: GenericLoopEmitter
    isExternal: true
    href: GenericLoopEmitter.html
  - name: .
  - uid: Global.GenericLoopEmitter.Mixer
    name: Mixer
    isExternal: true
    href: GenericLoopEmitter.Mixer.html
- uid: Global.GenericLoopEmitter
  commentId: T:Global.GenericLoopEmitter
  isExternal: true
  href: GenericLoopEmitter.html
  name: GenericLoopEmitter
  nameWithType: GenericLoopEmitter
  fullName: GenericLoopEmitter
- uid: Global.Room.InGameNoise*
  commentId: Overload:Global.Room.InGameNoise
  isExternal: true
  href: Global.Room.html#Room_InGameNoise_Noise_InGameNoise_
  name: InGameNoise
  nameWithType: Room.InGameNoise
  fullName: Room.InGameNoise
- uid: Noise.InGameNoise
  commentId: T:Noise.InGameNoise
  parent: Noise
  isExternal: true
  href: Noise.InGameNoise.html
  name: InGameNoise
  nameWithType: InGameNoise
  fullName: Noise.InGameNoise
- uid: Noise
  commentId: N:Noise
  isExternal: true
  href: Noise.html
  name: Noise
  nameWithType: Noise
  fullName: Noise
- uid: Global.Room.NewMessageInRoom*
  commentId: Overload:Global.Room.NewMessageInRoom
  isExternal: true
  href: Global.Room.html#Room_NewMessageInRoom_System_String_System_Int32_
  name: NewMessageInRoom
  nameWithType: Room.NewMessageInRoom
  fullName: Room.NewMessageInRoom
- uid: Global.Room.TriggerCombatArena*
  commentId: Overload:Global.Room.TriggerCombatArena
  isExternal: true
  href: Global.Room.html#Room_TriggerCombatArena
  name: TriggerCombatArena
  nameWithType: Room.TriggerCombatArena
  fullName: Room.TriggerCombatArena
- uid: Global.Room.SpawnMultiplayerItem*
  commentId: Overload:Global.Room.SpawnMultiplayerItem
  isExternal: true
  href: Global.Room.html#Room_SpawnMultiplayerItem_PlacedObject_
  name: SpawnMultiplayerItem
  nameWithType: Room.SpawnMultiplayerItem
  fullName: Room.SpawnMultiplayerItem
- uid: Global.Room.ShouldBeDeferred*
  commentId: Overload:Global.Room.ShouldBeDeferred
  isExternal: true
  href: Global.Room.html#Room_ShouldBeDeferred_UpdatableAndDeletable_
  name: ShouldBeDeferred
  nameWithType: Room.ShouldBeDeferred
  fullName: Room.ShouldBeDeferred
- uid: Global.Room.PointDeferred*
  commentId: Overload:Global.Room.PointDeferred
  isExternal: true
  href: Global.Room.html#Room_PointDeferred_UnityEngine_Vector2_
  name: PointDeferred
  nameWithType: Room.PointDeferred
  fullName: Room.PointDeferred
- uid: Global.Room.PausedUpdate*
  commentId: Overload:Global.Room.PausedUpdate
  isExternal: true
  href: Global.Room.html#Room_PausedUpdate
  name: PausedUpdate
  nameWithType: Room.PausedUpdate
  fullName: Room.PausedUpdate
- uid: Global.Room.PlayCustomSound*
  commentId: Overload:Global.Room.PlayCustomSound
  isExternal: true
  href: Global.Room.html#Room_PlayCustomSound_System_String_UnityEngine_Vector2_System_Single_System_Single_
  name: PlayCustomSound
  nameWithType: Room.PlayCustomSound
  fullName: Room.PlayCustomSound
- uid: Global.Room.PlayCustomSoundDisembodied*
  commentId: Overload:Global.Room.PlayCustomSoundDisembodied
  isExternal: true
  href: Global.Room.html#Room_PlayCustomSoundDisembodied_System_String_System_Single_System_Single_System_Single_
  name: PlayCustomSoundDisembodied
  nameWithType: Room.PlayCustomSoundDisembodied
  fullName: Room.PlayCustomSoundDisembodied
- uid: Global.Room.PlayCustomDisembodiedLoop*
  commentId: Overload:Global.Room.PlayCustomDisembodiedLoop
  isExternal: true
  href: Global.Room.html#Room_PlayCustomDisembodiedLoop_System_String_System_Single_System_Single_System_Single_
  name: PlayCustomDisembodiedLoop
  nameWithType: Room.PlayCustomDisembodiedLoop
  fullName: Room.PlayCustomDisembodiedLoop
- uid: Global.Room.PlayCustomChunkSound*
  commentId: Overload:Global.Room.PlayCustomChunkSound
  isExternal: true
  href: Global.Room.html#Room_PlayCustomChunkSound_System_String_BodyChunk_System_Single_System_Single_
  name: PlayCustomChunkSound
  nameWithType: Room.PlayCustomChunkSound
  fullName: Room.PlayCustomChunkSound
- uid: Global.Room.SetLightSourceBlink*
  commentId: Overload:Global.Room.SetLightSourceBlink
  isExternal: true
  href: Global.Room.html#Room_SetLightSourceBlink_LightSource_System_Int32_
  name: SetLightSourceBlink
  nameWithType: Room.SetLightSourceBlink
  fullName: Room.SetLightSourceBlink
- uid: Global.LightSource
  commentId: T:Global.LightSource
  isExternal: true
  href: LightSource.html
  name: LightSource
  nameWithType: LightSource
  fullName: LightSource
- uid: Global.Room.SetLightBeamBlink*
  commentId: Overload:Global.Room.SetLightBeamBlink
  isExternal: true
  href: Global.Room.html#Room_SetLightBeamBlink_LightBeam_System_Int32_
  name: SetLightBeamBlink
  nameWithType: Room.SetLightBeamBlink
  fullName: Room.SetLightBeamBlink
- uid: Global.LightBeam
  commentId: T:Global.LightBeam
  isExternal: true
  href: LightBeam.html
  name: LightBeam
  nameWithType: LightBeam
  fullName: LightBeam
- uid: Global.Room.IsGateRoom*
  commentId: Overload:Global.Room.IsGateRoom
  isExternal: true
  href: Global.Room.html#Room_IsGateRoom
  name: IsGateRoom
  nameWithType: Room.IsGateRoom
  fullName: Room.IsGateRoom
- uid: Global.Room.AddSnow*
  commentId: Overload:Global.Room.AddSnow
  isExternal: true
  href: Global.Room.html#Room_AddSnow
  name: AddSnow
  nameWithType: Room.AddSnow
  fullName: Room.AddSnow
- uid: Global.Room.SlugcatGamemodeUniqueRoomSettings*
  commentId: Overload:Global.Room.SlugcatGamemodeUniqueRoomSettings
  isExternal: true
  href: Global.Room.html#Room_SlugcatGamemodeUniqueRoomSettings_RainWorldGame_
  name: SlugcatGamemodeUniqueRoomSettings
  nameWithType: Room.SlugcatGamemodeUniqueRoomSettings
  fullName: Room.SlugcatGamemodeUniqueRoomSettings
- uid: Global.Room.WaterLevelDisplacement*
  commentId: Overload:Global.Room.WaterLevelDisplacement
  isExternal: true
  href: Global.Room.html#Room_WaterLevelDisplacement_UnityEngine_Vector2_
  name: WaterLevelDisplacement
  nameWithType: Room.WaterLevelDisplacement
  fullName: Room.WaterLevelDisplacement
- uid: Global.Room.FindGroundBelow*
  commentId: Overload:Global.Room.FindGroundBelow
  isExternal: true
  href: Global.Room.html#Room_FindGroundBelow_UnityEngine_Vector2_UnityEngine_Vector2__System_Single_
  name: FindGroundBelow
  nameWithType: Room.FindGroundBelow
  fullName: Room.FindGroundBelow
- uid: Global.Room.HasAnySolidTileInXRange*
  commentId: Overload:Global.Room.HasAnySolidTileInXRange
  isExternal: true
  href: Global.Room.html#Room_HasAnySolidTileInXRange_System_Int32_System_Int32_System_Int32_
  name: HasAnySolidTileInXRange
  nameWithType: Room.HasAnySolidTileInXRange
  fullName: Room.HasAnySolidTileInXRange
- uid: Global.Room.abstractRoom*
  commentId: Overload:Global.Room.abstractRoom
  isExternal: true
  href: Global.Room.html#Room_abstractRoom
  name: abstractRoom
  nameWithType: Room.abstractRoom
  fullName: Room.abstractRoom
- uid: Global.Room.TileWidth*
  commentId: Overload:Global.Room.TileWidth
  isExternal: true
  href: Global.Room.html#Room_TileWidth
  name: TileWidth
  nameWithType: Room.TileWidth
  fullName: Room.TileWidth
- uid: Global.Room.TileHeight*
  commentId: Overload:Global.Room.TileHeight
  isExternal: true
  href: Global.Room.html#Room_TileHeight
  name: TileHeight
  nameWithType: Room.TileHeight
  fullName: Room.TileHeight
- uid: Global.Room.PixelWidth*
  commentId: Overload:Global.Room.PixelWidth
  isExternal: true
  href: Global.Room.html#Room_PixelWidth
  name: PixelWidth
  nameWithType: Room.PixelWidth
  fullName: Room.PixelWidth
- uid: Global.Room.PixelHeight*
  commentId: Overload:Global.Room.PixelHeight
  isExternal: true
  href: Global.Room.html#Room_PixelHeight
  name: PixelHeight
  nameWithType: Room.PixelHeight
  fullName: Room.PixelHeight
- uid: Global.Room.PlayersInRoom*
  commentId: Overload:Global.Room.PlayersInRoom
  isExternal: true
  href: Global.Room.html#Room_PlayersInRoom
  name: PlayersInRoom
  nameWithType: Room.PlayersInRoom
  fullName: Room.PlayersInRoom
- uid: System.Collections.Generic.List{Player}
  commentId: T:System.Collections.Generic.List{Player}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Player>
  nameWithType: List<Player>
  fullName: System.Collections.Generic.List<Player>
  nameWithType.vb: List(Of Player)
  fullName.vb: System.Collections.Generic.List(Of Player)
  name.vb: List(Of Player)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Player
    name: Player
    isExternal: true
    href: Player.html
  - name: )
- uid: Global.Room.BeingViewed*
  commentId: Overload:Global.Room.BeingViewed
  isExternal: true
  href: Global.Room.html#Room_BeingViewed
  name: BeingViewed
  nameWithType: Room.BeingViewed
  fullName: Room.BeingViewed
- uid: Global.Room.ElectricPower*
  commentId: Overload:Global.Room.ElectricPower
  isExternal: true
  href: Global.Room.html#Room_ElectricPower
  name: ElectricPower
  nameWithType: Room.ElectricPower
  fullName: Room.ElectricPower
- uid: Global.Room.RainDrownOutSounds*
  commentId: Overload:Global.Room.RainDrownOutSounds
  isExternal: true
  href: Global.Room.html#Room_RainDrownOutSounds
  name: RainDrownOutSounds
  nameWithType: Room.RainDrownOutSounds
  fullName: Room.RainDrownOutSounds
- uid: Global.Room.BackgroundNoise*
  commentId: Overload:Global.Room.BackgroundNoise
  isExternal: true
  href: Global.Room.html#Room_BackgroundNoise
  name: BackgroundNoise
  nameWithType: Room.BackgroundNoise
  fullName: Room.BackgroundNoise
- uid: Global.Room.updateList*
  commentId: Overload:Global.Room.updateList
  isExternal: true
  href: Global.Room.html#Room_updateList
  name: updateList
  nameWithType: Room.updateList
  fullName: Room.updateList
- uid: System.Collections.Generic.List{UpdatableAndDeletable}
  commentId: T:System.Collections.Generic.List{UpdatableAndDeletable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<UpdatableAndDeletable>
  nameWithType: List<UpdatableAndDeletable>
  fullName: System.Collections.Generic.List<UpdatableAndDeletable>
  nameWithType.vb: List(Of UpdatableAndDeletable)
  fullName.vb: System.Collections.Generic.List(Of UpdatableAndDeletable)
  name.vb: List(Of UpdatableAndDeletable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.UpdatableAndDeletable
    name: UpdatableAndDeletable
    isExternal: true
    href: UpdatableAndDeletable.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.UpdatableAndDeletable
    name: UpdatableAndDeletable
    isExternal: true
    href: UpdatableAndDeletable.html
  - name: )
- uid: Global.Room.drawableObjects*
  commentId: Overload:Global.Room.drawableObjects
  isExternal: true
  href: Global.Room.html#Room_drawableObjects
  name: drawableObjects
  nameWithType: Room.drawableObjects
  fullName: Room.drawableObjects
- uid: System.Collections.Generic.List{IDrawable}
  commentId: T:System.Collections.Generic.List{IDrawable}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IDrawable>
  nameWithType: List<IDrawable>
  fullName: System.Collections.Generic.List<IDrawable>
  nameWithType.vb: List(Of IDrawable)
  fullName.vb: System.Collections.Generic.List(Of IDrawable)
  name.vb: List(Of IDrawable)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.IDrawable
    name: IDrawable
    isExternal: true
    href: IDrawable.html
  - name: )
- uid: Global.Room.shortCutsReady*
  commentId: Overload:Global.Room.shortCutsReady
  isExternal: true
  href: Global.Room.html#Room_shortCutsReady
  name: shortCutsReady
  nameWithType: Room.shortCutsReady
  fullName: Room.shortCutsReady
- uid: Global.Room.readyForAI*
  commentId: Overload:Global.Room.readyForAI
  isExternal: true
  href: Global.Room.html#Room_readyForAI
  name: readyForAI
  nameWithType: Room.readyForAI
  fullName: Room.readyForAI
- uid: Global.Room.quantifiedCreaturesPlaced*
  commentId: Overload:Global.Room.quantifiedCreaturesPlaced
  isExternal: true
  href: Global.Room.html#Room_quantifiedCreaturesPlaced
  name: quantifiedCreaturesPlaced
  nameWithType: Room.quantifiedCreaturesPlaced
  fullName: Room.quantifiedCreaturesPlaced
- uid: Global.Room.fullyLoaded*
  commentId: Overload:Global.Room.fullyLoaded
  isExternal: true
  href: Global.Room.html#Room_fullyLoaded
  name: fullyLoaded
  nameWithType: Room.fullyLoaded
  fullName: Room.fullyLoaded
- uid: Global.Room.ReadyForPlayer*
  commentId: Overload:Global.Room.ReadyForPlayer
  isExternal: true
  href: Global.Room.html#Room_ReadyForPlayer
  name: ReadyForPlayer
  nameWithType: Room.ReadyForPlayer
  fullName: Room.ReadyForPlayer
- uid: Global.Room.windDirection*
  commentId: Overload:Global.Room.windDirection
  isExternal: true
  href: Global.Room.html#Room_windDirection
  name: windDirection
  nameWithType: Room.windDirection
  fullName: Room.windDirection
- uid: Global.Room.RoomRect*
  commentId: Overload:Global.Room.RoomRect
  isExternal: true
  href: Global.Room.html#Room_RoomRect
  name: RoomRect
  nameWithType: Room.RoomRect
  fullName: Room.RoomRect
- uid: Global.Room.AnyWarpPointBeingActivated*
  commentId: Overload:Global.Room.AnyWarpPointBeingActivated
  isExternal: true
  href: Global.Room.html#Room_AnyWarpPointBeingActivated
  name: AnyWarpPointBeingActivated
  nameWithType: Room.AnyWarpPointBeingActivated
  fullName: Room.AnyWarpPointBeingActivated
- uid: Global.Room.DustStormIntensity*
  commentId: Overload:Global.Room.DustStormIntensity
  isExternal: true
  href: Global.Room.html#Room_DustStormIntensity
  name: DustStormIntensity
  nameWithType: Room.DustStormIntensity
  fullName: Room.DustStormIntensity
