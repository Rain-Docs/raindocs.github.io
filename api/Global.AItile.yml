### YamlMime:ManagedReference
items:
- uid: Global.AItile
  commentId: T:Global.AItile
  id: AItile
  parent: Global
  children:
  - Global.AItile.#ctor(AItile.Accessibility,System.Int32)
  - Global.AItile.AnyWater
  - Global.AItile.DeepWater
  - Global.AItile.SetWater(System.Int32)
  - Global.AItile.WaterSurface
  - Global.AItile.acc
  - Global.AItile.fallRiskTile
  - Global.AItile.floorAltitude
  - Global.AItile.incomingPaths
  - Global.AItile.narrowSpace
  - Global.AItile.outgoingPaths
  - Global.AItile.smoothedFloorAltitude
  - Global.AItile.visibility
  - Global.AItile.walkable
  langs:
  - csharp
  - vb
  name: AItile
  nameWithType: AItile
  fullName: AItile
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:AItile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class AItile
    content.vb: Public Class AItile
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.AItile.acc
  commentId: F:Global.AItile.acc
  id: acc
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: acc
  nameWithType: AItile.acc
  fullName: AItile.acc
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.acc</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AItile.Accessibility acc
    return:
      type: Global.AItile.Accessibility
    content.vb: Public acc As AItile.Accessibility
- uid: Global.AItile.incomingPaths
  commentId: F:Global.AItile.incomingPaths
  id: incomingPaths
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: incomingPaths
  nameWithType: AItile.incomingPaths
  fullName: AItile.incomingPaths
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.incomingPaths</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<MovementConnection> incomingPaths
    return:
      type: System.Collections.Generic.List{MovementConnection}
    content.vb: Public incomingPaths As List(Of MovementConnection)
- uid: Global.AItile.outgoingPaths
  commentId: F:Global.AItile.outgoingPaths
  id: outgoingPaths
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: outgoingPaths
  nameWithType: AItile.outgoingPaths
  fullName: AItile.outgoingPaths
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.outgoingPaths</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<MovementConnection> outgoingPaths
    return:
      type: System.Collections.Generic.List{MovementConnection}
    content.vb: Public outgoingPaths As List(Of MovementConnection)
- uid: Global.AItile.walkable
  commentId: F:Global.AItile.walkable
  id: walkable
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: walkable
  nameWithType: AItile.walkable
  fullName: AItile.walkable
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.walkable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool walkable
    return:
      type: System.Boolean
    content.vb: Public walkable As Boolean
- uid: Global.AItile.narrowSpace
  commentId: F:Global.AItile.narrowSpace
  id: narrowSpace
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: narrowSpace
  nameWithType: AItile.narrowSpace
  fullName: AItile.narrowSpace
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.narrowSpace</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool narrowSpace
    return:
      type: System.Boolean
    content.vb: Public narrowSpace As Boolean
- uid: Global.AItile.floorAltitude
  commentId: F:Global.AItile.floorAltitude
  id: floorAltitude
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: floorAltitude
  nameWithType: AItile.floorAltitude
  fullName: AItile.floorAltitude
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.floorAltitude</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int floorAltitude
    return:
      type: System.Int32
    content.vb: Public floorAltitude As Integer
- uid: Global.AItile.smoothedFloorAltitude
  commentId: F:Global.AItile.smoothedFloorAltitude
  id: smoothedFloorAltitude
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: smoothedFloorAltitude
  nameWithType: AItile.smoothedFloorAltitude
  fullName: AItile.smoothedFloorAltitude
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.smoothedFloorAltitude</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int smoothedFloorAltitude
    return:
      type: System.Int32
    content.vb: Public smoothedFloorAltitude As Integer
- uid: Global.AItile.visibility
  commentId: F:Global.AItile.visibility
  id: visibility
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: visibility
  nameWithType: AItile.visibility
  fullName: AItile.visibility
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.visibility</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int visibility
    return:
      type: System.Int32
    content.vb: Public visibility As Integer
- uid: Global.AItile.fallRiskTile
  commentId: F:Global.AItile.fallRiskTile
  id: fallRiskTile
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: fallRiskTile
  nameWithType: AItile.fallRiskTile
  fullName: AItile.fallRiskTile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:AItile.fallRiskTile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public IntVector2 fallRiskTile
    return:
      type: RWCustom.IntVector2
    content.vb: Public fallRiskTile As IntVector2
- uid: Global.AItile.#ctor(AItile.Accessibility,System.Int32)
  commentId: M:Global.AItile.#ctor(AItile.Accessibility,System.Int32)
  id: '#ctor(AItile.Accessibility,System.Int32)'
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: AItile(Accessibility, int)
  nameWithType: AItile.AItile(AItile.Accessibility, int)
  fullName: AItile.AItile(AItile.Accessibility, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>AItile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AItile(AItile.Accessibility a, int waterInt)
    parameters:
    - id: a
      type: Global.AItile.Accessibility
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>a</parameter>
            <parameter>M:AItile.#ctor(AItile.Accessibility,System.Int32)</parameter>
          </include>
        </markup>
    - id: waterInt
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>waterInt</parameter>
            <parameter>M:AItile.#ctor(AItile.Accessibility,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(a As AItile.Accessibility, waterInt As Integer)
  overload: Global.AItile.#ctor*
  nameWithType.vb: AItile.New(AItile.Accessibility, Integer)
  fullName.vb: AItile.New(AItile.Accessibility, Integer)
  name.vb: New(Accessibility, Integer)
- uid: Global.AItile.SetWater(System.Int32)
  commentId: M:Global.AItile.SetWater(System.Int32)
  id: SetWater(System.Int32)
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: SetWater(int)
  nameWithType: AItile.SetWater(int)
  fullName: AItile.SetWater(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:AItile.SetWater(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SetWater(int waterInt)
    parameters:
    - id: waterInt
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>waterInt</parameter>
            <parameter>M:AItile.SetWater(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub SetWater(waterInt As Integer)
  overload: Global.AItile.SetWater*
  nameWithType.vb: AItile.SetWater(Integer)
  fullName.vb: AItile.SetWater(Integer)
  name.vb: SetWater(Integer)
- uid: Global.AItile.DeepWater
  commentId: P:Global.AItile.DeepWater
  id: DeepWater
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: DeepWater
  nameWithType: AItile.DeepWater
  fullName: AItile.DeepWater
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AItile.DeepWater</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool DeepWater { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property DeepWater As Boolean
  overload: Global.AItile.DeepWater*
- uid: Global.AItile.WaterSurface
  commentId: P:Global.AItile.WaterSurface
  id: WaterSurface
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: WaterSurface
  nameWithType: AItile.WaterSurface
  fullName: AItile.WaterSurface
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AItile.WaterSurface</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool WaterSurface { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property WaterSurface As Boolean
  overload: Global.AItile.WaterSurface*
- uid: Global.AItile.AnyWater
  commentId: P:Global.AItile.AnyWater
  id: AnyWater
  parent: Global.AItile
  langs:
  - csharp
  - vb
  name: AnyWater
  nameWithType: AItile.AnyWater
  fullName: AItile.AnyWater
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:AItile.AnyWater</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool AnyWater { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property AnyWater As Boolean
  overload: Global.AItile.AnyWater*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.AItile.Accessibility
  commentId: T:Global.AItile.Accessibility
  isExternal: true
  href: AItile.html
  name: AItile.Accessibility
  nameWithType: AItile.Accessibility
  fullName: AItile.Accessibility
  spec.csharp:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
  spec.vb:
  - uid: Global.AItile
    name: AItile
    isExternal: true
    href: AItile.html
  - name: .
  - uid: Global.AItile.Accessibility
    name: Accessibility
    isExternal: true
    href: AItile.Accessibility.html
- uid: System.Collections.Generic.List{MovementConnection}
  commentId: T:System.Collections.Generic.List{MovementConnection}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<MovementConnection>
  nameWithType: List<MovementConnection>
  fullName: System.Collections.Generic.List<MovementConnection>
  nameWithType.vb: List(Of MovementConnection)
  fullName.vb: System.Collections.Generic.List(Of MovementConnection)
  name.vb: List(Of MovementConnection)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.MovementConnection
    name: MovementConnection
    isExternal: true
    href: MovementConnection.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: Global.AItile.#ctor*
  commentId: Overload:Global.AItile.#ctor
  isExternal: true
  href: Global.AItile.html#AItile__ctor_AItile_Accessibility_System_Int32_
  name: AItile
  nameWithType: AItile.AItile
  fullName: AItile.AItile
  nameWithType.vb: AItile.New
  fullName.vb: AItile.New
  name.vb: New
- uid: Global.AItile.SetWater*
  commentId: Overload:Global.AItile.SetWater
  isExternal: true
  href: Global.AItile.html#AItile_SetWater_System_Int32_
  name: SetWater
  nameWithType: AItile.SetWater
  fullName: AItile.SetWater
- uid: Global.AItile.DeepWater*
  commentId: Overload:Global.AItile.DeepWater
  isExternal: true
  href: Global.AItile.html#AItile_DeepWater
  name: DeepWater
  nameWithType: AItile.DeepWater
  fullName: AItile.DeepWater
- uid: Global.AItile.WaterSurface*
  commentId: Overload:Global.AItile.WaterSurface
  isExternal: true
  href: Global.AItile.html#AItile_WaterSurface
  name: WaterSurface
  nameWithType: AItile.WaterSurface
  fullName: AItile.WaterSurface
- uid: Global.AItile.AnyWater*
  commentId: Overload:Global.AItile.AnyWater
  isExternal: true
  href: Global.AItile.html#AItile_AnyWater
  name: AnyWater
  nameWithType: AItile.AnyWater
  fullName: AItile.AnyWater
