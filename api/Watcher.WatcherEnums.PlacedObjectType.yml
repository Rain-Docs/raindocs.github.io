### YamlMime:ManagedReference
items:
- uid: Watcher.WatcherEnums.PlacedObjectType
  commentId: T:Watcher.WatcherEnums.PlacedObjectType
  id: WatcherEnums.PlacedObjectType
  parent: Watcher
  children:
  - Watcher.WatcherEnums.PlacedObjectType.#ctor
  - Watcher.WatcherEnums.PlacedObjectType.ARZapperHorizontal
  - Watcher.WatcherEnums.PlacedObjectType.ARZapperOmni
  - Watcher.WatcherEnums.PlacedObjectType.ARZapperVertical
  - Watcher.WatcherEnums.PlacedObjectType.AetherRainbow
  - Watcher.WatcherEnums.PlacedObjectType.BallToy
  - Watcher.WatcherEnums.PlacedObjectType.CosmeticRipple
  - Watcher.WatcherEnums.PlacedObjectType.FlameJet
  - Watcher.WatcherEnums.PlacedObjectType.FloatingDebris
  - Watcher.WatcherEnums.PlacedObjectType.KarmaFlowerPatch
  - Watcher.WatcherEnums.PlacedObjectType.PlacedBarnacles
  - Watcher.WatcherEnums.PlacedObjectType.PlacedBoxWorm
  - Watcher.WatcherEnums.PlacedObjectType.PlacedDrillCrab
  - Watcher.WatcherEnums.PlacedObjectType.PlacedFireSprite
  - Watcher.WatcherEnums.PlacedObjectType.PlacedFrog
  - Watcher.WatcherEnums.PlacedObjectType.PlacedLoach
  - Watcher.WatcherEnums.PlacedObjectType.PlacedRats
  - Watcher.WatcherEnums.PlacedObjectType.PlacedRotLoach
  - Watcher.WatcherEnums.PlacedObjectType.PrinceBulb
  - Watcher.WatcherEnums.PlacedObjectType.RegisterValues
  - Watcher.WatcherEnums.PlacedObjectType.RottenDangleFruit
  - Watcher.WatcherEnums.PlacedObjectType.RottenSeedCob
  - Watcher.WatcherEnums.PlacedObjectType.SKLightningRod
  - Watcher.WatcherEnums.PlacedObjectType.SoftToy
  - Watcher.WatcherEnums.PlacedObjectType.SpinToy
  - Watcher.WatcherEnums.PlacedObjectType.SpinningTopSpot
  - Watcher.WatcherEnums.PlacedObjectType.UnregisterValues
  - Watcher.WatcherEnums.PlacedObjectType.UrbanCandleHolder
  - Watcher.WatcherEnums.PlacedObjectType.UrbanCandles
  - Watcher.WatcherEnums.PlacedObjectType.UrbanLife
  - Watcher.WatcherEnums.PlacedObjectType.UrbanLifePath
  - Watcher.WatcherEnums.PlacedObjectType.WallLight
  - Watcher.WatcherEnums.PlacedObjectType.WeaverSpot
  - Watcher.WatcherEnums.PlacedObjectType.WeirdToy
  langs:
  - csharp
  - vb
  name: WatcherEnums.PlacedObjectType
  nameWithType: WatcherEnums.PlacedObjectType
  fullName: Watcher.WatcherEnums.PlacedObjectType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.WatcherEnums.PlacedObjectType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class WatcherEnums.PlacedObjectType
    content.vb: Public Class WatcherEnums.PlacedObjectType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.WatcherEnums.PlacedObjectType.CosmeticRipple
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.CosmeticRipple
  id: CosmeticRipple
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: CosmeticRipple
  nameWithType: WatcherEnums.PlacedObjectType.CosmeticRipple
  fullName: Watcher.WatcherEnums.PlacedObjectType.CosmeticRipple
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.CosmeticRipple</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type CosmeticRipple
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared CosmeticRipple As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.SpinningTopSpot
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.SpinningTopSpot
  id: SpinningTopSpot
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: SpinningTopSpot
  nameWithType: WatcherEnums.PlacedObjectType.SpinningTopSpot
  fullName: Watcher.WatcherEnums.PlacedObjectType.SpinningTopSpot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.SpinningTopSpot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type SpinningTopSpot
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared SpinningTopSpot As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.FloatingDebris
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.FloatingDebris
  id: FloatingDebris
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: FloatingDebris
  nameWithType: WatcherEnums.PlacedObjectType.FloatingDebris
  fullName: Watcher.WatcherEnums.PlacedObjectType.FloatingDebris
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.FloatingDebris</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type FloatingDebris
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared FloatingDebris As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.WeaverSpot
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.WeaverSpot
  id: WeaverSpot
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: WeaverSpot
  nameWithType: WatcherEnums.PlacedObjectType.WeaverSpot
  fullName: Watcher.WatcherEnums.PlacedObjectType.WeaverSpot
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.WeaverSpot</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type WeaverSpot
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared WeaverSpot As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.FlameJet
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.FlameJet
  id: FlameJet
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: FlameJet
  nameWithType: WatcherEnums.PlacedObjectType.FlameJet
  fullName: Watcher.WatcherEnums.PlacedObjectType.FlameJet
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.FlameJet</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type FlameJet
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared FlameJet As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.AetherRainbow
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.AetherRainbow
  id: AetherRainbow
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: AetherRainbow
  nameWithType: WatcherEnums.PlacedObjectType.AetherRainbow
  fullName: Watcher.WatcherEnums.PlacedObjectType.AetherRainbow
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.AetherRainbow</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type AetherRainbow
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared AetherRainbow As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.WallLight
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.WallLight
  id: WallLight
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: WallLight
  nameWithType: WatcherEnums.PlacedObjectType.WallLight
  fullName: Watcher.WatcherEnums.PlacedObjectType.WallLight
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.WallLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type WallLight
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared WallLight As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedBoxWorm
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedBoxWorm
  id: PlacedBoxWorm
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedBoxWorm
  nameWithType: WatcherEnums.PlacedObjectType.PlacedBoxWorm
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedBoxWorm
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedBoxWorm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedBoxWorm
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedBoxWorm As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedFireSprite
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedFireSprite
  id: PlacedFireSprite
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedFireSprite
  nameWithType: WatcherEnums.PlacedObjectType.PlacedFireSprite
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedFireSprite
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedFireSprite</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedFireSprite
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedFireSprite As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedDrillCrab
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedDrillCrab
  id: PlacedDrillCrab
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedDrillCrab
  nameWithType: WatcherEnums.PlacedObjectType.PlacedDrillCrab
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedDrillCrab
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedDrillCrab</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedDrillCrab
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedDrillCrab As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedRats
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedRats
  id: PlacedRats
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedRats
  nameWithType: WatcherEnums.PlacedObjectType.PlacedRats
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedRats
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedRats</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedRats
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedRats As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedFrog
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedFrog
  id: PlacedFrog
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedFrog
  nameWithType: WatcherEnums.PlacedObjectType.PlacedFrog
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedFrog
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedFrog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedFrog
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedFrog As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedLoach
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedLoach
  id: PlacedLoach
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedLoach
  nameWithType: WatcherEnums.PlacedObjectType.PlacedLoach
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedLoach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedLoach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedLoach
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedLoach As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedRotLoach
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedRotLoach
  id: PlacedRotLoach
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedRotLoach
  nameWithType: WatcherEnums.PlacedObjectType.PlacedRotLoach
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedRotLoach
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedRotLoach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedRotLoach
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedRotLoach As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PlacedBarnacles
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PlacedBarnacles
  id: PlacedBarnacles
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedBarnacles
  nameWithType: WatcherEnums.PlacedObjectType.PlacedBarnacles
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedBarnacles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PlacedBarnacles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PlacedBarnacles
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PlacedBarnacles As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.SKLightningRod
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.SKLightningRod
  id: SKLightningRod
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: SKLightningRod
  nameWithType: WatcherEnums.PlacedObjectType.SKLightningRod
  fullName: Watcher.WatcherEnums.PlacedObjectType.SKLightningRod
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.SKLightningRod</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type SKLightningRod
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared SKLightningRod As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.PrinceBulb
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.PrinceBulb
  id: PrinceBulb
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PrinceBulb
  nameWithType: WatcherEnums.PlacedObjectType.PrinceBulb
  fullName: Watcher.WatcherEnums.PlacedObjectType.PrinceBulb
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.PrinceBulb</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type PrinceBulb
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared PrinceBulb As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.RottenDangleFruit
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.RottenDangleFruit
  id: RottenDangleFruit
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: RottenDangleFruit
  nameWithType: WatcherEnums.PlacedObjectType.RottenDangleFruit
  fullName: Watcher.WatcherEnums.PlacedObjectType.RottenDangleFruit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.RottenDangleFruit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type RottenDangleFruit
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared RottenDangleFruit As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.RottenSeedCob
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.RottenSeedCob
  id: RottenSeedCob
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: RottenSeedCob
  nameWithType: WatcherEnums.PlacedObjectType.RottenSeedCob
  fullName: Watcher.WatcherEnums.PlacedObjectType.RottenSeedCob
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.RottenSeedCob</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type RottenSeedCob
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared RottenSeedCob As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.UrbanLife
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.UrbanLife
  id: UrbanLife
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: UrbanLife
  nameWithType: WatcherEnums.PlacedObjectType.UrbanLife
  fullName: Watcher.WatcherEnums.PlacedObjectType.UrbanLife
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.UrbanLife</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type UrbanLife
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared UrbanLife As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.UrbanLifePath
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.UrbanLifePath
  id: UrbanLifePath
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: UrbanLifePath
  nameWithType: WatcherEnums.PlacedObjectType.UrbanLifePath
  fullName: Watcher.WatcherEnums.PlacedObjectType.UrbanLifePath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.UrbanLifePath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type UrbanLifePath
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared UrbanLifePath As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.SpinToy
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.SpinToy
  id: SpinToy
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: SpinToy
  nameWithType: WatcherEnums.PlacedObjectType.SpinToy
  fullName: Watcher.WatcherEnums.PlacedObjectType.SpinToy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.SpinToy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type SpinToy
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared SpinToy As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.BallToy
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.BallToy
  id: BallToy
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: BallToy
  nameWithType: WatcherEnums.PlacedObjectType.BallToy
  fullName: Watcher.WatcherEnums.PlacedObjectType.BallToy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.BallToy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type BallToy
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared BallToy As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.SoftToy
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.SoftToy
  id: SoftToy
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: SoftToy
  nameWithType: WatcherEnums.PlacedObjectType.SoftToy
  fullName: Watcher.WatcherEnums.PlacedObjectType.SoftToy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.SoftToy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type SoftToy
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared SoftToy As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.WeirdToy
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.WeirdToy
  id: WeirdToy
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: WeirdToy
  nameWithType: WatcherEnums.PlacedObjectType.WeirdToy
  fullName: Watcher.WatcherEnums.PlacedObjectType.WeirdToy
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.WeirdToy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type WeirdToy
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared WeirdToy As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.UrbanCandles
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.UrbanCandles
  id: UrbanCandles
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: UrbanCandles
  nameWithType: WatcherEnums.PlacedObjectType.UrbanCandles
  fullName: Watcher.WatcherEnums.PlacedObjectType.UrbanCandles
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.UrbanCandles</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type UrbanCandles
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared UrbanCandles As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.UrbanCandleHolder
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.UrbanCandleHolder
  id: UrbanCandleHolder
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: UrbanCandleHolder
  nameWithType: WatcherEnums.PlacedObjectType.UrbanCandleHolder
  fullName: Watcher.WatcherEnums.PlacedObjectType.UrbanCandleHolder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.UrbanCandleHolder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type UrbanCandleHolder
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared UrbanCandleHolder As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.KarmaFlowerPatch
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.KarmaFlowerPatch
  id: KarmaFlowerPatch
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: KarmaFlowerPatch
  nameWithType: WatcherEnums.PlacedObjectType.KarmaFlowerPatch
  fullName: Watcher.WatcherEnums.PlacedObjectType.KarmaFlowerPatch
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.KarmaFlowerPatch</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type KarmaFlowerPatch
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared KarmaFlowerPatch As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.ARZapperOmni
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.ARZapperOmni
  id: ARZapperOmni
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: ARZapperOmni
  nameWithType: WatcherEnums.PlacedObjectType.ARZapperOmni
  fullName: Watcher.WatcherEnums.PlacedObjectType.ARZapperOmni
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.ARZapperOmni</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type ARZapperOmni
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared ARZapperOmni As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.ARZapperVertical
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.ARZapperVertical
  id: ARZapperVertical
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: ARZapperVertical
  nameWithType: WatcherEnums.PlacedObjectType.ARZapperVertical
  fullName: Watcher.WatcherEnums.PlacedObjectType.ARZapperVertical
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.ARZapperVertical</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type ARZapperVertical
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared ARZapperVertical As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.ARZapperHorizontal
  commentId: F:Watcher.WatcherEnums.PlacedObjectType.ARZapperHorizontal
  id: ARZapperHorizontal
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: ARZapperHorizontal
  nameWithType: WatcherEnums.PlacedObjectType.ARZapperHorizontal
  fullName: Watcher.WatcherEnums.PlacedObjectType.ARZapperHorizontal
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.WatcherEnums.PlacedObjectType.ARZapperHorizontal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static PlacedObject.Type ARZapperHorizontal
    return:
      type: Global.PlacedObject.Type
    content.vb: Public Shared ARZapperHorizontal As PlacedObject.Type
- uid: Watcher.WatcherEnums.PlacedObjectType.RegisterValues
  commentId: M:Watcher.WatcherEnums.PlacedObjectType.RegisterValues
  id: RegisterValues
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: RegisterValues()
  nameWithType: WatcherEnums.PlacedObjectType.RegisterValues()
  fullName: Watcher.WatcherEnums.PlacedObjectType.RegisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.PlacedObjectType.RegisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void RegisterValues()
    content.vb: Public Shared Sub RegisterValues()
  overload: Watcher.WatcherEnums.PlacedObjectType.RegisterValues*
- uid: Watcher.WatcherEnums.PlacedObjectType.UnregisterValues
  commentId: M:Watcher.WatcherEnums.PlacedObjectType.UnregisterValues
  id: UnregisterValues
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: UnregisterValues()
  nameWithType: WatcherEnums.PlacedObjectType.UnregisterValues()
  fullName: Watcher.WatcherEnums.PlacedObjectType.UnregisterValues()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.WatcherEnums.PlacedObjectType.UnregisterValues</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void UnregisterValues()
    content.vb: Public Shared Sub UnregisterValues()
  overload: Watcher.WatcherEnums.PlacedObjectType.UnregisterValues*
- uid: Watcher.WatcherEnums.PlacedObjectType.#ctor
  commentId: M:Watcher.WatcherEnums.PlacedObjectType.#ctor
  id: '#ctor'
  parent: Watcher.WatcherEnums.PlacedObjectType
  langs:
  - csharp
  - vb
  name: PlacedObjectType()
  nameWithType: WatcherEnums.PlacedObjectType.PlacedObjectType()
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedObjectType()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.WatcherEnums.PlacedObjectType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObjectType()
    content.vb: Public Sub New()
  overload: Watcher.WatcherEnums.PlacedObjectType.#ctor*
  nameWithType.vb: WatcherEnums.PlacedObjectType.New()
  fullName.vb: Watcher.WatcherEnums.PlacedObjectType.New()
  name.vb: New()
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PlacedObject.Type
  commentId: T:Global.PlacedObject.Type
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.Type
  nameWithType: PlacedObject.Type
  fullName: PlacedObject.Type
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Type
    name: Type
    isExternal: true
    href: PlacedObject.Type.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.Type
    name: Type
    isExternal: true
    href: PlacedObject.Type.html
- uid: Watcher.WatcherEnums.PlacedObjectType.RegisterValues*
  commentId: Overload:Watcher.WatcherEnums.PlacedObjectType.RegisterValues
  isExternal: true
  href: Watcher.WatcherEnums.PlacedObjectType.html#Watcher_WatcherEnums_PlacedObjectType_RegisterValues
  name: RegisterValues
  nameWithType: WatcherEnums.PlacedObjectType.RegisterValues
  fullName: Watcher.WatcherEnums.PlacedObjectType.RegisterValues
- uid: Watcher.WatcherEnums.PlacedObjectType.UnregisterValues*
  commentId: Overload:Watcher.WatcherEnums.PlacedObjectType.UnregisterValues
  isExternal: true
  href: Watcher.WatcherEnums.PlacedObjectType.html#Watcher_WatcherEnums_PlacedObjectType_UnregisterValues
  name: UnregisterValues
  nameWithType: WatcherEnums.PlacedObjectType.UnregisterValues
  fullName: Watcher.WatcherEnums.PlacedObjectType.UnregisterValues
- uid: Watcher.WatcherEnums.PlacedObjectType.#ctor*
  commentId: Overload:Watcher.WatcherEnums.PlacedObjectType.#ctor
  isExternal: true
  href: Watcher.WatcherEnums.PlacedObjectType.html#Watcher_WatcherEnums_PlacedObjectType__ctor
  name: PlacedObjectType
  nameWithType: WatcherEnums.PlacedObjectType.PlacedObjectType
  fullName: Watcher.WatcherEnums.PlacedObjectType.PlacedObjectType
  nameWithType.vb: WatcherEnums.PlacedObjectType.New
  fullName.vb: Watcher.WatcherEnums.PlacedObjectType.New
  name.vb: New
