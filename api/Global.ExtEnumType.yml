### YamlMime:ManagedReference
items:
- uid: Global.ExtEnumType
  commentId: T:Global.ExtEnumType
  id: ExtEnumType
  parent: Global
  children:
  - Global.ExtEnumType.#ctor
  - Global.ExtEnumType.AddEntry(System.String)
  - Global.ExtEnumType.Count
  - Global.ExtEnumType.GetEntry(System.Int32)
  - Global.ExtEnumType.RemoveEntry(System.String)
  - Global.ExtEnumType.entries
  - Global.ExtEnumType.version
  langs:
  - csharp
  - vb
  name: ExtEnumType
  nameWithType: ExtEnumType
  fullName: ExtEnumType
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ExtEnumType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ExtEnumType
    content.vb: Public Class ExtEnumType
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ExtEnumType.entries
  commentId: F:Global.ExtEnumType.entries
  id: entries
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: entries
  nameWithType: ExtEnumType.entries
  fullName: ExtEnumType.entries
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ExtEnumType.entries</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<string> entries
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public entries As List(Of String)
- uid: Global.ExtEnumType.version
  commentId: F:Global.ExtEnumType.version
  id: version
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: version
  nameWithType: ExtEnumType.version
  fullName: ExtEnumType.version
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ExtEnumType.version</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int version
    return:
      type: System.Int32
    content.vb: Public version As Integer
- uid: Global.ExtEnumType.AddEntry(System.String)
  commentId: M:Global.ExtEnumType.AddEntry(System.String)
  id: AddEntry(System.String)
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: AddEntry(string)
  nameWithType: ExtEnumType.AddEntry(string)
  fullName: ExtEnumType.AddEntry(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnumType.AddEntry(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddEntry(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:ExtEnumType.AddEntry(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddEntry(name As String)
  overload: Global.ExtEnumType.AddEntry*
  nameWithType.vb: ExtEnumType.AddEntry(String)
  fullName.vb: ExtEnumType.AddEntry(String)
  name.vb: AddEntry(String)
- uid: Global.ExtEnumType.RemoveEntry(System.String)
  commentId: M:Global.ExtEnumType.RemoveEntry(System.String)
  id: RemoveEntry(System.String)
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: RemoveEntry(string)
  nameWithType: ExtEnumType.RemoveEntry(string)
  fullName: ExtEnumType.RemoveEntry(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnumType.RemoveEntry(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveEntry(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>name</parameter>
            <parameter>M:ExtEnumType.RemoveEntry(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveEntry(name As String)
  overload: Global.ExtEnumType.RemoveEntry*
  nameWithType.vb: ExtEnumType.RemoveEntry(String)
  fullName.vb: ExtEnumType.RemoveEntry(String)
  name.vb: RemoveEntry(String)
- uid: Global.ExtEnumType.GetEntry(System.Int32)
  commentId: M:Global.ExtEnumType.GetEntry(System.Int32)
  id: GetEntry(System.Int32)
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: GetEntry(int)
  nameWithType: ExtEnumType.GetEntry(int)
  fullName: ExtEnumType.GetEntry(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ExtEnumType.GetEntry(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string GetEntry(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:ExtEnumType.GetEntry(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ExtEnumType.GetEntry(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetEntry(index As Integer) As String
  overload: Global.ExtEnumType.GetEntry*
  nameWithType.vb: ExtEnumType.GetEntry(Integer)
  fullName.vb: ExtEnumType.GetEntry(Integer)
  name.vb: GetEntry(Integer)
- uid: Global.ExtEnumType.#ctor
  commentId: M:Global.ExtEnumType.#ctor
  id: '#ctor'
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: ExtEnumType()
  nameWithType: ExtEnumType.ExtEnumType()
  fullName: ExtEnumType.ExtEnumType()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ExtEnumType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ExtEnumType()
    content.vb: Public Sub New()
  overload: Global.ExtEnumType.#ctor*
  nameWithType.vb: ExtEnumType.New()
  fullName.vb: ExtEnumType.New()
  name.vb: New()
- uid: Global.ExtEnumType.Count
  commentId: P:Global.ExtEnumType.Count
  id: Count
  parent: Global.ExtEnumType
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: ExtEnumType.Count
  fullName: ExtEnumType.Count
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ExtEnumType.Count</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Count As Integer
  overload: Global.ExtEnumType.Count*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ExtEnumType.AddEntry*
  commentId: Overload:Global.ExtEnumType.AddEntry
  isExternal: true
  href: Global.ExtEnumType.html#ExtEnumType_AddEntry_System_String_
  name: AddEntry
  nameWithType: ExtEnumType.AddEntry
  fullName: ExtEnumType.AddEntry
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Global.ExtEnumType.RemoveEntry*
  commentId: Overload:Global.ExtEnumType.RemoveEntry
  isExternal: true
  href: Global.ExtEnumType.html#ExtEnumType_RemoveEntry_System_String_
  name: RemoveEntry
  nameWithType: ExtEnumType.RemoveEntry
  fullName: ExtEnumType.RemoveEntry
- uid: Global.ExtEnumType.GetEntry*
  commentId: Overload:Global.ExtEnumType.GetEntry
  isExternal: true
  href: Global.ExtEnumType.html#ExtEnumType_GetEntry_System_Int32_
  name: GetEntry
  nameWithType: ExtEnumType.GetEntry
  fullName: ExtEnumType.GetEntry
- uid: Global.ExtEnumType.#ctor*
  commentId: Overload:Global.ExtEnumType.#ctor
  isExternal: true
  href: Global.ExtEnumType.html#ExtEnumType__ctor
  name: ExtEnumType
  nameWithType: ExtEnumType.ExtEnumType
  fullName: ExtEnumType.ExtEnumType
  nameWithType.vb: ExtEnumType.New
  fullName.vb: ExtEnumType.New
  name.vb: New
- uid: Global.ExtEnumType.Count*
  commentId: Overload:Global.ExtEnumType.Count
  isExternal: true
  href: Global.ExtEnumType.html#ExtEnumType_Count
  name: Count
  nameWithType: ExtEnumType.Count
  fullName: ExtEnumType.Count
