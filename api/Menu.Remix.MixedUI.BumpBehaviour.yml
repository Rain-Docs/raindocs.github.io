### YamlMime:ManagedReference
items:
- uid: Menu.Remix.MixedUI.BumpBehaviour
  commentId: T:Menu.Remix.MixedUI.BumpBehaviour
  id: BumpBehaviour
  parent: Menu.Remix.MixedUI
  children:
  - Menu.Remix.MixedUI.BumpBehaviour.#ctor(Menu.Remix.MixedUI.UIelement)
  - Menu.Remix.MixedUI.BumpBehaviour.AddSize
  - Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)
  - Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
  - Menu.Remix.MixedUI.BumpBehaviour.Focused
  - Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)
  - Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)
  - Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)
  - Menu.Remix.MixedUI.BumpBehaviour.Update
  - Menu.Remix.MixedUI.BumpBehaviour.col
  - Menu.Remix.MixedUI.BumpBehaviour.extraSizeBump
  - Menu.Remix.MixedUI.BumpBehaviour.flash
  - Menu.Remix.MixedUI.BumpBehaviour.flashBool
  - Menu.Remix.MixedUI.BumpBehaviour.greyedOut
  - Menu.Remix.MixedUI.BumpBehaviour.held
  - Menu.Remix.MixedUI.BumpBehaviour.owner
  - Menu.Remix.MixedUI.BumpBehaviour.sin
  - Menu.Remix.MixedUI.BumpBehaviour.sizeBump
  langs:
  - csharp
  - vb
  name: BumpBehaviour
  nameWithType: BumpBehaviour
  fullName: Menu.Remix.MixedUI.BumpBehaviour
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.MixedUI.BumpBehaviour</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class BumpBehaviour
    content.vb: Public Class BumpBehaviour
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.MixedUI.BumpBehaviour.owner
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.owner
  id: owner
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: BumpBehaviour.owner
  fullName: Menu.Remix.MixedUI.BumpBehaviour.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public readonly UIelement owner
    return:
      type: Menu.Remix.MixedUI.UIelement
    content.vb: Public ReadOnly owner As UIelement
- uid: Menu.Remix.MixedUI.BumpBehaviour.sizeBump
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.sizeBump
  id: sizeBump
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: sizeBump
  nameWithType: BumpBehaviour.sizeBump
  fullName: Menu.Remix.MixedUI.BumpBehaviour.sizeBump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.sizeBump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sizeBump
    return:
      type: System.Single
    content.vb: Public sizeBump As Single
- uid: Menu.Remix.MixedUI.BumpBehaviour.extraSizeBump
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.extraSizeBump
  id: extraSizeBump
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: extraSizeBump
  nameWithType: BumpBehaviour.extraSizeBump
  fullName: Menu.Remix.MixedUI.BumpBehaviour.extraSizeBump
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.extraSizeBump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float extraSizeBump
    return:
      type: System.Single
    content.vb: Public extraSizeBump As Single
- uid: Menu.Remix.MixedUI.BumpBehaviour.col
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.col
  id: col
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: col
  nameWithType: BumpBehaviour.col
  fullName: Menu.Remix.MixedUI.BumpBehaviour.col
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.col</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float col
    return:
      type: System.Single
    content.vb: Public col As Single
- uid: Menu.Remix.MixedUI.BumpBehaviour.flash
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.flash
  id: flash
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: flash
  nameWithType: BumpBehaviour.flash
  fullName: Menu.Remix.MixedUI.BumpBehaviour.flash
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.flash</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flash
    return:
      type: System.Single
    content.vb: Public flash As Single
- uid: Menu.Remix.MixedUI.BumpBehaviour.sin
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.sin
  id: sin
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: sin
  nameWithType: BumpBehaviour.sin
  fullName: Menu.Remix.MixedUI.BumpBehaviour.sin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.sin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float sin
    return:
      type: System.Single
    content.vb: Public sin As Single
- uid: Menu.Remix.MixedUI.BumpBehaviour.flashBool
  commentId: F:Menu.Remix.MixedUI.BumpBehaviour.flashBool
  id: flashBool
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: flashBool
  nameWithType: BumpBehaviour.flashBool
  fullName: Menu.Remix.MixedUI.BumpBehaviour.flashBool
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.MixedUI.BumpBehaviour.flashBool</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool flashBool
    return:
      type: System.Boolean
    content.vb: Public flashBool As Boolean
- uid: Menu.Remix.MixedUI.BumpBehaviour.#ctor(Menu.Remix.MixedUI.UIelement)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.#ctor(Menu.Remix.MixedUI.UIelement)
  id: '#ctor(Menu.Remix.MixedUI.UIelement)'
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: BumpBehaviour(UIelement)
  nameWithType: BumpBehaviour.BumpBehaviour(UIelement)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.BumpBehaviour(Menu.Remix.MixedUI.UIelement)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Menu.Remix.MixedUI.BumpBehaviour</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public BumpBehaviour(UIelement owner)
    parameters:
    - id: owner
      type: Menu.Remix.MixedUI.UIelement
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.#ctor(Menu.Remix.MixedUI.UIelement)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As UIelement)
  overload: Menu.Remix.MixedUI.BumpBehaviour.#ctor*
  nameWithType.vb: BumpBehaviour.New(UIelement)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.New(Menu.Remix.MixedUI.UIelement)
  name.vb: New(UIelement)
- uid: Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)
  id: GetColor(UnityEngine.Color)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: GetColor(Color)
  nameWithType: BumpBehaviour.GetColor(Color)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GetColor(Color orig)
    parameters:
    - id: orig
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>orig</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.GetColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetColor(orig As Color) As Color
  overload: Menu.Remix.MixedUI.BumpBehaviour.GetColor*
- uid: Menu.Remix.MixedUI.BumpBehaviour.Update
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.Update
  id: Update
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: BumpBehaviour.Update()
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Menu.Remix.MixedUI.BumpBehaviour.Update*
- uid: Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)
  id: Sin(System.Single)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: Sin(float)
  nameWithType: BumpBehaviour.Sin(float)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Sin(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float Sin(float period = 30)
    parameters:
    - id: period
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>period</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.Sin(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function Sin(period As Single = 30) As Single
  overload: Menu.Remix.MixedUI.BumpBehaviour.Sin*
  nameWithType.vb: BumpBehaviour.Sin(Single)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.Sin(Single)
  name.vb: Sin(Single)
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)
  id: JoystickPress(RWCustom.IntVector2)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickPress(IntVector2)
  nameWithType: BumpBehaviour.JoystickPress(IntVector2)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool JoystickPress(IntVector2 direction)
    parameters:
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(RWCustom.IntVector2)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickPress(direction As IntVector2) As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress*
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)
  id: JoystickPress(System.Int32,System.Int32)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickPress(int, int)
  nameWithType: BumpBehaviour.JoystickPress(int, int)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool JoystickPress(int xDir, int yDir)
    parameters:
    - id: xDir
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xDir</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: yDir
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yDir</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickPress(xDir As Integer, yDir As Integer) As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress*
  nameWithType.vb: BumpBehaviour.JoystickPress(Integer, Integer)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress(Integer, Integer)
  name.vb: JoystickPress(Integer, Integer)
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)
  id: JoystickPressAxis(System.Boolean)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickPressAxis(bool)
  nameWithType: BumpBehaviour.JoystickPressAxis(bool)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int JoystickPressAxis(bool vertical)
    parameters:
    - id: vertical
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertical</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickPressAxis(vertical As Boolean) As Integer
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis*
  nameWithType.vb: BumpBehaviour.JoystickPressAxis(Boolean)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis(Boolean)
  name.vb: JoystickPressAxis(Boolean)
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)
  id: JoystickHeld(RWCustom.IntVector2,System.Single)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickHeld(IntVector2, float)
  nameWithType: BumpBehaviour.JoystickHeld(IntVector2, float)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool JoystickHeld(IntVector2 direction, float speed = 1)
    parameters:
    - id: direction
      type: RWCustom.IntVector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>direction</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickHeld(direction As IntVector2, speed As Single = 1) As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld*
  nameWithType.vb: BumpBehaviour.JoystickHeld(IntVector2, Single)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(RWCustom.IntVector2, Single)
  name.vb: JoystickHeld(IntVector2, Single)
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)
  id: JoystickHeld(System.Int32,System.Int32,System.Single)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickHeld(int, int, float)
  nameWithType: BumpBehaviour.JoystickHeld(int, int, float)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(int, int, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool JoystickHeld(int xDir, int yDir, float speed = 1)
    parameters:
    - id: xDir
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>xDir</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: yDir
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>yDir</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(System.Int32,System.Int32,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickHeld(xDir As Integer, yDir As Integer, speed As Single = 1) As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld*
  nameWithType.vb: BumpBehaviour.JoystickHeld(Integer, Integer, Single)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld(Integer, Integer, Single)
  name.vb: JoystickHeld(Integer, Integer, Single)
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)
  id: JoystickHeldAxis(System.Boolean,System.Single)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: JoystickHeldAxis(bool, float)
  nameWithType: BumpBehaviour.JoystickHeldAxis(bool, float)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(bool, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int JoystickHeldAxis(bool vertical, float speed = 1)
    parameters:
    - id: vertical
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>vertical</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    - id: speed
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>speed</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(System.Boolean,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function JoystickHeldAxis(vertical As Boolean, speed As Single = 1) As Integer
  overload: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis*
  nameWithType.vb: BumpBehaviour.JoystickHeldAxis(Boolean, Single)
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis(Boolean, Single)
  name.vb: JoystickHeldAxis(Boolean, Single)
- uid: Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)
  commentId: M:Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)
  id: ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: ButtonPress(ButtonType)
  nameWithType: BumpBehaviour.ButtonPress(BumpBehaviour.ButtonType)
  fullName: Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool ButtonPress(BumpBehaviour.ButtonType type)
    parameters:
    - id: type
      type: Menu.Remix.MixedUI.BumpBehaviour.ButtonType
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>type</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.MixedUI.BumpBehaviour.ButtonPress(Menu.Remix.MixedUI.BumpBehaviour.ButtonType)</parameter>
          </include>
        </markup>
    content.vb: Public Function ButtonPress(type As BumpBehaviour.ButtonType) As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.ButtonPress*
- uid: Menu.Remix.MixedUI.BumpBehaviour.greyedOut
  commentId: P:Menu.Remix.MixedUI.BumpBehaviour.greyedOut
  id: greyedOut
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: greyedOut
  nameWithType: BumpBehaviour.greyedOut
  fullName: Menu.Remix.MixedUI.BumpBehaviour.greyedOut
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.BumpBehaviour.greyedOut</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool greyedOut { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property greyedOut As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.greyedOut*
- uid: Menu.Remix.MixedUI.BumpBehaviour.held
  commentId: P:Menu.Remix.MixedUI.BumpBehaviour.held
  id: held
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: held
  nameWithType: BumpBehaviour.held
  fullName: Menu.Remix.MixedUI.BumpBehaviour.held
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.BumpBehaviour.held</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool held { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property held As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.held*
- uid: Menu.Remix.MixedUI.BumpBehaviour.Focused
  commentId: P:Menu.Remix.MixedUI.BumpBehaviour.Focused
  id: Focused
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: Focused
  nameWithType: BumpBehaviour.Focused
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Focused
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.BumpBehaviour.Focused</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Focused { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Focused As Boolean
  overload: Menu.Remix.MixedUI.BumpBehaviour.Focused*
- uid: Menu.Remix.MixedUI.BumpBehaviour.AddSize
  commentId: P:Menu.Remix.MixedUI.BumpBehaviour.AddSize
  id: AddSize
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: AddSize
  nameWithType: BumpBehaviour.AddSize
  fullName: Menu.Remix.MixedUI.BumpBehaviour.AddSize
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.BumpBehaviour.AddSize</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float AddSize { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property AddSize As Single
  overload: Menu.Remix.MixedUI.BumpBehaviour.AddSize*
- uid: Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
  commentId: P:Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
  id: FillAlpha
  parent: Menu.Remix.MixedUI.BumpBehaviour
  langs:
  - csharp
  - vb
  name: FillAlpha
  nameWithType: BumpBehaviour.FillAlpha
  fullName: Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix.MixedUI
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Menu.Remix.MixedUI.BumpBehaviour.FillAlpha</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float FillAlpha { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property FillAlpha As Single
  overload: Menu.Remix.MixedUI.BumpBehaviour.FillAlpha*
references:
- uid: Menu.Remix.MixedUI
  commentId: N:Menu.Remix.MixedUI
  isExternal: true
  href: Menu.html
  name: Menu.Remix.MixedUI
  nameWithType: Menu.Remix.MixedUI
  fullName: Menu.Remix.MixedUI
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  - name: .
  - uid: Menu.Remix.MixedUI
    name: MixedUI
    isExternal: true
    href: Menu.Remix.MixedUI.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Menu.Remix.MixedUI.UIelement
  commentId: T:Menu.Remix.MixedUI.UIelement
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.UIelement.html
  name: UIelement
  nameWithType: UIelement
  fullName: Menu.Remix.MixedUI.UIelement
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.MixedUI.BumpBehaviour.#ctor*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.#ctor
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour__ctor_Menu_Remix_MixedUI_UIelement_
  name: BumpBehaviour
  nameWithType: BumpBehaviour.BumpBehaviour
  fullName: Menu.Remix.MixedUI.BumpBehaviour.BumpBehaviour
  nameWithType.vb: BumpBehaviour.New
  fullName.vb: Menu.Remix.MixedUI.BumpBehaviour.New
  name.vb: New
- uid: Menu.Remix.MixedUI.BumpBehaviour.GetColor*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.GetColor
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_GetColor_UnityEngine_Color_
  name: GetColor
  nameWithType: BumpBehaviour.GetColor
  fullName: Menu.Remix.MixedUI.BumpBehaviour.GetColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Menu.Remix.MixedUI.BumpBehaviour.Update*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.Update
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_Update
  name: Update
  nameWithType: BumpBehaviour.Update
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Update
- uid: Menu.Remix.MixedUI.BumpBehaviour.Sin*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.Sin
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_Sin_System_Single_
  name: Sin
  nameWithType: BumpBehaviour.Sin
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Sin
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.JoystickPress
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_JoystickPress_RWCustom_IntVector2_
  name: JoystickPress
  nameWithType: BumpBehaviour.JoystickPress
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickPress
- uid: RWCustom.IntVector2
  commentId: T:RWCustom.IntVector2
  parent: RWCustom
  isExternal: true
  href: RWCustom.IntVector2.html
  name: IntVector2
  nameWithType: IntVector2
  fullName: RWCustom.IntVector2
- uid: RWCustom
  commentId: N:RWCustom
  isExternal: true
  href: RWCustom.html
  name: RWCustom
  nameWithType: RWCustom
  fullName: RWCustom
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_JoystickPressAxis_System_Boolean_
  name: JoystickPressAxis
  nameWithType: BumpBehaviour.JoystickPressAxis
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickPressAxis
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_JoystickHeld_RWCustom_IntVector2_System_Single_
  name: JoystickHeld
  nameWithType: BumpBehaviour.JoystickHeld
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeld
- uid: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_JoystickHeldAxis_System_Boolean_System_Single_
  name: JoystickHeldAxis
  nameWithType: BumpBehaviour.JoystickHeldAxis
  fullName: Menu.Remix.MixedUI.BumpBehaviour.JoystickHeldAxis
- uid: Menu.Remix.MixedUI.BumpBehaviour.ButtonPress*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.ButtonPress
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_ButtonPress_Menu_Remix_MixedUI_BumpBehaviour_ButtonType_
  name: ButtonPress
  nameWithType: BumpBehaviour.ButtonPress
  fullName: Menu.Remix.MixedUI.BumpBehaviour.ButtonPress
- uid: Menu.Remix.MixedUI.BumpBehaviour.ButtonType
  commentId: T:Menu.Remix.MixedUI.BumpBehaviour.ButtonType
  parent: Menu.Remix.MixedUI
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html
  name: BumpBehaviour.ButtonType
  nameWithType: BumpBehaviour.ButtonType
  fullName: Menu.Remix.MixedUI.BumpBehaviour.ButtonType
  spec.csharp:
  - uid: Menu.Remix.MixedUI.BumpBehaviour
    name: BumpBehaviour
    isExternal: true
    href: Menu.Remix.MixedUI.BumpBehaviour.html
  - name: .
  - uid: Menu.Remix.MixedUI.BumpBehaviour.ButtonType
    name: ButtonType
    isExternal: true
    href: Menu.Remix.MixedUI.BumpBehaviour.ButtonType.html
  spec.vb:
  - uid: Menu.Remix.MixedUI.BumpBehaviour
    name: BumpBehaviour
    isExternal: true
    href: Menu.Remix.MixedUI.BumpBehaviour.html
  - name: .
  - uid: Menu.Remix.MixedUI.BumpBehaviour.ButtonType
    name: ButtonType
    isExternal: true
    href: Menu.Remix.MixedUI.BumpBehaviour.ButtonType.html
- uid: Menu.Remix.MixedUI.BumpBehaviour.greyedOut*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.greyedOut
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_greyedOut
  name: greyedOut
  nameWithType: BumpBehaviour.greyedOut
  fullName: Menu.Remix.MixedUI.BumpBehaviour.greyedOut
- uid: Menu.Remix.MixedUI.BumpBehaviour.held*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.held
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_held
  name: held
  nameWithType: BumpBehaviour.held
  fullName: Menu.Remix.MixedUI.BumpBehaviour.held
- uid: Menu.Remix.MixedUI.BumpBehaviour.Focused*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.Focused
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_Focused
  name: Focused
  nameWithType: BumpBehaviour.Focused
  fullName: Menu.Remix.MixedUI.BumpBehaviour.Focused
- uid: Menu.Remix.MixedUI.BumpBehaviour.AddSize*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.AddSize
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_AddSize
  name: AddSize
  nameWithType: BumpBehaviour.AddSize
  fullName: Menu.Remix.MixedUI.BumpBehaviour.AddSize
- uid: Menu.Remix.MixedUI.BumpBehaviour.FillAlpha*
  commentId: Overload:Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
  isExternal: true
  href: Menu.Remix.MixedUI.BumpBehaviour.html#Menu_Remix_MixedUI_BumpBehaviour_FillAlpha
  name: FillAlpha
  nameWithType: BumpBehaviour.FillAlpha
  fullName: Menu.Remix.MixedUI.BumpBehaviour.FillAlpha
