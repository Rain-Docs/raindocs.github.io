### YamlMime:ManagedReference
items:
- uid: HUD.Map.SwarmCircle
  commentId: T:HUD.Map.SwarmCircle
  id: Map.SwarmCircle
  parent: HUD
  children:
  - HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)
  - HUD.Map.SwarmCircle.Destroy
  - HUD.Map.SwarmCircle.Update
  - HUD.Map.SwarmCircle.circle
  - HUD.Map.SwarmCircle.life
  - HUD.Map.SwarmCircle.map
  - HUD.Map.SwarmCircle.pos
  - HUD.Map.SwarmCircle.rad
  - HUD.Map.SwarmCircle.radSpeed
  - HUD.Map.SwarmCircle.room
  langs:
  - csharp
  - vb
  name: Map.SwarmCircle
  nameWithType: Map.SwarmCircle
  fullName: HUD.Map.SwarmCircle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:HUD.Map.SwarmCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Map.SwarmCircle
    content.vb: Public Class Map.SwarmCircle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: HUD.Map.SwarmCircle.map
  commentId: F:HUD.Map.SwarmCircle.map
  id: map
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: map
  nameWithType: Map.SwarmCircle.map
  fullName: HUD.Map.SwarmCircle.map
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.map</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Map map
    return:
      type: HUD.Map
    content.vb: Public map As Map
- uid: HUD.Map.SwarmCircle.circle
  commentId: F:HUD.Map.SwarmCircle.circle
  id: circle
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: circle
  nameWithType: Map.SwarmCircle.circle
  fullName: HUD.Map.SwarmCircle.circle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.circle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public HUDCircle circle
    return:
      type: HUD.HUDCircle
    content.vb: Public circle As HUDCircle
- uid: HUD.Map.SwarmCircle.pos
  commentId: F:HUD.Map.SwarmCircle.pos
  id: pos
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: pos
  nameWithType: Map.SwarmCircle.pos
  fullName: HUD.Map.SwarmCircle.pos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.pos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 pos
    return:
      type: UnityEngine.Vector2
    content.vb: Public pos As Vector2
- uid: HUD.Map.SwarmCircle.room
  commentId: F:HUD.Map.SwarmCircle.room
  id: room
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: room
  nameWithType: Map.SwarmCircle.room
  fullName: HUD.Map.SwarmCircle.room
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.room</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int room
    return:
      type: System.Int32
    content.vb: Public room As Integer
- uid: HUD.Map.SwarmCircle.rad
  commentId: F:HUD.Map.SwarmCircle.rad
  id: rad
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: rad
  nameWithType: Map.SwarmCircle.rad
  fullName: HUD.Map.SwarmCircle.rad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.rad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float rad
    return:
      type: System.Single
    content.vb: Public rad As Single
- uid: HUD.Map.SwarmCircle.radSpeed
  commentId: F:HUD.Map.SwarmCircle.radSpeed
  id: radSpeed
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: radSpeed
  nameWithType: Map.SwarmCircle.radSpeed
  fullName: HUD.Map.SwarmCircle.radSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.radSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float radSpeed
    return:
      type: System.Single
    content.vb: Public radSpeed As Single
- uid: HUD.Map.SwarmCircle.life
  commentId: F:HUD.Map.SwarmCircle.life
  id: life
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: life
  nameWithType: Map.SwarmCircle.life
  fullName: HUD.Map.SwarmCircle.life
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:HUD.Map.SwarmCircle.life</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float life
    return:
      type: System.Single
    content.vb: Public life As Single
- uid: HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)
  commentId: M:HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)
  id: '#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)'
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: SwarmCircle(Map, Vector2, int)
  nameWithType: Map.SwarmCircle.SwarmCircle(Map, Vector2, int)
  fullName: HUD.Map.SwarmCircle.SwarmCircle(HUD.Map, UnityEngine.Vector2, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>HUD.Map.SwarmCircle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SwarmCircle(Map map, Vector2 pos, int room)
    parameters:
    - id: map
      type: HUD.Map
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>map</parameter>
            <parameter>M:HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:HUD.Map.SwarmCircle.#ctor(HUD.Map,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(map As Map, pos As Vector2, room As Integer)
  overload: HUD.Map.SwarmCircle.#ctor*
  nameWithType.vb: Map.SwarmCircle.New(Map, Vector2, Integer)
  fullName.vb: HUD.Map.SwarmCircle.New(HUD.Map, UnityEngine.Vector2, Integer)
  name.vb: New(Map, Vector2, Integer)
- uid: HUD.Map.SwarmCircle.Update
  commentId: M:HUD.Map.SwarmCircle.Update
  id: Update
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Map.SwarmCircle.Update()
  fullName: HUD.Map.SwarmCircle.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.SwarmCircle.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: HUD.Map.SwarmCircle.Update*
- uid: HUD.Map.SwarmCircle.Destroy
  commentId: M:HUD.Map.SwarmCircle.Destroy
  id: Destroy
  parent: HUD.Map.SwarmCircle
  langs:
  - csharp
  - vb
  name: Destroy()
  nameWithType: Map.SwarmCircle.Destroy()
  fullName: HUD.Map.SwarmCircle.Destroy()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: HUD
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:HUD.Map.SwarmCircle.Destroy</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Destroy()
    content.vb: Public Sub Destroy()
  overload: HUD.Map.SwarmCircle.Destroy*
references:
- uid: HUD
  commentId: N:HUD
  isExternal: true
  href: HUD.html
  name: HUD
  nameWithType: HUD
  fullName: HUD
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: HUD.Map
  commentId: T:HUD.Map
  parent: HUD
  isExternal: true
  href: HUD.Map.html
  name: Map
  nameWithType: Map
  fullName: HUD.Map
- uid: HUD.HUDCircle
  commentId: T:HUD.HUDCircle
  parent: HUD
  isExternal: true
  href: HUD.HUDCircle.html
  name: HUDCircle
  nameWithType: HUDCircle
  fullName: HUD.HUDCircle
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: HUD.Map.SwarmCircle.#ctor*
  commentId: Overload:HUD.Map.SwarmCircle.#ctor
  isExternal: true
  href: HUD.Map.SwarmCircle.html#HUD_Map_SwarmCircle__ctor_HUD_Map_UnityEngine_Vector2_System_Int32_
  name: SwarmCircle
  nameWithType: Map.SwarmCircle.SwarmCircle
  fullName: HUD.Map.SwarmCircle.SwarmCircle
  nameWithType.vb: Map.SwarmCircle.New
  fullName.vb: HUD.Map.SwarmCircle.New
  name.vb: New
- uid: HUD.Map.SwarmCircle.Update*
  commentId: Overload:HUD.Map.SwarmCircle.Update
  isExternal: true
  href: HUD.Map.SwarmCircle.html#HUD_Map_SwarmCircle_Update
  name: Update
  nameWithType: Map.SwarmCircle.Update
  fullName: HUD.Map.SwarmCircle.Update
- uid: HUD.Map.SwarmCircle.Destroy*
  commentId: Overload:HUD.Map.SwarmCircle.Destroy
  isExternal: true
  href: HUD.Map.SwarmCircle.html#HUD_Map_SwarmCircle_Destroy
  name: Destroy
  nameWithType: Map.SwarmCircle.Destroy
  fullName: HUD.Map.SwarmCircle.Destroy
