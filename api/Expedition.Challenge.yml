### YamlMime:ManagedReference
items:
- uid: Expedition.Challenge
  commentId: T:Expedition.Challenge
  id: Challenge
  parent: Expedition
  children:
  - Expedition.Challenge.#ctor
  - Expedition.Challenge.CanBeHidden
  - Expedition.Challenge.ChallengeName
  - Expedition.Challenge.CheckRevealable
  - Expedition.Challenge.CombatRequired
  - Expedition.Challenge.CompleteChallenge
  - Expedition.Challenge.CreatureKilled(Creature,System.Int32)
  - Expedition.Challenge.Duplicable(Expedition.Challenge)
  - Expedition.Challenge.FromString(System.String)
  - Expedition.Challenge.Generate
  - Expedition.Challenge.Points
  - Expedition.Challenge.Reset
  - Expedition.Challenge.RespondToCreatureKill
  - Expedition.Challenge.Update
  - Expedition.Challenge.UpdateDescription
  - Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)
  - Expedition.Challenge.completed
  - Expedition.Challenge.description
  - Expedition.Challenge.game
  - Expedition.Challenge.hidden
  - Expedition.Challenge.revealCheck
  - Expedition.Challenge.revealCheckDelay
  - Expedition.Challenge.revealed
  langs:
  - csharp
  - vb
  name: Challenge
  nameWithType: Challenge
  fullName: Expedition.Challenge
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Expedition.Challenge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public abstract class Challenge
    content.vb: Public MustInherit Class Challenge
  inheritance:
  - System.Object
  derivedClasses:
  - Expedition.AchievementChallenge
  - Expedition.CycleScoreChallenge
  - Expedition.EchoChallenge
  - Expedition.GlobalScoreChallenge
  - Expedition.HuntChallenge
  - Expedition.ItemHoardChallenge
  - Expedition.NeuronDeliveryChallenge
  - Expedition.PearlDeliveryChallenge
  - Expedition.PearlHoardChallenge
  - Expedition.PinChallenge
  - Expedition.VistaChallenge
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Expedition.Challenge.revealCheck
  commentId: F:Expedition.Challenge.revealCheck
  id: revealCheck
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: revealCheck
  nameWithType: Challenge.revealCheck
  fullName: Expedition.Challenge.revealCheck
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.revealCheck</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool revealCheck
    return:
      type: System.Boolean
    content.vb: Public revealCheck As Boolean
- uid: Expedition.Challenge.revealCheckDelay
  commentId: F:Expedition.Challenge.revealCheckDelay
  id: revealCheckDelay
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: revealCheckDelay
  nameWithType: Challenge.revealCheckDelay
  fullName: Expedition.Challenge.revealCheckDelay
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.revealCheckDelay</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int revealCheckDelay
    return:
      type: System.Int32
    content.vb: Public revealCheckDelay As Integer
- uid: Expedition.Challenge.game
  commentId: F:Expedition.Challenge.game
  id: game
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: game
  nameWithType: Challenge.game
  fullName: Expedition.Challenge.game
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.game</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainWorldGame game
    return:
      type: Global.RainWorldGame
    content.vb: Public game As RainWorldGame
- uid: Expedition.Challenge.completed
  commentId: F:Expedition.Challenge.completed
  id: completed
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: completed
  nameWithType: Challenge.completed
  fullName: Expedition.Challenge.completed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.completed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool completed
    return:
      type: System.Boolean
    content.vb: Public completed As Boolean
- uid: Expedition.Challenge.description
  commentId: F:Expedition.Challenge.description
  id: description
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: description
  nameWithType: Challenge.description
  fullName: Expedition.Challenge.description
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.description</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string description
    return:
      type: System.String
    content.vb: Public description As String
- uid: Expedition.Challenge.hidden
  commentId: F:Expedition.Challenge.hidden
  id: hidden
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: hidden
  nameWithType: Challenge.hidden
  fullName: Expedition.Challenge.hidden
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.hidden</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool hidden
    return:
      type: System.Boolean
    content.vb: Public hidden As Boolean
- uid: Expedition.Challenge.revealed
  commentId: F:Expedition.Challenge.revealed
  id: revealed
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: revealed
  nameWithType: Challenge.revealed
  fullName: Expedition.Challenge.revealed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Expedition.Challenge.revealed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool revealed
    return:
      type: System.Boolean
    content.vb: Public revealed As Boolean
- uid: Expedition.Challenge.#ctor
  commentId: M:Expedition.Challenge.#ctor
  id: '#ctor'
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Challenge()
  nameWithType: Challenge.Challenge()
  fullName: Expedition.Challenge.Challenge()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Expedition.Challenge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Challenge()
    content.vb: Public Sub New()
  overload: Expedition.Challenge.#ctor*
  nameWithType.vb: Challenge.New()
  fullName.vb: Expedition.Challenge.New()
  name.vb: New()
- uid: Expedition.Challenge.Update
  commentId: M:Expedition.Challenge.Update
  id: Update
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Challenge.Update()
  fullName: Expedition.Challenge.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Update()
    content.vb: Public Overridable Sub Update()
  overload: Expedition.Challenge.Update*
- uid: Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)
  commentId: M:Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)
  id: ValidForThisSlugcat(SlugcatStats.Name)
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: ValidForThisSlugcat(Name)
  nameWithType: Challenge.ValidForThisSlugcat(SlugcatStats.Name)
  fullName: Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool ValidForThisSlugcat(SlugcatStats.Name slugcat)
    parameters:
    - id: slugcat
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>slugcat</parameter>
            <parameter>M:Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.ValidForThisSlugcat(SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function ValidForThisSlugcat(slugcat As SlugcatStats.Name) As Boolean
  overload: Expedition.Challenge.ValidForThisSlugcat*
- uid: Expedition.Challenge.FromString(System.String)
  commentId: M:Expedition.Challenge.FromString(System.String)
  id: FromString(System.String)
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: FromString(string)
  nameWithType: Challenge.FromString(string)
  fullName: Expedition.Challenge.FromString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.FromString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void FromString(string args)
    parameters:
    - id: args
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>args</parameter>
            <parameter>M:Expedition.Challenge.FromString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub FromString(args As String)
  overload: Expedition.Challenge.FromString*
  nameWithType.vb: Challenge.FromString(String)
  fullName.vb: Expedition.Challenge.FromString(String)
  name.vb: FromString(String)
- uid: Expedition.Challenge.Points
  commentId: M:Expedition.Challenge.Points
  id: Points
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Points()
  nameWithType: Challenge.Points()
  fullName: Expedition.Challenge.Points()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.Points</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual int Points()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.Points</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function Points() As Integer
  overload: Expedition.Challenge.Points*
- uid: Expedition.Challenge.ChallengeName
  commentId: M:Expedition.Challenge.ChallengeName
  id: ChallengeName
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: ChallengeName()
  nameWithType: Challenge.ChallengeName()
  fullName: Expedition.Challenge.ChallengeName()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.ChallengeName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual string ChallengeName()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.ChallengeName</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function ChallengeName() As String
  overload: Expedition.Challenge.ChallengeName*
- uid: Expedition.Challenge.UpdateDescription
  commentId: M:Expedition.Challenge.UpdateDescription
  id: UpdateDescription
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: UpdateDescription()
  nameWithType: Challenge.UpdateDescription()
  fullName: Expedition.Challenge.UpdateDescription()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.UpdateDescription</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void UpdateDescription()
    content.vb: Public Overridable Sub UpdateDescription()
  overload: Expedition.Challenge.UpdateDescription*
- uid: Expedition.Challenge.CompleteChallenge
  commentId: M:Expedition.Challenge.CompleteChallenge
  id: CompleteChallenge
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: CompleteChallenge()
  nameWithType: Challenge.CompleteChallenge()
  fullName: Expedition.Challenge.CompleteChallenge()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.CompleteChallenge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void CompleteChallenge()
    content.vb: Public Overridable Sub CompleteChallenge()
  overload: Expedition.Challenge.CompleteChallenge*
- uid: Expedition.Challenge.Duplicable(Expedition.Challenge)
  commentId: M:Expedition.Challenge.Duplicable(Expedition.Challenge)
  id: Duplicable(Expedition.Challenge)
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Duplicable(Challenge)
  nameWithType: Challenge.Duplicable(Challenge)
  fullName: Expedition.Challenge.Duplicable(Expedition.Challenge)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.Duplicable(Expedition.Challenge)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool Duplicable(Challenge challenge)
    parameters:
    - id: challenge
      type: Expedition.Challenge
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>challenge</parameter>
            <parameter>M:Expedition.Challenge.Duplicable(Expedition.Challenge)</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.Duplicable(Expedition.Challenge)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function Duplicable(challenge As Challenge) As Boolean
  overload: Expedition.Challenge.Duplicable*
- uid: Expedition.Challenge.CombatRequired
  commentId: M:Expedition.Challenge.CombatRequired
  id: CombatRequired
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: CombatRequired()
  nameWithType: Challenge.CombatRequired()
  fullName: Expedition.Challenge.CombatRequired()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.CombatRequired</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool CombatRequired()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.CombatRequired</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function CombatRequired() As Boolean
  overload: Expedition.Challenge.CombatRequired*
- uid: Expedition.Challenge.RespondToCreatureKill
  commentId: M:Expedition.Challenge.RespondToCreatureKill
  id: RespondToCreatureKill
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: RespondToCreatureKill()
  nameWithType: Challenge.RespondToCreatureKill()
  fullName: Expedition.Challenge.RespondToCreatureKill()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.RespondToCreatureKill</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool RespondToCreatureKill()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.RespondToCreatureKill</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function RespondToCreatureKill() As Boolean
  overload: Expedition.Challenge.RespondToCreatureKill*
- uid: Expedition.Challenge.CanBeHidden
  commentId: M:Expedition.Challenge.CanBeHidden
  id: CanBeHidden
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: CanBeHidden()
  nameWithType: Challenge.CanBeHidden()
  fullName: Expedition.Challenge.CanBeHidden()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.CanBeHidden</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual bool CanBeHidden()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.CanBeHidden</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function CanBeHidden() As Boolean
  overload: Expedition.Challenge.CanBeHidden*
- uid: Expedition.Challenge.CreatureKilled(Creature,System.Int32)
  commentId: M:Expedition.Challenge.CreatureKilled(Creature,System.Int32)
  id: CreatureKilled(Creature,System.Int32)
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: CreatureKilled(Creature, int)
  nameWithType: Challenge.CreatureKilled(Creature, int)
  fullName: Expedition.Challenge.CreatureKilled(Creature, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.CreatureKilled(Creature,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void CreatureKilled(Creature crit, int playerNumber)
    parameters:
    - id: crit
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>crit</parameter>
            <parameter>M:Expedition.Challenge.CreatureKilled(Creature,System.Int32)</parameter>
          </include>
        </markup>
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:Expedition.Challenge.CreatureKilled(Creature,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Sub CreatureKilled(crit As Creature, playerNumber As Integer)
  overload: Expedition.Challenge.CreatureKilled*
  nameWithType.vb: Challenge.CreatureKilled(Creature, Integer)
  fullName.vb: Expedition.Challenge.CreatureKilled(Creature, Integer)
  name.vb: CreatureKilled(Creature, Integer)
- uid: Expedition.Challenge.Generate
  commentId: M:Expedition.Challenge.Generate
  id: Generate
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Generate()
  nameWithType: Challenge.Generate()
  fullName: Expedition.Challenge.Generate()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.Generate</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual Challenge Generate()
    return:
      type: Expedition.Challenge
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Expedition.Challenge.Generate</parameter>
          </include>
        </markup>
    content.vb: Public Overridable Function Generate() As Challenge
  overload: Expedition.Challenge.Generate*
- uid: Expedition.Challenge.Reset
  commentId: M:Expedition.Challenge.Reset
  id: Reset
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Challenge.Reset()
  fullName: Expedition.Challenge.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public virtual void Reset()
    content.vb: Public Overridable Sub Reset()
  overload: Expedition.Challenge.Reset*
- uid: Expedition.Challenge.CheckRevealable
  commentId: M:Expedition.Challenge.CheckRevealable
  id: CheckRevealable
  parent: Expedition.Challenge
  langs:
  - csharp
  - vb
  name: CheckRevealable()
  nameWithType: Challenge.CheckRevealable()
  fullName: Expedition.Challenge.CheckRevealable()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Expedition
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Expedition.Challenge.CheckRevealable</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void CheckRevealable()
    content.vb: Public Sub CheckRevealable()
  overload: Expedition.Challenge.CheckRevealable*
references:
- uid: Expedition
  commentId: N:Expedition
  isExternal: true
  href: Expedition.html
  name: Expedition
  nameWithType: Expedition
  fullName: Expedition
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.RainWorldGame
  commentId: T:Global.RainWorldGame
  isExternal: true
  href: RainWorldGame.html
  name: RainWorldGame
  nameWithType: RainWorldGame
  fullName: RainWorldGame
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Expedition.Challenge.#ctor*
  commentId: Overload:Expedition.Challenge.#ctor
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge__ctor
  name: Challenge
  nameWithType: Challenge.Challenge
  fullName: Expedition.Challenge.Challenge
  nameWithType.vb: Challenge.New
  fullName.vb: Expedition.Challenge.New
  name.vb: New
- uid: Expedition.Challenge.Update*
  commentId: Overload:Expedition.Challenge.Update
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_Update
  name: Update
  nameWithType: Challenge.Update
  fullName: Expedition.Challenge.Update
- uid: Expedition.Challenge.ValidForThisSlugcat*
  commentId: Overload:Expedition.Challenge.ValidForThisSlugcat
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_ValidForThisSlugcat_SlugcatStats_Name_
  name: ValidForThisSlugcat
  nameWithType: Challenge.ValidForThisSlugcat
  fullName: Expedition.Challenge.ValidForThisSlugcat
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: Expedition.Challenge.FromString*
  commentId: Overload:Expedition.Challenge.FromString
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_FromString_System_String_
  name: FromString
  nameWithType: Challenge.FromString
  fullName: Expedition.Challenge.FromString
- uid: Expedition.Challenge.Points*
  commentId: Overload:Expedition.Challenge.Points
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_Points
  name: Points
  nameWithType: Challenge.Points
  fullName: Expedition.Challenge.Points
- uid: Expedition.Challenge.ChallengeName*
  commentId: Overload:Expedition.Challenge.ChallengeName
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_ChallengeName
  name: ChallengeName
  nameWithType: Challenge.ChallengeName
  fullName: Expedition.Challenge.ChallengeName
- uid: Expedition.Challenge.UpdateDescription*
  commentId: Overload:Expedition.Challenge.UpdateDescription
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_UpdateDescription
  name: UpdateDescription
  nameWithType: Challenge.UpdateDescription
  fullName: Expedition.Challenge.UpdateDescription
- uid: Expedition.Challenge.CompleteChallenge*
  commentId: Overload:Expedition.Challenge.CompleteChallenge
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_CompleteChallenge
  name: CompleteChallenge
  nameWithType: Challenge.CompleteChallenge
  fullName: Expedition.Challenge.CompleteChallenge
- uid: Expedition.Challenge.Duplicable*
  commentId: Overload:Expedition.Challenge.Duplicable
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_Duplicable_Expedition_Challenge_
  name: Duplicable
  nameWithType: Challenge.Duplicable
  fullName: Expedition.Challenge.Duplicable
- uid: Expedition.Challenge
  commentId: T:Expedition.Challenge
  parent: Expedition
  isExternal: true
  href: Expedition.Challenge.html
  name: Challenge
  nameWithType: Challenge
  fullName: Expedition.Challenge
- uid: Expedition.Challenge.CombatRequired*
  commentId: Overload:Expedition.Challenge.CombatRequired
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_CombatRequired
  name: CombatRequired
  nameWithType: Challenge.CombatRequired
  fullName: Expedition.Challenge.CombatRequired
- uid: Expedition.Challenge.RespondToCreatureKill*
  commentId: Overload:Expedition.Challenge.RespondToCreatureKill
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_RespondToCreatureKill
  name: RespondToCreatureKill
  nameWithType: Challenge.RespondToCreatureKill
  fullName: Expedition.Challenge.RespondToCreatureKill
- uid: Expedition.Challenge.CanBeHidden*
  commentId: Overload:Expedition.Challenge.CanBeHidden
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_CanBeHidden
  name: CanBeHidden
  nameWithType: Challenge.CanBeHidden
  fullName: Expedition.Challenge.CanBeHidden
- uid: Expedition.Challenge.CreatureKilled*
  commentId: Overload:Expedition.Challenge.CreatureKilled
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_CreatureKilled_Creature_System_Int32_
  name: CreatureKilled
  nameWithType: Challenge.CreatureKilled
  fullName: Expedition.Challenge.CreatureKilled
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: Expedition.Challenge.Generate*
  commentId: Overload:Expedition.Challenge.Generate
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_Generate
  name: Generate
  nameWithType: Challenge.Generate
  fullName: Expedition.Challenge.Generate
- uid: Expedition.Challenge.Reset*
  commentId: Overload:Expedition.Challenge.Reset
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_Reset
  name: Reset
  nameWithType: Challenge.Reset
  fullName: Expedition.Challenge.Reset
- uid: Expedition.Challenge.CheckRevealable*
  commentId: Overload:Expedition.Challenge.CheckRevealable
  isExternal: true
  href: Expedition.Challenge.html#Expedition_Challenge_CheckRevealable
  name: CheckRevealable
  nameWithType: Challenge.CheckRevealable
  fullName: Expedition.Challenge.CheckRevealable
