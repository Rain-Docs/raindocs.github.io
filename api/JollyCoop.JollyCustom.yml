### YamlMime:ManagedReference
items:
- uid: JollyCoop.JollyCustom
  commentId: T:JollyCoop.JollyCustom
  id: JollyCustom
  parent: JollyCoop
  children:
  - JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})
  - JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  - JollyCoop.JollyCustom.CreateJollyLog
  - JollyCoop.JollyCustom.ForceActivateWithMSC
  - JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)
  - JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)
  - JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)
  - JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)
  - JollyCoop.JollyCustom.GetPlayerName(System.Int32)
  - JollyCoop.JollyCustom.Log(System.String,System.Boolean)
  - JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)
  - JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)
  - JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)
  - JollyCoop.JollyCustom.Test1
  - JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)
  - JollyCoop.JollyCustom.WriteToLog
  langs:
  - csharp
  - vb
  name: JollyCustom
  nameWithType: JollyCustom
  fullName: JollyCoop.JollyCustom
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:JollyCoop.JollyCustom</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class JollyCustom
    content.vb: Public Module JollyCustom
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: JollyCoop.JollyCustom.CreateJollyLog
  commentId: M:JollyCoop.JollyCustom.CreateJollyLog
  id: CreateJollyLog
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: CreateJollyLog()
  nameWithType: JollyCustom.CreateJollyLog()
  fullName: JollyCoop.JollyCustom.CreateJollyLog()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.CreateJollyLog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void CreateJollyLog()
    content.vb: Public Shared Sub CreateJollyLog()
  overload: JollyCoop.JollyCustom.CreateJollyLog*
- uid: JollyCoop.JollyCustom.Log(System.String,System.Boolean)
  commentId: M:JollyCoop.JollyCustom.Log(System.String,System.Boolean)
  id: Log(System.String,System.Boolean)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: Log(string, bool)
  nameWithType: JollyCustom.Log(string, bool)
  fullName: JollyCoop.JollyCustom.Log(string, bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.Log(System.String,System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void Log(string logText, bool throwException = false)
    parameters:
    - id: logText
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>logText</parameter>
            <parameter>M:JollyCoop.JollyCustom.Log(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    - id: throwException
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>throwException</parameter>
            <parameter>M:JollyCoop.JollyCustom.Log(System.String,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub Log(logText As String, throwException As Boolean = False)
  overload: JollyCoop.JollyCustom.Log*
  nameWithType.vb: JollyCustom.Log(String, Boolean)
  fullName.vb: JollyCoop.JollyCustom.Log(String, Boolean)
  name.vb: Log(String, Boolean)
- uid: JollyCoop.JollyCustom.WriteToLog
  commentId: M:JollyCoop.JollyCustom.WriteToLog
  id: WriteToLog
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: WriteToLog()
  nameWithType: JollyCustom.WriteToLog()
  fullName: JollyCoop.JollyCustom.WriteToLog()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.WriteToLog</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void WriteToLog()
    content.vb: Public Shared Sub WriteToLog()
  overload: JollyCoop.JollyCustom.WriteToLog*
- uid: JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)
  commentId: M:JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)
  id: GenerateComplementaryColor(UnityEngine.Color)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: GenerateComplementaryColor(Color)
  nameWithType: JollyCustom.GenerateComplementaryColor(Color)
  fullName: JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GenerateComplementaryColor(Color colorBase)
    parameters:
    - id: colorBase
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorBase</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GenerateComplementaryColor(colorBase As Color) As Color
  overload: JollyCoop.JollyCustom.GenerateComplementaryColor*
- uid: JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)
  commentId: M:JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)
  id: GenerateComplementaryColor(HSLColor)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: GenerateComplementaryColor(HSLColor)
  nameWithType: JollyCustom.GenerateComplementaryColor(HSLColor)
  fullName: JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GenerateComplementaryColor(HSLColor colorBase)
    parameters:
    - id: colorBase
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorBase</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateComplementaryColor(HSLColor)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GenerateComplementaryColor(colorBase As HSLColor) As Color
  overload: JollyCoop.JollyCustom.GenerateComplementaryColor*
- uid: JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)
  commentId: M:JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)
  id: GenerateClippedInverseColor(UnityEngine.Color)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: GenerateClippedInverseColor(Color)
  nameWithType: JollyCustom.GenerateClippedInverseColor(Color)
  fullName: JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GenerateClippedInverseColor(Color colorBase)
    parameters:
    - id: colorBase
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorBase</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GenerateClippedInverseColor(colorBase As Color) As Color
  overload: JollyCoop.JollyCustom.GenerateClippedInverseColor*
- uid: JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)
  commentId: M:JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)
  id: GenerateClippedInverseColor(HSLColor)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: GenerateClippedInverseColor(HSLColor)
  nameWithType: JollyCustom.GenerateClippedInverseColor(HSLColor)
  fullName: JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GenerateClippedInverseColor(HSLColor colorBase)
    parameters:
    - id: colorBase
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>colorBase</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.GenerateClippedInverseColor(HSLColor)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GenerateClippedInverseColor(colorBase As HSLColor) As Color
  overload: JollyCoop.JollyCustom.GenerateClippedInverseColor*
- uid: JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)
  commentId: M:JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)
  id: RGB2HSL(UnityEngine.Color)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: RGB2HSL(Color)
  nameWithType: JollyCustom.RGB2HSL(Color)
  fullName: JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor RGB2HSL(Color color)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.RGB2HSL(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function RGB2HSL(color As Color) As HSLColor
  overload: JollyCoop.JollyCustom.RGB2HSL*
- uid: JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: ColorClamp(Color, float, float, float, float, float, float)
  nameWithType: JollyCustom.ColorClamp(Color, float, float, float, float, float, float)
  fullName: JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color, float, float, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorClamp(Color color, float hue_min = -1, float hue_max = 360, float sat_min = -1, float sat_max = 360, float lit_min = -1, float lit_max = 360)
    parameters:
    - id: color
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hue_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hue_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lit_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lit_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lit_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lit_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorClamp(color As Color, hue_min As Single = -1, hue_max As Single = 360, sat_min As Single = -1, sat_max As Single = 360, lit_min As Single = -1, lit_max As Single = 360) As Color
  overload: JollyCoop.JollyCustom.ColorClamp*
  nameWithType.vb: JollyCustom.ColorClamp(Color, Single, Single, Single, Single, Single, Single)
  fullName.vb: JollyCoop.JollyCustom.ColorClamp(UnityEngine.Color, Single, Single, Single, Single, Single, Single)
  name.vb: ColorClamp(Color, Single, Single, Single, Single, Single, Single)
- uid: JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  commentId: M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  id: ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: ColorClamp(HSLColor, float, float, float, float, float, float)
  nameWithType: JollyCustom.ColorClamp(HSLColor, float, float, float, float, float, float)
  fullName: JollyCoop.JollyCustom.ColorClamp(HSLColor, float, float, float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static HSLColor ColorClamp(HSLColor color, float hue_min = -1, float hue_max = 360, float sat_min = -1, float sat_max = 360, float lit_min = -1, float lit_max = 360)
    parameters:
    - id: color
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>color</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hue_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: hue_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lit_min
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lit_min</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lit_max
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lit_max</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: Global.HSLColor
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.ColorClamp(HSLColor,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorClamp(color As HSLColor, hue_min As Single = -1, hue_max As Single = 360, sat_min As Single = -1, sat_max As Single = 360, lit_min As Single = -1, lit_max As Single = 360) As HSLColor
  overload: JollyCoop.JollyCustom.ColorClamp*
  nameWithType.vb: JollyCustom.ColorClamp(HSLColor, Single, Single, Single, Single, Single, Single)
  fullName.vb: JollyCoop.JollyCustom.ColorClamp(HSLColor, Single, Single, Single, Single, Single, Single)
  name.vb: ColorClamp(HSLColor, Single, Single, Single, Single, Single, Single)
- uid: JollyCoop.JollyCustom.Test1
  commentId: M:JollyCoop.JollyCustom.Test1
  id: Test1
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: Test1()
  nameWithType: JollyCustom.Test1()
  fullName: JollyCoop.JollyCustom.Test1()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.Test1</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string Test1()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.Test1</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function Test1() As String
  overload: JollyCoop.JollyCustom.Test1*
- uid: JollyCoop.JollyCustom.GetPlayerName(System.Int32)
  commentId: M:JollyCoop.JollyCustom.GetPlayerName(System.Int32)
  id: GetPlayerName(System.Int32)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: GetPlayerName(int)
  nameWithType: JollyCustom.GetPlayerName(int)
  fullName: JollyCoop.JollyCustom.GetPlayerName(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.GetPlayerName(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetPlayerName(int playerNumber)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:JollyCoop.JollyCustom.GetPlayerName(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.GetPlayerName(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetPlayerName(playerNumber As Integer) As String
  overload: JollyCoop.JollyCustom.GetPlayerName*
  nameWithType.vb: JollyCustom.GetPlayerName(Integer)
  fullName.vb: JollyCoop.JollyCustom.GetPlayerName(Integer)
  name.vb: GetPlayerName(Integer)
- uid: JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)
  commentId: M:JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)
  id: SlugClassMenu(System.Int32,SlugcatStats.Name)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: SlugClassMenu(int, Name)
  nameWithType: JollyCustom.SlugClassMenu(int, SlugcatStats.Name)
  fullName: JollyCoop.JollyCustom.SlugClassMenu(int, SlugcatStats.Name)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static SlugcatStats.Name SlugClassMenu(int playerNumber, SlugcatStats.Name fallBack)
    parameters:
    - id: playerNumber
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>playerNumber</parameter>
            <parameter>M:JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    - id: fallBack
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fallBack</parameter>
            <parameter>M:JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    return:
      type: Global.SlugcatStats.Name
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.SlugClassMenu(System.Int32,SlugcatStats.Name)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SlugClassMenu(playerNumber As Integer, fallBack As SlugcatStats.Name) As SlugcatStats.Name
  overload: JollyCoop.JollyCustom.SlugClassMenu*
  nameWithType.vb: JollyCustom.SlugClassMenu(Integer, SlugcatStats.Name)
  fullName.vb: JollyCoop.JollyCustom.SlugClassMenu(Integer, SlugcatStats.Name)
  name.vb: SlugClassMenu(Integer, Name)
- uid: JollyCoop.JollyCustom.ForceActivateWithMSC
  commentId: M:JollyCoop.JollyCustom.ForceActivateWithMSC
  id: ForceActivateWithMSC
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: ForceActivateWithMSC()
  nameWithType: JollyCustom.ForceActivateWithMSC()
  fullName: JollyCoop.JollyCustom.ForceActivateWithMSC()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.ForceActivateWithMSC</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool ForceActivateWithMSC()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:JollyCoop.JollyCustom.ForceActivateWithMSC</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ForceActivateWithMSC() As Boolean
  overload: JollyCoop.JollyCustom.ForceActivateWithMSC*
- uid: JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)
  commentId: M:JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)
  id: WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: WarpAndRevivePlayer(AbstractCreature, AbstractRoom, WorldCoordinate)
  nameWithType: JollyCustom.WarpAndRevivePlayer(AbstractCreature, AbstractRoom, WorldCoordinate)
  fullName: JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature, AbstractRoom, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void WarpAndRevivePlayer(AbstractCreature absPlayer, AbstractRoom newRoom, WorldCoordinate position)
    parameters:
    - id: absPlayer
      type: Global.AbstractCreature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>absPlayer</parameter>
            <parameter>M:JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: newRoom
      type: Global.AbstractRoom
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoom</parameter>
            <parameter>M:JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: position
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>position</parameter>
            <parameter>M:JollyCoop.JollyCustom.WarpAndRevivePlayer(AbstractCreature,AbstractRoom,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub WarpAndRevivePlayer(absPlayer As AbstractCreature, newRoom As AbstractRoom, position As WorldCoordinate)
  overload: JollyCoop.JollyCustom.WarpAndRevivePlayer*
- uid: JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)
  commentId: M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)
  id: MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: MovePlayerWithItems(Player, Room, string, WorldCoordinate)
  nameWithType: JollyCustom.MovePlayerWithItems(Player, Room, string, WorldCoordinate)
  fullName: JollyCoop.JollyCustom.MovePlayerWithItems(Player, Room, string, WorldCoordinate)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void MovePlayerWithItems(Player p, Room currentRoom, string newRoomName, WorldCoordinate position)
    parameters:
    - id: p
      type: Global.Player
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>p</parameter>
            <parameter>M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: currentRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>currentRoom</parameter>
            <parameter>M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: newRoomName
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newRoomName</parameter>
            <parameter>M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    - id: position
      type: Global.WorldCoordinate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>position</parameter>
            <parameter>M:JollyCoop.JollyCustom.MovePlayerWithItems(Player,Room,System.String,WorldCoordinate)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub MovePlayerWithItems(p As Player, currentRoom As Room, newRoomName As String, position As WorldCoordinate)
  overload: JollyCoop.JollyCustom.MovePlayerWithItems*
  nameWithType.vb: JollyCustom.MovePlayerWithItems(Player, Room, String, WorldCoordinate)
  fullName.vb: JollyCoop.JollyCustom.MovePlayerWithItems(Player, Room, String, WorldCoordinate)
  name.vb: MovePlayerWithItems(Player, Room, String, WorldCoordinate)
- uid: JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})
  commentId: M:JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})
  id: CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})
  parent: JollyCoop.JollyCustom
  langs:
  - csharp
  - vb
  name: CallVulture(Room, Vector2, IntVector2?)
  nameWithType: JollyCustom.CallVulture(Room, Vector2, IntVector2?)
  fullName: JollyCoop.JollyCustom.CallVulture(Room, UnityEngine.Vector2, RWCustom.IntVector2?)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: JollyCoop
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void CallVulture(Room room, Vector2 pos, IntVector2? skyPos)
    parameters:
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    - id: skyPos
      type: System.Nullable{RWCustom.IntVector2}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>skyPos</parameter>
            <parameter>M:JollyCoop.JollyCustom.CallVulture(Room,UnityEngine.Vector2,System.Nullable{RWCustom.IntVector2})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub CallVulture(room As Room, pos As Vector2, skyPos As IntVector2?)
  overload: JollyCoop.JollyCustom.CallVulture*
references:
- uid: JollyCoop
  commentId: N:JollyCoop
  isExternal: true
  href: JollyCoop.html
  name: JollyCoop
  nameWithType: JollyCoop
  fullName: JollyCoop
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: JollyCoop.JollyCustom.CreateJollyLog*
  commentId: Overload:JollyCoop.JollyCustom.CreateJollyLog
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_CreateJollyLog
  name: CreateJollyLog
  nameWithType: JollyCustom.CreateJollyLog
  fullName: JollyCoop.JollyCustom.CreateJollyLog
- uid: JollyCoop.JollyCustom.Log*
  commentId: Overload:JollyCoop.JollyCustom.Log
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_Log_System_String_System_Boolean_
  name: Log
  nameWithType: JollyCustom.Log
  fullName: JollyCoop.JollyCustom.Log
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: JollyCoop.JollyCustom.WriteToLog*
  commentId: Overload:JollyCoop.JollyCustom.WriteToLog
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_WriteToLog
  name: WriteToLog
  nameWithType: JollyCustom.WriteToLog
  fullName: JollyCoop.JollyCustom.WriteToLog
- uid: JollyCoop.JollyCustom.GenerateComplementaryColor*
  commentId: Overload:JollyCoop.JollyCustom.GenerateComplementaryColor
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_GenerateComplementaryColor_UnityEngine_Color_
  name: GenerateComplementaryColor
  nameWithType: JollyCustom.GenerateComplementaryColor
  fullName: JollyCoop.JollyCustom.GenerateComplementaryColor
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.HSLColor
  commentId: T:Global.HSLColor
  isExternal: true
  href: HSLColor.html
  name: HSLColor
  nameWithType: HSLColor
  fullName: HSLColor
- uid: JollyCoop.JollyCustom.GenerateClippedInverseColor*
  commentId: Overload:JollyCoop.JollyCustom.GenerateClippedInverseColor
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_GenerateClippedInverseColor_UnityEngine_Color_
  name: GenerateClippedInverseColor
  nameWithType: JollyCustom.GenerateClippedInverseColor
  fullName: JollyCoop.JollyCustom.GenerateClippedInverseColor
- uid: JollyCoop.JollyCustom.RGB2HSL*
  commentId: Overload:JollyCoop.JollyCustom.RGB2HSL
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_RGB2HSL_UnityEngine_Color_
  name: RGB2HSL
  nameWithType: JollyCustom.RGB2HSL
  fullName: JollyCoop.JollyCustom.RGB2HSL
- uid: JollyCoop.JollyCustom.ColorClamp*
  commentId: Overload:JollyCoop.JollyCustom.ColorClamp
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_ColorClamp_UnityEngine_Color_System_Single_System_Single_System_Single_System_Single_System_Single_System_Single_
  name: ColorClamp
  nameWithType: JollyCustom.ColorClamp
  fullName: JollyCoop.JollyCustom.ColorClamp
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: JollyCoop.JollyCustom.Test1*
  commentId: Overload:JollyCoop.JollyCustom.Test1
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_Test1
  name: Test1
  nameWithType: JollyCustom.Test1
  fullName: JollyCoop.JollyCustom.Test1
- uid: JollyCoop.JollyCustom.GetPlayerName*
  commentId: Overload:JollyCoop.JollyCustom.GetPlayerName
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_GetPlayerName_System_Int32_
  name: GetPlayerName
  nameWithType: JollyCustom.GetPlayerName
  fullName: JollyCoop.JollyCustom.GetPlayerName
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: JollyCoop.JollyCustom.SlugClassMenu*
  commentId: Overload:JollyCoop.JollyCustom.SlugClassMenu
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_SlugClassMenu_System_Int32_SlugcatStats_Name_
  name: SlugClassMenu
  nameWithType: JollyCustom.SlugClassMenu
  fullName: JollyCoop.JollyCustom.SlugClassMenu
- uid: Global.SlugcatStats.Name
  commentId: T:Global.SlugcatStats.Name
  isExternal: true
  href: SlugcatStats.html
  name: SlugcatStats.Name
  nameWithType: SlugcatStats.Name
  fullName: SlugcatStats.Name
  spec.csharp:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  spec.vb:
  - uid: Global.SlugcatStats
    name: SlugcatStats
    isExternal: true
    href: SlugcatStats.html
  - name: .
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
- uid: JollyCoop.JollyCustom.ForceActivateWithMSC*
  commentId: Overload:JollyCoop.JollyCustom.ForceActivateWithMSC
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_ForceActivateWithMSC
  name: ForceActivateWithMSC
  nameWithType: JollyCustom.ForceActivateWithMSC
  fullName: JollyCoop.JollyCustom.ForceActivateWithMSC
- uid: JollyCoop.JollyCustom.WarpAndRevivePlayer*
  commentId: Overload:JollyCoop.JollyCustom.WarpAndRevivePlayer
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_WarpAndRevivePlayer_AbstractCreature_AbstractRoom_WorldCoordinate_
  name: WarpAndRevivePlayer
  nameWithType: JollyCustom.WarpAndRevivePlayer
  fullName: JollyCoop.JollyCustom.WarpAndRevivePlayer
- uid: Global.AbstractCreature
  commentId: T:Global.AbstractCreature
  isExternal: true
  href: AbstractCreature.html
  name: AbstractCreature
  nameWithType: AbstractCreature
  fullName: AbstractCreature
- uid: Global.AbstractRoom
  commentId: T:Global.AbstractRoom
  isExternal: true
  href: AbstractRoom.html
  name: AbstractRoom
  nameWithType: AbstractRoom
  fullName: AbstractRoom
- uid: Global.WorldCoordinate
  commentId: T:Global.WorldCoordinate
  isExternal: true
  href: WorldCoordinate.html
  name: WorldCoordinate
  nameWithType: WorldCoordinate
  fullName: WorldCoordinate
- uid: JollyCoop.JollyCustom.MovePlayerWithItems*
  commentId: Overload:JollyCoop.JollyCustom.MovePlayerWithItems
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_MovePlayerWithItems_Player_Room_System_String_WorldCoordinate_
  name: MovePlayerWithItems
  nameWithType: JollyCustom.MovePlayerWithItems
  fullName: JollyCoop.JollyCustom.MovePlayerWithItems
- uid: Global.Player
  commentId: T:Global.Player
  isExternal: true
  href: Player.html
  name: Player
  nameWithType: Player
  fullName: Player
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: JollyCoop.JollyCustom.CallVulture*
  commentId: Overload:JollyCoop.JollyCustom.CallVulture
  isExternal: true
  href: JollyCoop.JollyCustom.html#JollyCoop_JollyCustom_CallVulture_Room_UnityEngine_Vector2_System_Nullable_RWCustom_IntVector2__
  name: CallVulture
  nameWithType: JollyCustom.CallVulture
  fullName: JollyCoop.JollyCustom.CallVulture
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Nullable{RWCustom.IntVector2}
  commentId: T:System.Nullable{RWCustom.IntVector2}
  parent: System
  definition: System.Nullable`1
  href: RWCustom.IntVector2.html
  name: IntVector2?
  nameWithType: IntVector2?
  fullName: RWCustom.IntVector2?
  spec.csharp:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
  spec.vb:
  - uid: RWCustom.IntVector2
    name: IntVector2
    isExternal: true
    href: RWCustom.IntVector2.html
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
