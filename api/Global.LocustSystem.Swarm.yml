### YamlMime:ManagedReference
items:
- uid: Global.LocustSystem.Swarm
  commentId: T:Global.LocustSystem.Swarm
  id: LocustSystem.Swarm
  parent: Global
  children:
  - Global.LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)
  - Global.LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)
  - Global.LocustSystem.Swarm.CurrentRadius
  - Global.LocustSystem.Swarm.Disband
  - Global.LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)
  - Global.LocustSystem.Swarm.Lethal
  - Global.LocustSystem.Swarm.Recruit
  - Global.LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)
  - Global.LocustSystem.Swarm.SwarmProgress
  - Global.LocustSystem.Swarm.TryAttach
  - Global.LocustSystem.Swarm.Update
  - Global.LocustSystem.Swarm.center
  - Global.LocustSystem.Swarm.disbanded
  - Global.LocustSystem.Swarm.locusts
  - Global.LocustSystem.Swarm.target
  langs:
  - csharp
  - vb
  name: LocustSystem.Swarm
  nameWithType: LocustSystem.Swarm
  fullName: LocustSystem.Swarm
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:LocustSystem.Swarm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class LocustSystem.Swarm
    content.vb: Public Class LocustSystem.Swarm
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.LocustSystem.Swarm.locusts
  commentId: F:Global.LocustSystem.Swarm.locusts
  id: locusts
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: locusts
  nameWithType: LocustSystem.Swarm.locusts
  fullName: LocustSystem.Swarm.locusts
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.Swarm.locusts</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<LocustSystem.GroundLocust> locusts
    return:
      type: System.Collections.Generic.List{LocustSystem.GroundLocust}
    content.vb: Public locusts As List(Of LocustSystem.GroundLocust)
- uid: Global.LocustSystem.Swarm.target
  commentId: F:Global.LocustSystem.Swarm.target
  id: target
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: target
  nameWithType: LocustSystem.Swarm.target
  fullName: LocustSystem.Swarm.target
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.Swarm.target</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature target
    return:
      type: Global.Creature
    content.vb: Public target As Creature
- uid: Global.LocustSystem.Swarm.center
  commentId: F:Global.LocustSystem.Swarm.center
  id: center
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: center
  nameWithType: LocustSystem.Swarm.center
  fullName: LocustSystem.Swarm.center
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.Swarm.center</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 center
    return:
      type: UnityEngine.Vector2
    content.vb: Public center As Vector2
- uid: Global.LocustSystem.Swarm.disbanded
  commentId: F:Global.LocustSystem.Swarm.disbanded
  id: disbanded
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: disbanded
  nameWithType: LocustSystem.Swarm.disbanded
  fullName: LocustSystem.Swarm.disbanded
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:LocustSystem.Swarm.disbanded</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool disbanded
    return:
      type: System.Boolean
    content.vb: Public disbanded As Boolean
- uid: Global.LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)
  commentId: M:Global.LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)
  id: '#ctor(LocustSystem,Creature,UnityEngine.Vector2)'
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: Swarm(LocustSystem, Creature, Vector2)
  nameWithType: LocustSystem.Swarm.Swarm(LocustSystem, Creature, Vector2)
  fullName: LocustSystem.Swarm.Swarm(LocustSystem, Creature, UnityEngine.Vector2)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>LocustSystem.Swarm</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Swarm(LocustSystem owner, Creature target, Vector2 pos)
    parameters:
    - id: owner
      type: Global.LocustSystem
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: target
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>target</parameter>
            <parameter>M:LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:LocustSystem.Swarm.#ctor(LocustSystem,Creature,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As LocustSystem, target As Creature, pos As Vector2)
  overload: Global.LocustSystem.Swarm.#ctor*
  nameWithType.vb: LocustSystem.Swarm.New(LocustSystem, Creature, Vector2)
  fullName.vb: LocustSystem.Swarm.New(LocustSystem, Creature, UnityEngine.Vector2)
  name.vb: New(LocustSystem, Creature, Vector2)
- uid: Global.LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)
  commentId: M:Global.LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)
  id: AddLocust(LocustSystem.GroundLocust)
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: AddLocust(GroundLocust)
  nameWithType: LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)
  fullName: LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddLocust(LocustSystem.GroundLocust locust)
    parameters:
    - id: locust
      type: Global.LocustSystem.GroundLocust
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>locust</parameter>
            <parameter>M:LocustSystem.Swarm.AddLocust(LocustSystem.GroundLocust)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddLocust(locust As LocustSystem.GroundLocust)
  overload: Global.LocustSystem.Swarm.AddLocust*
- uid: Global.LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)
  commentId: M:Global.LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)
  id: RemoveLocust(LocustSystem.GroundLocust)
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: RemoveLocust(GroundLocust)
  nameWithType: LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)
  fullName: LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void RemoveLocust(LocustSystem.GroundLocust locust)
    parameters:
    - id: locust
      type: Global.LocustSystem.GroundLocust
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>locust</parameter>
            <parameter>M:LocustSystem.Swarm.RemoveLocust(LocustSystem.GroundLocust)</parameter>
          </include>
        </markup>
    content.vb: Public Sub RemoveLocust(locust As LocustSystem.GroundLocust)
  overload: Global.LocustSystem.Swarm.RemoveLocust*
- uid: Global.LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)
  commentId: M:Global.LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)
  id: HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: HitByWeapon(Weapon, Vector2, Vector2)
  nameWithType: LocustSystem.Swarm.HitByWeapon(Weapon, Vector2, Vector2)
  fullName: LocustSystem.Swarm.HitByWeapon(Weapon, UnityEngine.Vector2, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void HitByWeapon(Weapon weapon, Vector2 pos, Vector2 dir)
    parameters:
    - id: weapon
      type: Global.Weapon
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>weapon</parameter>
            <parameter>M:LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: pos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: dir
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dir</parameter>
            <parameter>M:LocustSystem.Swarm.HitByWeapon(Weapon,UnityEngine.Vector2,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub HitByWeapon(weapon As Weapon, pos As Vector2, dir As Vector2)
  overload: Global.LocustSystem.Swarm.HitByWeapon*
- uid: Global.LocustSystem.Swarm.Update
  commentId: M:Global.LocustSystem.Swarm.Update
  id: Update
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: LocustSystem.Swarm.Update()
  fullName: LocustSystem.Swarm.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.LocustSystem.Swarm.Update*
- uid: Global.LocustSystem.Swarm.TryAttach
  commentId: M:Global.LocustSystem.Swarm.TryAttach
  id: TryAttach
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: TryAttach()
  nameWithType: LocustSystem.Swarm.TryAttach()
  fullName: LocustSystem.Swarm.TryAttach()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.TryAttach</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool TryAttach()
    return:
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:LocustSystem.Swarm.TryAttach</parameter>
          </include>
        </markup>
    content.vb: Public Function TryAttach() As Boolean
  overload: Global.LocustSystem.Swarm.TryAttach*
- uid: Global.LocustSystem.Swarm.Disband
  commentId: M:Global.LocustSystem.Swarm.Disband
  id: Disband
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: Disband()
  nameWithType: LocustSystem.Swarm.Disband()
  fullName: LocustSystem.Swarm.Disband()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.Disband</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Disband()
    content.vb: Public Sub Disband()
  overload: Global.LocustSystem.Swarm.Disband*
- uid: Global.LocustSystem.Swarm.Recruit
  commentId: M:Global.LocustSystem.Swarm.Recruit
  id: Recruit
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: Recruit()
  nameWithType: LocustSystem.Swarm.Recruit()
  fullName: LocustSystem.Swarm.Recruit()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:LocustSystem.Swarm.Recruit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Recruit()
    content.vb: Public Sub Recruit()
  overload: Global.LocustSystem.Swarm.Recruit*
- uid: Global.LocustSystem.Swarm.SwarmProgress
  commentId: P:Global.LocustSystem.Swarm.SwarmProgress
  id: SwarmProgress
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: SwarmProgress
  nameWithType: LocustSystem.Swarm.SwarmProgress
  fullName: LocustSystem.Swarm.SwarmProgress
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LocustSystem.Swarm.SwarmProgress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float SwarmProgress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property SwarmProgress As Single
  overload: Global.LocustSystem.Swarm.SwarmProgress*
- uid: Global.LocustSystem.Swarm.Lethal
  commentId: P:Global.LocustSystem.Swarm.Lethal
  id: Lethal
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: Lethal
  nameWithType: LocustSystem.Swarm.Lethal
  fullName: LocustSystem.Swarm.Lethal
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LocustSystem.Swarm.Lethal</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool Lethal { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property Lethal As Boolean
  overload: Global.LocustSystem.Swarm.Lethal*
- uid: Global.LocustSystem.Swarm.CurrentRadius
  commentId: P:Global.LocustSystem.Swarm.CurrentRadius
  id: CurrentRadius
  parent: Global.LocustSystem.Swarm
  langs:
  - csharp
  - vb
  name: CurrentRadius
  nameWithType: LocustSystem.Swarm.CurrentRadius
  fullName: LocustSystem.Swarm.CurrentRadius
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:LocustSystem.Swarm.CurrentRadius</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CurrentRadius { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property CurrentRadius As Single
  overload: Global.LocustSystem.Swarm.CurrentRadius*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{LocustSystem.GroundLocust}
  commentId: T:System.Collections.Generic.List{LocustSystem.GroundLocust}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<LocustSystem.GroundLocust>
  nameWithType: List<LocustSystem.GroundLocust>
  fullName: System.Collections.Generic.List<LocustSystem.GroundLocust>
  nameWithType.vb: List(Of LocustSystem.GroundLocust)
  fullName.vb: System.Collections.Generic.List(Of LocustSystem.GroundLocust)
  name.vb: List(Of LocustSystem.GroundLocust)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.GroundLocust
    name: GroundLocust
    isExternal: true
    href: LocustSystem.GroundLocust.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.GroundLocust
    name: GroundLocust
    isExternal: true
    href: LocustSystem.GroundLocust.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.LocustSystem.Swarm.#ctor*
  commentId: Overload:Global.LocustSystem.Swarm.#ctor
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm__ctor_LocustSystem_Creature_UnityEngine_Vector2_
  name: Swarm
  nameWithType: LocustSystem.Swarm.Swarm
  fullName: LocustSystem.Swarm.Swarm
  nameWithType.vb: LocustSystem.Swarm.New
  fullName.vb: LocustSystem.Swarm.New
  name.vb: New
- uid: Global.LocustSystem
  commentId: T:Global.LocustSystem
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem
  nameWithType: LocustSystem
  fullName: LocustSystem
- uid: Global.LocustSystem.Swarm.AddLocust*
  commentId: Overload:Global.LocustSystem.Swarm.AddLocust
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_AddLocust_LocustSystem_GroundLocust_
  name: AddLocust
  nameWithType: LocustSystem.Swarm.AddLocust
  fullName: LocustSystem.Swarm.AddLocust
- uid: Global.LocustSystem.GroundLocust
  commentId: T:Global.LocustSystem.GroundLocust
  isExternal: true
  href: LocustSystem.html
  name: LocustSystem.GroundLocust
  nameWithType: LocustSystem.GroundLocust
  fullName: LocustSystem.GroundLocust
  spec.csharp:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.GroundLocust
    name: GroundLocust
    isExternal: true
    href: LocustSystem.GroundLocust.html
  spec.vb:
  - uid: Global.LocustSystem
    name: LocustSystem
    isExternal: true
    href: LocustSystem.html
  - name: .
  - uid: Global.LocustSystem.GroundLocust
    name: GroundLocust
    isExternal: true
    href: LocustSystem.GroundLocust.html
- uid: Global.LocustSystem.Swarm.RemoveLocust*
  commentId: Overload:Global.LocustSystem.Swarm.RemoveLocust
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_RemoveLocust_LocustSystem_GroundLocust_
  name: RemoveLocust
  nameWithType: LocustSystem.Swarm.RemoveLocust
  fullName: LocustSystem.Swarm.RemoveLocust
- uid: Global.LocustSystem.Swarm.HitByWeapon*
  commentId: Overload:Global.LocustSystem.Swarm.HitByWeapon
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_HitByWeapon_Weapon_UnityEngine_Vector2_UnityEngine_Vector2_
  name: HitByWeapon
  nameWithType: LocustSystem.Swarm.HitByWeapon
  fullName: LocustSystem.Swarm.HitByWeapon
- uid: Global.Weapon
  commentId: T:Global.Weapon
  isExternal: true
  href: Weapon.html
  name: Weapon
  nameWithType: Weapon
  fullName: Weapon
- uid: Global.LocustSystem.Swarm.Update*
  commentId: Overload:Global.LocustSystem.Swarm.Update
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_Update
  name: Update
  nameWithType: LocustSystem.Swarm.Update
  fullName: LocustSystem.Swarm.Update
- uid: Global.LocustSystem.Swarm.TryAttach*
  commentId: Overload:Global.LocustSystem.Swarm.TryAttach
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_TryAttach
  name: TryAttach
  nameWithType: LocustSystem.Swarm.TryAttach
  fullName: LocustSystem.Swarm.TryAttach
- uid: Global.LocustSystem.Swarm.Disband*
  commentId: Overload:Global.LocustSystem.Swarm.Disband
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_Disband
  name: Disband
  nameWithType: LocustSystem.Swarm.Disband
  fullName: LocustSystem.Swarm.Disband
- uid: Global.LocustSystem.Swarm.Recruit*
  commentId: Overload:Global.LocustSystem.Swarm.Recruit
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_Recruit
  name: Recruit
  nameWithType: LocustSystem.Swarm.Recruit
  fullName: LocustSystem.Swarm.Recruit
- uid: Global.LocustSystem.Swarm.SwarmProgress*
  commentId: Overload:Global.LocustSystem.Swarm.SwarmProgress
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_SwarmProgress
  name: SwarmProgress
  nameWithType: LocustSystem.Swarm.SwarmProgress
  fullName: LocustSystem.Swarm.SwarmProgress
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.LocustSystem.Swarm.Lethal*
  commentId: Overload:Global.LocustSystem.Swarm.Lethal
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_Lethal
  name: Lethal
  nameWithType: LocustSystem.Swarm.Lethal
  fullName: LocustSystem.Swarm.Lethal
- uid: Global.LocustSystem.Swarm.CurrentRadius*
  commentId: Overload:Global.LocustSystem.Swarm.CurrentRadius
  isExternal: true
  href: Global.LocustSystem.Swarm.html#LocustSystem_Swarm_CurrentRadius
  name: CurrentRadius
  nameWithType: LocustSystem.Swarm.CurrentRadius
  fullName: LocustSystem.Swarm.CurrentRadius
