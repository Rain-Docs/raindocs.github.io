### YamlMime:ManagedReference
items:
- uid: Global.PhysicalObject.IHaveAppendages
  commentId: T:Global.PhysicalObject.IHaveAppendages
  id: PhysicalObject.IHaveAppendages
  parent: Global
  children:
  - Global.PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)
  - Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  langs:
  - csharp
  - vb
  name: PhysicalObject.IHaveAppendages
  nameWithType: PhysicalObject.IHaveAppendages
  fullName: PhysicalObject.IHaveAppendages
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:PhysicalObject.IHaveAppendages</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface PhysicalObject.IHaveAppendages
    content.vb: Public Interface PhysicalObject.IHaveAppendages
- uid: Global.PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)
  commentId: M:Global.PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)
  id: AppendagePosition(System.Int32,System.Int32)
  parent: Global.PhysicalObject.IHaveAppendages
  langs:
  - csharp
  - vb
  name: AppendagePosition(int, int)
  nameWithType: PhysicalObject.IHaveAppendages.AppendagePosition(int, int)
  fullName: PhysicalObject.IHaveAppendages.AppendagePosition(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: Vector2 AppendagePosition(int appendage, int segment)
    parameters:
    - id: appendage
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>appendage</parameter>
            <parameter>M:PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: segment
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>segment</parameter>
            <parameter>M:PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:PhysicalObject.IHaveAppendages.AppendagePosition(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Function AppendagePosition(appendage As Integer, segment As Integer) As Vector2
  overload: Global.PhysicalObject.IHaveAppendages.AppendagePosition*
  nameWithType.vb: PhysicalObject.IHaveAppendages.AppendagePosition(Integer, Integer)
  fullName.vb: PhysicalObject.IHaveAppendages.AppendagePosition(Integer, Integer)
  name.vb: AppendagePosition(Integer, Integer)
- uid: Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  commentId: M:Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  id: ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)
  parent: Global.PhysicalObject.IHaveAppendages
  langs:
  - csharp
  - vb
  name: ApplyForceOnAppendage(Pos, Vector2)
  nameWithType: PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos, Vector2)
  fullName: PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void ApplyForceOnAppendage(PhysicalObject.Appendage.Pos pos, Vector2 momentum)
    parameters:
    - id: pos
      type: Global.PhysicalObject.Appendage.Pos
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>pos</parameter>
            <parameter>M:PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: momentum
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>momentum</parameter>
            <parameter>M:PhysicalObject.IHaveAppendages.ApplyForceOnAppendage(PhysicalObject.Appendage.Pos,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Sub ApplyForceOnAppendage(pos As PhysicalObject.Appendage.Pos, momentum As Vector2)
  overload: Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage*
references:
- uid: Global
- uid: Global.PhysicalObject.IHaveAppendages.AppendagePosition*
  commentId: Overload:Global.PhysicalObject.IHaveAppendages.AppendagePosition
  isExternal: true
  href: Global.PhysicalObject.IHaveAppendages.html#PhysicalObject_IHaveAppendages_AppendagePosition_System_Int32_System_Int32_
  name: AppendagePosition
  nameWithType: PhysicalObject.IHaveAppendages.AppendagePosition
  fullName: PhysicalObject.IHaveAppendages.AppendagePosition
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage*
  commentId: Overload:Global.PhysicalObject.IHaveAppendages.ApplyForceOnAppendage
  isExternal: true
  href: Global.PhysicalObject.IHaveAppendages.html#PhysicalObject_IHaveAppendages_ApplyForceOnAppendage_PhysicalObject_Appendage_Pos_UnityEngine_Vector2_
  name: ApplyForceOnAppendage
  nameWithType: PhysicalObject.IHaveAppendages.ApplyForceOnAppendage
  fullName: PhysicalObject.IHaveAppendages.ApplyForceOnAppendage
- uid: Global.PhysicalObject.Appendage.Pos
  commentId: T:Global.PhysicalObject.Appendage.Pos
  isExternal: true
  href: PhysicalObject.html
  name: PhysicalObject.Appendage.Pos
  nameWithType: PhysicalObject.Appendage.Pos
  fullName: PhysicalObject.Appendage.Pos
  spec.csharp:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
  spec.vb:
  - uid: Global.PhysicalObject
    name: PhysicalObject
    isExternal: true
    href: PhysicalObject.html
  - name: .
  - uid: Global.PhysicalObject.Appendage
    name: Appendage
    isExternal: true
    href: PhysicalObject.Appendage.html
  - name: .
  - uid: Global.PhysicalObject.Appendage.Pos
    name: Pos
    isExternal: true
    href: PhysicalObject.Appendage.Pos.html
