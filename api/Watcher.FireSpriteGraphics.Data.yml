### YamlMime:ManagedReference
items:
- uid: Watcher.FireSpriteGraphics.Data
  commentId: T:Watcher.FireSpriteGraphics.Data
  id: FireSpriteGraphics.Data
  parent: Watcher
  children:
  - Watcher.FireSpriteGraphics.Data.#ctor(Watcher.FireSprite)
  - Watcher.FireSpriteGraphics.Data.Reset
  - Watcher.FireSpriteGraphics.Data.Update
  - Watcher.FireSpriteGraphics.Data.clipped
  - Watcher.FireSpriteGraphics.Data.flyDirection
  - Watcher.FireSpriteGraphics.Data.lastFlyDirection
  - Watcher.FireSpriteGraphics.Data.lastSpeed
  - Watcher.FireSpriteGraphics.Data.lastWingAnimation
  - Watcher.FireSpriteGraphics.Data.lengthSegments
  - Watcher.FireSpriteGraphics.Data.speed
  - Watcher.FireSpriteGraphics.Data.totalSprites
  - Watcher.FireSpriteGraphics.Data.widthSegments
  - Watcher.FireSpriteGraphics.Data.wingAnimation
  - Watcher.FireSpriteGraphics.Data.wingSpin
  - Watcher.FireSpriteGraphics.Data.wings
  - Watcher.FireSpriteGraphics.Data.wingsOpen
  langs:
  - csharp
  - vb
  name: FireSpriteGraphics.Data
  nameWithType: FireSpriteGraphics.Data
  fullName: Watcher.FireSpriteGraphics.Data
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Watcher.FireSpriteGraphics.Data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class FireSpriteGraphics.Data
    content.vb: Public Class FireSpriteGraphics.Data
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Watcher.FireSpriteGraphics.Data.wings
  commentId: F:Watcher.FireSpriteGraphics.Data.wings
  id: wings
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: wings
  nameWithType: FireSpriteGraphics.Data.wings
  fullName: Watcher.FireSpriteGraphics.Data.wings
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.wings</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FireSpriteGraphics.Wing[] wings
    return:
      type: Watcher.FireSpriteGraphics.Wing[]
    content.vb: Public wings As FireSpriteGraphics.Wing()
- uid: Watcher.FireSpriteGraphics.Data.speed
  commentId: F:Watcher.FireSpriteGraphics.Data.speed
  id: speed
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: speed
  nameWithType: FireSpriteGraphics.Data.speed
  fullName: Watcher.FireSpriteGraphics.Data.speed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.speed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float speed
    return:
      type: System.Single
    content.vb: Public speed As Single
- uid: Watcher.FireSpriteGraphics.Data.lastSpeed
  commentId: F:Watcher.FireSpriteGraphics.Data.lastSpeed
  id: lastSpeed
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: lastSpeed
  nameWithType: FireSpriteGraphics.Data.lastSpeed
  fullName: Watcher.FireSpriteGraphics.Data.lastSpeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.lastSpeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastSpeed
    return:
      type: System.Single
    content.vb: Public lastSpeed As Single
- uid: Watcher.FireSpriteGraphics.Data.flyDirection
  commentId: F:Watcher.FireSpriteGraphics.Data.flyDirection
  id: flyDirection
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: flyDirection
  nameWithType: FireSpriteGraphics.Data.flyDirection
  fullName: Watcher.FireSpriteGraphics.Data.flyDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.flyDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float flyDirection
    return:
      type: System.Single
    content.vb: Public flyDirection As Single
- uid: Watcher.FireSpriteGraphics.Data.lastFlyDirection
  commentId: F:Watcher.FireSpriteGraphics.Data.lastFlyDirection
  id: lastFlyDirection
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: lastFlyDirection
  nameWithType: FireSpriteGraphics.Data.lastFlyDirection
  fullName: Watcher.FireSpriteGraphics.Data.lastFlyDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.lastFlyDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastFlyDirection
    return:
      type: System.Single
    content.vb: Public lastFlyDirection As Single
- uid: Watcher.FireSpriteGraphics.Data.lastWingAnimation
  commentId: F:Watcher.FireSpriteGraphics.Data.lastWingAnimation
  id: lastWingAnimation
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: lastWingAnimation
  nameWithType: FireSpriteGraphics.Data.lastWingAnimation
  fullName: Watcher.FireSpriteGraphics.Data.lastWingAnimation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.lastWingAnimation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastWingAnimation
    return:
      type: System.Single
    content.vb: Public lastWingAnimation As Single
- uid: Watcher.FireSpriteGraphics.Data.wingAnimation
  commentId: F:Watcher.FireSpriteGraphics.Data.wingAnimation
  id: wingAnimation
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: wingAnimation
  nameWithType: FireSpriteGraphics.Data.wingAnimation
  fullName: Watcher.FireSpriteGraphics.Data.wingAnimation
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.wingAnimation</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wingAnimation
    return:
      type: System.Single
    content.vb: Public wingAnimation As Single
- uid: Watcher.FireSpriteGraphics.Data.totalSprites
  commentId: F:Watcher.FireSpriteGraphics.Data.totalSprites
  id: totalSprites
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: totalSprites
  nameWithType: FireSpriteGraphics.Data.totalSprites
  fullName: Watcher.FireSpriteGraphics.Data.totalSprites
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.totalSprites</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int totalSprites
    return:
      type: System.Int32
    content.vb: Public totalSprites As Integer
- uid: Watcher.FireSpriteGraphics.Data.widthSegments
  commentId: F:Watcher.FireSpriteGraphics.Data.widthSegments
  id: widthSegments
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: widthSegments
  nameWithType: FireSpriteGraphics.Data.widthSegments
  fullName: Watcher.FireSpriteGraphics.Data.widthSegments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.widthSegments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int widthSegments
    return:
      type: System.Int32
    content.vb: Public widthSegments As Integer
- uid: Watcher.FireSpriteGraphics.Data.lengthSegments
  commentId: F:Watcher.FireSpriteGraphics.Data.lengthSegments
  id: lengthSegments
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: lengthSegments
  nameWithType: FireSpriteGraphics.Data.lengthSegments
  fullName: Watcher.FireSpriteGraphics.Data.lengthSegments
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.lengthSegments</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int lengthSegments
    return:
      type: System.Int32
    content.vb: Public lengthSegments As Integer
- uid: Watcher.FireSpriteGraphics.Data.wingsOpen
  commentId: F:Watcher.FireSpriteGraphics.Data.wingsOpen
  id: wingsOpen
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: wingsOpen
  nameWithType: FireSpriteGraphics.Data.wingsOpen
  fullName: Watcher.FireSpriteGraphics.Data.wingsOpen
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.wingsOpen</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float wingsOpen
    return:
      type: System.Single
    content.vb: Public wingsOpen As Single
- uid: Watcher.FireSpriteGraphics.Data.wingSpin
  commentId: F:Watcher.FireSpriteGraphics.Data.wingSpin
  id: wingSpin
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: wingSpin
  nameWithType: FireSpriteGraphics.Data.wingSpin
  fullName: Watcher.FireSpriteGraphics.Data.wingSpin
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.wingSpin</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wingSpin
    return:
      type: System.Int32
    content.vb: Public wingSpin As Integer
- uid: Watcher.FireSpriteGraphics.Data.clipped
  commentId: F:Watcher.FireSpriteGraphics.Data.clipped
  id: clipped
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: clipped
  nameWithType: FireSpriteGraphics.Data.clipped
  fullName: Watcher.FireSpriteGraphics.Data.clipped
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Watcher.FireSpriteGraphics.Data.clipped</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool clipped
    return:
      type: System.Boolean
    content.vb: Public clipped As Boolean
- uid: Watcher.FireSpriteGraphics.Data.#ctor(Watcher.FireSprite)
  commentId: M:Watcher.FireSpriteGraphics.Data.#ctor(Watcher.FireSprite)
  id: '#ctor(Watcher.FireSprite)'
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: Data(FireSprite)
  nameWithType: FireSpriteGraphics.Data.Data(FireSprite)
  fullName: Watcher.FireSpriteGraphics.Data.Data(Watcher.FireSprite)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Watcher.FireSpriteGraphics.Data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Data(FireSprite owner)
    parameters:
    - id: owner
      type: Watcher.FireSprite
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Watcher.FireSpriteGraphics.Data.#ctor(Watcher.FireSprite)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As FireSprite)
  overload: Watcher.FireSpriteGraphics.Data.#ctor*
  nameWithType.vb: FireSpriteGraphics.Data.New(FireSprite)
  fullName.vb: Watcher.FireSpriteGraphics.Data.New(Watcher.FireSprite)
  name.vb: New(FireSprite)
- uid: Watcher.FireSpriteGraphics.Data.Update
  commentId: M:Watcher.FireSpriteGraphics.Data.Update
  id: Update
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: FireSpriteGraphics.Data.Update()
  fullName: Watcher.FireSpriteGraphics.Data.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Data.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Watcher.FireSpriteGraphics.Data.Update*
- uid: Watcher.FireSpriteGraphics.Data.Reset
  commentId: M:Watcher.FireSpriteGraphics.Data.Reset
  id: Reset
  parent: Watcher.FireSpriteGraphics.Data
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: FireSpriteGraphics.Data.Reset()
  fullName: Watcher.FireSpriteGraphics.Data.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Watcher
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Watcher.FireSpriteGraphics.Data.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Watcher.FireSpriteGraphics.Data.Reset*
references:
- uid: Watcher
  commentId: N:Watcher
  isExternal: true
  href: Watcher.html
  name: Watcher
  nameWithType: Watcher
  fullName: Watcher
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Watcher.FireSpriteGraphics.Wing[]
  isExternal: true
  href: Watcher.FireSpriteGraphics.Wing.html
  name: Wing[]
  nameWithType: FireSpriteGraphics.Wing[]
  fullName: Watcher.FireSpriteGraphics.Wing[]
  nameWithType.vb: FireSpriteGraphics.Wing()
  fullName.vb: Watcher.FireSpriteGraphics.Wing()
  name.vb: Wing()
  spec.csharp:
  - uid: Watcher.FireSpriteGraphics.Wing
    name: Wing
    isExternal: true
    href: Watcher.FireSpriteGraphics.Wing.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Watcher.FireSpriteGraphics.Wing
    name: Wing
    isExternal: true
    href: Watcher.FireSpriteGraphics.Wing.html
  - name: (
  - name: )
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Watcher.FireSpriteGraphics.Data.#ctor*
  commentId: Overload:Watcher.FireSpriteGraphics.Data.#ctor
  isExternal: true
  href: Watcher.FireSpriteGraphics.Data.html#Watcher_FireSpriteGraphics_Data__ctor_Watcher_FireSprite_
  name: Data
  nameWithType: FireSpriteGraphics.Data.Data
  fullName: Watcher.FireSpriteGraphics.Data.Data
  nameWithType.vb: FireSpriteGraphics.Data.New
  fullName.vb: Watcher.FireSpriteGraphics.Data.New
  name.vb: New
- uid: Watcher.FireSprite
  commentId: T:Watcher.FireSprite
  parent: Watcher
  isExternal: true
  href: Watcher.FireSprite.html
  name: FireSprite
  nameWithType: FireSprite
  fullName: Watcher.FireSprite
- uid: Watcher.FireSpriteGraphics.Data.Update*
  commentId: Overload:Watcher.FireSpriteGraphics.Data.Update
  isExternal: true
  href: Watcher.FireSpriteGraphics.Data.html#Watcher_FireSpriteGraphics_Data_Update
  name: Update
  nameWithType: FireSpriteGraphics.Data.Update
  fullName: Watcher.FireSpriteGraphics.Data.Update
- uid: Watcher.FireSpriteGraphics.Data.Reset*
  commentId: Overload:Watcher.FireSpriteGraphics.Data.Reset
  isExternal: true
  href: Watcher.FireSpriteGraphics.Data.html#Watcher_FireSpriteGraphics_Data_Reset
  name: Reset
  nameWithType: FireSpriteGraphics.Data.Reset
  fullName: Watcher.FireSpriteGraphics.Data.Reset
