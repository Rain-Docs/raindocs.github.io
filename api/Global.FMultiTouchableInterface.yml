### YamlMime:ManagedReference
items:
- uid: Global.FMultiTouchableInterface
  commentId: T:Global.FMultiTouchableInterface
  id: FMultiTouchableInterface
  parent: Global
  children:
  - Global.FMultiTouchableInterface.HandleMultiTouch(FTouch[])
  langs:
  - csharp
  - vb
  name: FMultiTouchableInterface
  nameWithType: FMultiTouchableInterface
  fullName: FMultiTouchableInterface
  type: Interface
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:FMultiTouchableInterface</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public interface FMultiTouchableInterface
    content.vb: Public Interface FMultiTouchableInterface
- uid: Global.FMultiTouchableInterface.HandleMultiTouch(FTouch[])
  commentId: M:Global.FMultiTouchableInterface.HandleMultiTouch(FTouch[])
  id: HandleMultiTouch(FTouch[])
  parent: Global.FMultiTouchableInterface
  langs:
  - csharp
  - vb
  name: HandleMultiTouch(FTouch[])
  nameWithType: FMultiTouchableInterface.HandleMultiTouch(FTouch[])
  fullName: FMultiTouchableInterface.HandleMultiTouch(FTouch[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:FMultiTouchableInterface.HandleMultiTouch(FTouch[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: void HandleMultiTouch(FTouch[] touches)
    parameters:
    - id: touches
      type: Global.FTouch[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>touches</parameter>
            <parameter>M:FMultiTouchableInterface.HandleMultiTouch(FTouch[])</parameter>
          </include>
        </markup>
    content.vb: Sub HandleMultiTouch(touches As FTouch())
  overload: Global.FMultiTouchableInterface.HandleMultiTouch*
  nameWithType.vb: FMultiTouchableInterface.HandleMultiTouch(FTouch())
  fullName.vb: FMultiTouchableInterface.HandleMultiTouch(FTouch())
  name.vb: HandleMultiTouch(FTouch())
references:
- uid: Global
- uid: Global.FMultiTouchableInterface.HandleMultiTouch*
  commentId: Overload:Global.FMultiTouchableInterface.HandleMultiTouch
  isExternal: true
  href: Global.FMultiTouchableInterface.html#FMultiTouchableInterface_HandleMultiTouch_FTouch___
  name: HandleMultiTouch
  nameWithType: FMultiTouchableInterface.HandleMultiTouch
  fullName: FMultiTouchableInterface.HandleMultiTouch
- uid: Global.FTouch[]
  isExternal: true
  href: FTouch.html
  name: FTouch[]
  nameWithType: FTouch[]
  fullName: FTouch[]
  nameWithType.vb: FTouch()
  fullName.vb: FTouch()
  name.vb: FTouch()
  spec.csharp:
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.FTouch
    name: FTouch
    isExternal: true
    href: FTouch.html
  - name: (
  - name: )
