### YamlMime:ManagedReference
items:
- uid: Global.ArenaSetup
  commentId: T:Global.ArenaSetup
  id: ArenaSetup
  parent: Global
  children:
  - Global.ArenaSetup.#ctor(ProcessManager)
  - Global.ArenaSetup.ARENA_SETUP_KEY
  - Global.ArenaSetup.CycleGameType(System.Int32)
  - Global.ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  - Global.ArenaSetup.LoadFromFile
  - Global.ArenaSetup.SaveToFile
  - Global.ArenaSetup.currentGameType
  - Global.ArenaSetup.gametypeSetups
  - Global.ArenaSetup.playerClass
  - Global.ArenaSetup.playersJoined
  - Global.ArenaSetup.scrolledToShowNewLevels
  langs:
  - csharp
  - vb
  name: ArenaSetup
  nameWithType: ArenaSetup
  fullName: ArenaSetup
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ArenaSetup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class ArenaSetup
    content.vb: Public Class ArenaSetup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.ArenaSetup.ARENA_SETUP_KEY
  commentId: F:Global.ArenaSetup.ARENA_SETUP_KEY
  id: ARENA_SETUP_KEY
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: ARENA_SETUP_KEY
  nameWithType: ArenaSetup.ARENA_SETUP_KEY
  fullName: ArenaSetup.ARENA_SETUP_KEY
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.ARENA_SETUP_KEY</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public const string ARENA_SETUP_KEY = "ArenaSetup"
    return:
      type: System.String
    content.vb: Public Const ARENA_SETUP_KEY As String = "ArenaSetup"
- uid: Global.ArenaSetup.gametypeSetups
  commentId: F:Global.ArenaSetup.gametypeSetups
  id: gametypeSetups
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: gametypeSetups
  nameWithType: ArenaSetup.gametypeSetups
  fullName: ArenaSetup.gametypeSetups
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.gametypeSetups</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ArenaSetup.GameTypeSetup> gametypeSetups
    return:
      type: System.Collections.Generic.List{ArenaSetup.GameTypeSetup}
    content.vb: Public gametypeSetups As List(Of ArenaSetup.GameTypeSetup)
- uid: Global.ArenaSetup.currentGameType
  commentId: F:Global.ArenaSetup.currentGameType
  id: currentGameType
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: currentGameType
  nameWithType: ArenaSetup.currentGameType
  fullName: ArenaSetup.currentGameType
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.currentGameType</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSetup.GameTypeID currentGameType
    return:
      type: Global.ArenaSetup.GameTypeID
    content.vb: Public currentGameType As ArenaSetup.GameTypeID
- uid: Global.ArenaSetup.playersJoined
  commentId: F:Global.ArenaSetup.playersJoined
  id: playersJoined
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: playersJoined
  nameWithType: ArenaSetup.playersJoined
  fullName: ArenaSetup.playersJoined
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.playersJoined</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] playersJoined
    return:
      type: System.Boolean[]
    content.vb: Public playersJoined As Boolean()
- uid: Global.ArenaSetup.scrolledToShowNewLevels
  commentId: F:Global.ArenaSetup.scrolledToShowNewLevels
  id: scrolledToShowNewLevels
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: scrolledToShowNewLevels
  nameWithType: ArenaSetup.scrolledToShowNewLevels
  fullName: ArenaSetup.scrolledToShowNewLevels
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.scrolledToShowNewLevels</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool[] scrolledToShowNewLevels
    return:
      type: System.Boolean[]
    content.vb: Public scrolledToShowNewLevels As Boolean()
- uid: Global.ArenaSetup.playerClass
  commentId: F:Global.ArenaSetup.playerClass
  id: playerClass
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: playerClass
  nameWithType: ArenaSetup.playerClass
  fullName: ArenaSetup.playerClass
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ArenaSetup.playerClass</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SlugcatStats.Name[] playerClass
    return:
      type: Global.SlugcatStats.Name[]
    content.vb: Public playerClass As SlugcatStats.Name()
- uid: Global.ArenaSetup.#ctor(ProcessManager)
  commentId: M:Global.ArenaSetup.#ctor(ProcessManager)
  id: '#ctor(ProcessManager)'
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: ArenaSetup(ProcessManager)
  nameWithType: ArenaSetup.ArenaSetup(ProcessManager)
  fullName: ArenaSetup.ArenaSetup(ProcessManager)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ArenaSetup</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSetup(ProcessManager manager)
    parameters:
    - id: manager
      type: Global.ProcessManager
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>manager</parameter>
            <parameter>M:ArenaSetup.#ctor(ProcessManager)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(manager As ProcessManager)
  overload: Global.ArenaSetup.#ctor*
  nameWithType.vb: ArenaSetup.New(ProcessManager)
  fullName.vb: ArenaSetup.New(ProcessManager)
  name.vb: New(ProcessManager)
- uid: Global.ArenaSetup.CycleGameType(System.Int32)
  commentId: M:Global.ArenaSetup.CycleGameType(System.Int32)
  id: CycleGameType(System.Int32)
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: CycleGameType(int)
  nameWithType: ArenaSetup.CycleGameType(int)
  fullName: ArenaSetup.CycleGameType(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSetup.CycleGameType(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSetup.GameTypeID CycleGameType(int dir)
    parameters:
    - id: dir
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>dir</parameter>
            <parameter>M:ArenaSetup.CycleGameType(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: Global.ArenaSetup.GameTypeID
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaSetup.CycleGameType(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function CycleGameType(dir As Integer) As ArenaSetup.GameTypeID
  overload: Global.ArenaSetup.CycleGameType*
  nameWithType.vb: ArenaSetup.CycleGameType(Integer)
  fullName.vb: ArenaSetup.CycleGameType(Integer)
  name.vb: CycleGameType(Integer)
- uid: Global.ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  commentId: M:Global.ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  id: GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: GetOrInitiateGameTypeSetup(GameTypeID)
  nameWithType: ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  fullName: ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public ArenaSetup.GameTypeSetup GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID gameType)
    parameters:
    - id: gameType
      type: Global.ArenaSetup.GameTypeID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>gameType</parameter>
            <parameter>M:ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)</parameter>
          </include>
        </markup>
    return:
      type: Global.ArenaSetup.GameTypeSetup
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:ArenaSetup.GetOrInitiateGameTypeSetup(ArenaSetup.GameTypeID)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetOrInitiateGameTypeSetup(gameType As ArenaSetup.GameTypeID) As ArenaSetup.GameTypeSetup
  overload: Global.ArenaSetup.GetOrInitiateGameTypeSetup*
- uid: Global.ArenaSetup.SaveToFile
  commentId: M:Global.ArenaSetup.SaveToFile
  id: SaveToFile
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: SaveToFile()
  nameWithType: ArenaSetup.SaveToFile()
  fullName: ArenaSetup.SaveToFile()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSetup.SaveToFile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void SaveToFile()
    content.vb: Public Sub SaveToFile()
  overload: Global.ArenaSetup.SaveToFile*
- uid: Global.ArenaSetup.LoadFromFile
  commentId: M:Global.ArenaSetup.LoadFromFile
  id: LoadFromFile
  parent: Global.ArenaSetup
  langs:
  - csharp
  - vb
  name: LoadFromFile()
  nameWithType: ArenaSetup.LoadFromFile()
  fullName: ArenaSetup.LoadFromFile()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:ArenaSetup.LoadFromFile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void LoadFromFile()
    content.vb: Public Sub LoadFromFile()
  overload: Global.ArenaSetup.LoadFromFile*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{ArenaSetup.GameTypeSetup}
  commentId: T:System.Collections.Generic.List{ArenaSetup.GameTypeSetup}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ArenaSetup.GameTypeSetup>
  nameWithType: List<ArenaSetup.GameTypeSetup>
  fullName: System.Collections.Generic.List<ArenaSetup.GameTypeSetup>
  nameWithType.vb: List(Of ArenaSetup.GameTypeSetup)
  fullName.vb: System.Collections.Generic.List(Of ArenaSetup.GameTypeSetup)
  name.vb: List(Of ArenaSetup.GameTypeSetup)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.ArenaSetup.GameTypeID
  commentId: T:Global.ArenaSetup.GameTypeID
  isExternal: true
  href: ArenaSetup.html
  name: ArenaSetup.GameTypeID
  nameWithType: ArenaSetup.GameTypeID
  fullName: ArenaSetup.GameTypeID
  spec.csharp:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeID
    name: GameTypeID
    isExternal: true
    href: ArenaSetup.GameTypeID.html
  spec.vb:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeID
    name: GameTypeID
    isExternal: true
    href: ArenaSetup.GameTypeID.html
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Global.SlugcatStats.Name[]
  isExternal: true
  href: SlugcatStats.Name.html
  name: Name[]
  nameWithType: SlugcatStats.Name[]
  fullName: SlugcatStats.Name[]
  nameWithType.vb: SlugcatStats.Name()
  fullName.vb: SlugcatStats.Name()
  name.vb: Name()
  spec.csharp:
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: Global.SlugcatStats.Name
    name: Name
    isExternal: true
    href: SlugcatStats.Name.html
  - name: (
  - name: )
- uid: Global.ArenaSetup.#ctor*
  commentId: Overload:Global.ArenaSetup.#ctor
  isExternal: true
  href: Global.ArenaSetup.html#ArenaSetup__ctor_ProcessManager_
  name: ArenaSetup
  nameWithType: ArenaSetup.ArenaSetup
  fullName: ArenaSetup.ArenaSetup
  nameWithType.vb: ArenaSetup.New
  fullName.vb: ArenaSetup.New
  name.vb: New
- uid: Global.ProcessManager
  commentId: T:Global.ProcessManager
  isExternal: true
  href: ProcessManager.html
  name: ProcessManager
  nameWithType: ProcessManager
  fullName: ProcessManager
- uid: Global.ArenaSetup.CycleGameType*
  commentId: Overload:Global.ArenaSetup.CycleGameType
  isExternal: true
  href: Global.ArenaSetup.html#ArenaSetup_CycleGameType_System_Int32_
  name: CycleGameType
  nameWithType: ArenaSetup.CycleGameType
  fullName: ArenaSetup.CycleGameType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.ArenaSetup.GetOrInitiateGameTypeSetup*
  commentId: Overload:Global.ArenaSetup.GetOrInitiateGameTypeSetup
  isExternal: true
  href: Global.ArenaSetup.html#ArenaSetup_GetOrInitiateGameTypeSetup_ArenaSetup_GameTypeID_
  name: GetOrInitiateGameTypeSetup
  nameWithType: ArenaSetup.GetOrInitiateGameTypeSetup
  fullName: ArenaSetup.GetOrInitiateGameTypeSetup
- uid: Global.ArenaSetup.GameTypeSetup
  commentId: T:Global.ArenaSetup.GameTypeSetup
  isExternal: true
  href: ArenaSetup.html
  name: ArenaSetup.GameTypeSetup
  nameWithType: ArenaSetup.GameTypeSetup
  fullName: ArenaSetup.GameTypeSetup
  spec.csharp:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
  spec.vb:
  - uid: Global.ArenaSetup
    name: ArenaSetup
    isExternal: true
    href: ArenaSetup.html
  - name: .
  - uid: Global.ArenaSetup.GameTypeSetup
    name: GameTypeSetup
    isExternal: true
    href: ArenaSetup.GameTypeSetup.html
- uid: Global.ArenaSetup.SaveToFile*
  commentId: Overload:Global.ArenaSetup.SaveToFile
  isExternal: true
  href: Global.ArenaSetup.html#ArenaSetup_SaveToFile
  name: SaveToFile
  nameWithType: ArenaSetup.SaveToFile
  fullName: ArenaSetup.SaveToFile
- uid: Global.ArenaSetup.LoadFromFile*
  commentId: Overload:Global.ArenaSetup.LoadFromFile
  isExternal: true
  href: Global.ArenaSetup.html#ArenaSetup_LoadFromFile
  name: LoadFromFile
  nameWithType: ArenaSetup.LoadFromFile
  fullName: ArenaSetup.LoadFromFile
