### YamlMime:ManagedReference
items:
- uid: Global.Lightning.LightningSource
  commentId: T:Global.Lightning.LightningSource
  id: Lightning.LightningSource
  parent: Global
  children:
  - Global.Lightning.LightningSource.#ctor(Lightning,System.Boolean)
  - Global.Lightning.LightningSource.LightIntensity(System.Single)
  - Global.Lightning.LightningSource.Reset
  - Global.Lightning.LightningSource.Update
  - Global.Lightning.LightningSource.distance
  - Global.Lightning.LightningSource.frontLightningShowInBkg
  - Global.Lightning.LightningSource.intensity
  - Global.Lightning.LightningSource.lastIntensity
  - Global.Lightning.LightningSource.owner
  - Global.Lightning.LightningSource.pan
  - Global.Lightning.LightningSource.power
  - Global.Lightning.LightningSource.randomLevel
  - Global.Lightning.LightningSource.randomLevelChange
  - Global.Lightning.LightningSource.soundLoop
  - Global.Lightning.LightningSource.tF
  - Global.Lightning.LightningSource.thunder
  - Global.Lightning.LightningSource.thunderLength
  - Global.Lightning.LightningSource.wait
  langs:
  - csharp
  - vb
  name: Lightning.LightningSource
  nameWithType: Lightning.LightningSource
  fullName: Lightning.LightningSource
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Lightning.LightningSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Lightning.LightningSource
    content.vb: Public Class Lightning.LightningSource
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Lightning.LightningSource.owner
  commentId: F:Global.Lightning.LightningSource.owner
  id: owner
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: owner
  nameWithType: Lightning.LightningSource.owner
  fullName: Lightning.LightningSource.owner
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.owner</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Lightning owner
    return:
      type: Global.Lightning
    content.vb: Public owner As Lightning
- uid: Global.Lightning.LightningSource.wait
  commentId: F:Global.Lightning.LightningSource.wait
  id: wait
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: wait
  nameWithType: Lightning.LightningSource.wait
  fullName: Lightning.LightningSource.wait
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.wait</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int wait
    return:
      type: System.Int32
    content.vb: Public wait As Integer
- uid: Global.Lightning.LightningSource.thunder
  commentId: F:Global.Lightning.LightningSource.thunder
  id: thunder
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: thunder
  nameWithType: Lightning.LightningSource.thunder
  fullName: Lightning.LightningSource.thunder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.thunder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int thunder
    return:
      type: System.Int32
    content.vb: Public thunder As Integer
- uid: Global.Lightning.LightningSource.thunderLength
  commentId: F:Global.Lightning.LightningSource.thunderLength
  id: thunderLength
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: thunderLength
  nameWithType: Lightning.LightningSource.thunderLength
  fullName: Lightning.LightningSource.thunderLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.thunderLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int thunderLength
    return:
      type: System.Int32
    content.vb: Public thunderLength As Integer
- uid: Global.Lightning.LightningSource.randomLevel
  commentId: F:Global.Lightning.LightningSource.randomLevel
  id: randomLevel
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: randomLevel
  nameWithType: Lightning.LightningSource.randomLevel
  fullName: Lightning.LightningSource.randomLevel
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.randomLevel</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float randomLevel
    return:
      type: System.Single
    content.vb: Public randomLevel As Single
- uid: Global.Lightning.LightningSource.randomLevelChange
  commentId: F:Global.Lightning.LightningSource.randomLevelChange
  id: randomLevelChange
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: randomLevelChange
  nameWithType: Lightning.LightningSource.randomLevelChange
  fullName: Lightning.LightningSource.randomLevelChange
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.randomLevelChange</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int randomLevelChange
    return:
      type: System.Int32
    content.vb: Public randomLevelChange As Integer
- uid: Global.Lightning.LightningSource.frontLightningShowInBkg
  commentId: F:Global.Lightning.LightningSource.frontLightningShowInBkg
  id: frontLightningShowInBkg
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: frontLightningShowInBkg
  nameWithType: Lightning.LightningSource.frontLightningShowInBkg
  fullName: Lightning.LightningSource.frontLightningShowInBkg
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.frontLightningShowInBkg</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool frontLightningShowInBkg
    return:
      type: System.Boolean
    content.vb: Public frontLightningShowInBkg As Boolean
- uid: Global.Lightning.LightningSource.lastIntensity
  commentId: F:Global.Lightning.LightningSource.lastIntensity
  id: lastIntensity
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: lastIntensity
  nameWithType: Lightning.LightningSource.lastIntensity
  fullName: Lightning.LightningSource.lastIntensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.lastIntensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float lastIntensity
    return:
      type: System.Single
    content.vb: Public lastIntensity As Single
- uid: Global.Lightning.LightningSource.intensity
  commentId: F:Global.Lightning.LightningSource.intensity
  id: intensity
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: intensity
  nameWithType: Lightning.LightningSource.intensity
  fullName: Lightning.LightningSource.intensity
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.intensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float intensity
    return:
      type: System.Single
    content.vb: Public intensity As Single
- uid: Global.Lightning.LightningSource.distance
  commentId: F:Global.Lightning.LightningSource.distance
  id: distance
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: distance
  nameWithType: Lightning.LightningSource.distance
  fullName: Lightning.LightningSource.distance
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.distance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float distance
    return:
      type: System.Single
    content.vb: Public distance As Single
- uid: Global.Lightning.LightningSource.pan
  commentId: F:Global.Lightning.LightningSource.pan
  id: pan
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: pan
  nameWithType: Lightning.LightningSource.pan
  fullName: Lightning.LightningSource.pan
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.pan</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float pan
    return:
      type: System.Single
    content.vb: Public pan As Single
- uid: Global.Lightning.LightningSource.power
  commentId: F:Global.Lightning.LightningSource.power
  id: power
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: power
  nameWithType: Lightning.LightningSource.power
  fullName: Lightning.LightningSource.power
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.power</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float power
    return:
      type: System.Single
    content.vb: Public power As Single
- uid: Global.Lightning.LightningSource.soundLoop
  commentId: F:Global.Lightning.LightningSource.soundLoop
  id: soundLoop
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: soundLoop
  nameWithType: Lightning.LightningSource.soundLoop
  fullName: Lightning.LightningSource.soundLoop
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Lightning.LightningSource.soundLoop</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public DisembodiedDynamicSoundLoop soundLoop
    return:
      type: Global.DisembodiedDynamicSoundLoop
    content.vb: Public soundLoop As DisembodiedDynamicSoundLoop
- uid: Global.Lightning.LightningSource.#ctor(Lightning,System.Boolean)
  commentId: M:Global.Lightning.LightningSource.#ctor(Lightning,System.Boolean)
  id: '#ctor(Lightning,System.Boolean)'
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: LightningSource(Lightning, bool)
  nameWithType: Lightning.LightningSource.LightningSource(Lightning, bool)
  fullName: Lightning.LightningSource.LightningSource(Lightning, bool)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Lightning.LightningSource</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LightningSource(Lightning owner, bool isBkg)
    parameters:
    - id: owner
      type: Global.Lightning
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>owner</parameter>
            <parameter>M:Lightning.LightningSource.#ctor(Lightning,System.Boolean)</parameter>
          </include>
        </markup>
    - id: isBkg
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isBkg</parameter>
            <parameter>M:Lightning.LightningSource.#ctor(Lightning,System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(owner As Lightning, isBkg As Boolean)
  overload: Global.Lightning.LightningSource.#ctor*
  nameWithType.vb: Lightning.LightningSource.New(Lightning, Boolean)
  fullName.vb: Lightning.LightningSource.New(Lightning, Boolean)
  name.vb: New(Lightning, Boolean)
- uid: Global.Lightning.LightningSource.Reset
  commentId: M:Global.Lightning.LightningSource.Reset
  id: Reset
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: Reset()
  nameWithType: Lightning.LightningSource.Reset()
  fullName: Lightning.LightningSource.Reset()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Lightning.LightningSource.Reset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset()
  overload: Global.Lightning.LightningSource.Reset*
- uid: Global.Lightning.LightningSource.Update
  commentId: M:Global.Lightning.LightningSource.Update
  id: Update
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: Lightning.LightningSource.Update()
  fullName: Lightning.LightningSource.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Lightning.LightningSource.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.Lightning.LightningSource.Update*
- uid: Global.Lightning.LightningSource.LightIntensity(System.Single)
  commentId: M:Global.Lightning.LightningSource.LightIntensity(System.Single)
  id: LightIntensity(System.Single)
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: LightIntensity(float)
  nameWithType: Lightning.LightningSource.LightIntensity(float)
  fullName: Lightning.LightningSource.LightIntensity(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Lightning.LightningSource.LightIntensity(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float LightIntensity(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Lightning.LightningSource.LightIntensity(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Lightning.LightningSource.LightIntensity(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function LightIntensity(timeStacker As Single) As Single
  overload: Global.Lightning.LightningSource.LightIntensity*
  nameWithType.vb: Lightning.LightningSource.LightIntensity(Single)
  fullName.vb: Lightning.LightningSource.LightIntensity(Single)
  name.vb: LightIntensity(Single)
- uid: Global.Lightning.LightningSource.tF
  commentId: P:Global.Lightning.LightningSource.tF
  id: tF
  parent: Global.Lightning.LightningSource
  langs:
  - csharp
  - vb
  name: tF
  nameWithType: Lightning.LightningSource.tF
  fullName: Lightning.LightningSource.tF
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Lightning.LightningSource.tF</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float tF { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property tF As Single
  overload: Global.Lightning.LightningSource.tF*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Lightning
  commentId: T:Global.Lightning
  isExternal: true
  href: Lightning.html
  name: Lightning
  nameWithType: Lightning
  fullName: Lightning
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.DisembodiedDynamicSoundLoop
  commentId: T:Global.DisembodiedDynamicSoundLoop
  isExternal: true
  href: DisembodiedDynamicSoundLoop.html
  name: DisembodiedDynamicSoundLoop
  nameWithType: DisembodiedDynamicSoundLoop
  fullName: DisembodiedDynamicSoundLoop
- uid: Global.Lightning.LightningSource.#ctor*
  commentId: Overload:Global.Lightning.LightningSource.#ctor
  isExternal: true
  href: Global.Lightning.LightningSource.html#Lightning_LightningSource__ctor_Lightning_System_Boolean_
  name: LightningSource
  nameWithType: Lightning.LightningSource.LightningSource
  fullName: Lightning.LightningSource.LightningSource
  nameWithType.vb: Lightning.LightningSource.New
  fullName.vb: Lightning.LightningSource.New
  name.vb: New
- uid: Global.Lightning.LightningSource.Reset*
  commentId: Overload:Global.Lightning.LightningSource.Reset
  isExternal: true
  href: Global.Lightning.LightningSource.html#Lightning_LightningSource_Reset
  name: Reset
  nameWithType: Lightning.LightningSource.Reset
  fullName: Lightning.LightningSource.Reset
- uid: Global.Lightning.LightningSource.Update*
  commentId: Overload:Global.Lightning.LightningSource.Update
  isExternal: true
  href: Global.Lightning.LightningSource.html#Lightning_LightningSource_Update
  name: Update
  nameWithType: Lightning.LightningSource.Update
  fullName: Lightning.LightningSource.Update
- uid: Global.Lightning.LightningSource.LightIntensity*
  commentId: Overload:Global.Lightning.LightningSource.LightIntensity
  isExternal: true
  href: Global.Lightning.LightningSource.html#Lightning_LightningSource_LightIntensity_System_Single_
  name: LightIntensity
  nameWithType: Lightning.LightningSource.LightIntensity
  fullName: Lightning.LightningSource.LightIntensity
- uid: Global.Lightning.LightningSource.tF*
  commentId: Overload:Global.Lightning.LightningSource.tF
  isExternal: true
  href: Global.Lightning.LightningSource.html#Lightning_LightningSource_tF
  name: tF
  nameWithType: Lightning.LightningSource.tF
  fullName: Lightning.LightningSource.tF
