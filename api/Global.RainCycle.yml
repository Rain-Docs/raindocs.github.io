### YamlMime:ManagedReference
items:
- uid: Global.RainCycle
  commentId: T:Global.RainCycle
  id: RainCycle
  parent: Global
  children:
  - Global.RainCycle.#ctor(World,System.Single)
  - Global.RainCycle.AmountLeft
  - Global.RainCycle.ArenaEndSessionRain
  - Global.RainCycle.BlizzardWorldActive
  - Global.RainCycle.CycleProgression
  - Global.RainCycle.CycleStartUp
  - Global.RainCycle.DustStormProgress
  - Global.RainCycle.GetDesiredCycleLength
  - Global.RainCycle.MicroScreenShake
  - Global.RainCycle.MusicAllowed
  - Global.RainCycle.ProximityToMiddleOfCycle
  - Global.RainCycle.RainApproaching
  - Global.RainCycle.RainDarkPalette
  - Global.RainCycle.RainGameOver
  - Global.RainCycle.RegionHidesTimer
  - Global.RainCycle.ScreenShake
  - Global.RainCycle.ShaderLight
  - Global.RainCycle.TimeUntilRain
  - Global.RainCycle.TimeUntilSunset
  - Global.RainCycle.Update
  - Global.RainCycle.baseCycleLength
  - Global.RainCycle.brokenAntiGrav
  - Global.RainCycle.challengeForcedPrecycle
  - Global.RainCycle.cycleLength
  - Global.RainCycle.dayNightCounter
  - Global.RainCycle.deathRainHasHit
  - Global.RainCycle.duskPalette
  - Global.RainCycle.filtrationPowerBehavior
  - Global.RainCycle.maxPreTimer
  - Global.RainCycle.nightPalette
  - Global.RainCycle.pause
  - Global.RainCycle.preCycleRainPulse_WaveA
  - Global.RainCycle.preCycleRainPulse_WaveB
  - Global.RainCycle.preCycleRainPulse_WaveC
  - Global.RainCycle.preCycleRain_Intensity
  - Global.RainCycle.preTimer
  - Global.RainCycle.rainbowSeed
  - Global.RainCycle.sunDownStartTime
  - Global.RainCycle.timer
  - Global.RainCycle.waterCycle
  - Global.RainCycle.world
  langs:
  - csharp
  - vb
  name: RainCycle
  nameWithType: RainCycle
  fullName: RainCycle
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RainCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RainCycle
    content.vb: Public Class RainCycle
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RainCycle.world
  commentId: F:Global.RainCycle.world
  id: world
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: world
  nameWithType: RainCycle.world
  fullName: RainCycle.world
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.world</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public World world
    return:
      type: Global.World
    content.vb: Public world As World
- uid: Global.RainCycle.brokenAntiGrav
  commentId: F:Global.RainCycle.brokenAntiGrav
  id: brokenAntiGrav
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: brokenAntiGrav
  nameWithType: RainCycle.brokenAntiGrav
  fullName: RainCycle.brokenAntiGrav
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.brokenAntiGrav</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public AntiGravity.BrokenAntiGravity brokenAntiGrav
    return:
      type: Global.AntiGravity.BrokenAntiGravity
    content.vb: Public brokenAntiGrav As AntiGravity.BrokenAntiGravity
- uid: Global.RainCycle.waterCycle
  commentId: F:Global.RainCycle.waterCycle
  id: waterCycle
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: waterCycle
  nameWithType: RainCycle.waterCycle
  fullName: RainCycle.waterCycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.waterCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public WaterLevelCycle waterCycle
    return:
      type: Global.WaterLevelCycle
    content.vb: Public waterCycle As WaterLevelCycle
- uid: Global.RainCycle.timer
  commentId: F:Global.RainCycle.timer
  id: timer
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: timer
  nameWithType: RainCycle.timer
  fullName: RainCycle.timer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.timer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int timer
    return:
      type: System.Int32
    content.vb: Public timer As Integer
- uid: Global.RainCycle.cycleLength
  commentId: F:Global.RainCycle.cycleLength
  id: cycleLength
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: cycleLength
  nameWithType: RainCycle.cycleLength
  fullName: RainCycle.cycleLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.cycleLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int cycleLength
    return:
      type: System.Int32
    content.vb: Public cycleLength As Integer
- uid: Global.RainCycle.baseCycleLength
  commentId: F:Global.RainCycle.baseCycleLength
  id: baseCycleLength
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: baseCycleLength
  nameWithType: RainCycle.baseCycleLength
  fullName: RainCycle.baseCycleLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.baseCycleLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int baseCycleLength
    return:
      type: System.Int32
    content.vb: Public baseCycleLength As Integer
- uid: Global.RainCycle.rainbowSeed
  commentId: F:Global.RainCycle.rainbowSeed
  id: rainbowSeed
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: rainbowSeed
  nameWithType: RainCycle.rainbowSeed
  fullName: RainCycle.rainbowSeed
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.rainbowSeed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int rainbowSeed
    return:
      type: System.Int32
    content.vb: Public rainbowSeed As Integer
- uid: Global.RainCycle.deathRainHasHit
  commentId: F:Global.RainCycle.deathRainHasHit
  id: deathRainHasHit
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: deathRainHasHit
  nameWithType: RainCycle.deathRainHasHit
  fullName: RainCycle.deathRainHasHit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.deathRainHasHit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool deathRainHasHit
    return:
      type: System.Boolean
    content.vb: Public deathRainHasHit As Boolean
- uid: Global.RainCycle.pause
  commentId: F:Global.RainCycle.pause
  id: pause
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: pause
  nameWithType: RainCycle.pause
  fullName: RainCycle.pause
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.pause</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int pause
    return:
      type: System.Int32
    content.vb: Public pause As Integer
- uid: Global.RainCycle.sunDownStartTime
  commentId: F:Global.RainCycle.sunDownStartTime
  id: sunDownStartTime
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: sunDownStartTime
  nameWithType: RainCycle.sunDownStartTime
  fullName: RainCycle.sunDownStartTime
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.sunDownStartTime</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int sunDownStartTime
    return:
      type: System.Int32
    content.vb: Public sunDownStartTime As Integer
- uid: Global.RainCycle.dayNightCounter
  commentId: F:Global.RainCycle.dayNightCounter
  id: dayNightCounter
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: dayNightCounter
  nameWithType: RainCycle.dayNightCounter
  fullName: RainCycle.dayNightCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.dayNightCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int dayNightCounter
    return:
      type: System.Int32
    content.vb: Public dayNightCounter As Integer
- uid: Global.RainCycle.duskPalette
  commentId: F:Global.RainCycle.duskPalette
  id: duskPalette
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: duskPalette
  nameWithType: RainCycle.duskPalette
  fullName: RainCycle.duskPalette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.duskPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int duskPalette
    return:
      type: System.Int32
    content.vb: Public duskPalette As Integer
- uid: Global.RainCycle.nightPalette
  commentId: F:Global.RainCycle.nightPalette
  id: nightPalette
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: nightPalette
  nameWithType: RainCycle.nightPalette
  fullName: RainCycle.nightPalette
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.nightPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int nightPalette
    return:
      type: System.Int32
    content.vb: Public nightPalette As Integer
- uid: Global.RainCycle.preTimer
  commentId: F:Global.RainCycle.preTimer
  id: preTimer
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: preTimer
  nameWithType: RainCycle.preTimer
  fullName: RainCycle.preTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.preTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int preTimer
    return:
      type: System.Int32
    content.vb: Public preTimer As Integer
- uid: Global.RainCycle.maxPreTimer
  commentId: F:Global.RainCycle.maxPreTimer
  id: maxPreTimer
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: maxPreTimer
  nameWithType: RainCycle.maxPreTimer
  fullName: RainCycle.maxPreTimer
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.maxPreTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int maxPreTimer
    return:
      type: System.Int32
    content.vb: Public maxPreTimer As Integer
- uid: Global.RainCycle.preCycleRainPulse_WaveA
  commentId: F:Global.RainCycle.preCycleRainPulse_WaveA
  id: preCycleRainPulse_WaveA
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: preCycleRainPulse_WaveA
  nameWithType: RainCycle.preCycleRainPulse_WaveA
  fullName: RainCycle.preCycleRainPulse_WaveA
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.preCycleRainPulse_WaveA</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float preCycleRainPulse_WaveA
    return:
      type: System.Single
    content.vb: Public preCycleRainPulse_WaveA As Single
- uid: Global.RainCycle.preCycleRainPulse_WaveB
  commentId: F:Global.RainCycle.preCycleRainPulse_WaveB
  id: preCycleRainPulse_WaveB
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: preCycleRainPulse_WaveB
  nameWithType: RainCycle.preCycleRainPulse_WaveB
  fullName: RainCycle.preCycleRainPulse_WaveB
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.preCycleRainPulse_WaveB</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float preCycleRainPulse_WaveB
    return:
      type: System.Single
    content.vb: Public preCycleRainPulse_WaveB As Single
- uid: Global.RainCycle.preCycleRainPulse_WaveC
  commentId: F:Global.RainCycle.preCycleRainPulse_WaveC
  id: preCycleRainPulse_WaveC
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: preCycleRainPulse_WaveC
  nameWithType: RainCycle.preCycleRainPulse_WaveC
  fullName: RainCycle.preCycleRainPulse_WaveC
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.preCycleRainPulse_WaveC</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float preCycleRainPulse_WaveC
    return:
      type: System.Single
    content.vb: Public preCycleRainPulse_WaveC As Single
- uid: Global.RainCycle.challengeForcedPrecycle
  commentId: F:Global.RainCycle.challengeForcedPrecycle
  id: challengeForcedPrecycle
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: challengeForcedPrecycle
  nameWithType: RainCycle.challengeForcedPrecycle
  fullName: RainCycle.challengeForcedPrecycle
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.challengeForcedPrecycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool challengeForcedPrecycle
    return:
      type: System.Boolean
    content.vb: Public challengeForcedPrecycle As Boolean
- uid: Global.RainCycle.filtrationPowerBehavior
  commentId: F:Global.RainCycle.filtrationPowerBehavior
  id: filtrationPowerBehavior
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: filtrationPowerBehavior
  nameWithType: RainCycle.filtrationPowerBehavior
  fullName: RainCycle.filtrationPowerBehavior
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:RainCycle.filtrationPowerBehavior</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public FiltrationPowerController filtrationPowerBehavior
    return:
      type: MoreSlugcats.FiltrationPowerController
    content.vb: Public filtrationPowerBehavior As FiltrationPowerController
- uid: Global.RainCycle.#ctor(World,System.Single)
  commentId: M:Global.RainCycle.#ctor(World,System.Single)
  id: '#ctor(World,System.Single)'
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: RainCycle(World, float)
  nameWithType: RainCycle.RainCycle(World, float)
  fullName: RainCycle.RainCycle(World, float)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RainCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RainCycle(World world, float minutes)
    parameters:
    - id: world
      type: Global.World
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>world</parameter>
            <parameter>M:RainCycle.#ctor(World,System.Single)</parameter>
          </include>
        </markup>
    - id: minutes
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>minutes</parameter>
            <parameter>M:RainCycle.#ctor(World,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(world As World, minutes As Single)
  overload: Global.RainCycle.#ctor*
  nameWithType.vb: RainCycle.New(World, Single)
  fullName.vb: RainCycle.New(World, Single)
  name.vb: New(World, Single)
- uid: Global.RainCycle.GetDesiredCycleLength
  commentId: M:Global.RainCycle.GetDesiredCycleLength
  id: GetDesiredCycleLength
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: GetDesiredCycleLength()
  nameWithType: RainCycle.GetDesiredCycleLength()
  fullName: RainCycle.GetDesiredCycleLength()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RainCycle.GetDesiredCycleLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int GetDesiredCycleLength()
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RainCycle.GetDesiredCycleLength</parameter>
          </include>
        </markup>
    content.vb: Public Function GetDesiredCycleLength() As Integer
  overload: Global.RainCycle.GetDesiredCycleLength*
- uid: Global.RainCycle.Update
  commentId: M:Global.RainCycle.Update
  id: Update
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: Update()
  nameWithType: RainCycle.Update()
  fullName: RainCycle.Update()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RainCycle.Update</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Update()
    content.vb: Public Sub Update()
  overload: Global.RainCycle.Update*
- uid: Global.RainCycle.ArenaEndSessionRain
  commentId: M:Global.RainCycle.ArenaEndSessionRain
  id: ArenaEndSessionRain
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: ArenaEndSessionRain()
  nameWithType: RainCycle.ArenaEndSessionRain()
  fullName: RainCycle.ArenaEndSessionRain()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RainCycle.ArenaEndSessionRain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ArenaEndSessionRain()
    content.vb: Public Sub ArenaEndSessionRain()
  overload: Global.RainCycle.ArenaEndSessionRain*
- uid: Global.RainCycle.TimeUntilRain
  commentId: P:Global.RainCycle.TimeUntilRain
  id: TimeUntilRain
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: TimeUntilRain
  nameWithType: RainCycle.TimeUntilRain
  fullName: RainCycle.TimeUntilRain
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.TimeUntilRain</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TimeUntilRain { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimeUntilRain As Integer
  overload: Global.RainCycle.TimeUntilRain*
- uid: Global.RainCycle.AmountLeft
  commentId: P:Global.RainCycle.AmountLeft
  id: AmountLeft
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: AmountLeft
  nameWithType: RainCycle.AmountLeft
  fullName: RainCycle.AmountLeft
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.AmountLeft</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float AmountLeft { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property AmountLeft As Single
  overload: Global.RainCycle.AmountLeft*
- uid: Global.RainCycle.BlizzardWorldActive
  commentId: P:Global.RainCycle.BlizzardWorldActive
  id: BlizzardWorldActive
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: BlizzardWorldActive
  nameWithType: RainCycle.BlizzardWorldActive
  fullName: RainCycle.BlizzardWorldActive
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.BlizzardWorldActive</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool BlizzardWorldActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property BlizzardWorldActive As Boolean
  overload: Global.RainCycle.BlizzardWorldActive*
- uid: Global.RainCycle.RainApproaching
  commentId: P:Global.RainCycle.RainApproaching
  id: RainApproaching
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: RainApproaching
  nameWithType: RainCycle.RainApproaching
  fullName: RainCycle.RainApproaching
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.RainApproaching</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RainApproaching { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RainApproaching As Single
  overload: Global.RainCycle.RainApproaching*
- uid: Global.RainCycle.ShaderLight
  commentId: P:Global.RainCycle.ShaderLight
  id: ShaderLight
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: ShaderLight
  nameWithType: RainCycle.ShaderLight
  fullName: RainCycle.ShaderLight
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.ShaderLight</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ShaderLight { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ShaderLight As Single
  overload: Global.RainCycle.ShaderLight*
- uid: Global.RainCycle.RainDarkPalette
  commentId: P:Global.RainCycle.RainDarkPalette
  id: RainDarkPalette
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: RainDarkPalette
  nameWithType: RainCycle.RainDarkPalette
  fullName: RainCycle.RainDarkPalette
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.RainDarkPalette</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float RainDarkPalette { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property RainDarkPalette As Single
  overload: Global.RainCycle.RainDarkPalette*
- uid: Global.RainCycle.ScreenShake
  commentId: P:Global.RainCycle.ScreenShake
  id: ScreenShake
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: ScreenShake
  nameWithType: RainCycle.ScreenShake
  fullName: RainCycle.ScreenShake
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.ScreenShake</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ScreenShake { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ScreenShake As Single
  overload: Global.RainCycle.ScreenShake*
- uid: Global.RainCycle.MicroScreenShake
  commentId: P:Global.RainCycle.MicroScreenShake
  id: MicroScreenShake
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: MicroScreenShake
  nameWithType: RainCycle.MicroScreenShake
  fullName: RainCycle.MicroScreenShake
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.MicroScreenShake</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float MicroScreenShake { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property MicroScreenShake As Single
  overload: Global.RainCycle.MicroScreenShake*
- uid: Global.RainCycle.RainGameOver
  commentId: P:Global.RainCycle.RainGameOver
  id: RainGameOver
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: RainGameOver
  nameWithType: RainCycle.RainGameOver
  fullName: RainCycle.RainGameOver
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.RainGameOver</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RainGameOver { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RainGameOver As Boolean
  overload: Global.RainCycle.RainGameOver*
- uid: Global.RainCycle.CycleStartUp
  commentId: P:Global.RainCycle.CycleStartUp
  id: CycleStartUp
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: CycleStartUp
  nameWithType: RainCycle.CycleStartUp
  fullName: RainCycle.CycleStartUp
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.CycleStartUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CycleStartUp { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property CycleStartUp As Single
  overload: Global.RainCycle.CycleStartUp*
- uid: Global.RainCycle.CycleProgression
  commentId: P:Global.RainCycle.CycleProgression
  id: CycleProgression
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: CycleProgression
  nameWithType: RainCycle.CycleProgression
  fullName: RainCycle.CycleProgression
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.CycleProgression</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float CycleProgression { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property CycleProgression As Single
  overload: Global.RainCycle.CycleProgression*
- uid: Global.RainCycle.ProximityToMiddleOfCycle
  commentId: P:Global.RainCycle.ProximityToMiddleOfCycle
  id: ProximityToMiddleOfCycle
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: ProximityToMiddleOfCycle
  nameWithType: RainCycle.ProximityToMiddleOfCycle
  fullName: RainCycle.ProximityToMiddleOfCycle
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.ProximityToMiddleOfCycle</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ProximityToMiddleOfCycle { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property ProximityToMiddleOfCycle As Single
  overload: Global.RainCycle.ProximityToMiddleOfCycle*
- uid: Global.RainCycle.MusicAllowed
  commentId: P:Global.RainCycle.MusicAllowed
  id: MusicAllowed
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: MusicAllowed
  nameWithType: RainCycle.MusicAllowed
  fullName: RainCycle.MusicAllowed
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.MusicAllowed</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool MusicAllowed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property MusicAllowed As Boolean
  overload: Global.RainCycle.MusicAllowed*
- uid: Global.RainCycle.DustStormProgress
  commentId: P:Global.RainCycle.DustStormProgress
  id: DustStormProgress
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: DustStormProgress
  nameWithType: RainCycle.DustStormProgress
  fullName: RainCycle.DustStormProgress
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.DustStormProgress</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float DustStormProgress { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property DustStormProgress As Single
  overload: Global.RainCycle.DustStormProgress*
- uid: Global.RainCycle.TimeUntilSunset
  commentId: P:Global.RainCycle.TimeUntilSunset
  id: TimeUntilSunset
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: TimeUntilSunset
  nameWithType: RainCycle.TimeUntilSunset
  fullName: RainCycle.TimeUntilSunset
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.TimeUntilSunset</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int TimeUntilSunset { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property TimeUntilSunset As Integer
  overload: Global.RainCycle.TimeUntilSunset*
- uid: Global.RainCycle.preCycleRain_Intensity
  commentId: P:Global.RainCycle.preCycleRain_Intensity
  id: preCycleRain_Intensity
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: preCycleRain_Intensity
  nameWithType: RainCycle.preCycleRain_Intensity
  fullName: RainCycle.preCycleRain_Intensity
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.preCycleRain_Intensity</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float preCycleRain_Intensity { get; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public ReadOnly Property preCycleRain_Intensity As Single
  overload: Global.RainCycle.preCycleRain_Intensity*
- uid: Global.RainCycle.RegionHidesTimer
  commentId: P:Global.RainCycle.RegionHidesTimer
  id: RegionHidesTimer
  parent: Global.RainCycle
  langs:
  - csharp
  - vb
  name: RegionHidesTimer
  nameWithType: RainCycle.RegionHidesTimer
  fullName: RainCycle.RegionHidesTimer
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:RainCycle.RegionHidesTimer</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool RegionHidesTimer { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property RegionHidesTimer As Boolean
  overload: Global.RainCycle.RegionHidesTimer*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.World
  commentId: T:Global.World
  isExternal: true
  href: World.html
  name: World
  nameWithType: World
  fullName: World
- uid: Global.AntiGravity.BrokenAntiGravity
  commentId: T:Global.AntiGravity.BrokenAntiGravity
  isExternal: true
  href: AntiGravity.html
  name: AntiGravity.BrokenAntiGravity
  nameWithType: AntiGravity.BrokenAntiGravity
  fullName: AntiGravity.BrokenAntiGravity
  spec.csharp:
  - uid: Global.AntiGravity
    name: AntiGravity
    isExternal: true
    href: AntiGravity.html
  - name: .
  - uid: Global.AntiGravity.BrokenAntiGravity
    name: BrokenAntiGravity
    isExternal: true
    href: AntiGravity.BrokenAntiGravity.html
  spec.vb:
  - uid: Global.AntiGravity
    name: AntiGravity
    isExternal: true
    href: AntiGravity.html
  - name: .
  - uid: Global.AntiGravity.BrokenAntiGravity
    name: BrokenAntiGravity
    isExternal: true
    href: AntiGravity.BrokenAntiGravity.html
- uid: Global.WaterLevelCycle
  commentId: T:Global.WaterLevelCycle
  isExternal: true
  href: WaterLevelCycle.html
  name: WaterLevelCycle
  nameWithType: WaterLevelCycle
  fullName: WaterLevelCycle
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: MoreSlugcats.FiltrationPowerController
  commentId: T:MoreSlugcats.FiltrationPowerController
  parent: MoreSlugcats
  isExternal: true
  href: MoreSlugcats.FiltrationPowerController.html
  name: FiltrationPowerController
  nameWithType: FiltrationPowerController
  fullName: MoreSlugcats.FiltrationPowerController
- uid: MoreSlugcats
  commentId: N:MoreSlugcats
  isExternal: true
  href: MoreSlugcats.html
  name: MoreSlugcats
  nameWithType: MoreSlugcats
  fullName: MoreSlugcats
- uid: Global.RainCycle.#ctor*
  commentId: Overload:Global.RainCycle.#ctor
  isExternal: true
  href: Global.RainCycle.html#RainCycle__ctor_World_System_Single_
  name: RainCycle
  nameWithType: RainCycle.RainCycle
  fullName: RainCycle.RainCycle
  nameWithType.vb: RainCycle.New
  fullName.vb: RainCycle.New
  name.vb: New
- uid: Global.RainCycle.GetDesiredCycleLength*
  commentId: Overload:Global.RainCycle.GetDesiredCycleLength
  isExternal: true
  href: Global.RainCycle.html#RainCycle_GetDesiredCycleLength
  name: GetDesiredCycleLength
  nameWithType: RainCycle.GetDesiredCycleLength
  fullName: RainCycle.GetDesiredCycleLength
- uid: Global.RainCycle.Update*
  commentId: Overload:Global.RainCycle.Update
  isExternal: true
  href: Global.RainCycle.html#RainCycle_Update
  name: Update
  nameWithType: RainCycle.Update
  fullName: RainCycle.Update
- uid: Global.RainCycle.ArenaEndSessionRain*
  commentId: Overload:Global.RainCycle.ArenaEndSessionRain
  isExternal: true
  href: Global.RainCycle.html#RainCycle_ArenaEndSessionRain
  name: ArenaEndSessionRain
  nameWithType: RainCycle.ArenaEndSessionRain
  fullName: RainCycle.ArenaEndSessionRain
- uid: Global.RainCycle.TimeUntilRain*
  commentId: Overload:Global.RainCycle.TimeUntilRain
  isExternal: true
  href: Global.RainCycle.html#RainCycle_TimeUntilRain
  name: TimeUntilRain
  nameWithType: RainCycle.TimeUntilRain
  fullName: RainCycle.TimeUntilRain
- uid: Global.RainCycle.AmountLeft*
  commentId: Overload:Global.RainCycle.AmountLeft
  isExternal: true
  href: Global.RainCycle.html#RainCycle_AmountLeft
  name: AmountLeft
  nameWithType: RainCycle.AmountLeft
  fullName: RainCycle.AmountLeft
- uid: Global.RainCycle.BlizzardWorldActive*
  commentId: Overload:Global.RainCycle.BlizzardWorldActive
  isExternal: true
  href: Global.RainCycle.html#RainCycle_BlizzardWorldActive
  name: BlizzardWorldActive
  nameWithType: RainCycle.BlizzardWorldActive
  fullName: RainCycle.BlizzardWorldActive
- uid: Global.RainCycle.RainApproaching*
  commentId: Overload:Global.RainCycle.RainApproaching
  isExternal: true
  href: Global.RainCycle.html#RainCycle_RainApproaching
  name: RainApproaching
  nameWithType: RainCycle.RainApproaching
  fullName: RainCycle.RainApproaching
- uid: Global.RainCycle.ShaderLight*
  commentId: Overload:Global.RainCycle.ShaderLight
  isExternal: true
  href: Global.RainCycle.html#RainCycle_ShaderLight
  name: ShaderLight
  nameWithType: RainCycle.ShaderLight
  fullName: RainCycle.ShaderLight
- uid: Global.RainCycle.RainDarkPalette*
  commentId: Overload:Global.RainCycle.RainDarkPalette
  isExternal: true
  href: Global.RainCycle.html#RainCycle_RainDarkPalette
  name: RainDarkPalette
  nameWithType: RainCycle.RainDarkPalette
  fullName: RainCycle.RainDarkPalette
- uid: Global.RainCycle.ScreenShake*
  commentId: Overload:Global.RainCycle.ScreenShake
  isExternal: true
  href: Global.RainCycle.html#RainCycle_ScreenShake
  name: ScreenShake
  nameWithType: RainCycle.ScreenShake
  fullName: RainCycle.ScreenShake
- uid: Global.RainCycle.MicroScreenShake*
  commentId: Overload:Global.RainCycle.MicroScreenShake
  isExternal: true
  href: Global.RainCycle.html#RainCycle_MicroScreenShake
  name: MicroScreenShake
  nameWithType: RainCycle.MicroScreenShake
  fullName: RainCycle.MicroScreenShake
- uid: Global.RainCycle.RainGameOver*
  commentId: Overload:Global.RainCycle.RainGameOver
  isExternal: true
  href: Global.RainCycle.html#RainCycle_RainGameOver
  name: RainGameOver
  nameWithType: RainCycle.RainGameOver
  fullName: RainCycle.RainGameOver
- uid: Global.RainCycle.CycleStartUp*
  commentId: Overload:Global.RainCycle.CycleStartUp
  isExternal: true
  href: Global.RainCycle.html#RainCycle_CycleStartUp
  name: CycleStartUp
  nameWithType: RainCycle.CycleStartUp
  fullName: RainCycle.CycleStartUp
- uid: Global.RainCycle.CycleProgression*
  commentId: Overload:Global.RainCycle.CycleProgression
  isExternal: true
  href: Global.RainCycle.html#RainCycle_CycleProgression
  name: CycleProgression
  nameWithType: RainCycle.CycleProgression
  fullName: RainCycle.CycleProgression
- uid: Global.RainCycle.ProximityToMiddleOfCycle*
  commentId: Overload:Global.RainCycle.ProximityToMiddleOfCycle
  isExternal: true
  href: Global.RainCycle.html#RainCycle_ProximityToMiddleOfCycle
  name: ProximityToMiddleOfCycle
  nameWithType: RainCycle.ProximityToMiddleOfCycle
  fullName: RainCycle.ProximityToMiddleOfCycle
- uid: Global.RainCycle.MusicAllowed*
  commentId: Overload:Global.RainCycle.MusicAllowed
  isExternal: true
  href: Global.RainCycle.html#RainCycle_MusicAllowed
  name: MusicAllowed
  nameWithType: RainCycle.MusicAllowed
  fullName: RainCycle.MusicAllowed
- uid: Global.RainCycle.DustStormProgress*
  commentId: Overload:Global.RainCycle.DustStormProgress
  isExternal: true
  href: Global.RainCycle.html#RainCycle_DustStormProgress
  name: DustStormProgress
  nameWithType: RainCycle.DustStormProgress
  fullName: RainCycle.DustStormProgress
- uid: Global.RainCycle.TimeUntilSunset*
  commentId: Overload:Global.RainCycle.TimeUntilSunset
  isExternal: true
  href: Global.RainCycle.html#RainCycle_TimeUntilSunset
  name: TimeUntilSunset
  nameWithType: RainCycle.TimeUntilSunset
  fullName: RainCycle.TimeUntilSunset
- uid: Global.RainCycle.preCycleRain_Intensity*
  commentId: Overload:Global.RainCycle.preCycleRain_Intensity
  isExternal: true
  href: Global.RainCycle.html#RainCycle_preCycleRain_Intensity
  name: preCycleRain_Intensity
  nameWithType: RainCycle.preCycleRain_Intensity
  fullName: RainCycle.preCycleRain_Intensity
- uid: Global.RainCycle.RegionHidesTimer*
  commentId: Overload:Global.RainCycle.RegionHidesTimer
  isExternal: true
  href: Global.RainCycle.html#RainCycle_RegionHidesTimer
  name: RegionHidesTimer
  nameWithType: RainCycle.RegionHidesTimer
  fullName: RainCycle.RegionHidesTimer
