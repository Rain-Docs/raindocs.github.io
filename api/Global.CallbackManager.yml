### YamlMime:ManagedReference
items:
- uid: Global.CallbackManager
  commentId: T:Global.CallbackManager
  id: CallbackManager
  parent: Global
  children:
  - Global.CallbackManager.#ctor
  - Global.CallbackManager.Add(System.IDisposable)
  - Global.CallbackManager.Clear
  - Global.CallbackManager.Instance
  langs:
  - csharp
  - vb
  name: CallbackManager
  nameWithType: CallbackManager
  fullName: CallbackManager
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:CallbackManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class CallbackManager
    content.vb: Public Class CallbackManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.CallbackManager.Add(System.IDisposable)
  commentId: M:Global.CallbackManager.Add(System.IDisposable)
  id: Add(System.IDisposable)
  parent: Global.CallbackManager
  langs:
  - csharp
  - vb
  name: Add(IDisposable)
  nameWithType: CallbackManager.Add(IDisposable)
  fullName: CallbackManager.Add(System.IDisposable)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CallbackManager.Add(System.IDisposable)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Add(IDisposable callback)
    parameters:
    - id: callback
      type: System.IDisposable
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>callback</parameter>
            <parameter>M:CallbackManager.Add(System.IDisposable)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Add(callback As IDisposable)
  overload: Global.CallbackManager.Add*
- uid: Global.CallbackManager.Clear
  commentId: M:Global.CallbackManager.Clear
  id: Clear
  parent: Global.CallbackManager
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: CallbackManager.Clear()
  fullName: CallbackManager.Clear()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:CallbackManager.Clear</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear()
  overload: Global.CallbackManager.Clear*
- uid: Global.CallbackManager.#ctor
  commentId: M:Global.CallbackManager.#ctor
  id: '#ctor'
  parent: Global.CallbackManager
  langs:
  - csharp
  - vb
  name: CallbackManager()
  nameWithType: CallbackManager.CallbackManager()
  fullName: CallbackManager.CallbackManager()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>CallbackManager</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public CallbackManager()
    content.vb: Public Sub New()
  overload: Global.CallbackManager.#ctor*
  nameWithType.vb: CallbackManager.New()
  fullName.vb: CallbackManager.New()
  name.vb: New()
- uid: Global.CallbackManager.Instance
  commentId: P:Global.CallbackManager.Instance
  id: Instance
  parent: Global.CallbackManager
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: CallbackManager.Instance
  fullName: CallbackManager.Instance
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:CallbackManager.Instance</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static CallbackManager Instance { get; }
    parameters: []
    return:
      type: Global.CallbackManager
    content.vb: Public Shared ReadOnly Property Instance As CallbackManager
  overload: Global.CallbackManager.Instance*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.CallbackManager.Add*
  commentId: Overload:Global.CallbackManager.Add
  isExternal: true
  href: Global.CallbackManager.html#CallbackManager_Add_System_IDisposable_
  name: Add
  nameWithType: CallbackManager.Add
  fullName: CallbackManager.Add
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Global.CallbackManager.Clear*
  commentId: Overload:Global.CallbackManager.Clear
  isExternal: true
  href: Global.CallbackManager.html#CallbackManager_Clear
  name: Clear
  nameWithType: CallbackManager.Clear
  fullName: CallbackManager.Clear
- uid: Global.CallbackManager.#ctor*
  commentId: Overload:Global.CallbackManager.#ctor
  isExternal: true
  href: Global.CallbackManager.html#CallbackManager__ctor
  name: CallbackManager
  nameWithType: CallbackManager.CallbackManager
  fullName: CallbackManager.CallbackManager
  nameWithType.vb: CallbackManager.New
  fullName.vb: CallbackManager.New
  name.vb: New
- uid: Global.CallbackManager.Instance*
  commentId: Overload:Global.CallbackManager.Instance
  isExternal: true
  href: Global.CallbackManager.html#CallbackManager_Instance
  name: Instance
  nameWithType: CallbackManager.Instance
  fullName: CallbackManager.Instance
- uid: Global.CallbackManager
  commentId: T:Global.CallbackManager
  isExternal: true
  href: CallbackManager.html
  name: CallbackManager
  nameWithType: CallbackManager
  fullName: CallbackManager
