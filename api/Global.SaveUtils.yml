### YamlMime:ManagedReference
items:
- uid: Global.SaveUtils
  commentId: T:Global.SaveUtils
  id: SaveUtils
  parent: Global
  children:
  - Global.SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])
  - Global.SaveUtils.LoadBooleanArray(System.String,System.Boolean[])
  - Global.SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  - Global.SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  - Global.SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])
  - Global.SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})
  - Global.SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)
  - Global.SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])
  - Global.SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  - Global.SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  - Global.SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])
  langs:
  - csharp
  - vb
  name: SaveUtils
  nameWithType: SaveUtils
  fullName: SaveUtils
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:SaveUtils</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class SaveUtils
    content.vb: Public Module SaveUtils
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  commentId: M:Global.SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  id: SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: SaveEnumIntDict<T>(Dictionary<T, int>, List<string>)
  nameWithType: SaveUtils.SaveEnumIntDict<T>(Dictionary<T, int>, List<string>)
  fullName: SaveUtils.SaveEnumIntDict<T>(System.Collections.Generic.Dictionary<T, int>, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SaveEnumIntDict<T>(Dictionary<T, int> validsDict, List<string> unrecognizedList)
    parameters:
    - id: validsDict
      type: System.Collections.Generic.Dictionary{{T},System.Int32}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validsDict</parameter>
            <parameter>M:SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: unrecognizedList
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedList</parameter>
            <parameter>M:SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.SaveEnumIntDict``1(System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SaveEnumIntDict(Of T)(validsDict As Dictionary(Of T, Integer), unrecognizedList As List(Of String)) As String
  overload: Global.SaveUtils.SaveEnumIntDict*
  nameWithType.vb: SaveUtils.SaveEnumIntDict(Of T)(Dictionary(Of T, Integer), List(Of String))
  fullName.vb: SaveUtils.SaveEnumIntDict(Of T)(System.Collections.Generic.Dictionary(Of T, Integer), System.Collections.Generic.List(Of String))
  name.vb: SaveEnumIntDict(Of T)(Dictionary(Of T, Integer), List(Of String))
- uid: Global.SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  commentId: M:Global.SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  id: LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: LoadEnumIntDict<T>(string, Dictionary<T, int>, List<string>)
  nameWithType: SaveUtils.LoadEnumIntDict<T>(string, Dictionary<T, int>, List<string>)
  fullName: SaveUtils.LoadEnumIntDict<T>(string, System.Collections.Generic.Dictionary<T, int>, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LoadEnumIntDict<T>(string commaSeparatedList, Dictionary<T, int> validsDict, List<string> unrecognizedList)
    parameters:
    - id: commaSeparatedList
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>commaSeparatedList</parameter>
            <parameter>M:SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: validsDict
      type: System.Collections.Generic.Dictionary{{T},System.Int32}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validsDict</parameter>
            <parameter>M:SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: unrecognizedList
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedList</parameter>
            <parameter>M:SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:SaveUtils.LoadEnumIntDict``1(System.String,System.Collections.Generic.Dictionary{``0,System.Int32},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LoadEnumIntDict(Of T)(commaSeparatedList As String, validsDict As Dictionary(Of T, Integer), unrecognizedList As List(Of String))
  overload: Global.SaveUtils.LoadEnumIntDict*
  nameWithType.vb: SaveUtils.LoadEnumIntDict(Of T)(String, Dictionary(Of T, Integer), List(Of String))
  fullName.vb: SaveUtils.LoadEnumIntDict(Of T)(String, System.Collections.Generic.Dictionary(Of T, Integer), System.Collections.Generic.List(Of String))
  name.vb: LoadEnumIntDict(Of T)(String, Dictionary(Of T, Integer), List(Of String))
- uid: Global.SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})
  commentId: M:Global.SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})
  id: LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: LoadStringIntDict(string, Dictionary<string, int>)
  nameWithType: SaveUtils.LoadStringIntDict(string, Dictionary<string, int>)
  fullName: SaveUtils.LoadStringIntDict(string, System.Collections.Generic.Dictionary<string, int>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LoadStringIntDict(string commaSeparatedList, Dictionary<string, int> populateDict)
    parameters:
    - id: commaSeparatedList
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>commaSeparatedList</parameter>
            <parameter>M:SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})</parameter>
          </include>
        </markup>
    - id: populateDict
      type: System.Collections.Generic.Dictionary{System.String,System.Int32}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>populateDict</parameter>
            <parameter>M:SaveUtils.LoadStringIntDict(System.String,System.Collections.Generic.Dictionary{System.String,System.Int32})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LoadStringIntDict(commaSeparatedList As String, populateDict As Dictionary(Of String, Integer))
  overload: Global.SaveUtils.LoadStringIntDict*
  nameWithType.vb: SaveUtils.LoadStringIntDict(String, Dictionary(Of String, Integer))
  fullName.vb: SaveUtils.LoadStringIntDict(String, System.Collections.Generic.Dictionary(Of String, Integer))
  name.vb: LoadStringIntDict(String, Dictionary(Of String, Integer))
- uid: Global.SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  commentId: M:Global.SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  id: SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: SaveEnumList<T>(List<T>, List<string>)
  nameWithType: SaveUtils.SaveEnumList<T>(List<T>, List<string>)
  fullName: SaveUtils.SaveEnumList<T>(System.Collections.Generic.List<T>, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SaveEnumList<T>(List<T> validsList, List<string> unrecognizedList)
    parameters:
    - id: validsList
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validsList</parameter>
            <parameter>M:SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: unrecognizedList
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedList</parameter>
            <parameter>M:SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.SaveEnumList``1(System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SaveEnumList(Of T)(validsList As List(Of T), unrecognizedList As List(Of String)) As String
  overload: Global.SaveUtils.SaveEnumList*
  nameWithType.vb: SaveUtils.SaveEnumList(Of T)(List(Of T), List(Of String))
  fullName.vb: SaveUtils.SaveEnumList(Of T)(System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of String))
  name.vb: SaveEnumList(Of T)(List(Of T), List(Of String))
- uid: Global.SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  commentId: M:Global.SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  id: LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: LoadEnumList<T>(string, List<T>, List<string>)
  nameWithType: SaveUtils.LoadEnumList<T>(string, List<T>, List<string>)
  fullName: SaveUtils.LoadEnumList<T>(string, System.Collections.Generic.List<T>, System.Collections.Generic.List<string>)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static void LoadEnumList<T>(string commaSeparatedList, List<T> validsList, List<string> unrecognizedList)
    parameters:
    - id: commaSeparatedList
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>commaSeparatedList</parameter>
            <parameter>M:SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: validsList
      type: System.Collections.Generic.List{{T}}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>validsList</parameter>
            <parameter>M:SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    - id: unrecognizedList
      type: System.Collections.Generic.List{System.String}
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedList</parameter>
            <parameter>M:SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    typeParameters:
    - id: T
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>typeparam</parameter>
            <parameter>T</parameter>
            <parameter>M:SaveUtils.LoadEnumList``1(System.String,System.Collections.Generic.List{``0},System.Collections.Generic.List{System.String})</parameter>
          </include>
        </markup>
    content.vb: Public Shared Sub LoadEnumList(Of T)(commaSeparatedList As String, validsList As List(Of T), unrecognizedList As List(Of String))
  overload: Global.SaveUtils.LoadEnumList*
  nameWithType.vb: SaveUtils.LoadEnumList(Of T)(String, List(Of T), List(Of String))
  fullName.vb: SaveUtils.LoadEnumList(Of T)(String, System.Collections.Generic.List(Of T), System.Collections.Generic.List(Of String))
  name.vb: LoadEnumList(Of T)(String, List(Of T), List(Of String))
- uid: Global.SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])
  commentId: M:Global.SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])
  id: SaveIntegerArray(System.Char,System.Int32[],System.Int32[])
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: SaveIntegerArray(char, int[], int[])
  nameWithType: SaveUtils.SaveIntegerArray(char, int[], int[])
  fullName: SaveUtils.SaveIntegerArray(char, int[], int[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SaveIntegerArray(char delimiter, int[] integers, int[] unrecognizedIntegers)
    parameters:
    - id: delimiter
      type: System.Char
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delimiter</parameter>
            <parameter>M:SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])</parameter>
          </include>
        </markup>
    - id: integers
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>integers</parameter>
            <parameter>M:SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])</parameter>
          </include>
        </markup>
    - id: unrecognizedIntegers
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedIntegers</parameter>
            <parameter>M:SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.SaveIntegerArray(System.Char,System.Int32[],System.Int32[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SaveIntegerArray(delimiter As Char, integers As Integer(), unrecognizedIntegers As Integer()) As String
  overload: Global.SaveUtils.SaveIntegerArray*
  nameWithType.vb: SaveUtils.SaveIntegerArray(Char, Integer(), Integer())
  fullName.vb: SaveUtils.SaveIntegerArray(Char, Integer(), Integer())
  name.vb: SaveIntegerArray(Char, Integer(), Integer())
- uid: Global.SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])
  commentId: M:Global.SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])
  id: LoadIntegersArray(System.String,System.Char,System.Int32[])
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: LoadIntegersArray(string, char, int[])
  nameWithType: SaveUtils.LoadIntegersArray(string, char, int[])
  fullName: SaveUtils.LoadIntegersArray(string, char, int[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static int[] LoadIntegersArray(string saveString, char delimiter, int[] integers)
    parameters:
    - id: saveString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveString</parameter>
            <parameter>M:SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])</parameter>
          </include>
        </markup>
    - id: delimiter
      type: System.Char
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delimiter</parameter>
            <parameter>M:SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])</parameter>
          </include>
        </markup>
    - id: integers
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>integers</parameter>
            <parameter>M:SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])</parameter>
          </include>
        </markup>
    return:
      type: System.Int32[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.LoadIntegersArray(System.String,System.Char,System.Int32[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LoadIntegersArray(saveString As String, delimiter As Char, integers As Integer()) As Integer()
  overload: Global.SaveUtils.LoadIntegersArray*
  nameWithType.vb: SaveUtils.LoadIntegersArray(String, Char, Integer())
  fullName.vb: SaveUtils.LoadIntegersArray(String, Char, Integer())
  name.vb: LoadIntegersArray(String, Char, Integer())
- uid: Global.SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])
  commentId: M:Global.SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])
  id: SaveBooleanArray(System.Boolean[],System.Boolean[])
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: SaveBooleanArray(bool[], bool[])
  nameWithType: SaveUtils.SaveBooleanArray(bool[], bool[])
  fullName: SaveUtils.SaveBooleanArray(bool[], bool[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string SaveBooleanArray(bool[] booleans, bool[] unrecognizedBooleans)
    parameters:
    - id: booleans
      type: System.Boolean[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>booleans</parameter>
            <parameter>M:SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])</parameter>
          </include>
        </markup>
    - id: unrecognizedBooleans
      type: System.Boolean[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unrecognizedBooleans</parameter>
            <parameter>M:SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.SaveBooleanArray(System.Boolean[],System.Boolean[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function SaveBooleanArray(booleans As Boolean(), unrecognizedBooleans As Boolean()) As String
  overload: Global.SaveUtils.SaveBooleanArray*
  nameWithType.vb: SaveUtils.SaveBooleanArray(Boolean(), Boolean())
  fullName.vb: SaveUtils.SaveBooleanArray(Boolean(), Boolean())
  name.vb: SaveBooleanArray(Boolean(), Boolean())
- uid: Global.SaveUtils.LoadBooleanArray(System.String,System.Boolean[])
  commentId: M:Global.SaveUtils.LoadBooleanArray(System.String,System.Boolean[])
  id: LoadBooleanArray(System.String,System.Boolean[])
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: LoadBooleanArray(string, bool[])
  nameWithType: SaveUtils.LoadBooleanArray(string, bool[])
  fullName: SaveUtils.LoadBooleanArray(string, bool[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.LoadBooleanArray(System.String,System.Boolean[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static bool[] LoadBooleanArray(string saveString, bool[] booleans)
    parameters:
    - id: saveString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>saveString</parameter>
            <parameter>M:SaveUtils.LoadBooleanArray(System.String,System.Boolean[])</parameter>
          </include>
        </markup>
    - id: booleans
      type: System.Boolean[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>booleans</parameter>
            <parameter>M:SaveUtils.LoadBooleanArray(System.String,System.Boolean[])</parameter>
          </include>
        </markup>
    return:
      type: System.Boolean[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.LoadBooleanArray(System.String,System.Boolean[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function LoadBooleanArray(saveString As String, booleans As Boolean()) As Boolean()
  overload: Global.SaveUtils.LoadBooleanArray*
  nameWithType.vb: SaveUtils.LoadBooleanArray(String, Boolean())
  fullName.vb: SaveUtils.LoadBooleanArray(String, Boolean())
  name.vb: LoadBooleanArray(String, Boolean())
- uid: Global.SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])
  commentId: M:Global.SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])
  id: AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: AppendUnrecognizedStringAttrs(string, string, string[])
  nameWithType: SaveUtils.AppendUnrecognizedStringAttrs(string, string, string[])
  fullName: SaveUtils.AppendUnrecognizedStringAttrs(string, string, string[])
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string AppendUnrecognizedStringAttrs(string normalSaveString, string delimiter, string[] unknownAttributes)
    parameters:
    - id: normalSaveString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>normalSaveString</parameter>
            <parameter>M:SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: delimiter
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>delimiter</parameter>
            <parameter>M:SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])</parameter>
          </include>
        </markup>
    - id: unknownAttributes
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>unknownAttributes</parameter>
            <parameter>M:SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.AppendUnrecognizedStringAttrs(System.String,System.String,System.String[])</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function AppendUnrecognizedStringAttrs(normalSaveString As String, delimiter As String, unknownAttributes As String()) As String
  overload: Global.SaveUtils.AppendUnrecognizedStringAttrs*
  nameWithType.vb: SaveUtils.AppendUnrecognizedStringAttrs(String, String, String())
  fullName.vb: SaveUtils.AppendUnrecognizedStringAttrs(String, String, String())
  name.vb: AppendUnrecognizedStringAttrs(String, String, String())
- uid: Global.SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)
  commentId: M:Global.SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)
  id: PopulateUnrecognizedStringAttrs(System.String[],System.Int32)
  parent: Global.SaveUtils
  langs:
  - csharp
  - vb
  name: PopulateUnrecognizedStringAttrs(string[], int)
  nameWithType: SaveUtils.PopulateUnrecognizedStringAttrs(string[], int)
  fullName: SaveUtils.PopulateUnrecognizedStringAttrs(string[], int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] PopulateUnrecognizedStringAttrs(string[] normalStringSplit, int fromIndex)
    parameters:
    - id: normalStringSplit
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>normalStringSplit</parameter>
            <parameter>M:SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)</parameter>
          </include>
        </markup>
    - id: fromIndex
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fromIndex</parameter>
            <parameter>M:SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.String[]
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:SaveUtils.PopulateUnrecognizedStringAttrs(System.String[],System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function PopulateUnrecognizedStringAttrs(normalStringSplit As String(), fromIndex As Integer) As String()
  overload: Global.SaveUtils.PopulateUnrecognizedStringAttrs*
  nameWithType.vb: SaveUtils.PopulateUnrecognizedStringAttrs(String(), Integer)
  fullName.vb: SaveUtils.PopulateUnrecognizedStringAttrs(String(), Integer)
  name.vb: PopulateUnrecognizedStringAttrs(String(), Integer)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.SaveUtils.SaveEnumIntDict*
  commentId: Overload:Global.SaveUtils.SaveEnumIntDict
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_SaveEnumIntDict__1_System_Collections_Generic_Dictionary___0_System_Int32__System_Collections_Generic_List_System_String__
  name: SaveEnumIntDict
  nameWithType: SaveUtils.SaveEnumIntDict
  fullName: SaveUtils.SaveEnumIntDict
- uid: System.Collections.Generic.Dictionary{{T},System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{``0,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<T, int>
  nameWithType: Dictionary<T, int>
  fullName: System.Collections.Generic.Dictionary<T, int>
  nameWithType.vb: Dictionary(Of T, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of T, Integer)
  name.vb: Dictionary(Of T, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.SaveUtils.LoadEnumIntDict*
  commentId: Overload:Global.SaveUtils.LoadEnumIntDict
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_LoadEnumIntDict__1_System_String_System_Collections_Generic_Dictionary___0_System_Int32__System_Collections_Generic_List_System_String__
  name: LoadEnumIntDict
  nameWithType: SaveUtils.LoadEnumIntDict
  fullName: SaveUtils.LoadEnumIntDict
- uid: Global.SaveUtils.LoadStringIntDict*
  commentId: Overload:Global.SaveUtils.LoadStringIntDict
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_LoadStringIntDict_System_String_System_Collections_Generic_Dictionary_System_String_System_Int32__
  name: LoadStringIntDict
  nameWithType: SaveUtils.LoadStringIntDict
  fullName: SaveUtils.LoadStringIntDict
- uid: System.Collections.Generic.Dictionary{System.String,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, int>
  nameWithType: Dictionary<string, int>
  fullName: System.Collections.Generic.Dictionary<string, int>
  nameWithType.vb: Dictionary(Of String, Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Integer)
  name.vb: Dictionary(Of String, Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Global.SaveUtils.SaveEnumList*
  commentId: Overload:Global.SaveUtils.SaveEnumList
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_SaveEnumList__1_System_Collections_Generic_List___0__System_Collections_Generic_List_System_String__
  name: SaveEnumList
  nameWithType: SaveUtils.SaveEnumList
  fullName: SaveUtils.SaveEnumList
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Global.SaveUtils.LoadEnumList*
  commentId: Overload:Global.SaveUtils.LoadEnumList
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_LoadEnumList__1_System_String_System_Collections_Generic_List___0__System_Collections_Generic_List_System_String__
  name: LoadEnumList
  nameWithType: SaveUtils.LoadEnumList
  fullName: SaveUtils.LoadEnumList
- uid: Global.SaveUtils.SaveIntegerArray*
  commentId: Overload:Global.SaveUtils.SaveIntegerArray
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_SaveIntegerArray_System_Char_System_Int32___System_Int32___
  name: SaveIntegerArray
  nameWithType: SaveUtils.SaveIntegerArray
  fullName: SaveUtils.SaveIntegerArray
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char
  nameWithType: char
  fullName: char
  nameWithType.vb: Char
  fullName.vb: Char
  name.vb: Char
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: Global.SaveUtils.LoadIntegersArray*
  commentId: Overload:Global.SaveUtils.LoadIntegersArray
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_LoadIntegersArray_System_String_System_Char_System_Int32___
  name: LoadIntegersArray
  nameWithType: SaveUtils.LoadIntegersArray
  fullName: SaveUtils.LoadIntegersArray
- uid: Global.SaveUtils.SaveBooleanArray*
  commentId: Overload:Global.SaveUtils.SaveBooleanArray
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_SaveBooleanArray_System_Boolean___System_Boolean___
  name: SaveBooleanArray
  nameWithType: SaveUtils.SaveBooleanArray
  fullName: SaveUtils.SaveBooleanArray
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: Global.SaveUtils.LoadBooleanArray*
  commentId: Overload:Global.SaveUtils.LoadBooleanArray
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_LoadBooleanArray_System_String_System_Boolean___
  name: LoadBooleanArray
  nameWithType: SaveUtils.LoadBooleanArray
  fullName: SaveUtils.LoadBooleanArray
- uid: Global.SaveUtils.AppendUnrecognizedStringAttrs*
  commentId: Overload:Global.SaveUtils.AppendUnrecognizedStringAttrs
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_AppendUnrecognizedStringAttrs_System_String_System_String_System_String___
  name: AppendUnrecognizedStringAttrs
  nameWithType: SaveUtils.AppendUnrecognizedStringAttrs
  fullName: SaveUtils.AppendUnrecognizedStringAttrs
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Global.SaveUtils.PopulateUnrecognizedStringAttrs*
  commentId: Overload:Global.SaveUtils.PopulateUnrecognizedStringAttrs
  isExternal: true
  href: Global.SaveUtils.html#SaveUtils_PopulateUnrecognizedStringAttrs_System_String___System_Int32_
  name: PopulateUnrecognizedStringAttrs
  nameWithType: SaveUtils.PopulateUnrecognizedStringAttrs
  fullName: SaveUtils.PopulateUnrecognizedStringAttrs
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
