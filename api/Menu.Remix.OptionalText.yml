### YamlMime:ManagedReference
items:
- uid: Menu.Remix.OptionalText
  commentId: T:Menu.Remix.OptionalText
  id: OptionalText
  parent: Menu.Remix
  children:
  - Menu.Remix.OptionalText.GetButtonName_Jump
  - Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)
  - Menu.Remix.OptionalText.GetButtonName_PickUp
  - Menu.Remix.OptionalText.GetButtonName_Throw
  - Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)
  - Menu.Remix.OptionalText.engText
  langs:
  - csharp
  - vb
  name: OptionalText
  nameWithType: OptionalText
  fullName: Menu.Remix.OptionalText
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Menu.Remix.OptionalText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static class OptionalText
    content.vb: Public Module OptionalText
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Menu.Remix.OptionalText.engText
  commentId: F:Menu.Remix.OptionalText.engText
  id: engText
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: engText
  nameWithType: OptionalText.engText
  fullName: Menu.Remix.OptionalText.engText
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Menu.Remix.OptionalText.engText</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string[] engText
    return:
      type: System.String[]
    content.vb: Public Shared engText As String()
- uid: Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)
  commentId: M:Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)
  id: GetText(Menu.Remix.OptionalText.ID)
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: GetText(ID)
  nameWithType: OptionalText.GetText(OptionalText.ID)
  fullName: Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetText(OptionalText.ID id)
    parameters:
    - id: id
      type: Menu.Remix.OptionalText.ID
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>id</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetText(Menu.Remix.OptionalText.ID)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetText(id As OptionalText.ID) As String
  overload: Menu.Remix.OptionalText.GetText*
- uid: Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)
  commentId: M:Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)
  id: GetButtonName_Map(System.Boolean)
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: GetButtonName_Map(bool)
  nameWithType: OptionalText.GetButtonName_Map(bool)
  fullName: Menu.Remix.OptionalText.GetButtonName_Map(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetButtonName_Map(bool holdText = false)
    parameters:
    - id: holdText
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>holdText</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)</parameter>
          </include>
        </markup>
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetButtonName_Map(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetButtonName_Map(holdText As Boolean = False) As String
  overload: Menu.Remix.OptionalText.GetButtonName_Map*
  nameWithType.vb: OptionalText.GetButtonName_Map(Boolean)
  fullName.vb: Menu.Remix.OptionalText.GetButtonName_Map(Boolean)
  name.vb: GetButtonName_Map(Boolean)
- uid: Menu.Remix.OptionalText.GetButtonName_PickUp
  commentId: M:Menu.Remix.OptionalText.GetButtonName_PickUp
  id: GetButtonName_PickUp
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: GetButtonName_PickUp()
  nameWithType: OptionalText.GetButtonName_PickUp()
  fullName: Menu.Remix.OptionalText.GetButtonName_PickUp()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.OptionalText.GetButtonName_PickUp</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetButtonName_PickUp()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetButtonName_PickUp</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetButtonName_PickUp() As String
  overload: Menu.Remix.OptionalText.GetButtonName_PickUp*
- uid: Menu.Remix.OptionalText.GetButtonName_Jump
  commentId: M:Menu.Remix.OptionalText.GetButtonName_Jump
  id: GetButtonName_Jump
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: GetButtonName_Jump()
  nameWithType: OptionalText.GetButtonName_Jump()
  fullName: Menu.Remix.OptionalText.GetButtonName_Jump()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.OptionalText.GetButtonName_Jump</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetButtonName_Jump()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetButtonName_Jump</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetButtonName_Jump() As String
  overload: Menu.Remix.OptionalText.GetButtonName_Jump*
- uid: Menu.Remix.OptionalText.GetButtonName_Throw
  commentId: M:Menu.Remix.OptionalText.GetButtonName_Throw
  id: GetButtonName_Throw
  parent: Menu.Remix.OptionalText
  langs:
  - csharp
  - vb
  name: GetButtonName_Throw()
  nameWithType: OptionalText.GetButtonName_Throw()
  fullName: Menu.Remix.OptionalText.GetButtonName_Throw()
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Menu.Remix
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Menu.Remix.OptionalText.GetButtonName_Throw</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static string GetButtonName_Throw()
    return:
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Menu.Remix.OptionalText.GetButtonName_Throw</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetButtonName_Throw() As String
  overload: Menu.Remix.OptionalText.GetButtonName_Throw*
references:
- uid: Menu.Remix
  commentId: N:Menu.Remix
  isExternal: true
  href: Menu.html
  name: Menu.Remix
  nameWithType: Menu.Remix
  fullName: Menu.Remix
  spec.csharp:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
  spec.vb:
  - uid: Menu
    name: Menu
    isExternal: true
    href: Menu.html
  - name: .
  - uid: Menu.Remix
    name: Remix
    isExternal: true
    href: Menu.Remix.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Menu.Remix.OptionalText.GetText*
  commentId: Overload:Menu.Remix.OptionalText.GetText
  isExternal: true
  href: Menu.Remix.OptionalText.html#Menu_Remix_OptionalText_GetText_Menu_Remix_OptionalText_ID_
  name: GetText
  nameWithType: OptionalText.GetText
  fullName: Menu.Remix.OptionalText.GetText
- uid: Menu.Remix.OptionalText.ID
  commentId: T:Menu.Remix.OptionalText.ID
  parent: Menu.Remix
  isExternal: true
  href: Menu.Remix.OptionalText.html
  name: OptionalText.ID
  nameWithType: OptionalText.ID
  fullName: Menu.Remix.OptionalText.ID
  spec.csharp:
  - uid: Menu.Remix.OptionalText
    name: OptionalText
    isExternal: true
    href: Menu.Remix.OptionalText.html
  - name: .
  - uid: Menu.Remix.OptionalText.ID
    name: ID
    isExternal: true
    href: Menu.Remix.OptionalText.ID.html
  spec.vb:
  - uid: Menu.Remix.OptionalText
    name: OptionalText
    isExternal: true
    href: Menu.Remix.OptionalText.html
  - name: .
  - uid: Menu.Remix.OptionalText.ID
    name: ID
    isExternal: true
    href: Menu.Remix.OptionalText.ID.html
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Menu.Remix.OptionalText.GetButtonName_Map*
  commentId: Overload:Menu.Remix.OptionalText.GetButtonName_Map
  isExternal: true
  href: Menu.Remix.OptionalText.html#Menu_Remix_OptionalText_GetButtonName_Map_System_Boolean_
  name: GetButtonName_Map
  nameWithType: OptionalText.GetButtonName_Map
  fullName: Menu.Remix.OptionalText.GetButtonName_Map
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Menu.Remix.OptionalText.GetButtonName_PickUp*
  commentId: Overload:Menu.Remix.OptionalText.GetButtonName_PickUp
  isExternal: true
  href: Menu.Remix.OptionalText.html#Menu_Remix_OptionalText_GetButtonName_PickUp
  name: GetButtonName_PickUp
  nameWithType: OptionalText.GetButtonName_PickUp
  fullName: Menu.Remix.OptionalText.GetButtonName_PickUp
- uid: Menu.Remix.OptionalText.GetButtonName_Jump*
  commentId: Overload:Menu.Remix.OptionalText.GetButtonName_Jump
  isExternal: true
  href: Menu.Remix.OptionalText.html#Menu_Remix_OptionalText_GetButtonName_Jump
  name: GetButtonName_Jump
  nameWithType: OptionalText.GetButtonName_Jump
  fullName: Menu.Remix.OptionalText.GetButtonName_Jump
- uid: Menu.Remix.OptionalText.GetButtonName_Throw*
  commentId: Overload:Menu.Remix.OptionalText.GetButtonName_Throw
  isExternal: true
  href: Menu.Remix.OptionalText.html#Menu_Remix_OptionalText_GetButtonName_Throw
  name: GetButtonName_Throw
  nameWithType: OptionalText.GetButtonName_Throw
  fullName: Menu.Remix.OptionalText.GetButtonName_Throw
