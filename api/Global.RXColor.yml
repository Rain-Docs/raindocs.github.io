### YamlMime:ManagedReference
items:
- uid: Global.RXColor
  commentId: T:Global.RXColor
  id: RXColor
  parent: Global
  children:
  - Global.RXColor.#ctor
  - Global.RXColor.ColorFromHSL(RXColorHSL)
  - Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single)
  - Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)
  - Global.RXColor.ColorFromHSLString(System.String)
  - Global.RXColor.ColorFromRGBString(System.String)
  - Global.RXColor.GetColorFromHex(System.UInt32)
  - Global.RXColor.HSLFromColor(UnityEngine.Color)
  langs:
  - csharp
  - vb
  name: RXColor
  nameWithType: RXColor
  fullName: RXColor
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:RXColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class RXColor
    content.vb: Public Class RXColor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.RXColor.ColorFromRGBString(System.String)
  commentId: M:Global.RXColor.ColorFromRGBString(System.String)
  id: ColorFromRGBString(System.String)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: ColorFromRGBString(string)
  nameWithType: RXColor.ColorFromRGBString(string)
  fullName: RXColor.ColorFromRGBString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.ColorFromRGBString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorFromRGBString(string rgbString)
    parameters:
    - id: rgbString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rgbString</parameter>
            <parameter>M:RXColor.ColorFromRGBString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.ColorFromRGBString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorFromRGBString(rgbString As String) As Color
  overload: Global.RXColor.ColorFromRGBString*
  nameWithType.vb: RXColor.ColorFromRGBString(String)
  fullName.vb: RXColor.ColorFromRGBString(String)
  name.vb: ColorFromRGBString(String)
- uid: Global.RXColor.ColorFromHSLString(System.String)
  commentId: M:Global.RXColor.ColorFromHSLString(System.String)
  id: ColorFromHSLString(System.String)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: ColorFromHSLString(string)
  nameWithType: RXColor.ColorFromHSLString(string)
  fullName: RXColor.ColorFromHSLString(string)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.ColorFromHSLString(System.String)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorFromHSLString(string hslString)
    parameters:
    - id: hslString
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hslString</parameter>
            <parameter>M:RXColor.ColorFromHSLString(System.String)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.ColorFromHSLString(System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorFromHSLString(hslString As String) As Color
  overload: Global.RXColor.ColorFromHSLString*
  nameWithType.vb: RXColor.ColorFromHSLString(String)
  fullName.vb: RXColor.ColorFromHSLString(String)
  name.vb: ColorFromHSLString(String)
- uid: Global.RXColor.ColorFromHSL(RXColorHSL)
  commentId: M:Global.RXColor.ColorFromHSL(RXColorHSL)
  id: ColorFromHSL(RXColorHSL)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: ColorFromHSL(RXColorHSL)
  nameWithType: RXColor.ColorFromHSL(RXColorHSL)
  fullName: RXColor.ColorFromHSL(RXColorHSL)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.ColorFromHSL(RXColorHSL)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorFromHSL(RXColorHSL hsl)
    parameters:
    - id: hsl
      type: Global.RXColorHSL
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hsl</parameter>
            <parameter>M:RXColor.ColorFromHSL(RXColorHSL)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.ColorFromHSL(RXColorHSL)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorFromHSL(hsl As RXColorHSL) As Color
  overload: Global.RXColor.ColorFromHSL*
- uid: Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single)
  commentId: M:Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single)
  id: ColorFromHSL(System.Single,System.Single,System.Single)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: ColorFromHSL(float, float, float)
  nameWithType: RXColor.ColorFromHSL(float, float, float)
  fullName: RXColor.ColorFromHSL(float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorFromHSL(float hue, float sat, float lum)
    parameters:
    - id: hue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lum
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lum</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorFromHSL(hue As Single, sat As Single, lum As Single) As Color
  overload: Global.RXColor.ColorFromHSL*
  nameWithType.vb: RXColor.ColorFromHSL(Single, Single, Single)
  fullName.vb: RXColor.ColorFromHSL(Single, Single, Single)
  name.vb: ColorFromHSL(Single, Single, Single)
- uid: Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)
  commentId: M:Global.RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)
  id: ColorFromHSL(System.Single,System.Single,System.Single,System.Single)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: ColorFromHSL(float, float, float, float)
  nameWithType: RXColor.ColorFromHSL(float, float, float, float)
  fullName: RXColor.ColorFromHSL(float, float, float, float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color ColorFromHSL(float hue, float sat, float lum, float alpha)
    parameters:
    - id: hue
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hue</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: sat
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sat</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: lum
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>lum</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    - id: alpha
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>alpha</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.ColorFromHSL(System.Single,System.Single,System.Single,System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function ColorFromHSL(hue As Single, sat As Single, lum As Single, alpha As Single) As Color
  overload: Global.RXColor.ColorFromHSL*
  nameWithType.vb: RXColor.ColorFromHSL(Single, Single, Single, Single)
  fullName.vb: RXColor.ColorFromHSL(Single, Single, Single, Single)
  name.vb: ColorFromHSL(Single, Single, Single, Single)
- uid: Global.RXColor.HSLFromColor(UnityEngine.Color)
  commentId: M:Global.RXColor.HSLFromColor(UnityEngine.Color)
  id: HSLFromColor(UnityEngine.Color)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: HSLFromColor(Color)
  nameWithType: RXColor.HSLFromColor(Color)
  fullName: RXColor.HSLFromColor(UnityEngine.Color)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.HSLFromColor(UnityEngine.Color)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static RXColorHSL HSLFromColor(Color rgb)
    parameters:
    - id: rgb
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rgb</parameter>
            <parameter>M:RXColor.HSLFromColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    return:
      type: Global.RXColorHSL
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.HSLFromColor(UnityEngine.Color)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function HSLFromColor(rgb As Color) As RXColorHSL
  overload: Global.RXColor.HSLFromColor*
- uid: Global.RXColor.GetColorFromHex(System.UInt32)
  commentId: M:Global.RXColor.GetColorFromHex(System.UInt32)
  id: GetColorFromHex(System.UInt32)
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: GetColorFromHex(uint)
  nameWithType: RXColor.GetColorFromHex(uint)
  fullName: RXColor.GetColorFromHex(uint)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:RXColor.GetColorFromHex(System.UInt32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public static Color GetColorFromHex(uint hex)
    parameters:
    - id: hex
      type: System.UInt32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>hex</parameter>
            <parameter>M:RXColor.GetColorFromHex(System.UInt32)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:RXColor.GetColorFromHex(System.UInt32)</parameter>
          </include>
        </markup>
    content.vb: Public Shared Function GetColorFromHex(hex As UInteger) As Color
  overload: Global.RXColor.GetColorFromHex*
  nameWithType.vb: RXColor.GetColorFromHex(UInteger)
  fullName.vb: RXColor.GetColorFromHex(UInteger)
  name.vb: GetColorFromHex(UInteger)
- uid: Global.RXColor.#ctor
  commentId: M:Global.RXColor.#ctor
  id: '#ctor'
  parent: Global.RXColor
  langs:
  - csharp
  - vb
  name: RXColor()
  nameWithType: RXColor.RXColor()
  fullName: RXColor.RXColor()
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>RXColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public RXColor()
    content.vb: Public Sub New()
  overload: Global.RXColor.#ctor*
  nameWithType.vb: RXColor.New()
  fullName.vb: RXColor.New()
  name.vb: New()
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.RXColor.ColorFromRGBString*
  commentId: Overload:Global.RXColor.ColorFromRGBString
  isExternal: true
  href: Global.RXColor.html#RXColor_ColorFromRGBString_System_String_
  name: ColorFromRGBString
  nameWithType: RXColor.ColorFromRGBString
  fullName: RXColor.ColorFromRGBString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: Global.RXColor.ColorFromHSLString*
  commentId: Overload:Global.RXColor.ColorFromHSLString
  isExternal: true
  href: Global.RXColor.html#RXColor_ColorFromHSLString_System_String_
  name: ColorFromHSLString
  nameWithType: RXColor.ColorFromHSLString
  fullName: RXColor.ColorFromHSLString
- uid: Global.RXColor.ColorFromHSL*
  commentId: Overload:Global.RXColor.ColorFromHSL
  isExternal: true
  href: Global.RXColor.html#RXColor_ColorFromHSL_RXColorHSL_
  name: ColorFromHSL
  nameWithType: RXColor.ColorFromHSL
  fullName: RXColor.ColorFromHSL
- uid: Global.RXColorHSL
  commentId: T:Global.RXColorHSL
  isExternal: true
  href: RXColorHSL.html
  name: RXColorHSL
  nameWithType: RXColorHSL
  fullName: RXColorHSL
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.RXColor.HSLFromColor*
  commentId: Overload:Global.RXColor.HSLFromColor
  isExternal: true
  href: Global.RXColor.html#RXColor_HSLFromColor_UnityEngine_Color_
  name: HSLFromColor
  nameWithType: RXColor.HSLFromColor
  fullName: RXColor.HSLFromColor
- uid: Global.RXColor.GetColorFromHex*
  commentId: Overload:Global.RXColor.GetColorFromHex
  isExternal: true
  href: Global.RXColor.html#RXColor_GetColorFromHex_System_UInt32_
  name: GetColorFromHex
  nameWithType: RXColor.GetColorFromHex
  fullName: RXColor.GetColorFromHex
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: Global.RXColor.#ctor*
  commentId: Overload:Global.RXColor.#ctor
  isExternal: true
  href: Global.RXColor.html#RXColor__ctor
  name: RXColor
  nameWithType: RXColor.RXColor
  fullName: RXColor.RXColor
  nameWithType.vb: RXColor.New
  fullName.vb: RXColor.New
  name.vb: New
