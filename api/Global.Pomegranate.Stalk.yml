### YamlMime:ManagedReference
items:
- uid: Global.Pomegranate.Stalk
  commentId: T:Global.Pomegranate.Stalk
  id: Pomegranate.Stalk
  parent: Global
  children:
  - Global.Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)
  - Global.Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  - Global.Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  - Global.Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  - Global.Pomegranate.Stalk.GetAttachmentPosition(System.Single)
  - Global.Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)
  - Global.Pomegranate.Stalk.Initialize(Room)
  - Global.Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  - Global.Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)
  - Global.Pomegranate.Stalk.ProtrusionSprite(System.Int32)
  - Global.Pomegranate.Stalk.SubStalkSprite(System.Int32)
  - Global.Pomegranate.Stalk.Update(System.Boolean)
  - Global.Pomegranate.Stalk.attachIndex
  - Global.Pomegranate.Stalk.connRad
  - Global.Pomegranate.Stalk.darkness
  - Global.Pomegranate.Stalk.data
  - Global.Pomegranate.Stalk.fruit
  - Global.Pomegranate.Stalk.generateDirection
  - Global.Pomegranate.Stalk.initialized
  - Global.Pomegranate.Stalk.isCosmetic
  - Global.Pomegranate.Stalk.protoPomegranates
  - Global.Pomegranate.Stalk.protrusions
  - Global.Pomegranate.Stalk.ropeLength
  - Global.Pomegranate.Stalk.scratchTerrainCollisionData
  - Global.Pomegranate.Stalk.segs
  - Global.Pomegranate.Stalk.shellColor
  - Global.Pomegranate.Stalk.stuckPos
  - Global.Pomegranate.Stalk.subStalks
  - Global.Pomegranate.Stalk.wallStickDirection
  langs:
  - csharp
  - vb
  name: Pomegranate.Stalk
  nameWithType: Pomegranate.Stalk
  fullName: Pomegranate.Stalk
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Pomegranate.Stalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: 'public class Pomegranate.Stalk : UpdatableAndDeletable, IDrawable'
    content.vb: Public Class Pomegranate.Stalk Inherits UpdatableAndDeletable Implements IDrawable
  inheritance:
  - System.Object
  - Global.UpdatableAndDeletable
  derivedClasses:
  - Global.Pomegranate.CosmeticStalk
  implements:
  - Global.IDrawable
  inheritedMembers:
  - Global.UpdatableAndDeletable.evenUpdate
  - Global.UpdatableAndDeletable.room
  - Global.UpdatableAndDeletable.PausedUpdate
  - Global.UpdatableAndDeletable.RemoveFromRoom
  - Global.UpdatableAndDeletable.Destroy
  - Global.UpdatableAndDeletable.slatedForDeletetion
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Pomegranate.Stalk.fruit
  commentId: F:Global.Pomegranate.Stalk.fruit
  id: fruit
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: fruit
  nameWithType: Pomegranate.Stalk.fruit
  fullName: Pomegranate.Stalk.fruit
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.fruit</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Pomegranate fruit
    return:
      type: Global.Pomegranate
    content.vb: Public fruit As Pomegranate
- uid: Global.Pomegranate.Stalk.stuckPos
  commentId: F:Global.Pomegranate.Stalk.stuckPos
  id: stuckPos
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: stuckPos
  nameWithType: Pomegranate.Stalk.stuckPos
  fullName: Pomegranate.Stalk.stuckPos
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.stuckPos</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 stuckPos
    return:
      type: UnityEngine.Vector2
    content.vb: Public stuckPos As Vector2
- uid: Global.Pomegranate.Stalk.ropeLength
  commentId: F:Global.Pomegranate.Stalk.ropeLength
  id: ropeLength
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: ropeLength
  nameWithType: Pomegranate.Stalk.ropeLength
  fullName: Pomegranate.Stalk.ropeLength
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.ropeLength</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float ropeLength
    return:
      type: System.Single
    content.vb: Public ropeLength As Single
- uid: Global.Pomegranate.Stalk.attachIndex
  commentId: F:Global.Pomegranate.Stalk.attachIndex
  id: attachIndex
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: attachIndex
  nameWithType: Pomegranate.Stalk.attachIndex
  fullName: Pomegranate.Stalk.attachIndex
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.attachIndex</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int attachIndex
    return:
      type: System.Int32
    content.vb: Public attachIndex As Integer
- uid: Global.Pomegranate.Stalk.wallStickDirection
  commentId: F:Global.Pomegranate.Stalk.wallStickDirection
  id: wallStickDirection
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: wallStickDirection
  nameWithType: Pomegranate.Stalk.wallStickDirection
  fullName: Pomegranate.Stalk.wallStickDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.wallStickDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 wallStickDirection
    return:
      type: UnityEngine.Vector2
    content.vb: Public wallStickDirection As Vector2
- uid: Global.Pomegranate.Stalk.generateDirection
  commentId: F:Global.Pomegranate.Stalk.generateDirection
  id: generateDirection
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: generateDirection
  nameWithType: Pomegranate.Stalk.generateDirection
  fullName: Pomegranate.Stalk.generateDirection
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.generateDirection</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 generateDirection
    return:
      type: UnityEngine.Vector2
    content.vb: Public generateDirection As Vector2
- uid: Global.Pomegranate.Stalk.scratchTerrainCollisionData
  commentId: F:Global.Pomegranate.Stalk.scratchTerrainCollisionData
  id: scratchTerrainCollisionData
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: scratchTerrainCollisionData
  nameWithType: Pomegranate.Stalk.scratchTerrainCollisionData
  fullName: Pomegranate.Stalk.scratchTerrainCollisionData
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.scratchTerrainCollisionData</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public SharedPhysics.TerrainCollisionData scratchTerrainCollisionData
    return:
      type: Global.SharedPhysics.TerrainCollisionData
    content.vb: Public scratchTerrainCollisionData As SharedPhysics.TerrainCollisionData
- uid: Global.Pomegranate.Stalk.shellColor
  commentId: F:Global.Pomegranate.Stalk.shellColor
  id: shellColor
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: shellColor
  nameWithType: Pomegranate.Stalk.shellColor
  fullName: Pomegranate.Stalk.shellColor
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.shellColor</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color shellColor
    return:
      type: UnityEngine.Color
    content.vb: Public shellColor As Color
- uid: Global.Pomegranate.Stalk.segs
  commentId: F:Global.Pomegranate.Stalk.segs
  id: segs
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: segs
  nameWithType: Pomegranate.Stalk.segs
  fullName: Pomegranate.Stalk.segs
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.segs</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2[,] segs
    return:
      type: UnityEngine.Vector2[,]
    content.vb: Public segs As Vector2(,)
- uid: Global.Pomegranate.Stalk.darkness
  commentId: F:Global.Pomegranate.Stalk.darkness
  id: darkness
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: darkness
  nameWithType: Pomegranate.Stalk.darkness
  fullName: Pomegranate.Stalk.darkness
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.darkness</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] darkness
    return:
      type: System.Single[,]
    content.vb: Public darkness As Single(,)
- uid: Global.Pomegranate.Stalk.protrusions
  commentId: F:Global.Pomegranate.Stalk.protrusions
  id: protrusions
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: protrusions
  nameWithType: Pomegranate.Stalk.protrusions
  fullName: Pomegranate.Stalk.protrusions
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.protrusions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[,] protrusions
    return:
      type: System.Single[,]
    content.vb: Public protrusions As Single(,)
- uid: Global.Pomegranate.Stalk.protoPomegranates
  commentId: F:Global.Pomegranate.Stalk.protoPomegranates
  id: protoPomegranates
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: protoPomegranates
  nameWithType: Pomegranate.Stalk.protoPomegranates
  fullName: Pomegranate.Stalk.protoPomegranates
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.protoPomegranates</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float[] protoPomegranates
    return:
      type: System.Single[]
    content.vb: Public protoPomegranates As Single()
- uid: Global.Pomegranate.Stalk.subStalks
  commentId: F:Global.Pomegranate.Stalk.subStalks
  id: subStalks
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: subStalks
  nameWithType: Pomegranate.Stalk.subStalks
  fullName: Pomegranate.Stalk.subStalks
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.subStalks</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<Pomegranate.SubStalk> subStalks
    return:
      type: System.Collections.Generic.List{Pomegranate.SubStalk}
    content.vb: Public subStalks As List(Of Pomegranate.SubStalk)
- uid: Global.Pomegranate.Stalk.initialized
  commentId: F:Global.Pomegranate.Stalk.initialized
  id: initialized
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: initialized
  nameWithType: Pomegranate.Stalk.initialized
  fullName: Pomegranate.Stalk.initialized
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.initialized</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool initialized
    return:
      type: System.Boolean
    content.vb: Public initialized As Boolean
- uid: Global.Pomegranate.Stalk.connRad
  commentId: F:Global.Pomegranate.Stalk.connRad
  id: connRad
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: connRad
  nameWithType: Pomegranate.Stalk.connRad
  fullName: Pomegranate.Stalk.connRad
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Pomegranate.Stalk.connRad</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float connRad
    return:
      type: System.Single
    content.vb: Public connRad As Single
- uid: Global.Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)
  commentId: M:Global.Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)
  id: '#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)'
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: Stalk(Pomegranate, Room, Vector2, int)
  nameWithType: Pomegranate.Stalk.Stalk(Pomegranate, Room, Vector2, int)
  fullName: Pomegranate.Stalk.Stalk(Pomegranate, Room, UnityEngine.Vector2, int)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Pomegranate.Stalk</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Stalk(Pomegranate fruit, Room room, Vector2 fruitPos, int index)
    parameters:
    - id: fruit
      type: Global.Pomegranate
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fruit</parameter>
            <parameter>M:Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: room
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>room</parameter>
            <parameter>M:Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: fruitPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>fruitPos</parameter>
            <parameter>M:Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Pomegranate.Stalk.#ctor(Pomegranate,Room,UnityEngine.Vector2,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(fruit As Pomegranate, room As Room, fruitPos As Vector2, index As Integer)
  overload: Global.Pomegranate.Stalk.#ctor*
  nameWithType.vb: Pomegranate.Stalk.New(Pomegranate, Room, Vector2, Integer)
  fullName.vb: Pomegranate.Stalk.New(Pomegranate, Room, UnityEngine.Vector2, Integer)
  name.vb: New(Pomegranate, Room, Vector2, Integer)
- uid: Global.Pomegranate.Stalk.Initialize(Room)
  commentId: M:Global.Pomegranate.Stalk.Initialize(Room)
  id: Initialize(Room)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: Initialize(Room)
  nameWithType: Pomegranate.Stalk.Initialize(Room)
  fullName: Pomegranate.Stalk.Initialize(Room)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.Initialize(Room)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void Initialize(Room placeRoom)
    parameters:
    - id: placeRoom
      type: Global.Room
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>placeRoom</parameter>
            <parameter>M:Pomegranate.Stalk.Initialize(Room)</parameter>
          </include>
        </markup>
    content.vb: Public Sub Initialize(placeRoom As Room)
  overload: Global.Pomegranate.Stalk.Initialize*
- uid: Global.Pomegranate.Stalk.Update(System.Boolean)
  commentId: M:Global.Pomegranate.Stalk.Update(System.Boolean)
  id: Update(System.Boolean)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: Update(bool)
  nameWithType: Pomegranate.Stalk.Update(bool)
  fullName: Pomegranate.Stalk.Update(bool)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.Update(System.Boolean)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public override void Update(bool eu)
    parameters:
    - id: eu
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>eu</parameter>
            <parameter>M:Pomegranate.Stalk.Update(System.Boolean)</parameter>
          </include>
        </markup>
    content.vb: Public Overrides Sub Update(eu As Boolean)
  overridden: Global.UpdatableAndDeletable.Update(System.Boolean)
  overload: Global.Pomegranate.Stalk.Update*
  nameWithType.vb: Pomegranate.Stalk.Update(Boolean)
  fullName.vb: Pomegranate.Stalk.Update(Boolean)
  name.vb: Update(Boolean)
- uid: Global.Pomegranate.Stalk.GetAttachmentPosition(System.Single)
  commentId: M:Global.Pomegranate.Stalk.GetAttachmentPosition(System.Single)
  id: GetAttachmentPosition(System.Single)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: GetAttachmentPosition(float)
  nameWithType: Pomegranate.Stalk.GetAttachmentPosition(float)
  fullName: Pomegranate.Stalk.GetAttachmentPosition(float)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.GetAttachmentPosition(System.Single)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Vector2 GetAttachmentPosition(float timeStacker)
    parameters:
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Pomegranate.Stalk.GetAttachmentPosition(System.Single)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.Stalk.GetAttachmentPosition(System.Single)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetAttachmentPosition(timeStacker As Single) As Vector2
  overload: Global.Pomegranate.Stalk.GetAttachmentPosition*
  nameWithType.vb: Pomegranate.Stalk.GetAttachmentPosition(Single)
  fullName.vb: Pomegranate.Stalk.GetAttachmentPosition(Single)
  name.vb: GetAttachmentPosition(Single)
- uid: Global.Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)
  commentId: M:Global.Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)
  id: GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: GetColorAtLength(int, int, int, bool, RoomPalette, Vector2, RoomCamera)
  nameWithType: Pomegranate.Stalk.GetColorAtLength(int, int, int, bool, RoomPalette, Vector2, RoomCamera)
  fullName: Pomegranate.Stalk.GetColorAtLength(int, int, int, bool, RoomPalette, UnityEngine.Vector2, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Color GetColorAtLength(int index, int cap, int coloredPoints, bool isShade, RoomPalette palette, Vector2 position, RoomCamera rCam)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: cap
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>cap</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: coloredPoints
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>coloredPoints</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: isShade
      type: System.Boolean
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>isShade</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: position
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>position</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    return:
      type: UnityEngine.Color
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.Stalk.GetColorAtLength(System.Int32,System.Int32,System.Int32,System.Boolean,RoomPalette,UnityEngine.Vector2,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Function GetColorAtLength(index As Integer, cap As Integer, coloredPoints As Integer, isShade As Boolean, palette As RoomPalette, position As Vector2, rCam As RoomCamera) As Color
  overload: Global.Pomegranate.Stalk.GetColorAtLength*
  nameWithType.vb: Pomegranate.Stalk.GetColorAtLength(Integer, Integer, Integer, Boolean, RoomPalette, Vector2, RoomCamera)
  fullName.vb: Pomegranate.Stalk.GetColorAtLength(Integer, Integer, Integer, Boolean, RoomPalette, UnityEngine.Vector2, RoomCamera)
  name.vb: GetColorAtLength(Integer, Integer, Integer, Boolean, RoomPalette, Vector2, RoomCamera)
- uid: Global.Pomegranate.Stalk.ProtrusionSprite(System.Int32)
  commentId: M:Global.Pomegranate.Stalk.ProtrusionSprite(System.Int32)
  id: ProtrusionSprite(System.Int32)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: ProtrusionSprite(int)
  nameWithType: Pomegranate.Stalk.ProtrusionSprite(int)
  fullName: Pomegranate.Stalk.ProtrusionSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.ProtrusionSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ProtrusionSprite(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Pomegranate.Stalk.ProtrusionSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.Stalk.ProtrusionSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ProtrusionSprite(index As Integer) As Integer
  overload: Global.Pomegranate.Stalk.ProtrusionSprite*
  nameWithType.vb: Pomegranate.Stalk.ProtrusionSprite(Integer)
  fullName.vb: Pomegranate.Stalk.ProtrusionSprite(Integer)
  name.vb: ProtrusionSprite(Integer)
- uid: Global.Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)
  commentId: M:Global.Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)
  id: ProtoSprite(System.Int32,System.Int32)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: ProtoSprite(int, int)
  nameWithType: Pomegranate.Stalk.ProtoSprite(int, int)
  fullName: Pomegranate.Stalk.ProtoSprite(int, int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int ProtoSprite(int index, int shade)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    - id: shade
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>shade</parameter>
            <parameter>M:Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.Stalk.ProtoSprite(System.Int32,System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function ProtoSprite(index As Integer, shade As Integer) As Integer
  overload: Global.Pomegranate.Stalk.ProtoSprite*
  nameWithType.vb: Pomegranate.Stalk.ProtoSprite(Integer, Integer)
  fullName.vb: Pomegranate.Stalk.ProtoSprite(Integer, Integer)
  name.vb: ProtoSprite(Integer, Integer)
- uid: Global.Pomegranate.Stalk.SubStalkSprite(System.Int32)
  commentId: M:Global.Pomegranate.Stalk.SubStalkSprite(System.Int32)
  id: SubStalkSprite(System.Int32)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: SubStalkSprite(int)
  nameWithType: Pomegranate.Stalk.SubStalkSprite(int)
  fullName: Pomegranate.Stalk.SubStalkSprite(int)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.SubStalkSprite(System.Int32)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int SubStalkSprite(int index)
    parameters:
    - id: index
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>index</parameter>
            <parameter>M:Pomegranate.Stalk.SubStalkSprite(System.Int32)</parameter>
          </include>
        </markup>
    return:
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingTag">
            <parameter>returns</parameter>
            <parameter>M:Pomegranate.Stalk.SubStalkSprite(System.Int32)</parameter>
          </include>
        </markup>
    content.vb: Public Function SubStalkSprite(index As Integer) As Integer
  overload: Global.Pomegranate.Stalk.SubStalkSprite*
  nameWithType.vb: Pomegranate.Stalk.SubStalkSprite(Integer)
  fullName.vb: Pomegranate.Stalk.SubStalkSprite(Integer)
  name.vb: SubStalkSprite(Integer)
- uid: Global.Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  id: InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void InitiateSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.Stalk.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)</parameter>
          </include>
        </markup>
    content.vb: Public Sub InitiateSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera)
  overload: Global.Pomegranate.Stalk.InitiateSprites*
  implements:
  - Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
- uid: Global.Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  id: DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void DrawSprites(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, float timeStacker, Vector2 camPos)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: timeStacker
      type: System.Single
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>timeStacker</parameter>
            <parameter>M:Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    - id: camPos
      type: UnityEngine.Vector2
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>camPos</parameter>
            <parameter>M:Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)</parameter>
          </include>
        </markup>
    content.vb: Public Sub DrawSprites(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, timeStacker As Single, camPos As Vector2)
  overload: Global.Pomegranate.Stalk.DrawSprites*
  implements:
  - Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  nameWithType.vb: Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: Pomegranate.Stalk.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
- uid: Global.Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  id: ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void ApplyPalette(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, RoomPalette palette)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    - id: palette
      type: Global.RoomPalette
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>palette</parameter>
            <parameter>M:Pomegranate.Stalk.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)</parameter>
          </include>
        </markup>
    content.vb: Public Sub ApplyPalette(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, palette As RoomPalette)
  overload: Global.Pomegranate.Stalk.ApplyPalette*
  implements:
  - Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
- uid: Global.Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  id: AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  type: Method
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>M:Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public void AddToContainer(RoomCamera.SpriteLeaser sLeaser, RoomCamera rCam, FContainer newContatiner)
    parameters:
    - id: sLeaser
      type: Global.RoomCamera.SpriteLeaser
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sLeaser</parameter>
            <parameter>M:Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: rCam
      type: Global.RoomCamera
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>rCam</parameter>
            <parameter>M:Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    - id: newContatiner
      type: Global.FContainer
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>newContatiner</parameter>
            <parameter>M:Pomegranate.Stalk.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)</parameter>
          </include>
        </markup>
    content.vb: Public Sub AddToContainer(sLeaser As RoomCamera.SpriteLeaser, rCam As RoomCamera, newContatiner As FContainer)
  overload: Global.Pomegranate.Stalk.AddToContainer*
  implements:
  - Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
- uid: Global.Pomegranate.Stalk.data
  commentId: P:Global.Pomegranate.Stalk.data
  id: data
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: data
  nameWithType: Pomegranate.Stalk.data
  fullName: Pomegranate.Stalk.data
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.Stalk.data</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public PlacedObject.PomegranateData data { get; }
    parameters: []
    return:
      type: Global.PlacedObject.PomegranateData
    content.vb: Public ReadOnly Property data As PlacedObject.PomegranateData
  overload: Global.Pomegranate.Stalk.data*
- uid: Global.Pomegranate.Stalk.isCosmetic
  commentId: P:Global.Pomegranate.Stalk.isCosmetic
  id: isCosmetic
  parent: Global.Pomegranate.Stalk
  langs:
  - csharp
  - vb
  name: isCosmetic
  nameWithType: Pomegranate.Stalk.isCosmetic
  fullName: Pomegranate.Stalk.isCosmetic
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:Pomegranate.Stalk.isCosmetic</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public bool isCosmetic { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property isCosmetic As Boolean
  overload: Global.Pomegranate.Stalk.isCosmetic*
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Global.UpdatableAndDeletable
  commentId: T:Global.UpdatableAndDeletable
  isExternal: true
  href: UpdatableAndDeletable.html
  name: UpdatableAndDeletable
  nameWithType: UpdatableAndDeletable
  fullName: UpdatableAndDeletable
- uid: Global.IDrawable
  commentId: T:Global.IDrawable
  isExternal: true
  href: IDrawable.html
  name: IDrawable
  nameWithType: IDrawable
  fullName: IDrawable
- uid: Global.UpdatableAndDeletable.evenUpdate
  commentId: F:Global.UpdatableAndDeletable.evenUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_evenUpdate
  name: evenUpdate
  nameWithType: UpdatableAndDeletable.evenUpdate
  fullName: UpdatableAndDeletable.evenUpdate
- uid: Global.UpdatableAndDeletable.room
  commentId: F:Global.UpdatableAndDeletable.room
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_room
  name: room
  nameWithType: UpdatableAndDeletable.room
  fullName: UpdatableAndDeletable.room
- uid: Global.UpdatableAndDeletable.PausedUpdate
  commentId: M:Global.UpdatableAndDeletable.PausedUpdate
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  name: PausedUpdate()
  nameWithType: UpdatableAndDeletable.PausedUpdate()
  fullName: UpdatableAndDeletable.PausedUpdate()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.PausedUpdate
    name: PausedUpdate
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_PausedUpdate
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.RemoveFromRoom
  commentId: M:Global.UpdatableAndDeletable.RemoveFromRoom
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  name: RemoveFromRoom()
  nameWithType: UpdatableAndDeletable.RemoveFromRoom()
  fullName: UpdatableAndDeletable.RemoveFromRoom()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.RemoveFromRoom
    name: RemoveFromRoom
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_RemoveFromRoom
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.Destroy
  commentId: M:Global.UpdatableAndDeletable.Destroy
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  name: Destroy()
  nameWithType: UpdatableAndDeletable.Destroy()
  fullName: UpdatableAndDeletable.Destroy()
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Destroy
    name: Destroy
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Destroy
  - name: (
  - name: )
- uid: Global.UpdatableAndDeletable.slatedForDeletetion
  commentId: P:Global.UpdatableAndDeletable.slatedForDeletetion
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_slatedForDeletetion
  name: slatedForDeletetion
  nameWithType: UpdatableAndDeletable.slatedForDeletetion
  fullName: UpdatableAndDeletable.slatedForDeletetion
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Pomegranate
  commentId: T:Global.Pomegranate
  isExternal: true
  href: Pomegranate.html
  name: Pomegranate
  nameWithType: Pomegranate
  fullName: Pomegranate
- uid: UnityEngine.Vector2
  isExternal: true
  name: Vector2
  nameWithType: Vector2
  fullName: UnityEngine.Vector2
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Global.SharedPhysics.TerrainCollisionData
  commentId: T:Global.SharedPhysics.TerrainCollisionData
  isExternal: true
  href: SharedPhysics.html
  name: SharedPhysics.TerrainCollisionData
  nameWithType: SharedPhysics.TerrainCollisionData
  fullName: SharedPhysics.TerrainCollisionData
  spec.csharp:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
  spec.vb:
  - uid: Global.SharedPhysics
    name: SharedPhysics
    isExternal: true
    href: SharedPhysics.html
  - name: .
  - uid: Global.SharedPhysics.TerrainCollisionData
    name: TerrainCollisionData
    isExternal: true
    href: SharedPhysics.TerrainCollisionData.html
- uid: UnityEngine.Color
  isExternal: true
  name: Color
  nameWithType: Color
  fullName: UnityEngine.Color
- uid: UnityEngine.Vector2[,]
  isExternal: true
  name: Vector2[,]
  nameWithType: Vector2[,]
  fullName: UnityEngine.Vector2[,]
  nameWithType.vb: Vector2(,)
  fullName.vb: UnityEngine.Vector2(,)
  name.vb: Vector2(,)
  spec.csharp:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: (
  - name: ','
  - name: )
- uid: System.Single[,]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[,]
  nameWithType: float[,]
  fullName: float[,]
  nameWithType.vb: Single(,)
  fullName.vb: Single(,)
  name.vb: Single(,)
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ','
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: ','
  - name: )
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Collections.Generic.List{Pomegranate.SubStalk}
  commentId: T:System.Collections.Generic.List{Pomegranate.SubStalk}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Pomegranate.SubStalk>
  nameWithType: List<Pomegranate.SubStalk>
  fullName: System.Collections.Generic.List<Pomegranate.SubStalk>
  nameWithType.vb: List(Of Pomegranate.SubStalk)
  fullName.vb: System.Collections.Generic.List(Of Pomegranate.SubStalk)
  name.vb: List(Of Pomegranate.SubStalk)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.Pomegranate
    name: Pomegranate
    isExternal: true
    href: Pomegranate.html
  - name: .
  - uid: Global.Pomegranate.SubStalk
    name: SubStalk
    isExternal: true
    href: Pomegranate.SubStalk.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.Pomegranate
    name: Pomegranate
    isExternal: true
    href: Pomegranate.html
  - name: .
  - uid: Global.Pomegranate.SubStalk
    name: SubStalk
    isExternal: true
    href: Pomegranate.SubStalk.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Global.Pomegranate.Stalk.#ctor*
  commentId: Overload:Global.Pomegranate.Stalk.#ctor
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk__ctor_Pomegranate_Room_UnityEngine_Vector2_System_Int32_
  name: Stalk
  nameWithType: Pomegranate.Stalk.Stalk
  fullName: Pomegranate.Stalk.Stalk
  nameWithType.vb: Pomegranate.Stalk.New
  fullName.vb: Pomegranate.Stalk.New
  name.vb: New
- uid: Global.Room
  commentId: T:Global.Room
  isExternal: true
  href: Room.html
  name: Room
  nameWithType: Room
  fullName: Room
- uid: Global.Pomegranate.Stalk.Initialize*
  commentId: Overload:Global.Pomegranate.Stalk.Initialize
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_Initialize_Room_
  name: Initialize
  nameWithType: Pomegranate.Stalk.Initialize
  fullName: Pomegranate.Stalk.Initialize
- uid: Global.UpdatableAndDeletable.Update(System.Boolean)
  commentId: M:Global.UpdatableAndDeletable.Update(System.Boolean)
  parent: Global.UpdatableAndDeletable
  isExternal: true
  href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  name: Update(bool)
  nameWithType: UpdatableAndDeletable.Update(bool)
  fullName: UpdatableAndDeletable.Update(bool)
  nameWithType.vb: UpdatableAndDeletable.Update(Boolean)
  fullName.vb: UpdatableAndDeletable.Update(Boolean)
  name.vb: Update(Boolean)
  spec.csharp:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Global.UpdatableAndDeletable.Update(System.Boolean)
    name: Update
    isExternal: true
    href: Global.UpdatableAndDeletable.html#UpdatableAndDeletable_Update_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Global.Pomegranate.Stalk.Update*
  commentId: Overload:Global.Pomegranate.Stalk.Update
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_Update_System_Boolean_
  name: Update
  nameWithType: Pomegranate.Stalk.Update
  fullName: Pomegranate.Stalk.Update
- uid: Global.Pomegranate.Stalk.GetAttachmentPosition*
  commentId: Overload:Global.Pomegranate.Stalk.GetAttachmentPosition
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_GetAttachmentPosition_System_Single_
  name: GetAttachmentPosition
  nameWithType: Pomegranate.Stalk.GetAttachmentPosition
  fullName: Pomegranate.Stalk.GetAttachmentPosition
- uid: Global.Pomegranate.Stalk.GetColorAtLength*
  commentId: Overload:Global.Pomegranate.Stalk.GetColorAtLength
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_GetColorAtLength_System_Int32_System_Int32_System_Int32_System_Boolean_RoomPalette_UnityEngine_Vector2_RoomCamera_
  name: GetColorAtLength
  nameWithType: Pomegranate.Stalk.GetColorAtLength
  fullName: Pomegranate.Stalk.GetColorAtLength
- uid: Global.RoomPalette
  commentId: T:Global.RoomPalette
  isExternal: true
  href: RoomPalette.html
  name: RoomPalette
  nameWithType: RoomPalette
  fullName: RoomPalette
- uid: Global.RoomCamera
  commentId: T:Global.RoomCamera
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera
  nameWithType: RoomCamera
  fullName: RoomCamera
- uid: Global.Pomegranate.Stalk.ProtrusionSprite*
  commentId: Overload:Global.Pomegranate.Stalk.ProtrusionSprite
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_ProtrusionSprite_System_Int32_
  name: ProtrusionSprite
  nameWithType: Pomegranate.Stalk.ProtrusionSprite
  fullName: Pomegranate.Stalk.ProtrusionSprite
- uid: Global.Pomegranate.Stalk.ProtoSprite*
  commentId: Overload:Global.Pomegranate.Stalk.ProtoSprite
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_ProtoSprite_System_Int32_System_Int32_
  name: ProtoSprite
  nameWithType: Pomegranate.Stalk.ProtoSprite
  fullName: Pomegranate.Stalk.ProtoSprite
- uid: Global.Pomegranate.Stalk.SubStalkSprite*
  commentId: Overload:Global.Pomegranate.Stalk.SubStalkSprite
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_SubStalkSprite_System_Int32_
  name: SubStalkSprite
  nameWithType: Pomegranate.Stalk.SubStalkSprite
  fullName: Pomegranate.Stalk.SubStalkSprite
- uid: Global.Pomegranate.Stalk.InitiateSprites*
  commentId: Overload:Global.Pomegranate.Stalk.InitiateSprites
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites
  nameWithType: Pomegranate.Stalk.InitiateSprites
  fullName: Pomegranate.Stalk.InitiateSprites
- uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  commentId: M:Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  name: InitiateSprites(SpriteLeaser, RoomCamera)
  nameWithType: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  fullName: IDrawable.InitiateSprites(RoomCamera.SpriteLeaser, RoomCamera)
  spec.csharp:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.InitiateSprites(RoomCamera.SpriteLeaser,RoomCamera)
    name: InitiateSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_InitiateSprites_RoomCamera_SpriteLeaser_RoomCamera_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: )
- uid: Global.RoomCamera.SpriteLeaser
  commentId: T:Global.RoomCamera.SpriteLeaser
  isExternal: true
  href: RoomCamera.html
  name: RoomCamera.SpriteLeaser
  nameWithType: RoomCamera.SpriteLeaser
  fullName: RoomCamera.SpriteLeaser
  spec.csharp:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  spec.vb:
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: .
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
- uid: Global.Pomegranate.Stalk.DrawSprites*
  commentId: Overload:Global.Pomegranate.Stalk.DrawSprites
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites
  nameWithType: Pomegranate.Stalk.DrawSprites
  fullName: Pomegranate.Stalk.DrawSprites
- uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  commentId: M:Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  name: DrawSprites(SpriteLeaser, RoomCamera, float, Vector2)
  nameWithType: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, Vector2)
  fullName: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, float, UnityEngine.Vector2)
  nameWithType.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, Vector2)
  fullName.vb: IDrawable.DrawSprites(RoomCamera.SpriteLeaser, RoomCamera, Single, UnityEngine.Vector2)
  name.vb: DrawSprites(SpriteLeaser, RoomCamera, Single, Vector2)
  spec.csharp:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
  spec.vb:
  - uid: Global.IDrawable.DrawSprites(RoomCamera.SpriteLeaser,RoomCamera,System.Single,UnityEngine.Vector2)
    name: DrawSprites
    isExternal: true
    href: Global.IDrawable.html#IDrawable_DrawSprites_RoomCamera_SpriteLeaser_RoomCamera_System_Single_UnityEngine_Vector2_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: ','
  - name: " "
  - uid: UnityEngine.Vector2
    name: Vector2
    isExternal: true
  - name: )
- uid: Global.Pomegranate.Stalk.ApplyPalette*
  commentId: Overload:Global.Pomegranate.Stalk.ApplyPalette
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette
  nameWithType: Pomegranate.Stalk.ApplyPalette
  fullName: Pomegranate.Stalk.ApplyPalette
- uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  commentId: M:Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  name: ApplyPalette(SpriteLeaser, RoomCamera, RoomPalette)
  nameWithType: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  fullName: IDrawable.ApplyPalette(RoomCamera.SpriteLeaser, RoomCamera, RoomPalette)
  spec.csharp:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.ApplyPalette(RoomCamera.SpriteLeaser,RoomCamera,RoomPalette)
    name: ApplyPalette
    isExternal: true
    href: Global.IDrawable.html#IDrawable_ApplyPalette_RoomCamera_SpriteLeaser_RoomCamera_RoomPalette_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.RoomPalette
    name: RoomPalette
    isExternal: true
    href: RoomPalette.html
  - name: )
- uid: Global.Pomegranate.Stalk.AddToContainer*
  commentId: Overload:Global.Pomegranate.Stalk.AddToContainer
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer
  nameWithType: Pomegranate.Stalk.AddToContainer
  fullName: Pomegranate.Stalk.AddToContainer
- uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  commentId: M:Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
  parent: Global.IDrawable
  isExternal: true
  href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  name: AddToContainer(SpriteLeaser, RoomCamera, FContainer)
  nameWithType: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  fullName: IDrawable.AddToContainer(RoomCamera.SpriteLeaser, RoomCamera, FContainer)
  spec.csharp:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
  spec.vb:
  - uid: Global.IDrawable.AddToContainer(RoomCamera.SpriteLeaser,RoomCamera,FContainer)
    name: AddToContainer
    isExternal: true
    href: Global.IDrawable.html#IDrawable_AddToContainer_RoomCamera_SpriteLeaser_RoomCamera_FContainer_
  - name: (
  - uid: Global.RoomCamera.SpriteLeaser
    name: SpriteLeaser
    isExternal: true
    href: RoomCamera.SpriteLeaser.html
  - name: ','
  - name: " "
  - uid: Global.RoomCamera
    name: RoomCamera
    isExternal: true
    href: RoomCamera.html
  - name: ','
  - name: " "
  - uid: Global.FContainer
    name: FContainer
    isExternal: true
    href: FContainer.html
  - name: )
- uid: Global.FContainer
  commentId: T:Global.FContainer
  isExternal: true
  href: FContainer.html
  name: FContainer
  nameWithType: FContainer
  fullName: FContainer
- uid: Global.Pomegranate.Stalk.data*
  commentId: Overload:Global.Pomegranate.Stalk.data
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_data
  name: data
  nameWithType: Pomegranate.Stalk.data
  fullName: Pomegranate.Stalk.data
- uid: Global.PlacedObject.PomegranateData
  commentId: T:Global.PlacedObject.PomegranateData
  isExternal: true
  href: PlacedObject.html
  name: PlacedObject.PomegranateData
  nameWithType: PlacedObject.PomegranateData
  fullName: PlacedObject.PomegranateData
  spec.csharp:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.PomegranateData
    name: PomegranateData
    isExternal: true
    href: PlacedObject.PomegranateData.html
  spec.vb:
  - uid: Global.PlacedObject
    name: PlacedObject
    isExternal: true
    href: PlacedObject.html
  - name: .
  - uid: Global.PlacedObject.PomegranateData
    name: PomegranateData
    isExternal: true
    href: PlacedObject.PomegranateData.html
- uid: Global.Pomegranate.Stalk.isCosmetic*
  commentId: Overload:Global.Pomegranate.Stalk.isCosmetic
  isExternal: true
  href: Global.Pomegranate.Stalk.html#Pomegranate_Stalk_isCosmetic
  name: isCosmetic
  nameWithType: Pomegranate.Stalk.isCosmetic
  fullName: Pomegranate.Stalk.isCosmetic
