### YamlMime:ManagedReference
items:
- uid: Global.Leech.LeechSchool.LeechPrey
  commentId: T:Global.Leech.LeechSchool.LeechPrey
  id: Leech.LeechSchool.LeechPrey
  parent: Global
  children:
  - Global.Leech.LeechSchool.LeechPrey.#ctor(Creature)
  - Global.Leech.LeechSchool.LeechPrey.bitesAfterDeath
  - Global.Leech.LeechSchool.LeechPrey.creature
  - Global.Leech.LeechSchool.LeechPrey.forgetCounter
  langs:
  - csharp
  - vb
  name: Leech.LeechSchool.LeechPrey
  nameWithType: Leech.LeechSchool.LeechPrey
  fullName: Leech.LeechSchool.LeechPrey
  type: Class
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:Leech.LeechSchool.LeechPrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public class Leech.LeechSchool.LeechPrey
    content.vb: Public Class Leech.LeechSchool.LeechPrey
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: Global.Leech.LeechSchool.LeechPrey.creature
  commentId: F:Global.Leech.LeechSchool.LeechPrey.creature
  id: creature
  parent: Global.Leech.LeechSchool.LeechPrey
  langs:
  - csharp
  - vb
  name: creature
  nameWithType: Leech.LeechSchool.LeechPrey.creature
  fullName: Leech.LeechSchool.LeechPrey.creature
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Leech.LeechSchool.LeechPrey.creature</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public Creature creature
    return:
      type: Global.Creature
    content.vb: Public creature As Creature
- uid: Global.Leech.LeechSchool.LeechPrey.forgetCounter
  commentId: F:Global.Leech.LeechSchool.LeechPrey.forgetCounter
  id: forgetCounter
  parent: Global.Leech.LeechSchool.LeechPrey
  langs:
  - csharp
  - vb
  name: forgetCounter
  nameWithType: Leech.LeechSchool.LeechPrey.forgetCounter
  fullName: Leech.LeechSchool.LeechPrey.forgetCounter
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Leech.LeechSchool.LeechPrey.forgetCounter</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int forgetCounter
    return:
      type: System.Int32
    content.vb: Public forgetCounter As Integer
- uid: Global.Leech.LeechSchool.LeechPrey.bitesAfterDeath
  commentId: F:Global.Leech.LeechSchool.LeechPrey.bitesAfterDeath
  id: bitesAfterDeath
  parent: Global.Leech.LeechSchool.LeechPrey
  langs:
  - csharp
  - vb
  name: bitesAfterDeath
  nameWithType: Leech.LeechSchool.LeechPrey.bitesAfterDeath
  fullName: Leech.LeechSchool.LeechPrey.bitesAfterDeath
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:Leech.LeechSchool.LeechPrey.bitesAfterDeath</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public float bitesAfterDeath
    return:
      type: System.Single
    content.vb: Public bitesAfterDeath As Single
- uid: Global.Leech.LeechSchool.LeechPrey.#ctor(Creature)
  commentId: M:Global.Leech.LeechSchool.LeechPrey.#ctor(Creature)
  id: '#ctor(Creature)'
  parent: Global.Leech.LeechSchool.LeechPrey
  langs:
  - csharp
  - vb
  name: LeechPrey(Creature)
  nameWithType: Leech.LeechSchool.LeechPrey.LeechPrey(Creature)
  fullName: Leech.LeechSchool.LeechPrey.LeechPrey(Creature)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>Leech.LeechSchool.LeechPrey</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public LeechPrey(Creature creature)
    parameters:
    - id: creature
      type: Global.Creature
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>creature</parameter>
            <parameter>M:Leech.LeechSchool.LeechPrey.#ctor(Creature)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(creature As Creature)
  overload: Global.Leech.LeechSchool.LeechPrey.#ctor*
  nameWithType.vb: Leech.LeechSchool.LeechPrey.New(Creature)
  fullName.vb: Leech.LeechSchool.LeechPrey.New(Creature)
  name.vb: New(Creature)
references:
- uid: Global
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Global.Creature
  commentId: T:Global.Creature
  isExternal: true
  href: Creature.html
  name: Creature
  nameWithType: Creature
  fullName: Creature
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float
  nameWithType: float
  fullName: float
  nameWithType.vb: Single
  fullName.vb: Single
  name.vb: Single
- uid: Global.Leech.LeechSchool.LeechPrey.#ctor*
  commentId: Overload:Global.Leech.LeechSchool.LeechPrey.#ctor
  isExternal: true
  href: Global.Leech.LeechSchool.LeechPrey.html#Leech_LeechSchool_LeechPrey__ctor_Creature_
  name: LeechPrey
  nameWithType: Leech.LeechSchool.LeechPrey.LeechPrey
  fullName: Leech.LeechSchool.LeechPrey.LeechPrey
  nameWithType.vb: Leech.LeechSchool.LeechPrey.New
  fullName.vb: Leech.LeechSchool.LeechPrey.New
  name.vb: New
