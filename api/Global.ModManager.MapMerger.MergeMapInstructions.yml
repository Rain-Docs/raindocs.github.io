### YamlMime:ManagedReference
items:
- uid: Global.ModManager.MapMerger.MergeMapInstructions
  commentId: T:Global.ModManager.MapMerger.MergeMapInstructions
  id: ModManager.MapMerger.MergeMapInstructions
  parent: Global
  children:
  - Global.ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)
  - Global.ModManager.MapMerger.MergeMapInstructions.applyOrder
  - Global.ModManager.MapMerger.MergeMapInstructions.destinationFile
  - Global.ModManager.MapMerger.MergeMapInstructions.fileName
  - Global.ModManager.MapMerger.MergeMapInstructions.mapsToMerge
  - Global.ModManager.MapMerger.MergeMapInstructions.sourceFile
  langs:
  - csharp
  - vb
  name: ModManager.MapMerger.MergeMapInstructions
  nameWithType: ModManager.MapMerger.MergeMapInstructions
  fullName: ModManager.MapMerger.MergeMapInstructions
  type: Struct
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>T:ModManager.MapMerger.MergeMapInstructions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public struct ModManager.MapMerger.MergeMapInstructions
    content.vb: Public Structure ModManager.MapMerger.MergeMapInstructions
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: Global.ModManager.MapMerger.MergeMapInstructions.applyOrder
  commentId: F:Global.ModManager.MapMerger.MergeMapInstructions.applyOrder
  id: applyOrder
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: applyOrder
  nameWithType: ModManager.MapMerger.MergeMapInstructions.applyOrder
  fullName: ModManager.MapMerger.MergeMapInstructions.applyOrder
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapInstructions.applyOrder</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public int applyOrder
    return:
      type: System.Int32
    content.vb: Public applyOrder As Integer
- uid: Global.ModManager.MapMerger.MergeMapInstructions.sourceFile
  commentId: F:Global.ModManager.MapMerger.MergeMapInstructions.sourceFile
  id: sourceFile
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: sourceFile
  nameWithType: ModManager.MapMerger.MergeMapInstructions.sourceFile
  fullName: ModManager.MapMerger.MergeMapInstructions.sourceFile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapInstructions.sourceFile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string sourceFile
    return:
      type: System.String
    content.vb: Public sourceFile As String
- uid: Global.ModManager.MapMerger.MergeMapInstructions.destinationFile
  commentId: F:Global.ModManager.MapMerger.MergeMapInstructions.destinationFile
  id: destinationFile
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: destinationFile
  nameWithType: ModManager.MapMerger.MergeMapInstructions.destinationFile
  fullName: ModManager.MapMerger.MergeMapInstructions.destinationFile
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapInstructions.destinationFile</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string destinationFile
    return:
      type: System.String
    content.vb: Public destinationFile As String
- uid: Global.ModManager.MapMerger.MergeMapInstructions.mapsToMerge
  commentId: F:Global.ModManager.MapMerger.MergeMapInstructions.mapsToMerge
  id: mapsToMerge
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: mapsToMerge
  nameWithType: ModManager.MapMerger.MergeMapInstructions.mapsToMerge
  fullName: ModManager.MapMerger.MergeMapInstructions.mapsToMerge
  type: Field
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>F:ModManager.MapMerger.MergeMapInstructions.mapsToMerge</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public List<ModManager.MapMerger.MergeMapData> mapsToMerge
    return:
      type: System.Collections.Generic.List{ModManager.MapMerger.MergeMapData}
    content.vb: Public mapsToMerge As List(Of ModManager.MapMerger.MergeMapData)
- uid: Global.ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)
  commentId: M:Global.ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.String)'
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: MergeMapInstructions(int, string, string)
  nameWithType: ModManager.MapMerger.MergeMapInstructions.MergeMapInstructions(int, string, string)
  fullName: ModManager.MapMerger.MergeMapInstructions.MergeMapInstructions(int, string, string)
  type: Constructor
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCAutoDocConstructor">
        <parameter>ModManager.MapMerger.MergeMapInstructions</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public MergeMapInstructions(int applyOrder, string sourceFile, string destinationFile)
    parameters:
    - id: applyOrder
      type: System.Int32
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>applyOrder</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: sourceFile
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>sourceFile</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)</parameter>
          </include>
        </markup>
    - id: destinationFile
      type: System.String
      description: >-
        <markup>
          <include item="SMCMissingParamTag">
            <parameter>param</parameter>
            <parameter>destinationFile</parameter>
            <parameter>M:ModManager.MapMerger.MergeMapInstructions.#ctor(System.Int32,System.String,System.String)</parameter>
          </include>
        </markup>
    content.vb: Public Sub New(applyOrder As Integer, sourceFile As String, destinationFile As String)
  overload: Global.ModManager.MapMerger.MergeMapInstructions.#ctor*
  nameWithType.vb: ModManager.MapMerger.MergeMapInstructions.New(Integer, String, String)
  fullName.vb: ModManager.MapMerger.MergeMapInstructions.New(Integer, String, String)
  name.vb: New(Integer, String, String)
- uid: Global.ModManager.MapMerger.MergeMapInstructions.fileName
  commentId: P:Global.ModManager.MapMerger.MergeMapInstructions.fileName
  id: fileName
  parent: Global.ModManager.MapMerger.MergeMapInstructions
  langs:
  - csharp
  - vb
  name: fileName
  nameWithType: ModManager.MapMerger.MergeMapInstructions.fileName
  fullName: ModManager.MapMerger.MergeMapInstructions.fileName
  type: Property
  assemblies:
  - Assembly-CSharp
  namespace: Global
  summary: >-
    <markup>
      <include item="SMCMissingTag">
        <parameter>summary</parameter>
        <parameter>P:ModManager.MapMerger.MergeMapInstructions.fileName</parameter>
      </include>
    </markup>
  example: []
  syntax:
    content: public string fileName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property fileName As String
  overload: Global.ModManager.MapMerger.MergeMapInstructions.fileName*
references:
- uid: Global
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{ModManager.MapMerger.MergeMapData}
  commentId: T:System.Collections.Generic.List{ModManager.MapMerger.MergeMapData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<ModManager.MapMerger.MergeMapData>
  nameWithType: List<ModManager.MapMerger.MergeMapData>
  fullName: System.Collections.Generic.List<ModManager.MapMerger.MergeMapData>
  nameWithType.vb: List(Of ModManager.MapMerger.MergeMapData)
  fullName.vb: System.Collections.Generic.List(Of ModManager.MapMerger.MergeMapData)
  name.vb: List(Of ModManager.MapMerger.MergeMapData)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapData
    name: MergeMapData
    isExternal: true
    href: ModManager.MapMerger.MergeMapData.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Global.ModManager
    name: ModManager
    isExternal: true
    href: ModManager.html
  - name: .
  - uid: Global.ModManager.MapMerger
    name: MapMerger
    isExternal: true
    href: ModManager.MapMerger.html
  - name: .
  - uid: Global.ModManager.MapMerger.MergeMapData
    name: MergeMapData
    isExternal: true
    href: ModManager.MapMerger.MergeMapData.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Global.ModManager.MapMerger.MergeMapInstructions.#ctor*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapInstructions.#ctor
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapInstructions.html#ModManager_MapMerger_MergeMapInstructions__ctor_System_Int32_System_String_System_String_
  name: MergeMapInstructions
  nameWithType: ModManager.MapMerger.MergeMapInstructions.MergeMapInstructions
  fullName: ModManager.MapMerger.MergeMapInstructions.MergeMapInstructions
  nameWithType.vb: ModManager.MapMerger.MergeMapInstructions.New
  fullName.vb: ModManager.MapMerger.MergeMapInstructions.New
  name.vb: New
- uid: Global.ModManager.MapMerger.MergeMapInstructions.fileName*
  commentId: Overload:Global.ModManager.MapMerger.MergeMapInstructions.fileName
  isExternal: true
  href: Global.ModManager.MapMerger.MergeMapInstructions.html#ModManager_MapMerger_MergeMapInstructions_fileName
  name: fileName
  nameWithType: ModManager.MapMerger.MergeMapInstructions.fileName
  fullName: ModManager.MapMerger.MergeMapInstructions.fileName
